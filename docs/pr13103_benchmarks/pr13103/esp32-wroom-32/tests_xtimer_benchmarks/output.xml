<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 10:13:08.194" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:08.765" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:08.773" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:09.745" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:08.763" endtime="20201112 10:13:09.745"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:09.748" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:09.746" endtime="20201112 10:13:09.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:08.762" endtime="20201112 10:13:09.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:09.751" endtime="20201112 10:13:09.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.750" endtime="20201112 10:13:09.935"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:09.948" endtime="20201112 10:13:09.973"></status>
</kw>
<msg timestamp="20201112 10:13:09.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:09.947" endtime="20201112 10:13:09.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:09.976" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:09.975" endtime="20201112 10:13:09.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:09.980" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:09.978" endtime="20201112 10:13:09.980"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:09.944" endtime="20201112 10:13:09.981"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:09.942" endtime="20201112 10:13:09.981"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.940" endtime="20201112 10:13:09.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:09.985" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:09.985" endtime="20201112 10:13:09.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.982" endtime="20201112 10:13:09.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.939" endtime="20201112 10:13:09.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.939" endtime="20201112 10:13:09.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:09.987" endtime="20201112 10:13:09.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.937" endtime="20201112 10:13:09.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:09.990" endtime="20201112 10:13:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.936" endtime="20201112 10:13:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:08.760" endtime="20201112 10:13:09.992"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:09.999" endtime="20201112 10:13:10.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.997" endtime="20201112 10:13:10.019"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:10.034" endtime="20201112 10:13:10.055"></status>
</kw>
<msg timestamp="20201112 10:13:10.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:10.032" endtime="20201112 10:13:10.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:10.058" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:10.056" endtime="20201112 10:13:10.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:10.061" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:10.059" endtime="20201112 10:13:10.061"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:10.029" endtime="20201112 10:13:10.062"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:10.027" endtime="20201112 10:13:10.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.025" endtime="20201112 10:13:10.062"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:10.066" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:10.065" endtime="20201112 10:13:10.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.063" endtime="20201112 10:13:10.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.024" endtime="20201112 10:13:10.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.024" endtime="20201112 10:13:10.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:10.068" endtime="20201112 10:13:10.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.021" endtime="20201112 10:13:10.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.020" endtime="20201112 10:13:10.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:09.996" endtime="20201112 10:13:10.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:10.078" endtime="20201112 10:13:10.091"></status>
</kw>
<msg timestamp="20201112 10:13:10.092" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:10.076" endtime="20201112 10:13:10.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:10.094" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:10.093" endtime="20201112 10:13:10.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:10.095" endtime="20201112 10:13:10.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.074" endtime="20201112 10:13:10.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.071" endtime="20201112 10:13:10.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:10.102" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 10:13:10.101" endtime="20201112 10:13:10.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:10.104" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 10:13:10.103" endtime="20201112 10:13:10.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.098" endtime="20201112 10:13:10.105"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:09.993" endtime="20201112 10:13:10.106" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:08.305" endtime="20201112 10:13:10.110"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:10.165" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:10.174" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:11.200" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:10.164" endtime="20201112 10:13:11.200"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.204" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:11.201" endtime="20201112 10:13:11.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.162" endtime="20201112 10:13:11.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:11.206" endtime="20201112 10:13:11.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.205" endtime="20201112 10:13:11.427"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.439" endtime="20201112 10:13:11.466"></status>
</kw>
<msg timestamp="20201112 10:13:11.467" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:11.437" endtime="20201112 10:13:11.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.469" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:11.468" endtime="20201112 10:13:11.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.472" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:11.470" endtime="20201112 10:13:11.473"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:11.435" endtime="20201112 10:13:11.473"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:11.433" endtime="20201112 10:13:11.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.432" endtime="20201112 10:13:11.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:11.478" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:11.477" endtime="20201112 10:13:11.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.475" endtime="20201112 10:13:11.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.431" endtime="20201112 10:13:11.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.430" endtime="20201112 10:13:11.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.480" endtime="20201112 10:13:11.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.429" endtime="20201112 10:13:11.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.482" endtime="20201112 10:13:11.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.427" endtime="20201112 10:13:11.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:10.161" endtime="20201112 10:13:11.485"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:11.491" endtime="20201112 10:13:11.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.489" endtime="20201112 10:13:11.511"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.524" endtime="20201112 10:13:11.546"></status>
</kw>
<msg timestamp="20201112 10:13:11.547" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:11.522" endtime="20201112 10:13:11.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:11.548" endtime="20201112 10:13:11.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.552" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:11.550" endtime="20201112 10:13:11.553"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:11.520" endtime="20201112 10:13:11.553"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:11.517" endtime="20201112 10:13:11.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.516" endtime="20201112 10:13:11.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:11.558" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:11.557" endtime="20201112 10:13:11.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.555" endtime="20201112 10:13:11.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.515" endtime="20201112 10:13:11.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.514" endtime="20201112 10:13:11.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.559" endtime="20201112 10:13:11.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.513" endtime="20201112 10:13:11.561"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.511" endtime="20201112 10:13:11.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.488" endtime="20201112 10:13:11.562"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 10:13:11.564" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.573" endtime="20201112 10:13:11.587"></status>
</kw>
<msg timestamp="20201112 10:13:11.588" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:11.571" endtime="20201112 10:13:11.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.590" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:11.589" endtime="20201112 10:13:11.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.592" endtime="20201112 10:13:11.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.568" endtime="20201112 10:13:11.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.566" endtime="20201112 10:13:11.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.601" endtime="20201112 10:13:11.869"></status>
</kw>
<msg timestamp="20201112 10:13:11.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071025931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:11.599" endtime="20201112 10:13:11.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071025931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:11.871" endtime="20201112 10:13:11.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.877" endtime="20201112 10:13:11.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.596" endtime="20201112 10:13:11.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.595" endtime="20201112 10:13:11.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.884" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:11.883" endtime="20201112 10:13:11.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.887" level="INFO">VALUE: [{'time': 0.071020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071025931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.071029917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.071033944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0270000000036665e-06, 'source_diff': 4.0270000000036665e-06}, {'time': 0.071037472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.071040639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.071046611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999992983e-06, 'source_diff': 5.971999999992983e-06}, {'time': 0.071051889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.07105425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3610000000062747e-06, 'source_diff': 2.3610000000062747e-06}, {'time': 0.071060486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236000000006681e-06, 'source_diff': 6.236000000006681e-06}, {'time': 0.071065222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999991303e-06, 'source_diff': 4.735999999991303e-06}, {'time': 0.071070278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.05600000000328e-06, 'source_diff': 5.05600000000328e-06}, {'time': 0.071076167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888999999995037e-06, 'source_diff': 5.888999999995037e-06}, {'time': 0.071079333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.071083167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.834000000008109e-06, 'source_diff': 3.834000000008109e-06}, {'time': 0.071089208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.071094875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.071097472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.596999999993077e-06, 'source_diff': 2.596999999993077e-06}, {'time': 0.071100764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.071106736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.972000000006861e-06, 'source_diff': 5.972000000006861e-06}, {'time': 0.071110903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.071115708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8049999999966175e-06, 'source_diff': 4.8049999999966175e-06}, {'time': 0.071118097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3890000000054146e-06, 'source_diff': 2.3890000000054146e-06}, {'time': 0.071123153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999989402e-06, 'source_diff': 5.055999999989402e-06}, {'time': 0.071127861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000006041e-06, 'source_diff': 4.708000000006041e-06}, {'time': 0.071130653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.071133125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4720000000033604e-06, 'source_diff': 2.4720000000033604e-06}, {'time': 0.071137139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.013999999996631e-06, 'source_diff': 4.013999999996631e-06}, {'time': 0.071141333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.071147611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.071152833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.071155694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.861000000006775e-06, 'source_diff': 2.861000000006775e-06}, {'time': 0.071161542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847999999988862e-06, 'source_diff': 5.847999999988862e-06}, {'time': 0.071164028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.486000000009869e-06, 'source_diff': 2.486000000009869e-06}, {'time': 0.071169875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8469999999893885e-06, 'source_diff': 5.8469999999893885e-06}, {'time': 0.071175208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.333000000010135e-06, 'source_diff': 5.333000000010135e-06}, {'time': 0.071181264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.055999999990402e-06, 'source_diff': 6.055999999990402e-06}, {'time': 0.071184792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.071190583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791000000004987e-06, 'source_diff': 5.791000000004987e-06}, {'time': 0.071193611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.071198986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.071202889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.071206361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4719999999904827e-06, 'source_diff': 3.4719999999904827e-06}, {'time': 0.071211264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.071217417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000008735e-06, 'source_diff': 6.153000000008735e-06}, {'time': 0.071223097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.679999999994023e-06, 'source_diff': 5.679999999994023e-06}, {'time': 0.071227833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.071231667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.833999999994231e-06, 'source_diff': 3.833999999994231e-06}, {'time': 0.071235708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0409999999962976e-06, 'source_diff': 4.0409999999962976e-06}, {'time': 0.07124, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:11.885" endtime="20201112 10:13:11.888"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.880" endtime="20201112 10:13:11.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:11.902" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:11.889" endtime="20201112 10:13:11.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.906" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:11.905" endtime="20201112 10:13:11.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.910" level="INFO">VALUE: {'eventsourcetime': [0.071020528, 0.071025931, 0.071029917, 0.071033944, 0.071037472, 0.071040639, 0.071046611, 0.071051889, 0.07105425, 0.071060486, 0.071065222, 0.071070278, 0.071076167, 0.071079333, 0.071083167, 0.071089208, 0.071094875, 0.071097472, 0.071100764, 0.071106736, 0.071110903, 0.071115708, 0.071118097, 0.071123153, 0.071127861, 0.071130653, 0.071133125, 0.071137139, 0.071141333, 0.071147611, 0.071152833, 0.071155694, 0.071161542, 0.071164028, 0.071169875, 0.071175208, 0.071181264, 0.071184792, 0.071190583, 0.071193611, 0.071198986, 0.071202889, 0.071206361, 0.071211264, 0.071217417, 0.071223097, 0.071227833, 0.071231667, 0.071235708, 0.07124], 'diff': [0, 5.403000000001046e-06, 3.9859999999974915e-06, 4.0270000000036665e-06, 3.52800000000264e-06, 3.1669999999983656e-06, 5.971999999992983e-06, 5.277999999997451e-06, 2.3610000000062747e-06, 6.236000000006681e-06, 4.735999999991303e-06, 5.05600000000328e-06, 5.888999999995037e-06, 3.165999999998892e-06, 3.834000000008109e-06, 6.040999999998298e-06, 5.667000000000866e-06, 2.596999999993077e-06, 3.29200000000196e-06, 5.972000000006861e-06, 4.166999999999366e-06, 4.8049999999966175e-06, 2.3890000000054146e-06, 5.055999999989402e-06, 4.708000000006041e-06, 2.79200000000146e-06, 2.4720000000033604e-06, 4.013999999996631e-06, 4.193999999999032e-06, 6.2779999999984515e-06, 5.221999999999172e-06, 2.861000000006775e-06, 5.847999999988862e-06, 2.486000000009869e-06, 5.8469999999893885e-06, 5.333000000010135e-06, 6.055999999990402e-06, 3.52800000000264e-06, 5.791000000004987e-06, 3.02800000000214e-06, 5.375000000001906e-06, 3.902999999999546e-06, 3.4719999999904827e-06, 4.903000000000546e-06, 6.153000000008735e-06, 5.679999999994023e-06, 4.7360000000051805e-06, 3.833999999994231e-06, 4.0409999999962976e-06, 4.29200000000296e-06], 'source_diff': [0, 5.403000000001046e-06, 3.9859999999974915e-06, 4.0270000000036665e-06, 3.52800000000264e-06, 3.1669999999983656e-06, 5.971999999992983e-06, 5.277999999997451e-06, 2.3610000000062747e-06, 6.236000000006681e-06, 4.735999999991303e-06, 5.05600000000328e-06, 5.888999999995037e-06, 3.165999999998892e-06, 3.834000000008109e-06, 6.040999999998298e-06, 5.667000000000866e-06, 2.596999999993077e-06, 3.29200000000196e-06, 5.972000000006861e-06, 4.166999999999366e-06, 4.8049999999966175e-06, 2.3890000000054146e-06, 5.055999999989402e-06, 4.708000000006041e-06, 2.79200000000146e-06, 2.4720000000033604e-06, 4.013999999996631e-06, 4.193999999999032e-06, 6.2779999999984515e-06, 5.221999999999172e-06, 2.861000000006775e-06, 5.847999999988862e-06, 2.486000000009869e-06, 5.8469999999893885e-06, 5.333000000010135e-06, 6.055999999990402e-06, 3.52800000000264e-06, 5.791000000004987e-06, 3.02800000000214e-06, 5.375000000001906e-06, 3.902999999999546e-06, 3.4719999999904827e-06, 4.903000000000546e-06, 6.153000000008735e-06, 5.679999999994023e-06, 4.7360000000051805e-06, 3.833999999994231e-06, 4.0409999999962976e-06, 4.29200000000296e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:11.907" endtime="20201112 10:13:11.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.903" endtime="20201112 10:13:11.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:11.914" level="INFO">${RESULT} = [{'time': 0.071025931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.071033944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:11.911" endtime="20201112 10:13:11.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:11.922" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:11.915" endtime="20201112 10:13:11.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.926" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:11.925" endtime="20201112 10:13:11.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.928" level="INFO">VALUE: [5.403000000001046e-06, 4.0270000000036665e-06, 3.1669999999983656e-06, 5.277999999997451e-06, 6.236000000006681e-06, 5.05600000000328e-06, 3.165999999998892e-06, 6.040999999998298e-06, 2.596999999993077e-06, 5.972000000006861e-06, 4.8049999999966175e-06, 5.055999999989402e-06, 2.79200000000146e-06, 4.013999999996631e-06, 6.2779999999984515e-06, 2.861000000006775e-06, 2.486000000009869e-06, 5.333000000010135e-06, 3.52800000000264e-06, 3.02800000000214e-06, 3.902999999999546e-06, 4.903000000000546e-06, 5.679999999994023e-06, 3.833999999994231e-06, 4.29200000000296e-06]</msg>
<status status="PASS" starttime="20201112 10:13:11.927" endtime="20201112 10:13:11.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.923" endtime="20201112 10:13:11.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.931" endtime="20201112 10:13:11.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:11.935" endtime="20201112 10:13:11.954"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.933" endtime="20201112 10:13:11.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.930" endtime="20201112 10:13:11.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.565" endtime="20201112 10:13:11.956"></status>
</kw>
<msg timestamp="20201112 10:13:11.956" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.964" endtime="20201112 10:13:11.978"></status>
</kw>
<msg timestamp="20201112 10:13:11.978" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:11.962" endtime="20201112 10:13:11.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:11.981" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:11.979" endtime="20201112 10:13:11.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.982" endtime="20201112 10:13:11.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.960" endtime="20201112 10:13:11.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.958" endtime="20201112 10:13:11.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:11.990" endtime="20201112 10:13:12.260"></status>
</kw>
<msg timestamp="20201112 10:13:12.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017792347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:11.989" endtime="20201112 10:13:12.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017792347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:12.263" endtime="20201112 10:13:12.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.269" endtime="20201112 10:13:12.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.986" endtime="20201112 10:13:12.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.985" endtime="20201112 10:13:12.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.275" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:12.274" endtime="20201112 10:13:12.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.279" level="INFO">VALUE: [{'time': 0.017792347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017797583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017803389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.017805833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017811306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.017814472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1660000000023614e-06, 'source_diff': 3.1660000000023614e-06}, {'time': 0.017816889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.017820944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.054999999999337e-06, 'source_diff': 4.054999999999337e-06}, {'time': 0.017823597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.01782725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017833417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017836444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.017841056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.017846333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.017852208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.017857667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.017860764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017866, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017869736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017872944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.017877556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61199999999759e-06, 'source_diff': 4.61199999999759e-06}, {'time': 0.017882958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.017885639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.017891347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.017893819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017900167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.34800000000324e-06, 'source_diff': 6.34800000000324e-06}, {'time': 0.017905417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.017907875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017910597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017916833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017919417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5839999999999197e-06, 'source_diff': 2.5839999999999197e-06}, {'time': 0.017922958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.017928625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.017933153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017935528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.017941014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.017943889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.017948931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017955167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017961208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.017966111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017970069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.017972708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.017977736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017982583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017987889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.017990653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017996625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017999458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.018005389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:12.276" endtime="20201112 10:13:12.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.272" endtime="20201112 10:13:12.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:12.294" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:12.281" endtime="20201112 10:13:12.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.297" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:12.296" endtime="20201112 10:13:12.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.301" level="INFO">VALUE: {'eventsourcetime': [0.017792347, 0.017797583, 0.017803389, 0.017805833, 0.017811306, 0.017814472, 0.017816889, 0.017820944, 0.017823597, 0.01782725, 0.017833417, 0.017836444, 0.017841056, 0.017846333, 0.017852208, 0.017857667, 0.017860764, 0.017866, 0.017869736, 0.017872944, 0.017877556, 0.017882958, 0.017885639, 0.017891347, 0.017893819, 0.017900167, 0.017905417, 0.017907875, 0.017910597, 0.017916833, 0.017919417, 0.017922958, 0.017928625, 0.017933153, 0.017935528, 0.017941014, 0.017943889, 0.017948931, 0.017955167, 0.017961208, 0.017966111, 0.017970069, 0.017972708, 0.017977736, 0.017982583, 0.017987889, 0.017990653, 0.017996625, 0.017999458, 0.018005389], 'diff': [0, 5.235999999998742e-06, 5.806000000000561e-06, 2.444000000000751e-06, 5.472999999998895e-06, 3.1660000000023614e-06, 2.4169999999976155e-06, 4.054999999999337e-06, 2.653000000001765e-06, 3.6529999999992957e-06, 6.167000000001366e-06, 3.026999999999197e-06, 4.61200000000106e-06, 5.276999999997978e-06, 5.875000000002406e-06, 5.4589999999993255e-06, 3.097000000000516e-06, 5.235999999998742e-06, 3.736000000000711e-06, 3.208000000001071e-06, 4.61199999999759e-06, 5.402000000001572e-06, 2.6809999999974354e-06, 5.708000000000102e-06, 2.471999999999891e-06, 6.34800000000324e-06, 5.2499999999983116e-06, 2.458000000000321e-06, 2.722000000000141e-06, 6.235999999999742e-06, 2.5839999999999197e-06, 3.540999999999267e-06, 5.667000000000866e-06, 4.528000000000171e-06, 2.3749999999989058e-06, 5.486000000002461e-06, 2.874999999999406e-06, 5.042000000000241e-06, 6.235999999999742e-06, 6.040999999998298e-06, 4.903000000000546e-06, 3.958000000001821e-06, 2.6389999999987257e-06, 5.028000000000671e-06, 4.846999999998797e-06, 5.306000000000061e-06, 2.7639999999988507e-06, 5.971999999999922e-06, 2.833000000000696e-06, 5.931000000000686e-06], 'source_diff': [0, 5.235999999998742e-06, 5.806000000000561e-06, 2.444000000000751e-06, 5.472999999998895e-06, 3.1660000000023614e-06, 2.4169999999976155e-06, 4.054999999999337e-06, 2.653000000001765e-06, 3.6529999999992957e-06, 6.167000000001366e-06, 3.026999999999197e-06, 4.61200000000106e-06, 5.276999999997978e-06, 5.875000000002406e-06, 5.4589999999993255e-06, 3.097000000000516e-06, 5.235999999998742e-06, 3.736000000000711e-06, 3.208000000001071e-06, 4.61199999999759e-06, 5.402000000001572e-06, 2.6809999999974354e-06, 5.708000000000102e-06, 2.471999999999891e-06, 6.34800000000324e-06, 5.2499999999983116e-06, 2.458000000000321e-06, 2.722000000000141e-06, 6.235999999999742e-06, 2.5839999999999197e-06, 3.540999999999267e-06, 5.667000000000866e-06, 4.528000000000171e-06, 2.3749999999989058e-06, 5.486000000002461e-06, 2.874999999999406e-06, 5.042000000000241e-06, 6.235999999999742e-06, 6.040999999998298e-06, 4.903000000000546e-06, 3.958000000001821e-06, 2.6389999999987257e-06, 5.028000000000671e-06, 4.846999999998797e-06, 5.306000000000061e-06, 2.7639999999988507e-06, 5.971999999999922e-06, 2.833000000000696e-06, 5.931000000000686e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:12.299" endtime="20201112 10:13:12.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.294" endtime="20201112 10:13:12.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:12.305" level="INFO">${RESULT} = [{'time': 0.017797583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.017805833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:12.302" endtime="20201112 10:13:12.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:12.314" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:12.306" endtime="20201112 10:13:12.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.318" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:12.317" endtime="20201112 10:13:12.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.321" level="INFO">VALUE: [5.235999999998742e-06, 2.444000000000751e-06, 3.1660000000023614e-06, 4.054999999999337e-06, 3.6529999999992957e-06, 3.026999999999197e-06, 5.276999999997978e-06, 5.4589999999993255e-06, 5.235999999998742e-06, 3.208000000001071e-06, 5.402000000001572e-06, 5.708000000000102e-06, 6.34800000000324e-06, 2.458000000000321e-06, 6.235999999999742e-06, 3.540999999999267e-06, 4.528000000000171e-06, 5.486000000002461e-06, 5.042000000000241e-06, 6.040999999998298e-06, 3.958000000001821e-06, 5.028000000000671e-06, 5.306000000000061e-06, 5.971999999999922e-06, 5.931000000000686e-06]</msg>
<status status="PASS" starttime="20201112 10:13:12.319" endtime="20201112 10:13:12.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.315" endtime="20201112 10:13:12.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.324" endtime="20201112 10:13:12.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:12.328" endtime="20201112 10:13:12.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.326" endtime="20201112 10:13:12.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.322" endtime="20201112 10:13:12.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.956" endtime="20201112 10:13:12.348"></status>
</kw>
<msg timestamp="20201112 10:13:12.349" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.356" endtime="20201112 10:13:12.370"></status>
</kw>
<msg timestamp="20201112 10:13:12.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:12.354" endtime="20201112 10:13:12.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:12.372" endtime="20201112 10:13:12.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.374" endtime="20201112 10:13:12.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.352" endtime="20201112 10:13:12.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.350" endtime="20201112 10:13:12.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.384" endtime="20201112 10:13:12.648"></status>
</kw>
<msg timestamp="20201112 10:13:12.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017310611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017315653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:12.383" endtime="20201112 10:13:12.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017310611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017315653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:12.651" endtime="20201112 10:13:12.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.656" endtime="20201112 10:13:12.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.379" endtime="20201112 10:13:12.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.378" endtime="20201112 10:13:12.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.663" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:12.662" endtime="20201112 10:13:12.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.666" level="INFO">VALUE: [{'time': 0.017310611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017315653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017319681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017323972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017328708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017334208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.017337639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4309999999981855e-06, 'source_diff': 3.4309999999981855e-06}, {'time': 0.017343069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.017345403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3339999999996697e-06, 'source_diff': 2.3339999999996697e-06}, {'time': 0.017351639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017354736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017358764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017364569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000001087e-06, 'source_diff': 5.805000000001087e-06}, {'time': 0.017368736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017371944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.017377361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.017380514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017385569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017388347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.017393472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.017398667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.017403597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.017407972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017413153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.017418819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.017424861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017429361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.017435319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017439111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.017443833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017447556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.017453458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.902000000002072e-06, 'source_diff': 5.902000000002072e-06}, {'time': 0.017458069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017460611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.017463028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.017466486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017471167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.017477375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.017482722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017486833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017491542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7089999999985754e-06, 'source_diff': 4.7089999999985754e-06}, {'time': 0.017496278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017500472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.017506292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.017510583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017513764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.181000000001405e-06, 'source_diff': 3.181000000001405e-06}, {'time': 0.017517222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.017519958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017526056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.017530083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.026999999996728e-06, 'source_diff': 4.026999999996728e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:12.664" endtime="20201112 10:13:12.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.660" endtime="20201112 10:13:12.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:12.681" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:12.669" endtime="20201112 10:13:12.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.685" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:12.684" endtime="20201112 10:13:12.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.688" level="INFO">VALUE: {'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.017310611, 0.017315653, 0.017319681, 0.017323972, 0.017328708, 0.017334208, 0.017337639, 0.017343069, 0.017345403, 0.017351639, 0.017354736, 0.017358764, 0.017364569, 0.017368736, 0.017371944, 0.017377361, 0.017380514, 0.017385569, 0.017388347, 0.017393472, 0.017398667, 0.017403597, 0.017407972, 0.017413153, 0.017418819, 0.017424861, 0.017429361, 0.017435319, 0.017439111, 0.017443833, 0.017447556, 0.017453458, 0.017458069, 0.017460611, 0.017463028, 0.017466486, 0.017471167, 0.017477375, 0.017482722, 0.017486833, 0.017491542, 0.017496278, 0.017500472, 0.017506292, 0.017510583, 0.017513764, 0.017517222, 0.017519958, 0.017526056, 0.017530083], 'diff': [0, 5.042000000000241e-06, 4.027999999999671e-06, 4.291000000000017e-06, 4.736000000001711e-06, 5.499999999998562e-06, 3.4309999999981855e-06, 5.430000000000712e-06, 2.3339999999996697e-06, 6.235999999999742e-06, 3.097000000000516e-06, 4.027999999999671e-06, 5.805000000001087e-06, 4.166999999999366e-06, 3.208000000001071e-06, 5.417000000000616e-06, 3.1529999999987957e-06, 5.055000000000337e-06, 2.7779999999984206e-06, 5.125000000001656e-06, 5.1949999999995056e-06, 4.930000000000212e-06, 4.375000000000906e-06, 5.180999999999936e-06, 5.665999999997923e-06, 6.042000000001241e-06, 4.500000000001031e-06, 5.958000000000352e-06, 3.7919999999989906e-06, 4.721999999998672e-06, 3.7230000000006147e-06, 5.902000000002072e-06, 4.610999999998117e-06, 2.54200000000121e-06, 2.4169999999976155e-06, 3.458000000001321e-06, 4.680999999999436e-06, 6.208000000000602e-06, 5.346999999999297e-06, 4.111000000001086e-06, 4.7089999999985754e-06, 4.736000000001711e-06, 4.193999999999032e-06, 5.820000000000131e-06, 4.291000000000017e-06, 3.181000000001405e-06, 3.4579999999978517e-06, 2.735999999999711e-06, 6.09800000000299e-06, 4.026999999996728e-06], 'source_diff': [0, 5.042000000000241e-06, 4.027999999999671e-06, 4.291000000000017e-06, 4.736000000001711e-06, 5.499999999998562e-06, 3.4309999999981855e-06, 5.430000000000712e-06, 2.3339999999996697e-06, 6.235999999999742e-06, 3.097000000000516e-06, 4.027999999999671e-06, 5.805000000001087e-06, 4.166999999999366e-06, 3.208000000001071e-06, 5.417000000000616e-06, 3.1529999999987957e-06, 5.055000000000337e-06, 2.7779999999984206e-06, 5.125000000001656e-06, 5.1949999999995056e-06, 4.930000000000212e-06, 4.375000000000906e-06, 5.180999999999936e-06, 5.665999999997923e-06, 6.042000000001241e-06, 4.500000000001031e-06, 5.958000000000352e-06, 3.7919999999989906e-06, 4.721999999998672e-06, 3.7230000000006147e-06, 5.902000000002072e-06, 4.610999999998117e-06, 2.54200000000121e-06, 2.4169999999976155e-06, 3.458000000001321e-06, 4.680999999999436e-06, 6.208000000000602e-06, 5.346999999999297e-06, 4.111000000001086e-06, 4.7089999999985754e-06, 4.736000000001711e-06, 4.193999999999032e-06, 5.820000000000131e-06, 4.291000000000017e-06, 3.181000000001405e-06, 3.4579999999978517e-06, 2.735999999999711e-06, 6.09800000000299e-06, 4.026999999996728e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:12.686" endtime="20201112 10:13:12.689"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.682" endtime="20201112 10:13:12.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:12.693" level="INFO">${RESULT} = [{'time': 0.017315653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017323972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:12.690" endtime="20201112 10:13:12.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:12.701" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:12.694" endtime="20201112 10:13:12.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.705" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:12.704" endtime="20201112 10:13:12.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.707" level="INFO">VALUE: [5.042000000000241e-06, 4.291000000000017e-06, 5.499999999998562e-06, 5.430000000000712e-06, 6.235999999999742e-06, 4.027999999999671e-06, 4.166999999999366e-06, 5.417000000000616e-06, 5.055000000000337e-06, 5.125000000001656e-06, 4.930000000000212e-06, 5.180999999999936e-06, 6.042000000001241e-06, 5.958000000000352e-06, 4.721999999998672e-06, 5.902000000002072e-06, 2.54200000000121e-06, 3.458000000001321e-06, 6.208000000000602e-06, 4.111000000001086e-06, 4.736000000001711e-06, 5.820000000000131e-06, 3.181000000001405e-06, 2.735999999999711e-06, 4.026999999996728e-06]</msg>
<status status="PASS" starttime="20201112 10:13:12.706" endtime="20201112 10:13:12.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.701" endtime="20201112 10:13:12.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.710" endtime="20201112 10:13:12.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:12.714" endtime="20201112 10:13:12.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.712" endtime="20201112 10:13:12.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.709" endtime="20201112 10:13:12.734"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.349" endtime="20201112 10:13:12.734"></status>
</kw>
<msg timestamp="20201112 10:13:12.734" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.742" endtime="20201112 10:13:12.757"></status>
</kw>
<msg timestamp="20201112 10:13:12.757" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:12.741" endtime="20201112 10:13:12.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:12.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:12.759" endtime="20201112 10:13:12.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.761" endtime="20201112 10:13:12.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.738" endtime="20201112 10:13:12.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.736" endtime="20201112 10:13:12.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:12.770" endtime="20201112 10:13:13.034"></status>
</kw>
<msg timestamp="20201112 10:13:13.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018203931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018208264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:12.768" endtime="20201112 10:13:13.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018203931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018208264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:13.037" endtime="20201112 10:13:13.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.042" endtime="20201112 10:13:13.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.766" endtime="20201112 10:13:13.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.764" endtime="20201112 10:13:13.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.049" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:13.048" endtime="20201112 10:13:13.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.052" level="INFO">VALUE: [{'time': 0.018203931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018208264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.0182115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018217667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018221139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018226681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018232653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018236944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018243153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.018246389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2359999999967415e-06, 'source_diff': 3.2359999999967415e-06}, {'time': 0.018250792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018253583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7910000000019863e-06, 'source_diff': 2.7910000000019863e-06}, {'time': 0.018259875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.018264597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.018267444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018272486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018275403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018280819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.018286986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018291819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018294861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.018300833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018305889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}, {'time': 0.018311722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018317083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.01832125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018323972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018326444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018330431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.987000000000435e-06, 'source_diff': 3.987000000000435e-06}, {'time': 0.018334097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.018337667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5699999999978804e-06, 'source_diff': 3.5699999999978804e-06}, {'time': 0.01834375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018348653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018351111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018354083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018357194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.018362847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018368764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.018373042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018375903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018381, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018385681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018391194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.018394181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9869999999994346e-06, 'source_diff': 2.9869999999994346e-06}, {'time': 0.018398278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018403875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018406792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018412278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018416875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018419403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:13.050" endtime="20201112 10:13:13.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.046" endtime="20201112 10:13:13.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:13.067" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:13.055" endtime="20201112 10:13:13.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.071" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:13.070" endtime="20201112 10:13:13.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.074" level="INFO">VALUE: {'eventsourcetime': [0.018203931, 0.018208264, 0.0182115, 0.018217667, 0.018221139, 0.018226681, 0.018232653, 0.018236944, 0.018243153, 0.018246389, 0.018250792, 0.018253583, 0.018259875, 0.018264597, 0.018267444, 0.018272486, 0.018275403, 0.018280819, 0.018286986, 0.018291819, 0.018294861, 0.018300833, 0.018305889, 0.018311722, 0.018317083, 0.01832125, 0.018323972, 0.018326444, 0.018330431, 0.018334097, 0.018337667, 0.01834375, 0.018348653, 0.018351111, 0.018354083, 0.018357194, 0.018362847, 0.018368764, 0.018373042, 0.018375903, 0.018381, 0.018385681, 0.018391194, 0.018394181, 0.018398278, 0.018403875, 0.018406792, 0.018412278, 0.018416875, 0.018419403], 'diff': [0, 4.332999999998727e-06, 3.236000000000211e-06, 6.167000000001366e-06, 3.472000000000891e-06, 5.542000000000741e-06, 5.971999999999922e-06, 4.291000000000017e-06, 6.2090000000000756e-06, 3.2359999999967415e-06, 4.403000000000046e-06, 2.7910000000019863e-06, 6.291999999998021e-06, 4.722000000002141e-06, 2.847000000000266e-06, 5.042000000000241e-06, 2.9169999999981155e-06, 5.416000000001142e-06, 6.167000000001366e-06, 4.832999999999227e-06, 3.0419999999982406e-06, 5.971999999999922e-06, 5.055999999999811e-06, 5.833000000000227e-06, 5.361000000002336e-06, 4.166999999999366e-06, 2.722000000000141e-06, 2.471999999999891e-06, 3.987000000000435e-06, 3.665999999999392e-06, 3.5699999999978804e-06, 6.083000000000477e-06, 4.903000000000546e-06, 2.458000000000321e-06, 2.972000000000391e-06, 3.111000000000086e-06, 5.653000000001296e-06, 5.916999999997646e-06, 4.277999999999921e-06, 2.860999999999836e-06, 5.097000000002516e-06, 4.680999999999436e-06, 5.512999999998658e-06, 2.9869999999994346e-06, 4.097000000001516e-06, 5.596999999999547e-06, 2.917000000001585e-06, 5.485999999998992e-06, 4.596999999998547e-06, 2.52800000000164e-06], 'source_diff': [0, 4.332999999998727e-06, 3.236000000000211e-06, 6.167000000001366e-06, 3.472000000000891e-06, 5.542000000000741e-06, 5.971999999999922e-06, 4.291000000000017e-06, 6.2090000000000756e-06, 3.2359999999967415e-06, 4.403000000000046e-06, 2.7910000000019863e-06, 6.291999999998021e-06, 4.722000000002141e-06, 2.847000000000266e-06, 5.042000000000241e-06, 2.9169999999981155e-06, 5.416000000001142e-06, 6.167000000001366e-06, 4.832999999999227e-06, 3.0419999999982406e-06, 5.971999999999922e-06, 5.055999999999811e-06, 5.833000000000227e-06, 5.361000000002336e-06, 4.166999999999366e-06, 2.722000000000141e-06, 2.471999999999891e-06, 3.987000000000435e-06, 3.665999999999392e-06, 3.5699999999978804e-06, 6.083000000000477e-06, 4.903000000000546e-06, 2.458000000000321e-06, 2.972000000000391e-06, 3.111000000000086e-06, 5.653000000001296e-06, 5.916999999997646e-06, 4.277999999999921e-06, 2.860999999999836e-06, 5.097000000002516e-06, 4.680999999999436e-06, 5.512999999998658e-06, 2.9869999999994346e-06, 4.097000000001516e-06, 5.596999999999547e-06, 2.917000000001585e-06, 5.485999999998992e-06, 4.596999999998547e-06, 2.52800000000164e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:13.072" endtime="20201112 10:13:13.075"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.068" endtime="20201112 10:13:13.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:13.079" level="INFO">${RESULT} = [{'time': 0.018208264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018217667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:13.076" endtime="20201112 10:13:13.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:13.087" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:13.080" endtime="20201112 10:13:13.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.091" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:13.090" endtime="20201112 10:13:13.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.093" level="INFO">VALUE: [4.332999999998727e-06, 6.167000000001366e-06, 5.542000000000741e-06, 4.291000000000017e-06, 3.2359999999967415e-06, 2.7910000000019863e-06, 4.722000000002141e-06, 5.042000000000241e-06, 5.416000000001142e-06, 4.832999999999227e-06, 5.971999999999922e-06, 5.833000000000227e-06, 4.166999999999366e-06, 2.471999999999891e-06, 3.665999999999392e-06, 6.083000000000477e-06, 2.458000000000321e-06, 3.111000000000086e-06, 5.916999999997646e-06, 2.860999999999836e-06, 4.680999999999436e-06, 2.9869999999994346e-06, 5.596999999999547e-06, 5.485999999998992e-06, 2.52800000000164e-06]</msg>
<status status="PASS" starttime="20201112 10:13:13.092" endtime="20201112 10:13:13.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.088" endtime="20201112 10:13:13.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.097" endtime="20201112 10:13:13.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:13.100" endtime="20201112 10:13:13.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.098" endtime="20201112 10:13:13.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.095" endtime="20201112 10:13:13.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:12.735" endtime="20201112 10:13:13.121"></status>
</kw>
<msg timestamp="20201112 10:13:13.121" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.129" endtime="20201112 10:13:13.143"></status>
</kw>
<msg timestamp="20201112 10:13:13.144" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:13.128" endtime="20201112 10:13:13.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.146" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:13.145" endtime="20201112 10:13:13.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.147" endtime="20201112 10:13:13.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.124" endtime="20201112 10:13:13.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.123" endtime="20201112 10:13:13.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.156" endtime="20201112 10:13:13.421"></status>
</kw>
<msg timestamp="20201112 10:13:13.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018385764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018389083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:13.155" endtime="20201112 10:13:13.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018385764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018389083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:13.424" endtime="20201112 10:13:13.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.429" endtime="20201112 10:13:13.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.152" endtime="20201112 10:13:13.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.150" endtime="20201112 10:13:13.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.436" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:13.435" endtime="20201112 10:13:13.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.439" level="INFO">VALUE: [{'time': 0.018385764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018389083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.018393125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018398111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018402194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.018408181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.018413042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018416069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.018418486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.018423944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018426681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7369999999991845e-06, 'source_diff': 2.7369999999991845e-06}, {'time': 0.018432083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.401999999998103e-06, 'source_diff': 5.401999999998103e-06}, {'time': 0.018437125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018442514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.018446278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018449986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018453528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018458319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018462764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.018468389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018471431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.018476611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.01847975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.018483542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018486889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018489556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018495042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018499333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018503486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018508958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018512181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018517917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.018522319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.018525667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018530458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018536181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.018542431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.018545944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.513000000000127e-06, 'source_diff': 3.513000000000127e-06}, {'time': 0.018550736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018553403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.018556375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018559472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018563514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018569236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018572903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.018578694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.018583681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.987000000001435e-06, 'source_diff': 4.987000000001435e-06}, {'time': 0.018586264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.018590694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.018595347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:13.437" endtime="20201112 10:13:13.440"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.432" endtime="20201112 10:13:13.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:13.455" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:13.442" endtime="20201112 10:13:13.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.459" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:13.457" endtime="20201112 10:13:13.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.462" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcetime': [0.018385764, 0.018389083, 0.018393125, 0.018398111, 0.018402194, 0.018408181, 0.018413042, 0.018416069, 0.018418486, 0.018423944, 0.018426681, 0.018432083, 0.018437125, 0.018442514, 0.018446278, 0.018449986, 0.018453528, 0.018458319, 0.018462764, 0.018468389, 0.018471431, 0.018476611, 0.01847975, 0.018483542, 0.018486889, 0.018489556, 0.018495042, 0.018499333, 0.018503486, 0.018508958, 0.018512181, 0.018517917, 0.018522319, 0.018525667, 0.018530458, 0.018536181, 0.018542431, 0.018545944, 0.018550736, 0.018553403, 0.018556375, 0.018559472, 0.018563514, 0.018569236, 0.018572903, 0.018578694, 0.018583681, 0.018586264, 0.018590694, 0.018595347], 'diff': [0, 3.319000000001626e-06, 4.041999999999241e-06, 4.986000000001961e-06, 4.082999999998477e-06, 5.986999999998965e-06, 4.861000000001836e-06, 3.026999999999197e-06, 2.417000000001085e-06, 5.457999999999852e-06, 2.7369999999991845e-06, 5.401999999998103e-06, 5.042000000000241e-06, 5.389000000001476e-06, 3.763999999999851e-06, 3.708000000001571e-06, 3.5419999999987406e-06, 4.791000000000517e-06, 4.4449999999987555e-06, 5.625000000002156e-06, 3.0419999999982406e-06, 5.180000000000462e-06, 3.1389999999992257e-06, 3.7919999999989906e-06, 3.347000000000766e-06, 2.667000000001335e-06, 5.485999999998992e-06, 4.291000000000017e-06, 4.152999999999796e-06, 5.471999999999422e-06, 3.2230000000001147e-06, 5.735999999999242e-06, 4.402000000000572e-06, 3.3480000000002397e-06, 4.791000000000517e-06, 5.7229999999991454e-06, 6.250000000002781e-06, 3.513000000000127e-06, 4.791999999999991e-06, 2.6669999999978655e-06, 2.972000000000391e-06, 3.097000000000516e-06, 4.041999999999241e-06, 5.721999999999672e-06, 3.667000000002335e-06, 5.790999999998048e-06, 4.987000000001435e-06, 2.583000000000446e-06, 4.429999999999712e-06, 4.653000000000296e-06], 'source_diff': [0, 3.319000000001626e-06, 4.041999999999241e-06, 4.986000000001961e-06, 4.082999999998477e-06, 5.986999999998965e-06, 4.861000000001836e-06, 3.026999999999197e-06, 2.417000000001085e-06, 5.457999999999852e-06, 2.7369999999991845e-06, 5.401999999998103e-06, 5.042000000000241e-06, 5.389000000001476e-06, 3.763999999999851e-06, 3.708000000001571e-06, 3.5419999999987406e-06, 4.791000000000517e-06, 4.4449999999987555e-06, 5.625000000002156e-06, 3.0419999999982406e-06, 5.180000000000462e-06, 3.1389999999992257e-06, 3.7919999999989906e-06, 3.347000000000766e-06, 2.667000000001335e-06, 5.485999999998992e-06, 4.291000000000017e-06, 4.152999999999796e-06, 5.471999999999422e-06, 3.2230000000001147e-06, 5.735999999999242e-06, 4.402000000000572e-06, 3.3480000000002397e-06, 4.791000000000517e-06, 5.7229999999991454e-06, 6.250000000002781e-06, 3.513000000000127e-06, 4.791999999999991e-06, 2.6669999999978655e-06, 2.972000000000391e-06, 3.097000000000516e-06, 4.041999999999241e-06, 5.721999999999672e-06, 3.667000000002335e-06, 5.790999999998048e-06, 4.987000000001435e-06, 2.583000000000446e-06, 4.429999999999712e-06, 4.653000000000296e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:13.460" endtime="20201112 10:13:13.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.456" endtime="20201112 10:13:13.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:13.467" level="INFO">${RESULT} = [{'time': 0.018389083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.319000000001626e-06, 'source_diff': 3.319000000001626e-06}, {'time': 0.018398111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:13.464" endtime="20201112 10:13:13.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:13.475" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:13.468" endtime="20201112 10:13:13.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.480" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:13.479" endtime="20201112 10:13:13.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.482" level="INFO">VALUE: [3.319000000001626e-06, 4.986000000001961e-06, 5.986999999998965e-06, 3.026999999999197e-06, 5.457999999999852e-06, 5.401999999998103e-06, 5.389000000001476e-06, 3.708000000001571e-06, 4.791000000000517e-06, 5.625000000002156e-06, 5.180000000000462e-06, 3.7919999999989906e-06, 2.667000000001335e-06, 4.291000000000017e-06, 5.471999999999422e-06, 5.735999999999242e-06, 3.3480000000002397e-06, 5.7229999999991454e-06, 3.513000000000127e-06, 2.6669999999978655e-06, 3.097000000000516e-06, 5.721999999999672e-06, 5.790999999998048e-06, 2.583000000000446e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201112 10:13:13.481" endtime="20201112 10:13:13.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.476" endtime="20201112 10:13:13.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.485" endtime="20201112 10:13:13.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:13.489" endtime="20201112 10:13:13.508"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.487" endtime="20201112 10:13:13.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.484" endtime="20201112 10:13:13.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.121" endtime="20201112 10:13:13.510"></status>
</kw>
<msg timestamp="20201112 10:13:13.510" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.519" endtime="20201112 10:13:13.533"></status>
</kw>
<msg timestamp="20201112 10:13:13.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:13.517" endtime="20201112 10:13:13.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:13.534" endtime="20201112 10:13:13.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.537" endtime="20201112 10:13:13.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.514" endtime="20201112 10:13:13.539"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.512" endtime="20201112 10:13:13.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.546" endtime="20201112 10:13:13.814"></status>
</kw>
<msg timestamp="20201112 10:13:13.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018534792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:13.544" endtime="20201112 10:13:13.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018534792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:13.817" endtime="20201112 10:13:13.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.822" endtime="20201112 10:13:13.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.542" endtime="20201112 10:13:13.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.540" endtime="20201112 10:13:13.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.829" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:13.828" endtime="20201112 10:13:13.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.833" level="INFO">VALUE: [{'time': 0.018534792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8329999999972266e-06, 'source_diff': 2.8329999999972266e-06}, {'time': 0.018541111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018545764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018548569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.018553347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018556319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018558861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.018561792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.018566056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018570972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018573639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.018577736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018582847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018587931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0839999999989505e-06, 'source_diff': 5.0839999999989505e-06}, {'time': 0.018592667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.018596569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.018601986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018607847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018611319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018614792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.018620514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018626486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018632458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018638694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018642736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018645583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018649819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018655153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.018657639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.018662972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018667014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999999241e-06, 'source_diff': 4.041999999999241e-06}, {'time': 0.018672306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018678403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018681764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018685014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.018688903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018694875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018699403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018702889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018708736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018711264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.018714806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.018719097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018721639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018724417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.018728903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018733653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.018736403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018739639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:13.830" endtime="20201112 10:13:13.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.826" endtime="20201112 10:13:13.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:13.848" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:13.835" endtime="20201112 10:13:13.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.851" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:13.851" endtime="20201112 10:13:13.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.855" level="INFO">VALUE: {'eventsourcetime': [0.018534792, 0.018537625, 0.018541111, 0.018545764, 0.018548569, 0.018553347, 0.018556319, 0.018558861, 0.018561792, 0.018566056, 0.018570972, 0.018573639, 0.018577736, 0.018582847, 0.018587931, 0.018592667, 0.018596569, 0.018601986, 0.018607847, 0.018611319, 0.018614792, 0.018620514, 0.018626486, 0.018632458, 0.018638694, 0.018642736, 0.018645583, 0.018649819, 0.018655153, 0.018657639, 0.018662972, 0.018667014, 0.018672306, 0.018678403, 0.018681764, 0.018685014, 0.018688903, 0.018694875, 0.018699403, 0.018702889, 0.018708736, 0.018711264, 0.018714806, 0.018719097, 0.018721639, 0.018724417, 0.018728903, 0.018733653, 0.018736403, 0.018739639], 'diff': [0, 2.8329999999972266e-06, 3.486000000000461e-06, 4.653000000000296e-06, 2.8050000000015562e-06, 4.778000000000421e-06, 2.972000000000391e-06, 2.5419999999977405e-06, 2.931000000001155e-06, 4.264000000000351e-06, 4.916000000000642e-06, 2.6669999999978655e-06, 4.097000000001516e-06, 5.110999999998617e-06, 5.0839999999989505e-06, 4.736000000001711e-06, 3.902000000000072e-06, 5.417000000000616e-06, 5.860999999999367e-06, 3.472000000000891e-06, 3.4730000000003647e-06, 5.721999999999672e-06, 5.971999999999922e-06, 5.971999999999922e-06, 6.235999999999742e-06, 4.041999999999241e-06, 2.847000000000266e-06, 4.236000000001211e-06, 5.3339999999992005e-06, 2.485999999999461e-06, 5.332999999999727e-06, 4.041999999999241e-06, 5.292000000000491e-06, 6.097000000000047e-06, 3.361000000000336e-06, 3.249999999999781e-06, 3.888999999999976e-06, 5.971999999999922e-06, 4.528000000000171e-06, 3.486000000000461e-06, 5.846999999999797e-06, 2.5279999999981706e-06, 3.54200000000221e-06, 4.291000000000017e-06, 2.54200000000121e-06, 2.7779999999984206e-06, 4.486000000001461e-06, 4.7499999999978115e-06, 2.749999999999281e-06, 3.236000000000211e-06], 'source_diff': [0, 2.8329999999972266e-06, 3.486000000000461e-06, 4.653000000000296e-06, 2.8050000000015562e-06, 4.778000000000421e-06, 2.972000000000391e-06, 2.5419999999977405e-06, 2.931000000001155e-06, 4.264000000000351e-06, 4.916000000000642e-06, 2.6669999999978655e-06, 4.097000000001516e-06, 5.110999999998617e-06, 5.0839999999989505e-06, 4.736000000001711e-06, 3.902000000000072e-06, 5.417000000000616e-06, 5.860999999999367e-06, 3.472000000000891e-06, 3.4730000000003647e-06, 5.721999999999672e-06, 5.971999999999922e-06, 5.971999999999922e-06, 6.235999999999742e-06, 4.041999999999241e-06, 2.847000000000266e-06, 4.236000000001211e-06, 5.3339999999992005e-06, 2.485999999999461e-06, 5.332999999999727e-06, 4.041999999999241e-06, 5.292000000000491e-06, 6.097000000000047e-06, 3.361000000000336e-06, 3.249999999999781e-06, 3.888999999999976e-06, 5.971999999999922e-06, 4.528000000000171e-06, 3.486000000000461e-06, 5.846999999999797e-06, 2.5279999999981706e-06, 3.54200000000221e-06, 4.291000000000017e-06, 2.54200000000121e-06, 2.7779999999984206e-06, 4.486000000001461e-06, 4.7499999999978115e-06, 2.749999999999281e-06, 3.236000000000211e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:13.853" endtime="20201112 10:13:13.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.849" endtime="20201112 10:13:13.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:13.859" level="INFO">${RESULT} = [{'time': 0.018537625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8329999999972266e-06, 'source_diff': 2.8329999999972266e-06}, {'time': 0.018545764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:13.856" endtime="20201112 10:13:13.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:13.867" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:13.860" endtime="20201112 10:13:13.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.871" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:13.870" endtime="20201112 10:13:13.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.873" level="INFO">VALUE: [2.8329999999972266e-06, 4.653000000000296e-06, 4.778000000000421e-06, 2.5419999999977405e-06, 4.264000000000351e-06, 2.6669999999978655e-06, 5.110999999998617e-06, 4.736000000001711e-06, 5.417000000000616e-06, 3.472000000000891e-06, 5.721999999999672e-06, 5.971999999999922e-06, 4.041999999999241e-06, 4.236000000001211e-06, 2.485999999999461e-06, 4.041999999999241e-06, 6.097000000000047e-06, 3.249999999999781e-06, 5.971999999999922e-06, 3.486000000000461e-06, 2.5279999999981706e-06, 4.291000000000017e-06, 2.7779999999984206e-06, 4.7499999999978115e-06, 3.236000000000211e-06]</msg>
<status status="PASS" starttime="20201112 10:13:13.872" endtime="20201112 10:13:13.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.868" endtime="20201112 10:13:13.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.877" endtime="20201112 10:13:13.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:13.881" endtime="20201112 10:13:13.900"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.878" endtime="20201112 10:13:13.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.875" endtime="20201112 10:13:13.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.511" endtime="20201112 10:13:13.902"></status>
</kw>
<msg timestamp="20201112 10:13:13.902" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.909" endtime="20201112 10:13:13.924"></status>
</kw>
<msg timestamp="20201112 10:13:13.924" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:13.908" endtime="20201112 10:13:13.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:13.927" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:13.925" endtime="20201112 10:13:13.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.928" endtime="20201112 10:13:13.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.905" endtime="20201112 10:13:13.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.904" endtime="20201112 10:13:13.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:13.937" endtime="20201112 10:13:14.201"></status>
</kw>
<msg timestamp="20201112 10:13:14.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017352083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017358375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:13.935" endtime="20201112 10:13:14.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017352083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017358375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:14.204" endtime="20201112 10:13:14.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.209" endtime="20201112 10:13:14.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.933" endtime="20201112 10:13:14.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.931" endtime="20201112 10:13:14.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.215" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:14.214" endtime="20201112 10:13:14.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.219" level="INFO">VALUE: [{'time': 0.017352083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017358375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.017362403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017365958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.017371111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.017373597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017378806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.017383347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017388444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017393056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.017396583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.526999999999697e-06, 'source_diff': 3.526999999999697e-06}, {'time': 0.017399056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.017402236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1800000000019313e-06, 'source_diff': 3.1800000000019313e-06}, {'time': 0.017406028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.017410319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017414903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.017417625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017422917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017428264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017431556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.017437778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017443764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017448417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017454083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.017458694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.017463597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017469569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017473806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.017478347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017481292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9449999999972554e-06, 'source_diff': 2.9449999999972554e-06}, {'time': 0.017485486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.194000000002501e-06, 'source_diff': 4.194000000002501e-06}, {'time': 0.017489875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.01749525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.017497708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017500056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.017504597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017508389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.017512292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017516292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017521431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.017525722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017530819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017535125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017539458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.017544056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59799999999802e-06, 'source_diff': 4.59799999999802e-06}, {'time': 0.017546542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017550903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017557069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.017561458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.017566875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:14.216" endtime="20201112 10:13:14.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.212" endtime="20201112 10:13:14.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:14.234" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:14.221" endtime="20201112 10:13:14.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.238" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:14.237" endtime="20201112 10:13:14.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.241" level="INFO">VALUE: {'eventsourcetime': [0.017352083, 0.017358375, 0.017362403, 0.017365958, 0.017371111, 0.017373597, 0.017378806, 0.017383347, 0.017388444, 0.017393056, 0.017396583, 0.017399056, 0.017402236, 0.017406028, 0.017410319, 0.017414903, 0.017417625, 0.017422917, 0.017428264, 0.017431556, 0.017437778, 0.017443764, 0.017448417, 0.017454083, 0.017458694, 0.017463597, 0.017469569, 0.017473806, 0.017478347, 0.017481292, 0.017485486, 0.017489875, 0.01749525, 0.017497708, 0.017500056, 0.017504597, 0.017508389, 0.017512292, 0.017516292, 0.017521431, 0.017525722, 0.017530819, 0.017535125, 0.017539458, 0.017544056, 0.017546542, 0.017550903, 0.017557069, 0.017561458, 0.017566875], 'diff': [0, 6.291999999998021e-06, 4.027999999999671e-06, 3.5550000000023063e-06, 5.153000000000796e-06, 2.485999999999461e-06, 5.2089999999990755e-06, 4.541000000000267e-06, 5.096999999999047e-06, 4.61200000000106e-06, 3.526999999999697e-06, 2.4729999999993646e-06, 3.1800000000019313e-06, 3.7919999999989906e-06, 4.291000000000017e-06, 4.5839999999984504e-06, 2.722000000000141e-06, 5.292000000000491e-06, 5.346999999999297e-06, 3.29200000000196e-06, 6.222000000000172e-06, 5.985999999999492e-06, 4.653000000000296e-06, 5.665999999997923e-06, 4.611000000001586e-06, 4.903000000000546e-06, 5.971999999999922e-06, 4.237000000000685e-06, 4.541000000000267e-06, 2.9449999999972554e-06, 4.194000000002501e-06, 4.388999999997006e-06, 5.375000000001906e-06, 2.458000000000321e-06, 2.3479999999992396e-06, 4.541000000000267e-06, 3.7919999999989906e-06, 3.902999999999546e-06, 4.000000000000531e-06, 5.139000000001226e-06, 4.291000000000017e-06, 5.096999999999047e-06, 4.305999999999061e-06, 4.333000000002196e-06, 4.59799999999802e-06, 2.485999999999461e-06, 4.361000000001336e-06, 6.166000000001892e-06, 4.388999999997006e-06, 5.417000000000616e-06], 'source_diff': [0, 6.291999999998021e-06, 4.027999999999671e-06, 3.5550000000023063e-06, 5.153000000000796e-06, 2.485999999999461e-06, 5.2089999999990755e-06, 4.541000000000267e-06, 5.096999999999047e-06, 4.61200000000106e-06, 3.526999999999697e-06, 2.4729999999993646e-06, 3.1800000000019313e-06, 3.7919999999989906e-06, 4.291000000000017e-06, 4.5839999999984504e-06, 2.722000000000141e-06, 5.292000000000491e-06, 5.346999999999297e-06, 3.29200000000196e-06, 6.222000000000172e-06, 5.985999999999492e-06, 4.653000000000296e-06, 5.665999999997923e-06, 4.611000000001586e-06, 4.903000000000546e-06, 5.971999999999922e-06, 4.237000000000685e-06, 4.541000000000267e-06, 2.9449999999972554e-06, 4.194000000002501e-06, 4.388999999997006e-06, 5.375000000001906e-06, 2.458000000000321e-06, 2.3479999999992396e-06, 4.541000000000267e-06, 3.7919999999989906e-06, 3.902999999999546e-06, 4.000000000000531e-06, 5.139000000001226e-06, 4.291000000000017e-06, 5.096999999999047e-06, 4.305999999999061e-06, 4.333000000002196e-06, 4.59799999999802e-06, 2.485999999999461e-06, 4.361000000001336e-06, 6.166000000001892e-06, 4.388999999997006e-06, 5.417000000000616e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:14.239" endtime="20201112 10:13:14.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.235" endtime="20201112 10:13:14.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:14.245" level="INFO">${RESULT} = [{'time': 0.017358375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.017365958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:14.243" endtime="20201112 10:13:14.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:14.254" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:14.246" endtime="20201112 10:13:14.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.258" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:14.257" endtime="20201112 10:13:14.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.260" level="INFO">VALUE: [6.291999999998021e-06, 3.5550000000023063e-06, 2.485999999999461e-06, 4.541000000000267e-06, 4.61200000000106e-06, 2.4729999999993646e-06, 3.7919999999989906e-06, 4.5839999999984504e-06, 5.292000000000491e-06, 3.29200000000196e-06, 5.985999999999492e-06, 5.665999999997923e-06, 4.903000000000546e-06, 4.237000000000685e-06, 2.9449999999972554e-06, 4.388999999997006e-06, 2.458000000000321e-06, 4.541000000000267e-06, 3.902999999999546e-06, 5.139000000001226e-06, 5.096999999999047e-06, 4.333000000002196e-06, 2.485999999999461e-06, 6.166000000001892e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201112 10:13:14.259" endtime="20201112 10:13:14.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.255" endtime="20201112 10:13:14.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.264" endtime="20201112 10:13:14.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:14.267" endtime="20201112 10:13:14.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.265" endtime="20201112 10:13:14.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.262" endtime="20201112 10:13:14.287"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:13.902" endtime="20201112 10:13:14.288"></status>
</kw>
<msg timestamp="20201112 10:13:14.288" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.295" endtime="20201112 10:13:14.309"></status>
</kw>
<msg timestamp="20201112 10:13:14.309" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:14.294" endtime="20201112 10:13:14.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.312" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:14.310" endtime="20201112 10:13:14.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.313" endtime="20201112 10:13:14.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.291" endtime="20201112 10:13:14.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.290" endtime="20201112 10:13:14.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.322" endtime="20201112 10:13:14.586"></status>
</kw>
<msg timestamp="20201112 10:13:14.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017365764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017369611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:14.320" endtime="20201112 10:13:14.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017365764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017369611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:14.589" endtime="20201112 10:13:14.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.594" endtime="20201112 10:13:14.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.318" endtime="20201112 10:13:14.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.316" endtime="20201112 10:13:14.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.601" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:14.600" endtime="20201112 10:13:14.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.604" level="INFO">VALUE: [{'time': 0.017365764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017369611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017373833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017380125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.017383903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017387764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017390347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.017395083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.01740125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017406347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017410569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017415806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236999999998215e-06, 'source_diff': 5.236999999998215e-06}, {'time': 0.017419458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.651999999999822e-06, 'source_diff': 3.651999999999822e-06}, {'time': 0.017425639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.017428722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.017431444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017434306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8619999999993095e-06, 'source_diff': 2.8619999999993095e-06}, {'time': 0.017437333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.017440625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.017444181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.017448194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.013000000000627e-06, 'source_diff': 4.013000000000627e-06}, {'time': 0.017454194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017456708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.017460708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.017466542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.83400000000317e-06, 'source_diff': 5.83400000000317e-06}, {'time': 0.017471653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017477, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017480625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.017483208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.017489236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.017495208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.972000000003391e-06, 'source_diff': 5.972000000003391e-06}, {'time': 0.017499875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017503278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.01750625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017509167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.017513833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.017519681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.017522528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017527944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.017533917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.017539542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.017544194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.651999999997353e-06, 'source_diff': 4.651999999997353e-06}, {'time': 0.017549347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.017552569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017556931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.017563042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.017566944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.017571847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017574458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.017580486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:14.602" endtime="20201112 10:13:14.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.598" endtime="20201112 10:13:14.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:14.621" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:14.607" endtime="20201112 10:13:14.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.625" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:14.624" endtime="20201112 10:13:14.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.628" level="INFO">VALUE: {'eventsourcetime': [0.017365764, 0.017369611, 0.017373833, 0.017380125, 0.017383903, 0.017387764, 0.017390347, 0.017395083, 0.01740125, 0.017406347, 0.017410569, 0.017415806, 0.017419458, 0.017425639, 0.017428722, 0.017431444, 0.017434306, 0.017437333, 0.017440625, 0.017444181, 0.017448194, 0.017454194, 0.017456708, 0.017460708, 0.017466542, 0.017471653, 0.017477, 0.017480625, 0.017483208, 0.017489236, 0.017495208, 0.017499875, 0.017503278, 0.01750625, 0.017509167, 0.017513833, 0.017519681, 0.017522528, 0.017527944, 0.017533917, 0.017539542, 0.017544194, 0.017549347, 0.017552569, 0.017556931, 0.017563042, 0.017566944, 0.017571847, 0.017574458, 0.017580486], 'diff': [0, 3.847000000001266e-06, 4.222000000001641e-06, 6.291999999998021e-06, 3.7779999999994207e-06, 3.861000000000836e-06, 2.583000000000446e-06, 4.735999999998242e-06, 6.167000000001366e-06, 5.096999999999047e-06, 4.222000000001641e-06, 5.236999999998215e-06, 3.651999999999822e-06, 6.181000000000936e-06, 3.083000000000946e-06, 2.722000000000141e-06, 2.8619999999993095e-06, 3.026999999999197e-06, 3.29200000000196e-06, 3.5559999999983105e-06, 4.013000000000627e-06, 5.999999999999062e-06, 2.51400000000207e-06, 3.9999999999970615e-06, 5.83400000000317e-06, 5.110999999998617e-06, 5.346999999999297e-06, 3.625000000000156e-06, 2.583000000000446e-06, 6.0279999999982015e-06, 5.972000000003391e-06, 4.666999999999866e-06, 3.4029999999990457e-06, 2.972000000000391e-06, 2.9169999999981155e-06, 4.666000000000392e-06, 5.8479999999992704e-06, 2.847000000000266e-06, 5.416000000001142e-06, 5.9729999999993955e-06, 5.625000000002156e-06, 4.651999999997353e-06, 5.153000000000796e-06, 3.222000000000641e-06, 4.36200000000081e-06, 6.110999999999617e-06, 3.902000000000072e-06, 4.903000000000546e-06, 2.610999999999586e-06, 6.0279999999982015e-06], 'source_diff': [0, 3.847000000001266e-06, 4.222000000001641e-06, 6.291999999998021e-06, 3.7779999999994207e-06, 3.861000000000836e-06, 2.583000000000446e-06, 4.735999999998242e-06, 6.167000000001366e-06, 5.096999999999047e-06, 4.222000000001641e-06, 5.236999999998215e-06, 3.651999999999822e-06, 6.181000000000936e-06, 3.083000000000946e-06, 2.722000000000141e-06, 2.8619999999993095e-06, 3.026999999999197e-06, 3.29200000000196e-06, 3.5559999999983105e-06, 4.013000000000627e-06, 5.999999999999062e-06, 2.51400000000207e-06, 3.9999999999970615e-06, 5.83400000000317e-06, 5.110999999998617e-06, 5.346999999999297e-06, 3.625000000000156e-06, 2.583000000000446e-06, 6.0279999999982015e-06, 5.972000000003391e-06, 4.666999999999866e-06, 3.4029999999990457e-06, 2.972000000000391e-06, 2.9169999999981155e-06, 4.666000000000392e-06, 5.8479999999992704e-06, 2.847000000000266e-06, 5.416000000001142e-06, 5.9729999999993955e-06, 5.625000000002156e-06, 4.651999999997353e-06, 5.153000000000796e-06, 3.222000000000641e-06, 4.36200000000081e-06, 6.110999999999617e-06, 3.902000000000072e-06, 4.903000000000546e-06, 2.610999999999586e-06, 6.0279999999982015e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:14.626" endtime="20201112 10:13:14.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.622" endtime="20201112 10:13:14.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:14.633" level="INFO">${RESULT} = [{'time': 0.017369611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017380125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:14.630" endtime="20201112 10:13:14.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:14.641" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:14.634" endtime="20201112 10:13:14.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.645" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:14.644" endtime="20201112 10:13:14.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.647" level="INFO">VALUE: [3.847000000001266e-06, 6.291999999998021e-06, 3.861000000000836e-06, 4.735999999998242e-06, 5.096999999999047e-06, 5.236999999998215e-06, 6.181000000000936e-06, 2.722000000000141e-06, 3.026999999999197e-06, 3.5559999999983105e-06, 5.999999999999062e-06, 3.9999999999970615e-06, 5.110999999998617e-06, 3.625000000000156e-06, 6.0279999999982015e-06, 4.666999999999866e-06, 2.972000000000391e-06, 4.666000000000392e-06, 2.847000000000266e-06, 5.9729999999993955e-06, 4.651999999997353e-06, 3.222000000000641e-06, 6.110999999999617e-06, 4.903000000000546e-06, 6.0279999999982015e-06]</msg>
<status status="PASS" starttime="20201112 10:13:14.646" endtime="20201112 10:13:14.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.642" endtime="20201112 10:13:14.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.651" endtime="20201112 10:13:14.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:14.654" endtime="20201112 10:13:14.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.653" endtime="20201112 10:13:14.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.649" endtime="20201112 10:13:14.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.288" endtime="20201112 10:13:14.675"></status>
</kw>
<msg timestamp="20201112 10:13:14.675" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.683" endtime="20201112 10:13:14.697"></status>
</kw>
<msg timestamp="20201112 10:13:14.698" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:14.681" endtime="20201112 10:13:14.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.700" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:14.699" endtime="20201112 10:13:14.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.701" endtime="20201112 10:13:14.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.678" endtime="20201112 10:13:14.704"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.677" endtime="20201112 10:13:14.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.710" endtime="20201112 10:13:14.977"></status>
</kw>
<msg timestamp="20201112 10:13:14.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017567458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017569764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:14.709" endtime="20201112 10:13:14.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017567458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017569764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:14.980" endtime="20201112 10:13:14.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:14.986" endtime="20201112 10:13:14.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.706" endtime="20201112 10:13:14.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.705" endtime="20201112 10:13:14.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.992" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:14.991" endtime="20201112 10:13:14.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:14.996" level="INFO">VALUE: [{'time': 0.017567458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017569764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.017576056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.017579403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017584653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.017589167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.514000000000601e-06, 'source_diff': 4.514000000000601e-06}, {'time': 0.017593208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017598944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.017604972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017610708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.017613542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.017616653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017621014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017624, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017629278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.017632806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017638153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017643514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017645958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.444000000000751e-06, 'source_diff': 2.444000000000751e-06}, {'time': 0.017650861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017655931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.017658833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.017661694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017664653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.017668403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017672306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017675653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017678, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017683611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017686264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.017692236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017697847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017704181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.334000000000201e-06, 'source_diff': 6.334000000000201e-06}, {'time': 0.017709792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017715889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.01771875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017721486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.017726139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652999999996826e-06, 'source_diff': 4.652999999996826e-06}, {'time': 0.017728861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017731569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.017734694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.017738972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017744764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017748611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017751458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017755708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.017759236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017764139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017768556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017772083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.526999999999697e-06, 'source_diff': 3.526999999999697e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:14.993" endtime="20201112 10:13:14.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.989" endtime="20201112 10:13:14.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:15.011" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:14.998" endtime="20201112 10:13:15.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.015" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:15.014" endtime="20201112 10:13:15.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.018" level="INFO">VALUE: {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcetime': [0.017567458, 0.017569764, 0.017576056, 0.017579403, 0.017584653, 0.017589167, 0.017593208, 0.017598944, 0.017604972, 0.017610708, 0.017613542, 0.017616653, 0.017621014, 0.017624, 0.017629278, 0.017632806, 0.017638153, 0.017643514, 0.017645958, 0.017650861, 0.017655931, 0.017658833, 0.017661694, 0.017664653, 0.017668403, 0.017672306, 0.017675653, 0.017678, 0.017683611, 0.017686264, 0.017692236, 0.017697847, 0.017704181, 0.017709792, 0.017715889, 0.01771875, 0.017721486, 0.017726139, 0.017728861, 0.017731569, 0.017734694, 0.017738972, 0.017744764, 0.017748611, 0.017751458, 0.017755708, 0.017759236, 0.017764139, 0.017768556, 0.017772083], 'diff': [0, 2.30600000000053e-06, 6.291999999998021e-06, 3.347000000000766e-06, 5.2499999999983116e-06, 4.514000000000601e-06, 4.040999999999767e-06, 5.735999999999242e-06, 6.028000000001671e-06, 5.735999999999242e-06, 2.8340000000001697e-06, 3.111000000000086e-06, 4.361000000001336e-06, 2.985999999999961e-06, 5.278000000000921e-06, 3.5279999999991707e-06, 5.346999999999297e-06, 5.360999999998867e-06, 2.444000000000751e-06, 4.903000000000546e-06, 5.0699999999993806e-06, 2.901999999999072e-06, 2.860999999999836e-06, 2.9590000000002947e-06, 3.750000000000281e-06, 3.902999999999546e-06, 3.347000000000766e-06, 2.346999999999766e-06, 5.610999999999117e-06, 2.653000000001765e-06, 5.971999999999922e-06, 5.610999999999117e-06, 6.334000000000201e-06, 5.610999999999117e-06, 6.097000000000047e-06, 2.860999999999836e-06, 2.7360000000031803e-06, 4.652999999996826e-06, 2.722000000000141e-06, 2.708000000000571e-06, 3.124999999999656e-06, 4.277999999999921e-06, 5.792000000000991e-06, 3.847000000001266e-06, 2.847000000000266e-06, 4.2499999999973115e-06, 3.52800000000264e-06, 4.903000000000546e-06, 4.416999999999616e-06, 3.526999999999697e-06], 'source_diff': [0, 2.30600000000053e-06, 6.291999999998021e-06, 3.347000000000766e-06, 5.2499999999983116e-06, 4.514000000000601e-06, 4.040999999999767e-06, 5.735999999999242e-06, 6.028000000001671e-06, 5.735999999999242e-06, 2.8340000000001697e-06, 3.111000000000086e-06, 4.361000000001336e-06, 2.985999999999961e-06, 5.278000000000921e-06, 3.5279999999991707e-06, 5.346999999999297e-06, 5.360999999998867e-06, 2.444000000000751e-06, 4.903000000000546e-06, 5.0699999999993806e-06, 2.901999999999072e-06, 2.860999999999836e-06, 2.9590000000002947e-06, 3.750000000000281e-06, 3.902999999999546e-06, 3.347000000000766e-06, 2.346999999999766e-06, 5.610999999999117e-06, 2.653000000001765e-06, 5.971999999999922e-06, 5.610999999999117e-06, 6.334000000000201e-06, 5.610999999999117e-06, 6.097000000000047e-06, 2.860999999999836e-06, 2.7360000000031803e-06, 4.652999999996826e-06, 2.722000000000141e-06, 2.708000000000571e-06, 3.124999999999656e-06, 4.277999999999921e-06, 5.792000000000991e-06, 3.847000000001266e-06, 2.847000000000266e-06, 4.2499999999973115e-06, 3.52800000000264e-06, 4.903000000000546e-06, 4.416999999999616e-06, 3.526999999999697e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:15.016" endtime="20201112 10:13:15.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.012" endtime="20201112 10:13:15.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:15.022" level="INFO">${RESULT} = [{'time': 0.017569764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.017579403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:15.020" endtime="20201112 10:13:15.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:15.030" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:15.023" endtime="20201112 10:13:15.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.034" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:15.033" endtime="20201112 10:13:15.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.036" level="INFO">VALUE: [2.30600000000053e-06, 3.347000000000766e-06, 4.514000000000601e-06, 5.735999999999242e-06, 5.735999999999242e-06, 3.111000000000086e-06, 2.985999999999961e-06, 3.5279999999991707e-06, 5.360999999998867e-06, 4.903000000000546e-06, 2.901999999999072e-06, 2.9590000000002947e-06, 3.902999999999546e-06, 2.346999999999766e-06, 2.653000000001765e-06, 5.610999999999117e-06, 5.610999999999117e-06, 2.860999999999836e-06, 4.652999999996826e-06, 2.708000000000571e-06, 4.277999999999921e-06, 3.847000000001266e-06, 4.2499999999973115e-06, 4.903000000000546e-06, 3.526999999999697e-06]</msg>
<status status="PASS" starttime="20201112 10:13:15.035" endtime="20201112 10:13:15.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.031" endtime="20201112 10:13:15.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.040" endtime="20201112 10:13:15.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:15.043" endtime="20201112 10:13:15.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.042" endtime="20201112 10:13:15.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.038" endtime="20201112 10:13:15.064"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:14.675" endtime="20201112 10:13:15.064"></status>
</kw>
<msg timestamp="20201112 10:13:15.064" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.072" endtime="20201112 10:13:15.086"></status>
</kw>
<msg timestamp="20201112 10:13:15.086" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:15.070" endtime="20201112 10:13:15.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.089" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:15.087" endtime="20201112 10:13:15.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.090" endtime="20201112 10:13:15.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.068" endtime="20201112 10:13:15.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.066" endtime="20201112 10:13:15.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.100" endtime="20201112 10:13:15.364"></status>
</kw>
<msg timestamp="20201112 10:13:15.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017363514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017366403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:15.098" endtime="20201112 10:13:15.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017363514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017366403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:15.367" endtime="20201112 10:13:15.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.372" endtime="20201112 10:13:15.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.095" endtime="20201112 10:13:15.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.093" endtime="20201112 10:13:15.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.379" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:15.378" endtime="20201112 10:13:15.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.383" level="INFO">VALUE: [{'time': 0.017363514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017366403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.017370389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017374111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017378208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017381, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.017386181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.017389653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017394042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.388999999997006e-06, 'source_diff': 4.388999999997006e-06}, {'time': 0.017398583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017404903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.017407597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.017412208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017414986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.017419417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.01742175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.017425306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.017428542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017432431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.017436708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.276999999996978e-06, 'source_diff': 4.276999999996978e-06}, {'time': 0.017442, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017447903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.017450458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5549999999978368e-06, 'source_diff': 2.5549999999978368e-06}, {'time': 0.017456056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.59800000000249e-06, 'source_diff': 5.59800000000249e-06}, {'time': 0.017460847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.017466319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017469236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.017472514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.017475625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017478167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.017482139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017488167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.017491583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}, {'time': 0.01749475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.017499847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017505264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.017508736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017512458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017516014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.017522167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.017527778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017532778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.017535083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.017537431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.017542472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.017548264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017553958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.017558778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.017561944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.017566486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:15.380" endtime="20201112 10:13:15.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.376" endtime="20201112 10:13:15.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:15.397" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:15.385" endtime="20201112 10:13:15.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.401" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:15.400" endtime="20201112 10:13:15.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.404" level="INFO">VALUE: {'eventsourcetime': [0.017363514, 0.017366403, 0.017370389, 0.017374111, 0.017378208, 0.017381, 0.017386181, 0.017389653, 0.017394042, 0.017398583, 0.017404903, 0.017407597, 0.017412208, 0.017414986, 0.017419417, 0.01742175, 0.017425306, 0.017428542, 0.017432431, 0.017436708, 0.017442, 0.017447903, 0.017450458, 0.017456056, 0.017460847, 0.017466319, 0.017469236, 0.017472514, 0.017475625, 0.017478167, 0.017482139, 0.017488167, 0.017491583, 0.01749475, 0.017499847, 0.017505264, 0.017508736, 0.017512458, 0.017516014, 0.017522167, 0.017527778, 0.017532778, 0.017535083, 0.017537431, 0.017542472, 0.017548264, 0.017553958, 0.017558778, 0.017561944, 0.017566486], 'diff': [0, 2.8889999999989757e-06, 3.986000000000961e-06, 3.722000000001141e-06, 4.096999999998047e-06, 2.79200000000146e-06, 5.180999999999936e-06, 3.472000000000891e-06, 4.388999999997006e-06, 4.541000000000267e-06, 6.320000000000631e-06, 2.694000000001001e-06, 4.610999999998117e-06, 2.77800000000189e-06, 4.430999999999186e-06, 2.333000000000196e-06, 3.55600000000178e-06, 3.236000000000211e-06, 3.888999999999976e-06, 4.276999999996978e-06, 5.292000000000491e-06, 5.903000000001546e-06, 2.5549999999978368e-06, 5.59800000000249e-06, 4.791000000000517e-06, 5.471999999999422e-06, 2.9169999999981155e-06, 3.27800000000239e-06, 3.111000000000086e-06, 2.5419999999977405e-06, 3.972000000001391e-06, 6.0279999999982015e-06, 3.4160000000026114e-06, 3.1669999999983656e-06, 5.096999999999047e-06, 5.417000000000616e-06, 3.472000000000891e-06, 3.722000000001141e-06, 3.5559999999983105e-06, 6.153000000001796e-06, 5.610999999999117e-06, 4.9999999999980616e-06, 2.305000000001056e-06, 2.3479999999992396e-06, 5.041000000000767e-06, 5.792000000000991e-06, 5.694000000000532e-06, 4.8199999999991305e-06, 3.165999999998892e-06, 4.541999999999741e-06], 'source_diff': [0, 2.8889999999989757e-06, 3.986000000000961e-06, 3.722000000001141e-06, 4.096999999998047e-06, 2.79200000000146e-06, 5.180999999999936e-06, 3.472000000000891e-06, 4.388999999997006e-06, 4.541000000000267e-06, 6.320000000000631e-06, 2.694000000001001e-06, 4.610999999998117e-06, 2.77800000000189e-06, 4.430999999999186e-06, 2.333000000000196e-06, 3.55600000000178e-06, 3.236000000000211e-06, 3.888999999999976e-06, 4.276999999996978e-06, 5.292000000000491e-06, 5.903000000001546e-06, 2.5549999999978368e-06, 5.59800000000249e-06, 4.791000000000517e-06, 5.471999999999422e-06, 2.9169999999981155e-06, 3.27800000000239e-06, 3.111000000000086e-06, 2.5419999999977405e-06, 3.972000000001391e-06, 6.0279999999982015e-06, 3.4160000000026114e-06, 3.1669999999983656e-06, 5.096999999999047e-06, 5.417000000000616e-06, 3.472000000000891e-06, 3.722000000001141e-06, 3.5559999999983105e-06, 6.153000000001796e-06, 5.610999999999117e-06, 4.9999999999980616e-06, 2.305000000001056e-06, 2.3479999999992396e-06, 5.041000000000767e-06, 5.792000000000991e-06, 5.694000000000532e-06, 4.8199999999991305e-06, 3.165999999998892e-06, 4.541999999999741e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:15.402" endtime="20201112 10:13:15.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.398" endtime="20201112 10:13:15.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:15.409" level="INFO">${RESULT} = [{'time': 0.017366403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.017374111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:15.406" endtime="20201112 10:13:15.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:15.417" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:15.410" endtime="20201112 10:13:15.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.421" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:15.420" endtime="20201112 10:13:15.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.423" level="INFO">VALUE: [2.8889999999989757e-06, 3.722000000001141e-06, 2.79200000000146e-06, 3.472000000000891e-06, 4.541000000000267e-06, 2.694000000001001e-06, 2.77800000000189e-06, 2.333000000000196e-06, 3.236000000000211e-06, 4.276999999996978e-06, 5.903000000001546e-06, 5.59800000000249e-06, 5.471999999999422e-06, 3.27800000000239e-06, 2.5419999999977405e-06, 6.0279999999982015e-06, 3.1669999999983656e-06, 5.417000000000616e-06, 3.722000000001141e-06, 6.153000000001796e-06, 4.9999999999980616e-06, 2.3479999999992396e-06, 5.792000000000991e-06, 4.8199999999991305e-06, 4.541999999999741e-06]</msg>
<status status="PASS" starttime="20201112 10:13:15.422" endtime="20201112 10:13:15.424"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.418" endtime="20201112 10:13:15.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.426" endtime="20201112 10:13:15.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:15.430" endtime="20201112 10:13:15.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.428" endtime="20201112 10:13:15.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.425" endtime="20201112 10:13:15.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.065" endtime="20201112 10:13:15.451"></status>
</kw>
<msg timestamp="20201112 10:13:15.451" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.458" endtime="20201112 10:13:15.472"></status>
</kw>
<msg timestamp="20201112 10:13:15.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:15.457" endtime="20201112 10:13:15.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:15.474" endtime="20201112 10:13:15.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.476" endtime="20201112 10:13:15.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.454" endtime="20201112 10:13:15.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.453" endtime="20201112 10:13:15.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.486" endtime="20201112 10:13:15.751"></status>
</kw>
<msg timestamp="20201112 10:13:15.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017380889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017386653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:15.485" endtime="20201112 10:13:15.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017380889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017386653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:15.754" endtime="20201112 10:13:15.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.759" endtime="20201112 10:13:15.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.482" endtime="20201112 10:13:15.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.480" endtime="20201112 10:13:15.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.765" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:15.764" endtime="20201112 10:13:15.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.769" level="INFO">VALUE: [{'time': 0.017380889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017386653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.017391444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.017394542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.017397542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.999999999999531e-06, 'source_diff': 2.999999999999531e-06}, {'time': 0.017401306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.017404972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6660000000028614e-06, 'source_diff': 3.6660000000028614e-06}, {'time': 0.017410778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.017416611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.017419458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017423069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017427597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.01743175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.017435333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017437833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.017440694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017444222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017449514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017455056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.017460583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.017463694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017467236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.017470278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.017473861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017478653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.0174825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017488306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.017491111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.017497375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.017503167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017506958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.017510806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.017516264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.017518681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.017522292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6109999999971165e-06, 'source_diff': 3.6109999999971165e-06}, {'time': 0.017526153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017528486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.017533958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017539056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.017541931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.017547278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017552861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.017557722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.01756025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017565111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.017570083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017576181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0979999999995205e-06, 'source_diff': 6.0979999999995205e-06}, {'time': 0.017580278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017584069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.017588222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:15.766" endtime="20201112 10:13:15.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.762" endtime="20201112 10:13:15.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:15.785" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:15.771" endtime="20201112 10:13:15.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.789" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:15.788" endtime="20201112 10:13:15.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.792" level="INFO">VALUE: {'eventsourcetime': [0.017380889, 0.017386653, 0.017391444, 0.017394542, 0.017397542, 0.017401306, 0.017404972, 0.017410778, 0.017416611, 0.017419458, 0.017423069, 0.017427597, 0.01743175, 0.017435333, 0.017437833, 0.017440694, 0.017444222, 0.017449514, 0.017455056, 0.017460583, 0.017463694, 0.017467236, 0.017470278, 0.017473861, 0.017478653, 0.0174825, 0.017488306, 0.017491111, 0.017497375, 0.017503167, 0.017506958, 0.017510806, 0.017516264, 0.017518681, 0.017522292, 0.017526153, 0.017528486, 0.017533958, 0.017539056, 0.017541931, 0.017547278, 0.017552861, 0.017557722, 0.01756025, 0.017565111, 0.017570083, 0.017576181, 0.017580278, 0.017584069, 0.017588222], 'diff': [0, 5.7639999999983815e-06, 4.791000000000517e-06, 3.0979999999999897e-06, 2.999999999999531e-06, 3.763999999999851e-06, 3.6660000000028614e-06, 5.805999999997091e-06, 5.833000000000227e-06, 2.847000000000266e-06, 3.611000000000586e-06, 4.528000000000171e-06, 4.152999999999796e-06, 3.583000000001446e-06, 2.4999999999990308e-06, 2.860999999999836e-06, 3.5279999999991707e-06, 5.292000000000491e-06, 5.542000000000741e-06, 5.526999999998228e-06, 3.111000000000086e-06, 3.54200000000221e-06, 3.0419999999982406e-06, 3.583000000001446e-06, 4.791999999999991e-06, 3.847000000001266e-06, 5.805999999997091e-06, 2.8050000000015562e-06, 6.2639999999988816e-06, 5.792000000000991e-06, 3.790999999999517e-06, 3.84800000000074e-06, 5.457999999999852e-06, 2.417000000001085e-06, 3.6109999999971165e-06, 3.861000000000836e-06, 2.333000000000196e-06, 5.471999999999422e-06, 5.09800000000199e-06, 2.874999999999406e-06, 5.346999999999297e-06, 5.582999999999977e-06, 4.861000000001836e-06, 2.5279999999981706e-06, 4.861000000001836e-06, 4.971999999998922e-06, 6.0979999999995205e-06, 4.097000000001516e-06, 3.790999999999517e-06, 4.152999999999796e-06], 'source_diff': [0, 5.7639999999983815e-06, 4.791000000000517e-06, 3.0979999999999897e-06, 2.999999999999531e-06, 3.763999999999851e-06, 3.6660000000028614e-06, 5.805999999997091e-06, 5.833000000000227e-06, 2.847000000000266e-06, 3.611000000000586e-06, 4.528000000000171e-06, 4.152999999999796e-06, 3.583000000001446e-06, 2.4999999999990308e-06, 2.860999999999836e-06, 3.5279999999991707e-06, 5.292000000000491e-06, 5.542000000000741e-06, 5.526999999998228e-06, 3.111000000000086e-06, 3.54200000000221e-06, 3.0419999999982406e-06, 3.583000000001446e-06, 4.791999999999991e-06, 3.847000000001266e-06, 5.805999999997091e-06, 2.8050000000015562e-06, 6.2639999999988816e-06, 5.792000000000991e-06, 3.790999999999517e-06, 3.84800000000074e-06, 5.457999999999852e-06, 2.417000000001085e-06, 3.6109999999971165e-06, 3.861000000000836e-06, 2.333000000000196e-06, 5.471999999999422e-06, 5.09800000000199e-06, 2.874999999999406e-06, 5.346999999999297e-06, 5.582999999999977e-06, 4.861000000001836e-06, 2.5279999999981706e-06, 4.861000000001836e-06, 4.971999999998922e-06, 6.0979999999995205e-06, 4.097000000001516e-06, 3.790999999999517e-06, 4.152999999999796e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:15.790" endtime="20201112 10:13:15.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.786" endtime="20201112 10:13:15.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:15.796" level="INFO">${RESULT} = [{'time': 0.017386653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.017394542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:15.793" endtime="20201112 10:13:15.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:15.804" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:15.797" endtime="20201112 10:13:15.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.808" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:15.807" endtime="20201112 10:13:15.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.810" level="INFO">VALUE: [5.7639999999983815e-06, 3.0979999999999897e-06, 3.763999999999851e-06, 5.805999999997091e-06, 2.847000000000266e-06, 4.528000000000171e-06, 3.583000000001446e-06, 2.860999999999836e-06, 5.292000000000491e-06, 5.526999999998228e-06, 3.54200000000221e-06, 3.583000000001446e-06, 3.847000000001266e-06, 2.8050000000015562e-06, 5.792000000000991e-06, 3.84800000000074e-06, 2.417000000001085e-06, 3.861000000000836e-06, 5.471999999999422e-06, 2.874999999999406e-06, 5.582999999999977e-06, 2.5279999999981706e-06, 4.971999999998922e-06, 4.097000000001516e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201112 10:13:15.809" endtime="20201112 10:13:15.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.805" endtime="20201112 10:13:15.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.814" endtime="20201112 10:13:15.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:15.817" endtime="20201112 10:13:15.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.816" endtime="20201112 10:13:15.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.812" endtime="20201112 10:13:15.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.451" endtime="20201112 10:13:15.838"></status>
</kw>
<msg timestamp="20201112 10:13:15.838" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.846" endtime="20201112 10:13:15.860"></status>
</kw>
<msg timestamp="20201112 10:13:15.861" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:15.845" endtime="20201112 10:13:15.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:15.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:15.862" endtime="20201112 10:13:15.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.864" endtime="20201112 10:13:15.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.842" endtime="20201112 10:13:15.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.840" endtime="20201112 10:13:15.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:15.873" endtime="20201112 10:13:16.137"></status>
</kw>
<msg timestamp="20201112 10:13:16.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018296931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018301903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:15.872" endtime="20201112 10:13:16.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018296931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018301903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:16.140" endtime="20201112 10:13:16.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.145" endtime="20201112 10:13:16.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.869" endtime="20201112 10:13:16.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.867" endtime="20201112 10:13:16.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.152" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:16.151" endtime="20201112 10:13:16.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.155" level="INFO">VALUE: [{'time': 0.018296931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018301903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018306944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.018312236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018317444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018320931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4869999999999346e-06, 'source_diff': 3.4869999999999346e-06}, {'time': 0.018327236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.018331444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018334917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.018340264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018344556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.018349097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.018352514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018358681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018364708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.018370333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.018373847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.018377944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018380667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.018383472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8050000000015562e-06, 'source_diff': 2.8050000000015562e-06}, {'time': 0.018387375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018393417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.018396389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018401306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018404833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.526999999999697e-06, 'source_diff': 3.526999999999697e-06}, {'time': 0.018408264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.431000000001655e-06, 'source_diff': 3.431000000001655e-06}, {'time': 0.018412917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018417819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.901999999997603e-06, 'source_diff': 4.901999999997603e-06}, {'time': 0.018421069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2500000000032503e-06, 'source_diff': 3.2500000000032503e-06}, {'time': 0.018425222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018429444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018433292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.018436708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018439556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.018443028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018448125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018453167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018457653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018461375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.018467292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.0184715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018475361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018479639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018483056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.018489292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018495458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.018499111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018504153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018506556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018509472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:16.153" endtime="20201112 10:13:16.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.148" endtime="20201112 10:13:16.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:16.170" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:16.158" endtime="20201112 10:13:16.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.174" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:16.173" endtime="20201112 10:13:16.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.177" level="INFO">VALUE: {'eventsourcetime': [0.018296931, 0.018301903, 0.018306944, 0.018312236, 0.018317444, 0.018320931, 0.018327236, 0.018331444, 0.018334917, 0.018340264, 0.018344556, 0.018349097, 0.018352514, 0.018358681, 0.018364708, 0.018370333, 0.018373847, 0.018377944, 0.018380667, 0.018383472, 0.018387375, 0.018393417, 0.018396389, 0.018401306, 0.018404833, 0.018408264, 0.018412917, 0.018417819, 0.018421069, 0.018425222, 0.018429444, 0.018433292, 0.018436708, 0.018439556, 0.018443028, 0.018448125, 0.018453167, 0.018457653, 0.018461375, 0.018467292, 0.0184715, 0.018475361, 0.018479639, 0.018483056, 0.018489292, 0.018495458, 0.018499111, 0.018504153, 0.018506556, 0.018509472], 'diff': [0, 4.972000000002391e-06, 5.040999999997298e-06, 5.292000000000491e-06, 5.207999999999602e-06, 3.4869999999999346e-06, 6.305000000001587e-06, 4.207999999998602e-06, 3.4730000000003647e-06, 5.346999999999297e-06, 4.29200000000296e-06, 4.541000000000267e-06, 3.4169999999986156e-06, 6.167000000001366e-06, 6.026999999998728e-06, 5.624999999998687e-06, 3.5139999999996008e-06, 4.097000000001516e-06, 2.7229999999996146e-06, 2.8050000000015562e-06, 3.902999999999546e-06, 6.041999999997771e-06, 2.972000000000391e-06, 4.917000000000116e-06, 3.526999999999697e-06, 3.431000000001655e-06, 4.653000000000296e-06, 4.901999999997603e-06, 3.2500000000032503e-06, 4.152999999999796e-06, 4.221999999998172e-06, 3.84800000000074e-06, 3.415999999999142e-06, 2.8479999999997396e-06, 3.472000000000891e-06, 5.096999999999047e-06, 5.042000000000241e-06, 4.486000000001461e-06, 3.7219999999976716e-06, 5.917000000001116e-06, 4.207999999998602e-06, 3.861000000000836e-06, 4.277999999999921e-06, 3.417000000002085e-06, 6.235999999999742e-06, 6.165999999998423e-06, 3.6529999999992957e-06, 5.042000000000241e-06, 2.403000000001515e-06, 2.915999999998642e-06], 'source_diff': [0, 4.972000000002391e-06, 5.040999999997298e-06, 5.292000000000491e-06, 5.207999999999602e-06, 3.4869999999999346e-06, 6.305000000001587e-06, 4.207999999998602e-06, 3.4730000000003647e-06, 5.346999999999297e-06, 4.29200000000296e-06, 4.541000000000267e-06, 3.4169999999986156e-06, 6.167000000001366e-06, 6.026999999998728e-06, 5.624999999998687e-06, 3.5139999999996008e-06, 4.097000000001516e-06, 2.7229999999996146e-06, 2.8050000000015562e-06, 3.902999999999546e-06, 6.041999999997771e-06, 2.972000000000391e-06, 4.917000000000116e-06, 3.526999999999697e-06, 3.431000000001655e-06, 4.653000000000296e-06, 4.901999999997603e-06, 3.2500000000032503e-06, 4.152999999999796e-06, 4.221999999998172e-06, 3.84800000000074e-06, 3.415999999999142e-06, 2.8479999999997396e-06, 3.472000000000891e-06, 5.096999999999047e-06, 5.042000000000241e-06, 4.486000000001461e-06, 3.7219999999976716e-06, 5.917000000001116e-06, 4.207999999998602e-06, 3.861000000000836e-06, 4.277999999999921e-06, 3.417000000002085e-06, 6.235999999999742e-06, 6.165999999998423e-06, 3.6529999999992957e-06, 5.042000000000241e-06, 2.403000000001515e-06, 2.915999999998642e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:16.175" endtime="20201112 10:13:16.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.171" endtime="20201112 10:13:16.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:16.182" level="INFO">${RESULT} = [{'time': 0.018301903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018312236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:16.179" endtime="20201112 10:13:16.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:16.190" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:16.183" endtime="20201112 10:13:16.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.194" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:16.193" endtime="20201112 10:13:16.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.196" level="INFO">VALUE: [4.972000000002391e-06, 5.292000000000491e-06, 3.4869999999999346e-06, 4.207999999998602e-06, 5.346999999999297e-06, 4.541000000000267e-06, 6.167000000001366e-06, 5.624999999998687e-06, 4.097000000001516e-06, 2.8050000000015562e-06, 6.041999999997771e-06, 4.917000000000116e-06, 3.431000000001655e-06, 4.901999999997603e-06, 4.152999999999796e-06, 3.84800000000074e-06, 2.8479999999997396e-06, 5.096999999999047e-06, 4.486000000001461e-06, 5.917000000001116e-06, 3.861000000000836e-06, 3.417000000002085e-06, 6.165999999998423e-06, 5.042000000000241e-06, 2.915999999998642e-06]</msg>
<status status="PASS" starttime="20201112 10:13:16.195" endtime="20201112 10:13:16.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.191" endtime="20201112 10:13:16.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.200" endtime="20201112 10:13:16.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:16.203" endtime="20201112 10:13:16.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.201" endtime="20201112 10:13:16.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.198" endtime="20201112 10:13:16.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:15.839" endtime="20201112 10:13:16.224"></status>
</kw>
<msg timestamp="20201112 10:13:16.224" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.232" endtime="20201112 10:13:16.247"></status>
</kw>
<msg timestamp="20201112 10:13:16.247" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:16.231" endtime="20201112 10:13:16.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.250" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:16.248" endtime="20201112 10:13:16.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.251" endtime="20201112 10:13:16.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.228" endtime="20201112 10:13:16.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.226" endtime="20201112 10:13:16.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.260" endtime="20201112 10:13:16.524"></status>
</kw>
<msg timestamp="20201112 10:13:16.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018255917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:16.258" endtime="20201112 10:13:16.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018255917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:16.527" endtime="20201112 10:13:16.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.532" endtime="20201112 10:13:16.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.256" endtime="20201112 10:13:16.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.254" endtime="20201112 10:13:16.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.538" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:16.537" endtime="20201112 10:13:16.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.542" level="INFO">VALUE: [{'time': 0.018255917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018258708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.018263125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.417000000003085e-06, 'source_diff': 4.417000000003085e-06}, {'time': 0.018266028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018270444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018276472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018280222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018282931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.018285847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.01828975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018294361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018300583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018305056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.018307806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018312833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.018318111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018322333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018328319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018333403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.018338139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.018341625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018345903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018349556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018354194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.638000000001252e-06, 'source_diff': 4.638000000001252e-06}, {'time': 0.018358319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.018360792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.018365403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018368389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018371417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.018375514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018378569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.018383403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.0183875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018390847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.018396889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018402361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018406528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018412444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.018416972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018422306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3339999999992005e-06, 'source_diff': 5.3339999999992005e-06}, {'time': 0.018428264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018432028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.018437944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.018440875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9309999999976855e-06, 'source_diff': 2.9309999999976855e-06}, {'time': 0.018445972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018451375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999997576e-06, 'source_diff': 5.402999999997576e-06}, {'time': 0.018454264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.889000000002445e-06, 'source_diff': 2.889000000002445e-06}, {'time': 0.018459403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1389999999977565e-06, 'source_diff': 5.1389999999977565e-06}, {'time': 0.018465292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.018469153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:16.540" endtime="20201112 10:13:16.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.535" endtime="20201112 10:13:16.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:16.557" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:16.544" endtime="20201112 10:13:16.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.561" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:16.560" endtime="20201112 10:13:16.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.564" level="INFO">VALUE: {'eventsourcetime': [0.018255917, 0.018258708, 0.018263125, 0.018266028, 0.018270444, 0.018276472, 0.018280222, 0.018282931, 0.018285847, 0.01828975, 0.018294361, 0.018300583, 0.018305056, 0.018307806, 0.018312833, 0.018318111, 0.018322333, 0.018328319, 0.018333403, 0.018338139, 0.018341625, 0.018345903, 0.018349556, 0.018354194, 0.018358319, 0.018360792, 0.018365403, 0.018368389, 0.018371417, 0.018375514, 0.018378569, 0.018383403, 0.0183875, 0.018390847, 0.018396889, 0.018402361, 0.018406528, 0.018412444, 0.018416972, 0.018422306, 0.018428264, 0.018432028, 0.018437944, 0.018440875, 0.018445972, 0.018451375, 0.018454264, 0.018459403, 0.018465292, 0.018469153], 'diff': [0, 2.790999999998517e-06, 4.417000000003085e-06, 2.9029999999985456e-06, 4.416000000000142e-06, 6.0279999999982015e-06, 3.750000000000281e-06, 2.7090000000000447e-06, 2.9160000000021113e-06, 3.902999999999546e-06, 4.610999999998117e-06, 6.222000000000172e-06, 4.473000000001365e-06, 2.749999999999281e-06, 5.027000000001197e-06, 5.278000000000921e-06, 4.221999999998172e-06, 5.985999999999492e-06, 5.08400000000242e-06, 4.735999999998242e-06, 3.486000000000461e-06, 4.277999999999921e-06, 3.6529999999992957e-06, 4.638000000001252e-06, 4.125000000000656e-06, 2.4729999999993646e-06, 4.610999999998117e-06, 2.985999999999961e-06, 3.02800000000214e-06, 4.096999999998047e-06, 3.0550000000018063e-06, 4.8339999999987004e-06, 4.097000000001516e-06, 3.3469999999972966e-06, 6.042000000001241e-06, 5.471999999999422e-06, 4.166999999999366e-06, 5.916000000001642e-06, 4.528000000000171e-06, 5.3339999999992005e-06, 5.958000000000352e-06, 3.763999999999851e-06, 5.916000000001642e-06, 2.9309999999976855e-06, 5.097000000002516e-06, 5.402999999997576e-06, 2.889000000002445e-06, 5.1389999999977565e-06, 5.889000000001976e-06, 3.8609999999973665e-06], 'source_diff': [0, 2.790999999998517e-06, 4.417000000003085e-06, 2.9029999999985456e-06, 4.416000000000142e-06, 6.0279999999982015e-06, 3.750000000000281e-06, 2.7090000000000447e-06, 2.9160000000021113e-06, 3.902999999999546e-06, 4.610999999998117e-06, 6.222000000000172e-06, 4.473000000001365e-06, 2.749999999999281e-06, 5.027000000001197e-06, 5.278000000000921e-06, 4.221999999998172e-06, 5.985999999999492e-06, 5.08400000000242e-06, 4.735999999998242e-06, 3.486000000000461e-06, 4.277999999999921e-06, 3.6529999999992957e-06, 4.638000000001252e-06, 4.125000000000656e-06, 2.4729999999993646e-06, 4.610999999998117e-06, 2.985999999999961e-06, 3.02800000000214e-06, 4.096999999998047e-06, 3.0550000000018063e-06, 4.8339999999987004e-06, 4.097000000001516e-06, 3.3469999999972966e-06, 6.042000000001241e-06, 5.471999999999422e-06, 4.166999999999366e-06, 5.916000000001642e-06, 4.528000000000171e-06, 5.3339999999992005e-06, 5.958000000000352e-06, 3.763999999999851e-06, 5.916000000001642e-06, 2.9309999999976855e-06, 5.097000000002516e-06, 5.402999999997576e-06, 2.889000000002445e-06, 5.1389999999977565e-06, 5.889000000001976e-06, 3.8609999999973665e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:16.562" endtime="20201112 10:13:16.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.558" endtime="20201112 10:13:16.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:16.568" level="INFO">${RESULT} = [{'time': 0.018258708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.018266028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:16.566" endtime="20201112 10:13:16.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:16.577" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:16.569" endtime="20201112 10:13:16.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.581" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:16.580" endtime="20201112 10:13:16.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.583" level="INFO">VALUE: [2.790999999998517e-06, 2.9029999999985456e-06, 6.0279999999982015e-06, 2.7090000000000447e-06, 3.902999999999546e-06, 6.222000000000172e-06, 2.749999999999281e-06, 5.278000000000921e-06, 5.985999999999492e-06, 4.735999999998242e-06, 4.277999999999921e-06, 4.638000000001252e-06, 2.4729999999993646e-06, 2.985999999999961e-06, 4.096999999998047e-06, 4.8339999999987004e-06, 3.3469999999972966e-06, 5.471999999999422e-06, 5.916000000001642e-06, 5.3339999999992005e-06, 3.763999999999851e-06, 2.9309999999976855e-06, 5.402999999997576e-06, 5.1389999999977565e-06, 3.8609999999973665e-06]</msg>
<status status="PASS" starttime="20201112 10:13:16.582" endtime="20201112 10:13:16.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.578" endtime="20201112 10:13:16.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.587" endtime="20201112 10:13:16.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:16.590" endtime="20201112 10:13:16.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.589" endtime="20201112 10:13:16.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.585" endtime="20201112 10:13:16.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.225" endtime="20201112 10:13:16.611"></status>
</kw>
<msg timestamp="20201112 10:13:16.611" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.618" endtime="20201112 10:13:16.633"></status>
</kw>
<msg timestamp="20201112 10:13:16.634" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:16.617" endtime="20201112 10:13:16.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.636" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:16.635" endtime="20201112 10:13:16.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.637" endtime="20201112 10:13:16.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.614" endtime="20201112 10:13:16.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.613" endtime="20201112 10:13:16.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.647" endtime="20201112 10:13:16.911"></status>
</kw>
<msg timestamp="20201112 10:13:16.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017365639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017370986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:16.645" endtime="20201112 10:13:16.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017365639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017370986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:16.914" endtime="20201112 10:13:16.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.919" endtime="20201112 10:13:16.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.642" endtime="20201112 10:13:16.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.640" endtime="20201112 10:13:16.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.925" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:16.924" endtime="20201112 10:13:16.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.929" level="INFO">VALUE: [{'time': 0.017365639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017370986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017374889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017379556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017382903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017389069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.017394056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.987000000001435e-06, 'source_diff': 4.987000000001435e-06}, {'time': 0.017399278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.01740225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.01740575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.017411097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017414486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017416958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017423, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017426236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.017432514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017438806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.017443917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017448, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.017454236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017460014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.017463806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.017466778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017470194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}, {'time': 0.017472583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.017476389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8059999999985605e-06, 'source_diff': 3.8059999999985605e-06}, {'time': 0.017478819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.017483653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017488333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.017493306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.017499222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.017503556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.017507111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.017511819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.708000000002571e-06, 'source_diff': 4.708000000002571e-06}, {'time': 0.017517667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.017521403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017526625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.017531347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017536819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017540806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.987000000000435e-06, 'source_diff': 3.987000000000435e-06}, {'time': 0.017545653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017551278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.017557472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.017561389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017565236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017571458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017577, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.017580361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017584514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.017590306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:16.926" endtime="20201112 10:13:16.930"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.922" endtime="20201112 10:13:16.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:16.945" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:16.931" endtime="20201112 10:13:16.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.949" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:16.948" endtime="20201112 10:13:16.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.952" level="INFO">VALUE: {'eventsourcetime': [0.017365639, 0.017370986, 0.017374889, 0.017379556, 0.017382903, 0.017389069, 0.017394056, 0.017399278, 0.01740225, 0.01740575, 0.017411097, 0.017414486, 0.017416958, 0.017423, 0.017426236, 0.017432514, 0.017438806, 0.017443917, 0.017448, 0.017454236, 0.017460014, 0.017463806, 0.017466778, 0.017470194, 0.017472583, 0.017476389, 0.017478819, 0.017483653, 0.017488333, 0.017493306, 0.017499222, 0.017503556, 0.017507111, 0.017511819, 0.017517667, 0.017521403, 0.017526625, 0.017531347, 0.017536819, 0.017540806, 0.017545653, 0.017551278, 0.017557472, 0.017561389, 0.017565236, 0.017571458, 0.017577, 0.017580361, 0.017584514, 0.017590306], 'diff': [0, 5.347000000002766e-06, 3.902999999999546e-06, 4.666999999999866e-06, 3.347000000000766e-06, 6.165999999998423e-06, 4.987000000001435e-06, 5.221999999999172e-06, 2.972000000000391e-06, 3.500000000000031e-06, 5.346999999999297e-06, 3.3889999999994758e-06, 2.471999999999891e-06, 6.042000000001241e-06, 3.236000000000211e-06, 6.2779999999984515e-06, 6.292000000001491e-06, 5.110999999998617e-06, 4.083000000001946e-06, 6.235999999999742e-06, 5.7779999999979514e-06, 3.7919999999989906e-06, 2.972000000000391e-06, 3.4160000000026114e-06, 2.3889999999984757e-06, 3.8059999999985605e-06, 2.4300000000011812e-06, 4.8339999999987004e-06, 4.679999999999962e-06, 4.973000000001865e-06, 5.915999999998173e-06, 4.33400000000167e-06, 3.554999999998837e-06, 4.708000000002571e-06, 5.8479999999992704e-06, 3.736000000000711e-06, 5.221999999999172e-06, 4.721999999998672e-06, 5.471999999999422e-06, 3.987000000000435e-06, 4.847000000002266e-06, 5.624999999998687e-06, 6.194000000001032e-06, 3.916999999999116e-06, 3.847000000001266e-06, 6.222000000000172e-06, 5.541999999997271e-06, 3.361000000000336e-06, 4.152999999999796e-06, 5.792000000000991e-06], 'source_diff': [0, 5.347000000002766e-06, 3.902999999999546e-06, 4.666999999999866e-06, 3.347000000000766e-06, 6.165999999998423e-06, 4.987000000001435e-06, 5.221999999999172e-06, 2.972000000000391e-06, 3.500000000000031e-06, 5.346999999999297e-06, 3.3889999999994758e-06, 2.471999999999891e-06, 6.042000000001241e-06, 3.236000000000211e-06, 6.2779999999984515e-06, 6.292000000001491e-06, 5.110999999998617e-06, 4.083000000001946e-06, 6.235999999999742e-06, 5.7779999999979514e-06, 3.7919999999989906e-06, 2.972000000000391e-06, 3.4160000000026114e-06, 2.3889999999984757e-06, 3.8059999999985605e-06, 2.4300000000011812e-06, 4.8339999999987004e-06, 4.679999999999962e-06, 4.973000000001865e-06, 5.915999999998173e-06, 4.33400000000167e-06, 3.554999999998837e-06, 4.708000000002571e-06, 5.8479999999992704e-06, 3.736000000000711e-06, 5.221999999999172e-06, 4.721999999998672e-06, 5.471999999999422e-06, 3.987000000000435e-06, 4.847000000002266e-06, 5.624999999998687e-06, 6.194000000001032e-06, 3.916999999999116e-06, 3.847000000001266e-06, 6.222000000000172e-06, 5.541999999997271e-06, 3.361000000000336e-06, 4.152999999999796e-06, 5.792000000000991e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:16.950" endtime="20201112 10:13:16.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.946" endtime="20201112 10:13:16.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:16.956" level="INFO">${RESULT} = [{'time': 0.017370986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017379556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:16.954" endtime="20201112 10:13:16.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:16.964" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:16.957" endtime="20201112 10:13:16.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.969" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:16.967" endtime="20201112 10:13:16.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:16.971" level="INFO">VALUE: [5.347000000002766e-06, 4.666999999999866e-06, 6.165999999998423e-06, 5.221999999999172e-06, 3.500000000000031e-06, 3.3889999999994758e-06, 6.042000000001241e-06, 6.2779999999984515e-06, 5.110999999998617e-06, 6.235999999999742e-06, 3.7919999999989906e-06, 3.4160000000026114e-06, 3.8059999999985605e-06, 4.8339999999987004e-06, 4.973000000001865e-06, 4.33400000000167e-06, 4.708000000002571e-06, 3.736000000000711e-06, 4.721999999998672e-06, 3.987000000000435e-06, 5.624999999998687e-06, 3.916999999999116e-06, 6.222000000000172e-06, 3.361000000000336e-06, 5.792000000000991e-06]</msg>
<status status="PASS" starttime="20201112 10:13:16.970" endtime="20201112 10:13:16.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.965" endtime="20201112 10:13:16.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:16.974" endtime="20201112 10:13:16.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:16.977" endtime="20201112 10:13:16.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.976" endtime="20201112 10:13:16.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.973" endtime="20201112 10:13:16.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.611" endtime="20201112 10:13:16.998"></status>
</kw>
<msg timestamp="20201112 10:13:16.998" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.006" endtime="20201112 10:13:17.020"></status>
</kw>
<msg timestamp="20201112 10:13:17.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:17.004" endtime="20201112 10:13:17.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:17.021" endtime="20201112 10:13:17.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.024" endtime="20201112 10:13:17.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.002" endtime="20201112 10:13:17.026"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.000" endtime="20201112 10:13:17.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.033" endtime="20201112 10:13:17.297"></status>
</kw>
<msg timestamp="20201112 10:13:17.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017370056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017373458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:17.031" endtime="20201112 10:13:17.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017370056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017373458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:17.300" endtime="20201112 10:13:17.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.305" endtime="20201112 10:13:17.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.028" endtime="20201112 10:13:17.308"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.027" endtime="20201112 10:13:17.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.312" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:17.311" endtime="20201112 10:13:17.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.316" level="INFO">VALUE: [{'time': 0.017370056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017373458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4020000000030415e-06, 'source_diff': 3.4020000000030415e-06}, {'time': 0.017378236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.017382181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.945000000001725e-06, 'source_diff': 3.945000000001725e-06}, {'time': 0.017384944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.762999999999377e-06, 'source_diff': 2.762999999999377e-06}, {'time': 0.017387917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.017391639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017396069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.017402278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.017405375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017411542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.017416264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017420931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017425403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017430167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.017434167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017438597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.017444417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.017449528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.01745425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017460236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017464208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.017466931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.723000000003084e-06, 'source_diff': 2.723000000003084e-06}, {'time': 0.017473222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.017476014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.017481736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017486028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.01748875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017491556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8059999999975604e-06, 'source_diff': 2.8059999999975604e-06}, {'time': 0.017497153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.017500806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017505847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.017511694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017517792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0979999999995205e-06, 'source_diff': 6.0979999999995205e-06}, {'time': 0.017523653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017526069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415999999998142e-06, 'source_diff': 2.415999999998142e-06}, {'time': 0.017529708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6390000000031952e-06, 'source_diff': 3.6390000000031952e-06}, {'time': 0.0175345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017538292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.017542903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017548431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.017554347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.017560444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017563736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.017566958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017571681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722999999998145e-06, 'source_diff': 4.722999999998145e-06}, {'time': 0.017576542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.017579, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017583361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.017588708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:17.313" endtime="20201112 10:13:17.317"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.309" endtime="20201112 10:13:17.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:17.331" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:17.318" endtime="20201112 10:13:17.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.335" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:17.334" endtime="20201112 10:13:17.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.338" level="INFO">VALUE: {'eventsourcetime': [0.017370056, 0.017373458, 0.017378236, 0.017382181, 0.017384944, 0.017387917, 0.017391639, 0.017396069, 0.017402278, 0.017405375, 0.017411542, 0.017416264, 0.017420931, 0.017425403, 0.017430167, 0.017434167, 0.017438597, 0.017444417, 0.017449528, 0.01745425, 0.017460236, 0.017464208, 0.017466931, 0.017473222, 0.017476014, 0.017481736, 0.017486028, 0.01748875, 0.017491556, 0.017497153, 0.017500806, 0.017505847, 0.017511694, 0.017517792, 0.017523653, 0.017526069, 0.017529708, 0.0175345, 0.017538292, 0.017542903, 0.017548431, 0.017554347, 0.017560444, 0.017563736, 0.017566958, 0.017571681, 0.017576542, 0.017579, 0.017583361, 0.017588708], 'diff': [0, 3.4020000000030415e-06, 4.777999999996951e-06, 3.945000000001725e-06, 2.762999999999377e-06, 2.9729999999998646e-06, 3.722000000001141e-06, 4.429999999999712e-06, 6.2090000000000756e-06, 3.097000000000516e-06, 6.166999999997896e-06, 4.722000000002141e-06, 4.666999999999866e-06, 4.471999999998422e-06, 4.764000000000851e-06, 4.000000000000531e-06, 4.429999999999712e-06, 5.820000000000131e-06, 5.110999999998617e-06, 4.722000000002141e-06, 5.985999999999492e-06, 3.971999999997922e-06, 2.723000000003084e-06, 6.290999999998548e-06, 2.79200000000146e-06, 5.721999999999672e-06, 4.291999999999491e-06, 2.722000000000141e-06, 2.8059999999975604e-06, 5.597000000003016e-06, 3.6529999999992957e-06, 5.041000000000767e-06, 5.846999999999797e-06, 6.0979999999995205e-06, 5.860999999999367e-06, 2.415999999998142e-06, 3.6390000000031952e-06, 4.791999999999991e-06, 3.7919999999989906e-06, 4.610999999998117e-06, 5.528000000001171e-06, 5.916000000001642e-06, 6.097000000000047e-06, 3.2919999999984906e-06, 3.222000000000641e-06, 4.722999999998145e-06, 4.861000000001836e-06, 2.458000000000321e-06, 4.360999999997867e-06, 5.347000000002766e-06], 'source_diff': [0, 3.4020000000030415e-06, 4.777999999996951e-06, 3.945000000001725e-06, 2.762999999999377e-06, 2.9729999999998646e-06, 3.722000000001141e-06, 4.429999999999712e-06, 6.2090000000000756e-06, 3.097000000000516e-06, 6.166999999997896e-06, 4.722000000002141e-06, 4.666999999999866e-06, 4.471999999998422e-06, 4.764000000000851e-06, 4.000000000000531e-06, 4.429999999999712e-06, 5.820000000000131e-06, 5.110999999998617e-06, 4.722000000002141e-06, 5.985999999999492e-06, 3.971999999997922e-06, 2.723000000003084e-06, 6.290999999998548e-06, 2.79200000000146e-06, 5.721999999999672e-06, 4.291999999999491e-06, 2.722000000000141e-06, 2.8059999999975604e-06, 5.597000000003016e-06, 3.6529999999992957e-06, 5.041000000000767e-06, 5.846999999999797e-06, 6.0979999999995205e-06, 5.860999999999367e-06, 2.415999999998142e-06, 3.6390000000031952e-06, 4.791999999999991e-06, 3.7919999999989906e-06, 4.610999999998117e-06, 5.528000000001171e-06, 5.916000000001642e-06, 6.097000000000047e-06, 3.2919999999984906e-06, 3.222000000000641e-06, 4.722999999998145e-06, 4.861000000001836e-06, 2.458000000000321e-06, 4.360999999997867e-06, 5.347000000002766e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:17.336" endtime="20201112 10:13:17.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.332" endtime="20201112 10:13:17.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:17.342" level="INFO">${RESULT} = [{'time': 0.017373458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4020000000030415e-06, 'source_diff': 3.4020000000030415e-06}, {'time': 0.017382181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:17.340" endtime="20201112 10:13:17.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:17.350" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:17.343" endtime="20201112 10:13:17.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.354" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:17.353" endtime="20201112 10:13:17.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.356" level="INFO">VALUE: [3.4020000000030415e-06, 3.945000000001725e-06, 2.9729999999998646e-06, 4.429999999999712e-06, 3.097000000000516e-06, 4.722000000002141e-06, 4.471999999998422e-06, 4.000000000000531e-06, 5.820000000000131e-06, 4.722000000002141e-06, 3.971999999997922e-06, 6.290999999998548e-06, 5.721999999999672e-06, 2.722000000000141e-06, 5.597000000003016e-06, 5.041000000000767e-06, 6.0979999999995205e-06, 2.415999999998142e-06, 4.791999999999991e-06, 4.610999999998117e-06, 5.916000000001642e-06, 3.2919999999984906e-06, 4.722999999998145e-06, 2.458000000000321e-06, 5.347000000002766e-06]</msg>
<status status="PASS" starttime="20201112 10:13:17.355" endtime="20201112 10:13:17.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.351" endtime="20201112 10:13:17.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.360" endtime="20201112 10:13:17.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:17.363" endtime="20201112 10:13:17.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.362" endtime="20201112 10:13:17.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.358" endtime="20201112 10:13:17.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:16.999" endtime="20201112 10:13:17.384"></status>
</kw>
<msg timestamp="20201112 10:13:17.384" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.392" endtime="20201112 10:13:17.406"></status>
</kw>
<msg timestamp="20201112 10:13:17.407" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:17.390" endtime="20201112 10:13:17.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.409" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:17.408" endtime="20201112 10:13:17.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.410" endtime="20201112 10:13:17.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.388" endtime="20201112 10:13:17.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.386" endtime="20201112 10:13:17.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.420" endtime="20201112 10:13:17.687"></status>
</kw>
<msg timestamp="20201112 10:13:17.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017545444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:17.418" endtime="20201112 10:13:17.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017542847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017545444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:17.690" endtime="20201112 10:13:17.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.695" endtime="20201112 10:13:17.697"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.415" endtime="20201112 10:13:17.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.413" endtime="20201112 10:13:17.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.702" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:17.701" endtime="20201112 10:13:17.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.705" level="INFO">VALUE: [{'time': 0.017542847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017545444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.017549861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017555458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017560875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.017564972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017569931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.017574306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.017579153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.01758525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017588597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017593083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.017595931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.017599278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.0176035, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017606417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.017608847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.017612194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017615778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5839999999974503e-06, 'source_diff': 3.5839999999974503e-06}, {'time': 0.0176195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017623361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017627458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017630875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.017637111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017639458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017643986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017649958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017654806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.017660236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.017664264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017667792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017670528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.0176765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017679972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.017684819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.017689417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.59799999999802e-06, 'source_diff': 4.59799999999802e-06}, {'time': 0.017693667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.017697625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.017702792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166999999996896e-06, 'source_diff': 5.166999999996896e-06}, {'time': 0.017707861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.068999999999907e-06, 'source_diff': 5.068999999999907e-06}, {'time': 0.017711625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.017715375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7499999999968114e-06, 'source_diff': 3.7499999999968114e-06}, {'time': 0.017719375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.017722472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017728514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017733486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017739278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017743264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017746931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.017752042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:17.703" endtime="20201112 10:13:17.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.699" endtime="20201112 10:13:17.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:17.720" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:17.708" endtime="20201112 10:13:17.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.724" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:17.723" endtime="20201112 10:13:17.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.727" level="INFO">VALUE: {'eventsourcetime': [0.017542847, 0.017545444, 0.017549861, 0.017555458, 0.017560875, 0.017564972, 0.017569931, 0.017574306, 0.017579153, 0.01758525, 0.017588597, 0.017593083, 0.017595931, 0.017599278, 0.0176035, 0.017606417, 0.017608847, 0.017612194, 0.017615778, 0.0176195, 0.017623361, 0.017627458, 0.017630875, 0.017637111, 0.017639458, 0.017643986, 0.017649958, 0.017654806, 0.017660236, 0.017664264, 0.017667792, 0.017670528, 0.0176765, 0.017679972, 0.017684819, 0.017689417, 0.017693667, 0.017697625, 0.017702792, 0.017707861, 0.017711625, 0.017715375, 0.017719375, 0.017722472, 0.017728514, 0.017733486, 0.017739278, 0.017743264, 0.017746931, 0.017752042], 'diff': [0, 2.597000000000016e-06, 4.416999999999616e-06, 5.596999999999547e-06, 5.417000000000616e-06, 4.097000000001516e-06, 4.9589999999988255e-06, 4.375000000000906e-06, 4.846999999998797e-06, 6.097000000000047e-06, 3.347000000000766e-06, 4.485999999997992e-06, 2.8479999999997396e-06, 3.347000000000766e-06, 4.222000000001641e-06, 2.9169999999981155e-06, 2.4300000000011812e-06, 3.347000000000766e-06, 3.5839999999974503e-06, 3.722000000001141e-06, 3.861000000000836e-06, 4.096999999998047e-06, 3.417000000002085e-06, 6.235999999999742e-06, 2.346999999999766e-06, 4.528000000000171e-06, 5.971999999999922e-06, 4.84799999999827e-06, 5.430000000000712e-06, 4.027999999999671e-06, 3.52800000000264e-06, 2.735999999999711e-06, 5.971999999999922e-06, 3.4719999999974216e-06, 4.847000000002266e-06, 4.59799999999802e-06, 4.250000000000781e-06, 3.958000000001821e-06, 5.166999999996896e-06, 5.068999999999907e-06, 3.7640000000033202e-06, 3.7499999999968114e-06, 4.000000000000531e-06, 3.097000000000516e-06, 6.042000000001241e-06, 4.971999999998922e-06, 5.792000000000991e-06, 3.986000000000961e-06, 3.6669999999988656e-06, 5.110999999998617e-06], 'source_diff': [0, 2.597000000000016e-06, 4.416999999999616e-06, 5.596999999999547e-06, 5.417000000000616e-06, 4.097000000001516e-06, 4.9589999999988255e-06, 4.375000000000906e-06, 4.846999999998797e-06, 6.097000000000047e-06, 3.347000000000766e-06, 4.485999999997992e-06, 2.8479999999997396e-06, 3.347000000000766e-06, 4.222000000001641e-06, 2.9169999999981155e-06, 2.4300000000011812e-06, 3.347000000000766e-06, 3.5839999999974503e-06, 3.722000000001141e-06, 3.861000000000836e-06, 4.096999999998047e-06, 3.417000000002085e-06, 6.235999999999742e-06, 2.346999999999766e-06, 4.528000000000171e-06, 5.971999999999922e-06, 4.84799999999827e-06, 5.430000000000712e-06, 4.027999999999671e-06, 3.52800000000264e-06, 2.735999999999711e-06, 5.971999999999922e-06, 3.4719999999974216e-06, 4.847000000002266e-06, 4.59799999999802e-06, 4.250000000000781e-06, 3.958000000001821e-06, 5.166999999996896e-06, 5.068999999999907e-06, 3.7640000000033202e-06, 3.7499999999968114e-06, 4.000000000000531e-06, 3.097000000000516e-06, 6.042000000001241e-06, 4.971999999998922e-06, 5.792000000000991e-06, 3.986000000000961e-06, 3.6669999999988656e-06, 5.110999999998617e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:17.725" endtime="20201112 10:13:17.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.721" endtime="20201112 10:13:17.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:17.732" level="INFO">${RESULT} = [{'time': 0.017545444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.017555458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:17.729" endtime="20201112 10:13:17.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:17.740" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:17.733" endtime="20201112 10:13:17.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.744" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:17.743" endtime="20201112 10:13:17.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.746" level="INFO">VALUE: [2.597000000000016e-06, 5.596999999999547e-06, 4.097000000001516e-06, 4.375000000000906e-06, 6.097000000000047e-06, 4.485999999997992e-06, 3.347000000000766e-06, 2.9169999999981155e-06, 3.347000000000766e-06, 3.722000000001141e-06, 4.096999999998047e-06, 6.235999999999742e-06, 4.528000000000171e-06, 4.84799999999827e-06, 4.027999999999671e-06, 2.735999999999711e-06, 3.4719999999974216e-06, 4.59799999999802e-06, 3.958000000001821e-06, 5.068999999999907e-06, 3.7499999999968114e-06, 3.097000000000516e-06, 4.971999999998922e-06, 3.986000000000961e-06, 5.110999999998617e-06]</msg>
<status status="PASS" starttime="20201112 10:13:17.745" endtime="20201112 10:13:17.747"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.741" endtime="20201112 10:13:17.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.749" endtime="20201112 10:13:17.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:17.753" endtime="20201112 10:13:17.772"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.751" endtime="20201112 10:13:17.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.748" endtime="20201112 10:13:17.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.385" endtime="20201112 10:13:17.773"></status>
</kw>
<msg timestamp="20201112 10:13:17.774" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.781" endtime="20201112 10:13:17.795"></status>
</kw>
<msg timestamp="20201112 10:13:17.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:17.780" endtime="20201112 10:13:17.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:17.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:17.797" endtime="20201112 10:13:17.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.799" endtime="20201112 10:13:17.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.777" endtime="20201112 10:13:17.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.775" endtime="20201112 10:13:17.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:17.809" endtime="20201112 10:13:18.075"></status>
</kw>
<msg timestamp="20201112 10:13:18.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017509722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:17.807" endtime="20201112 10:13:18.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017505625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017509722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:18.078" endtime="20201112 10:13:18.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.083" endtime="20201112 10:13:18.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.805" endtime="20201112 10:13:18.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.803" endtime="20201112 10:13:18.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.090" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:18.089" endtime="20201112 10:13:18.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.093" level="INFO">VALUE: [{'time': 0.017505625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017509722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017515889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017520194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.017524333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.017529681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.017532722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.017537764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.0175415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017544222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017548194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.017553861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.017558736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.017562694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.017566542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.017570444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.017576417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.017580528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017586681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.017591222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.01759625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.017601986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.017604889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017608556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.667000000002335e-06, 'source_diff': 3.667000000002335e-06}, {'time': 0.017614472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.017617889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.017620361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017625264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017630181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017634472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017639194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017642792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.017648042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.017651556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.017654097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.017659069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017664306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.237000000001685e-06, 'source_diff': 5.237000000001685e-06}, {'time': 0.017669278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017673875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017677792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.017680833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.017683361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017688778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.017693444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.017696792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.017700389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017703319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.017709403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017714569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.017717542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:18.091" endtime="20201112 10:13:18.094"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.086" endtime="20201112 10:13:18.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:18.109" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:18.095" endtime="20201112 10:13:18.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.113" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:18.112" endtime="20201112 10:13:18.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.116" level="INFO">VALUE: {'eventsourcetime': [0.017505625, 0.017509722, 0.017515889, 0.017520194, 0.017524333, 0.017529681, 0.017532722, 0.017537764, 0.0175415, 0.017544222, 0.017548194, 0.017553861, 0.017558736, 0.017562694, 0.017566542, 0.017570444, 0.017576417, 0.017580528, 0.017586681, 0.017591222, 0.01759625, 0.017601986, 0.017604889, 0.017608556, 0.017614472, 0.017617889, 0.017620361, 0.017625264, 0.017630181, 0.017634472, 0.017639194, 0.017642792, 0.017648042, 0.017651556, 0.017654097, 0.017659069, 0.017664306, 0.017669278, 0.017673875, 0.017677792, 0.017680833, 0.017683361, 0.017688778, 0.017693444, 0.017696792, 0.017700389, 0.017703319, 0.017709403, 0.017714569, 0.017717542], 'diff': [0, 4.096999999998047e-06, 6.167000000001366e-06, 4.304999999999587e-06, 4.139000000000226e-06, 5.34799999999877e-06, 3.0410000000022364e-06, 5.042000000000241e-06, 3.736000000000711e-06, 2.722000000000141e-06, 3.971999999997922e-06, 5.667000000000866e-06, 4.8749999999979365e-06, 3.958000000001821e-06, 3.84800000000074e-06, 3.902000000000072e-06, 5.9729999999993955e-06, 4.111000000001086e-06, 6.1529999999983265e-06, 4.541000000000267e-06, 5.028000000000671e-06, 5.735999999999242e-06, 2.9029999999985456e-06, 3.667000000002335e-06, 5.915999999998173e-06, 3.417000000002085e-06, 2.471999999999891e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.291000000000017e-06, 4.721999999998672e-06, 3.5980000000004897e-06, 5.2499999999983116e-06, 3.5139999999996008e-06, 2.5410000000017363e-06, 4.971999999998922e-06, 5.237000000001685e-06, 4.971999999998922e-06, 4.596999999998547e-06, 3.917000000002585e-06, 3.040999999998767e-06, 2.52800000000164e-06, 5.416999999997146e-06, 4.666000000000392e-06, 3.3480000000002397e-06, 3.597000000001016e-06, 2.929999999998212e-06, 6.0839999999999506e-06, 5.166000000000892e-06, 2.9729999999998646e-06], 'source_diff': [0, 4.096999999998047e-06, 6.167000000001366e-06, 4.304999999999587e-06, 4.139000000000226e-06, 5.34799999999877e-06, 3.0410000000022364e-06, 5.042000000000241e-06, 3.736000000000711e-06, 2.722000000000141e-06, 3.971999999997922e-06, 5.667000000000866e-06, 4.8749999999979365e-06, 3.958000000001821e-06, 3.84800000000074e-06, 3.902000000000072e-06, 5.9729999999993955e-06, 4.111000000001086e-06, 6.1529999999983265e-06, 4.541000000000267e-06, 5.028000000000671e-06, 5.735999999999242e-06, 2.9029999999985456e-06, 3.667000000002335e-06, 5.915999999998173e-06, 3.417000000002085e-06, 2.471999999999891e-06, 4.903000000000546e-06, 4.917000000000116e-06, 4.291000000000017e-06, 4.721999999998672e-06, 3.5980000000004897e-06, 5.2499999999983116e-06, 3.5139999999996008e-06, 2.5410000000017363e-06, 4.971999999998922e-06, 5.237000000001685e-06, 4.971999999998922e-06, 4.596999999998547e-06, 3.917000000002585e-06, 3.040999999998767e-06, 2.52800000000164e-06, 5.416999999997146e-06, 4.666000000000392e-06, 3.3480000000002397e-06, 3.597000000001016e-06, 2.929999999998212e-06, 6.0839999999999506e-06, 5.166000000000892e-06, 2.9729999999998646e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:18.114" endtime="20201112 10:13:18.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.110" endtime="20201112 10:13:18.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:18.120" level="INFO">${RESULT} = [{'time': 0.017509722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017520194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:18.118" endtime="20201112 10:13:18.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:18.128" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:18.121" endtime="20201112 10:13:18.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.132" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:18.131" endtime="20201112 10:13:18.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.135" level="INFO">VALUE: [4.096999999998047e-06, 4.304999999999587e-06, 5.34799999999877e-06, 5.042000000000241e-06, 2.722000000000141e-06, 5.667000000000866e-06, 3.958000000001821e-06, 3.902000000000072e-06, 4.111000000001086e-06, 4.541000000000267e-06, 5.735999999999242e-06, 3.667000000002335e-06, 3.417000000002085e-06, 4.903000000000546e-06, 4.291000000000017e-06, 3.5980000000004897e-06, 3.5139999999996008e-06, 4.971999999998922e-06, 4.971999999998922e-06, 3.917000000002585e-06, 2.52800000000164e-06, 4.666000000000392e-06, 3.597000000001016e-06, 6.0839999999999506e-06, 2.9729999999998646e-06]</msg>
<status status="PASS" starttime="20201112 10:13:18.133" endtime="20201112 10:13:18.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.129" endtime="20201112 10:13:18.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.138" endtime="20201112 10:13:18.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:18.142" endtime="20201112 10:13:18.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.140" endtime="20201112 10:13:18.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.136" endtime="20201112 10:13:18.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:17.774" endtime="20201112 10:13:18.162"></status>
</kw>
<msg timestamp="20201112 10:13:18.162" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.171" endtime="20201112 10:13:18.185"></status>
</kw>
<msg timestamp="20201112 10:13:18.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:18.169" endtime="20201112 10:13:18.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.188" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:18.187" endtime="20201112 10:13:18.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.190" endtime="20201112 10:13:18.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.166" endtime="20201112 10:13:18.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.164" endtime="20201112 10:13:18.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.198" endtime="20201112 10:13:18.463"></status>
</kw>
<msg timestamp="20201112 10:13:18.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018163472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018167264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:18.197" endtime="20201112 10:13:18.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018163472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018167264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:18.466" endtime="20201112 10:13:18.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.471" endtime="20201112 10:13:18.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.194" endtime="20201112 10:13:18.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.193" endtime="20201112 10:13:18.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.477" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:18.476" endtime="20201112 10:13:18.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.481" level="INFO">VALUE: [{'time': 0.018163472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018167264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018171722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458000000002321e-06, 'source_diff': 4.458000000002321e-06}, {'time': 0.018177389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.018181569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.180000000002931e-06, 'source_diff': 4.180000000002931e-06}, {'time': 0.018187472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.018191764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018196111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.018199153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.01820325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018208097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018211347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.018215611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018220014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018223306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.018228028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018230639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.018234875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018240458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018245889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.018250972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.018255264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018260986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018265222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018268556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3339999999972003e-06, 'source_diff': 3.3339999999972003e-06}, {'time': 0.018272292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.018275514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018280681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018284528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018287597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0689999999979067e-06, 'source_diff': 3.0689999999979067e-06}, {'time': 0.018289972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.375000000002375e-06, 'source_diff': 2.375000000002375e-06}, {'time': 0.018295208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018299583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018305153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.018310389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018314667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018317208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.018321181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972999999997395e-06, 'source_diff': 3.972999999997395e-06}, {'time': 0.018327472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.018330819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018333361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.018335722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018339694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.018344847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018349389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018351806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.018354333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.018359931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018362889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.018368278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3889999999980065e-06, 'source_diff': 5.3889999999980065e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:18.478" endtime="20201112 10:13:18.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.474" endtime="20201112 10:13:18.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:18.496" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:18.483" endtime="20201112 10:13:18.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.500" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:18.499" endtime="20201112 10:13:18.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.503" level="INFO">VALUE: {'eventsourcetime': [0.018163472, 0.018167264, 0.018171722, 0.018177389, 0.018181569, 0.018187472, 0.018191764, 0.018196111, 0.018199153, 0.01820325, 0.018208097, 0.018211347, 0.018215611, 0.018220014, 0.018223306, 0.018228028, 0.018230639, 0.018234875, 0.018240458, 0.018245889, 0.018250972, 0.018255264, 0.018260986, 0.018265222, 0.018268556, 0.018272292, 0.018275514, 0.018280681, 0.018284528, 0.018287597, 0.018289972, 0.018295208, 0.018299583, 0.018305153, 0.018310389, 0.018314667, 0.018317208, 0.018321181, 0.018327472, 0.018330819, 0.018333361, 0.018335722, 0.018339694, 0.018344847, 0.018349389, 0.018351806, 0.018354333, 0.018359931, 0.018362889, 0.018368278], 'diff': [0, 3.7919999999989906e-06, 4.458000000002321e-06, 5.666999999997396e-06, 4.180000000002931e-06, 5.9029999999980765e-06, 4.291999999999491e-06, 4.347000000001766e-06, 3.0419999999982406e-06, 4.097000000001516e-06, 4.846999999998797e-06, 3.249999999999781e-06, 4.264000000000351e-06, 4.403000000000046e-06, 3.29200000000196e-06, 4.721999999998672e-06, 2.610999999999586e-06, 4.236000000001211e-06, 5.582999999999977e-06, 5.431000000000186e-06, 5.082999999999477e-06, 4.291999999999491e-06, 5.721999999999672e-06, 4.236000000001211e-06, 3.3339999999972003e-06, 3.736000000000711e-06, 3.222000000000641e-06, 5.167000000000366e-06, 3.847000000001266e-06, 3.0689999999979067e-06, 2.375000000002375e-06, 5.235999999998742e-06, 4.375000000000906e-06, 5.569999999999881e-06, 5.235999999998742e-06, 4.277999999999921e-06, 2.5410000000017363e-06, 3.972999999997395e-06, 6.291000000002017e-06, 3.347000000000766e-06, 2.5419999999977405e-06, 2.360999999999336e-06, 3.972000000001391e-06, 5.153000000000796e-06, 4.541999999999741e-06, 2.4169999999976155e-06, 2.5270000000021664e-06, 5.5979999999990204e-06, 2.958000000000821e-06, 5.3889999999980065e-06], 'source_diff': [0, 3.7919999999989906e-06, 4.458000000002321e-06, 5.666999999997396e-06, 4.180000000002931e-06, 5.9029999999980765e-06, 4.291999999999491e-06, 4.347000000001766e-06, 3.0419999999982406e-06, 4.097000000001516e-06, 4.846999999998797e-06, 3.249999999999781e-06, 4.264000000000351e-06, 4.403000000000046e-06, 3.29200000000196e-06, 4.721999999998672e-06, 2.610999999999586e-06, 4.236000000001211e-06, 5.582999999999977e-06, 5.431000000000186e-06, 5.082999999999477e-06, 4.291999999999491e-06, 5.721999999999672e-06, 4.236000000001211e-06, 3.3339999999972003e-06, 3.736000000000711e-06, 3.222000000000641e-06, 5.167000000000366e-06, 3.847000000001266e-06, 3.0689999999979067e-06, 2.375000000002375e-06, 5.235999999998742e-06, 4.375000000000906e-06, 5.569999999999881e-06, 5.235999999998742e-06, 4.277999999999921e-06, 2.5410000000017363e-06, 3.972999999997395e-06, 6.291000000002017e-06, 3.347000000000766e-06, 2.5419999999977405e-06, 2.360999999999336e-06, 3.972000000001391e-06, 5.153000000000796e-06, 4.541999999999741e-06, 2.4169999999976155e-06, 2.5270000000021664e-06, 5.5979999999990204e-06, 2.958000000000821e-06, 5.3889999999980065e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:18.501" endtime="20201112 10:13:18.504"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.497" endtime="20201112 10:13:18.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:18.507" level="INFO">${RESULT} = [{'time': 0.018167264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018177389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:18.505" endtime="20201112 10:13:18.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:18.515" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:18.508" endtime="20201112 10:13:18.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.520" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:18.519" endtime="20201112 10:13:18.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.522" level="INFO">VALUE: [3.7919999999989906e-06, 5.666999999997396e-06, 5.9029999999980765e-06, 4.347000000001766e-06, 4.097000000001516e-06, 3.249999999999781e-06, 4.403000000000046e-06, 4.721999999998672e-06, 4.236000000001211e-06, 5.431000000000186e-06, 4.291999999999491e-06, 4.236000000001211e-06, 3.736000000000711e-06, 5.167000000000366e-06, 3.0689999999979067e-06, 5.235999999998742e-06, 5.569999999999881e-06, 4.277999999999921e-06, 3.972999999997395e-06, 3.347000000000766e-06, 2.360999999999336e-06, 5.153000000000796e-06, 2.4169999999976155e-06, 5.5979999999990204e-06, 5.3889999999980065e-06]</msg>
<status status="PASS" starttime="20201112 10:13:18.521" endtime="20201112 10:13:18.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.516" endtime="20201112 10:13:18.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.525" endtime="20201112 10:13:18.527"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:18.529" endtime="20201112 10:13:18.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.527" endtime="20201112 10:13:18.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.524" endtime="20201112 10:13:18.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.163" endtime="20201112 10:13:18.550"></status>
</kw>
<msg timestamp="20201112 10:13:18.551" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.558" endtime="20201112 10:13:18.572"></status>
</kw>
<msg timestamp="20201112 10:13:18.572" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:18.556" endtime="20201112 10:13:18.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:18.573" endtime="20201112 10:13:18.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.576" endtime="20201112 10:13:18.577"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.554" endtime="20201112 10:13:18.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.552" endtime="20201112 10:13:18.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.585" endtime="20201112 10:13:18.850"></status>
</kw>
<msg timestamp="20201112 10:13:18.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017463542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01746975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:18.583" endtime="20201112 10:13:18.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017463542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01746975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:18.852" endtime="20201112 10:13:18.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.858" endtime="20201112 10:13:18.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.581" endtime="20201112 10:13:18.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.579" endtime="20201112 10:13:18.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.864" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:18.863" endtime="20201112 10:13:18.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.868" level="INFO">VALUE: [{'time': 0.017463542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01746975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.017474833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017481083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.250000000002781e-06, 'source_diff': 6.250000000002781e-06}, {'time': 0.017485569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.017489792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.017496014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017500556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017503847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.290999999999017e-06, 'source_diff': 3.290999999999017e-06}, {'time': 0.017506319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017510556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.017514903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017517944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.017522847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017528444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017531167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.017536097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.01754, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017545847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017552069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017558361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.017564583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017570181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.017574333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.017578389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.017584125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.017589528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017594625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017600347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017604806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.459000000001795e-06, 'source_diff': 4.459000000001795e-06}, {'time': 0.017608486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.017612028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.017617069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.017621375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.017625778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017628111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3329999999967266e-06, 'source_diff': 2.3329999999967266e-06}, {'time': 0.017630597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860000000029303e-06, 'source_diff': 2.4860000000029303e-06}, {'time': 0.017633194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.017636278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0839999999969503e-06, 'source_diff': 3.0839999999969503e-06}, {'time': 0.017642208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.017645931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.017648347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4160000000016113e-06, 'source_diff': 2.4160000000016113e-06}, {'time': 0.017654125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.017658667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017661097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4300000000011812e-06, 'source_diff': 2.4300000000011812e-06}, {'time': 0.017663444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017669389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.017675028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.017679292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017683139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:18.865" endtime="20201112 10:13:18.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.861" endtime="20201112 10:13:18.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:18.883" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:18.870" endtime="20201112 10:13:18.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.887" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:18.886" endtime="20201112 10:13:18.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.890" level="INFO">VALUE: {'eventsourcetime': [0.017463542, 0.01746975, 0.017474833, 0.017481083, 0.017485569, 0.017489792, 0.017496014, 0.017500556, 0.017503847, 0.017506319, 0.017510556, 0.017514903, 0.017517944, 0.017522847, 0.017528444, 0.017531167, 0.017536097, 0.01754, 0.017545847, 0.017552069, 0.017558361, 0.017564583, 0.017570181, 0.017574333, 0.017578389, 0.017584125, 0.017589528, 0.017594625, 0.017600347, 0.017604806, 0.017608486, 0.017612028, 0.017617069, 0.017621375, 0.017625778, 0.017628111, 0.017630597, 0.017633194, 0.017636278, 0.017642208, 0.017645931, 0.017648347, 0.017654125, 0.017658667, 0.017661097, 0.017663444, 0.017669389, 0.017675028, 0.017679292, 0.017683139], 'diff': [0, 6.208000000000602e-06, 5.082999999999477e-06, 6.250000000002781e-06, 4.485999999997992e-06, 4.223000000001115e-06, 6.222000000000172e-06, 4.541999999999741e-06, 3.290999999999017e-06, 2.471999999999891e-06, 4.237000000000685e-06, 4.346999999998297e-06, 3.0410000000022364e-06, 4.903000000000546e-06, 5.596999999999547e-06, 2.7229999999996146e-06, 4.930000000000212e-06, 3.902999999999546e-06, 5.846999999999797e-06, 6.222000000000172e-06, 6.292000000001491e-06, 6.222000000000172e-06, 5.5979999999990204e-06, 4.152000000000322e-06, 4.0559999999988106e-06, 5.735999999999242e-06, 5.403000000001046e-06, 5.096999999999047e-06, 5.721999999999672e-06, 4.459000000001795e-06, 3.679999999998962e-06, 3.5419999999987406e-06, 5.041000000000767e-06, 4.30600000000253e-06, 4.403000000000046e-06, 2.3329999999967266e-06, 2.4860000000029303e-06, 2.597000000000016e-06, 3.0839999999969503e-06, 5.930000000001212e-06, 3.7230000000006147e-06, 2.4160000000016113e-06, 5.7779999999979514e-06, 4.541999999999741e-06, 2.4300000000011812e-06, 2.346999999999766e-06, 5.945000000000256e-06, 5.6389999999982565e-06, 4.264000000000351e-06, 3.847000000001266e-06], 'source_diff': [0, 6.208000000000602e-06, 5.082999999999477e-06, 6.250000000002781e-06, 4.485999999997992e-06, 4.223000000001115e-06, 6.222000000000172e-06, 4.541999999999741e-06, 3.290999999999017e-06, 2.471999999999891e-06, 4.237000000000685e-06, 4.346999999998297e-06, 3.0410000000022364e-06, 4.903000000000546e-06, 5.596999999999547e-06, 2.7229999999996146e-06, 4.930000000000212e-06, 3.902999999999546e-06, 5.846999999999797e-06, 6.222000000000172e-06, 6.292000000001491e-06, 6.222000000000172e-06, 5.5979999999990204e-06, 4.152000000000322e-06, 4.0559999999988106e-06, 5.735999999999242e-06, 5.403000000001046e-06, 5.096999999999047e-06, 5.721999999999672e-06, 4.459000000001795e-06, 3.679999999998962e-06, 3.5419999999987406e-06, 5.041000000000767e-06, 4.30600000000253e-06, 4.403000000000046e-06, 2.3329999999967266e-06, 2.4860000000029303e-06, 2.597000000000016e-06, 3.0839999999969503e-06, 5.930000000001212e-06, 3.7230000000006147e-06, 2.4160000000016113e-06, 5.7779999999979514e-06, 4.541999999999741e-06, 2.4300000000011812e-06, 2.346999999999766e-06, 5.945000000000256e-06, 5.6389999999982565e-06, 4.264000000000351e-06, 3.847000000001266e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:18.888" endtime="20201112 10:13:18.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.884" endtime="20201112 10:13:18.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:18.894" level="INFO">${RESULT} = [{'time': 0.01746975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.017481083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:13:18.892" endtime="20201112 10:13:18.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:18.903" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:18.895" endtime="20201112 10:13:18.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.907" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:18.906" endtime="20201112 10:13:18.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.909" level="INFO">VALUE: [6.208000000000602e-06, 6.250000000002781e-06, 4.223000000001115e-06, 4.541999999999741e-06, 2.471999999999891e-06, 4.346999999998297e-06, 4.903000000000546e-06, 2.7229999999996146e-06, 3.902999999999546e-06, 6.222000000000172e-06, 6.222000000000172e-06, 4.152000000000322e-06, 5.735999999999242e-06, 5.096999999999047e-06, 4.459000000001795e-06, 3.5419999999987406e-06, 4.30600000000253e-06, 2.3329999999967266e-06, 2.597000000000016e-06, 5.930000000001212e-06, 2.4160000000016113e-06, 4.541999999999741e-06, 2.346999999999766e-06, 5.6389999999982565e-06, 3.847000000001266e-06]</msg>
<status status="PASS" starttime="20201112 10:13:18.908" endtime="20201112 10:13:18.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.904" endtime="20201112 10:13:18.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.912" endtime="20201112 10:13:18.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:18.916" endtime="20201112 10:13:18.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.914" endtime="20201112 10:13:18.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.911" endtime="20201112 10:13:18.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.551" endtime="20201112 10:13:18.936"></status>
</kw>
<msg timestamp="20201112 10:13:18.937" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.944" endtime="20201112 10:13:18.958"></status>
</kw>
<msg timestamp="20201112 10:13:18.959" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:18.943" endtime="20201112 10:13:18.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:18.961" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:18.960" endtime="20201112 10:13:18.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.962" endtime="20201112 10:13:18.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.940" endtime="20201112 10:13:18.964"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.939" endtime="20201112 10:13:18.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:18.971" endtime="20201112 10:13:19.240"></status>
</kw>
<msg timestamp="20201112 10:13:19.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017770847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017775708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:18.970" endtime="20201112 10:13:19.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017770847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017775708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:19.243" endtime="20201112 10:13:19.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.248" endtime="20201112 10:13:19.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.967" endtime="20201112 10:13:19.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.965" endtime="20201112 10:13:19.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.255" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 10:13:19.254" endtime="20201112 10:13:19.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.258" level="INFO">VALUE: [{'time': 0.017770847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017775708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.017781542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.017786667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1249999999981866e-06, 'source_diff': 5.1249999999981866e-06}, {'time': 0.017790931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.017794292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.017800264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017806417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.017809583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.017812056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.017815097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.017821097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.017824556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4589999999973253e-06, 'source_diff': 3.4589999999973253e-06}, {'time': 0.017830111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.017834125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.017837417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.017840458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.017842861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.017846778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017851, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.017854597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017860833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017863181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.017868042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.017870444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.017876292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.017878958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.017884181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.017887403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017889944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.017895917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.017898583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.017902806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.017907722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.017910403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.017913056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.017918722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.01792125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017925972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017931889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.017935292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017939778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017943931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.017947597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.017951319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017955514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.017959333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.819000000002126e-06, 'source_diff': 3.819000000002126e-06}, {'time': 0.017964806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.017968597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.017972014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}]</msg>
<status status="PASS" starttime="20201112 10:13:19.256" endtime="20201112 10:13:19.259"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.252" endtime="20201112 10:13:19.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 10:13:19.274" level="INFO">${debug-compressed} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:13:19.261" endtime="20201112 10:13:19.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.278" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 10:13:19.277" endtime="20201112 10:13:19.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.281" level="INFO">VALUE: {'eventsourcetime': [0.017770847, 0.017775708, 0.017781542, 0.017786667, 0.017790931, 0.017794292, 0.017800264, 0.017806417, 0.017809583, 0.017812056, 0.017815097, 0.017821097, 0.017824556, 0.017830111, 0.017834125, 0.017837417, 0.017840458, 0.017842861, 0.017846778, 0.017851, 0.017854597, 0.017860833, 0.017863181, 0.017868042, 0.017870444, 0.017876292, 0.017878958, 0.017884181, 0.017887403, 0.017889944, 0.017895917, 0.017898583, 0.017902806, 0.017907722, 0.017910403, 0.017913056, 0.017918722, 0.01792125, 0.017925972, 0.017931889, 0.017935292, 0.017939778, 0.017943931, 0.017947597, 0.017951319, 0.017955514, 0.017959333, 0.017964806, 0.017968597, 0.017972014], 'diff': [0, 4.861000000001836e-06, 5.8339999999997005e-06, 5.1249999999981866e-06, 4.264000000000351e-06, 3.361000000000336e-06, 5.971999999999922e-06, 6.153000000001796e-06, 3.165999999998892e-06, 2.4729999999993646e-06, 3.040999999998767e-06, 6.000000000002531e-06, 3.4589999999973253e-06, 5.555000000000837e-06, 4.014000000000101e-06, 3.29200000000196e-06, 3.040999999998767e-06, 2.403000000001515e-06, 3.916999999999116e-06, 4.221999999998172e-06, 3.597000000001016e-06, 6.235999999999742e-06, 2.3479999999992396e-06, 4.861000000001836e-06, 2.401999999998572e-06, 5.8479999999992704e-06, 2.6660000000018613e-06, 5.222999999998645e-06, 3.222000000000641e-06, 2.5410000000017363e-06, 5.9729999999993955e-06, 2.665999999998392e-06, 4.223000000001115e-06, 4.916000000000642e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 5.666000000001392e-06, 2.5279999999981706e-06, 4.721999999998672e-06, 5.917000000001116e-06, 3.4029999999990457e-06, 4.486000000001461e-06, 4.152999999999796e-06, 3.665999999999392e-06, 3.722000000001141e-06, 4.1949999999985055e-06, 3.819000000002126e-06, 5.472999999998895e-06, 3.790999999999517e-06, 3.417000000002085e-06], 'source_diff': [0, 4.861000000001836e-06, 5.8339999999997005e-06, 5.1249999999981866e-06, 4.264000000000351e-06, 3.361000000000336e-06, 5.971999999999922e-06, 6.153000000001796e-06, 3.165999999998892e-06, 2.4729999999993646e-06, 3.040999999998767e-06, 6.000000000002531e-06, 3.4589999999973253e-06, 5.555000000000837e-06, 4.014000000000101e-06, 3.29200000000196e-06, 3.040999999998767e-06, 2.403000000001515e-06, 3.916999999999116e-06, 4.221999999998172e-06, 3.597000000001016e-06, 6.235999999999742e-06, 2.3479999999992396e-06, 4.861000000001836e-06, 2.401999999998572e-06, 5.8479999999992704e-06, 2.6660000000018613e-06, 5.222999999998645e-06, 3.222000000000641e-06, 2.5410000000017363e-06, 5.9729999999993955e-06, 2.665999999998392e-06, 4.223000000001115e-06, 4.916000000000642e-06, 2.6809999999974354e-06, 2.653000000001765e-06, 5.666000000001392e-06, 2.5279999999981706e-06, 4.721999999998672e-06, 5.917000000001116e-06, 3.4029999999990457e-06, 4.486000000001461e-06, 4.152999999999796e-06, 3.665999999999392e-06, 3.722000000001141e-06, 4.1949999999985055e-06, 3.819000000002126e-06, 5.472999999998895e-06, 3.790999999999517e-06, 3.417000000002085e-06]}</msg>
<status status="PASS" starttime="20201112 10:13:19.279" endtime="20201112 10:13:19.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.275" endtime="20201112 10:13:19.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:19.286" level="INFO">${RESULT} = [{'time': 0.017775708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.017786667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:19.283" endtime="20201112 10:13:19.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:19.294" level="INFO">${GPIO_OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:19.287" endtime="20201112 10:13:19.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.298" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 10:13:19.297" endtime="20201112 10:13:19.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.300" level="INFO">VALUE: [4.861000000001836e-06, 5.1249999999981866e-06, 3.361000000000336e-06, 6.153000000001796e-06, 2.4729999999993646e-06, 6.000000000002531e-06, 5.555000000000837e-06, 3.29200000000196e-06, 2.403000000001515e-06, 4.221999999998172e-06, 6.235999999999742e-06, 4.861000000001836e-06, 5.8479999999992704e-06, 5.222999999998645e-06, 2.5410000000017363e-06, 2.665999999998392e-06, 4.916000000000642e-06, 2.653000000001765e-06, 2.5279999999981706e-06, 5.917000000001116e-06, 4.486000000001461e-06, 3.665999999999392e-06, 4.1949999999985055e-06, 5.472999999998895e-06, 3.417000000002085e-06]</msg>
<status status="PASS" starttime="20201112 10:13:19.299" endtime="20201112 10:13:19.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.295" endtime="20201112 10:13:19.301"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.303" endtime="20201112 10:13:19.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:19.307" endtime="20201112 10:13:19.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.305" endtime="20201112 10:13:19.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.302" endtime="20201112 10:13:19.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:18.937" endtime="20201112 10:13:19.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:11.563" endtime="20201112 10:13:19.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:19.332" endtime="20201112 10:13:19.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.330" endtime="20201112 10:13:19.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.329" endtime="20201112 10:13:19.353"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:11.485" endtime="20201112 10:13:19.353" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:19.361" endtime="20201112 10:13:19.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.359" endtime="20201112 10:13:19.381"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.394" endtime="20201112 10:13:19.416"></status>
</kw>
<msg timestamp="20201112 10:13:19.416" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:19.392" endtime="20201112 10:13:19.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.419" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:19.417" endtime="20201112 10:13:19.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.422" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:19.420" endtime="20201112 10:13:19.422"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:19.389" endtime="20201112 10:13:19.423"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:19.387" endtime="20201112 10:13:19.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.386" endtime="20201112 10:13:19.424"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:19.427" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:19.426" endtime="20201112 10:13:19.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.424" endtime="20201112 10:13:19.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.385" endtime="20201112 10:13:19.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.384" endtime="20201112 10:13:19.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.429" endtime="20201112 10:13:19.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.383" endtime="20201112 10:13:19.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.381" endtime="20201112 10:13:19.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.358" endtime="20201112 10:13:19.432"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 10:13:19.434" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.442" endtime="20201112 10:13:19.457"></status>
</kw>
<msg timestamp="20201112 10:13:19.457" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:19.440" endtime="20201112 10:13:19.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.460" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:19.459" endtime="20201112 10:13:19.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.461" endtime="20201112 10:13:19.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.438" endtime="20201112 10:13:19.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.436" endtime="20201112 10:13:19.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.470" endtime="20201112 10:13:19.751"></status>
</kw>
<msg timestamp="20201112 10:13:19.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071013208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071019444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:19.468" endtime="20201112 10:13:19.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071013208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071019444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:19.755" endtime="20201112 10:13:19.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.763" endtime="20201112 10:13:19.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.466" endtime="20201112 10:13:19.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.464" endtime="20201112 10:13:19.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:19.770" level="INFO">${RESULT} = [{'time': 0.071019444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236000000006681e-06, 'source_diff': 6.236000000006681e-06}, {'time': 0.071023625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:19.766" endtime="20201112 10:13:19.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:19.784" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:19.771" endtime="20201112 10:13:19.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.788" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:19.787" endtime="20201112 10:13:19.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.790" level="INFO">VALUE: [6.236000000006681e-06, 1.8470000000131437e-06, 1.777999999993951e-06, 1.8610000000057747e-06, 1.8620000000052483e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.8750000000122835e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.8750000000122835e-06, 1.8610000000057747e-06, 1.9029999999975455e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.832999999992757e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.832999999992757e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.915999999990703e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.9160000000045807e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.8610000000057747e-06]</msg>
<status status="PASS" starttime="20201112 10:13:19.789" endtime="20201112 10:13:19.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.785" endtime="20201112 10:13:19.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.794" endtime="20201112 10:13:19.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:19.797" endtime="20201112 10:13:19.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.796" endtime="20201112 10:13:19.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.792" endtime="20201112 10:13:19.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.435" endtime="20201112 10:13:19.818"></status>
</kw>
<msg timestamp="20201112 10:13:19.818" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.826" endtime="20201112 10:13:19.841"></status>
</kw>
<msg timestamp="20201112 10:13:19.842" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:19.824" endtime="20201112 10:13:19.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:19.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:19.843" endtime="20201112 10:13:19.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.845" endtime="20201112 10:13:19.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.822" endtime="20201112 10:13:19.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.820" endtime="20201112 10:13:19.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:19.854" endtime="20201112 10:13:20.134"></status>
</kw>
<msg timestamp="20201112 10:13:20.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018274431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018276278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:19.853" endtime="20201112 10:13:20.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018274431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018276278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:20.139" endtime="20201112 10:13:20.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.147" endtime="20201112 10:13:20.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.850" endtime="20201112 10:13:20.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.848" endtime="20201112 10:13:20.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:20.154" level="INFO">${RESULT} = [{'time': 0.018276278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018283222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:20.150" endtime="20201112 10:13:20.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:20.168" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:20.155" endtime="20201112 10:13:20.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.172" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:20.171" endtime="20201112 10:13:20.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.174" level="INFO">VALUE: [1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.848000000002209e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.9020000000015413e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.834000000002639e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.917000000000585e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.917000000000585e-06]</msg>
<status status="PASS" starttime="20201112 10:13:20.173" endtime="20201112 10:13:20.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.169" endtime="20201112 10:13:20.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.177" endtime="20201112 10:13:20.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:20.181" endtime="20201112 10:13:20.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.180" endtime="20201112 10:13:20.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.176" endtime="20201112 10:13:20.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.819" endtime="20201112 10:13:20.202"></status>
</kw>
<msg timestamp="20201112 10:13:20.202" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.210" endtime="20201112 10:13:20.225"></status>
</kw>
<msg timestamp="20201112 10:13:20.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:20.208" endtime="20201112 10:13:20.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.228" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:20.226" endtime="20201112 10:13:20.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.229" endtime="20201112 10:13:20.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.206" endtime="20201112 10:13:20.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.204" endtime="20201112 10:13:20.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.238" endtime="20201112 10:13:20.526"></status>
</kw>
<msg timestamp="20201112 10:13:20.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017913528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017915417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:20.236" endtime="20201112 10:13:20.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017913528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017915417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:20.531" endtime="20201112 10:13:20.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.539" endtime="20201112 10:13:20.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.234" endtime="20201112 10:13:20.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.232" endtime="20201112 10:13:20.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:20.546" level="INFO">${RESULT} = [{'time': 0.017915417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.017923139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:20.542" endtime="20201112 10:13:20.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:20.561" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:20.546" endtime="20201112 10:13:20.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.565" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:20.564" endtime="20201112 10:13:20.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.567" level="INFO">VALUE: [1.8889999999979756e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 10:13:20.566" endtime="20201112 10:13:20.568"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.561" endtime="20201112 10:13:20.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.571" endtime="20201112 10:13:20.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:20.574" endtime="20201112 10:13:20.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.573" endtime="20201112 10:13:20.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.569" endtime="20201112 10:13:20.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.203" endtime="20201112 10:13:20.595"></status>
</kw>
<msg timestamp="20201112 10:13:20.595" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.603" endtime="20201112 10:13:20.618"></status>
</kw>
<msg timestamp="20201112 10:13:20.618" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:20.601" endtime="20201112 10:13:20.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.621" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:20.619" endtime="20201112 10:13:20.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.622" endtime="20201112 10:13:20.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.599" endtime="20201112 10:13:20.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.597" endtime="20201112 10:13:20.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.631" endtime="20201112 10:13:20.919"></status>
</kw>
<msg timestamp="20201112 10:13:20.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017909611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017911486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:20.629" endtime="20201112 10:13:20.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017909611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017911486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:20.923" endtime="20201112 10:13:20.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.932" endtime="20201112 10:13:20.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.626" endtime="20201112 10:13:20.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.625" endtime="20201112 10:13:20.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:20.938" level="INFO">${RESULT} = [{'time': 0.017911486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017915514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:20.935" endtime="20201112 10:13:20.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:20.952" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:20.939" endtime="20201112 10:13:20.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.956" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:20.955" endtime="20201112 10:13:20.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:20.959" level="INFO">VALUE: [1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.848000000002209e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 10:13:20.957" endtime="20201112 10:13:20.960"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.953" endtime="20201112 10:13:20.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.962" endtime="20201112 10:13:20.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:20.966" endtime="20201112 10:13:20.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.964" endtime="20201112 10:13:20.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.961" endtime="20201112 10:13:20.986"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.596" endtime="20201112 10:13:20.986"></status>
</kw>
<msg timestamp="20201112 10:13:20.987" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:20.994" endtime="20201112 10:13:21.009"></status>
</kw>
<msg timestamp="20201112 10:13:21.010" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:20.993" endtime="20201112 10:13:21.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.012" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:21.011" endtime="20201112 10:13:21.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.013" endtime="20201112 10:13:21.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.990" endtime="20201112 10:13:21.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.988" endtime="20201112 10:13:21.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.022" endtime="20201112 10:13:21.307"></status>
</kw>
<msg timestamp="20201112 10:13:21.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018016208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018018056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:21.021" endtime="20201112 10:13:21.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018016208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018018056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:21.311" endtime="20201112 10:13:21.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.319" endtime="20201112 10:13:21.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.018" endtime="20201112 10:13:21.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.016" endtime="20201112 10:13:21.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:21.326" level="INFO">${RESULT} = [{'time': 0.018018056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}, {'time': 0.018023375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:21.323" endtime="20201112 10:13:21.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:21.340" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:21.327" endtime="20201112 10:13:21.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.344" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:21.343" endtime="20201112 10:13:21.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.347" level="INFO">VALUE: [1.848000000002209e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.889000000001445e-06, 1.889000000001445e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.819000000000126e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.915999999997642e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.9020000000015413e-06]</msg>
<status status="PASS" starttime="20201112 10:13:21.345" endtime="20201112 10:13:21.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.341" endtime="20201112 10:13:21.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.350" endtime="20201112 10:13:21.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:21.354" endtime="20201112 10:13:21.373"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.352" endtime="20201112 10:13:21.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.349" endtime="20201112 10:13:21.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:20.987" endtime="20201112 10:13:21.374"></status>
</kw>
<msg timestamp="20201112 10:13:21.375" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.382" endtime="20201112 10:13:21.397"></status>
</kw>
<msg timestamp="20201112 10:13:21.397" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:21.381" endtime="20201112 10:13:21.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.400" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:21.398" endtime="20201112 10:13:21.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.401" endtime="20201112 10:13:21.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.378" endtime="20201112 10:13:21.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.376" endtime="20201112 10:13:21.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.410" endtime="20201112 10:13:21.699"></status>
</kw>
<msg timestamp="20201112 10:13:21.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017756028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017757875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:21.408" endtime="20201112 10:13:21.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017756028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017757875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:21.703" endtime="20201112 10:13:21.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.711" endtime="20201112 10:13:21.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.406" endtime="20201112 10:13:21.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.404" endtime="20201112 10:13:21.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:21.718" level="INFO">${RESULT} = [{'time': 0.017757875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017765042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:21.714" endtime="20201112 10:13:21.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:21.733" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:21.719" endtime="20201112 10:13:21.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.737" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:21.736" endtime="20201112 10:13:21.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.739" level="INFO">VALUE: [1.846999999999266e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8889999999979756e-06, 1.77800000000089e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 10:13:21.738" endtime="20201112 10:13:21.740"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.734" endtime="20201112 10:13:21.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.743" endtime="20201112 10:13:21.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:21.746" endtime="20201112 10:13:21.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.745" endtime="20201112 10:13:21.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.741" endtime="20201112 10:13:21.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.375" endtime="20201112 10:13:21.767"></status>
</kw>
<msg timestamp="20201112 10:13:21.767" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.775" endtime="20201112 10:13:21.790"></status>
</kw>
<msg timestamp="20201112 10:13:21.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:21.773" endtime="20201112 10:13:21.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:21.792" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:21.791" endtime="20201112 10:13:21.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.793" endtime="20201112 10:13:21.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.771" endtime="20201112 10:13:21.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.769" endtime="20201112 10:13:21.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:21.803" endtime="20201112 10:13:22.091"></status>
</kw>
<msg timestamp="20201112 10:13:22.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017801194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017803083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:21.801" endtime="20201112 10:13:22.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017801194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017803083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:22.095" endtime="20201112 10:13:22.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.104" endtime="20201112 10:13:22.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.799" endtime="20201112 10:13:22.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.797" endtime="20201112 10:13:22.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:22.110" level="INFO">${RESULT} = [{'time': 0.017803083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.017807111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:22.107" endtime="20201112 10:13:22.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:22.125" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:22.111" endtime="20201112 10:13:22.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.129" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:22.128" endtime="20201112 10:13:22.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.132" level="INFO">VALUE: [1.889000000001445e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.901999999998072e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.819000000000126e-06, 1.8479999999987395e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 10:13:22.130" endtime="20201112 10:13:22.133"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.126" endtime="20201112 10:13:22.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.135" endtime="20201112 10:13:22.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:22.139" endtime="20201112 10:13:22.158"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.137" endtime="20201112 10:13:22.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.134" endtime="20201112 10:13:22.159"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:21.768" endtime="20201112 10:13:22.160"></status>
</kw>
<msg timestamp="20201112 10:13:22.160" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.167" endtime="20201112 10:13:22.182"></status>
</kw>
<msg timestamp="20201112 10:13:22.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:22.166" endtime="20201112 10:13:22.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.185" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:22.184" endtime="20201112 10:13:22.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.186" endtime="20201112 10:13:22.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.163" endtime="20201112 10:13:22.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.162" endtime="20201112 10:13:22.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.195" endtime="20201112 10:13:22.484"></status>
</kw>
<msg timestamp="20201112 10:13:22.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017830778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017832653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:22.194" endtime="20201112 10:13:22.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017830778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017832653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:22.488" endtime="20201112 10:13:22.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.496" endtime="20201112 10:13:22.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.191" endtime="20201112 10:13:22.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.190" endtime="20201112 10:13:22.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:22.503" level="INFO">${RESULT} = [{'time': 0.017832653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017836889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:22.500" endtime="20201112 10:13:22.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:22.517" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:22.504" endtime="20201112 10:13:22.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.521" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:22.520" endtime="20201112 10:13:22.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.524" level="INFO">VALUE: [1.8750000000018752e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8889999999979756e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.834000000002639e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8049999999970867e-06, 1.901999999998072e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 10:13:22.523" endtime="20201112 10:13:22.525"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.518" endtime="20201112 10:13:22.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.527" endtime="20201112 10:13:22.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:22.531" endtime="20201112 10:13:22.550"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.529" endtime="20201112 10:13:22.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.526" endtime="20201112 10:13:22.551"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.160" endtime="20201112 10:13:22.552"></status>
</kw>
<msg timestamp="20201112 10:13:22.552" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.559" endtime="20201112 10:13:22.575"></status>
</kw>
<msg timestamp="20201112 10:13:22.575" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:22.558" endtime="20201112 10:13:22.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.578" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:22.576" endtime="20201112 10:13:22.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.579" endtime="20201112 10:13:22.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.555" endtime="20201112 10:13:22.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.554" endtime="20201112 10:13:22.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.588" endtime="20201112 10:13:22.877"></status>
</kw>
<msg timestamp="20201112 10:13:22.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017854889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017856764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:22.586" endtime="20201112 10:13:22.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017854889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017856764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:22.882" endtime="20201112 10:13:22.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.890" endtime="20201112 10:13:22.891"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.584" endtime="20201112 10:13:22.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.582" endtime="20201112 10:13:22.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:22.896" level="INFO">${RESULT} = [{'time': 0.017856764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017861792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:22.893" endtime="20201112 10:13:22.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:22.911" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:22.897" endtime="20201112 10:13:22.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.915" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:22.914" endtime="20201112 10:13:22.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.917" level="INFO">VALUE: [1.8750000000018752e-06, 1.848000000002209e-06, 1.8060000000000298e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.9169999999971155e-06, 1.8479999999987395e-06, 1.9449999999997247e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 10:13:22.916" endtime="20201112 10:13:22.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.912" endtime="20201112 10:13:22.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.921" endtime="20201112 10:13:22.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:22.924" endtime="20201112 10:13:22.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.923" endtime="20201112 10:13:22.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.919" endtime="20201112 10:13:22.944"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.552" endtime="20201112 10:13:22.945"></status>
</kw>
<msg timestamp="20201112 10:13:22.945" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.953" endtime="20201112 10:13:22.968"></status>
</kw>
<msg timestamp="20201112 10:13:22.968" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:22.951" endtime="20201112 10:13:22.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:22.971" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:22.969" endtime="20201112 10:13:22.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.972" endtime="20201112 10:13:22.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.949" endtime="20201112 10:13:22.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.947" endtime="20201112 10:13:22.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:22.981" endtime="20201112 10:13:23.265"></status>
</kw>
<msg timestamp="20201112 10:13:23.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018052292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018054097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:22.979" endtime="20201112 10:13:23.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:23.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018052292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018054097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:23.269" endtime="20201112 10:13:23.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.277" endtime="20201112 10:13:23.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.977" endtime="20201112 10:13:23.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.975" endtime="20201112 10:13:23.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:23.284" level="INFO">${RESULT} = [{'time': 0.018054097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018058528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:23.280" endtime="20201112 10:13:23.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:23.298" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:23.285" endtime="20201112 10:13:23.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:23.302" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:23.301" endtime="20201112 10:13:23.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:23.305" level="INFO">VALUE: [1.8050000000005562e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.944000000000251e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9169999999971155e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 10:13:23.303" endtime="20201112 10:13:23.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.299" endtime="20201112 10:13:23.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.308" endtime="20201112 10:13:23.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:23.312" endtime="20201112 10:13:23.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.310" endtime="20201112 10:13:23.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.306" endtime="20201112 10:13:23.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:22.946" endtime="20201112 10:13:23.332"></status>
</kw>
<msg timestamp="20201112 10:13:23.332" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.340" endtime="20201112 10:13:23.356"></status>
</kw>
<msg timestamp="20201112 10:13:23.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:23.338" endtime="20201112 10:13:23.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:23.358" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:23.357" endtime="20201112 10:13:23.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.360" endtime="20201112 10:13:23.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.336" endtime="20201112 10:13:23.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.334" endtime="20201112 10:13:23.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.368" endtime="20201112 10:13:23.658"></status>
</kw>
<msg timestamp="20201112 10:13:23.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017837389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017839181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:23.367" endtime="20201112 10:13:23.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:23.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017837389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017839181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:23.662" endtime="20201112 10:13:23.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.670" endtime="20201112 10:13:23.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.364" endtime="20201112 10:13:23.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.363" endtime="20201112 10:13:23.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:23.677" level="INFO">${RESULT} = [{'time': 0.017839181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.017844486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:23.673" endtime="20201112 10:13:23.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:23.691" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:23.678" endtime="20201112 10:13:23.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:23.695" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:23.694" endtime="20201112 10:13:23.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:23.698" level="INFO">VALUE: [1.7920000000004599e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.834000000002639e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8470000000027353e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 10:13:23.697" endtime="20201112 10:13:23.699"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.692" endtime="20201112 10:13:23.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.702" endtime="20201112 10:13:23.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:23.705" endtime="20201112 10:13:23.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.704" endtime="20201112 10:13:23.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.700" endtime="20201112 10:13:23.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.333" endtime="20201112 10:13:23.726"></status>
</kw>
<msg timestamp="20201112 10:13:23.726" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.734" endtime="20201112 10:13:23.749"></status>
</kw>
<msg timestamp="20201112 10:13:23.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:23.732" endtime="20201112 10:13:23.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:23.752" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:23.750" endtime="20201112 10:13:23.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.753" endtime="20201112 10:13:23.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.730" endtime="20201112 10:13:23.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.728" endtime="20201112 10:13:23.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:23.763" endtime="20201112 10:13:24.052"></status>
</kw>
<msg timestamp="20201112 10:13:24.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017766972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:23.761" endtime="20201112 10:13:24.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017766972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:24.056" endtime="20201112 10:13:24.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.064" endtime="20201112 10:13:24.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.758" endtime="20201112 10:13:24.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.756" endtime="20201112 10:13:24.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:24.071" level="INFO">${RESULT} = [{'time': 0.017768847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017775639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:24.068" endtime="20201112 10:13:24.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:24.085" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:24.072" endtime="20201112 10:13:24.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.089" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:24.088" endtime="20201112 10:13:24.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.092" level="INFO">VALUE: [1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8050000000005562e-06, 1.917000000000585e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.8749999999984057e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 10:13:24.090" endtime="20201112 10:13:24.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.086" endtime="20201112 10:13:24.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.095" endtime="20201112 10:13:24.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:24.099" endtime="20201112 10:13:24.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.097" endtime="20201112 10:13:24.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.094" endtime="20201112 10:13:24.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:23.727" endtime="20201112 10:13:24.119"></status>
</kw>
<msg timestamp="20201112 10:13:24.120" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.127" endtime="20201112 10:13:24.142"></status>
</kw>
<msg timestamp="20201112 10:13:24.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:24.126" endtime="20201112 10:13:24.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.145" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:24.144" endtime="20201112 10:13:24.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.146" endtime="20201112 10:13:24.148"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.123" endtime="20201112 10:13:24.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.121" endtime="20201112 10:13:24.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.155" endtime="20201112 10:13:24.442"></status>
</kw>
<msg timestamp="20201112 10:13:24.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017952639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017954542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:24.154" endtime="20201112 10:13:24.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017952639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017954542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:24.447" endtime="20201112 10:13:24.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.456" endtime="20201112 10:13:24.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.151" endtime="20201112 10:13:24.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.150" endtime="20201112 10:13:24.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:24.462" level="INFO">${RESULT} = [{'time': 0.017954542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.017959056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:24.459" endtime="20201112 10:13:24.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:24.477" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:24.463" endtime="20201112 10:13:24.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.481" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:24.480" endtime="20201112 10:13:24.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.483" level="INFO">VALUE: [1.903000000001015e-06, 1.862000000001779e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8479999999987395e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.7919999999969904e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8199999999995997e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 10:13:24.482" endtime="20201112 10:13:24.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.477" endtime="20201112 10:13:24.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.487" endtime="20201112 10:13:24.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:24.490" endtime="20201112 10:13:24.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.489" endtime="20201112 10:13:24.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.485" endtime="20201112 10:13:24.511"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.120" endtime="20201112 10:13:24.511"></status>
</kw>
<msg timestamp="20201112 10:13:24.511" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.519" endtime="20201112 10:13:24.534"></status>
</kw>
<msg timestamp="20201112 10:13:24.534" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:24.517" endtime="20201112 10:13:24.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.537" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:24.535" endtime="20201112 10:13:24.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.538" endtime="20201112 10:13:24.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.515" endtime="20201112 10:13:24.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.513" endtime="20201112 10:13:24.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.547" endtime="20201112 10:13:24.829"></status>
</kw>
<msg timestamp="20201112 10:13:24.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018319042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018320958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:24.545" endtime="20201112 10:13:24.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018319042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018320958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:24.833" endtime="20201112 10:13:24.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.842" endtime="20201112 10:13:24.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.543" endtime="20201112 10:13:24.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.541" endtime="20201112 10:13:24.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:24.848" level="INFO">${RESULT} = [{'time': 0.018320958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018324917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:24.845" endtime="20201112 10:13:24.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:24.862" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:24.849" endtime="20201112 10:13:24.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.866" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:24.865" endtime="20201112 10:13:24.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.869" level="INFO">VALUE: [1.915999999997642e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.901999999998072e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.9020000000015413e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8479999999987395e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 10:13:24.868" endtime="20201112 10:13:24.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.863" endtime="20201112 10:13:24.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.873" endtime="20201112 10:13:24.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:24.876" endtime="20201112 10:13:24.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.874" endtime="20201112 10:13:24.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.871" endtime="20201112 10:13:24.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.512" endtime="20201112 10:13:24.896"></status>
</kw>
<msg timestamp="20201112 10:13:24.897" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.905" endtime="20201112 10:13:24.921"></status>
</kw>
<msg timestamp="20201112 10:13:24.921" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:24.903" endtime="20201112 10:13:24.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:24.923" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:24.922" endtime="20201112 10:13:24.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.924" endtime="20201112 10:13:24.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.900" endtime="20201112 10:13:24.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.899" endtime="20201112 10:13:24.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:24.933" endtime="20201112 10:13:25.213"></status>
</kw>
<msg timestamp="20201112 10:13:25.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:24.932" endtime="20201112 10:13:25.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:25.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018201722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:25.217" endtime="20201112 10:13:25.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.226" endtime="20201112 10:13:25.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.929" endtime="20201112 10:13:25.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.928" endtime="20201112 10:13:25.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:25.232" level="INFO">${RESULT} = [{'time': 0.018203597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018210472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:25.229" endtime="20201112 10:13:25.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:25.247" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:25.233" endtime="20201112 10:13:25.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:25.251" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:25.250" endtime="20201112 10:13:25.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:25.254" level="INFO">VALUE: [1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.9029999999975455e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8189999999966566e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.7920000000004599e-06, 1.848000000002209e-06, 1.8060000000000298e-06, 1.9029999999975455e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 10:13:25.252" endtime="20201112 10:13:25.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.248" endtime="20201112 10:13:25.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.257" endtime="20201112 10:13:25.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:25.261" endtime="20201112 10:13:25.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.259" endtime="20201112 10:13:25.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.256" endtime="20201112 10:13:25.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:24.897" endtime="20201112 10:13:25.281"></status>
</kw>
<msg timestamp="20201112 10:13:25.282" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.289" endtime="20201112 10:13:25.304"></status>
</kw>
<msg timestamp="20201112 10:13:25.305" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:25.288" endtime="20201112 10:13:25.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:25.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:25.306" endtime="20201112 10:13:25.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.308" endtime="20201112 10:13:25.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.285" endtime="20201112 10:13:25.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.284" endtime="20201112 10:13:25.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.317" endtime="20201112 10:13:25.606"></status>
</kw>
<msg timestamp="20201112 10:13:25.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:25.316" endtime="20201112 10:13:25.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:25.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017840819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017842681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:25.611" endtime="20201112 10:13:25.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.619" endtime="20201112 10:13:25.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.313" endtime="20201112 10:13:25.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.311" endtime="20201112 10:13:25.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:25.625" level="INFO">${RESULT} = [{'time': 0.017842681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8619999999983095e-06, 'source_diff': 1.8619999999983095e-06}, {'time': 0.01784825, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:13:25.622" endtime="20201112 10:13:25.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:25.639" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:25.626" endtime="20201112 10:13:25.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:25.644" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:25.643" endtime="20201112 10:13:25.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:25.646" level="INFO">VALUE: [1.8619999999983095e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.930000000000681e-06, 1.915999999997642e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.901999999998072e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 10:13:25.645" endtime="20201112 10:13:25.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.640" endtime="20201112 10:13:25.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.650" endtime="20201112 10:13:25.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:25.653" endtime="20201112 10:13:25.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.651" endtime="20201112 10:13:25.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.648" endtime="20201112 10:13:25.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.282" endtime="20201112 10:13:25.674"></status>
</kw>
<msg timestamp="20201112 10:13:25.674" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.682" endtime="20201112 10:13:25.697"></status>
</kw>
<msg timestamp="20201112 10:13:25.697" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:25.680" endtime="20201112 10:13:25.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:25.700" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:25.699" endtime="20201112 10:13:25.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.701" endtime="20201112 10:13:25.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.677" endtime="20201112 10:13:25.703"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.676" endtime="20201112 10:13:25.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:25.710" endtime="20201112 10:13:26.000"></status>
</kw>
<msg timestamp="20201112 10:13:26.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:25.709" endtime="20201112 10:13:26.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:26.004" endtime="20201112 10:13:26.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.013" endtime="20201112 10:13:26.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.706" endtime="20201112 10:13:26.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.704" endtime="20201112 10:13:26.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:26.019" level="INFO">${RESULT} = [{'time': 0.017905514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017910083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:26.016" endtime="20201112 10:13:26.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:26.033" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:26.020" endtime="20201112 10:13:26.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.038" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:26.037" endtime="20201112 10:13:26.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.040" level="INFO">VALUE: [1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.7909999999975168e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 10:13:26.039" endtime="20201112 10:13:26.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.034" endtime="20201112 10:13:26.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.044" endtime="20201112 10:13:26.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:26.047" endtime="20201112 10:13:26.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.045" endtime="20201112 10:13:26.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.042" endtime="20201112 10:13:26.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:25.674" endtime="20201112 10:13:26.068"></status>
</kw>
<msg timestamp="20201112 10:13:26.068" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.075" endtime="20201112 10:13:26.091"></status>
</kw>
<msg timestamp="20201112 10:13:26.091" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:26.074" endtime="20201112 10:13:26.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:26.092" endtime="20201112 10:13:26.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.095" endtime="20201112 10:13:26.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.071" endtime="20201112 10:13:26.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.070" endtime="20201112 10:13:26.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.104" endtime="20201112 10:13:26.391"></status>
</kw>
<msg timestamp="20201112 10:13:26.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017954986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:26.102" endtime="20201112 10:13:26.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017954986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:26.395" endtime="20201112 10:13:26.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.403" endtime="20201112 10:13:26.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.100" endtime="20201112 10:13:26.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.098" endtime="20201112 10:13:26.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:26.411" level="INFO">${RESULT} = [{'time': 0.017956847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.017962361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:26.408" endtime="20201112 10:13:26.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:26.424" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:26.412" endtime="20201112 10:13:26.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.429" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:26.428" endtime="20201112 10:13:26.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.431" level="INFO">VALUE: [1.8610000000023053e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.9020000000015413e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.901999999998072e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.9160000000011113e-06, 1.819000000000126e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.903000000001015e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.832999999999696e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8479999999987395e-06]</msg>
<status status="PASS" starttime="20201112 10:13:26.430" endtime="20201112 10:13:26.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.425" endtime="20201112 10:13:26.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.435" endtime="20201112 10:13:26.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:26.438" endtime="20201112 10:13:26.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.436" endtime="20201112 10:13:26.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.433" endtime="20201112 10:13:26.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.068" endtime="20201112 10:13:26.459"></status>
</kw>
<msg timestamp="20201112 10:13:26.459" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.467" endtime="20201112 10:13:26.481"></status>
</kw>
<msg timestamp="20201112 10:13:26.482" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:26.465" endtime="20201112 10:13:26.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.484" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:26.483" endtime="20201112 10:13:26.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.485" endtime="20201112 10:13:26.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.463" endtime="20201112 10:13:26.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.461" endtime="20201112 10:13:26.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.494" endtime="20201112 10:13:26.784"></status>
</kw>
<msg timestamp="20201112 10:13:26.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017861639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:26.493" endtime="20201112 10:13:26.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017861639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0178635, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:26.788" endtime="20201112 10:13:26.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.797" endtime="20201112 10:13:26.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.490" endtime="20201112 10:13:26.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.488" endtime="20201112 10:13:26.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:26.804" level="INFO">${RESULT} = [{'time': 0.0178635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.017869306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:26.800" endtime="20201112 10:13:26.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:26.819" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:26.805" endtime="20201112 10:13:26.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.823" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:26.822" endtime="20201112 10:13:26.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.825" level="INFO">VALUE: [1.8610000000023053e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.903000000001015e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 10:13:26.824" endtime="20201112 10:13:26.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.819" endtime="20201112 10:13:26.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.829" endtime="20201112 10:13:26.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:26.832" endtime="20201112 10:13:26.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.831" endtime="20201112 10:13:26.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.827" endtime="20201112 10:13:26.853"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.460" endtime="20201112 10:13:26.853"></status>
</kw>
<msg timestamp="20201112 10:13:26.853" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.861" endtime="20201112 10:13:26.877"></status>
</kw>
<msg timestamp="20201112 10:13:26.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:26.859" endtime="20201112 10:13:26.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:26.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:26.878" endtime="20201112 10:13:26.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.880" endtime="20201112 10:13:26.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.857" endtime="20201112 10:13:26.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.855" endtime="20201112 10:13:26.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:26.889" endtime="20201112 10:13:27.175"></status>
</kw>
<msg timestamp="20201112 10:13:27.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018021292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018023167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:26.888" endtime="20201112 10:13:27.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018021292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018023167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:27.180" endtime="20201112 10:13:27.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.188" endtime="20201112 10:13:27.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.885" endtime="20201112 10:13:27.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.884" endtime="20201112 10:13:27.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:27.194" level="INFO">${RESULT} = [{'time': 0.018023167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018029403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:27.191" endtime="20201112 10:13:27.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:27.207" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:27.195" endtime="20201112 10:13:27.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.212" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 10:13:27.211" endtime="20201112 10:13:27.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.214" level="INFO">VALUE: [1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8339999999991696e-06, 1.9160000000011113e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8880000000019714e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 10:13:27.213" endtime="20201112 10:13:27.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.208" endtime="20201112 10:13:27.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.218" endtime="20201112 10:13:27.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:27.221" endtime="20201112 10:13:27.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.220" endtime="20201112 10:13:27.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.216" endtime="20201112 10:13:27.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:26.854" endtime="20201112 10:13:27.242"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:19.433" endtime="20201112 10:13:27.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:27.246" endtime="20201112 10:13:27.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.245" endtime="20201112 10:13:27.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.243" endtime="20201112 10:13:27.267"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:19.355" endtime="20201112 10:13:27.267" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:27.275" endtime="20201112 10:13:27.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.274" endtime="20201112 10:13:27.295"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.308" endtime="20201112 10:13:27.332"></status>
</kw>
<msg timestamp="20201112 10:13:27.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:27.306" endtime="20201112 10:13:27.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:27.334" endtime="20201112 10:13:27.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.338" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:27.336" endtime="20201112 10:13:27.338"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:27.304" endtime="20201112 10:13:27.339"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:27.301" endtime="20201112 10:13:27.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.300" endtime="20201112 10:13:27.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:27.344" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:27.343" endtime="20201112 10:13:27.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.341" endtime="20201112 10:13:27.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.299" endtime="20201112 10:13:27.344"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.299" endtime="20201112 10:13:27.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.345" endtime="20201112 10:13:27.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.297" endtime="20201112 10:13:27.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.296" endtime="20201112 10:13:27.348"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.272" endtime="20201112 10:13:27.348"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.357" endtime="20201112 10:13:27.379"></status>
</kw>
<msg timestamp="20201112 10:13:27.380" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:27.355" endtime="20201112 10:13:27.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.382" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:27.381" endtime="20201112 10:13:27.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.383" endtime="20201112 10:13:27.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.353" endtime="20201112 10:13:27.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.351" endtime="20201112 10:13:27.386"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.388" endtime="20201112 10:13:27.389"></status>
</kw>
<msg timestamp="20201112 10:13:27.390" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:13:27.386" endtime="20201112 10:13:27.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.394" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:27.393" endtime="20201112 10:13:27.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.396" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:27.395" endtime="20201112 10:13:27.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.391" endtime="20201112 10:13:27.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.401" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:27.400" endtime="20201112 10:13:27.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.403" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:27.402" endtime="20201112 10:13:27.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.397" endtime="20201112 10:13:27.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.410" endtime="20201112 10:13:27.695"></status>
</kw>
<msg timestamp="20201112 10:13:27.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072889056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072922528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:27.408" endtime="20201112 10:13:27.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072889056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072922528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:27.700" endtime="20201112 10:13:27.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.708" endtime="20201112 10:13:27.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.406" endtime="20201112 10:13:27.710"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.404" endtime="20201112 10:13:27.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:27.715" level="INFO">${RESULT} = [{'time': 0.072922528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347200000000661e-05, 'source_diff': 3.347200000000661e-05}, {'time': 0.072935458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:27.711" endtime="20201112 10:13:27.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:27.728" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:27.715" endtime="20201112 10:13:27.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.732" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 10:13:27.731" endtime="20201112 10:13:27.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.735" level="INFO">VALUE: [3.347200000000661e-05, 7.457999999987974e-06, 7.472999999993957e-06, 7.514000000000132e-06, 7.472000000008361e-06, 7.444999999994817e-06, 7.486000000000992e-06, 7.472000000008361e-06, 7.416999999995677e-06, 7.500000000007501e-06, 7.458000000001852e-06, 7.457999999987974e-06, 7.459000000001326e-06, 7.458000000001852e-06, 7.443999999995343e-06, 7.443999999995343e-06, 7.472000000008361e-06, 7.458000000001852e-06, 7.458000000001852e-06, 7.444999999994817e-06, 7.430000000002712e-06, 7.458000000001852e-06, 7.445000000008695e-06, 7.458000000001852e-06, 7.444000000009221e-06, 7.4870000000004655e-06, 7.443999999995343e-06, 7.472000000008361e-06, 7.458000000001852e-06, 7.459000000001326e-06, 7.486000000000992e-06, 7.472000000008361e-06, 7.471999999994483e-06, 7.458999999987448e-06, 7.403000000003046e-06, 7.459000000001326e-06, 7.472000000008361e-06, 7.459000000001326e-06, 7.514000000000132e-06, 7.459000000001326e-06, 7.444999999994817e-06, 7.457999999987974e-06, 7.471999999994483e-06, 7.458000000001852e-06, 7.459000000001326e-06, 7.471999999994483e-06, 7.471999999994483e-06, 7.471999999994483e-06, 7.443999999995343e-06, 7.472000000008361e-06]</msg>
<status status="PASS" starttime="20201112 10:13:27.734" endtime="20201112 10:13:27.735"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.728" endtime="20201112 10:13:27.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.738" endtime="20201112 10:13:27.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:27.742" endtime="20201112 10:13:27.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.740" endtime="20201112 10:13:27.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.736" endtime="20201112 10:13:27.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.349" endtime="20201112 10:13:27.762"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:27.269" endtime="20201112 10:13:27.763" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:27.771" endtime="20201112 10:13:27.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.769" endtime="20201112 10:13:27.791"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.804" endtime="20201112 10:13:27.826"></status>
</kw>
<msg timestamp="20201112 10:13:27.827" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:27.803" endtime="20201112 10:13:27.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.829" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:27.828" endtime="20201112 10:13:27.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.832" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:27.831" endtime="20201112 10:13:27.833"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:27.799" endtime="20201112 10:13:27.833"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:27.797" endtime="20201112 10:13:27.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.796" endtime="20201112 10:13:27.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:27.838" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:27.837" endtime="20201112 10:13:27.838"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.835" endtime="20201112 10:13:27.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.795" endtime="20201112 10:13:27.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.794" endtime="20201112 10:13:27.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.840" endtime="20201112 10:13:27.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.793" endtime="20201112 10:13:27.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.791" endtime="20201112 10:13:27.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.768" endtime="20201112 10:13:27.842"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.852" endtime="20201112 10:13:27.909"></status>
</kw>
<msg timestamp="20201112 10:13:27.910" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:27.850" endtime="20201112 10:13:27.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.912" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:27.911" endtime="20201112 10:13:27.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.913" endtime="20201112 10:13:27.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.847" endtime="20201112 10:13:27.915"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.845" endtime="20201112 10:13:27.916"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.918" endtime="20201112 10:13:27.919"></status>
</kw>
<msg timestamp="20201112 10:13:27.920" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:13:27.916" endtime="20201112 10:13:27.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.924" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:27.923" endtime="20201112 10:13:27.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.926" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:27.925" endtime="20201112 10:13:27.926"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.921" endtime="20201112 10:13:27.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.930" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:27.929" endtime="20201112 10:13:27.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:27.932" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:27.932" endtime="20201112 10:13:27.933"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.927" endtime="20201112 10:13:27.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:27.941" endtime="20201112 10:13:28.231"></status>
</kw>
<msg timestamp="20201112 10:13:28.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071855375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071881472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:27.938" endtime="20201112 10:13:28.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071855375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071881472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:28.235" endtime="20201112 10:13:28.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.243" endtime="20201112 10:13:28.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.936" endtime="20201112 10:13:28.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.934" endtime="20201112 10:13:28.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:28.250" level="INFO">${RESULT} = [{'time': 0.071881472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.60970000000027e-05, 'source_diff': 2.60970000000027e-05}, {'time': 0.072636778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:28.246" endtime="20201112 10:13:28.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:28.265" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:28.251" endtime="20201112 10:13:28.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.270" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 10:13:28.269" endtime="20201112 10:13:28.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.272" level="INFO">VALUE: [2.60970000000027e-05, 2.6235999999998927e-05, 2.6264000000011944e-05, 2.6250000000005436e-05, 2.6291999999997206e-05, 2.6249999999991558e-05, 2.6235999999998927e-05, 2.6291999999997206e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6291999999997206e-05, 2.6249999999991558e-05, 2.6235999999998927e-05, 2.6221999999992418e-05, 2.6249999999991558e-05, 2.6250000000005436e-05, 2.6306000000003715e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6291999999997206e-05, 2.6318999999996873e-05, 2.6249999999991558e-05, 2.6278000000004575e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6291999999997206e-05, 2.6250000000005436e-05, 2.6262999999998593e-05, 2.6222000000006296e-05, 2.6277000000005102e-05, 2.6262999999998593e-05, 2.6263999999998067e-05, 2.6235999999998927e-05, 2.6263999999998067e-05, 2.6250000000005436e-05, 2.6249999999991558e-05, 2.6263999999998067e-05, 2.6305999999989838e-05, 2.6249999999991558e-05, 2.6263999999998067e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.620899999999926e-05, 2.6235999999998927e-05]</msg>
<status status="PASS" starttime="20201112 10:13:28.271" endtime="20201112 10:13:28.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.266" endtime="20201112 10:13:28.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.275" endtime="20201112 10:13:28.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:28.279" endtime="20201112 10:13:28.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.277" endtime="20201112 10:13:28.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.274" endtime="20201112 10:13:28.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:27.843" endtime="20201112 10:13:28.300"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:27.765" endtime="20201112 10:13:28.300" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:28.308" endtime="20201112 10:13:28.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.306" endtime="20201112 10:13:28.328"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.342" endtime="20201112 10:13:28.365"></status>
</kw>
<msg timestamp="20201112 10:13:28.365" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:28.339" endtime="20201112 10:13:28.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:28.366" endtime="20201112 10:13:28.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.371" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:28.369" endtime="20201112 10:13:28.371"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:28.336" endtime="20201112 10:13:28.371"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:28.334" endtime="20201112 10:13:28.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.333" endtime="20201112 10:13:28.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:28.376" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:28.375" endtime="20201112 10:13:28.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.373" endtime="20201112 10:13:28.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.332" endtime="20201112 10:13:28.377"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.332" endtime="20201112 10:13:28.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.378" endtime="20201112 10:13:28.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.330" endtime="20201112 10:13:28.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.329" endtime="20201112 10:13:28.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.305" endtime="20201112 10:13:28.381"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.390" endtime="20201112 10:13:28.543"></status>
</kw>
<msg timestamp="20201112 10:13:28.543" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:28.388" endtime="20201112 10:13:28.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.546" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:28.544" endtime="20201112 10:13:28.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.547" endtime="20201112 10:13:28.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.386" endtime="20201112 10:13:28.549"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.383" endtime="20201112 10:13:28.549"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.551" endtime="20201112 10:13:28.553"></status>
</kw>
<msg timestamp="20201112 10:13:28.553" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:13:28.550" endtime="20201112 10:13:28.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.557" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:28.556" endtime="20201112 10:13:28.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.560" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:28.559" endtime="20201112 10:13:28.560"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.554" endtime="20201112 10:13:28.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.564" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:28.563" endtime="20201112 10:13:28.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.566" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:28.565" endtime="20201112 10:13:28.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.561" endtime="20201112 10:13:28.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.573" endtime="20201112 10:13:28.884"></status>
</kw>
<msg timestamp="20201112 10:13:28.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074342431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074391681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:28.572" endtime="20201112 10:13:28.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:28.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074342431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074391681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:28.888" endtime="20201112 10:13:28.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:28.896" endtime="20201112 10:13:28.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.569" endtime="20201112 10:13:28.898"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.568" endtime="20201112 10:13:28.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:28.903" level="INFO">${RESULT} = [{'time': 0.074391681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.925000000000068e-05, 'source_diff': 4.925000000000068e-05}, {'time': 0.077074222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:28.899" endtime="20201112 10:13:29.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:29.033" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:29.020" endtime="20201112 10:13:29.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.038" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 10:13:29.036" endtime="20201112 10:13:29.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.040" level="INFO">VALUE: [4.925000000000068e-05, 4.906899999999881e-05, 4.906999999999828e-05, 4.908299999999144e-05, 4.9069000000012686e-05, 4.908300000000532e-05, 4.906999999999828e-05, 4.908400000000479e-05, 4.909799999999742e-05, 4.908300000000532e-05, 4.906899999999881e-05, 4.905500000000618e-05, 4.899999999999349e-05, 4.906999999999828e-05, 4.912499999999709e-05, 4.9139000000003596e-05, 4.908300000000532e-05, 4.908300000000532e-05, 4.9069000000012686e-05, 4.909699999999795e-05, 4.908300000000532e-05, 4.9069999999984404e-05, 4.9027999999978755e-05, 4.908299999997756e-05, 4.909799999999742e-05, 4.909699999999795e-05, 4.9069999999984404e-05, 4.908300000000532e-05, 4.905599999999177e-05, 4.909799999999742e-05, 4.908300000000532e-05, 4.908400000000479e-05, 4.90549999999923e-05, 4.909699999999795e-05, 4.908300000000532e-05, 4.90549999999923e-05, 4.909699999999795e-05, 4.905600000001953e-05, 4.909699999999795e-05, 4.908300000000532e-05, 4.908300000000532e-05, 4.902800000000651e-05, 4.9069000000012686e-05, 4.9097000000025703e-05, 4.907000000001216e-05, 4.902800000000651e-05, 4.907000000001216e-05, 4.9069000000012686e-05, 4.9069000000012686e-05, 4.9069000000012686e-05]</msg>
<status status="PASS" starttime="20201112 10:13:29.039" endtime="20201112 10:13:29.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.034" endtime="20201112 10:13:29.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.043" endtime="20201112 10:13:29.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:29.046" endtime="20201112 10:13:29.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.045" endtime="20201112 10:13:29.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.041" endtime="20201112 10:13:29.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:28.382" endtime="20201112 10:13:29.067"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:28.302" endtime="20201112 10:13:29.068" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:29.076" endtime="20201112 10:13:29.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.074" endtime="20201112 10:13:29.096"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.109" endtime="20201112 10:13:29.131"></status>
</kw>
<msg timestamp="20201112 10:13:29.132" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:29.107" endtime="20201112 10:13:29.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.134" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:29.133" endtime="20201112 10:13:29.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.137" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:29.135" endtime="20201112 10:13:29.137"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:29.104" endtime="20201112 10:13:29.138"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:29.102" endtime="20201112 10:13:29.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.101" endtime="20201112 10:13:29.139"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:29.143" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:29.142" endtime="20201112 10:13:29.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.140" endtime="20201112 10:13:29.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.100" endtime="20201112 10:13:29.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.100" endtime="20201112 10:13:29.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.145" endtime="20201112 10:13:29.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.098" endtime="20201112 10:13:29.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.096" endtime="20201112 10:13:29.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.072" endtime="20201112 10:13:29.147"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.156" endtime="20201112 10:13:29.179"></status>
</kw>
<msg timestamp="20201112 10:13:29.180" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:29.155" endtime="20201112 10:13:29.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.182" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:29.181" endtime="20201112 10:13:29.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.183" endtime="20201112 10:13:29.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.152" endtime="20201112 10:13:29.185"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.150" endtime="20201112 10:13:29.186"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.188" endtime="20201112 10:13:29.189"></status>
</kw>
<msg timestamp="20201112 10:13:29.190" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:13:29.186" endtime="20201112 10:13:29.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.194" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:29.193" endtime="20201112 10:13:29.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.196" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:29.195" endtime="20201112 10:13:29.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.191" endtime="20201112 10:13:29.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.201" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:29.200" endtime="20201112 10:13:29.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.203" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:29.202" endtime="20201112 10:13:29.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.197" endtime="20201112 10:13:29.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.210" endtime="20201112 10:13:29.495"></status>
</kw>
<msg timestamp="20201112 10:13:29.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070967583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070968667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:29.208" endtime="20201112 10:13:29.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070967583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070968667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:29.499" endtime="20201112 10:13:29.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.508" endtime="20201112 10:13:29.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.206" endtime="20201112 10:13:29.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.204" endtime="20201112 10:13:29.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:29.515" level="INFO">${RESULT} = [{'time': 0.070968667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.070980083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:29.512" endtime="20201112 10:13:29.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:29.529" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:29.516" endtime="20201112 10:13:29.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.533" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 10:13:29.532" endtime="20201112 10:13:29.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.536" level="INFO">VALUE: [1.0839999999984196e-06, 1.1389999999972256e-06, 1.1249999999907168e-06, 1.1109999999980857e-06, 1.1250000000045945e-06, 1.1249999999907168e-06, 1.1110000000119635e-06, 1.069000000006315e-06, 1.1389999999972256e-06, 1.1669999999963654e-06, 1.1250000000045945e-06, 1.1249999999907168e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1530000000037344e-06, 1.1119999999975594e-06, 1.1250000000045945e-06, 1.1810000000028742e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.1390000000111034e-06, 1.1810000000028742e-06, 1.0560000000131575e-06, 1.1250000000045945e-06, 1.1529999999898566e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1530000000037344e-06, 1.1109999999980857e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1389999999972256e-06, 1.082999999998946e-06, 1.1250000000045945e-06, 1.1810000000028742e-06, 1.082999999998946e-06, 1.1389999999972256e-06, 1.0689999999924371e-06, 1.096999999991577e-06, 1.1389999999972256e-06, 1.1249999999907168e-06, 1.1809999999889964e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.137999999997752e-06, 1.0970000000054547e-06]</msg>
<status status="PASS" starttime="20201112 10:13:29.534" endtime="20201112 10:13:29.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.530" endtime="20201112 10:13:29.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.539" endtime="20201112 10:13:29.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:29.542" endtime="20201112 10:13:29.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.541" endtime="20201112 10:13:29.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.537" endtime="20201112 10:13:29.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.148" endtime="20201112 10:13:29.563"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:29.070" endtime="20201112 10:13:29.564" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:29.571" endtime="20201112 10:13:29.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.570" endtime="20201112 10:13:29.593"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.622" endtime="20201112 10:13:29.652"></status>
</kw>
<msg timestamp="20201112 10:13:29.653" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:29.617" endtime="20201112 10:13:29.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.658" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:29.655" endtime="20201112 10:13:29.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.665" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:29.661" endtime="20201112 10:13:29.665"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:29.612" endtime="20201112 10:13:29.667"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:29.606" endtime="20201112 10:13:29.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.604" endtime="20201112 10:13:29.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:29.677" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:29.675" endtime="20201112 10:13:29.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.671" endtime="20201112 10:13:29.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.602" endtime="20201112 10:13:29.679"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.601" endtime="20201112 10:13:29.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.681" endtime="20201112 10:13:29.683"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.598" endtime="20201112 10:13:29.684"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.595" endtime="20201112 10:13:29.685"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.569" endtime="20201112 10:13:29.686"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.696" endtime="20201112 10:13:29.755"></status>
</kw>
<msg timestamp="20201112 10:13:29.756" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:29.695" endtime="20201112 10:13:29.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.758" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:29.757" endtime="20201112 10:13:29.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.759" endtime="20201112 10:13:29.761"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.692" endtime="20201112 10:13:29.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.690" endtime="20201112 10:13:29.762"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.764" endtime="20201112 10:13:29.766"></status>
</kw>
<msg timestamp="20201112 10:13:29.766" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:13:29.763" endtime="20201112 10:13:29.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.770" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:29.769" endtime="20201112 10:13:29.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.772" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:29.771" endtime="20201112 10:13:29.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.767" endtime="20201112 10:13:29.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.777" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:29.776" endtime="20201112 10:13:29.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:29.779" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:29.778" endtime="20201112 10:13:29.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.774" endtime="20201112 10:13:29.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:29.787" endtime="20201112 10:13:30.082"></status>
</kw>
<msg timestamp="20201112 10:13:30.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.116209444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.116217931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:29.785" endtime="20201112 10:13:30.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.116209444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.116217931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:30.086" endtime="20201112 10:13:30.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.094" endtime="20201112 10:13:30.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.782" endtime="20201112 10:13:30.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.781" endtime="20201112 10:13:30.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:30.101" level="INFO">${RESULT} = [{'time': 0.116217931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.487000000001466e-06, 'source_diff': 8.487000000001466e-06}, {'time': 0.116979181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:30.098" endtime="20201112 10:13:30.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:30.117" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:30.102" endtime="20201112 10:13:30.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.121" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 10:13:30.120" endtime="20201112 10:13:30.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.124" level="INFO">VALUE: [8.487000000001466e-06, 8.472999999994957e-06, 8.473000000008835e-06, 8.5000000000085e-06, 8.445000000009695e-06, 8.5000000000085e-06, 8.486000000001992e-06, 8.472999999994957e-06, 8.472999999994957e-06, 8.473000000008835e-06, 8.486000000001992e-06, 8.5000000000085e-06, 8.486000000001992e-06, 8.472000000009361e-06, 8.458999999988448e-06, 8.486000000001992e-06, 8.499999999994623e-06, 8.473000000008835e-06, 8.444000000024099e-06, 8.457999999988974e-06, 8.471999999981605e-06, 8.459000000016204e-06, 8.472000000009361e-06, 8.471999999981605e-06, 8.471999999981605e-06, 8.459000000016204e-06, 8.45800000001673e-06, 8.471999999981605e-06, 8.486000000001992e-06, 8.45800000001673e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.485999999974236e-06, 8.471999999981605e-06, 8.486000000001992e-06, 8.472000000009361e-06, 8.471999999981605e-06, 8.443999999996343e-06, 8.473000000008835e-06, 8.486000000001992e-06, 8.499999999994623e-06, 8.486000000001992e-06, 8.472000000009361e-06, 8.472000000009361e-06, 8.457999999988974e-06, 8.45800000001673e-06, 8.486000000001992e-06, 8.472000000009361e-06, 8.485999999974236e-06, 8.486000000001992e-06]</msg>
<status status="PASS" starttime="20201112 10:13:30.122" endtime="20201112 10:13:30.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.118" endtime="20201112 10:13:30.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.127" endtime="20201112 10:13:30.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:30.130" endtime="20201112 10:13:30.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.129" endtime="20201112 10:13:30.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.125" endtime="20201112 10:13:30.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:29.687" endtime="20201112 10:13:30.151"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:29.566" endtime="20201112 10:13:30.152" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:30.159" endtime="20201112 10:13:30.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.158" endtime="20201112 10:13:30.179"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.193" endtime="20201112 10:13:30.216"></status>
</kw>
<msg timestamp="20201112 10:13:30.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:30.190" endtime="20201112 10:13:30.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:30.217" endtime="20201112 10:13:30.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:30.220" endtime="20201112 10:13:30.223"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:30.188" endtime="20201112 10:13:30.223"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:30.186" endtime="20201112 10:13:30.224"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.184" endtime="20201112 10:13:30.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:30.228" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:30.227" endtime="20201112 10:13:30.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.225" endtime="20201112 10:13:30.228"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.184" endtime="20201112 10:13:30.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.183" endtime="20201112 10:13:30.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.229" endtime="20201112 10:13:30.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.182" endtime="20201112 10:13:30.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.180" endtime="20201112 10:13:30.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.156" endtime="20201112 10:13:30.232"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.241" endtime="20201112 10:13:30.399"></status>
</kw>
<msg timestamp="20201112 10:13:30.400" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:30.240" endtime="20201112 10:13:30.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.405" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:30.402" endtime="20201112 10:13:30.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.407" endtime="20201112 10:13:30.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.237" endtime="20201112 10:13:30.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.235" endtime="20201112 10:13:30.413"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.417" endtime="20201112 10:13:30.420"></status>
</kw>
<msg timestamp="20201112 10:13:30.421" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 10:13:30.414" endtime="20201112 10:13:30.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.429" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 10:13:30.427" endtime="20201112 10:13:30.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.434" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 10:13:30.432" endtime="20201112 10:13:30.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.423" endtime="20201112 10:13:30.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.443" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 10:13:30.441" endtime="20201112 10:13:30.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.447" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 10:13:30.445" endtime="20201112 10:13:30.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.437" endtime="20201112 10:13:30.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.463" endtime="20201112 10:13:30.764"></status>
</kw>
<msg timestamp="20201112 10:13:30.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074595889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074611861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:30.459" endtime="20201112 10:13:30.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074595889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074611861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:30.768" endtime="20201112 10:13:30.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.776" endtime="20201112 10:13:30.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.454" endtime="20201112 10:13:30.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.451" endtime="20201112 10:13:30.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:30.783" level="INFO">${RESULT} = [{'time': 0.074611861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5972000000002984e-05, 'source_diff': 1.5972000000002984e-05}, {'time': 0.077311681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:30.780" endtime="20201112 10:13:30.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 10:13:30.796" level="INFO">${OVERHEAD} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:30.784" endtime="20201112 10:13:30.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.801" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 10:13:30.800" endtime="20201112 10:13:30.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.803" level="INFO">VALUE: [1.5972000000002984e-05, 1.595899999999595e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.6014000000008632e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5929999999997335e-05, 1.5971999999989106e-05, 1.5959000000009826e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5957999999996475e-05, 1.5917000000004178e-05, 1.5972000000002984e-05, 1.5973000000002457e-05, 1.5985999999995615e-05, 1.6013999999994755e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5973000000002457e-05, 1.6028000000001263e-05, 1.5972000000002984e-05, 1.5957999999982597e-05, 1.598600000002337e-05, 1.5959000000009826e-05, 1.6014000000008632e-05, 1.5985999999995615e-05, 1.6000000000016e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.5972000000002984e-05, 1.5957999999982597e-05, 1.5972000000002984e-05, 1.5929999999997335e-05, 1.6014000000008632e-05, 1.594499999998944e-05, 1.5985999999995615e-05, 1.5944000000017722e-05, 1.5957999999982597e-05, 1.5973000000002457e-05, 1.5959000000009826e-05, 1.5958000000010353e-05, 1.598600000002337e-05, 1.5985999999995615e-05, 1.590299999998379e-05, 1.5943999999989966e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5959000000009826e-05]</msg>
<status status="PASS" starttime="20201112 10:13:30.802" endtime="20201112 10:13:30.804"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.797" endtime="20201112 10:13:30.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:30.806" endtime="20201112 10:13:30.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:30.810" endtime="20201112 10:13:30.829"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.808" endtime="20201112 10:13:30.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.805" endtime="20201112 10:13:30.830"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.233" endtime="20201112 10:13:30.830"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:30.154" endtime="20201112 10:13:30.831" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:10.118" endtime="20201112 10:13:30.838"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:13:30.905" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:13:30.914" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:13:31.937" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:13:30.904" endtime="20201112 10:13:31.937"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:13:31.940" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:13:31.938" endtime="20201112 10:13:31.940"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.903" endtime="20201112 10:13:31.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:31.943" endtime="20201112 10:13:32.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:31.941" endtime="20201112 10:13:32.186"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.199" endtime="20201112 10:13:32.224"></status>
</kw>
<msg timestamp="20201112 10:13:32.225" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.198" endtime="20201112 10:13:32.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.227" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.226" endtime="20201112 10:13:32.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.230" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:32.228" endtime="20201112 10:13:32.231"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:32.195" endtime="20201112 10:13:32.231"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:32.193" endtime="20201112 10:13:32.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.192" endtime="20201112 10:13:32.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:32.237" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:32.235" endtime="20201112 10:13:32.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.233" endtime="20201112 10:13:32.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.191" endtime="20201112 10:13:32.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.190" endtime="20201112 10:13:32.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.239" endtime="20201112 10:13:32.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.189" endtime="20201112 10:13:32.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.242" endtime="20201112 10:13:32.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.187" endtime="20201112 10:13:32.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:30.901" endtime="20201112 10:13:32.244"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:32.250" endtime="20201112 10:13:32.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.249" endtime="20201112 10:13:32.270"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.283" endtime="20201112 10:13:32.306"></status>
</kw>
<msg timestamp="20201112 10:13:32.307" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.281" endtime="20201112 10:13:32.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.309" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.308" endtime="20201112 10:13:32.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.312" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:13:32.310" endtime="20201112 10:13:32.313"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:32.279" endtime="20201112 10:13:32.314"></status>
</kw>
<status status="FAIL" starttime="20201112 10:13:32.276" endtime="20201112 10:13:32.314"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.275" endtime="20201112 10:13:32.315"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:13:32.318" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:13:32.318" endtime="20201112 10:13:32.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.315" endtime="20201112 10:13:32.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.274" endtime="20201112 10:13:32.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.274" endtime="20201112 10:13:32.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.320" endtime="20201112 10:13:32.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.272" endtime="20201112 10:13:32.322"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.271" endtime="20201112 10:13:32.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.247" endtime="20201112 10:13:32.323"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.334" endtime="20201112 10:13:32.350"></status>
</kw>
<msg timestamp="20201112 10:13:32.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.332" endtime="20201112 10:13:32.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.352" endtime="20201112 10:13:32.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.354" endtime="20201112 10:13:32.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.329" endtime="20201112 10:13:32.356"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.327" endtime="20201112 10:13:32.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.363" endtime="20201112 10:13:32.657"></status>
</kw>
<msg timestamp="20201112 10:13:32.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074249125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074281944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:32.361" endtime="20201112 10:13:32.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074249125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074281944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:32.661" endtime="20201112 10:13:32.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.670" endtime="20201112 10:13:32.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.359" endtime="20201112 10:13:32.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.357" endtime="20201112 10:13:32.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:32.676" level="INFO">${RESULT} = [{'time': 0.074281944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.281900000000337e-05, 'source_diff': 3.281900000000337e-05}, {'time': 0.074293972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:32.673" endtime="20201112 10:13:32.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:32.690" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:32.677" endtime="20201112 10:13:32.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.695" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 10:13:32.693" endtime="20201112 10:13:32.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.697" level="INFO">VALUE: [3.281900000000337e-05, 2.26400000000182e-06, 2.2770000000088553e-06, 2.750000000009689e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.777999999994951e-06, 2.833000000007635e-06, 2.76400000000232e-06, 2.2220000000100493e-06, 2.76400000000232e-06, 2.2630000000023465e-06, 2.76400000000232e-06, 2.3339999999927308e-06, 3.2919999999880822e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.76400000000232e-06, 3.2499999999963114e-06, 2.7630000000028465e-06, 3.2779999999954512e-06, 2.26400000000182e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.2629999999884687e-06, 2.2639999999879423e-06, 2.250000000009189e-06, 2.7499999999958114e-06, 2.7639999999884424e-06, 2.7360000000031803e-06, 3.26400000000282e-06, 2.7499999999958114e-06, 2.750000000009689e-06, 2.26400000000182e-06, 2.777999999994951e-06, 2.7630000000028465e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.2910000000014863e-06, 2.777999999994951e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.7630000000028465e-06, 2.277999999994451e-06, 2.2219999999961715e-06, 2.3200000000000998e-06, 2.26400000000182e-06, 2.7219999999966715e-06, 2.722999999996145e-06]</msg>
<status status="PASS" starttime="20201112 10:13:32.696" endtime="20201112 10:13:32.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.691" endtime="20201112 10:13:32.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.700" endtime="20201112 10:13:32.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:32.704" endtime="20201112 10:13:32.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.702" endtime="20201112 10:13:32.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.699" endtime="20201112 10:13:32.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.325" endtime="20201112 10:13:32.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.324" endtime="20201112 10:13:32.724"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.733" endtime="20201112 10:13:32.749"></status>
</kw>
<msg timestamp="20201112 10:13:32.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.731" endtime="20201112 10:13:32.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:32.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:32.751" endtime="20201112 10:13:32.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.753" endtime="20201112 10:13:32.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.729" endtime="20201112 10:13:32.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.727" endtime="20201112 10:13:32.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:32.762" endtime="20201112 10:13:33.052"></status>
</kw>
<msg timestamp="20201112 10:13:33.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020419014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:32.761" endtime="20201112 10:13:33.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020419014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020422292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.056" endtime="20201112 10:13:33.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.064" endtime="20201112 10:13:33.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.758" endtime="20201112 10:13:33.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.756" endtime="20201112 10:13:33.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:33.071" level="INFO">${RESULT} = [{'time': 0.020422292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.02043125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:13:33.067" endtime="20201112 10:13:33.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:33.086" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:33.072" endtime="20201112 10:13:33.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.090" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 10:13:33.089" endtime="20201112 10:13:33.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.093" level="INFO">VALUE: [3.27800000000239e-06, 3.750000000000281e-06, 3.1809999999979355e-06, 3.750000000000281e-06, 3.27800000000239e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.7640000000033202e-06, 3.763999999999851e-06, 3.249999999999781e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.77800000000289e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.7499999999968114e-06, 3.249999999999781e-06, 3.763999999999851e-06, 3.7499999999968114e-06, 3.249999999999781e-06, 3.750000000000281e-06, 4.264000000000351e-06, 3.249999999999781e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.763000000000377e-06, 4.264000000000351e-06, 3.763999999999851e-06, 3.2639999999993508e-06, 3.2639999999993508e-06, 3.818999999998657e-06, 3.249999999999781e-06, 3.750000000000281e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.763999999999851e-06, 3.763999999999851e-06, 3.2639999999993508e-06, 4.264000000000351e-06, 3.750000000000281e-06, 3.2079999999976017e-06, 3.276999999999447e-06, 3.2639999999993508e-06, 3.750000000000281e-06, 4.264000000000351e-06, 3.750000000000281e-06, 3.222000000000641e-06, 4.264000000000351e-06]</msg>
<status status="PASS" starttime="20201112 10:13:33.091" endtime="20201112 10:13:33.093"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.086" endtime="20201112 10:13:33.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.096" endtime="20201112 10:13:33.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:33.099" endtime="20201112 10:13:33.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.097" endtime="20201112 10:13:33.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.094" endtime="20201112 10:13:33.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.725" endtime="20201112 10:13:33.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.725" endtime="20201112 10:13:33.120"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.129" endtime="20201112 10:13:33.147"></status>
</kw>
<msg timestamp="20201112 10:13:33.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.127" endtime="20201112 10:13:33.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.148" endtime="20201112 10:13:33.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.151" endtime="20201112 10:13:33.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.125" endtime="20201112 10:13:33.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.122" endtime="20201112 10:13:33.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.161" endtime="20201112 10:13:33.447"></status>
</kw>
<msg timestamp="20201112 10:13:33.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.159" endtime="20201112 10:13:33.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019723792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.451" endtime="20201112 10:13:33.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.459" endtime="20201112 10:13:33.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.157" endtime="20201112 10:13:33.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.155" endtime="20201112 10:13:33.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:33.466" level="INFO">${RESULT} = [{'time': 0.019728028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.019737819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:33.463" endtime="20201112 10:13:33.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:33.480" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:33.467" endtime="20201112 10:13:33.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.484" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 10:13:33.483" endtime="20201112 10:13:33.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.486" level="INFO">VALUE: [4.236000000001211e-06, 4.763000000001377e-06, 4.264000000000351e-06, 4.764000000000851e-06, 4.264000000000351e-06, 4.250000000000781e-06, 4.7639999999973814e-06, 4.264000000000351e-06, 4.750000000001281e-06, 4.776999999997478e-06, 5.278000000000921e-06, 4.735999999998242e-06, 4.277999999999921e-06, 4.778000000000421e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.7639999999973814e-06, 4.764000000000851e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.750000000001281e-06, 4.736000000001711e-06, 4.277999999999921e-06, 4.277000000000447e-06, 4.264000000000351e-06, 4.291999999999491e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.222000000001641e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.707999999999102e-06, 4.762999999997908e-06, 4.250000000000781e-06, 4.750000000001281e-06, 4.750000000001281e-06, 4.764000000000851e-06, 4.262999999997408e-06, 4.264000000000351e-06, 4.736000000001711e-06, 4.3199999999986305e-06, 4.750000000001281e-06, 4.777000000000947e-06, 4.764000000000851e-06, 4.264000000000351e-06, 4.736000000001711e-06, 4.7639999999973814e-06]</msg>
<status status="PASS" starttime="20201112 10:13:33.485" endtime="20201112 10:13:33.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.480" endtime="20201112 10:13:33.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.490" endtime="20201112 10:13:33.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:33.493" endtime="20201112 10:13:33.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.491" endtime="20201112 10:13:33.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.488" endtime="20201112 10:13:33.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.121" endtime="20201112 10:13:33.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.120" endtime="20201112 10:13:33.514"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.523" endtime="20201112 10:13:33.541"></status>
</kw>
<msg timestamp="20201112 10:13:33.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.521" endtime="20201112 10:13:33.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.542" endtime="20201112 10:13:33.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.545" endtime="20201112 10:13:33.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.518" endtime="20201112 10:13:33.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.516" endtime="20201112 10:13:33.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.555" endtime="20201112 10:13:33.837"></status>
</kw>
<msg timestamp="20201112 10:13:33.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.553" endtime="20201112 10:13:33.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:33.841" endtime="20201112 10:13:33.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.850" endtime="20201112 10:13:33.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.551" endtime="20201112 10:13:33.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.549" endtime="20201112 10:13:33.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:33.857" level="INFO">${RESULT} = [{'time': 0.019928319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.762999999998908e-06, 'source_diff': 5.762999999998908e-06}, {'time': 0.019938417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:33.854" endtime="20201112 10:13:33.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:33.870" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:33.858" endtime="20201112 10:13:33.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.875" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 10:13:33.874" endtime="20201112 10:13:33.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.877" level="INFO">VALUE: [5.762999999998908e-06, 5.749999999998812e-06, 5.7779999999979514e-06, 5.762999999998908e-06, 5.749999999998812e-06, 5.306000000000061e-06, 5.2639999999978815e-06, 5.6939999999970625e-06, 5.750000000002281e-06, 5.7639999999983815e-06, 5.792000000000991e-06, 6.320000000000631e-06, 5.333000000003196e-06, 5.764000000001851e-06, 5.7639999999983815e-06, 5.264000000001351e-06, 5.708000000000102e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.277999999997451e-06, 6.2639999999988816e-06, 5.735999999999242e-06, 6.249999999999312e-06, 5.778000000001421e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.2639999999978815e-06, 5.7639999999983815e-06, 5.750000000002281e-06, 5.7639999999983815e-06, 5.290999999997548e-06, 5.695000000000006e-06, 5.264000000001351e-06, 5.820000000000131e-06, 5.736000000002711e-06, 5.764000000001851e-06, 5.778000000001421e-06, 5.764000000001851e-06, 5.7779999999979514e-06, 5.222000000002641e-06, 5.764000000001851e-06, 5.278000000000921e-06, 5.764000000001851e-06, 5.7639999999983815e-06, 5.2499999999983116e-06, 5.3189999999966875e-06, 5.235999999998742e-06, 5.250000000001781e-06, 5.750000000002281e-06, 5.264000000001351e-06]</msg>
<status status="PASS" starttime="20201112 10:13:33.876" endtime="20201112 10:13:33.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.871" endtime="20201112 10:13:33.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.881" endtime="20201112 10:13:33.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:33.884" endtime="20201112 10:13:33.903"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.883" endtime="20201112 10:13:33.904"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.879" endtime="20201112 10:13:33.904"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.515" endtime="20201112 10:13:33.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.514" endtime="20201112 10:13:33.905"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.913" endtime="20201112 10:13:33.929"></status>
</kw>
<msg timestamp="20201112 10:13:33.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.912" endtime="20201112 10:13:33.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:33.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:33.930" endtime="20201112 10:13:33.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.933" endtime="20201112 10:13:33.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.909" endtime="20201112 10:13:33.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.907" endtime="20201112 10:13:33.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:33.943" endtime="20201112 10:13:34.229"></status>
</kw>
<msg timestamp="20201112 10:13:34.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01970075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:33.941" endtime="20201112 10:13:34.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01970075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:34.234" endtime="20201112 10:13:34.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.242" endtime="20201112 10:13:34.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.939" endtime="20201112 10:13:34.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.937" endtime="20201112 10:13:34.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:34.249" level="INFO">${RESULT} = [{'time': 0.019707014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.019717111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:34.245" endtime="20201112 10:13:34.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:34.262" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:34.250" endtime="20201112 10:13:34.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.267" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 10:13:34.265" endtime="20201112 10:13:34.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.269" level="INFO">VALUE: [6.2639999999988816e-06, 6.7779999999989515e-06, 6.749999999999812e-06, 6.249999999999312e-06, 6.722000000000672e-06, 6.167000000001366e-06, 7.194999999998036e-06, 6.749999999999812e-06, 6.763999999999382e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.235999999999742e-06, 6.292000000001491e-06, 6.763999999999382e-06, 7.263999999999882e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.2639999999988816e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.264000000002351e-06, 6.709000000000576e-06, 6.264000000002351e-06, 6.763999999999382e-06, 6.2639999999988816e-06, 7.263999999999882e-06, 6.278000000001921e-06, 6.749999999999812e-06, 6.262999999999408e-06, 6.7779999999989515e-06, 6.7779999999989515e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.749999999999812e-06, 6.2779999999984515e-06, 6.235999999999742e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.763999999999382e-06, 7.263999999999882e-06, 7.263999999999882e-06, 6.263000000002877e-06, 6.2639999999988816e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.2639999999988816e-06, 6.235999999999742e-06]</msg>
<status status="PASS" starttime="20201112 10:13:34.268" endtime="20201112 10:13:34.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.263" endtime="20201112 10:13:34.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.272" endtime="20201112 10:13:34.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:34.276" endtime="20201112 10:13:34.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.274" endtime="20201112 10:13:34.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.270" endtime="20201112 10:13:34.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.906" endtime="20201112 10:13:34.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:33.905" endtime="20201112 10:13:34.296"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.305" endtime="20201112 10:13:34.323"></status>
</kw>
<msg timestamp="20201112 10:13:34.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.303" endtime="20201112 10:13:34.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.324" endtime="20201112 10:13:34.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.327" endtime="20201112 10:13:34.329"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.301" endtime="20201112 10:13:34.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.299" endtime="20201112 10:13:34.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.337" endtime="20201112 10:13:34.625"></status>
</kw>
<msg timestamp="20201112 10:13:34.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019448444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019456181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:34.335" endtime="20201112 10:13:34.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019448444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019456181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:34.630" endtime="20201112 10:13:34.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.638" endtime="20201112 10:13:34.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.333" endtime="20201112 10:13:34.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.331" endtime="20201112 10:13:34.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:34.645" level="INFO">${RESULT} = [{'time': 0.019456181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.737000000000716e-06, 'source_diff': 7.737000000000716e-06}, {'time': 0.019466792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:34.641" endtime="20201112 10:13:34.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:34.659" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:34.646" endtime="20201112 10:13:34.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.663" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 10:13:34.662" endtime="20201112 10:13:34.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.666" level="INFO">VALUE: [7.737000000000716e-06, 7.791999999999522e-06, 7.764000000000382e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.249999999996842e-06, 7.805999999999091e-06, 7.763999999996912e-06, 8.264000000000882e-06, 7.2629999999969386e-06, 7.263999999999882e-06, 7.236000000000742e-06, 8.249999999997842e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.764000000000382e-06, 7.721999999998203e-06, 7.764000000000382e-06, 7.722999999997676e-06, 8.278000000000452e-06, 7.777999999999952e-06, 7.263999999999882e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.235999999997272e-06, 7.791999999999522e-06, 7.764000000000382e-06, 7.250000000000312e-06, 7.762999999997439e-06, 8.277000000000978e-06, 7.2779999999994516e-06, 7.2219999999977025e-06, 7.694999999998536e-06, 7.777999999999952e-06, 7.764000000000382e-06, 7.222000000001172e-06, 7.305000000002587e-06, 7.764000000000382e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.777999999999952e-06, 7.818999999999188e-06, 7.2219999999977025e-06, 7.305999999998591e-06, 7.318999999998688e-06, 7.250000000000312e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201112 10:13:34.664" endtime="20201112 10:13:34.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.660" endtime="20201112 10:13:34.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.669" endtime="20201112 10:13:34.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:34.672" endtime="20201112 10:13:34.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.671" endtime="20201112 10:13:34.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.667" endtime="20201112 10:13:34.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.297" endtime="20201112 10:13:34.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.297" endtime="20201112 10:13:34.693"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.702" endtime="20201112 10:13:34.719"></status>
</kw>
<msg timestamp="20201112 10:13:34.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.700" endtime="20201112 10:13:34.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:34.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:34.721" endtime="20201112 10:13:34.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.724" endtime="20201112 10:13:34.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.698" endtime="20201112 10:13:34.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.696" endtime="20201112 10:13:34.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:34.733" endtime="20201112 10:13:35.022"></status>
</kw>
<msg timestamp="20201112 10:13:35.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019470986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:34.732" endtime="20201112 10:13:35.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019470986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.026" endtime="20201112 10:13:35.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.035" endtime="20201112 10:13:35.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.729" endtime="20201112 10:13:35.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.728" endtime="20201112 10:13:35.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:35.041" level="INFO">${RESULT} = [{'time': 0.019470986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.019486014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:35.038" endtime="20201112 10:13:35.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:35.054" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:35.042" endtime="20201112 10:13:35.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.059" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 10:13:35.058" endtime="20201112 10:13:35.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.061" level="INFO">VALUE: [8.792000000000522e-06, 8.778000000000952e-06, 8.764000000001382e-06, 8.249999999997842e-06, 9.264000000001882e-06, 8.193999999999563e-06, 8.776999999998009e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.305000000000118e-06, 8.763999999997912e-06, 8.235999999998272e-06, 8.764000000001382e-06, 8.236000000001742e-06, 8.776999999998009e-06, 8.278000000000452e-06, 8.764000000001382e-06, 8.263999999997412e-06, 8.777999999997482e-06, 8.777000000001478e-06, 8.763999999997912e-06, 8.278000000000452e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.235999999998272e-06, 8.250000000001312e-06, 8.221999999998703e-06, 8.762999999998439e-06, 8.207999999999133e-06, 8.264000000000882e-06, 8.777999999997482e-06, 8.764000000001382e-06, 8.250000000001312e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.263999999997412e-06, 8.263999999997412e-06, 8.250000000001312e-06, 8.776999999998009e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.250000000001312e-06, 8.764000000001382e-06, 8.264000000000882e-06, 8.750000000001812e-06, 8.221999999998703e-06, 8.777000000001478e-06, 8.790999999997579e-06, 8.764000000001382e-06, 8.790999999997579e-06]</msg>
<status status="PASS" starttime="20201112 10:13:35.060" endtime="20201112 10:13:35.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.055" endtime="20201112 10:13:35.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.064" endtime="20201112 10:13:35.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:35.068" endtime="20201112 10:13:35.087"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.066" endtime="20201112 10:13:35.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.063" endtime="20201112 10:13:35.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.694" endtime="20201112 10:13:35.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:34.694" endtime="20201112 10:13:35.089"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.098" endtime="20201112 10:13:35.115"></status>
</kw>
<msg timestamp="20201112 10:13:35.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.096" endtime="20201112 10:13:35.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.117" endtime="20201112 10:13:35.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.120" endtime="20201112 10:13:35.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.093" endtime="20201112 10:13:35.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.091" endtime="20201112 10:13:35.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.130" endtime="20201112 10:13:35.413"></status>
</kw>
<msg timestamp="20201112 10:13:35.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.128" endtime="20201112 10:13:35.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.418" endtime="20201112 10:13:35.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.426" endtime="20201112 10:13:35.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.125" endtime="20201112 10:13:35.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.124" endtime="20201112 10:13:35.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:35.433" level="INFO">${RESULT} = [{'time': 0.020013833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.020027944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:35.429" endtime="20201112 10:13:35.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:35.446" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:35.434" endtime="20201112 10:13:35.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.451" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 10:13:35.450" endtime="20201112 10:13:35.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.453" level="INFO">VALUE: [9.750000000002812e-06, 1.0262999999999939e-05, 9.763999999998912e-06, 9.764000000002382e-06, 1.0277999999998982e-05, 9.763999999998912e-06, 9.778000000001952e-06, 9.249999999998842e-06, 9.778000000001952e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.764000000002382e-06, 9.764000000002382e-06, 9.764000000002382e-06, 9.762999999999439e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.776999999999009e-06, 9.764000000002382e-06, 9.763999999998912e-06, 9.764000000002382e-06, 9.764000000002382e-06, 9.762999999999439e-06, 9.763999999998912e-06, 9.264000000001882e-06, 1.0263999999999412e-05, 9.235999999999273e-06, 9.762999999999439e-06, 9.278000000001452e-06, 9.749999999999343e-06, 9.249999999998842e-06, 9.264000000001882e-06, 9.763999999998912e-06, 9.763999999998912e-06, 9.263999999998412e-06, 9.194000000000563e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.276999999998509e-06, 9.195000000000036e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.750000000002812e-06, 9.764000000002382e-06, 9.749999999999343e-06, 9.763999999998912e-06, 9.292000000001022e-06, 9.264000000001882e-06, 9.264000000001882e-06]</msg>
<status status="PASS" starttime="20201112 10:13:35.452" endtime="20201112 10:13:35.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.447" endtime="20201112 10:13:35.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.456" endtime="20201112 10:13:35.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:35.459" endtime="20201112 10:13:35.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.458" endtime="20201112 10:13:35.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.454" endtime="20201112 10:13:35.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.090" endtime="20201112 10:13:35.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.089" endtime="20201112 10:13:35.481"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.489" endtime="20201112 10:13:35.507"></status>
</kw>
<msg timestamp="20201112 10:13:35.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.488" endtime="20201112 10:13:35.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.509" endtime="20201112 10:13:35.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.511" endtime="20201112 10:13:35.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.485" endtime="20201112 10:13:35.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.483" endtime="20201112 10:13:35.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.521" endtime="20201112 10:13:35.806"></status>
</kw>
<msg timestamp="20201112 10:13:35.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.520" endtime="20201112 10:13:35.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.810" endtime="20201112 10:13:35.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.818" endtime="20201112 10:13:35.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.517" endtime="20201112 10:13:35.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.515" endtime="20201112 10:13:35.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:35.825" level="INFO">${RESULT} = [{'time': 0.019960167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0750000000000343e-05, 'source_diff': 1.0750000000000343e-05}, {'time': 0.019973347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:35.821" endtime="20201112 10:13:35.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:35.838" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:35.826" endtime="20201112 10:13:35.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.843" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 10:13:35.842" endtime="20201112 10:13:35.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.845" level="INFO">VALUE: [1.0750000000000343e-05, 1.0832999999998288e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 1.0277000000002978e-05, 1.0763999999999913e-05, 1.0320000000001162e-05, 1.0291000000002548e-05, 1.0763999999999913e-05, 1.0777999999999482e-05, 1.0292000000002022e-05, 1.0763999999999913e-05, 1.0250000000003312e-05, 1.0777999999999482e-05, 1.0763999999999913e-05, 1.0249999999999843e-05, 1.0278000000002452e-05, 1.0750000000000343e-05, 1.0306000000001592e-05, 1.0236000000000273e-05, 1.0750000000000343e-05, 1.0290999999999079e-05, 1.0277999999998982e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.0262999999999939e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0347000000000828e-05, 1.0777999999999482e-05, 1.0236000000000273e-05, 1.0750000000000343e-05, 1.0263999999999412e-05, 1.0250000000003312e-05, 1.0208999999997137e-05, 1.0278000000002452e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.1277000000000509e-05, 1.0763999999999913e-05, 1.0263999999999412e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0737000000000246e-05, 1.0763999999999913e-05, 1.0277999999998982e-05]</msg>
<status status="PASS" starttime="20201112 10:13:35.844" endtime="20201112 10:13:35.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.839" endtime="20201112 10:13:35.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.849" endtime="20201112 10:13:35.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:35.852" endtime="20201112 10:13:35.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.851" endtime="20201112 10:13:35.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.847" endtime="20201112 10:13:35.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.482" endtime="20201112 10:13:35.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.481" endtime="20201112 10:13:35.873"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.882" endtime="20201112 10:13:35.900"></status>
</kw>
<msg timestamp="20201112 10:13:35.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.880" endtime="20201112 10:13:35.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:35.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:35.901" endtime="20201112 10:13:35.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.904" endtime="20201112 10:13:35.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.878" endtime="20201112 10:13:35.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.875" endtime="20201112 10:13:35.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:35.914" endtime="20201112 10:13:36.199"></status>
</kw>
<msg timestamp="20201112 10:13:36.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019887778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:35.912" endtime="20201112 10:13:36.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019887778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.203" endtime="20201112 10:13:36.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.211" endtime="20201112 10:13:36.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.910" endtime="20201112 10:13:36.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.908" endtime="20201112 10:13:36.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:36.218" level="INFO">${RESULT} = [{'time': 0.019899042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.019914194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:36.215" endtime="20201112 10:13:36.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:36.233" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:36.219" endtime="20201112 10:13:36.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.237" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 10:13:36.236" endtime="20201112 10:13:36.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.240" level="INFO">VALUE: [1.1264000000000413e-05, 1.2249999999998373e-05, 1.1777000000001009e-05, 1.1264000000000413e-05, 1.1764000000000913e-05, 1.1318999999999219e-05, 1.1264000000000413e-05, 1.1291000000000079e-05, 1.1777999999997013e-05, 1.1264000000000413e-05, 1.176299999999797e-05, 1.1194999999998567e-05, 1.1235999999997803e-05, 1.1264000000000413e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1264000000000413e-05, 1.1805999999999622e-05, 1.1235999999997803e-05, 1.1750000000001343e-05, 1.176299999999797e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1818999999999719e-05, 1.1736000000001773e-05, 1.1708000000002633e-05, 1.1249999999997373e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1777999999997013e-05, 1.1764000000000913e-05, 1.176299999999797e-05, 1.1749999999997873e-05, 1.1749999999997873e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1819999999999192e-05, 1.1764000000000913e-05, 1.1264000000000413e-05, 1.1277000000000509e-05, 1.1736000000001773e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1305999999999122e-05, 1.1750000000001343e-05, 1.126299999999747e-05]</msg>
<status status="PASS" starttime="20201112 10:13:36.238" endtime="20201112 10:13:36.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.233" endtime="20201112 10:13:36.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.243" endtime="20201112 10:13:36.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:36.246" endtime="20201112 10:13:36.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.245" endtime="20201112 10:13:36.266"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.241" endtime="20201112 10:13:36.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.874" endtime="20201112 10:13:36.267"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:35.873" endtime="20201112 10:13:36.267"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.276" endtime="20201112 10:13:36.292"></status>
</kw>
<msg timestamp="20201112 10:13:36.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:36.274" endtime="20201112 10:13:36.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:36.293" endtime="20201112 10:13:36.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.296" endtime="20201112 10:13:36.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.272" endtime="20201112 10:13:36.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.270" endtime="20201112 10:13:36.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.306" endtime="20201112 10:13:36.591"></status>
</kw>
<msg timestamp="20201112 10:13:36.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019712111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.304" endtime="20201112 10:13:36.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019712111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.595" endtime="20201112 10:13:36.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.603" endtime="20201112 10:13:36.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.301" endtime="20201112 10:13:36.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.300" endtime="20201112 10:13:36.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:36.610" level="INFO">${RESULT} = [{'time': 0.019712111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2264000000001413e-05, 'source_diff': 1.2264000000001413e-05}, {'time': 0.019730083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:36.606" endtime="20201112 10:13:36.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:36.623" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:36.611" endtime="20201112 10:13:36.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.628" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 10:13:36.627" endtime="20201112 10:13:36.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.630" level="INFO">VALUE: [1.2264000000001413e-05, 1.2249999999998373e-05, 1.226299999999847e-05, 1.3263999999998943e-05, 1.2778000000001483e-05, 1.2332999999999789e-05, 1.2264000000001413e-05, 1.2263999999997943e-05, 1.2250000000001843e-05, 1.2263999999997943e-05, 1.2277000000001509e-05, 1.2250000000001843e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.2763999999998443e-05, 1.2749999999998873e-05, 1.2764000000001913e-05, 1.2777999999998013e-05, 1.2278000000000983e-05, 1.2749999999998873e-05, 1.2764000000001913e-05, 1.2278000000000983e-05, 1.2263999999997943e-05, 1.2236000000002273e-05, 1.2291000000001079e-05, 1.230499999999718e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.2264000000001413e-05, 1.2263000000001939e-05, 1.2221999999999233e-05, 1.2263000000001939e-05, 1.2735999999999303e-05, 1.2249999999998373e-05, 1.276299999999897e-05, 1.2749999999998873e-05, 1.2764000000001913e-05, 1.2806000000000622e-05, 1.2763999999998443e-05, 1.226299999999847e-05, 1.2763999999998443e-05, 1.2235999999998803e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.3263999999998943e-05, 1.2764000000001913e-05, 1.276299999999897e-05, 1.2277999999997513e-05, 1.2764000000001913e-05]</msg>
<status status="PASS" starttime="20201112 10:13:36.629" endtime="20201112 10:13:36.631"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.624" endtime="20201112 10:13:36.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.634" endtime="20201112 10:13:36.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:36.637" endtime="20201112 10:13:36.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.636" endtime="20201112 10:13:36.657"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.632" endtime="20201112 10:13:36.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.268" endtime="20201112 10:13:36.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.268" endtime="20201112 10:13:36.658"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.667" endtime="20201112 10:13:36.684"></status>
</kw>
<msg timestamp="20201112 10:13:36.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:36.665" endtime="20201112 10:13:36.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:36.686" endtime="20201112 10:13:36.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.688" endtime="20201112 10:13:36.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.663" endtime="20201112 10:13:36.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.661" endtime="20201112 10:13:36.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.698" endtime="20201112 10:13:36.983"></status>
</kw>
<msg timestamp="20201112 10:13:36.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.697" endtime="20201112 10:13:36.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:36.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:36.988" endtime="20201112 10:13:36.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:36.996" endtime="20201112 10:13:36.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.694" endtime="20201112 10:13:36.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.692" endtime="20201112 10:13:36.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:37.003" level="INFO">${RESULT} = [{'time': 0.019640903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3736000000000304e-05, 'source_diff': 1.3736000000000304e-05}, {'time': 0.019659153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:36.999" endtime="20201112 10:13:37.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:37.016" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:37.004" endtime="20201112 10:13:37.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.021" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 10:13:37.020" endtime="20201112 10:13:37.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.023" level="INFO">VALUE: [1.3736000000000304e-05, 1.3277999999998513e-05, 1.3736999999999777e-05, 1.3763999999999443e-05, 1.3694000000001594e-05, 1.3763999999999443e-05, 1.3764000000002913e-05, 1.377699999999954e-05, 1.3249999999999373e-05, 1.3764000000002913e-05, 1.377699999999954e-05, 1.3263999999998943e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.4263999999999943e-05, 1.3305000000001649e-05, 1.3291999999998083e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.4208000000001664e-05, 1.3694000000001594e-05, 1.3278000000001983e-05, 1.3764000000002913e-05, 1.3264000000002413e-05, 1.3208000000000664e-05, 1.3764000000002913e-05, 1.3264000000002413e-05, 1.3292000000001553e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3249999999999373e-05, 1.3764000000002913e-05, 1.3777999999999013e-05, 1.3736999999999777e-05, 1.3763999999999443e-05, 1.327699999999904e-05, 1.3264000000002413e-05, 1.3278000000001983e-05, 1.3249999999999373e-05, 1.3763999999999443e-05, 1.3222000000000234e-05, 1.3763999999999443e-05, 1.3292000000001553e-05, 1.376299999999997e-05, 1.3249999999999373e-05, 1.3264000000002413e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.4195000000001567e-05]</msg>
<status status="PASS" starttime="20201112 10:13:37.022" endtime="20201112 10:13:37.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.017" endtime="20201112 10:13:37.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.027" endtime="20201112 10:13:37.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:37.030" endtime="20201112 10:13:37.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.029" endtime="20201112 10:13:37.050"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.025" endtime="20201112 10:13:37.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.659" endtime="20201112 10:13:37.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:36.659" endtime="20201112 10:13:37.051"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.060" endtime="20201112 10:13:37.077"></status>
</kw>
<msg timestamp="20201112 10:13:37.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.058" endtime="20201112 10:13:37.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.079" endtime="20201112 10:13:37.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.081" endtime="20201112 10:13:37.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.055" endtime="20201112 10:13:37.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.053" endtime="20201112 10:13:37.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.091" endtime="20201112 10:13:37.377"></status>
</kw>
<msg timestamp="20201112 10:13:37.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.090" endtime="20201112 10:13:37.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.381" endtime="20201112 10:13:37.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.389" endtime="20201112 10:13:37.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.087" endtime="20201112 10:13:37.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.085" endtime="20201112 10:13:37.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:37.396" level="INFO">${RESULT} = [{'time': 0.019674472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4763999999996974e-05, 'source_diff': 1.4763999999996974e-05}, {'time': 0.019691528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:37.392" endtime="20201112 10:13:37.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:37.409" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:37.397" endtime="20201112 10:13:37.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.414" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 10:13:37.413" endtime="20201112 10:13:37.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.416" level="INFO">VALUE: [1.4763999999996974e-05, 1.4277999999999513e-05, 1.4764000000000443e-05, 1.5236000000001804e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4236000000000804e-05, 1.4736000000001304e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4749999999997404e-05, 1.4736000000001304e-05, 1.4263999999999943e-05, 1.5263999999997474e-05, 1.4223000000000707e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4778000000000013e-05, 1.4263999999999943e-05, 1.480499999999968e-05, 1.4722000000001734e-05, 1.4277999999999513e-05, 1.4277999999999513e-05, 1.4764000000000443e-05, 1.4791999999999583e-05, 1.4277999999999513e-05, 1.4222000000001234e-05, 1.4750000000000874e-05, 1.5250000000001374e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4749999999997404e-05, 1.4750000000000874e-05, 1.4764000000000443e-05, 1.4806000000002623e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4249999999996904e-05, 1.4736000000001304e-05, 1.4320000000001692e-05, 1.5264000000000943e-05, 1.477700000000054e-05, 1.4277999999999513e-05, 1.476300000000097e-05, 1.4764000000000443e-05, 1.4277999999999513e-05, 1.4750000000000874e-05, 1.5264000000000943e-05, 1.4764000000000443e-05]</msg>
<status status="PASS" starttime="20201112 10:13:37.415" endtime="20201112 10:13:37.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.410" endtime="20201112 10:13:37.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.420" endtime="20201112 10:13:37.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:37.423" endtime="20201112 10:13:37.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.422" endtime="20201112 10:13:37.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.418" endtime="20201112 10:13:37.443"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.052" endtime="20201112 10:13:37.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.051" endtime="20201112 10:13:37.444"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.452" endtime="20201112 10:13:37.470"></status>
</kw>
<msg timestamp="20201112 10:13:37.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.451" endtime="20201112 10:13:37.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.471" endtime="20201112 10:13:37.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.474" endtime="20201112 10:13:37.476"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.448" endtime="20201112 10:13:37.477"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.446" endtime="20201112 10:13:37.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.484" endtime="20201112 10:13:37.769"></status>
</kw>
<msg timestamp="20201112 10:13:37.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.482" endtime="20201112 10:13:37.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019686597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.773" endtime="20201112 10:13:37.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.782" endtime="20201112 10:13:37.783"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.480" endtime="20201112 10:13:37.784"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.478" endtime="20201112 10:13:37.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:37.788" level="INFO">${RESULT} = [{'time': 0.019686597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5221999999998764e-05, 'source_diff': 1.5221999999998764e-05}, {'time': 0.019707694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:37.785" endtime="20201112 10:13:37.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:37.803" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:37.789" endtime="20201112 10:13:37.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.807" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 10:13:37.806" endtime="20201112 10:13:37.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.810" level="INFO">VALUE: [1.5221999999998764e-05, 1.5750000000001874e-05, 1.5263999999997474e-05, 1.5249999999997904e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5263999999997474e-05, 1.5749999999998404e-05, 1.5764000000001444e-05, 1.5749999999998404e-05, 1.5750000000001874e-05, 1.5263999999997474e-05, 1.5707999999999694e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5764000000001444e-05, 1.580500000000068e-05, 1.5763999999997974e-05, 1.5277999999997044e-05, 1.5764000000001444e-05, 1.5264000000000943e-05, 1.5278000000000513e-05, 1.5778000000001013e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5750000000001874e-05, 1.5764000000001444e-05, 1.5264000000000943e-05, 1.5208000000002664e-05, 1.5264000000000943e-05, 1.5764000000001444e-05, 1.5750000000001874e-05, 1.5778000000001013e-05, 1.6263999999998474e-05, 1.5737000000001777e-05, 1.5264000000000943e-05, 1.631900000000075e-05, 1.6278000000001513e-05, 1.5263999999997474e-05, 1.526300000000147e-05, 1.5723000000002207e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5763999999997974e-05, 1.5264000000000943e-05, 1.5820000000003193e-05, 1.5763999999997974e-05, 1.5778000000001013e-05, 1.5763999999997974e-05, 1.5263999999997474e-05]</msg>
<status status="PASS" starttime="20201112 10:13:37.808" endtime="20201112 10:13:37.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.804" endtime="20201112 10:13:37.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.813" endtime="20201112 10:13:37.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:37.817" endtime="20201112 10:13:37.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.815" endtime="20201112 10:13:37.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.812" endtime="20201112 10:13:37.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.445" endtime="20201112 10:13:37.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.444" endtime="20201112 10:13:37.837"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.846" endtime="20201112 10:13:37.864"></status>
</kw>
<msg timestamp="20201112 10:13:37.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.844" endtime="20201112 10:13:37.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:37.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:37.865" endtime="20201112 10:13:37.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.868" endtime="20201112 10:13:37.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.842" endtime="20201112 10:13:37.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.840" endtime="20201112 10:13:37.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:37.878" endtime="20201112 10:13:38.165"></status>
</kw>
<msg timestamp="20201112 10:13:38.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:37.876" endtime="20201112 10:13:38.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:38.169" endtime="20201112 10:13:38.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.177" endtime="20201112 10:13:38.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.874" endtime="20201112 10:13:38.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.872" endtime="20201112 10:13:38.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:38.184" level="INFO">${RESULT} = [{'time': 0.019576056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6750000000002874e-05, 'source_diff': 1.6750000000002874e-05}, {'time': 0.019596236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:38.181" endtime="20201112 10:13:38.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:38.197" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:38.185" endtime="20201112 10:13:38.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.202" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 10:13:38.201" endtime="20201112 10:13:38.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.204" level="INFO">VALUE: [1.6750000000002874e-05, 1.6763999999998974e-05, 1.6763999999998974e-05, 1.6264000000001944e-05, 1.6263999999998474e-05, 1.7264000000002944e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.6709000000000168e-05, 1.6264000000001944e-05, 1.6708000000000695e-05, 1.6264000000001944e-05, 1.6235999999999334e-05, 1.67629999999995e-05, 1.6264000000001944e-05, 1.6792000000001583e-05, 1.6749999999999404e-05, 1.6249999999998904e-05, 1.6763999999998974e-05, 1.6264000000001944e-05, 1.6763999999998974e-05, 1.6249999999998904e-05, 1.6278000000001513e-05, 1.6763999999998974e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.6764000000002444e-05, 1.6262999999999e-05, 1.6249999999998904e-05, 1.6263999999998474e-05, 1.6292000000001083e-05, 1.6263999999998474e-05, 1.7277999999999044e-05, 1.6763999999998974e-05, 1.6264000000001944e-05, 1.6221999999999764e-05, 1.6763999999998974e-05, 1.6763999999998974e-05, 1.6264000000001944e-05, 1.6764000000002444e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.6777999999998544e-05, 1.67629999999995e-05, 1.6763999999998974e-05, 1.6221999999999764e-05, 1.6278000000001513e-05, 1.6263999999998474e-05, 1.67629999999995e-05, 1.6764000000002444e-05]</msg>
<status status="PASS" starttime="20201112 10:13:38.203" endtime="20201112 10:13:38.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.198" endtime="20201112 10:13:38.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.208" endtime="20201112 10:13:38.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:38.211" endtime="20201112 10:13:38.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.210" endtime="20201112 10:13:38.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.206" endtime="20201112 10:13:38.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.838" endtime="20201112 10:13:38.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:37.838" endtime="20201112 10:13:38.232"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.241" endtime="20201112 10:13:38.258"></status>
</kw>
<msg timestamp="20201112 10:13:38.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.239" endtime="20201112 10:13:38.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.259" endtime="20201112 10:13:38.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.262" endtime="20201112 10:13:38.264"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.237" endtime="20201112 10:13:38.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.235" endtime="20201112 10:13:38.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.272" endtime="20201112 10:13:38.558"></status>
</kw>
<msg timestamp="20201112 10:13:38.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:38.270" endtime="20201112 10:13:38.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:38.562" endtime="20201112 10:13:38.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.571" endtime="20201112 10:13:38.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.268" endtime="20201112 10:13:38.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.266" endtime="20201112 10:13:38.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:38.577" level="INFO">${RESULT} = [{'time': 0.019611917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019631778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:38.574" endtime="20201112 10:13:38.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:38.591" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:38.578" endtime="20201112 10:13:38.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.595" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 10:13:38.594" endtime="20201112 10:13:38.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.598" level="INFO">VALUE: [1.7249999999999904e-05, 1.7277999999999044e-05, 1.77630000000005e-05, 1.7236000000000334e-05, 1.7750000000000404e-05, 1.8236000000001334e-05, 1.7750000000000404e-05, 1.7791999999999114e-05, 1.8250000000000904e-05, 1.7777999999999544e-05, 1.77630000000005e-05, 1.7264000000002944e-05, 1.7263999999999474e-05, 1.7791999999999114e-05, 1.7763999999999974e-05, 1.8264000000000474e-05, 1.7264000000002944e-05, 1.779100000000311e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.7194000000001625e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.777700000000007e-05, 1.7750000000000404e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7264000000002944e-05, 1.7263999999999474e-05, 1.7249999999999904e-05, 1.7209000000000668e-05, 1.7334000000000793e-05, 1.7263999999999474e-05, 1.727700000000304e-05, 1.7778000000003014e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7264000000002944e-05, 1.7249999999999904e-05, 1.7264000000002944e-05, 1.7750000000000404e-05, 1.7778000000003014e-05, 1.7263999999999474e-05, 1.7750000000000404e-05, 1.7249999999999904e-05, 1.7264000000002944e-05, 1.7249999999999904e-05, 1.7777999999999544e-05]</msg>
<status status="PASS" starttime="20201112 10:13:38.596" endtime="20201112 10:13:38.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.592" endtime="20201112 10:13:38.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.601" endtime="20201112 10:13:38.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:38.605" endtime="20201112 10:13:38.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.603" endtime="20201112 10:13:38.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.600" endtime="20201112 10:13:38.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.233" endtime="20201112 10:13:38.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.233" endtime="20201112 10:13:38.625"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.634" endtime="20201112 10:13:38.652"></status>
</kw>
<msg timestamp="20201112 10:13:38.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.633" endtime="20201112 10:13:38.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:38.653" endtime="20201112 10:13:38.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.656" endtime="20201112 10:13:38.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.630" endtime="20201112 10:13:38.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.628" endtime="20201112 10:13:38.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.666" endtime="20201112 10:13:38.951"></status>
</kw>
<msg timestamp="20201112 10:13:38.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:38.664" endtime="20201112 10:13:38.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:38.955" endtime="20201112 10:13:38.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.963" endtime="20201112 10:13:38.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.662" endtime="20201112 10:13:38.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.660" endtime="20201112 10:13:38.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:38.970" level="INFO">${RESULT} = [{'time': 0.019826889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8764000000000974e-05, 'source_diff': 1.8764000000000974e-05}, {'time': 0.019849736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:38.966" endtime="20201112 10:13:38.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:38.983" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:38.971" endtime="20201112 10:13:38.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.988" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 10:13:38.987" endtime="20201112 10:13:38.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:38.990" level="INFO">VALUE: [1.8764000000000974e-05, 1.8764000000000974e-05, 1.8263999999997005e-05, 1.879100000000064e-05, 1.8750000000001404e-05, 1.8750000000001404e-05, 1.8778000000000544e-05, 1.8764000000000974e-05, 1.833299999999885e-05, 1.8221999999998295e-05, 1.8264000000000474e-05, 1.8278000000000044e-05, 1.8264000000000474e-05, 1.9263999999998005e-05, 1.8722000000002265e-05, 1.8236000000001334e-05, 1.9249999999998435e-05, 1.877700000000107e-05, 1.8764000000000974e-05, 1.8263999999997005e-05, 1.8263999999997005e-05, 1.8264000000000474e-05, 1.8263000000001e-05, 1.8250000000000904e-05, 1.8777999999997075e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8735999999998365e-05, 1.8278000000000044e-05, 1.8750000000001404e-05, 1.8305999999999184e-05, 1.8305999999999184e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8278000000000044e-05, 1.8264000000000474e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.8237000000000808e-05, 1.8264000000000474e-05, 1.8735999999998365e-05, 1.831900000000275e-05, 1.8763999999997505e-05, 1.8278000000000044e-05, 1.8264000000000474e-05, 1.8778000000000544e-05, 1.8763999999997505e-05, 1.8278000000000044e-05]</msg>
<status status="PASS" starttime="20201112 10:13:38.989" endtime="20201112 10:13:38.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.984" endtime="20201112 10:13:38.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:38.994" endtime="20201112 10:13:38.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:38.998" endtime="20201112 10:13:39.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.997" endtime="20201112 10:13:39.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.993" endtime="20201112 10:13:39.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.626" endtime="20201112 10:13:39.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:38.626" endtime="20201112 10:13:39.020"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.028" endtime="20201112 10:13:39.046"></status>
</kw>
<msg timestamp="20201112 10:13:39.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.026" endtime="20201112 10:13:39.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.047" endtime="20201112 10:13:39.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.050" endtime="20201112 10:13:39.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.024" endtime="20201112 10:13:39.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.022" endtime="20201112 10:13:39.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.060" endtime="20201112 10:13:39.346"></status>
</kw>
<msg timestamp="20201112 10:13:39.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019850083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:39.058" endtime="20201112 10:13:39.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019850083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:39.350" endtime="20201112 10:13:39.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.358" endtime="20201112 10:13:39.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.056" endtime="20201112 10:13:39.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.054" endtime="20201112 10:13:39.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:39.365" level="INFO">${RESULT} = [{'time': 0.019869833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.019892903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:39.362" endtime="20201112 10:13:39.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:39.379" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:39.366" endtime="20201112 10:13:39.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.384" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 10:13:39.383" endtime="20201112 10:13:39.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.386" level="INFO">VALUE: [1.9749999999998935e-05, 1.9319999999999754e-05, 1.97769999999986e-05, 1.9263999999998005e-05, 1.9763999999998505e-05, 1.930499999999724e-05, 1.9721999999999795e-05, 1.9777999999998075e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9263000000002e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9263999999998005e-05, 1.9278000000001044e-05, 1.9764000000001974e-05, 1.9263999999998005e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9264000000001474e-05, 1.9764000000001974e-05, 1.9749999999998935e-05, 1.9263999999998005e-05, 1.9764000000001974e-05, 1.9708000000000225e-05, 1.9264000000001474e-05, 1.9250000000001904e-05, 1.9278000000001044e-05, 1.9763999999998505e-05, 1.976299999999903e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9263000000002e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.9750000000002405e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.9263999999998005e-05, 1.9278000000001044e-05, 1.9778000000001544e-05, 1.980499999999774e-05, 1.9278000000001044e-05, 1.9764000000001974e-05, 1.9278000000001044e-05, 1.9277999999997575e-05, 1.927700000000157e-05]</msg>
<status status="PASS" starttime="20201112 10:13:39.385" endtime="20201112 10:13:39.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.380" endtime="20201112 10:13:39.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.390" endtime="20201112 10:13:39.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:39.393" endtime="20201112 10:13:39.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.392" endtime="20201112 10:13:39.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.388" endtime="20201112 10:13:39.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.020" endtime="20201112 10:13:39.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.020" endtime="20201112 10:13:39.414"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.423" endtime="20201112 10:13:39.440"></status>
</kw>
<msg timestamp="20201112 10:13:39.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.421" endtime="20201112 10:13:39.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.441" endtime="20201112 10:13:39.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.444" endtime="20201112 10:13:39.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.419" endtime="20201112 10:13:39.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.417" endtime="20201112 10:13:39.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.454" endtime="20201112 10:13:39.740"></status>
</kw>
<msg timestamp="20201112 10:13:39.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019578972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:39.452" endtime="20201112 10:13:39.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019578972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:39.744" endtime="20201112 10:13:39.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.752" endtime="20201112 10:13:39.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.450" endtime="20201112 10:13:39.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.448" endtime="20201112 10:13:39.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:39.759" level="INFO">${RESULT} = [{'time': 0.019578972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0777999999999075e-05, 'source_diff': 2.0777999999999075e-05}, {'time': 0.019605875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:39.755" endtime="20201112 10:13:39.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:39.772" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:39.760" endtime="20201112 10:13:39.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.776" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 10:13:39.775" endtime="20201112 10:13:39.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.779" level="INFO">VALUE: [2.0777999999999075e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0805999999998215e-05, 2.0764000000002975e-05, 2.0749999999999935e-05, 2.0235999999999865e-05, 2.0777999999999075e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0778000000002544e-05, 2.0763999999999505e-05, 2.0263999999999005e-05, 2.0263999999999005e-05, 2.0249999999999435e-05, 2.0264000000002474e-05, 2.0749999999999935e-05, 2.02769999999991e-05, 2.0777999999999075e-05, 2.0722000000000795e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0764000000002975e-05, 2.0763999999999505e-05, 2.0264000000002474e-05, 2.0778000000002544e-05, 2.0694000000001656e-05, 2.026299999999953e-05, 2.0763999999999505e-05, 2.0263999999999005e-05, 2.0292000000001614e-05, 2.0278000000002044e-05, 2.0764000000002975e-05, 2.0249999999999435e-05, 2.0777999999999075e-05, 2.0763999999999505e-05, 2.0263999999999005e-05, 2.0777999999999075e-05, 2.0263999999999005e-05, 2.0263999999999005e-05, 2.0764000000002975e-05, 2.026299999999953e-05, 2.0250000000002905e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0235999999999865e-05, 2.0763999999999505e-05, 2.0263999999999005e-05]</msg>
<status status="PASS" starttime="20201112 10:13:39.777" endtime="20201112 10:13:39.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.773" endtime="20201112 10:13:39.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.783" endtime="20201112 10:13:39.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:39.786" endtime="20201112 10:13:39.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.785" endtime="20201112 10:13:39.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.781" endtime="20201112 10:13:39.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.415" endtime="20201112 10:13:39.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.415" endtime="20201112 10:13:39.807"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.815" endtime="20201112 10:13:39.833"></status>
</kw>
<msg timestamp="20201112 10:13:39.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.814" endtime="20201112 10:13:39.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:39.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:39.834" endtime="20201112 10:13:39.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.837" endtime="20201112 10:13:39.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.811" endtime="20201112 10:13:39.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.809" endtime="20201112 10:13:39.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:39.847" endtime="20201112 10:13:40.135"></status>
</kw>
<msg timestamp="20201112 10:13:40.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:39.845" endtime="20201112 10:13:40.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.139" endtime="20201112 10:13:40.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.147" endtime="20201112 10:13:40.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.843" endtime="20201112 10:13:40.149"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.841" endtime="20201112 10:13:40.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:40.154" level="INFO">${RESULT} = [{'time': 0.019653875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1306000000002184e-05, 'source_diff': 2.1306000000002184e-05}, {'time': 0.019679917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:40.151" endtime="20201112 10:13:40.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:40.167" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:40.155" endtime="20201112 10:13:40.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.172" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 10:13:40.171" endtime="20201112 10:13:40.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.174" level="INFO">VALUE: [2.1306000000002184e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.1750000000000935e-05, 2.1763999999997036e-05, 2.1750000000000935e-05, 2.1222000000001295e-05, 2.1750000000000935e-05, 2.1749999999997466e-05, 2.173699999999737e-05, 2.1820000000002254e-05, 2.226300000000153e-05, 2.1264000000000005e-05, 2.1764000000000505e-05, 2.1750000000000935e-05, 2.1763999999997036e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1250000000000435e-05, 2.1749999999997466e-05, 2.1250000000000435e-05, 2.1778000000000075e-05, 2.1762999999997562e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.126300000000053e-05, 2.1250000000000435e-05, 2.1764000000000505e-05, 2.1762999999997562e-05, 2.1778000000000075e-05, 2.1763999999997036e-05, 2.1778000000000075e-05, 2.1750000000000935e-05, 2.1750000000000935e-05, 2.1264000000000005e-05, 2.1763999999997036e-05, 2.1262999999997062e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.1764000000000505e-05, 2.1264000000000005e-05, 2.184699999999845e-05, 2.1764000000000505e-05, 2.2264000000001005e-05, 2.1736000000001365e-05, 2.2264000000001005e-05, 2.1250000000000435e-05, 2.1277999999999575e-05, 2.1778000000000075e-05]</msg>
<status status="PASS" starttime="20201112 10:13:40.173" endtime="20201112 10:13:40.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.168" endtime="20201112 10:13:40.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.178" endtime="20201112 10:13:40.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.181" endtime="20201112 10:13:40.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.180" endtime="20201112 10:13:40.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.176" endtime="20201112 10:13:40.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.808" endtime="20201112 10:13:40.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:39.807" endtime="20201112 10:13:40.202"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.210" endtime="20201112 10:13:40.226"></status>
</kw>
<msg timestamp="20201112 10:13:40.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.209" endtime="20201112 10:13:40.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.227" endtime="20201112 10:13:40.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.230" endtime="20201112 10:13:40.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.206" endtime="20201112 10:13:40.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.204" endtime="20201112 10:13:40.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.240" endtime="20201112 10:13:40.527"></status>
</kw>
<msg timestamp="20201112 10:13:40.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.238" endtime="20201112 10:13:40.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.531" endtime="20201112 10:13:40.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.539" endtime="20201112 10:13:40.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.236" endtime="20201112 10:13:40.541"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.234" endtime="20201112 10:13:40.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:40.546" level="INFO">${RESULT} = [{'time': 0.019595486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2277999999997106e-05, 'source_diff': 2.2277999999997106e-05}, {'time': 0.019620847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:40.543" endtime="20201112 10:13:40.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:40.559" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:40.547" endtime="20201112 10:13:40.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.564" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 10:13:40.563" endtime="20201112 10:13:40.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.566" level="INFO">VALUE: [2.2277999999997106e-05, 2.279100000000117e-05, 2.2750000000001935e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2235999999998396e-05, 2.2764000000001505e-05, 2.2764000000001505e-05, 2.3249999999998966e-05, 2.2749999999998466e-05, 2.2278000000000575e-05, 2.2263999999997536e-05, 2.2235999999998396e-05, 2.2777999999997606e-05, 2.2250000000001435e-05, 2.2778000000001075e-05, 2.229100000000067e-05, 2.2264000000001005e-05, 2.3250000000002435e-05, 2.2764000000001505e-05, 2.2833999999999355e-05, 2.2264000000001005e-05, 2.2763999999998036e-05, 2.2764000000001505e-05, 2.2249999999997966e-05, 2.2777999999997606e-05, 2.2777999999997606e-05, 2.2763999999998036e-05, 2.2749999999998466e-05, 2.3277999999998106e-05, 2.280500000000074e-05, 2.2277999999997106e-05, 2.2278000000000575e-05, 2.2277999999997106e-05, 2.2721999999999326e-05, 2.27770000000016e-05, 2.2778000000001075e-05, 2.2778000000001075e-05, 2.2249999999997966e-05, 2.2278000000000575e-05, 2.3262999999999062e-05, 2.2278000000000575e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.2750000000001935e-05, 2.2778000000001075e-05, 2.2277999999997106e-05, 2.2778000000001075e-05, 2.2264000000001005e-05, 2.2263999999997536e-05]</msg>
<status status="PASS" starttime="20201112 10:13:40.565" endtime="20201112 10:13:40.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.560" endtime="20201112 10:13:40.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.570" endtime="20201112 10:13:40.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.573" endtime="20201112 10:13:40.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.572" endtime="20201112 10:13:40.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.568" endtime="20201112 10:13:40.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.203" endtime="20201112 10:13:40.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.202" endtime="20201112 10:13:40.594"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.603" endtime="20201112 10:13:40.620"></status>
</kw>
<msg timestamp="20201112 10:13:40.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.601" endtime="20201112 10:13:40.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.621" endtime="20201112 10:13:40.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.624" endtime="20201112 10:13:40.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.599" endtime="20201112 10:13:40.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.596" endtime="20201112 10:13:40.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.634" endtime="20201112 10:13:40.920"></status>
</kw>
<msg timestamp="20201112 10:13:40.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019660278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.632" endtime="20201112 10:13:40.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019660278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:40.924" endtime="20201112 10:13:40.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.932" endtime="20201112 10:13:40.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.630" endtime="20201112 10:13:40.934"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.628" endtime="20201112 10:13:40.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:40.939" level="INFO">${RESULT} = [{'time': 0.019660278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3263999999998536e-05, 'source_diff': 2.3263999999998536e-05}, {'time': 0.019689389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:40.936" endtime="20201112 10:13:40.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:40.954" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:40.940" endtime="20201112 10:13:40.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.958" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 10:13:40.957" endtime="20201112 10:13:40.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:40.961" level="INFO">VALUE: [2.3263999999998536e-05, 2.3764000000002505e-05, 2.3194000000000686e-05, 2.3264000000002005e-05, 2.3750000000002935e-05, 2.3292000000001145e-05, 2.3221999999999826e-05, 2.4277999999999106e-05, 2.3277999999998106e-05, 2.3777999999998606e-05, 2.3763999999999036e-05, 2.3749999999999466e-05, 2.3262999999999062e-05, 2.3263999999998536e-05, 2.3207999999996787e-05, 2.3708000000000756e-05, 2.3333999999999855e-05, 2.3249999999998966e-05, 2.3776999999999132e-05, 2.3763999999999036e-05, 2.3764000000002505e-05, 2.4263999999999536e-05, 2.373699999999937e-05, 2.3249999999998966e-05, 2.4277999999999106e-05, 2.3249999999998966e-05, 2.3722000000000326e-05, 2.3264000000002005e-05, 2.3749999999999466e-05, 2.3292000000001145e-05, 2.3763999999999036e-05, 2.3764000000002505e-05, 2.3762999999999562e-05, 2.32229999999993e-05, 2.3749999999999466e-05, 2.3763999999999036e-05, 2.3249999999998966e-05, 2.3263999999998536e-05, 2.319500000000016e-05, 2.3749999999999466e-05, 2.3249999999998966e-05, 2.4277999999999106e-05, 2.3763999999999036e-05, 2.3250000000002435e-05, 2.3264000000002005e-05, 2.3250000000002435e-05, 2.3762999999999562e-05, 2.4263999999999536e-05, 2.4318999999998342e-05, 2.32770000000021e-05]</msg>
<status status="PASS" starttime="20201112 10:13:40.959" endtime="20201112 10:13:40.961"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.955" endtime="20201112 10:13:40.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.964" endtime="20201112 10:13:40.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:40.968" endtime="20201112 10:13:40.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.966" endtime="20201112 10:13:40.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.963" endtime="20201112 10:13:40.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.595" endtime="20201112 10:13:40.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.594" endtime="20201112 10:13:40.988"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:40.997" endtime="20201112 10:13:41.015"></status>
</kw>
<msg timestamp="20201112 10:13:41.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:40.995" endtime="20201112 10:13:41.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.016" endtime="20201112 10:13:41.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.019" endtime="20201112 10:13:41.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.993" endtime="20201112 10:13:41.022"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.991" endtime="20201112 10:13:41.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.030" endtime="20201112 10:13:41.316"></status>
</kw>
<msg timestamp="20201112 10:13:41.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.028" endtime="20201112 10:13:41.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.321" endtime="20201112 10:13:41.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.329" endtime="20201112 10:13:41.330"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.025" endtime="20201112 10:13:41.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.024" endtime="20201112 10:13:41.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:41.336" level="INFO">${RESULT} = [{'time': 0.019640486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4749999999996997e-05, 'source_diff': 2.4749999999996997e-05}, {'time': 0.019671389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:41.332" endtime="20201112 10:13:41.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:41.349" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:41.337" endtime="20201112 10:13:41.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.354" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 10:13:41.353" endtime="20201112 10:13:41.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.356" level="INFO">VALUE: [2.4749999999996997e-05, 2.4764000000000036e-05, 2.4722000000001326e-05, 2.4263999999999536e-05, 2.4263000000000062e-05, 2.473700000000037e-05, 2.5264000000000536e-05, 2.4804999999999272e-05, 2.5264000000000536e-05, 2.4263999999999536e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.4263999999999536e-05, 2.4263000000000062e-05, 2.470900000000123e-05, 2.4763000000000562e-05, 2.4694000000002186e-05, 2.4221999999997357e-05, 2.4763000000000562e-05, 2.5264000000000536e-05, 2.4264000000003005e-05, 2.4249999999999966e-05, 2.4708000000001756e-05, 2.4721999999997857e-05, 2.4750000000000466e-05, 2.4777999999999606e-05, 2.4763000000000562e-05, 2.4277999999999106e-05, 2.4777999999999606e-05, 2.433300000000138e-05, 2.4263999999999536e-05, 2.4277999999999106e-05, 2.4749999999996997e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.5332999999998912e-05, 2.4318999999998342e-05, 2.4750000000000466e-05, 2.4777000000000132e-05, 2.5263999999997067e-05, 2.4263999999999536e-05, 2.4236000000000396e-05, 2.4764000000000036e-05, 2.4763000000000562e-05, 2.4818999999998842e-05, 2.4764000000000036e-05, 2.4276999999999632e-05, 2.4777999999999606e-05, 2.4222000000000826e-05, 2.4735999999997427e-05]</msg>
<status status="PASS" starttime="20201112 10:13:41.355" endtime="20201112 10:13:41.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.350" endtime="20201112 10:13:41.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.360" endtime="20201112 10:13:41.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.363" endtime="20201112 10:13:41.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.361" endtime="20201112 10:13:41.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.358" endtime="20201112 10:13:41.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.989" endtime="20201112 10:13:41.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:40.989" endtime="20201112 10:13:41.384"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.393" endtime="20201112 10:13:41.409"></status>
</kw>
<msg timestamp="20201112 10:13:41.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.391" endtime="20201112 10:13:41.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.411" endtime="20201112 10:13:41.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.413" endtime="20201112 10:13:41.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.389" endtime="20201112 10:13:41.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.386" endtime="20201112 10:13:41.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.423" endtime="20201112 10:13:41.708"></status>
</kw>
<msg timestamp="20201112 10:13:41.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019950236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:41.422" endtime="20201112 10:13:41.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019950236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:41.712" endtime="20201112 10:13:41.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.721" endtime="20201112 10:13:41.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.419" endtime="20201112 10:13:41.723"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.417" endtime="20201112 10:13:41.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:41.727" level="INFO">${RESULT} = [{'time': 0.019976, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5764000000001036e-05, 'source_diff': 2.5764000000001036e-05}, {'time': 0.020004181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:13:41.724" endtime="20201112 10:13:41.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:41.741" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:41.728" endtime="20201112 10:13:41.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.745" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 10:13:41.744" endtime="20201112 10:13:41.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.748" level="INFO">VALUE: [2.5764000000001036e-05, 2.5792000000000176e-05, 2.5262999999997593e-05, 2.5264000000000536e-05, 2.5764000000001036e-05, 2.5263000000001062e-05, 2.6264000000001536e-05, 2.5264000000000536e-05, 2.5762999999998093e-05, 2.5264000000000536e-05, 2.5778000000000606e-05, 2.5791000000000702e-05, 2.5264000000000536e-05, 2.5264000000000536e-05, 2.5791000000000702e-05, 2.5750000000001466e-05, 2.5291999999999676e-05, 2.5764000000001036e-05, 2.5778000000000606e-05, 2.5818999999999842e-05, 2.5764000000001036e-05, 2.5707999999999287e-05, 2.5291000000000202e-05, 2.5778000000000606e-05, 2.5763999999997567e-05, 2.5250000000000966e-05, 2.572299999999833e-05, 2.5278000000000106e-05, 2.5263999999997067e-05, 2.5278000000000106e-05, 2.5763999999997567e-05, 2.5263999999997067e-05, 2.5764000000001036e-05, 2.5777000000001132e-05, 2.5262999999997593e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.5264000000000536e-05, 2.5221999999998357e-05, 2.5763000000001562e-05, 2.6278000000001106e-05, 2.5777999999997137e-05, 2.5264000000000536e-05, 2.519499999999869e-05, 2.5778000000000606e-05, 2.5763999999997567e-05, 2.5778000000000606e-05, 2.5708000000002756e-05, 2.5763999999997567e-05, 2.5278000000000106e-05]</msg>
<status status="PASS" starttime="20201112 10:13:41.746" endtime="20201112 10:13:41.749"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.742" endtime="20201112 10:13:41.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.751" endtime="20201112 10:13:41.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:41.755" endtime="20201112 10:13:41.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.753" endtime="20201112 10:13:41.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.750" endtime="20201112 10:13:41.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.385" endtime="20201112 10:13:41.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.384" endtime="20201112 10:13:41.776"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.784" endtime="20201112 10:13:41.800"></status>
</kw>
<msg timestamp="20201112 10:13:41.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.783" endtime="20201112 10:13:41.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:41.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:41.801" endtime="20201112 10:13:41.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.804" endtime="20201112 10:13:41.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.780" endtime="20201112 10:13:41.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.778" endtime="20201112 10:13:41.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:41.814" endtime="20201112 10:13:42.101"></status>
</kw>
<msg timestamp="20201112 10:13:42.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019547042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:41.812" endtime="20201112 10:13:42.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019547042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.105" endtime="20201112 10:13:42.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.114" endtime="20201112 10:13:42.115"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.810" endtime="20201112 10:13:42.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.808" endtime="20201112 10:13:42.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:42.120" level="INFO">${RESULT} = [{'time': 0.019573306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6263999999998067e-05, 'source_diff': 2.6263999999998067e-05}, {'time': 0.019603264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:42.117" endtime="20201112 10:13:42.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:42.134" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:42.121" endtime="20201112 10:13:42.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.138" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 10:13:42.137" endtime="20201112 10:13:42.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.141" level="INFO">VALUE: [2.6263999999998067e-05, 2.6263999999998067e-05, 2.6736000000002896e-05, 2.6763999999998567e-05, 2.6777000000002132e-05, 2.6749999999998997e-05, 2.6777999999998137e-05, 2.6194000000000217e-05, 2.6735999999999427e-05, 2.6263999999998067e-05, 2.6764000000002036e-05, 2.672299999999933e-05, 2.6278000000001106e-05, 2.6749999999998997e-05, 2.6750000000002466e-05, 2.6763999999998567e-05, 2.6306000000000246e-05, 2.6777999999998137e-05, 2.6762999999999093e-05, 2.6777000000002132e-05, 2.6763999999998567e-05, 2.6278000000001106e-05, 2.6764000000002036e-05, 2.6778000000001606e-05, 2.6235999999998927e-05, 2.6777999999998137e-05, 2.6264000000001536e-05, 2.6291000000001202e-05, 2.6763999999998567e-05, 2.6778000000001606e-05, 2.6804999999997803e-05, 2.6777999999998137e-05, 2.6264000000001536e-05, 2.6749999999998997e-05, 2.6264000000001536e-05, 2.6749999999998997e-05, 2.6236000000002396e-05, 2.6236000000002396e-05, 2.6749999999998997e-05, 2.6263999999998067e-05, 2.6236000000002396e-05, 2.6762999999999093e-05, 2.6763999999998567e-05, 2.6235999999998927e-05, 2.6264000000001536e-05, 2.6263999999998067e-05, 2.6264000000001536e-05, 2.6263999999998067e-05, 2.6264000000001536e-05, 2.6249999999998497e-05]</msg>
<status status="PASS" starttime="20201112 10:13:42.139" endtime="20201112 10:13:42.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.135" endtime="20201112 10:13:42.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.144" endtime="20201112 10:13:42.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:42.148" endtime="20201112 10:13:42.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.146" endtime="20201112 10:13:42.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.143" endtime="20201112 10:13:42.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.776" endtime="20201112 10:13:42.168"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:41.776" endtime="20201112 10:13:42.169"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.177" endtime="20201112 10:13:42.195"></status>
</kw>
<msg timestamp="20201112 10:13:42.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.176" endtime="20201112 10:13:42.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.196" endtime="20201112 10:13:42.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.199" endtime="20201112 10:13:42.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.173" endtime="20201112 10:13:42.202"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.171" endtime="20201112 10:13:42.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.209" endtime="20201112 10:13:42.495"></status>
</kw>
<msg timestamp="20201112 10:13:42.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.207" endtime="20201112 10:13:42.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.499" endtime="20201112 10:13:42.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.507" endtime="20201112 10:13:42.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.205" endtime="20201112 10:13:42.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.203" endtime="20201112 10:13:42.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:42.514" level="INFO">${RESULT} = [{'time': 0.019649903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7820000000001316e-05, 'source_diff': 2.7820000000001316e-05}, {'time': 0.019682639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:42.511" endtime="20201112 10:13:42.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:42.529" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:42.515" endtime="20201112 10:13:42.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.533" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 10:13:42.532" endtime="20201112 10:13:42.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.536" level="INFO">VALUE: [2.7820000000001316e-05, 2.7263999999999067e-05, 2.7276999999999163e-05, 2.7763999999999567e-05, 2.7763000000000093e-05, 2.7806000000001746e-05, 2.7749999999999997e-05, 2.7790999999999233e-05, 2.7763999999999567e-05, 2.7805999999998277e-05, 2.7276999999999163e-05, 2.7749999999999997e-05, 2.7235999999999927e-05, 2.7222000000000357e-05, 2.7263999999999067e-05, 2.7222000000000357e-05, 2.8263000000000593e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.77369999999999e-05, 2.7277999999998637e-05, 2.7763999999999567e-05, 2.7277999999998637e-05, 2.7263999999999067e-05, 2.7249999999999497e-05, 2.7249999999999497e-05, 2.7777999999999137e-05, 2.7278000000002106e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7318999999997873e-05, 2.7763999999999567e-05, 2.8264000000000067e-05, 2.7277999999998637e-05, 2.8235999999997458e-05, 2.7806000000001746e-05, 2.7763999999999567e-05, 2.7792000000002176e-05, 2.7776999999999663e-05, 2.7264000000002536e-05, 2.7263999999999067e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.7194000000001217e-05, 2.7763999999999567e-05, 2.7792000000002176e-05, 2.7749999999999997e-05, 2.7291999999998207e-05, 2.7763999999999567e-05, 2.7778000000002606e-05]</msg>
<status status="PASS" starttime="20201112 10:13:42.534" endtime="20201112 10:13:42.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.530" endtime="20201112 10:13:42.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.539" endtime="20201112 10:13:42.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:42.543" endtime="20201112 10:13:42.562"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.541" endtime="20201112 10:13:42.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.537" endtime="20201112 10:13:42.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.169" endtime="20201112 10:13:42.563"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.169" endtime="20201112 10:13:42.564"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.572" endtime="20201112 10:13:42.590"></status>
</kw>
<msg timestamp="20201112 10:13:42.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.571" endtime="20201112 10:13:42.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.592" endtime="20201112 10:13:42.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.594" endtime="20201112 10:13:42.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.568" endtime="20201112 10:13:42.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.566" endtime="20201112 10:13:42.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.604" endtime="20201112 10:13:42.892"></status>
</kw>
<msg timestamp="20201112 10:13:42.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019569583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019597847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.603" endtime="20201112 10:13:42.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019569583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019597847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.896" endtime="20201112 10:13:42.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.904" endtime="20201112 10:13:42.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.600" endtime="20201112 10:13:42.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.598" endtime="20201112 10:13:42.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:42.911" level="INFO">${RESULT} = [{'time': 0.019597847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8264000000000067e-05, 'source_diff': 2.8264000000000067e-05}, {'time': 0.019629083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:42.908" endtime="20201112 10:13:42.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:42.924" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:42.912" endtime="20201112 10:13:42.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.929" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 10:13:42.928" endtime="20201112 10:13:42.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.931" level="INFO">VALUE: [2.8264000000000067e-05, 2.8749999999997528e-05, 2.8764000000000567e-05, 2.8250000000000497e-05, 2.8277000000000163e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8778000000000137e-05, 2.8277000000000163e-05, 2.8250000000000497e-05, 2.8763000000001093e-05, 2.8236000000000927e-05, 2.8804999999999803e-05, 2.8264000000000067e-05, 2.8750000000000997e-05, 2.8250000000000497e-05, 2.8776999999997194e-05, 2.8735999999997958e-05, 2.8763999999997097e-05, 2.8708000000002287e-05, 2.8763999999997097e-05, 2.8764000000000567e-05, 2.8207999999998318e-05, 2.8763999999997097e-05, 2.8750000000000997e-05, 2.8277000000000163e-05, 2.9264000000001067e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8750000000000997e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8249999999997027e-05, 2.8750000000000997e-05, 2.8278000000003106e-05, 2.8277999999999637e-05, 2.818099999999865e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.9319999999999347e-05, 2.8264000000000067e-05, 2.8764000000000567e-05, 2.8250000000000497e-05, 2.8749999999997528e-05, 2.8762999999997624e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8291999999999207e-05, 2.8304999999999303e-05, 2.8778000000000137e-05]</msg>
<status status="PASS" starttime="20201112 10:13:42.930" endtime="20201112 10:13:42.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.925" endtime="20201112 10:13:42.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.935" endtime="20201112 10:13:42.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:42.938" endtime="20201112 10:13:42.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.937" endtime="20201112 10:13:42.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.933" endtime="20201112 10:13:42.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.564" endtime="20201112 10:13:42.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.564" endtime="20201112 10:13:42.959"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.968" endtime="20201112 10:13:42.985"></status>
</kw>
<msg timestamp="20201112 10:13:42.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.966" endtime="20201112 10:13:42.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:42.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:42.987" endtime="20201112 10:13:42.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.990" endtime="20201112 10:13:42.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.964" endtime="20201112 10:13:42.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.962" endtime="20201112 10:13:42.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:42.999" endtime="20201112 10:13:43.284"></status>
</kw>
<msg timestamp="20201112 10:13:43.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:42.998" endtime="20201112 10:13:43.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.289" endtime="20201112 10:13:43.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.297" endtime="20201112 10:13:43.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.995" endtime="20201112 10:13:43.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.994" endtime="20201112 10:13:43.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:43.304" level="INFO">${RESULT} = [{'time': 0.019676153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9277999999997167e-05, 'source_diff': 2.9277999999997167e-05}, {'time': 0.019708097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:43.300" endtime="20201112 10:13:43.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:43.317" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:43.305" endtime="20201112 10:13:43.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.321" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 10:13:43.320" endtime="20201112 10:13:43.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.324" level="INFO">VALUE: [2.9277999999997167e-05, 2.9305000000000303e-05, 2.9764000000001567e-05, 2.9763000000002093e-05, 2.9763999999998098e-05, 2.9264000000001067e-05, 2.9763000000002093e-05, 2.9778000000001137e-05, 2.9763999999998098e-05, 2.9777000000001663e-05, 2.9806000000000277e-05, 2.9264000000001067e-05, 2.9277000000001163e-05, 2.9763999999998098e-05, 2.9264000000001067e-05, 2.9264000000001067e-05, 2.9749999999998528e-05, 2.9806000000000277e-05, 2.922300000000183e-05, 2.9278000000000637e-05, 2.9277000000001163e-05, 3.0263999999998598e-05, 2.9792000000000707e-05, 2.9762999999998624e-05, 2.9763999999998098e-05, 2.9805000000000803e-05, 2.9262999999998124e-05, 2.9264000000001067e-05, 2.9249999999998028e-05, 2.9263000000001593e-05, 2.9332999999999443e-05, 2.9749999999998528e-05, 2.9750000000001997e-05, 2.9764000000001567e-05, 2.9764000000001567e-05, 2.9305999999999777e-05, 2.9235999999998458e-05, 2.9263999999997597e-05, 2.9764000000001567e-05, 2.9778000000001137e-05, 2.9304999999996834e-05, 2.9764000000001567e-05, 2.9764000000001567e-05, 2.9305999999999777e-05, 2.9764000000001567e-05, 2.9792000000000707e-05, 2.9292000000000207e-05, 2.9292000000000207e-05, 2.9763999999998098e-05, 2.9264000000001067e-05]</msg>
<status status="PASS" starttime="20201112 10:13:43.323" endtime="20201112 10:13:43.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.318" endtime="20201112 10:13:43.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.327" endtime="20201112 10:13:43.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:43.331" endtime="20201112 10:13:43.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.329" endtime="20201112 10:13:43.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.326" endtime="20201112 10:13:43.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.960" endtime="20201112 10:13:43.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:42.960" endtime="20201112 10:13:43.352"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.360" endtime="20201112 10:13:43.378"></status>
</kw>
<msg timestamp="20201112 10:13:43.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.359" endtime="20201112 10:13:43.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.380" endtime="20201112 10:13:43.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.382" endtime="20201112 10:13:43.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.356" endtime="20201112 10:13:43.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.354" endtime="20201112 10:13:43.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.392" endtime="20201112 10:13:43.678"></status>
</kw>
<msg timestamp="20201112 10:13:43.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.391" endtime="20201112 10:13:43.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.682" endtime="20201112 10:13:43.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.690" endtime="20201112 10:13:43.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.388" endtime="20201112 10:13:43.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.386" endtime="20201112 10:13:43.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:43.697" level="INFO">${RESULT} = [{'time': 0.019664444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.073599999999996e-05, 'source_diff': 3.073599999999996e-05}, {'time': 0.019698181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:43.694" endtime="20201112 10:13:43.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:43.711" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:43.698" endtime="20201112 10:13:43.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.715" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 10:13:43.714" endtime="20201112 10:13:43.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.717" level="INFO">VALUE: [3.073599999999996e-05, 3.0263999999998598e-05, 3.0263999999998598e-05, 3.0263999999998598e-05, 3.0277999999998167e-05, 3.0263999999998598e-05, 3.0276999999998694e-05, 3.074999999999953e-05, 3.0790999999998764e-05, 3.077800000000214e-05, 3.0263999999998598e-05, 3.0264000000002067e-05, 3.0263999999998598e-05, 3.0263999999998598e-05, 3.0278000000001637e-05, 3.129199999999874e-05, 3.0306000000000777e-05, 3.12639999999996e-05, 3.0263999999998598e-05, 3.129200000000221e-05, 3.0762999999999624e-05, 3.0776999999999194e-05, 3.077799999999867e-05, 3.0776999999999194e-05, 3.0263999999998598e-05, 3.0221999999999888e-05, 3.0263999999998598e-05, 3.076400000000257e-05, 3.0263999999998598e-05, 3.0277999999998167e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.0276999999998694e-05, 3.07639999999991e-05, 3.0278000000001637e-05, 3.0249999999999028e-05, 3.0278000000001637e-05, 3.074999999999953e-05, 3.125000000000003e-05, 3.0305000000001303e-05, 3.0264000000002067e-05, 3.0347000000000013e-05, 3.074999999999953e-05, 3.0262999999999124e-05, 3.0292000000001207e-05, 3.079199999999824e-05, 3.074999999999953e-05, 3.0277999999998167e-05, 3.080599999999781e-05, 3.0818999999997904e-05]</msg>
<status status="PASS" starttime="20201112 10:13:43.716" endtime="20201112 10:13:43.718"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.712" endtime="20201112 10:13:43.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.721" endtime="20201112 10:13:43.722"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:43.724" endtime="20201112 10:13:43.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.723" endtime="20201112 10:13:43.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.720" endtime="20201112 10:13:43.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.353" endtime="20201112 10:13:43.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.352" endtime="20201112 10:13:43.745"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.754" endtime="20201112 10:13:43.772"></status>
</kw>
<msg timestamp="20201112 10:13:43.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.752" endtime="20201112 10:13:43.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:43.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:43.774" endtime="20201112 10:13:43.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.776" endtime="20201112 10:13:43.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.750" endtime="20201112 10:13:43.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.748" endtime="20201112 10:13:43.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:43.786" endtime="20201112 10:13:44.071"></status>
</kw>
<msg timestamp="20201112 10:13:44.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:43.784" endtime="20201112 10:13:44.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019758389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.075" endtime="20201112 10:13:44.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.084" endtime="20201112 10:13:44.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.782" endtime="20201112 10:13:44.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.780" endtime="20201112 10:13:44.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:44.090" level="INFO">${RESULT} = [{'time': 0.019758389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.10970000000026e-05, 'source_diff': 7.10970000000026e-05}, {'time': 0.019808569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:44.087" endtime="20201112 10:13:44.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:44.105" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:44.091" endtime="20201112 10:13:44.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.109" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 10:13:44.108" endtime="20201112 10:13:44.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.112" level="INFO">VALUE: [7.10970000000026e-05, 3.5263000000000655e-05, 3.545799999999863e-05, 3.501399999999988e-05, 3.5333000000001974e-05, 3.555599999999909e-05, 3.6874999999998714e-05, 3.505600000000206e-05, 3.550000000000081e-05, 3.567999999999974e-05, 3.552799999999995e-05, 3.545900000000157e-05, 3.495900000000107e-05, 3.498600000000074e-05, 3.552799999999995e-05, 3.5625000000000934e-05, 3.526400000000013e-05, 3.495799999999813e-05, 3.525000000000056e-05, 3.5069000000002154e-05, 3.5083000000001724e-05, 3.525000000000056e-05, 3.54580000000021e-05, 3.494400000000203e-05, 3.5068999999998685e-05, 3.550000000000081e-05, 3.5139000000000004e-05, 3.6874999999998714e-05, 3.5318999999998935e-05, 3.520799999999838e-05, 3.504200000000249e-05, 3.5333000000001974e-05, 3.6819000000000435e-05, 3.576400000000063e-05, 3.538800000000078e-05, 3.5375000000000684e-05, 3.694400000000056e-05, 3.684799999999905e-05, 3.683399999999948e-05, 3.683399999999948e-05, 3.5054999999999115e-05, 3.543099999999896e-05, 3.508399999999773e-05, 3.49450000000015e-05, 3.544499999999853e-05, 3.5083000000001724e-05, 3.49580000000016e-05, 3.5624999999997464e-05, 3.691599999999795e-05, 3.5332999999998504e-05]</msg>
<status status="PASS" starttime="20201112 10:13:44.110" endtime="20201112 10:13:44.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.106" endtime="20201112 10:13:44.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.232" endtime="20201112 10:13:44.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:44.235" endtime="20201112 10:13:44.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.234" endtime="20201112 10:13:44.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.230" endtime="20201112 10:13:44.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.746" endtime="20201112 10:13:44.256"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:43.746" endtime="20201112 10:13:44.256"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.265" endtime="20201112 10:13:44.282"></status>
</kw>
<msg timestamp="20201112 10:13:44.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.263" endtime="20201112 10:13:44.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.284" endtime="20201112 10:13:44.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.286" endtime="20201112 10:13:44.289"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.261" endtime="20201112 10:13:44.290"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.259" endtime="20201112 10:13:44.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.297" endtime="20201112 10:13:44.582"></status>
</kw>
<msg timestamp="20201112 10:13:44.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.295" endtime="20201112 10:13:44.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.587" endtime="20201112 10:13:44.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.595" endtime="20201112 10:13:44.597"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.292" endtime="20201112 10:13:44.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.291" endtime="20201112 10:13:44.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:44.602" level="INFO">${RESULT} = [{'time': 0.019682181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.059799999999933e-05, 'source_diff': 4.059799999999933e-05}, {'time': 0.019729819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:44.599" endtime="20201112 10:13:44.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:44.616" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:44.603" endtime="20201112 10:13:44.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.621" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 10:13:44.620" endtime="20201112 10:13:44.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.624" level="INFO">VALUE: [4.059799999999933e-05, 3.620799999999938e-05, 3.641600000000092e-05, 3.652800000000095e-05, 3.7888999999999284e-05, 3.7818999999997965e-05, 3.622200000000242e-05, 3.6347000000002544e-05, 3.619399999999981e-05, 3.676399999999816e-05, 3.642999999999702e-05, 3.601399999999741e-05, 3.6082999999999255e-05, 3.6111000000001864e-05, 3.601400000000088e-05, 3.6346999999999074e-05, 3.656999999999966e-05, 3.5861000000001614e-05, 3.676400000000163e-05, 3.597299999999817e-05, 3.651400000000138e-05, 3.6152999999997104e-05, 3.672299999999892e-05, 3.655600000000009e-05, 3.605599999999959e-05, 3.631999999999941e-05, 3.6096999999998824e-05, 3.592999999999999e-05, 3.622199999999895e-05, 3.656999999999966e-05, 3.613800000000153e-05, 3.62780000000007e-05, 3.6082999999999255e-05, 3.669400000000031e-05, 3.6389000000001254e-05, 3.629200000000027e-05, 3.62780000000007e-05, 3.6374999999998214e-05, 3.6318999999999935e-05, 3.602800000000045e-05, 3.7902999999998854e-05, 3.652800000000095e-05, 3.6667000000000644e-05, 3.620799999999938e-05, 3.672199999999945e-05, 3.669400000000031e-05, 3.648699999999824e-05, 3.7861000000000145e-05, 3.6180999999999713e-05, 3.591599999999695e-05]</msg>
<status status="PASS" starttime="20201112 10:13:44.622" endtime="20201112 10:13:44.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.617" endtime="20201112 10:13:44.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.627" endtime="20201112 10:13:44.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:44.632" endtime="20201112 10:13:44.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.629" endtime="20201112 10:13:44.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.626" endtime="20201112 10:13:44.652"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.257" endtime="20201112 10:13:44.653"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.257" endtime="20201112 10:13:44.653"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.662" endtime="20201112 10:13:44.680"></status>
</kw>
<msg timestamp="20201112 10:13:44.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.660" endtime="20201112 10:13:44.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:44.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:44.682" endtime="20201112 10:13:44.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.684" endtime="20201112 10:13:44.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.658" endtime="20201112 10:13:44.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.655" endtime="20201112 10:13:44.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:44.695" endtime="20201112 10:13:45.003"></status>
</kw>
<msg timestamp="20201112 10:13:45.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020381167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:44.693" endtime="20201112 10:13:45.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020381167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.007" endtime="20201112 10:13:45.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.016" endtime="20201112 10:13:45.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.691" endtime="20201112 10:13:45.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.689" endtime="20201112 10:13:45.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:45.023" level="INFO">${RESULT} = [{'time': 0.020381167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1930999999998525e-05, 'source_diff': 4.1930999999998525e-05}, {'time': 0.020431806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:45.019" endtime="20201112 10:13:45.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:45.038" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:45.024" endtime="20201112 10:13:45.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.043" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 10:13:45.041" endtime="20201112 10:13:45.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.045" level="INFO">VALUE: [4.1930999999998525e-05, 3.7638999999999034e-05, 3.7332999999997035e-05, 3.7332999999997035e-05, 3.8847000000001575e-05, 3.7375000000002684e-05, 3.744400000000106e-05, 3.720800000000038e-05, 3.8875000000000715e-05, 3.7069000000000685e-05, 3.742999999999802e-05, 3.723599999999952e-05, 3.8833000000002005e-05, 3.744400000000106e-05, 3.751400000000238e-05, 3.8875000000000715e-05, 3.776399999999916e-05, 3.8875000000000715e-05, 3.718000000000124e-05, 3.757000000000066e-05, 3.700000000000231e-05, 3.724999999999909e-05, 3.694500000000003e-05, 3.782000000000091e-05, 3.7195000000000283e-05, 3.8861000000001145e-05, 3.7526999999999006e-05, 3.724999999999909e-05, 3.695800000000013e-05, 3.7653000000002074e-05, 3.727799999999823e-05, 3.8875000000000715e-05, 3.744400000000106e-05, 3.7653000000002074e-05, 3.770800000000088e-05, 3.7124999999998964e-05, 3.7096999999999825e-05, 3.8804999999999396e-05, 3.752800000000195e-05, 3.7333000000000505e-05, 3.743000000000149e-05, 3.745800000000063e-05, 3.7624999999999464e-05, 3.695800000000013e-05, 3.726399999999866e-05, 3.752799999999848e-05, 3.7167000000001144e-05, 3.745800000000063e-05, 3.695900000000307e-05, 3.7680999999997744e-05]</msg>
<status status="PASS" starttime="20201112 10:13:45.044" endtime="20201112 10:13:45.046"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.039" endtime="20201112 10:13:45.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.049" endtime="20201112 10:13:45.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:45.053" endtime="20201112 10:13:45.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.051" endtime="20201112 10:13:45.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.047" endtime="20201112 10:13:45.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.654" endtime="20201112 10:13:45.073"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:44.653" endtime="20201112 10:13:45.074"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.083" endtime="20201112 10:13:45.103"></status>
</kw>
<msg timestamp="20201112 10:13:45.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.081" endtime="20201112 10:13:45.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.105" endtime="20201112 10:13:45.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.107" endtime="20201112 10:13:45.110"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.078" endtime="20201112 10:13:45.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.076" endtime="20201112 10:13:45.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.118" endtime="20201112 10:13:45.404"></status>
</kw>
<msg timestamp="20201112 10:13:45.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020876903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020919639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.116" endtime="20201112 10:13:45.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020876903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020919639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.408" endtime="20201112 10:13:45.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.417" endtime="20201112 10:13:45.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.114" endtime="20201112 10:13:45.419"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.112" endtime="20201112 10:13:45.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:45.424" level="INFO">${RESULT} = [{'time': 0.020919639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.273600000000155e-05, 'source_diff': 4.273600000000155e-05}, {'time': 0.020969306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:45.421" endtime="20201112 10:13:45.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:45.439" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:45.425" endtime="20201112 10:13:45.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.444" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 10:13:45.443" endtime="20201112 10:13:45.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.446" level="INFO">VALUE: [4.273600000000155e-05, 3.8902999999999854e-05, 3.832000000000141e-05, 3.9875000000001715e-05, 3.8541000000003045e-05, 3.977800000000073e-05, 3.877799999999973e-05, 3.880599999999887e-05, 3.825000000000009e-05, 3.844400000000206e-05, 3.8402999999999354e-05, 3.847199999999773e-05, 3.842999999999902e-05, 3.8166999999998674e-05, 3.9889000000001285e-05, 3.870800000000188e-05, 3.8583000000001755e-05, 3.850000000000034e-05, 3.8554999999999146e-05, 3.9818999999999966e-05, 3.826399999999966e-05, 3.8708999999997884e-05, 3.825000000000009e-05, 3.877799999999973e-05, 3.8388999999999784e-05, 3.8276999999999756e-05, 3.8138999999999534e-05, 3.976399999999769e-05, 3.818000000000224e-05, 3.804200000000202e-05, 3.855600000000209e-05, 3.799999999999984e-05, 3.8124999999999964e-05, 3.8290999999999326e-05, 3.8318999999998465e-05, 3.8375000000000214e-05, 3.850000000000034e-05, 3.8347000000001075e-05, 3.9818999999999966e-05, 3.819399999999834e-05, 3.873600000000102e-05, 3.801399999999941e-05, 3.852799999999948e-05, 3.847199999999773e-05, 3.872200000000145e-05, 3.8652999999999604e-05, 3.8138999999999534e-05, 3.876400000000016e-05, 3.7847000000000575e-05, 3.826399999999966e-05]</msg>
<status status="PASS" starttime="20201112 10:13:45.445" endtime="20201112 10:13:45.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.440" endtime="20201112 10:13:45.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.450" endtime="20201112 10:13:45.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:45.454" endtime="20201112 10:13:45.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.452" endtime="20201112 10:13:45.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.448" endtime="20201112 10:13:45.474"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.074" endtime="20201112 10:13:45.475"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.074" endtime="20201112 10:13:45.475"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.484" endtime="20201112 10:13:45.502"></status>
</kw>
<msg timestamp="20201112 10:13:45.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.482" endtime="20201112 10:13:45.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.504" endtime="20201112 10:13:45.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.506" endtime="20201112 10:13:45.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.480" endtime="20201112 10:13:45.510"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.477" endtime="20201112 10:13:45.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.517" endtime="20201112 10:13:45.803"></status>
</kw>
<msg timestamp="20201112 10:13:45.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:45.515" endtime="20201112 10:13:45.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204035, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:45.807" endtime="20201112 10:13:45.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.816" endtime="20201112 10:13:45.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.512" endtime="20201112 10:13:45.818"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.511" endtime="20201112 10:13:45.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:45.823" level="INFO">${RESULT} = [{'time': 0.0204035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4083000000000316e-05, 'source_diff': 4.4083000000000316e-05}, {'time': 0.020453083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:45.819" endtime="20201112 10:13:45.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:45.839" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:45.824" endtime="20201112 10:13:45.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.843" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 10:13:45.842" endtime="20201112 10:13:45.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.846" level="INFO">VALUE: [4.4083000000000316e-05, 3.944399999999959e-05, 3.894400000000256e-05, 3.945799999999916e-05, 3.9389000000000784e-05, 3.9068999999999215e-05, 3.901400000000041e-05, 3.9680999999999744e-05, 3.9389000000000784e-05, 3.9194999999998814e-05, 3.923600000000152e-05, 3.9236999999997524e-05, 3.977800000000073e-05, 3.975000000000159e-05, 3.97920000000003e-05, 3.9374999999997745e-05, 3.8958999999998134e-05, 3.974999999999812e-05, 3.9596999999998855e-05, 3.901400000000041e-05, 3.89720000000017e-05, 3.9083000000002255e-05, 3.9054999999999646e-05, 3.899999999999737e-05, 3.9263000000001186e-05, 3.9069000000002685e-05, 3.925000000000109e-05, 3.944399999999959e-05, 3.9403000000000354e-05, 3.919399999999934e-05, 3.920799999999891e-05, 3.901400000000041e-05, 3.9596999999998855e-05, 4.0903000000001855e-05, 3.975000000000159e-05, 3.9555000000000146e-05, 3.955599999999962e-05, 3.9430999999999494e-05, 3.933400000000198e-05, 4.0916999999997955e-05, 3.899999999999737e-05, 3.934799999999808e-05, 3.9138999999997065e-05, 3.974999999999812e-05, 3.95980000000018e-05, 3.9402999999996885e-05, 3.972200000000245e-05, 3.9013000000000936e-05, 3.968000000000027e-05, 3.970799999999941e-05]</msg>
<status status="PASS" starttime="20201112 10:13:45.844" endtime="20201112 10:13:45.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.840" endtime="20201112 10:13:45.847"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.850" endtime="20201112 10:13:45.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:45.853" endtime="20201112 10:13:45.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.852" endtime="20201112 10:13:45.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.848" endtime="20201112 10:13:45.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.476" endtime="20201112 10:13:45.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.475" endtime="20201112 10:13:45.874"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.883" endtime="20201112 10:13:45.901"></status>
</kw>
<msg timestamp="20201112 10:13:45.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.882" endtime="20201112 10:13:45.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:45.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:45.903" endtime="20201112 10:13:45.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.905" endtime="20201112 10:13:45.908"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.879" endtime="20201112 10:13:45.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.877" endtime="20201112 10:13:45.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:45.916" endtime="20201112 10:13:46.203"></status>
</kw>
<msg timestamp="20201112 10:13:46.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020244778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:45.914" endtime="20201112 10:13:46.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020244778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020289486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.207" endtime="20201112 10:13:46.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.215" endtime="20201112 10:13:46.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.911" endtime="20201112 10:13:46.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.910" endtime="20201112 10:13:46.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:46.222" level="INFO">${RESULT} = [{'time': 0.020289486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.470799999999747e-05, 'source_diff': 4.470799999999747e-05}, {'time': 0.020343153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:46.219" endtime="20201112 10:13:46.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:46.237" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:46.223" endtime="20201112 10:13:46.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.242" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 10:13:46.241" endtime="20201112 10:13:46.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.245" level="INFO">VALUE: [4.470799999999747e-05, 4.0596999999999855e-05, 3.9959000000002604e-05, 4.1875000000000245e-05, 4.057000000000019e-05, 4.0709000000003354e-05, 4.0026999999998036e-05, 4.0333000000000035e-05, 4.005600000000012e-05, 4.0583000000000286e-05, 4.0026999999998036e-05, 4.0125000000001965e-05, 4.1875000000000245e-05, 4.176300000000022e-05, 4.1847000000001106e-05, 4.070800000000041e-05, 4.044400000000059e-05, 4.019400000000034e-05, 4.074999999999912e-05, 3.99859999999988e-05, 4.1875000000000245e-05, 3.997199999999923e-05, 4.069399999999737e-05, 4.026400000000166e-05, 4.030600000000037e-05, 4.026400000000166e-05, 4.1847000000001106e-05, 4.0458999999999634e-05, 4.0110999999998925e-05, 4.182000000000144e-05, 4.0708999999999884e-05, 4.0459000000003104e-05, 3.9930999999999994e-05, 4.051399999999844e-05, 4.1888999999999815e-05, 4.0360999999999175e-05, 4.188800000000034e-05, 4.0652999999998135e-05, 4.1861000000000675e-05, 4.0389000000001785e-05, 4.1818999999998496e-05, 4.1902999999999385e-05, 4.076400000000216e-05, 4.049999999999887e-05, 4.0569000000000716e-05, 4.049999999999887e-05, 4.0596999999999855e-05, 4.020799999999991e-05, 4.069400000000084e-05, 4.077800000000173e-05]</msg>
<status status="PASS" starttime="20201112 10:13:46.243" endtime="20201112 10:13:46.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.238" endtime="20201112 10:13:46.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.248" endtime="20201112 10:13:46.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:46.252" endtime="20201112 10:13:46.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.250" endtime="20201112 10:13:46.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.247" endtime="20201112 10:13:46.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.875" endtime="20201112 10:13:46.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:45.875" endtime="20201112 10:13:46.273"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.282" endtime="20201112 10:13:46.300"></status>
</kw>
<msg timestamp="20201112 10:13:46.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.280" endtime="20201112 10:13:46.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.302" endtime="20201112 10:13:46.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.304" endtime="20201112 10:13:46.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.278" endtime="20201112 10:13:46.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.276" endtime="20201112 10:13:46.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.315" endtime="20201112 10:13:46.602"></status>
</kw>
<msg timestamp="20201112 10:13:46.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.313" endtime="20201112 10:13:46.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.606" endtime="20201112 10:13:46.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.615" endtime="20201112 10:13:46.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.310" endtime="20201112 10:13:46.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.309" endtime="20201112 10:13:46.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:46.622" level="INFO">${RESULT} = [{'time': 0.020275361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.576400000000022e-05, 'source_diff': 4.576400000000022e-05}, {'time': 0.020327958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:46.618" endtime="20201112 10:13:46.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:46.636" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:46.623" endtime="20201112 10:13:46.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.641" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 10:13:46.640" endtime="20201112 10:13:46.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.644" level="INFO">VALUE: [4.576400000000022e-05, 4.097200000000023e-05, 4.151399999999944e-05, 4.1554999999998676e-05, 4.175000000000012e-05, 4.1055000000001646e-05, 4.1333000000001036e-05, 4.1653000000002605e-05, 4.2889000000000815e-05, 4.277800000000026e-05, 4.101400000000241e-05, 4.1069000000001216e-05, 4.2804999999999926e-05, 4.101400000000241e-05, 4.155600000000162e-05, 4.152800000000248e-05, 4.104200000000155e-05, 4.1138999999999065e-05, 4.1708999999997415e-05, 4.175000000000012e-05, 4.1723000000000454e-05, 4.1709000000000884e-05, 4.102799999999851e-05, 4.0959000000000134e-05, 4.1694999999997845e-05, 4.107000000000069e-05, 4.133400000000051e-05, 4.1333000000001036e-05, 4.092999999999805e-05, 4.125000000000309e-05, 4.151399999999944e-05, 4.2847000000002106e-05, 4.119399999999787e-05, 4.1653000000002605e-05, 4.120800000000091e-05, 4.147199999999726e-05, 4.1638999999999565e-05, 4.097200000000023e-05, 4.1069000000001216e-05, 4.119400000000134e-05, 4.1638999999999565e-05, 4.1347000000000605e-05, 4.1638999999999565e-05, 4.1139000000002535e-05, 4.1209000000000384e-05, 4.131999999999747e-05, 4.1459000000000634e-05, 4.126399999999919e-05, 4.1083000000000786e-05, 4.1611000000000425e-05]</msg>
<status status="PASS" starttime="20201112 10:13:46.642" endtime="20201112 10:13:46.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.637" endtime="20201112 10:13:46.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.648" endtime="20201112 10:13:46.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:46.651" endtime="20201112 10:13:46.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.650" endtime="20201112 10:13:46.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.646" endtime="20201112 10:13:46.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.274" endtime="20201112 10:13:46.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.273" endtime="20201112 10:13:46.672"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.681" endtime="20201112 10:13:46.699"></status>
</kw>
<msg timestamp="20201112 10:13:46.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.680" endtime="20201112 10:13:46.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:46.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:46.701" endtime="20201112 10:13:46.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.703" endtime="20201112 10:13:46.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.677" endtime="20201112 10:13:46.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.675" endtime="20201112 10:13:46.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:46.714" endtime="20201112 10:13:47.001"></status>
</kw>
<msg timestamp="20201112 10:13:47.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:46.712" endtime="20201112 10:13:47.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.005" endtime="20201112 10:13:47.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.013" endtime="20201112 10:13:47.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.710" endtime="20201112 10:13:47.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.708" endtime="20201112 10:13:47.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:47.021" level="INFO">${RESULT} = [{'time': 0.020392125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6653000000000666e-05, 'source_diff': 4.6653000000000666e-05}, {'time': 0.020446764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:47.017" endtime="20201112 10:13:47.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:47.035" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:47.022" endtime="20201112 10:13:47.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.040" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 10:13:47.039" endtime="20201112 10:13:47.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.043" level="INFO">VALUE: [4.6653000000000666e-05, 4.3888999999998346e-05, 4.2152999999999635e-05, 4.24860000000013e-05, 4.1959000000001134e-05, 4.3860999999999206e-05, 4.24860000000013e-05, 4.270799999999894e-05, 4.2194999999998345e-05, 4.225000000000062e-05, 4.279199999999983e-05, 4.390200000000191e-05, 4.245799999999869e-05, 4.2124999999997026e-05, 4.200000000000037e-05, 4.3902999999997916e-05, 4.2430999999999025e-05, 4.195799999999819e-05, 4.191599999999948e-05, 4.2568999999999246e-05, 4.2596999999998386e-05, 4.2804999999999926e-05, 4.227799999999976e-05, 4.257000000000219e-05, 4.2431000000002494e-05, 4.376399999999822e-05, 4.2097000000001356e-05, 4.1902999999999385e-05, 4.2152999999999635e-05, 4.2611000000001426e-05, 4.2541000000000107e-05, 4.276400000000069e-05, 4.200000000000037e-05, 4.2597000000001856e-05, 4.240200000000041e-05, 4.259799999999786e-05, 4.2277000000000287e-05, 4.3846999999999636e-05, 4.219399999999887e-05, 4.231999999999847e-05, 4.2040999999999606e-05, 4.200000000000037e-05, 4.220799999999844e-05, 4.245799999999869e-05, 4.2096999999997886e-05, 4.2568999999999246e-05, 4.2082999999998316e-05, 4.1931000000001994e-05, 4.2375000000000745e-05, 4.201399999999994e-05]</msg>
<status status="PASS" starttime="20201112 10:13:47.041" endtime="20201112 10:13:47.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.036" endtime="20201112 10:13:47.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.047" endtime="20201112 10:13:47.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:47.050" endtime="20201112 10:13:47.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.049" endtime="20201112 10:13:47.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.045" endtime="20201112 10:13:47.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.673" endtime="20201112 10:13:47.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:46.672" endtime="20201112 10:13:47.071"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.080" endtime="20201112 10:13:47.098"></status>
</kw>
<msg timestamp="20201112 10:13:47.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.079" endtime="20201112 10:13:47.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.100" endtime="20201112 10:13:47.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.102" endtime="20201112 10:13:47.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.076" endtime="20201112 10:13:47.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.074" endtime="20201112 10:13:47.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.113" endtime="20201112 10:13:47.400"></status>
</kw>
<msg timestamp="20201112 10:13:47.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:47.111" endtime="20201112 10:13:47.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020335069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:47.405" endtime="20201112 10:13:47.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.413" endtime="20201112 10:13:47.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.108" endtime="20201112 10:13:47.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.107" endtime="20201112 10:13:47.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:47.420" level="INFO">${RESULT} = [{'time': 0.020335069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.806900000000128e-05, 'source_diff': 4.806900000000128e-05}, {'time': 0.020389681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:47.417" endtime="20201112 10:13:47.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:47.436" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:47.421" endtime="20201112 10:13:47.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.441" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 10:13:47.440" endtime="20201112 10:13:47.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.443" level="INFO">VALUE: [4.806900000000128e-05, 4.300000000000137e-05, 4.351400000000144e-05, 4.3555000000000677e-05, 4.369400000000037e-05, 4.324999999999815e-05, 4.3388999999997846e-05, 4.3625000000001996e-05, 4.3486999999998305e-05, 4.301400000000094e-05, 4.3458999999999165e-05, 4.4916999999998486e-05, 4.344400000000012e-05, 4.326399999999772e-05, 4.355600000000015e-05, 4.2944999999999095e-05, 4.2944999999999095e-05, 4.334800000000208e-05, 4.3458999999999165e-05, 4.484800000000011e-05, 4.3708999999999415e-05, 4.375000000000212e-05, 4.351400000000144e-05, 4.375000000000212e-05, 4.3291000000000857e-05, 4.300000000000137e-05, 4.306999999999922e-05, 4.369400000000037e-05, 4.301400000000094e-05, 4.4874999999999776e-05, 4.3472999999998735e-05, 4.344400000000012e-05, 4.327800000000076e-05, 4.4874999999999776e-05, 4.4833000000001066e-05, 4.3625000000001996e-05, 4.302800000000051e-05, 4.3667000000000705e-05, 4.3139000000001065e-05, 4.3153000000000635e-05, 4.4903000000002385e-05, 4.3610999999998956e-05, 4.4847000000000636e-05, 4.333399999999904e-05, 4.483400000000054e-05, 4.3694999999999845e-05, 4.483400000000054e-05, 4.2958999999998665e-05, 4.38060000000004e-05, 4.3012999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:13:47.442" endtime="20201112 10:13:47.444"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.437" endtime="20201112 10:13:47.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.447" endtime="20201112 10:13:47.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:47.451" endtime="20201112 10:13:47.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.449" endtime="20201112 10:13:47.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.445" endtime="20201112 10:13:47.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.072" endtime="20201112 10:13:47.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.072" endtime="20201112 10:13:47.472"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.481" endtime="20201112 10:13:47.500"></status>
</kw>
<msg timestamp="20201112 10:13:47.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.479" endtime="20201112 10:13:47.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.501" endtime="20201112 10:13:47.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.504" endtime="20201112 10:13:47.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.476" endtime="20201112 10:13:47.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.474" endtime="20201112 10:13:47.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.514" endtime="20201112 10:13:47.801"></status>
</kw>
<msg timestamp="20201112 10:13:47.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.513" endtime="20201112 10:13:47.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020295083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.805" endtime="20201112 10:13:47.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.814" endtime="20201112 10:13:47.815"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.510" endtime="20201112 10:13:47.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.508" endtime="20201112 10:13:47.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:47.821" level="INFO">${RESULT} = [{'time': 0.020343722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8639000000003096e-05, 'source_diff': 4.8639000000003096e-05}, {'time': 0.020400375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:13:47.817" endtime="20201112 10:13:47.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:47.835" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:47.822" endtime="20201112 10:13:47.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.840" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 10:13:47.839" endtime="20201112 10:13:47.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.843" level="INFO">VALUE: [4.8639000000003096e-05, 4.470799999999747e-05, 4.427799999999829e-05, 4.4138999999998596e-05, 4.4416999999997986e-05, 4.4374999999999276e-05, 4.3903000000001385e-05, 4.429200000000133e-05, 4.4638999999999096e-05, 4.4638999999999096e-05, 4.3945000000000095e-05, 4.4195000000000345e-05, 4.409799999999936e-05, 4.426399999999872e-05, 4.407000000000022e-05, 4.476400000000269e-05, 4.477699999999932e-05, 4.454199999999811e-05, 4.398599999999933e-05, 4.463799999999962e-05, 4.416599999999826e-05, 4.4360999999999706e-05, 4.419400000000087e-05, 4.442999999999808e-05, 4.401400000000194e-05, 4.473600000000008e-05, 4.4139000000002065e-05, 4.400000000000237e-05, 4.5833000000002067e-05, 4.452799999999854e-05, 4.427800000000176e-05, 4.4624999999999526e-05, 4.473600000000008e-05, 4.4667000000001705e-05, 4.4722999999999985e-05, 4.474999999999965e-05, 4.595799999999872e-05, 4.424999999999915e-05, 4.586099999999774e-05, 4.427700000000229e-05, 4.445800000000069e-05, 4.4667000000001705e-05, 4.424999999999915e-05, 4.445800000000069e-05, 4.413800000000259e-05, 4.4638999999999096e-05, 4.5875000000000776e-05, 4.477799999999879e-05, 4.46939999999979e-05, 4.5875000000000776e-05]</msg>
<status status="PASS" starttime="20201112 10:13:47.841" endtime="20201112 10:13:47.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.836" endtime="20201112 10:13:47.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.847" endtime="20201112 10:13:47.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:47.850" endtime="20201112 10:13:47.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.849" endtime="20201112 10:13:47.870"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.845" endtime="20201112 10:13:47.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.473" endtime="20201112 10:13:47.871"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.472" endtime="20201112 10:13:47.871"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.880" endtime="20201112 10:13:47.899"></status>
</kw>
<msg timestamp="20201112 10:13:47.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.878" endtime="20201112 10:13:47.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:47.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:47.900" endtime="20201112 10:13:47.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.903" endtime="20201112 10:13:47.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.876" endtime="20201112 10:13:47.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.874" endtime="20201112 10:13:47.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:47.913" endtime="20201112 10:13:48.200"></status>
</kw>
<msg timestamp="20201112 10:13:48.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020244903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:47.912" endtime="20201112 10:13:48.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020244903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.204" endtime="20201112 10:13:48.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.213" endtime="20201112 10:13:48.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.909" endtime="20201112 10:13:48.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.907" endtime="20201112 10:13:48.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:48.220" level="INFO">${RESULT} = [{'time': 0.020244903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.004200000000014e-05, 'source_diff': 5.004200000000014e-05}, {'time': 0.020302556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:48.216" endtime="20201112 10:13:48.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:48.234" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:48.221" endtime="20201112 10:13:48.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.239" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 10:13:48.238" endtime="20201112 10:13:48.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.242" level="INFO">VALUE: [5.004200000000014e-05, 4.527799999999929e-05, 4.679099999999742e-05, 4.5013e-05, 4.690199999999797e-05, 4.497200000000076e-05, 4.53329999999981e-05, 4.5333000000001566e-05, 4.53329999999981e-05, 4.561099999999749e-05, 4.68329999999996e-05, 4.555499999999921e-05, 4.502799999999904e-05, 4.549999999999693e-05, 4.502799999999904e-05, 4.5431000000002025e-05, 4.6889000000001346e-05, 4.533400000000104e-05, 4.4959000000000665e-05, 4.5180999999998306e-05, 4.508400000000079e-05, 4.4959000000000665e-05, 4.527800000000276e-05, 4.512499999999656e-05, 4.686099999999874e-05, 4.5195000000001345e-05, 4.511199999999993e-05, 4.5431000000002025e-05, 4.5333000000001566e-05, 4.6875000000001776e-05, 4.544400000000212e-05, 4.5625000000000526e-05, 4.51939999999984e-05, 4.502799999999904e-05, 4.51939999999984e-05, 4.5125000000000026e-05, 4.5125000000000026e-05, 4.5681000000002275e-05, 4.545800000000169e-05, 4.683300000000307e-05, 4.554199999999911e-05, 4.4959000000000665e-05, 4.525000000000015e-05, 4.4959000000000665e-05, 4.4945000000001095e-05, 4.5417000000002455e-05, 4.5652999999999666e-05, 4.576400000000022e-05, 4.58060000000024e-05, 4.68329999999996e-05]</msg>
<status status="PASS" starttime="20201112 10:13:48.240" endtime="20201112 10:13:48.243"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.235" endtime="20201112 10:13:48.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.245" endtime="20201112 10:13:48.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.249" endtime="20201112 10:13:48.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.248" endtime="20201112 10:13:48.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.244" endtime="20201112 10:13:48.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.872" endtime="20201112 10:13:48.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:47.871" endtime="20201112 10:13:48.270"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.279" endtime="20201112 10:13:48.298"></status>
</kw>
<msg timestamp="20201112 10:13:48.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.278" endtime="20201112 10:13:48.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.299" endtime="20201112 10:13:48.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.302" endtime="20201112 10:13:48.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.275" endtime="20201112 10:13:48.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.273" endtime="20201112 10:13:48.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.312" endtime="20201112 10:13:48.600"></status>
</kw>
<msg timestamp="20201112 10:13:48.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.311" endtime="20201112 10:13:48.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020359139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020411403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.604" endtime="20201112 10:13:48.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.613" endtime="20201112 10:13:48.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.308" endtime="20201112 10:13:48.615"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.306" endtime="20201112 10:13:48.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:48.620" level="INFO">${RESULT} = [{'time': 0.020411403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.226400000000325e-05, 'source_diff': 5.226400000000325e-05}, {'time': 0.020471083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:48.616" endtime="20201112 10:13:48.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:48.635" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:48.621" endtime="20201112 10:13:48.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.640" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 10:13:48.638" endtime="20201112 10:13:48.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.642" level="INFO">VALUE: [5.226400000000325e-05, 4.61939999999994e-05, 4.5987000000000805e-05, 4.663899999999763e-05, 4.599999999999743e-05, 4.636099999999824e-05, 4.783299999999713e-05, 4.652700000000107e-05, 4.620800000000244e-05, 4.606899999999928e-05, 4.675000000000165e-05, 4.623600000000158e-05, 4.791699999999802e-05, 4.6125000000001026e-05, 4.640299999999695e-05, 4.655600000000315e-05, 4.6222999999998016e-05, 4.626400000000072e-05, 4.60000000000009e-05, 4.788899999999888e-05, 4.6639000000001096e-05, 4.6389000000000846e-05, 4.787499999999931e-05, 4.608400000000179e-05, 4.656999999999925e-05, 4.6013000000001e-05, 4.656999999999925e-05, 4.6431000000003025e-05, 4.612499999999756e-05, 4.655500000000021e-05, 4.781900000000103e-05, 4.670799999999947e-05, 4.643000000000008e-05, 4.658299999999935e-05, 4.6083000000002317e-05, 4.587499999999731e-05, 4.656899999999978e-05, 4.631899999999953e-05, 4.620799999999897e-05, 4.78330000000006e-05, 4.63329999999991e-05, 4.612499999999756e-05, 4.674999999999818e-05, 4.6611000000001956e-05, 4.6723000000001985e-05, 4.655599999999968e-05, 4.655599999999968e-05, 4.65130000000015e-05, 4.612499999999756e-05, 4.666600000000076e-05]</msg>
<status status="PASS" starttime="20201112 10:13:48.641" endtime="20201112 10:13:48.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.636" endtime="20201112 10:13:48.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.646" endtime="20201112 10:13:48.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:48.650" endtime="20201112 10:13:48.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.648" endtime="20201112 10:13:48.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.644" endtime="20201112 10:13:48.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.271" endtime="20201112 10:13:48.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.271" endtime="20201112 10:13:48.671"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.680" endtime="20201112 10:13:48.698"></status>
</kw>
<msg timestamp="20201112 10:13:48.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.678" endtime="20201112 10:13:48.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:48.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:48.700" endtime="20201112 10:13:48.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.702" endtime="20201112 10:13:48.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.675" endtime="20201112 10:13:48.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.673" endtime="20201112 10:13:48.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:48.713" endtime="20201112 10:13:49.000"></status>
</kw>
<msg timestamp="20201112 10:13:49.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:48.711" endtime="20201112 10:13:49.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.004" endtime="20201112 10:13:49.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.012" endtime="20201112 10:13:49.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.708" endtime="20201112 10:13:49.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.707" endtime="20201112 10:13:49.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:49.019" level="INFO">${RESULT} = [{'time': 0.020405722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15140000000025e-05, 'source_diff': 5.15140000000025e-05}, {'time': 0.020466333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:49.016" endtime="20201112 10:13:49.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:49.033" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:49.020" endtime="20201112 10:13:49.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.038" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 10:13:49.037" endtime="20201112 10:13:49.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.040" level="INFO">VALUE: [5.15140000000025e-05, 4.724999999999868e-05, 4.776399999999875e-05, 4.774999999999918e-05, 4.884700000000117e-05, 4.748599999999936e-05, 4.73330000000001e-05, 4.879199999999889e-05, 4.706900000000028e-05, 4.697200000000276e-05, 4.730600000000043e-05, 4.740299999999795e-05, 4.7403000000001416e-05, 4.704200000000061e-05, 4.7625000000002526e-05, 4.7222999999999016e-05, 4.737499999999881e-05, 4.744400000000065e-05, 4.887500000000031e-05, 4.702700000000157e-05, 4.88880000000004e-05, 4.770800000000047e-05, 4.705500000000071e-05, 4.76940000000009e-05, 4.773599999999961e-05, 4.887500000000031e-05, 4.75000000000024e-05, 4.7139000000001596e-05, 4.7625000000002526e-05, 4.694400000000015e-05, 4.7389000000001846e-05, 4.713899999999813e-05, 4.7153000000001166e-05, 4.723599999999911e-05, 4.733399999999957e-05, 4.7695000000000376e-05, 4.88200000000015e-05, 4.737499999999881e-05, 4.709799999999889e-05, 4.887499999999684e-05, 4.741600000000151e-05, 4.738800000000237e-05, 4.755499999999774e-05, 4.708299999999985e-05, 4.702800000000104e-05, 4.769399999999743e-05, 4.887500000000031e-05, 4.699999999999843e-05, 4.73330000000001e-05, 4.887500000000031e-05]</msg>
<status status="PASS" starttime="20201112 10:13:49.039" endtime="20201112 10:13:49.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.034" endtime="20201112 10:13:49.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.044" endtime="20201112 10:13:49.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.047" endtime="20201112 10:13:49.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.046" endtime="20201112 10:13:49.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.042" endtime="20201112 10:13:49.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.672" endtime="20201112 10:13:49.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:48.671" endtime="20201112 10:13:49.068"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.077" endtime="20201112 10:13:49.097"></status>
</kw>
<msg timestamp="20201112 10:13:49.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.075" endtime="20201112 10:13:49.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.099" endtime="20201112 10:13:49.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.102" endtime="20201112 10:13:49.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.073" endtime="20201112 10:13:49.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.071" endtime="20201112 10:13:49.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.112" endtime="20201112 10:13:49.417"></status>
</kw>
<msg timestamp="20201112 10:13:49.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020290458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.111" endtime="20201112 10:13:49.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020237653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020290458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.421" endtime="20201112 10:13:49.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.430" endtime="20201112 10:13:49.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.108" endtime="20201112 10:13:49.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.107" endtime="20201112 10:13:49.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:49.436" level="INFO">${RESULT} = [{'time': 0.020290458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.280499999999952e-05, 'source_diff': 5.280499999999952e-05}, {'time': 0.020349097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:49.433" endtime="20201112 10:13:49.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:49.450" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:49.437" endtime="20201112 10:13:49.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.455" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 10:13:49.454" endtime="20201112 10:13:49.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.457" level="INFO">VALUE: [5.280499999999952e-05, 4.813899999999913e-05, 4.799999999999943e-05, 4.797200000000029e-05, 4.863899999999963e-05, 4.826399999999925e-05, 4.857000000000125e-05, 4.804200000000161e-05, 4.8459000000000696e-05, 4.849999999999993e-05, 4.811099999999999e-05, 4.859800000000039e-05, 4.862500000000006e-05, 4.829200000000186e-05, 4.862500000000006e-05, 4.858400000000082e-05, 4.9888000000001403e-05, 4.811099999999999e-05, 4.837499999999981e-05, 4.856899999999831e-05, 4.831900000000153e-05, 4.858300000000135e-05, 4.991700000000002e-05, 4.824999999999968e-05, 4.813899999999913e-05, 4.856899999999831e-05, 4.833299999999763e-05, 4.812499999999956e-05, 4.8389000000002846e-05, 4.804200000000161e-05, 4.816699999999827e-05, 4.811199999999946e-05, 4.855500000000221e-05, 4.805600000000118e-05, 4.838899999999938e-05, 4.849999999999993e-05, 4.875000000000018e-05, 4.826399999999925e-05, 4.862500000000006e-05, 4.794400000000115e-05, 4.797200000000029e-05, 4.877699999999985e-05, 4.823600000000011e-05, 4.856900000000178e-05, 4.793000000000158e-05, 4.797200000000029e-05, 4.869399999999843e-05, 4.988900000000088e-05, 4.868000000000233e-05, 4.811099999999999e-05]</msg>
<status status="PASS" starttime="20201112 10:13:49.456" endtime="20201112 10:13:49.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.451" endtime="20201112 10:13:49.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.461" endtime="20201112 10:13:49.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.464" endtime="20201112 10:13:49.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.463" endtime="20201112 10:13:49.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.459" endtime="20201112 10:13:49.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.069" endtime="20201112 10:13:49.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.068" endtime="20201112 10:13:49.485"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.494" endtime="20201112 10:13:49.512"></status>
</kw>
<msg timestamp="20201112 10:13:49.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.492" endtime="20201112 10:13:49.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.514" endtime="20201112 10:13:49.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.516" endtime="20201112 10:13:49.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.490" endtime="20201112 10:13:49.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.487" endtime="20201112 10:13:49.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.526" endtime="20201112 10:13:49.811"></status>
</kw>
<msg timestamp="20201112 10:13:49.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019756486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.525" endtime="20201112 10:13:49.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019756486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.816" endtime="20201112 10:13:49.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.824" endtime="20201112 10:13:49.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.522" endtime="20201112 10:13:49.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.521" endtime="20201112 10:13:49.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:49.830" level="INFO">${RESULT} = [{'time': 0.019756486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.350000000000146e-05, 'source_diff': 5.350000000000146e-05}, {'time': 0.019817139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:49.827" endtime="20201112 10:13:49.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:49.844" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:49.831" endtime="20201112 10:13:49.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.848" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 10:13:49.847" endtime="20201112 10:13:49.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.851" level="INFO">VALUE: [5.350000000000146e-05, 4.961100000000149e-05, 4.900000000000043e-05, 4.944400000000265e-05, 4.962500000000106e-05, 4.91529999999997e-05, 4.8959000000001196e-05, 5.08469999999997e-05, 4.931999999999853e-05, 4.931999999999853e-05, 4.8931000000002056e-05, 4.918099999999884e-05, 5.082000000000003e-05, 4.938900000000038e-05, 4.909700000000142e-05, 5.081900000000056e-05, 4.931900000000253e-05, 4.9431000000002556e-05, 5.081899999999709e-05, 4.923600000000111e-05, 4.918000000000283e-05, 4.940299999999995e-05, 4.93469999999982e-05, 4.900000000000043e-05, 4.930599999999896e-05, 4.931999999999853e-05, 4.962500000000106e-05, 4.91529999999997e-05, 4.9208999999997977e-05, 4.918099999999884e-05, 4.8945000000001626e-05, 4.900000000000043e-05, 4.929099999999992e-05, 5.087499999999884e-05, 4.962500000000106e-05, 4.942999999999961e-05, 4.93330000000021e-05, 4.913800000000065e-05, 4.897199999999782e-05, 4.974999999999771e-05, 4.922200000000154e-05, 4.902799999999957e-05, 4.975000000000118e-05, 4.970800000000247e-05, 4.937500000000081e-05, 4.919399999999893e-05, 4.904199999999914e-05, 4.979199999999989e-05, 4.9431000000002556e-05, 4.93330000000021e-05]</msg>
<status status="PASS" starttime="20201112 10:13:49.849" endtime="20201112 10:13:49.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.845" endtime="20201112 10:13:49.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.855" endtime="20201112 10:13:49.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:49.858" endtime="20201112 10:13:49.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.856" endtime="20201112 10:13:49.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.853" endtime="20201112 10:13:49.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.486" endtime="20201112 10:13:49.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.485" endtime="20201112 10:13:49.879"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.887" endtime="20201112 10:13:49.906"></status>
</kw>
<msg timestamp="20201112 10:13:49.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.886" endtime="20201112 10:13:49.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:49.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:49.908" endtime="20201112 10:13:49.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.910" endtime="20201112 10:13:49.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.883" endtime="20201112 10:13:49.913"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.881" endtime="20201112 10:13:49.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:49.920" endtime="20201112 10:13:50.205"></status>
</kw>
<msg timestamp="20201112 10:13:50.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:49.919" endtime="20201112 10:13:50.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.209" endtime="20201112 10:13:50.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.217" endtime="20201112 10:13:50.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.916" endtime="20201112 10:13:50.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.914" endtime="20201112 10:13:50.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:50.224" level="INFO">${RESULT} = [{'time': 0.019682375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.433300000000016e-05, 'source_diff': 5.433300000000016e-05}, {'time': 0.019745014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:50.220" endtime="20201112 10:13:50.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:50.237" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:50.225" endtime="20201112 10:13:50.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.242" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 10:13:50.241" endtime="20201112 10:13:50.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.244" level="INFO">VALUE: [5.433300000000016e-05, 5.186100000000027e-05, 5.0014000000001e-05, 5.054200000000064e-05, 5.031999999999953e-05, 5.074999999999871e-05, 5.012500000000156e-05, 5.05270000000016e-05, 5.044400000000018e-05, 5.000000000000143e-05, 5.027700000000135e-05, 5.004100000000067e-05, 5.015299999999723e-05, 5.186100000000027e-05, 4.997200000000229e-05, 5.038900000000138e-05, 5.056900000000031e-05, 4.999999999999796e-05, 5.072199999999957e-05, 5.022200000000254e-05, 5.004200000000014e-05, 5.077699999999838e-05, 5.038900000000138e-05, 4.998600000000186e-05, 5.0459000000002696e-05, 4.993099999999959e-05, 5.013899999999766e-05, 5.019499999999941e-05, 5.037500000000181e-05, 5.1887999999999934e-05, 5.180499999999852e-05, 5.076300000000228e-05, 5.049999999999846e-05, 5.051399999999803e-05, 5.01530000000007e-05, 5.038900000000138e-05, 5.183300000000113e-05, 5.065299999999773e-05, 4.991700000000002e-05, 5.022200000000254e-05, 5.069499999999991e-05, 5.0320000000003e-05, 5.18470000000007e-05, 5.05140000000015e-05, 5.187499999999984e-05, 5.074999999999871e-05, 5.1901999999999504e-05, 5.01530000000007e-05, 5.022199999999907e-05, 5.012500000000156e-05]</msg>
<status status="PASS" starttime="20201112 10:13:50.243" endtime="20201112 10:13:50.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.238" endtime="20201112 10:13:50.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.248" endtime="20201112 10:13:50.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:50.251" endtime="20201112 10:13:50.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.250" endtime="20201112 10:13:50.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.246" endtime="20201112 10:13:50.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.880" endtime="20201112 10:13:50.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:49.879" endtime="20201112 10:13:50.272"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.281" endtime="20201112 10:13:50.299"></status>
</kw>
<msg timestamp="20201112 10:13:50.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.279" endtime="20201112 10:13:50.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.300" endtime="20201112 10:13:50.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.303" endtime="20201112 10:13:50.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.276" endtime="20201112 10:13:50.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.274" endtime="20201112 10:13:50.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.313" endtime="20201112 10:13:50.598"></status>
</kw>
<msg timestamp="20201112 10:13:50.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.312" endtime="20201112 10:13:50.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019682278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019738333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.603" endtime="20201112 10:13:50.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.611" endtime="20201112 10:13:50.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.309" endtime="20201112 10:13:50.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.307" endtime="20201112 10:13:50.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:50.617" level="INFO">${RESULT} = [{'time': 0.019738333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.60549999999993e-05, 'source_diff': 5.60549999999993e-05}, {'time': 0.019800986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:50.614" endtime="20201112 10:13:50.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:50.632" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:50.618" endtime="20201112 10:13:50.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.636" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 10:13:50.635" endtime="20201112 10:13:50.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.639" level="INFO">VALUE: [5.60549999999993e-05, 5.136099999999977e-05, 5.10270000000021e-05, 5.1193999999997464e-05, 5.108300000000038e-05, 5.138900000000238e-05, 5.156900000000131e-05, 5.131999999999706e-05, 5.10279999999981e-05, 5.138900000000238e-05, 5.283299999999866e-05, 5.113899999999866e-05, 5.156899999999784e-05, 5.143099999999762e-05, 5.122200000000007e-05, 5.095899999999973e-05, 5.145900000000023e-05, 5.169499999999744e-05, 5.147200000000032e-05, 5.168099999999787e-05, 5.138900000000238e-05, 5.106900000000081e-05, 5.1471999999996854e-05, 5.12080000000005e-05, 5.151399999999903e-05, 5.133300000000063e-05, 5.105500000000124e-05, 5.11669999999978e-05, 5.288900000000041e-05, 5.180599999999799e-05, 5.108300000000038e-05, 5.124999999999921e-05, 5.151399999999903e-05, 5.131900000000106e-05, 5.136099999999977e-05, 5.138899999999891e-05, 5.159799999999992e-05, 5.126400000000225e-05, 5.125000000000268e-05, 5.163899999999916e-05, 5.126399999999878e-05, 5.124999999999921e-05, 5.141699999999805e-05, 5.170900000000048e-05, 5.162499999999959e-05, 5.113899999999866e-05, 5.288899999999694e-05, 5.120899999999998e-05, 5.283299999999866e-05, 5.145800000000075e-05]</msg>
<status status="PASS" starttime="20201112 10:13:50.637" endtime="20201112 10:13:50.640"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.633" endtime="20201112 10:13:50.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.642" endtime="20201112 10:13:50.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:50.646" endtime="20201112 10:13:50.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.644" endtime="20201112 10:13:50.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.641" endtime="20201112 10:13:50.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.273" endtime="20201112 10:13:50.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.272" endtime="20201112 10:13:50.667"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.675" endtime="20201112 10:13:50.694"></status>
</kw>
<msg timestamp="20201112 10:13:50.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.674" endtime="20201112 10:13:50.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:50.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:50.696" endtime="20201112 10:13:50.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.698" endtime="20201112 10:13:50.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.671" endtime="20201112 10:13:50.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.669" endtime="20201112 10:13:50.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:50.709" endtime="20201112 10:13:50.994"></status>
</kw>
<msg timestamp="20201112 10:13:50.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.707" endtime="20201112 10:13:50.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:50.998" endtime="20201112 10:13:51.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.007" endtime="20201112 10:13:51.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.705" endtime="20201112 10:13:51.009"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.703" endtime="20201112 10:13:51.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:51.014" level="INFO">${RESULT} = [{'time': 0.019669486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.712500000000162e-05, 'source_diff': 5.712500000000162e-05}, {'time': 0.019734097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:51.010" endtime="20201112 10:13:51.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:51.027" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:51.015" endtime="20201112 10:13:51.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.032" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 10:13:51.030" endtime="20201112 10:13:51.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.034" level="INFO">VALUE: [5.712500000000162e-05, 5.250000000000046e-05, 5.197200000000082e-05, 5.283399999999813e-05, 5.201399999999953e-05, 5.2693999999998964e-05, 5.265299999999973e-05, 5.205600000000171e-05, 5.234800000000067e-05, 5.24869999999969e-05, 5.255599999999874e-05, 5.212500000000009e-05, 5.270899999999801e-05, 5.198600000000039e-05, 5.2693999999998964e-05, 5.281899999999909e-05, 5.248600000000089e-05, 5.276299999999734e-05, 5.2693999999998964e-05, 5.256899999999884e-05, 5.387500000000184e-05, 5.219400000000193e-05, 5.391700000000055e-05, 5.381899999999662e-05, 5.390299999999751e-05, 5.2708000000002e-05, 5.387500000000184e-05, 5.207000000000128e-05, 5.256999999999831e-05, 5.284800000000117e-05, 5.273699999999715e-05, 5.220900000000098e-05, 5.220900000000098e-05, 5.256999999999831e-05, 5.231899999999859e-05, 5.195800000000125e-05, 5.220900000000098e-05, 5.257000000000178e-05, 5.3916000000001074e-05, 5.211100000000052e-05, 5.2415999999999574e-05, 5.2014000000003e-05, 5.1957999999997784e-05, 5.2429999999999144e-05, 5.2193999999998464e-05, 5.393100000000012e-05, 5.198600000000039e-05, 5.277799999999985e-05, 5.209700000000095e-05, 5.194500000000116e-05]</msg>
<status status="PASS" starttime="20201112 10:13:51.033" endtime="20201112 10:13:51.035"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.028" endtime="20201112 10:13:51.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.038" endtime="20201112 10:13:51.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.041" endtime="20201112 10:13:51.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.040" endtime="20201112 10:13:51.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.036" endtime="20201112 10:13:51.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.667" endtime="20201112 10:13:51.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:50.667" endtime="20201112 10:13:51.062"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.070" endtime="20201112 10:13:51.090"></status>
</kw>
<msg timestamp="20201112 10:13:51.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.069" endtime="20201112 10:13:51.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.091" endtime="20201112 10:13:51.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.094" endtime="20201112 10:13:51.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.066" endtime="20201112 10:13:51.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.064" endtime="20201112 10:13:51.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.104" endtime="20201112 10:13:51.388"></status>
</kw>
<msg timestamp="20201112 10:13:51.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.102" endtime="20201112 10:13:51.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.392" endtime="20201112 10:13:51.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.400" endtime="20201112 10:13:51.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.100" endtime="20201112 10:13:51.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.098" endtime="20201112 10:13:51.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:51.407" level="INFO">${RESULT} = [{'time': 0.019710597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9193999999998526e-05, 'source_diff': 5.9193999999998526e-05}, {'time': 0.01977725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:13:51.404" endtime="20201112 10:13:51.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:51.420" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:51.408" endtime="20201112 10:13:51.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.425" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 10:13:51.424" endtime="20201112 10:13:51.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.427" level="INFO">VALUE: [5.9193999999998526e-05, 5.33609999999983e-05, 5.375000000000171e-05, 5.483300000000066e-05, 5.483300000000066e-05, 5.3763999999997814e-05, 5.3013999999997063e-05, 5.333299999999916e-05, 5.312499999999762e-05, 5.29730000000013e-05, 5.293099999999912e-05, 5.363900000000116e-05, 5.3763999999997814e-05, 5.344499999999919e-05, 5.3707999999999534e-05, 5.306899999999934e-05, 5.305499999999977e-05, 5.315300000000023e-05, 5.3152000000000754e-05, 5.35280000000006e-05, 5.2957999999998784e-05, 5.326400000000078e-05, 5.351400000000103e-05, 5.368099999999987e-05, 5.362500000000159e-05, 5.345800000000275e-05, 5.323600000000164e-05, 5.3443999999999714e-05, 5.318099999999937e-05, 5.362500000000159e-05, 5.301400000000053e-05, 5.307000000000228e-05, 5.3665999999997355e-05, 5.305499999999977e-05, 5.483400000000013e-05, 5.4902000000002504e-05, 5.295800000000225e-05, 5.361099999999855e-05, 5.479100000000195e-05, 5.375000000000171e-05, 5.3443999999999714e-05, 5.345800000000275e-05, 5.488899999999894e-05, 5.337499999999787e-05, 5.343099999999962e-05, 5.336100000000177e-05, 5.491700000000155e-05, 5.336100000000177e-05, 5.30280000000001e-05, 5.365300000000073e-05]</msg>
<status status="PASS" starttime="20201112 10:13:51.426" endtime="20201112 10:13:51.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.421" endtime="20201112 10:13:51.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.431" endtime="20201112 10:13:51.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.434" endtime="20201112 10:13:51.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.433" endtime="20201112 10:13:51.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.429" endtime="20201112 10:13:51.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.063" endtime="20201112 10:13:51.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.062" endtime="20201112 10:13:51.455"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.464" endtime="20201112 10:13:51.482"></status>
</kw>
<msg timestamp="20201112 10:13:51.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.462" endtime="20201112 10:13:51.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.484" endtime="20201112 10:13:51.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.486" endtime="20201112 10:13:51.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.460" endtime="20201112 10:13:51.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.458" endtime="20201112 10:13:51.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.496" endtime="20201112 10:13:51.782"></status>
</kw>
<msg timestamp="20201112 10:13:51.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.495" endtime="20201112 10:13:51.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019691681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.786" endtime="20201112 10:13:51.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.794" endtime="20201112 10:13:51.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.492" endtime="20201112 10:13:51.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.491" endtime="20201112 10:13:51.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:51.801" level="INFO">${RESULT} = [{'time': 0.019749972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.829100000000198e-05, 'source_diff': 5.829100000000198e-05}, {'time': 0.019816625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:51.797" endtime="20201112 10:13:51.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:51.814" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:51.802" endtime="20201112 10:13:51.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.819" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 10:13:51.818" endtime="20201112 10:13:51.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.821" level="INFO">VALUE: [5.829100000000198e-05, 5.408299999999991e-05, 5.4722000000000104e-05, 5.409799999999895e-05, 5.4221999999999604e-05, 5.395899999999926e-05, 5.455600000000074e-05, 5.39730000000023e-05, 5.413899999999819e-05, 5.469500000000044e-05, 5.4665999999998355e-05, 5.401299999999859e-05, 5.4166000000001324e-05, 5.3930000000000644e-05, 5.455600000000074e-05, 5.3999999999998494e-05, 5.4485999999999424e-05, 5.4277999999997883e-05, 5.480500000000152e-05, 5.46809999999974e-05, 5.3930000000000644e-05, 5.411100000000252e-05, 5.433399999999963e-05, 5.441699999999758e-05, 5.427800000000135e-05, 5.405600000000024e-05, 5.4235999999999174e-05, 5.458400000000335e-05, 5.4722000000000104e-05, 5.445899999999976e-05, 5.427700000000188e-05, 5.393100000000012e-05, 5.3957999999999784e-05, 5.4763999999998814e-05, 5.436100000000277e-05, 5.588899999999994e-05, 5.3957999999999784e-05, 5.440300000000148e-05, 5.588899999999994e-05, 5.434699999999973e-05, 5.412499999999862e-05, 5.3971999999999354e-05, 5.469500000000044e-05, 5.427800000000135e-05, 5.455599999999727e-05, 5.433399999999963e-05, 5.44730000000028e-05, 5.443100000000062e-05, 5.4263999999998314e-05, 5.433300000000016e-05]</msg>
<status status="PASS" starttime="20201112 10:13:51.820" endtime="20201112 10:13:51.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.815" endtime="20201112 10:13:51.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.825" endtime="20201112 10:13:51.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:51.828" endtime="20201112 10:13:51.847"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.827" endtime="20201112 10:13:51.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.823" endtime="20201112 10:13:51.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.456" endtime="20201112 10:13:51.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.456" endtime="20201112 10:13:51.849"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.858" endtime="20201112 10:13:51.876"></status>
</kw>
<msg timestamp="20201112 10:13:51.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.856" endtime="20201112 10:13:51.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:51.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:51.878" endtime="20201112 10:13:51.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.880" endtime="20201112 10:13:51.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.853" endtime="20201112 10:13:51.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.851" endtime="20201112 10:13:51.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:51.890" endtime="20201112 10:13:52.176"></status>
</kw>
<msg timestamp="20201112 10:13:52.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020016458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:51.889" endtime="20201112 10:13:52.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020016458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.180" endtime="20201112 10:13:52.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.188" endtime="20201112 10:13:52.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.886" endtime="20201112 10:13:52.191"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.885" endtime="20201112 10:13:52.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.196" level="INFO">${RESULT} = [{'time': 0.020016458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.980499999999958e-05, 'source_diff': 5.980499999999958e-05}, {'time': 0.020085097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:52.192" endtime="20201112 10:13:52.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:52.210" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:52.197" endtime="20201112 10:13:52.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.215" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 10:13:52.214" endtime="20201112 10:13:52.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.217" level="INFO">VALUE: [5.980499999999958e-05, 5.5013999999999064e-05, 5.5763999999999814e-05, 5.534700000000073e-05, 5.50549999999983e-05, 5.516699999999833e-05, 5.5527999999999134e-05, 5.540299999999901e-05, 5.495900000000026e-05, 5.5499999999999994e-05, 5.505599999999777e-05, 5.520900000000051e-05, 5.5263999999999314e-05, 5.559700000000098e-05, 5.68749999999979e-05, 5.4972000000000354e-05, 5.5277999999998884e-05, 5.562499999999665e-05, 5.5722000000001104e-05, 5.579099999999948e-05, 5.5680000000002394e-05, 5.681899999999962e-05, 5.5513999999999564e-05, 5.5013999999999064e-05, 5.512499999999962e-05, 5.508300000000091e-05, 5.5027999999998634e-05, 5.51670000000018e-05, 5.561100000000055e-05, 5.5527999999999134e-05, 5.6819999999999093e-05, 5.519500000000094e-05, 5.508400000000038e-05, 5.544500000000119e-05, 5.565299999999926e-05, 5.683299999999919e-05, 5.5707999999998065e-05, 5.508300000000091e-05, 5.5457999999997815e-05, 5.683300000000266e-05, 5.4972000000000354e-05, 5.562500000000012e-05, 5.5721999999997635e-05, 5.681899999999962e-05, 5.687500000000137e-05, 5.5193999999997995e-05, 5.51809999999979e-05, 5.513899999999919e-05, 5.55280000000026e-05, 5.5707999999998065e-05]</msg>
<status status="PASS" starttime="20201112 10:13:52.216" endtime="20201112 10:13:52.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.211" endtime="20201112 10:13:52.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.221" endtime="20201112 10:13:52.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:52.224" endtime="20201112 10:13:52.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.223" endtime="20201112 10:13:52.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.219" endtime="20201112 10:13:52.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.850" endtime="20201112 10:13:52.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:51.849" endtime="20201112 10:13:52.245"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.254" endtime="20201112 10:13:52.272"></status>
</kw>
<msg timestamp="20201112 10:13:52.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.252" endtime="20201112 10:13:52.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.273" endtime="20201112 10:13:52.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.276" endtime="20201112 10:13:52.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.250" endtime="20201112 10:13:52.279"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.247" endtime="20201112 10:13:52.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.285" endtime="20201112 10:13:52.572"></status>
</kw>
<msg timestamp="20201112 10:13:52.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019565431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019625778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.284" endtime="20201112 10:13:52.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019565431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019625778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:52.576" endtime="20201112 10:13:52.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.584" endtime="20201112 10:13:52.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.281" endtime="20201112 10:13:52.586"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.280" endtime="20201112 10:13:52.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.591" level="INFO">${RESULT} = [{'time': 0.019625778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.034699999999879e-05, 'source_diff': 6.034699999999879e-05}, {'time': 0.019697403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:52.587" endtime="20201112 10:13:52.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:52.604" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:52.592" endtime="20201112 10:13:52.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.609" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 10:13:52.608" endtime="20201112 10:13:52.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.611" level="INFO">VALUE: [6.034699999999879e-05, 5.788899999999847e-05, 5.657000000000231e-05, 5.6402000000000535e-05, 5.651300000000109e-05, 5.659699999999851e-05, 5.6277999999999884e-05, 5.6707999999999065e-05, 5.6693999999999495e-05, 5.6763999999997344e-05, 5.6764000000000814e-05, 5.638900000000044e-05, 5.6443999999999245e-05, 5.638899999999697e-05, 5.615300000000323e-05, 5.661099999999808e-05, 5.606999999999834e-05, 5.608399999999791e-05, 5.615299999999976e-05, 5.7833999999999663e-05, 5.663900000000069e-05, 5.6819999999999093e-05, 5.6528000000000134e-05, 5.623700000000065e-05, 5.788899999999847e-05, 5.5958000000001784e-05, 5.613900000000019e-05, 5.6264000000000314e-05, 5.6319999999998593e-05, 5.6486000000001424e-05, 5.6721999999998635e-05, 5.6000000000000494e-05, 5.6221999999998135e-05, 5.6027999999999634e-05, 5.6027999999999634e-05, 5.6749999999997774e-05, 5.5972000000001354e-05, 5.6235999999997704e-05, 5.615299999999976e-05, 5.608400000000138e-05, 5.6763999999997344e-05, 5.666699999999983e-05, 5.619499999999847e-05, 5.680500000000005e-05, 5.611100000000105e-05, 5.7887999999998996e-05, 5.5944000000002214e-05, 5.5943999999998745e-05, 5.6791999999999954e-05, 5.60549999999993e-05]</msg>
<status status="PASS" starttime="20201112 10:13:52.610" endtime="20201112 10:13:52.612"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.605" endtime="20201112 10:13:52.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.615" endtime="20201112 10:13:52.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:52.618" endtime="20201112 10:13:52.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.617" endtime="20201112 10:13:52.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.613" endtime="20201112 10:13:52.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.246" endtime="20201112 10:13:52.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.245" endtime="20201112 10:13:52.639"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.648" endtime="20201112 10:13:52.666"></status>
</kw>
<msg timestamp="20201112 10:13:52.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.646" endtime="20201112 10:13:52.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:52.667" endtime="20201112 10:13:52.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.670" endtime="20201112 10:13:52.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.644" endtime="20201112 10:13:52.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.641" endtime="20201112 10:13:52.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.680" endtime="20201112 10:13:52.965"></status>
</kw>
<msg timestamp="20201112 10:13:52.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01961175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019673292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:52.678" endtime="20201112 10:13:52.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:52.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01961175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019673292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:13:52.969" endtime="20201112 10:13:52.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:52.977" endtime="20201112 10:13:52.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.676" endtime="20201112 10:13:52.979"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.674" endtime="20201112 10:13:52.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:52.984" level="INFO">${RESULT} = [{'time': 0.019673292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.154199999999777e-05, 'source_diff': 6.154199999999777e-05}, {'time': 0.019744917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:52.980" endtime="20201112 10:13:52.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:52.997" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:52.985" endtime="20201112 10:13:52.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.002" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 10:13:53.001" endtime="20201112 10:13:53.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.004" level="INFO">VALUE: [6.154199999999777e-05, 5.770899999999954e-05, 5.715300000000076e-05, 5.7416000000001105e-05, 5.756900000000037e-05, 5.70550000000003e-05, 5.712499999999815e-05, 5.7763999999998344e-05, 5.7416000000001105e-05, 5.6999999999998024e-05, 5.6958000000002784e-05, 5.7249999999998274e-05, 5.6986000000001924e-05, 5.7014000000001064e-05, 5.756900000000037e-05, 5.763900000000169e-05, 5.7763999999998344e-05, 5.7013999999997594e-05, 5.744499999999972e-05, 5.712499999999815e-05, 5.7055999999999774e-05, 5.690300000000051e-05, 5.7708000000000065e-05, 5.736200000000177e-05, 5.6957999999999315e-05, 5.6930000000000175e-05, 5.73749999999984e-05, 5.73749999999984e-05, 5.884700000000076e-05, 5.7749999999998775e-05, 5.888899999999947e-05, 5.7249999999998274e-05, 5.7778000000001384e-05, 5.883300000000119e-05, 5.756900000000037e-05, 5.8833999999997194e-05, 5.7069999999999343e-05, 5.719499999999947e-05, 5.7778000000001384e-05, 5.7791999999997484e-05, 5.752700000000166e-05, 5.777700000000191e-05, 5.752700000000166e-05, 5.88749999999999e-05, 5.716700000000033e-05, 5.706899999999987e-05, 5.7749999999998775e-05, 5.7013999999997594e-05, 5.881900000000162e-05, 5.7429999999997206e-05]</msg>
<status status="PASS" starttime="20201112 10:13:53.003" endtime="20201112 10:13:53.005"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.998" endtime="20201112 10:13:53.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.008" endtime="20201112 10:13:53.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.011" endtime="20201112 10:13:53.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.010" endtime="20201112 10:13:53.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.006" endtime="20201112 10:13:53.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.640" endtime="20201112 10:13:53.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:52.639" endtime="20201112 10:13:53.032"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.041" endtime="20201112 10:13:53.060"></status>
</kw>
<msg timestamp="20201112 10:13:53.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.039" endtime="20201112 10:13:53.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.061" endtime="20201112 10:13:53.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.064" endtime="20201112 10:13:53.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.037" endtime="20201112 10:13:53.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.035" endtime="20201112 10:13:53.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.074" endtime="20201112 10:13:53.360"></status>
</kw>
<msg timestamp="20201112 10:13:53.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.072" endtime="20201112 10:13:53.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019652347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.364" endtime="20201112 10:13:53.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.372" endtime="20201112 10:13:53.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.070" endtime="20201112 10:13:53.374"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.068" endtime="20201112 10:13:53.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:53.379" level="INFO">${RESULT} = [{'time': 0.019715292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.294499999999828e-05, 'source_diff': 6.294499999999828e-05}, {'time': 0.019783972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:53.375" endtime="20201112 10:13:53.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:53.392" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:53.380" endtime="20201112 10:13:53.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.396" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 10:13:53.395" endtime="20201112 10:13:53.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.399" level="INFO">VALUE: [6.294499999999828e-05, 5.80550000000013e-05, 5.829099999999851e-05, 5.8387999999999496e-05, 5.858300000000094e-05, 5.806900000000087e-05, 5.863900000000269e-05, 5.838899999999897e-05, 5.990300000000004e-05, 5.8694000000001495e-05, 5.8457999999997345e-05, 5.986100000000133e-05, 5.836099999999983e-05, 5.8499999999999525e-05, 5.8472000000000385e-05, 5.98750000000009e-05, 5.8499999999999525e-05, 5.8263999999998844e-05, 5.870900000000054e-05, 5.8500000000002994e-05, 5.815300000000176e-05, 5.8792000000001954e-05, 5.988900000000047e-05, 5.988900000000047e-05, 5.829099999999851e-05, 5.880500000000205e-05, 5.85689999999979e-05, 5.8458000000000815e-05, 5.8416000000002105e-05, 5.8513999999999095e-05, 5.988900000000047e-05, 5.865299999999879e-05, 5.830500000000155e-05, 5.858300000000094e-05, 5.990300000000004e-05, 5.8499999999999525e-05, 5.823699999999918e-05, 5.822299999999961e-05, 5.823699999999918e-05, 5.8056000000000774e-05, 5.838899999999897e-05, 5.844500000000072e-05, 5.8193999999997525e-05, 5.876299999999987e-05, 5.854099999999876e-05, 5.8694000000001495e-05, 5.859700000000051e-05, 5.8444000000001245e-05, 5.8763999999999345e-05, 5.8235999999999705e-05]</msg>
<status status="PASS" starttime="20201112 10:13:53.398" endtime="20201112 10:13:53.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.393" endtime="20201112 10:13:53.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.403" endtime="20201112 10:13:53.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.406" endtime="20201112 10:13:53.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.404" endtime="20201112 10:13:53.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.401" endtime="20201112 10:13:53.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.033" endtime="20201112 10:13:53.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.032" endtime="20201112 10:13:53.427"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.435" endtime="20201112 10:13:53.454"></status>
</kw>
<msg timestamp="20201112 10:13:53.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.434" endtime="20201112 10:13:53.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.455" endtime="20201112 10:13:53.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.458" endtime="20201112 10:13:53.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.431" endtime="20201112 10:13:53.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.429" endtime="20201112 10:13:53.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.468" endtime="20201112 10:13:53.753"></status>
</kw>
<msg timestamp="20201112 10:13:53.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.466" endtime="20201112 10:13:53.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019877528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.757" endtime="20201112 10:13:53.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.765" endtime="20201112 10:13:53.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.464" endtime="20201112 10:13:53.767"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.462" endtime="20201112 10:13:53.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:53.772" level="INFO">${RESULT} = [{'time': 0.019942792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.526400000000238e-05, 'source_diff': 6.526400000000238e-05}, {'time': 0.020014444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:53.769" endtime="20201112 10:13:53.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:53.786" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:53.773" endtime="20201112 10:13:53.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.791" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 10:13:53.790" endtime="20201112 10:13:53.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.793" level="INFO">VALUE: [6.526400000000238e-05, 5.901300000000012e-05, 5.911099999999711e-05, 5.931899999999865e-05, 5.976300000000087e-05, 6.081900000000015e-05, 5.9263999999999845e-05, 5.9250000000000275e-05, 5.9235999999997235e-05, 5.933300000000169e-05, 5.955499999999933e-05, 5.9514000000000095e-05, 5.9292000000002454e-05, 6.083299999999972e-05, 5.93750000000004e-05, 5.9736000000001205e-05, 5.9250000000000275e-05, 6.0834000000002664e-05, 5.96949999999985e-05, 5.9013999999999595e-05, 5.9555999999998804e-05, 5.9652000000000316e-05, 5.902699999999969e-05, 5.954099999999976e-05, 5.918099999999843e-05, 5.9764000000000345e-05, 5.963900000000022e-05, 5.909700000000101e-05, 5.915299999999929e-05, 5.930500000000255e-05, 5.9500000000000525e-05, 6.081900000000015e-05, 5.908299999999797e-05, 5.938899999999997e-05, 5.9764000000000345e-05, 5.9028000000002634e-05, 5.9250000000000275e-05, 5.9319999999998124e-05, 5.9250000000000275e-05, 5.904099999999926e-05, 5.944499999999825e-05, 5.958300000000194e-05, 5.912500000000015e-05, 5.9500000000000525e-05, 5.965300000000326e-05, 5.9250000000000275e-05, 5.965299999999979e-05, 5.963900000000022e-05, 5.9500000000000525e-05, 5.9028000000002634e-05]</msg>
<status status="PASS" starttime="20201112 10:13:53.792" endtime="20201112 10:13:53.794"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.787" endtime="20201112 10:13:53.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.797" endtime="20201112 10:13:53.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:53.800" endtime="20201112 10:13:53.819"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.799" endtime="20201112 10:13:53.820"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.795" endtime="20201112 10:13:53.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.428" endtime="20201112 10:13:53.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.427" endtime="20201112 10:13:53.821"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.829" endtime="20201112 10:13:53.849"></status>
</kw>
<msg timestamp="20201112 10:13:53.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.828" endtime="20201112 10:13:53.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:53.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:53.850" endtime="20201112 10:13:53.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.853" endtime="20201112 10:13:53.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.825" endtime="20201112 10:13:53.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.823" endtime="20201112 10:13:53.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:53.863" endtime="20201112 10:13:54.148"></status>
</kw>
<msg timestamp="20201112 10:13:54.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:53.861" endtime="20201112 10:13:54.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019616417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.152" endtime="20201112 10:13:54.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.160" endtime="20201112 10:13:54.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.859" endtime="20201112 10:13:54.163"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.857" endtime="20201112 10:13:54.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.167" level="INFO">${RESULT} = [{'time': 0.019682681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.62639999999999e-05, 'source_diff': 6.62639999999999e-05}, {'time': 0.019756319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:54.164" endtime="20201112 10:13:54.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:54.181" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:54.168" endtime="20201112 10:13:54.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.185" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 10:13:54.184" endtime="20201112 10:13:54.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.187" level="INFO">VALUE: [6.62639999999999e-05, 6.0708000000003065e-05, 6.0443999999999776e-05, 5.9944000000002745e-05, 6.038900000000097e-05, 6.020899999999857e-05, 6.0430000000000206e-05, 6.183300000000072e-05, 6.0750000000001775e-05, 6.187499999999943e-05, 5.9943999999999276e-05, 6.0513999999997625e-05, 6.013899999999725e-05, 5.995899999999832e-05, 6.038900000000097e-05, 6.0806000000000054e-05, 6.0305999999999554e-05, 6.040300000000054e-05, 6.0500000000001525e-05, 6.0471999999998916e-05, 6.0236000000001705e-05, 6.181900000000115e-05, 5.9972000000001885e-05, 6.0735999999998735e-05, 6.037499999999793e-05, 6.004100000000026e-05, 6.034699999999879e-05, 6.0680000000000456e-05, 6.0263999999997375e-05, 5.994499999999875e-05, 6.0319999999999124e-05, 6.0250000000001275e-05, 6.0055999999999304e-05, 6.18340000000002e-05, 6.0333999999998694e-05, 6.0584000000002414e-05, 6.037499999999793e-05, 6.031899999999965e-05, 6.0471999999998916e-05, 6.015300000000029e-05, 6.0457999999999346e-05, 6.013900000000072e-05, 6.0778000000000915e-05, 6.040300000000054e-05, 6.0291999999999984e-05, 6.0792000000000485e-05, 6.0457999999999346e-05, 6.0499999999998055e-05, 6.190300000000204e-05, 6.182000000000062e-05]</msg>
<status status="PASS" starttime="20201112 10:13:54.186" endtime="20201112 10:13:54.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.182" endtime="20201112 10:13:54.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.191" endtime="20201112 10:13:54.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.194" endtime="20201112 10:13:54.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.193" endtime="20201112 10:13:54.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.189" endtime="20201112 10:13:54.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.822" endtime="20201112 10:13:54.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:53.821" endtime="20201112 10:13:54.216"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.225" endtime="20201112 10:13:54.244"></status>
</kw>
<msg timestamp="20201112 10:13:54.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.224" endtime="20201112 10:13:54.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.246" endtime="20201112 10:13:54.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.248" endtime="20201112 10:13:54.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.221" endtime="20201112 10:13:54.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.219" endtime="20201112 10:13:54.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.258" endtime="20201112 10:13:54.544"></status>
</kw>
<msg timestamp="20201112 10:13:54.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021543, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:54.257" endtime="20201112 10:13:54.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021543, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:13:54.549" endtime="20201112 10:13:54.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.557" endtime="20201112 10:13:54.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.254" endtime="20201112 10:13:54.559"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.252" endtime="20201112 10:13:54.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:54.564" level="INFO">${RESULT} = [{'time': 0.021543, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.536099999999989e-05, 'source_diff': 6.536099999999989e-05}, {'time': 0.021616639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:13:54.560" endtime="20201112 10:13:54.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:54.577" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:54.565" endtime="20201112 10:13:54.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.582" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 10:13:54.581" endtime="20201112 10:13:54.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.584" level="INFO">VALUE: [6.536099999999989e-05, 6.127800000000141e-05, 6.113900000000172e-05, 6.106999999999987e-05, 6.159799999999951e-05, 6.144500000000025e-05, 6.280599999999859e-05, 6.105599999999684e-05, 6.287500000000043e-05, 6.281899999999868e-05, 6.151300000000262e-05, 6.112499999999868e-05, 6.281899999999868e-05, 6.152800000000166e-05, 6.287499999999696e-05, 6.1000000000002025e-05, 6.105500000000083e-05, 6.136099999999936e-05, 6.105500000000083e-05, 6.166600000000189e-05, 6.162499999999918e-05, 6.163900000000222e-05, 6.112499999999868e-05, 6.140300000000154e-05, 6.133300000000022e-05, 6.172200000000017e-05, 6.286100000000086e-05, 6.13880000000025e-05, 6.281900000000215e-05, 6.126399999999838e-05, 6.115300000000129e-05, 6.283299999999825e-05, 6.1013999999998125e-05, 6.162499999999918e-05, 6.290299999999957e-05, 6.113899999999825e-05, 6.108299999999997e-05, 6.170900000000007e-05, 6.163899999999875e-05, 6.280599999999859e-05, 6.10560000000003e-05, 6.163899999999875e-05, 6.097299999999889e-05, 6.172200000000017e-05, 6.2889e-05, 6.17080000000006e-05, 6.287499999999696e-05, 6.10690000000004e-05, 6.112499999999868e-05, 6.13889999999985e-05]</msg>
<status status="PASS" starttime="20201112 10:13:54.583" endtime="20201112 10:13:54.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.578" endtime="20201112 10:13:54.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.647" endtime="20201112 10:13:54.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:54.651" endtime="20201112 10:13:54.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.649" endtime="20201112 10:13:54.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.645" endtime="20201112 10:13:54.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.217" endtime="20201112 10:13:54.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.216" endtime="20201112 10:13:54.671"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.680" endtime="20201112 10:13:54.699"></status>
</kw>
<msg timestamp="20201112 10:13:54.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.678" endtime="20201112 10:13:54.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:54.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:54.701" endtime="20201112 10:13:54.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.703" endtime="20201112 10:13:54.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.676" endtime="20201112 10:13:54.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.674" endtime="20201112 10:13:54.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:54.714" endtime="20201112 10:13:55.016"></status>
</kw>
<msg timestamp="20201112 10:13:55.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:54.712" endtime="20201112 10:13:55.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.022" endtime="20201112 10:13:55.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.031" endtime="20201112 10:13:55.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.709" endtime="20201112 10:13:55.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.708" endtime="20201112 10:13:55.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.037" level="INFO">${RESULT} = [{'time': 0.019794694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.702700000000075e-05, 'source_diff': 6.702700000000075e-05}, {'time': 0.019871347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:55.034" endtime="20201112 10:13:55.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:55.051" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:55.038" endtime="20201112 10:13:55.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.055" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 10:13:55.054" endtime="20201112 10:13:55.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.057" level="INFO">VALUE: [6.702700000000075e-05, 6.266599999999942e-05, 6.27500000000003e-05, 6.192999999999824e-05, 6.383299999999925e-05, 6.215300000000229e-05, 6.199999999999956e-05, 6.199999999999956e-05, 6.209700000000054e-05, 6.257000000000137e-05, 6.198599999999999e-05, 6.242999999999874e-05, 6.208400000000044e-05, 6.280600000000205e-05, 6.265299999999932e-05, 6.22499999999998e-05, 6.263899999999975e-05, 6.248600000000049e-05, 6.388799999999806e-05, 6.262500000000018e-05, 6.198599999999999e-05, 6.230500000000208e-05, 6.245800000000135e-05, 6.241699999999864e-05, 6.381899999999968e-05, 6.22219999999972e-05, 6.240299999999907e-05, 6.268100000000193e-05, 6.3889000000001e-05, 6.381999999999916e-05, 6.208400000000044e-05, 6.25279999999992e-05, 6.2195000000001e-05, 6.216599999999892e-05, 6.244400000000178e-05, 6.202800000000216e-05, 6.247199999999745e-05, 6.387500000000143e-05, 6.388899999999753e-05, 6.240299999999907e-05, 6.22219999999972e-05, 6.258300000000147e-05, 6.386099999999839e-05, 6.390300000000057e-05, 6.276399999999988e-05, 6.230600000000155e-05, 6.276399999999988e-05, 6.272200000000117e-05, 6.219400000000153e-05, 6.23340000000007e-05]</msg>
<status status="PASS" starttime="20201112 10:13:55.056" endtime="20201112 10:13:55.058"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.052" endtime="20201112 10:13:55.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.061" endtime="20201112 10:13:55.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.065" endtime="20201112 10:13:55.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.063" endtime="20201112 10:13:55.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.059" endtime="20201112 10:13:55.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.672" endtime="20201112 10:13:55.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:54.672" endtime="20201112 10:13:55.085"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.094" endtime="20201112 10:13:55.114"></status>
</kw>
<msg timestamp="20201112 10:13:55.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.093" endtime="20201112 10:13:55.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.115" endtime="20201112 10:13:55.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.117" endtime="20201112 10:13:55.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.090" endtime="20201112 10:13:55.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.088" endtime="20201112 10:13:55.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.127" endtime="20201112 10:13:55.414"></status>
</kw>
<msg timestamp="20201112 10:13:55.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.126" endtime="20201112 10:13:55.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.418" endtime="20201112 10:13:55.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.426" endtime="20201112 10:13:55.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.123" endtime="20201112 10:13:55.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.122" endtime="20201112 10:13:55.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.433" level="INFO">${RESULT} = [{'time': 0.019714389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.829199999999758e-05, 'source_diff': 6.829199999999758e-05}, {'time': 0.019791014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:55.429" endtime="20201112 10:13:55.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:55.447" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:55.434" endtime="20201112 10:13:55.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.452" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 10:13:55.451" endtime="20201112 10:13:55.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.454" level="INFO">VALUE: [6.829199999999758e-05, 6.355599999999934e-05, 6.35699999999989e-05, 6.365300000000032e-05, 6.313900000000025e-05, 6.358400000000194e-05, 6.3195000000002e-05, 6.486099999999939e-05, 6.35699999999989e-05, 6.333299999999875e-05, 6.34439999999993e-05, 6.331899999999918e-05, 6.297199999999795e-05, 6.29439999999988e-05, 6.381899999999968e-05, 6.301399999999666e-05, 6.381899999999968e-05, 6.376400000000088e-05, 6.487499999999896e-05, 6.351400000000063e-05, 6.312500000000068e-05, 6.493099999999724e-05, 6.340300000000007e-05, 6.334800000000126e-05, 6.372299999999817e-05, 6.295899999999785e-05, 6.336199999999736e-05, 6.362499999999771e-05, 6.366600000000042e-05, 6.315200000000035e-05, 6.363900000000075e-05, 6.326400000000038e-05, 6.305499999999936e-05, 6.481900000000068e-05, 6.295799999999838e-05, 6.345899999999835e-05, 6.377800000000045e-05, 6.370900000000207e-05, 6.30560000000023e-05, 6.35280000000002e-05, 6.30699999999984e-05, 6.294500000000175e-05, 6.316699999999939e-05, 6.355499999999986e-05, 6.294400000000228e-05, 6.308300000000197e-05, 6.333299999999875e-05, 6.483300000000025e-05, 6.30690000000024e-05, 6.483300000000025e-05]</msg>
<status status="PASS" starttime="20201112 10:13:55.453" endtime="20201112 10:13:55.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.448" endtime="20201112 10:13:55.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.458" endtime="20201112 10:13:55.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.461" endtime="20201112 10:13:55.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.460" endtime="20201112 10:13:55.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.456" endtime="20201112 10:13:55.481"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.086" endtime="20201112 10:13:55.482"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.086" endtime="20201112 10:13:55.482"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.490" endtime="20201112 10:13:55.509"></status>
</kw>
<msg timestamp="20201112 10:13:55.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.489" endtime="20201112 10:13:55.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.510" endtime="20201112 10:13:55.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.513" endtime="20201112 10:13:55.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.486" endtime="20201112 10:13:55.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.484" endtime="20201112 10:13:55.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.523" endtime="20201112 10:13:55.809"></status>
</kw>
<msg timestamp="20201112 10:13:55.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019563056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019631875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.522" endtime="20201112 10:13:55.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019563056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019631875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.813" endtime="20201112 10:13:55.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.821" endtime="20201112 10:13:55.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.519" endtime="20201112 10:13:55.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.517" endtime="20201112 10:13:55.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:55.828" level="INFO">${RESULT} = [{'time': 0.019631875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.881900000000121e-05, 'source_diff': 6.881900000000121e-05}, {'time': 0.019707583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:55.824" endtime="20201112 10:13:55.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:55.841" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:55.829" endtime="20201112 10:13:55.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.846" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 10:13:55.845" endtime="20201112 10:13:55.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.848" level="INFO">VALUE: [6.881900000000121e-05, 6.433299999999975e-05, 6.469500000000003e-05, 6.440300000000107e-05, 6.451399999999816e-05, 6.595800000000138e-05, 6.59029999999991e-05, 6.465199999999838e-05, 6.58480000000003e-05, 6.45280000000012e-05, 6.438800000000203e-05, 6.47639999999984e-05, 6.420799999999963e-05, 6.409700000000254e-05, 6.398599999999852e-05, 6.450000000000206e-05, 6.59029999999991e-05, 6.466700000000089e-05, 6.482000000000016e-05, 6.582000000000116e-05, 6.59029999999991e-05, 6.588899999999953e-05, 6.458399999999948e-05, 6.458400000000294e-05, 6.431999999999966e-05, 6.461200000000208e-05, 6.4276999999998e-05, 6.480499999999764e-05, 6.469400000000056e-05, 6.451399999999816e-05, 6.479200000000102e-05, 6.47639999999984e-05, 6.420799999999963e-05, 6.462500000000218e-05, 6.398600000000199e-05, 6.583300000000125e-05, 6.45280000000012e-05, 6.397299999999842e-05, 6.468099999999699e-05, 6.468100000000046e-05, 6.479100000000154e-05, 6.468100000000046e-05, 6.595800000000138e-05, 6.42219999999992e-05, 6.395799999999938e-05, 6.436099999999889e-05, 6.394400000000328e-05, 6.583299999999778e-05, 6.429199999999705e-05, 6.469400000000056e-05]</msg>
<status status="PASS" starttime="20201112 10:13:55.847" endtime="20201112 10:13:55.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.842" endtime="20201112 10:13:55.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.852" endtime="20201112 10:13:55.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:55.855" endtime="20201112 10:13:55.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.854" endtime="20201112 10:13:55.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.850" endtime="20201112 10:13:55.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.483" endtime="20201112 10:13:55.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.482" endtime="20201112 10:13:55.876"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.884" endtime="20201112 10:13:55.904"></status>
</kw>
<msg timestamp="20201112 10:13:55.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.883" endtime="20201112 10:13:55.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:55.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:55.906" endtime="20201112 10:13:55.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.908" endtime="20201112 10:13:55.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.880" endtime="20201112 10:13:55.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.878" endtime="20201112 10:13:55.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:55.918" endtime="20201112 10:13:56.204"></status>
</kw>
<msg timestamp="20201112 10:13:56.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:55.917" endtime="20201112 10:13:56.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.208" endtime="20201112 10:13:56.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.216" endtime="20201112 10:13:56.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.914" endtime="20201112 10:13:56.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.912" endtime="20201112 10:13:56.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.223" level="INFO">${RESULT} = [{'time': 0.019702278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.948600000000055e-05, 'source_diff': 6.948600000000055e-05}, {'time': 0.019778986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:56.219" endtime="20201112 10:13:56.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:56.236" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:56.224" endtime="20201112 10:13:56.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.241" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 10:13:56.240" endtime="20201112 10:13:56.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.243" level="INFO">VALUE: [6.948600000000055e-05, 6.584699999999735e-05, 6.518100000000096e-05, 6.495899999999985e-05, 6.55700000000009e-05, 6.516600000000192e-05, 6.540199999999913e-05, 6.574999999999984e-05, 6.687500000000096e-05, 6.547200000000045e-05, 6.69030000000001e-05, 6.495800000000038e-05, 6.506900000000093e-05, 6.532000000000066e-05, 6.577799999999898e-05, 6.498600000000299e-05, 6.577799999999898e-05, 6.555600000000134e-05, 6.50700000000004e-05, 6.519499999999706e-05, 6.544500000000078e-05, 6.524999999999934e-05, 6.54029999999986e-05, 6.54440000000013e-05, 6.57639999999994e-05, 6.543099999999774e-05, 6.515300000000182e-05, 6.556899999999796e-05, 6.577800000000245e-05, 6.683300000000225e-05, 6.520800000000063e-05, 6.561100000000014e-05, 6.513899999999878e-05, 6.512499999999921e-05, 6.690200000000063e-05, 6.537499999999946e-05, 6.555600000000134e-05, 6.683399999999826e-05, 6.50830000000005e-05, 6.533300000000075e-05, 6.50830000000005e-05, 6.505600000000084e-05, 6.520800000000063e-05, 6.504099999999832e-05, 6.577799999999898e-05, 6.537499999999946e-05, 6.537499999999946e-05, 6.519399999999759e-05, 6.545800000000088e-05, 6.551399999999916e-05]</msg>
<status status="PASS" starttime="20201112 10:13:56.242" endtime="20201112 10:13:56.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.237" endtime="20201112 10:13:56.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.247" endtime="20201112 10:13:56.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.251" endtime="20201112 10:13:56.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.249" endtime="20201112 10:13:56.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.245" endtime="20201112 10:13:56.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.877" endtime="20201112 10:13:56.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:55.876" endtime="20201112 10:13:56.272"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.280" endtime="20201112 10:13:56.300"></status>
</kw>
<msg timestamp="20201112 10:13:56.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.279" endtime="20201112 10:13:56.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.301" endtime="20201112 10:13:56.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.303" endtime="20201112 10:13:56.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.276" endtime="20201112 10:13:56.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.274" endtime="20201112 10:13:56.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.313" endtime="20201112 10:13:56.599"></status>
</kw>
<msg timestamp="20201112 10:13:56.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.312" endtime="20201112 10:13:56.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019776264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:56.603" endtime="20201112 10:13:56.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.611" endtime="20201112 10:13:56.613"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.309" endtime="20201112 10:13:56.614"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.308" endtime="20201112 10:13:56.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:56.618" level="INFO">${RESULT} = [{'time': 0.019776264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.045800000000241e-05, 'source_diff': 7.045800000000241e-05}, {'time': 0.019852917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:56.615" endtime="20201112 10:13:56.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:56.631" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:56.619" endtime="20201112 10:13:56.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.636" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 10:13:56.635" endtime="20201112 10:13:56.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.638" level="INFO">VALUE: [7.045800000000241e-05, 6.609800000000055e-05, 6.619500000000153e-05, 6.787499999999849e-05, 6.62639999999999e-05, 6.658400000000148e-05, 6.619500000000153e-05, 6.634700000000132e-05, 6.601399999999966e-05, 6.60830000000015e-05, 6.675000000000084e-05, 6.65969999999981e-05, 6.613899999999978e-05, 6.651400000000016e-05, 6.602799999999923e-05, 6.613899999999978e-05, 6.633299999999828e-05, 6.609700000000107e-05, 6.612500000000021e-05, 6.669499999999856e-05, 6.633400000000123e-05, 6.629200000000252e-05, 6.593100000000171e-05, 6.665299999999985e-05, 6.598699999999999e-05, 6.60969999999976e-05, 6.612500000000021e-05, 6.647200000000145e-05, 6.650000000000059e-05, 6.600000000000009e-05, 6.602799999999923e-05, 6.65969999999981e-05, 6.620799999999816e-05, 6.6583000000002e-05, 6.680599999999912e-05, 6.682000000000216e-05, 6.666699999999942e-05, 6.632000000000166e-05, 6.651400000000016e-05, 6.676399999999694e-05, 6.601400000000313e-05, 6.64029999999996e-05, 6.672199999999823e-05, 6.675000000000084e-05, 6.638900000000003e-05, 6.605499999999889e-05, 6.679199999999955e-05, 6.673600000000127e-05, 6.680500000000311e-05, 6.620800000000163e-05]</msg>
<status status="PASS" starttime="20201112 10:13:56.637" endtime="20201112 10:13:56.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.632" endtime="20201112 10:13:56.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.642" endtime="20201112 10:13:56.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:56.645" endtime="20201112 10:13:56.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.644" endtime="20201112 10:13:56.665"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.640" endtime="20201112 10:13:56.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.273" endtime="20201112 10:13:56.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.272" endtime="20201112 10:13:56.666"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.675" endtime="20201112 10:13:56.694"></status>
</kw>
<msg timestamp="20201112 10:13:56.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.673" endtime="20201112 10:13:56.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:56.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:56.695" endtime="20201112 10:13:56.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.697" endtime="20201112 10:13:56.700"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.671" endtime="20201112 10:13:56.701"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.669" endtime="20201112 10:13:56.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:56.707" endtime="20201112 10:13:56.993"></status>
</kw>
<msg timestamp="20201112 10:13:56.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:56.706" endtime="20201112 10:13:56.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:13:56.997" endtime="20201112 10:13:57.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.005" endtime="20201112 10:13:57.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.703" endtime="20201112 10:13:57.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.702" endtime="20201112 10:13:57.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.012" level="INFO">${RESULT} = [{'time': 0.019919083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.158300000000006e-05, 'source_diff': 7.158300000000006e-05}, {'time': 0.019996736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:57.009" endtime="20201112 10:13:57.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:57.026" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:57.013" endtime="20201112 10:13:57.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.031" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 10:13:57.030" endtime="20201112 10:13:57.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.033" level="INFO">VALUE: [7.158300000000006e-05, 6.702800000000023e-05, 6.705500000000336e-05, 6.756899999999996e-05, 6.727799999999701e-05, 6.701399999999719e-05, 6.718099999999949e-05, 6.731999999999919e-05, 6.706999999999894e-05, 6.711099999999817e-05, 6.768099999999999e-05, 6.697199999999848e-05, 6.750000000000159e-05, 6.734700000000232e-05, 6.752800000000073e-05, 6.734699999999885e-05, 6.734699999999885e-05, 6.74030000000006e-05, 6.706899999999946e-05, 6.769400000000009e-05, 6.755500000000039e-05, 6.763900000000128e-05, 6.733299999999928e-05, 6.70419999999998e-05, 6.702800000000023e-05, 6.72090000000021e-05, 6.747300000000192e-05, 6.695899999999838e-05, 6.752800000000073e-05, 6.738900000000103e-05, 6.751299999999821e-05, 6.744399999999984e-05, 6.734699999999885e-05, 6.725000000000134e-05, 6.884699999999688e-05, 6.701400000000066e-05, 6.890299999999863e-05, 6.762499999999824e-05, 6.74030000000006e-05, 6.70419999999998e-05, 6.702800000000023e-05, 6.701400000000066e-05, 6.705599999999937e-05, 6.705599999999937e-05, 6.702800000000023e-05, 6.761099999999867e-05, 6.890199999999916e-05, 6.88619999999994e-05, 6.77640000000014e-05, 6.751300000000168e-05]</msg>
<status status="PASS" starttime="20201112 10:13:57.032" endtime="20201112 10:13:57.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.027" endtime="20201112 10:13:57.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.037" endtime="20201112 10:13:57.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.041" endtime="20201112 10:13:57.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.039" endtime="20201112 10:13:57.060"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.035" endtime="20201112 10:13:57.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.667" endtime="20201112 10:13:57.061"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:56.667" endtime="20201112 10:13:57.061"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.070" endtime="20201112 10:13:57.089"></status>
</kw>
<msg timestamp="20201112 10:13:57.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.068" endtime="20201112 10:13:57.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.090" endtime="20201112 10:13:57.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.093" endtime="20201112 10:13:57.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.066" endtime="20201112 10:13:57.096"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.064" endtime="20201112 10:13:57.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.103" endtime="20201112 10:13:57.388"></status>
</kw>
<msg timestamp="20201112 10:13:57.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.101" endtime="20201112 10:13:57.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.392" endtime="20201112 10:13:57.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.401" endtime="20201112 10:13:57.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.099" endtime="20201112 10:13:57.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.097" endtime="20201112 10:13:57.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.407" level="INFO">${RESULT} = [{'time': 0.019859333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.288899999999959e-05, 'source_diff': 7.288899999999959e-05}, {'time': 0.019937931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:57.404" endtime="20201112 10:13:57.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:57.421" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:57.408" endtime="20201112 10:13:57.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.425" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 10:13:57.424" endtime="20201112 10:13:57.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.428" level="INFO">VALUE: [7.288899999999959e-05, 6.824999999999887e-05, 6.801400000000166e-05, 6.813899999999831e-05, 6.856900000000096e-05, 6.790200000000163e-05, 6.837499999999899e-05, 6.795799999999991e-05, 6.844400000000084e-05, 6.813899999999831e-05, 6.812499999999874e-05, 6.813900000000178e-05, 6.797199999999948e-05, 6.876399999999894e-05, 6.983399999999779e-05, 6.818099999999702e-05, 6.848599999999955e-05, 6.851399999999869e-05, 6.866600000000195e-05, 6.862499999999924e-05, 6.848599999999955e-05, 6.851399999999869e-05, 6.988800000000059e-05, 6.831900000000071e-05, 6.876399999999894e-05, 6.811099999999917e-05, 6.815299999999788e-05, 6.863900000000228e-05, 6.819500000000006e-05, 6.837499999999899e-05, 6.793100000000024e-05, 6.869500000000056e-05, 6.820899999999963e-05, 6.8584e-05, 6.793100000000024e-05, 6.87640000000024e-05, 6.838799999999909e-05, 6.876300000000293e-05, 6.861099999999967e-05, 6.872200000000023e-05, 6.824999999999887e-05, 6.843000000000127e-05, 6.815300000000135e-05, 6.852800000000173e-05, 6.876399999999894e-05, 6.843100000000074e-05, 6.868100000000099e-05, 6.883399999999679e-05, 6.980600000000212e-05, 6.801400000000166e-05]</msg>
<status status="PASS" starttime="20201112 10:13:57.426" endtime="20201112 10:13:57.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.422" endtime="20201112 10:13:57.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.431" endtime="20201112 10:13:57.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.435" endtime="20201112 10:13:57.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.433" endtime="20201112 10:13:57.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.430" endtime="20201112 10:13:57.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.062" endtime="20201112 10:13:57.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.062" endtime="20201112 10:13:57.456"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.464" endtime="20201112 10:13:57.483"></status>
</kw>
<msg timestamp="20201112 10:13:57.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.463" endtime="20201112 10:13:57.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.484" endtime="20201112 10:13:57.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.487" endtime="20201112 10:13:57.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.460" endtime="20201112 10:13:57.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.458" endtime="20201112 10:13:57.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.497" endtime="20201112 10:13:57.782"></status>
</kw>
<msg timestamp="20201112 10:13:57.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.495" endtime="20201112 10:13:57.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019584111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.786" endtime="20201112 10:13:57.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.795" endtime="20201112 10:13:57.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.493" endtime="20201112 10:13:57.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.491" endtime="20201112 10:13:57.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:57.801" level="INFO">${RESULT} = [{'time': 0.019658194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.40829999999991e-05, 'source_diff': 7.40829999999991e-05}, {'time': 0.019739819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:57.798" endtime="20201112 10:13:57.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:57.815" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:57.802" endtime="20201112 10:13:57.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.819" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 10:13:57.818" endtime="20201112 10:13:57.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.822" level="INFO">VALUE: [7.40829999999991e-05, 7.086099999999845e-05, 6.926399999999944e-05, 6.957000000000144e-05, 6.916600000000245e-05, 6.905499999999842e-05, 6.972200000000123e-05, 6.904099999999885e-05, 6.938899999999956e-05, 7.093099999999977e-05, 6.908300000000103e-05, 6.906899999999799e-05, 6.950000000000012e-05, 6.962500000000024e-05, 6.968099999999852e-05, 7.09170000000002e-05, 6.926399999999944e-05, 6.943099999999827e-05, 7.083399999999879e-05, 6.948600000000055e-05, 6.963800000000034e-05, 6.951300000000021e-05, 7.091600000000073e-05, 6.895800000000091e-05, 6.981999999999822e-05, 6.919400000000159e-05, 6.90970000000006e-05, 6.912499999999974e-05, 6.922200000000073e-05, 6.908299999999756e-05, 6.899999999999962e-05, 7.084700000000235e-05, 6.937499999999999e-05, 7.081999999999922e-05, 6.907000000000094e-05, 6.962500000000024e-05, 6.902699999999928e-05, 6.920799999999769e-05, 6.938899999999956e-05, 6.917999999999855e-05, 6.945800000000141e-05, 6.97360000000008e-05, 6.955500000000239e-05, 6.908299999999756e-05, 6.965299999999938e-05, 6.931899999999824e-05, 6.916699999999845e-05, 6.940299999999913e-05, 6.951400000000316e-05, 7.086100000000192e-05]</msg>
<status status="PASS" starttime="20201112 10:13:57.820" endtime="20201112 10:13:57.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.816" endtime="20201112 10:13:57.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.825" endtime="20201112 10:13:57.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:57.829" endtime="20201112 10:13:57.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.827" endtime="20201112 10:13:57.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.824" endtime="20201112 10:13:57.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.456" endtime="20201112 10:13:57.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.456" endtime="20201112 10:13:57.850"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.858" endtime="20201112 10:13:57.878"></status>
</kw>
<msg timestamp="20201112 10:13:57.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.857" endtime="20201112 10:13:57.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:57.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:57.880" endtime="20201112 10:13:57.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.882" endtime="20201112 10:13:57.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.854" endtime="20201112 10:13:57.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.852" endtime="20201112 10:13:57.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:57.892" endtime="20201112 10:13:58.177"></status>
</kw>
<msg timestamp="20201112 10:13:58.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:57.890" endtime="20201112 10:13:58.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019720111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.182" endtime="20201112 10:13:58.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.190" endtime="20201112 10:13:58.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.888" endtime="20201112 10:13:58.192"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.886" endtime="20201112 10:13:58.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.196" level="INFO">${RESULT} = [{'time': 0.019795194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.50830000000001e-05, 'source_diff': 7.50830000000001e-05}, {'time': 0.019877861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:13:58.193" endtime="20201112 10:13:58.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:58.210" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:58.197" endtime="20201112 10:13:58.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.214" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 10:13:58.213" endtime="20201112 10:13:58.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.217" level="INFO">VALUE: [7.50830000000001e-05, 7.048600000000155e-05, 7.049999999999765e-05, 7.036099999999795e-05, 7.000000000000062e-05, 7.072200000000223e-05, 7.062500000000124e-05, 7.031899999999924e-05, 7.079200000000008e-05, 7.045900000000188e-05, 6.99169999999992e-05, 7.03620000000009e-05, 7.068099999999952e-05, 7.037500000000099e-05, 6.998599999999758e-05, 7.022199999999826e-05, 7.045799999999894e-05, 7.005499999999942e-05, 7.062499999999777e-05, 7.068000000000005e-05, 7.065300000000038e-05, 7.02360000000013e-05, 7.047199999999851e-05, 7.076400000000094e-05, 7.069499999999909e-05, 7.04169999999997e-05, 6.991700000000267e-05, 7.076400000000094e-05, 7.044499999999884e-05, 7.012500000000074e-05, 6.99169999999992e-05, 7.013799999999737e-05, 7.041600000000023e-05, 7.022199999999826e-05, 7.027800000000001e-05, 7.061100000000167e-05, 7.001400000000019e-05, 7.079199999999661e-05, 7.183300000000031e-05, 6.995800000000191e-05, 7.070799999999919e-05, 6.997200000000148e-05, 7.180600000000065e-05, 7.062499999999777e-05, 7.02360000000013e-05, 7.001400000000019e-05, 7.066600000000048e-05, 7.076400000000094e-05, 7.001400000000019e-05, 7.05689999999995e-05]</msg>
<status status="PASS" starttime="20201112 10:13:58.215" endtime="20201112 10:13:58.218"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.211" endtime="20201112 10:13:58.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.221" endtime="20201112 10:13:58.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.224" endtime="20201112 10:13:58.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.223" endtime="20201112 10:13:58.244"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.219" endtime="20201112 10:13:58.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.851" endtime="20201112 10:13:58.245"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:57.850" endtime="20201112 10:13:58.245"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.254" endtime="20201112 10:13:58.273"></status>
</kw>
<msg timestamp="20201112 10:13:58.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.252" endtime="20201112 10:13:58.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.275" endtime="20201112 10:13:58.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.278" endtime="20201112 10:13:58.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.250" endtime="20201112 10:13:58.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.248" endtime="20201112 10:13:58.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.289" endtime="20201112 10:13:58.575"></status>
</kw>
<msg timestamp="20201112 10:13:58.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019759722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.287" endtime="20201112 10:13:58.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019683569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019759722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.579" endtime="20201112 10:13:58.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.587" endtime="20201112 10:13:58.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.284" endtime="20201112 10:13:58.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.282" endtime="20201112 10:13:58.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.594" level="INFO">${RESULT} = [{'time': 0.019759722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.615299999999894e-05, 'source_diff': 7.615299999999894e-05}, {'time': 0.019842375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:58.591" endtime="20201112 10:13:58.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:58.608" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:58.595" endtime="20201112 10:13:58.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.613" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 10:13:58.612" endtime="20201112 10:13:58.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.615" level="INFO">VALUE: [7.615299999999894e-05, 7.179199999999761e-05, 7.113900000000131e-05, 7.145899999999941e-05, 7.118100000000002e-05, 7.123599999999883e-05, 7.094499999999934e-05, 7.163899999999834e-05, 7.136099999999895e-05, 7.137499999999852e-05, 7.104100000000085e-05, 7.108299999999956e-05, 7.144400000000037e-05, 7.290299999999916e-05, 7.149999999999865e-05, 7.16109999999992e-05, 7.162500000000224e-05, 7.131899999999677e-05, 7.133300000000328e-05, 7.12499999999984e-05, 7.137500000000199e-05, 7.287500000000002e-05, 7.144499999999984e-05, 7.087499999999802e-05, 7.173599999999933e-05, 7.151299999999874e-05, 7.095799999999944e-05, 7.175000000000237e-05, 7.142999999999733e-05, 7.116599999999751e-05, 7.145799999999994e-05, 7.131899999999677e-05, 7.283299999999784e-05, 7.163899999999834e-05, 7.098600000000205e-05, 7.169500000000009e-05, 7.123599999999883e-05, 7.17499999999989e-05, 7.119499999999959e-05, 7.162500000000224e-05, 7.177800000000151e-05, 7.281900000000174e-05, 7.12499999999984e-05, 7.138899999999809e-05, 7.158300000000006e-05, 7.115300000000088e-05, 7.168000000000105e-05, 7.133299999999981e-05, 7.120799999999969e-05, 7.095799999999944e-05]</msg>
<status status="PASS" starttime="20201112 10:13:58.614" endtime="20201112 10:13:58.616"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.609" endtime="20201112 10:13:58.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.619" endtime="20201112 10:13:58.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:58.622" endtime="20201112 10:13:58.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.621" endtime="20201112 10:13:58.642"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.617" endtime="20201112 10:13:58.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.246" endtime="20201112 10:13:58.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.245" endtime="20201112 10:13:58.643"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.652" endtime="20201112 10:13:58.671"></status>
</kw>
<msg timestamp="20201112 10:13:58.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.650" endtime="20201112 10:13:58.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:58.673" endtime="20201112 10:13:58.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.675" endtime="20201112 10:13:58.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.648" endtime="20201112 10:13:58.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.646" endtime="20201112 10:13:58.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.685" endtime="20201112 10:13:58.970"></status>
</kw>
<msg timestamp="20201112 10:13:58.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.684" endtime="20201112 10:13:58.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:58.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019693819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:58.974" endtime="20201112 10:13:58.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:58.982" endtime="20201112 10:13:58.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.681" endtime="20201112 10:13:58.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.679" endtime="20201112 10:13:58.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:58.989" level="INFO">${RESULT} = [{'time': 0.019693819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.670800000000172e-05, 'source_diff': 7.670800000000172e-05}, {'time': 0.019781472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:58.986" endtime="20201112 10:13:58.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:59.003" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:58.990" endtime="20201112 10:13:59.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.007" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 10:13:59.006" endtime="20201112 10:13:59.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.010" level="INFO">VALUE: [7.670800000000172e-05, 7.383300000000231e-05, 7.215300000000188e-05, 7.237499999999952e-05, 7.197200000000001e-05, 7.25829999999976e-05, 7.273599999999686e-05, 7.219500000000059e-05, 7.251400000000269e-05, 7.387500000000102e-05, 7.381999999999875e-05, 7.197299999999948e-05, 7.276399999999947e-05, 7.279199999999861e-05, 7.266599999999901e-05, 7.226399999999897e-05, 7.388900000000059e-05, 7.283400000000079e-05, 7.21109999999997e-05, 7.38049999999997e-05, 7.229200000000158e-05, 7.231899999999777e-05, 7.201399999999872e-05, 7.213899999999884e-05, 7.259800000000011e-05, 7.241699999999823e-05, 7.244500000000084e-05, 7.269500000000109e-05, 7.383400000000179e-05, 7.388800000000112e-05, 7.208300000000056e-05, 7.242999999999833e-05, 7.266600000000248e-05, 7.223599999999983e-05, 7.234700000000038e-05, 7.245799999999747e-05, 7.219400000000112e-05, 7.259699999999716e-05, 7.270800000000119e-05, 7.265300000000238e-05, 7.222200000000026e-05, 7.388900000000059e-05, 7.377800000000004e-05, 7.262499999999977e-05, 7.215199999999894e-05, 7.227699999999906e-05, 7.25690000000015e-05, 7.19439999999974e-05, 7.208300000000056e-05, 7.190199999999869e-05]</msg>
<status status="PASS" starttime="20201112 10:13:59.008" endtime="20201112 10:13:59.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.003" endtime="20201112 10:13:59.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.013" endtime="20201112 10:13:59.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.017" endtime="20201112 10:13:59.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.015" endtime="20201112 10:13:59.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.012" endtime="20201112 10:13:59.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.644" endtime="20201112 10:13:59.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:58.644" endtime="20201112 10:13:59.037"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.046" endtime="20201112 10:13:59.065"></status>
</kw>
<msg timestamp="20201112 10:13:59.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.044" endtime="20201112 10:13:59.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.067" endtime="20201112 10:13:59.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.069" endtime="20201112 10:13:59.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.042" endtime="20201112 10:13:59.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.040" endtime="20201112 10:13:59.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.079" endtime="20201112 10:13:59.366"></status>
</kw>
<msg timestamp="20201112 10:13:59.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.078" endtime="20201112 10:13:59.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.370" endtime="20201112 10:13:59.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.379" endtime="20201112 10:13:59.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.075" endtime="20201112 10:13:59.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.073" endtime="20201112 10:13:59.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.385" level="INFO">${RESULT} = [{'time': 0.019628264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.805599999999996e-05, 'source_diff': 7.805599999999996e-05}, {'time': 0.019714889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:59.382" endtime="20201112 10:13:59.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:59.399" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:59.386" endtime="20201112 10:13:59.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.403" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 10:13:59.402" endtime="20201112 10:13:59.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.405" level="INFO">VALUE: [7.805599999999996e-05, 7.3069999999998e-05, 7.365299999999991e-05, 7.307000000000147e-05, 7.32500000000004e-05, 7.370799999999872e-05, 7.319500000000159e-05, 7.379100000000013e-05, 7.381899999999927e-05, 7.330500000000267e-05, 7.351400000000022e-05, 7.336100000000095e-05, 7.331900000000224e-05, 7.487499999999855e-05, 7.362500000000077e-05, 7.351400000000022e-05, 7.338900000000009e-05, 7.363900000000034e-05, 7.344499999999837e-05, 7.327799999999954e-05, 7.304199999999886e-05, 7.3069999999998e-05, 7.487500000000202e-05, 7.376299999999752e-05, 7.488899999999812e-05, 7.331899999999877e-05, 7.30829999999981e-05, 7.351400000000022e-05, 7.355499999999945e-05, 7.345800000000194e-05, 7.306899999999852e-05, 7.334800000000086e-05, 7.316699999999898e-05, 7.379199999999961e-05, 7.295900000000091e-05, 7.358399999999807e-05, 7.316599999999951e-05, 7.340299999999966e-05, 7.351300000000074e-05, 7.30829999999981e-05, 7.317999999999908e-05, 7.484699999999941e-05, 7.488900000000159e-05, 7.320800000000169e-05, 7.331899999999877e-05, 7.318000000000255e-05, 7.3069000000002e-05, 7.363900000000034e-05, 7.313899999999984e-05, 7.340299999999966e-05]</msg>
<status status="PASS" starttime="20201112 10:13:59.404" endtime="20201112 10:13:59.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.400" endtime="20201112 10:13:59.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.409" endtime="20201112 10:13:59.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.412" endtime="20201112 10:13:59.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.411" endtime="20201112 10:13:59.433"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.407" endtime="20201112 10:13:59.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.038" endtime="20201112 10:13:59.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.038" endtime="20201112 10:13:59.434"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.443" endtime="20201112 10:13:59.463"></status>
</kw>
<msg timestamp="20201112 10:13:59.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.441" endtime="20201112 10:13:59.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.464" endtime="20201112 10:13:59.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.467" endtime="20201112 10:13:59.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.439" endtime="20201112 10:13:59.470"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.437" endtime="20201112 10:13:59.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.477" endtime="20201112 10:13:59.762"></status>
</kw>
<msg timestamp="20201112 10:13:59.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020620278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.475" endtime="20201112 10:13:59.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020620278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.766" endtime="20201112 10:13:59.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.775" endtime="20201112 10:13:59.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.473" endtime="20201112 10:13:59.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.471" endtime="20201112 10:13:59.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:13:59.781" level="INFO">${RESULT} = [{'time': 0.020698792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.851400000000175e-05, 'source_diff': 7.851400000000175e-05}, {'time': 0.020787444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:13:59.778" endtime="20201112 10:13:59.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:13:59.795" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:13:59.782" endtime="20201112 10:13:59.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.799" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 10:13:59.798" endtime="20201112 10:13:59.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.802" level="INFO">VALUE: [7.851400000000175e-05, 7.594399999999793e-05, 7.398700000000105e-05, 7.462500000000177e-05, 7.466600000000101e-05, 7.422200000000226e-05, 7.44439999999999e-05, 7.443000000000033e-05, 7.418000000000008e-05, 7.586099999999998e-05, 7.395799999999897e-05, 7.431899999999977e-05, 7.450000000000165e-05, 7.420899999999869e-05, 7.455500000000045e-05, 7.420899999999869e-05, 7.582000000000075e-05, 7.470899999999919e-05, 7.422300000000173e-05, 7.408400000000204e-05, 7.44439999999999e-05, 7.477799999999757e-05, 7.395799999999897e-05, 7.592999999999836e-05, 7.409699999999866e-05, 7.420799999999922e-05, 7.438900000000109e-05, 7.431899999999977e-05, 7.456900000000002e-05, 7.477800000000104e-05, 7.450000000000165e-05, 7.436200000000143e-05, 7.438899999999762e-05, 7.401399999999725e-05, 7.583400000000032e-05, 7.402800000000029e-05, 7.468000000000058e-05, 7.441700000000023e-05, 7.472199999999929e-05, 7.456900000000002e-05, 7.584700000000041e-05, 7.405499999999995e-05, 7.423599999999836e-05, 7.461099999999873e-05, 7.483299999999984e-05, 7.438900000000109e-05, 7.440300000000066e-05, 7.413900000000084e-05, 7.423600000000183e-05, 7.452800000000079e-05]</msg>
<status status="PASS" starttime="20201112 10:13:59.800" endtime="20201112 10:13:59.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.795" endtime="20201112 10:13:59.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.809" endtime="20201112 10:13:59.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:13:59.813" endtime="20201112 10:13:59.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.811" endtime="20201112 10:13:59.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.808" endtime="20201112 10:13:59.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.435" endtime="20201112 10:13:59.834"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.435" endtime="20201112 10:13:59.834"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.843" endtime="20201112 10:13:59.862"></status>
</kw>
<msg timestamp="20201112 10:13:59.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.841" endtime="20201112 10:13:59.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:13:59.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:13:59.863" endtime="20201112 10:13:59.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.866" endtime="20201112 10:13:59.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.839" endtime="20201112 10:13:59.869"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.837" endtime="20201112 10:13:59.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:13:59.876" endtime="20201112 10:14:00.162"></status>
</kw>
<msg timestamp="20201112 10:14:00.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020338056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:13:59.874" endtime="20201112 10:14:00.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020338056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.166" endtime="20201112 10:14:00.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.175" endtime="20201112 10:14:00.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.872" endtime="20201112 10:14:00.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.870" endtime="20201112 10:14:00.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.181" level="INFO">${RESULT} = [{'time': 0.020338056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.009800000000067e-05, 'source_diff': 8.009800000000067e-05}, {'time': 0.020425708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:00.178" endtime="20201112 10:14:00.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:00.196" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:00.182" endtime="20201112 10:14:00.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.200" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 10:14:00.199" endtime="20201112 10:14:00.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.203" level="INFO">VALUE: [8.009800000000067e-05, 7.566600000000201e-05, 7.511099999999923e-05, 7.50830000000001e-05, 7.68189999999988e-05, 7.683299999999837e-05, 7.69029999999997e-05, 7.49310000000003e-05, 7.507e-05, 7.505600000000043e-05, 7.549999999999918e-05, 7.515299999999794e-05, 7.540300000000166e-05, 7.507e-05, 7.574999999999943e-05, 7.551399999999875e-05, 7.551299999999928e-05, 7.572200000000029e-05, 7.502800000000129e-05, 7.495799999999997e-05, 7.50830000000001e-05, 7.524999999999893e-05, 7.549999999999918e-05, 7.577800000000204e-05, 7.524999999999893e-05, 7.580600000000118e-05, 7.536099999999948e-05, 7.568100000000105e-05, 7.576400000000247e-05, 7.56249999999993e-05, 7.684700000000141e-05, 7.513900000000184e-05, 7.68189999999988e-05, 7.522199999999979e-05, 7.513899999999837e-05, 7.572200000000029e-05, 7.533299999999687e-05, 7.681900000000227e-05, 7.513900000000184e-05, 7.548599999999961e-05, 7.540300000000166e-05, 7.684799999999742e-05, 7.513899999999837e-05, 7.559799999999964e-05, 7.551399999999875e-05, 7.563900000000234e-05, 7.504199999999739e-05, 7.569400000000115e-05, 7.504099999999791e-05, 7.519400000000065e-05]</msg>
<status status="PASS" starttime="20201112 10:14:00.201" endtime="20201112 10:14:00.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.197" endtime="20201112 10:14:00.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.206" endtime="20201112 10:14:00.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.210" endtime="20201112 10:14:00.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.208" endtime="20201112 10:14:00.229"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.204" endtime="20201112 10:14:00.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.835" endtime="20201112 10:14:00.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:59.835" endtime="20201112 10:14:00.230"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.239" endtime="20201112 10:14:00.258"></status>
</kw>
<msg timestamp="20201112 10:14:00.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.237" endtime="20201112 10:14:00.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.260" endtime="20201112 10:14:00.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.262" endtime="20201112 10:14:00.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.235" endtime="20201112 10:14:00.265"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.233" endtime="20201112 10:14:00.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.272" endtime="20201112 10:14:00.558"></status>
</kw>
<msg timestamp="20201112 10:14:00.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.271" endtime="20201112 10:14:00.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019706306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.562" endtime="20201112 10:14:00.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.570" endtime="20201112 10:14:00.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.268" endtime="20201112 10:14:00.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.266" endtime="20201112 10:14:00.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.577" level="INFO">${RESULT} = [{'time': 0.019786861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.055499999999952e-05, 'source_diff': 8.055499999999952e-05}, {'time': 0.0198745, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:00.574" endtime="20201112 10:14:00.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:00.591" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:00.578" endtime="20201112 10:14:00.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.595" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 10:14:00.594" endtime="20201112 10:14:00.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.597" level="INFO">VALUE: [8.055499999999952e-05, 7.62639999999995e-05, 7.648600000000061e-05, 7.594399999999793e-05, 7.663899999999987e-05, 7.675000000000043e-05, 7.637500000000005e-05, 7.6764e-05, 7.605600000000143e-05, 7.781999999999928e-05, 7.656999999999803e-05, 7.605500000000195e-05, 7.605499999999848e-05, 7.663899999999987e-05, 7.601399999999925e-05, 7.595800000000097e-05, 7.672200000000129e-05, 7.620800000000122e-05, 7.655600000000193e-05, 7.6764e-05, 7.591699999999826e-05, 7.673700000000033e-05, 7.647200000000104e-05, 7.65839999999976e-05, 7.66250000000003e-05, 7.615199999999947e-05, 7.637500000000005e-05, 7.604100000000238e-05, 7.598600000000011e-05, 7.788900000000112e-05, 7.6764e-05, 7.620800000000122e-05, 7.788899999999765e-05, 7.622199999999732e-05, 7.615300000000241e-05, 7.597199999999707e-05, 7.619500000000112e-05, 7.783399999999885e-05, 7.637500000000005e-05, 7.661199999999674e-05, 7.672200000000129e-05, 7.615199999999947e-05, 7.674999999999696e-05, 7.787500000000155e-05, 7.654200000000236e-05, 7.59579999999975e-05, 7.654199999999889e-05, 7.633299999999787e-05, 7.640300000000266e-05, 7.78189999999998e-05]</msg>
<status status="PASS" starttime="20201112 10:14:00.596" endtime="20201112 10:14:00.598"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.591" endtime="20201112 10:14:00.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.601" endtime="20201112 10:14:00.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.604" endtime="20201112 10:14:00.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.603" endtime="20201112 10:14:00.624"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.599" endtime="20201112 10:14:00.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.231" endtime="20201112 10:14:00.625"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.231" endtime="20201112 10:14:00.625"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.634" endtime="20201112 10:14:00.654"></status>
</kw>
<msg timestamp="20201112 10:14:00.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.632" endtime="20201112 10:14:00.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:00.655" endtime="20201112 10:14:00.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.658" endtime="20201112 10:14:00.660"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.630" endtime="20201112 10:14:00.661"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.628" endtime="20201112 10:14:00.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.668" endtime="20201112 10:14:00.953"></status>
</kw>
<msg timestamp="20201112 10:14:00.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.666" endtime="20201112 10:14:00.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019912819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:00.957" endtime="20201112 10:14:00.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.965" endtime="20201112 10:14:00.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.663" endtime="20201112 10:14:00.967"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.662" endtime="20201112 10:14:00.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:00.972" level="INFO">${RESULT} = [{'time': 0.019912819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.177699999999816e-05, 'source_diff': 8.177699999999816e-05}, {'time': 0.020003472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:00.969" endtime="20201112 10:14:00.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:00.985" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:00.973" endtime="20201112 10:14:00.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.990" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 10:14:00.989" endtime="20201112 10:14:00.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:00.992" level="INFO">VALUE: [8.177699999999816e-05, 7.741600000000029e-05, 7.768000000000011e-05, 7.701399999999678e-05, 7.766700000000001e-05, 7.756899999999955e-05, 7.751400000000075e-05, 7.705599999999896e-05, 7.887500000000255e-05, 7.74449999999989e-05, 7.770900000000219e-05, 7.715299999999994e-05, 7.772199999999882e-05, 7.722200000000179e-05, 7.702799999999982e-05, 7.884699999999994e-05, 7.756899999999955e-05, 7.713900000000037e-05, 7.737500000000105e-05, 7.774999999999796e-05, 7.733299999999887e-05, 7.701400000000025e-05, 7.738899999999715e-05, 7.738900000000062e-05, 7.708400000000157e-05, 7.75700000000025e-05, 7.69449999999984e-05, 7.76250000000013e-05, 7.762499999999783e-05, 7.741600000000029e-05, 7.76389999999974e-05, 7.76389999999974e-05, 7.884699999999994e-05, 7.73189999999993e-05, 7.737500000000105e-05, 7.701400000000025e-05, 7.71389999999969e-05, 7.706999999999853e-05, 7.761100000000173e-05, 7.720899999999822e-05, 7.734699999999844e-05, 7.752800000000032e-05, 7.751400000000075e-05, 7.7151999999997e-05, 7.766600000000054e-05, 7.69440000000024e-05, 7.69579999999985e-05, 7.887499999999908e-05, 7.733299999999887e-05, 7.701400000000025e-05]</msg>
<status status="PASS" starttime="20201112 10:14:00.991" endtime="20201112 10:14:00.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.986" endtime="20201112 10:14:00.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:00.996" endtime="20201112 10:14:00.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:00.999" endtime="20201112 10:14:01.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.998" endtime="20201112 10:14:01.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.994" endtime="20201112 10:14:01.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.626" endtime="20201112 10:14:01.020"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:00.626" endtime="20201112 10:14:01.020"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.029" endtime="20201112 10:14:01.049"></status>
</kw>
<msg timestamp="20201112 10:14:01.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.027" endtime="20201112 10:14:01.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.050" endtime="20201112 10:14:01.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.053" endtime="20201112 10:14:01.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.025" endtime="20201112 10:14:01.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.023" endtime="20201112 10:14:01.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.063" endtime="20201112 10:14:01.348"></status>
</kw>
<msg timestamp="20201112 10:14:01.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.061" endtime="20201112 10:14:01.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.352" endtime="20201112 10:14:01.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.360" endtime="20201112 10:14:01.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.059" endtime="20201112 10:14:01.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.057" endtime="20201112 10:14:01.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:01.367" level="INFO">${RESULT} = [{'time': 0.019893583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.252699999999891e-05, 'source_diff': 8.252699999999891e-05}, {'time': 0.019983222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:01.363" endtime="20201112 10:14:01.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:01.380" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:01.368" endtime="20201112 10:14:01.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.385" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 10:14:01.384" endtime="20201112 10:14:01.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.387" level="INFO">VALUE: [8.252699999999891e-05, 7.826399999999803e-05, 7.870800000000025e-05, 7.813900000000137e-05, 7.852799999999785e-05, 7.820799999999975e-05, 7.836100000000248e-05, 7.988899999999965e-05, 7.847300000000251e-05, 7.804100000000092e-05, 7.819499999999965e-05, 7.820899999999922e-05, 7.870899999999972e-05, 7.804100000000092e-05, 7.80969999999992e-05, 7.869400000000068e-05, 7.837499999999858e-05, 7.836099999999901e-05, 7.868000000000111e-05, 7.879199999999767e-05, 7.988899999999965e-05, 7.866699999999754e-05, 7.808299999999962e-05, 7.992999999999889e-05, 7.838899999999815e-05, 7.80839999999991e-05, 7.801400000000125e-05, 7.825000000000193e-05, 7.83190000000003e-05, 7.801300000000178e-05, 7.984700000000094e-05, 7.990199999999975e-05, 7.844400000000043e-05, 7.824999999999846e-05, 7.862499999999883e-05, 7.865300000000144e-05, 7.987500000000008e-05, 7.823599999999889e-05, 7.826399999999803e-05, 7.838900000000162e-05, 7.798700000000158e-05, 7.804100000000092e-05, 7.865299999999797e-05, 7.987500000000008e-05, 7.88190000000008e-05, 7.8458e-05, 7.850000000000218e-05, 7.851400000000175e-05, 7.869400000000068e-05, 7.869500000000015e-05]</msg>
<status status="PASS" starttime="20201112 10:14:01.386" endtime="20201112 10:14:01.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.381" endtime="20201112 10:14:01.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.391" endtime="20201112 10:14:01.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:01.394" endtime="20201112 10:14:01.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.393" endtime="20201112 10:14:01.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.389" endtime="20201112 10:14:01.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.021" endtime="20201112 10:14:01.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.021" endtime="20201112 10:14:01.415"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.424" endtime="20201112 10:14:01.443"></status>
</kw>
<msg timestamp="20201112 10:14:01.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.422" endtime="20201112 10:14:01.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.444" endtime="20201112 10:14:01.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.447" endtime="20201112 10:14:01.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.419" endtime="20201112 10:14:01.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.417" endtime="20201112 10:14:01.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.457" endtime="20201112 10:14:01.741"></status>
</kw>
<msg timestamp="20201112 10:14:01.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.455" endtime="20201112 10:14:01.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019751792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019835861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.745" endtime="20201112 10:14:01.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.754" endtime="20201112 10:14:01.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.453" endtime="20201112 10:14:01.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.451" endtime="20201112 10:14:01.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:01.760" level="INFO">${RESULT} = [{'time': 0.019835861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.406899999999912e-05, 'source_diff': 8.406899999999912e-05}, {'time': 0.019929486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:01.757" endtime="20201112 10:14:01.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:01.775" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:01.761" endtime="20201112 10:14:01.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.779" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 10:14:01.778" endtime="20201112 10:14:01.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.782" level="INFO">VALUE: [8.406899999999912e-05, 7.967999999999864e-05, 7.934699999999698e-05, 7.902799999999835e-05, 7.908300000000063e-05, 8.083400000000185e-05, 7.912499999999933e-05, 7.957000000000103e-05, 7.938799999999968e-05, 8.088800000000118e-05, 7.943000000000186e-05, 7.945799999999753e-05, 7.917999999999814e-05, 7.945799999999753e-05, 7.952800000000232e-05, 7.96389999999994e-05, 7.974999999999996e-05, 7.970800000000125e-05, 7.952800000000232e-05, 7.922200000000032e-05, 7.94030000000022e-05, 7.972200000000082e-05, 7.918100000000108e-05, 8.092999999999989e-05, 7.913799999999943e-05, 7.977699999999963e-05, 7.937499999999958e-05, 7.951400000000275e-05, 7.96389999999994e-05, 7.922200000000032e-05, 7.956900000000156e-05, 7.947200000000057e-05, 7.924999999999946e-05, 7.965300000000244e-05, 7.949999999999971e-05, 8.088900000000065e-05, 7.89450000000004e-05, 7.969500000000115e-05, 7.916599999999857e-05, 7.924999999999946e-05, 7.906900000000106e-05, 7.919400000000118e-05, 7.934700000000044e-05, 7.951399999999928e-05, 7.902799999999835e-05, 7.976399999999953e-05, 7.944400000000143e-05, 8.09169999999998e-05, 7.91250000000028e-05, 7.919499999999718e-05]</msg>
<status status="PASS" starttime="20201112 10:14:01.780" endtime="20201112 10:14:01.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.775" endtime="20201112 10:14:01.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.785" endtime="20201112 10:14:01.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:01.789" endtime="20201112 10:14:01.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.787" endtime="20201112 10:14:01.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.784" endtime="20201112 10:14:01.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.416" endtime="20201112 10:14:01.809"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.415" endtime="20201112 10:14:01.810"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.818" endtime="20201112 10:14:01.838"></status>
</kw>
<msg timestamp="20201112 10:14:01.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.816" endtime="20201112 10:14:01.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:01.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:01.840" endtime="20201112 10:14:01.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.842" endtime="20201112 10:14:01.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.814" endtime="20201112 10:14:01.845"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.812" endtime="20201112 10:14:01.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:01.852" endtime="20201112 10:14:02.138"></status>
</kw>
<msg timestamp="20201112 10:14:02.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:01.851" endtime="20201112 10:14:02.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.142" endtime="20201112 10:14:02.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.150" endtime="20201112 10:14:02.152"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.848" endtime="20201112 10:14:02.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.846" endtime="20201112 10:14:02.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.157" level="INFO">${RESULT} = [{'time': 0.019708389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.44859999999982e-05, 'source_diff': 8.44859999999982e-05}, {'time': 0.019800042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:02.154" endtime="20201112 10:14:02.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:02.170" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:02.158" endtime="20201112 10:14:02.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.175" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 10:14:02.174" endtime="20201112 10:14:02.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.177" level="INFO">VALUE: [8.44859999999982e-05, 8.054199999999942e-05, 7.994499999999793e-05, 7.997300000000054e-05, 8.026300000000056e-05, 8.063799999999746e-05, 8.050000000000071e-05, 8.076399999999706e-05, 8.073599999999792e-05, 8.058300000000213e-05, 8.004099999999945e-05, 8.041700000000276e-05, 8.029199999999917e-05, 8.056999999999856e-05, 8.030499999999927e-05, 8.051400000000028e-05, 8.001399999999978e-05, 8.051400000000028e-05, 8.077699999999716e-05, 8.001399999999978e-05, 8.016700000000251e-05, 8.025000000000046e-05, 8.18329999999999e-05, 8.026400000000003e-05, 8.069399999999921e-05, 8.015299999999947e-05, 8.19589999999995e-05, 8.016699999999904e-05, 8.043099999999886e-05, 8.076400000000053e-05, 8.031999999999831e-05, 8.031899999999884e-05, 8.188899999999819e-05, 8.041599999999982e-05, 7.99450000000014e-05, 7.998600000000064e-05, 8.050000000000071e-05, 8.190300000000122e-05, 8.076399999999706e-05, 8.030499999999927e-05, 8.040299999999972e-05, 8.045799999999853e-05, 8.08329999999989e-05, 8.024999999999699e-05, 8.052799999999985e-05, 7.99450000000014e-05, 8.015299999999947e-05, 8.008300000000163e-05, 8.040200000000025e-05, 7.998600000000064e-05]</msg>
<status status="PASS" starttime="20201112 10:14:02.176" endtime="20201112 10:14:02.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.171" endtime="20201112 10:14:02.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.181" endtime="20201112 10:14:02.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.184" endtime="20201112 10:14:02.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.183" endtime="20201112 10:14:02.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.179" endtime="20201112 10:14:02.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.810" endtime="20201112 10:14:02.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:01.810" endtime="20201112 10:14:02.205"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.214" endtime="20201112 10:14:02.234"></status>
</kw>
<msg timestamp="20201112 10:14:02.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.212" endtime="20201112 10:14:02.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.235" endtime="20201112 10:14:02.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.237" endtime="20201112 10:14:02.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.210" endtime="20201112 10:14:02.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.208" endtime="20201112 10:14:02.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.247" endtime="20201112 10:14:02.533"></status>
</kw>
<msg timestamp="20201112 10:14:02.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.246" endtime="20201112 10:14:02.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019697361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.537" endtime="20201112 10:14:02.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.545" endtime="20201112 10:14:02.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.243" endtime="20201112 10:14:02.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.242" endtime="20201112 10:14:02.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.552" level="INFO">${RESULT} = [{'time': 0.019697361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.533299999999994e-05, 'source_diff': 8.533299999999994e-05}, {'time': 0.019790028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:02.549" endtime="20201112 10:14:02.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:02.565" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:02.553" endtime="20201112 10:14:02.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.570" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 10:14:02.569" endtime="20201112 10:14:02.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.572" level="INFO">VALUE: [8.533299999999994e-05, 8.154200000000042e-05, 8.172200000000282e-05, 8.144499999999943e-05, 8.151400000000128e-05, 8.133399999999888e-05, 8.119500000000265e-05, 8.140300000000072e-05, 8.152700000000138e-05, 8.126299999999809e-05, 8.095799999999903e-05, 8.106899999999959e-05, 8.16109999999988e-05, 8.144399999999996e-05, 8.108299999999916e-05, 8.13329999999994e-05, 8.14450000000029e-05, 8.090300000000022e-05, 8.116700000000004e-05, 8.133400000000235e-05, 8.170899999999925e-05, 8.107000000000253e-05, 8.284700000000048e-05, 8.119399999999971e-05, 8.137500000000158e-05, 8.163899999999794e-05, 8.122199999999885e-05, 8.131899999999984e-05, 8.169400000000021e-05, 8.134699999999898e-05, 8.105599999999949e-05, 8.161100000000227e-05, 8.126399999999756e-05, 8.144499999999943e-05, 8.094499999999893e-05, 8.155599999999999e-05, 8.137500000000158e-05, 8.168100000000011e-05, 8.12910000000007e-05, 8.151399999999781e-05, 8.119399999999971e-05, 8.108299999999916e-05, 8.176399999999806e-05, 8.132000000000278e-05, 8.101400000000078e-05, 8.162499999999837e-05, 8.127799999999713e-05, 8.152799999999738e-05, 8.133399999999888e-05, 8.151400000000128e-05]</msg>
<status status="PASS" starttime="20201112 10:14:02.571" endtime="20201112 10:14:02.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.566" endtime="20201112 10:14:02.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.576" endtime="20201112 10:14:02.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.579" endtime="20201112 10:14:02.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.578" endtime="20201112 10:14:02.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.574" endtime="20201112 10:14:02.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.206" endtime="20201112 10:14:02.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.206" endtime="20201112 10:14:02.600"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.609" endtime="20201112 10:14:02.629"></status>
</kw>
<msg timestamp="20201112 10:14:02.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.607" endtime="20201112 10:14:02.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:02.630" endtime="20201112 10:14:02.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.633" endtime="20201112 10:14:02.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.605" endtime="20201112 10:14:02.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.603" endtime="20201112 10:14:02.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.643" endtime="20201112 10:14:02.928"></status>
</kw>
<msg timestamp="20201112 10:14:02.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.641" endtime="20201112 10:14:02.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019575847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:02.932" endtime="20201112 10:14:02.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.941" endtime="20201112 10:14:02.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.639" endtime="20201112 10:14:02.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.637" endtime="20201112 10:14:02.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:02.947" level="INFO">${RESULT} = [{'time': 0.019662222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.637499999999965e-05, 'source_diff': 8.637499999999965e-05}, {'time': 0.019756917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:02.944" endtime="20201112 10:14:02.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:02.961" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:02.948" endtime="20201112 10:14:02.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.965" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 10:14:02.964" endtime="20201112 10:14:02.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:02.967" level="INFO">VALUE: [8.637499999999965e-05, 8.276399999999906e-05, 8.193100000000036e-05, 8.197200000000307e-05, 8.240299999999826e-05, 8.211100000000277e-05, 8.382000000000181e-05, 8.259700000000023e-05, 8.230600000000074e-05, 8.224999999999899e-05, 8.269400000000121e-05, 8.249999999999924e-05, 8.19719999999996e-05, 8.245800000000053e-05, 8.213899999999844e-05, 8.212499999999887e-05, 8.24720000000001e-05, 8.257000000000056e-05, 8.262499999999937e-05, 8.220900000000322e-05, 8.213899999999844e-05, 8.274999999999949e-05, 8.258300000000066e-05, 8.276399999999906e-05, 8.211100000000277e-05, 8.390299999999976e-05, 8.26529999999985e-05, 8.38049999999993e-05, 8.277799999999863e-05, 8.276400000000253e-05, 8.238899999999869e-05, 8.268000000000164e-05, 8.19589999999995e-05, 8.26109999999998e-05, 8.204199999999745e-05, 8.258400000000013e-05, 8.23330000000004e-05, 8.220800000000028e-05, 8.218000000000114e-05, 8.383299999999844e-05, 8.272299999999982e-05, 8.194400000000046e-05, 8.390299999999976e-05, 8.269500000000068e-05, 8.21109999999993e-05, 8.240199999999878e-05, 8.25979999999997e-05, 8.387500000000062e-05, 8.201400000000178e-05, 8.258400000000013e-05]</msg>
<status status="PASS" starttime="20201112 10:14:02.966" endtime="20201112 10:14:02.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.961" endtime="20201112 10:14:02.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:02.971" endtime="20201112 10:14:02.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:02.974" endtime="20201112 10:14:02.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.973" endtime="20201112 10:14:02.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.969" endtime="20201112 10:14:02.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.601" endtime="20201112 10:14:02.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.601" endtime="20201112 10:14:02.995"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.004" endtime="20201112 10:14:03.024"></status>
</kw>
<msg timestamp="20201112 10:14:03.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.002" endtime="20201112 10:14:03.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.026" endtime="20201112 10:14:03.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.028" endtime="20201112 10:14:03.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.000" endtime="20201112 10:14:03.032"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.998" endtime="20201112 10:14:03.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.038" endtime="20201112 10:14:03.325"></status>
</kw>
<msg timestamp="20201112 10:14:03.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.037" endtime="20201112 10:14:03.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.329" endtime="20201112 10:14:03.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.338" endtime="20201112 10:14:03.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.034" endtime="20201112 10:14:03.340"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.033" endtime="20201112 10:14:03.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.344" level="INFO">${RESULT} = [{'time': 0.019804778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.78059999999993e-05, 'source_diff': 8.78059999999993e-05}, {'time': 0.019902444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:03.341" endtime="20201112 10:14:03.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:03.359" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:03.345" endtime="20201112 10:14:03.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.364" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 10:14:03.363" endtime="20201112 10:14:03.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.366" level="INFO">VALUE: [8.78059999999993e-05, 8.491599999999738e-05, 8.319499999999772e-05, 8.327699999999966e-05, 8.372200000000135e-05, 8.351399999999981e-05, 8.299999999999974e-05, 8.295800000000103e-05, 8.324999999999999e-05, 8.488900000000119e-05, 8.369400000000221e-05, 8.345899999999754e-05, 8.375000000000049e-05, 8.486099999999858e-05, 8.302800000000235e-05, 8.29590000000005e-05, 8.294400000000146e-05, 8.483299999999944e-05, 8.312499999999987e-05, 8.322200000000085e-05, 8.338899999999969e-05, 8.306899999999812e-05, 8.34170000000023e-05, 8.370800000000178e-05, 8.37919999999992e-05, 8.313899999999944e-05, 8.320800000000128e-05, 8.301400000000278e-05, 8.31659999999991e-05, 8.491600000000085e-05, 8.298600000000017e-05, 8.356900000000209e-05, 8.48050000000003e-05, 8.298600000000017e-05, 8.479100000000073e-05, 8.369500000000168e-05, 8.33330000000014e-05, 8.372200000000135e-05, 8.302799999999888e-05, 8.302799999999888e-05, 8.48330000000029e-05, 8.333400000000088e-05, 8.326399999999956e-05, 8.36249999999969e-05, 8.313899999999944e-05, 8.365200000000003e-05, 8.377799999999963e-05, 8.488900000000119e-05, 8.294399999999799e-05, 8.369399999999874e-05]</msg>
<status status="PASS" starttime="20201112 10:14:03.365" endtime="20201112 10:14:03.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.360" endtime="20201112 10:14:03.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.370" endtime="20201112 10:14:03.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.373" endtime="20201112 10:14:03.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.372" endtime="20201112 10:14:03.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.368" endtime="20201112 10:14:03.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.996" endtime="20201112 10:14:03.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:02.996" endtime="20201112 10:14:03.394"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.403" endtime="20201112 10:14:03.423"></status>
</kw>
<msg timestamp="20201112 10:14:03.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.401" endtime="20201112 10:14:03.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.425" endtime="20201112 10:14:03.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.427" endtime="20201112 10:14:03.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.399" endtime="20201112 10:14:03.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.397" endtime="20201112 10:14:03.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.437" endtime="20201112 10:14:03.724"></status>
</kw>
<msg timestamp="20201112 10:14:03.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.436" endtime="20201112 10:14:03.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.728" endtime="20201112 10:14:03.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.737" endtime="20201112 10:14:03.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.433" endtime="20201112 10:14:03.739"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.432" endtime="20201112 10:14:03.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:03.743" level="INFO">${RESULT} = [{'time': 0.019764222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.851400000000134e-05, 'source_diff': 8.851400000000134e-05}, {'time': 0.019859861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:03.740" endtime="20201112 10:14:03.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:03.757" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:03.744" endtime="20201112 10:14:03.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.761" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 10:14:03.760" endtime="20201112 10:14:03.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.764" level="INFO">VALUE: [8.851400000000134e-05, 8.438900000000069e-05, 8.458300000000266e-05, 8.46530000000005e-05, 8.43330000000024e-05, 8.451400000000081e-05, 8.441699999999983e-05, 8.422299999999786e-05, 8.445799999999906e-05, 8.408299999999869e-05, 8.39720000000016e-05, 8.401300000000084e-05, 8.588900000000219e-05, 8.409700000000173e-05, 8.465299999999704e-05, 8.402799999999988e-05, 8.42919999999997e-05, 8.440300000000026e-05, 8.458300000000266e-05, 8.395899999999804e-05, 8.470800000000278e-05, 8.436100000000155e-05, 8.457000000000256e-05, 8.418099999999915e-05, 8.411200000000077e-05, 8.433299999999894e-05, 8.577699999999869e-05, 8.401400000000031e-05, 8.583300000000044e-05, 8.587499999999915e-05, 8.416699999999958e-05, 8.586099999999958e-05, 8.425000000000099e-05, 8.444499999999897e-05, 8.455599999999952e-05, 8.41249999999974e-05, 8.477800000000063e-05, 8.430600000000274e-05, 8.413900000000044e-05, 8.409700000000173e-05, 8.463900000000094e-05, 8.450000000000124e-05, 8.395799999999856e-05, 8.426400000000056e-05, 8.424999999999752e-05, 8.41110000000013e-05, 8.474999999999802e-05, 8.469499999999922e-05, 8.408399999999816e-05, 8.430600000000274e-05]</msg>
<status status="PASS" starttime="20201112 10:14:03.762" endtime="20201112 10:14:03.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.758" endtime="20201112 10:14:03.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.767" endtime="20201112 10:14:03.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:03.771" endtime="20201112 10:14:03.790"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.769" endtime="20201112 10:14:03.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.766" endtime="20201112 10:14:03.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.395" endtime="20201112 10:14:03.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.395" endtime="20201112 10:14:03.791"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.800" endtime="20201112 10:14:03.820"></status>
</kw>
<msg timestamp="20201112 10:14:03.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.798" endtime="20201112 10:14:03.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:03.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:03.821" endtime="20201112 10:14:03.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.824" endtime="20201112 10:14:03.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.796" endtime="20201112 10:14:03.827"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.794" endtime="20201112 10:14:03.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:03.834" endtime="20201112 10:14:04.120"></status>
</kw>
<msg timestamp="20201112 10:14:04.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:03.832" endtime="20201112 10:14:04.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.124" endtime="20201112 10:14:04.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.133" endtime="20201112 10:14:04.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.830" endtime="20201112 10:14:04.135"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.828" endtime="20201112 10:14:04.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.139" level="INFO">${RESULT} = [{'time': 0.019683444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.980500000000183e-05, 'source_diff': 8.980500000000183e-05}, {'time': 0.019782056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:04.136" endtime="20201112 10:14:04.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:04.153" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:04.140" endtime="20201112 10:14:04.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.157" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 10:14:04.156" endtime="20201112 10:14:04.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.160" level="INFO">VALUE: [8.980500000000183e-05, 8.579199999999773e-05, 8.519500000000318e-05, 8.505600000000002e-05, 8.538799999999874e-05, 8.56530000000015e-05, 8.494399999999999e-05, 8.544400000000049e-05, 8.683299999999797e-05, 8.499999999999827e-05, 8.509699999999926e-05, 8.506900000000012e-05, 8.513900000000144e-05, 8.516700000000058e-05, 8.513899999999797e-05, 8.569499999999675e-05, 8.522299999999886e-05, 8.540200000000178e-05, 8.505600000000002e-05, 8.505500000000055e-05, 8.511099999999883e-05, 8.563900000000194e-05, 8.573599999999945e-05, 8.691699999999886e-05, 8.508299999999969e-05, 8.526400000000156e-05, 8.54310000000004e-05, 8.550000000000224e-05, 8.56530000000015e-05, 8.513900000000144e-05, 8.506999999999959e-05, 8.570800000000031e-05, 8.559799999999923e-05, 8.6847000000001e-05, 8.556899999999715e-05, 8.687500000000015e-05, 8.520799999999981e-05, 8.547199999999963e-05, 8.516700000000058e-05, 8.561099999999933e-05, 8.495799999999956e-05, 8.501400000000131e-05, 8.52920000000007e-05, 8.524999999999852e-05, 8.537500000000212e-05, 8.552699999999844e-05, 8.549999999999877e-05, 8.544400000000049e-05, 8.573600000000292e-05, 8.568100000000065e-05]</msg>
<status status="PASS" starttime="20201112 10:14:04.158" endtime="20201112 10:14:04.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.154" endtime="20201112 10:14:04.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.163" endtime="20201112 10:14:04.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.167" endtime="20201112 10:14:04.186"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.165" endtime="20201112 10:14:04.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.162" endtime="20201112 10:14:04.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.792" endtime="20201112 10:14:04.187"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:03.792" endtime="20201112 10:14:04.187"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.196" endtime="20201112 10:14:04.216"></status>
</kw>
<msg timestamp="20201112 10:14:04.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.194" endtime="20201112 10:14:04.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.218" endtime="20201112 10:14:04.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.220" endtime="20201112 10:14:04.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.192" endtime="20201112 10:14:04.223"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.190" endtime="20201112 10:14:04.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.230" endtime="20201112 10:14:04.517"></status>
</kw>
<msg timestamp="20201112 10:14:04.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.229" endtime="20201112 10:14:04.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019617764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.521" endtime="20201112 10:14:04.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.529" endtime="20201112 10:14:04.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.226" endtime="20201112 10:14:04.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.224" endtime="20201112 10:14:04.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.536" level="INFO">${RESULT} = [{'time': 0.019708639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.087500000000068e-05, 'source_diff': 9.087500000000068e-05}, {'time': 0.019807292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:04.533" endtime="20201112 10:14:04.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:04.549" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:04.537" endtime="20201112 10:14:04.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.554" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 10:14:04.553" endtime="20201112 10:14:04.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.556" level="INFO">VALUE: [9.087500000000068e-05, 8.675000000000002e-05, 8.632000000000084e-05, 8.615299999999854e-05, 8.675000000000002e-05, 8.611099999999983e-05, 8.676300000000012e-05, 8.680499999999883e-05, 8.640199999999931e-05, 8.638899999999922e-05, 8.647200000000063e-05, 8.623599999999995e-05, 8.595800000000056e-05, 8.5944999999997e-05, 8.781999999999887e-05, 8.779199999999973e-05, 8.63059999999978e-05, 8.608399999999669e-05, 8.649999999999977e-05, 8.600000000000274e-05, 8.64860000000002e-05, 8.64860000000002e-05, 8.608299999999722e-05, 8.593000000000142e-05, 8.672200000000088e-05, 8.78189999999994e-05, 8.775000000000102e-05, 8.612500000000287e-05, 8.657000000000109e-05, 8.677799999999916e-05, 8.613900000000244e-05, 8.661100000000033e-05, 8.609700000000026e-05, 8.647199999999716e-05, 8.601399999999884e-05, 8.608300000000069e-05, 8.663899999999947e-05, 8.788899999999725e-05, 8.651399999999934e-05, 8.649999999999977e-05, 8.62920000000017e-05, 8.783300000000244e-05, 8.63470000000005e-05, 8.626399999999909e-05, 8.63050000000018e-05, 8.665199999999956e-05, 8.658299999999772e-05, 8.786200000000105e-05, 8.780499999999983e-05, 8.647200000000063e-05]</msg>
<status status="PASS" starttime="20201112 10:14:04.555" endtime="20201112 10:14:04.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.550" endtime="20201112 10:14:04.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.560" endtime="20201112 10:14:04.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.563" endtime="20201112 10:14:04.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.562" endtime="20201112 10:14:04.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.558" endtime="20201112 10:14:04.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.188" endtime="20201112 10:14:04.584"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.188" endtime="20201112 10:14:04.584"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.593" endtime="20201112 10:14:04.613"></status>
</kw>
<msg timestamp="20201112 10:14:04.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.591" endtime="20201112 10:14:04.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:04.614" endtime="20201112 10:14:04.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.617" endtime="20201112 10:14:04.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.589" endtime="20201112 10:14:04.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.587" endtime="20201112 10:14:04.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.627" endtime="20201112 10:14:04.913"></status>
</kw>
<msg timestamp="20201112 10:14:04.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.625" endtime="20201112 10:14:04.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:04.917" endtime="20201112 10:14:04.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.925" endtime="20201112 10:14:04.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.623" endtime="20201112 10:14:04.928"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.621" endtime="20201112 10:14:04.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:04.932" level="INFO">${RESULT} = [{'time': 0.019814597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.179100000000079e-05, 'source_diff': 9.179100000000079e-05}, {'time': 0.01991525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:04.929" endtime="20201112 10:14:04.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:04.947" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:04.933" endtime="20201112 10:14:04.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.951" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 10:14:04.950" endtime="20201112 10:14:04.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:04.954" level="INFO">VALUE: [9.179100000000079e-05, 8.756899999999915e-05, 8.71669999999991e-05, 8.888800000000224e-05, 8.748700000000068e-05, 8.745900000000154e-05, 8.701399999999984e-05, 8.716599999999963e-05, 8.745799999999859e-05, 8.88190000000004e-05, 8.888799999999877e-05, 8.705499999999908e-05, 8.729199999999923e-05, 8.705499999999908e-05, 8.755499999999958e-05, 8.756899999999915e-05, 8.744500000000197e-05, 8.888899999999825e-05, 8.768099999999918e-05, 8.725000000000052e-05, 8.744500000000197e-05, 8.777800000000016e-05, 8.71250000000004e-05, 8.709700000000126e-05, 8.725000000000052e-05, 8.726400000000009e-05, 8.774999999999755e-05, 8.730499999999933e-05, 8.719399999999877e-05, 8.745799999999859e-05, 8.733300000000194e-05, 8.69310000000019e-05, 8.718100000000215e-05, 8.702799999999941e-05, 8.738900000000022e-05, 8.770799999999884e-05, 8.705500000000255e-05, 8.704199999999898e-05, 8.702800000000288e-05, 8.708300000000169e-05, 8.768099999999918e-05, 8.744399999999902e-05, 8.776400000000059e-05, 8.756999999999862e-05, 8.718099999999868e-05, 8.73470000000015e-05, 8.779199999999973e-05, 8.737499999999718e-05, 8.74449999999985e-05, 8.772199999999841e-05]</msg>
<status status="PASS" starttime="20201112 10:14:04.952" endtime="20201112 10:14:04.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.948" endtime="20201112 10:14:04.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:04.983" endtime="20201112 10:14:04.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:04.987" endtime="20201112 10:14:05.006"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.985" endtime="20201112 10:14:05.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.982" endtime="20201112 10:14:05.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.585" endtime="20201112 10:14:05.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:04.584" endtime="20201112 10:14:05.008"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.016" endtime="20201112 10:14:05.037"></status>
</kw>
<msg timestamp="20201112 10:14:05.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.015" endtime="20201112 10:14:05.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.038" endtime="20201112 10:14:05.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.041" endtime="20201112 10:14:05.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.012" endtime="20201112 10:14:05.044"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.010" endtime="20201112 10:14:05.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.051" endtime="20201112 10:14:05.336"></status>
</kw>
<msg timestamp="20201112 10:14:05.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.049" endtime="20201112 10:14:05.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.340" endtime="20201112 10:14:05.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.348" endtime="20201112 10:14:05.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.047" endtime="20201112 10:14:05.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.045" endtime="20201112 10:14:05.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.355" level="INFO">${RESULT} = [{'time': 0.019723292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.29590000000001e-05, 'source_diff': 9.29590000000001e-05}, {'time': 0.019823944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:05.351" endtime="20201112 10:14:05.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:05.368" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:05.356" endtime="20201112 10:14:05.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.373" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 10:14:05.372" endtime="20201112 10:14:05.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.375" level="INFO">VALUE: [9.29590000000001e-05, 8.847199999999916e-05, 8.837499999999818e-05, 8.867999999999723e-05, 8.826400000000109e-05, 8.800000000000127e-05, 8.83189999999999e-05, 8.876400000000159e-05, 8.980500000000183e-05, 8.827799999999719e-05, 8.856999999999962e-05, 8.833399999999894e-05, 8.818099999999968e-05, 8.979199999999826e-05, 8.833399999999894e-05, 8.840199999999784e-05, 8.870799999999984e-05, 8.838799999999827e-05, 8.834700000000251e-05, 8.840299999999732e-05, 8.801400000000084e-05, 8.88190000000004e-05, 8.808299999999922e-05, 8.80129999999979e-05, 8.833399999999894e-05, 8.862499999999843e-05, 8.826400000000109e-05, 8.88060000000003e-05, 8.830500000000033e-05, 8.979200000000173e-05, 8.86939999999968e-05, 8.876400000000159e-05, 8.858299999999972e-05, 8.812499999999793e-05, 8.873599999999898e-05, 8.850000000000177e-05, 8.872199999999941e-05, 8.813900000000097e-05, 8.983300000000097e-05, 8.801400000000084e-05, 8.877800000000116e-05, 8.851400000000134e-05, 8.809699999999879e-05, 8.850000000000177e-05, 8.819399999999977e-05, 8.988900000000272e-05, 8.990300000000229e-05, 8.827800000000066e-05, 8.806899999999965e-05, 8.794399999999952e-05]</msg>
<status status="PASS" starttime="20201112 10:14:05.374" endtime="20201112 10:14:05.376"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.369" endtime="20201112 10:14:05.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.379" endtime="20201112 10:14:05.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.382" endtime="20201112 10:14:05.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.381" endtime="20201112 10:14:05.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.377" endtime="20201112 10:14:05.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.009" endtime="20201112 10:14:05.403"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.008" endtime="20201112 10:14:05.403"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.412" endtime="20201112 10:14:05.432"></status>
</kw>
<msg timestamp="20201112 10:14:05.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.411" endtime="20201112 10:14:05.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.434" endtime="20201112 10:14:05.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.436" endtime="20201112 10:14:05.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.408" endtime="20201112 10:14:05.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.406" endtime="20201112 10:14:05.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.446" endtime="20201112 10:14:05.733"></status>
</kw>
<msg timestamp="20201112 10:14:05.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019801208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.445" endtime="20201112 10:14:05.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019801208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.738" endtime="20201112 10:14:05.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.746" endtime="20201112 10:14:05.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.442" endtime="20201112 10:14:05.748"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.440" endtime="20201112 10:14:05.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:05.753" level="INFO">${RESULT} = [{'time': 0.019895389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.418099999999874e-05, 'source_diff': 9.418099999999874e-05}, {'time': 0.019997972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:05.749" endtime="20201112 10:14:05.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:05.766" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:05.754" endtime="20201112 10:14:05.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.770" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 10:14:05.769" endtime="20201112 10:14:05.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.773" level="INFO">VALUE: [9.418099999999874e-05, 8.902799999999794e-05, 8.915300000000154e-05, 8.902800000000141e-05, 8.977799999999869e-05, 8.96250000000029e-05, 8.922199999999991e-05, 8.919500000000025e-05, 8.912499999999893e-05, 9.084800000000101e-05, 8.9638999999999e-05, 9.091599999999991e-05, 8.93190000000009e-05, 8.974999999999955e-05, 8.944400000000102e-05, 8.927799999999819e-05, 8.947200000000016e-05, 8.926400000000209e-05, 8.976399999999912e-05, 8.915300000000154e-05, 8.901399999999837e-05, 8.96250000000029e-05, 8.958300000000072e-05, 8.96250000000029e-05, 8.89999999999988e-05, 8.94450000000005e-05, 8.926299999999915e-05, 8.956899999999768e-05, 9.088900000000025e-05, 8.901399999999837e-05, 8.965300000000204e-05, 8.904200000000098e-05, 8.895800000000009e-05, 8.932000000000037e-05, 8.952799999999844e-05, 9.084800000000101e-05, 8.945900000000007e-05, 9.086100000000111e-05, 8.976399999999912e-05, 8.940199999999884e-05, 8.963799999999952e-05, 9.088900000000025e-05, 8.901399999999837e-05, 8.94999999999993e-05, 8.974999999999955e-05, 8.908300000000022e-05, 8.91389999999985e-05, 8.952799999999844e-05, 8.974999999999955e-05, 8.943100000000093e-05]</msg>
<status status="PASS" starttime="20201112 10:14:05.771" endtime="20201112 10:14:05.773"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.767" endtime="20201112 10:14:05.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.776" endtime="20201112 10:14:05.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:05.780" endtime="20201112 10:14:05.799"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.778" endtime="20201112 10:14:05.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.775" endtime="20201112 10:14:05.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.404" endtime="20201112 10:14:05.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.404" endtime="20201112 10:14:05.801"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.809" endtime="20201112 10:14:05.830"></status>
</kw>
<msg timestamp="20201112 10:14:05.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.807" endtime="20201112 10:14:05.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:05.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:05.832" endtime="20201112 10:14:05.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.834" endtime="20201112 10:14:05.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.805" endtime="20201112 10:14:05.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.803" endtime="20201112 10:14:05.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:05.844" endtime="20201112 10:14:06.130"></status>
</kw>
<msg timestamp="20201112 10:14:06.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:05.843" endtime="20201112 10:14:06.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.134" endtime="20201112 10:14:06.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.143" endtime="20201112 10:14:06.144"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.840" endtime="20201112 10:14:06.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.838" endtime="20201112 10:14:06.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.149" level="INFO">${RESULT} = [{'time': 0.019677417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.476400000000065e-05, 'source_diff': 9.476400000000065e-05}, {'time': 0.019781042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:06.146" endtime="20201112 10:14:06.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:06.162" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:06.150" endtime="20201112 10:14:06.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.167" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 10:14:06.166" endtime="20201112 10:14:06.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.169" level="INFO">VALUE: [9.476400000000065e-05, 9.020899999999735e-05, 9.037500000000018e-05, 9.012499999999993e-05, 9.036100000000061e-05, 9.077799999999969e-05, 9.067999999999923e-05, 9.020800000000134e-05, 9.040299999999932e-05, 9.076400000000012e-05, 9.065299999999957e-05, 9.069499999999828e-05, 9.032000000000137e-05, 9.040299999999932e-05, 9.015299999999907e-05, 9.026300000000015e-05, 9.06520000000001e-05, 9.01800000000022e-05, 9.029100000000276e-05, 9.038899999999975e-05, 9.020800000000134e-05, 8.997200000000066e-05, 9.061100000000086e-05, 9.002799999999894e-05, 9.072300000000089e-05, 9.057000000000162e-05, 9.037500000000018e-05, 9.016600000000263e-05, 9.18879999999983e-05, 8.995900000000057e-05, 9.048600000000073e-05, 8.991599999999891e-05, 9.05000000000003e-05, 9.070799999999837e-05, 9.055600000000205e-05, 9.041700000000236e-05, 9.015299999999907e-05, 9.04450000000015e-05, 9.054199999999901e-05, 9.048600000000073e-05, 9.051399999999987e-05, 9.075000000000055e-05, 9.030500000000233e-05, 9.041599999999941e-05, 9.184699999999907e-05, 9.052799999999944e-05, 9.077799999999969e-05, 9.022200000000091e-05, 9.077799999999969e-05, 9.077799999999969e-05]</msg>
<status status="PASS" starttime="20201112 10:14:06.168" endtime="20201112 10:14:06.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.163" endtime="20201112 10:14:06.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.173" endtime="20201112 10:14:06.174"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.176" endtime="20201112 10:14:06.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.175" endtime="20201112 10:14:06.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.171" endtime="20201112 10:14:06.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.801" endtime="20201112 10:14:06.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:05.801" endtime="20201112 10:14:06.197"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.206" endtime="20201112 10:14:06.225"></status>
</kw>
<msg timestamp="20201112 10:14:06.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.204" endtime="20201112 10:14:06.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.227" endtime="20201112 10:14:06.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.230" endtime="20201112 10:14:06.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.202" endtime="20201112 10:14:06.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.200" endtime="20201112 10:14:06.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.240" endtime="20201112 10:14:06.525"></status>
</kw>
<msg timestamp="20201112 10:14:06.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:06.238" endtime="20201112 10:14:06.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019752333, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:06.530" endtime="20201112 10:14:06.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.538" endtime="20201112 10:14:06.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.236" endtime="20201112 10:14:06.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.234" endtime="20201112 10:14:06.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.545" level="INFO">${RESULT} = [{'time': 0.019752333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.633300000000053e-05, 'source_diff': 9.633300000000053e-05}, {'time': 0.019855958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:06.541" endtime="20201112 10:14:06.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:06.559" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:06.546" endtime="20201112 10:14:06.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.563" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 10:14:06.562" endtime="20201112 10:14:06.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.566" level="INFO">VALUE: [9.633300000000053e-05, 9.123600000000148e-05, 9.163799999999805e-05, 9.1332999999999e-05, 9.138900000000075e-05, 9.144399999999955e-05, 9.134699999999857e-05, 9.288899999999878e-05, 9.095799999999862e-05, 9.137500000000118e-05, 9.13199999999989e-05, 9.16939999999998e-05, 9.152800000000044e-05, 9.288899999999878e-05, 9.1332999999999e-05, 9.156899999999968e-05, 9.176400000000112e-05, 9.134700000000204e-05, 9.132000000000237e-05, 9.287499999999921e-05, 9.113899999999703e-05, 9.162500000000143e-05, 9.172199999999894e-05, 9.1639000000001e-05, 9.170900000000232e-05, 9.087499999999721e-05, 9.138900000000075e-05, 9.101299999999743e-05, 9.156899999999968e-05, 9.144399999999955e-05, 9.095799999999862e-05, 9.115300000000007e-05, 9.102799999999994e-05, 9.122199999999844e-05, 9.138900000000075e-05, 9.136200000000108e-05, 9.152800000000044e-05, 9.122200000000191e-05, 9.117999999999973e-05, 9.107000000000212e-05, 9.137500000000118e-05, 9.102700000000047e-05, 9.16939999999998e-05, 9.145800000000259e-05, 9.1639000000001e-05, 9.286099999999964e-05, 9.162499999999796e-05, 9.138900000000075e-05, 9.120900000000182e-05, 9.09589999999981e-05]</msg>
<status status="PASS" starttime="20201112 10:14:06.565" endtime="20201112 10:14:06.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.560" endtime="20201112 10:14:06.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.570" endtime="20201112 10:14:06.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.573" endtime="20201112 10:14:06.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.571" endtime="20201112 10:14:06.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.568" endtime="20201112 10:14:06.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.198" endtime="20201112 10:14:06.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.197" endtime="20201112 10:14:06.594"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.602" endtime="20201112 10:14:06.622"></status>
</kw>
<msg timestamp="20201112 10:14:06.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.601" endtime="20201112 10:14:06.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.624" endtime="20201112 10:14:06.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.626" endtime="20201112 10:14:06.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.598" endtime="20201112 10:14:06.629"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.596" endtime="20201112 10:14:06.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.636" endtime="20201112 10:14:06.921"></status>
</kw>
<msg timestamp="20201112 10:14:06.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.635" endtime="20201112 10:14:06.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:06.926" endtime="20201112 10:14:06.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.934" endtime="20201112 10:14:06.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.632" endtime="20201112 10:14:06.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.630" endtime="20201112 10:14:06.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:06.941" level="INFO">${RESULT} = [{'time': 0.019751236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.683299999999756e-05, 'source_diff': 9.683299999999756e-05}, {'time': 0.019854972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:06.937" endtime="20201112 10:14:06.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:06.954" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:06.942" endtime="20201112 10:14:06.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.958" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 10:14:06.957" endtime="20201112 10:14:06.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:06.961" level="INFO">VALUE: [9.683299999999756e-05, 9.272199999999994e-05, 9.257000000000015e-05, 9.201400000000137e-05, 9.227799999999772e-05, 9.229100000000129e-05, 9.220799999999987e-05, 9.230500000000086e-05, 9.276400000000212e-05, 9.20139999999979e-05, 9.256900000000068e-05, 9.231900000000043e-05, 9.390299999999935e-05, 9.256900000000068e-05, 9.227799999999772e-05, 9.257000000000015e-05, 9.280600000000083e-05, 9.202799999999747e-05, 9.198599999999876e-05, 9.204200000000051e-05, 9.245799999999665e-05, 9.280599999999736e-05, 9.261099999999939e-05, 9.208299999999975e-05, 9.229200000000076e-05, 9.261099999999939e-05, 9.223599999999901e-05, 9.218100000000021e-05, 9.265300000000157e-05, 9.240300000000132e-05, 9.20139999999979e-05, 9.266600000000166e-05, 9.199999999999833e-05, 9.244400000000055e-05, 9.216600000000116e-05, 9.236099999999914e-05, 9.281900000000093e-05, 9.251400000000187e-05, 9.276399999999865e-05, 9.244500000000003e-05, 9.270899999999985e-05, 9.380600000000183e-05, 9.219499999999978e-05, 9.38339999999975e-05, 9.21659999999977e-05, 9.256900000000068e-05, 9.244400000000055e-05, 9.227800000000119e-05, 9.274999999999908e-05, 9.280500000000136e-05]</msg>
<status status="PASS" starttime="20201112 10:14:06.959" endtime="20201112 10:14:06.962"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.955" endtime="20201112 10:14:06.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.964" endtime="20201112 10:14:06.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:06.968" endtime="20201112 10:14:06.987"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.966" endtime="20201112 10:14:06.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.963" endtime="20201112 10:14:06.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.595" endtime="20201112 10:14:06.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.594" endtime="20201112 10:14:06.989"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:06.997" endtime="20201112 10:14:07.018"></status>
</kw>
<msg timestamp="20201112 10:14:07.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:06.996" endtime="20201112 10:14:07.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.019" endtime="20201112 10:14:07.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.022" endtime="20201112 10:14:07.024"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.993" endtime="20201112 10:14:07.025"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.991" endtime="20201112 10:14:07.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.032" endtime="20201112 10:14:07.317"></status>
</kw>
<msg timestamp="20201112 10:14:07.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.030" endtime="20201112 10:14:07.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019777194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.321" endtime="20201112 10:14:07.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.329" endtime="20201112 10:14:07.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.027" endtime="20201112 10:14:07.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.026" endtime="20201112 10:14:07.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.336" level="INFO">${RESULT} = [{'time': 0.019777194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.80410000000001e-05, 'source_diff': 9.80410000000001e-05}, {'time': 0.019880833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:07.332" endtime="20201112 10:14:07.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:07.349" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:07.337" endtime="20201112 10:14:07.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.354" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 10:14:07.353" endtime="20201112 10:14:07.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.356" level="INFO">VALUE: [9.80410000000001e-05, 9.330500000000186e-05, 9.36940000000018e-05, 9.295799999999715e-05, 9.308300000000075e-05, 9.369399999999833e-05, 9.483299999999903e-05, 9.355600000000158e-05, 9.362499999999996e-05, 9.362499999999996e-05, 9.352799999999897e-05, 9.345800000000112e-05, 9.370899999999738e-05, 9.370800000000137e-05, 9.377699999999975e-05, 9.324999999999958e-05, 9.361100000000039e-05, 9.329200000000176e-05, 9.322200000000044e-05, 9.484799999999807e-05, 9.333299999999753e-05, 9.356900000000168e-05, 9.370900000000085e-05, 9.333400000000047e-05, 9.315300000000207e-05, 9.348600000000026e-05, 9.379099999999932e-05, 9.363899999999953e-05, 9.338900000000275e-05, 9.372200000000094e-05, 9.370800000000137e-05, 9.294400000000105e-05, 9.375000000000008e-05, 9.345799999999765e-05, 9.324999999999958e-05, 9.305600000000108e-05, 9.349999999999983e-05, 9.31659999999987e-05, 9.293099999999749e-05, 9.381900000000193e-05, 9.320800000000087e-05, 9.295800000000062e-05, 9.363899999999953e-05, 9.298599999999976e-05, 9.299999999999933e-05, 9.336100000000014e-05, 9.37079999999979e-05, 9.370900000000085e-05, 9.488899999999731e-05, 9.375000000000008e-05]</msg>
<status status="PASS" starttime="20201112 10:14:07.355" endtime="20201112 10:14:07.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.350" endtime="20201112 10:14:07.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.360" endtime="20201112 10:14:07.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.363" endtime="20201112 10:14:07.382"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.362" endtime="20201112 10:14:07.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.358" endtime="20201112 10:14:07.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.990" endtime="20201112 10:14:07.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:06.989" endtime="20201112 10:14:07.384"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.393" endtime="20201112 10:14:07.413"></status>
</kw>
<msg timestamp="20201112 10:14:07.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.391" endtime="20201112 10:14:07.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.414" endtime="20201112 10:14:07.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.417" endtime="20201112 10:14:07.420"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.389" endtime="20201112 10:14:07.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.386" endtime="20201112 10:14:07.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.428" endtime="20201112 10:14:07.713"></status>
</kw>
<msg timestamp="20201112 10:14:07.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019845347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.426" endtime="20201112 10:14:07.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019845347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:07.718" endtime="20201112 10:14:07.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.726" endtime="20201112 10:14:07.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.424" endtime="20201112 10:14:07.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.422" endtime="20201112 10:14:07.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:07.732" level="INFO">${RESULT} = [{'time': 0.019845347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.915299999999766e-05, 'source_diff': 9.915299999999766e-05}, {'time': 0.019951, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 10:14:07.729" endtime="20201112 10:14:07.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:07.746" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:07.733" endtime="20201112 10:14:07.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.750" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 10:14:07.749" endtime="20201112 10:14:07.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.753" level="INFO">VALUE: [9.915299999999766e-05, 9.411100000000089e-05, 9.405599999999861e-05, 9.469499999999881e-05, 9.427799999999972e-05, 9.455600000000258e-05, 9.413900000000003e-05, 9.475000000000108e-05, 9.461099999999792e-05, 9.588799999999884e-05, 9.404099999999957e-05, 9.465200000000062e-05, 9.46530000000001e-05, 9.394399999999858e-05, 9.445799999999865e-05, 9.481899999999946e-05, 9.466699999999967e-05, 9.481999999999893e-05, 9.420900000000135e-05, 9.397300000000067e-05, 9.45140000000004e-05, 9.595800000000015e-05, 9.474999999999761e-05, 9.470800000000237e-05, 9.469399999999933e-05, 9.456899999999921e-05, 9.429199999999929e-05, 9.437500000000071e-05, 9.392999999999901e-05, 9.58469999999996e-05, 9.431999999999843e-05, 9.586099999999917e-05, 9.44729999999977e-05, 9.406999999999818e-05, 9.440200000000037e-05, 9.412500000000046e-05, 9.411099999999742e-05, 9.581900000000046e-05, 9.395800000000162e-05, 9.473600000000151e-05, 9.456899999999921e-05, 9.452799999999997e-05, 9.46530000000001e-05, 9.458399999999825e-05, 9.393100000000196e-05, 9.579200000000079e-05, 9.426400000000015e-05, 9.458300000000225e-05, 9.456899999999921e-05, 9.480499999999989e-05]</msg>
<status status="PASS" starttime="20201112 10:14:07.751" endtime="20201112 10:14:07.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.747" endtime="20201112 10:14:07.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.756" endtime="20201112 10:14:07.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:07.760" endtime="20201112 10:14:07.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.758" endtime="20201112 10:14:07.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.755" endtime="20201112 10:14:07.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.385" endtime="20201112 10:14:07.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.384" endtime="20201112 10:14:07.781"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.789" endtime="20201112 10:14:07.809"></status>
</kw>
<msg timestamp="20201112 10:14:07.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.787" endtime="20201112 10:14:07.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:07.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:07.811" endtime="20201112 10:14:07.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.813" endtime="20201112 10:14:07.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.785" endtime="20201112 10:14:07.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.783" endtime="20201112 10:14:07.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:07.823" endtime="20201112 10:14:08.109"></status>
</kw>
<msg timestamp="20201112 10:14:08.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01972725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:07.822" endtime="20201112 10:14:08.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01972725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019827264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:08.113" endtime="20201112 10:14:08.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.121" endtime="20201112 10:14:08.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.819" endtime="20201112 10:14:08.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.817" endtime="20201112 10:14:08.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.128" level="INFO">${RESULT} = [{'time': 0.019827264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010001399999999896, 'source_diff': 0.00010001399999999896}, {'time': 0.019934889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:08.125" endtime="20201112 10:14:08.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:08.142" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:08.129" endtime="20201112 10:14:08.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.147" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 10:14:08.146" endtime="20201112 10:14:08.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.149" level="INFO">VALUE: [0.00010001399999999896, 9.568100000000024e-05, 9.544499999999956e-05, 9.572300000000242e-05, 9.524999999999811e-05, 9.556999999999968e-05, 9.544499999999956e-05, 9.538899999999781e-05, 9.572200000000294e-05, 9.516599999999723e-05, 9.495799999999915e-05, 9.537499999999824e-05, 9.543099999999999e-05, 9.500000000000133e-05, 9.54859999999988e-05, 9.55270000000015e-05, 9.548699999999827e-05, 9.541699999999695e-05, 9.561100000000239e-05, 9.57079999999999e-05, 9.501399999999743e-05, 9.56530000000011e-05, 9.57079999999999e-05, 9.572199999999947e-05, 9.537499999999824e-05, 9.520800000000287e-05, 9.56530000000011e-05, 9.520899999999888e-05, 9.545899999999913e-05, 9.502800000000047e-05, 9.569499999999981e-05, 9.531899999999996e-05, 9.574999999999861e-05, 9.51660000000007e-05, 9.556900000000021e-05, 9.562499999999849e-05, 9.691699999999845e-05, 9.508300000000275e-05, 9.558299999999978e-05, 9.563899999999806e-05, 9.554200000000054e-05, 9.534800000000204e-05, 9.570899999999938e-05, 9.531999999999943e-05, 9.506999999999918e-05, 9.513899999999756e-05, 9.552800000000097e-05, 9.688899999999931e-05, 9.686100000000017e-05, 9.562499999999849e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.148" endtime="20201112 10:14:08.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.143" endtime="20201112 10:14:08.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.153" endtime="20201112 10:14:08.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.156" endtime="20201112 10:14:08.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.155" endtime="20201112 10:14:08.176"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.151" endtime="20201112 10:14:08.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.781" endtime="20201112 10:14:08.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:07.781" endtime="20201112 10:14:08.177"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.186" endtime="20201112 10:14:08.206"></status>
</kw>
<msg timestamp="20201112 10:14:08.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.184" endtime="20201112 10:14:08.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.207" endtime="20201112 10:14:08.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.210" endtime="20201112 10:14:08.212"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.182" endtime="20201112 10:14:08.213"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.180" endtime="20201112 10:14:08.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.220" endtime="20201112 10:14:08.505"></status>
</kw>
<msg timestamp="20201112 10:14:08.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.218" endtime="20201112 10:14:08.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.510" endtime="20201112 10:14:08.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.518" endtime="20201112 10:14:08.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.216" endtime="20201112 10:14:08.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.214" endtime="20201112 10:14:08.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.525" level="INFO">${RESULT} = [{'time': 0.019714083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001003610000000002, 'source_diff': 0.0001003610000000002}, {'time': 0.01982175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:08.521" endtime="20201112 10:14:08.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:08.538" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:08.526" endtime="20201112 10:14:08.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.543" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 10:14:08.541" endtime="20201112 10:14:08.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.545" level="INFO">VALUE: [0.0001003610000000002, 9.599999999999886e-05, 9.677799999999875e-05, 9.599999999999886e-05, 9.786100000000117e-05, 9.786100000000117e-05, 9.616700000000117e-05, 9.641599999999848e-05, 9.650000000000283e-05, 9.665199999999916e-05, 9.613800000000255e-05, 9.67080000000009e-05, 9.781899999999899e-05, 9.62920000000013e-05, 9.597199999999972e-05, 9.637499999999924e-05, 9.656999999999721e-05, 9.638899999999881e-05, 9.673600000000004e-05, 9.656999999999721e-05, 9.591700000000092e-05, 9.658300000000078e-05, 9.649999999999936e-05, 9.64859999999998e-05, 9.593000000000101e-05, 9.633300000000053e-05, 9.658300000000078e-05, 9.651399999999893e-05, 9.618100000000074e-05, 9.649999999999936e-05, 9.601399999999843e-05, 9.670899999999691e-05, 9.784800000000107e-05, 9.651399999999893e-05, 9.615200000000212e-05, 9.6027000000002e-05, 9.786100000000117e-05, 9.61530000000016e-05, 9.626399999999868e-05, 9.616700000000117e-05, 9.626400000000215e-05, 9.654199999999807e-05, 9.62920000000013e-05, 9.588900000000178e-05, 9.624999999999911e-05, 9.620899999999988e-05, 9.791599999999998e-05, 9.619500000000031e-05, 9.787500000000074e-05, 9.630500000000139e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.544" endtime="20201112 10:14:08.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.539" endtime="20201112 10:14:08.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.549" endtime="20201112 10:14:08.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.552" endtime="20201112 10:14:08.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.551" endtime="20201112 10:14:08.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.547" endtime="20201112 10:14:08.572"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.178" endtime="20201112 10:14:08.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.178" endtime="20201112 10:14:08.573"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.581" endtime="20201112 10:14:08.602"></status>
</kw>
<msg timestamp="20201112 10:14:08.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.580" endtime="20201112 10:14:08.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.604" endtime="20201112 10:14:08.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.606" endtime="20201112 10:14:08.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.577" endtime="20201112 10:14:08.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.575" endtime="20201112 10:14:08.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.616" endtime="20201112 10:14:08.902"></status>
</kw>
<msg timestamp="20201112 10:14:08.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019557208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.615" endtime="20201112 10:14:08.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019557208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:08.906" endtime="20201112 10:14:08.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.914" endtime="20201112 10:14:08.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.612" endtime="20201112 10:14:08.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.611" endtime="20201112 10:14:08.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:08.921" level="INFO">${RESULT} = [{'time': 0.019658556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001013480000000011, 'source_diff': 0.0001013480000000011}, {'time': 0.019768264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:08.918" endtime="20201112 10:14:08.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:08.934" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:08.922" endtime="20201112 10:14:08.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.939" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 10:14:08.938" endtime="20201112 10:14:08.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:08.942" level="INFO">VALUE: [0.0001013480000000011, 9.727799999999925e-05, 9.702800000000247e-05, 9.888900000000131e-05, 9.75279999999995e-05, 9.713899999999956e-05, 9.695900000000063e-05, 9.888899999999784e-05, 9.722200000000097e-05, 9.769500000000181e-05, 9.699999999999986e-05, 9.752700000000003e-05, 9.751399999999993e-05, 9.884699999999913e-05, 9.697200000000072e-05, 9.772200000000147e-05, 9.7027999999999e-05, 9.770799999999843e-05, 9.88340000000025e-05, 9.756899999999874e-05, 9.887500000000174e-05, 9.758400000000125e-05, 9.695900000000063e-05, 9.722300000000045e-05, 9.73059999999984e-05, 9.708299999999781e-05, 9.745800000000165e-05, 9.77080000000019e-05, 9.726399999999968e-05, 9.747200000000122e-05, 9.756900000000221e-05, 9.765299999999963e-05, 9.708300000000128e-05, 9.886199999999817e-05, 9.7027999999999e-05, 9.738899999999981e-05, 9.702699999999953e-05, 9.89020000000014e-05, 9.701399999999943e-05, 9.887499999999827e-05, 9.71530000000026e-05, 9.727799999999925e-05, 9.73059999999984e-05, 9.699999999999986e-05, 9.723600000000054e-05, 9.705600000000161e-05, 9.708400000000075e-05, 9.755600000000211e-05, 9.74019999999999e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201112 10:14:08.940" endtime="20201112 10:14:08.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.935" endtime="20201112 10:14:08.943"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.945" endtime="20201112 10:14:08.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:08.949" endtime="20201112 10:14:08.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.947" endtime="20201112 10:14:08.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.944" endtime="20201112 10:14:08.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.574" endtime="20201112 10:14:08.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.573" endtime="20201112 10:14:08.970"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:08.979" endtime="20201112 10:14:09.001"></status>
</kw>
<msg timestamp="20201112 10:14:09.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:08.978" endtime="20201112 10:14:09.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.002" endtime="20201112 10:14:09.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.005" endtime="20201112 10:14:09.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.975" endtime="20201112 10:14:09.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.973" endtime="20201112 10:14:09.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.015" endtime="20201112 10:14:09.301"></status>
</kw>
<msg timestamp="20201112 10:14:09.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020302292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.013" endtime="20201112 10:14:09.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020302292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.305" endtime="20201112 10:14:09.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.313" endtime="20201112 10:14:09.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.011" endtime="20201112 10:14:09.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.009" endtime="20201112 10:14:09.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.320" level="INFO">${RESULT} = [{'time': 0.020405264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010297199999999979, 'source_diff': 0.00010297199999999979}, {'time': 0.020516903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:09.317" endtime="20201112 10:14:09.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:09.333" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:09.321" endtime="20201112 10:14:09.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.338" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 10:14:09.337" endtime="20201112 10:14:09.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.340" level="INFO">VALUE: [0.00010297199999999979, 9.820899999999841e-05, 9.822300000000145e-05, 9.859800000000182e-05, 9.836100000000167e-05, 9.852699999999756e-05, 9.794399999999912e-05, 9.855599999999964e-05, 9.858299999999931e-05, 9.856899999999974e-05, 9.84020000000009e-05, 9.861099999999845e-05, 9.854200000000007e-05, 9.850000000000136e-05, 9.840300000000038e-05, 9.8028e-05, 9.802700000000053e-05, 9.84999999999979e-05, 9.863900000000106e-05, 9.827800000000025e-05, 9.827800000000025e-05, 9.813900000000056e-05, 9.83470000000021e-05, 9.981900000000099e-05, 9.983300000000056e-05, 9.820900000000188e-05, 9.85280000000005e-05, 9.845899999999866e-05, 9.837499999999777e-05, 9.825000000000111e-05, 9.983300000000056e-05, 9.854200000000007e-05, 9.84860000000018e-05, 9.812500000000099e-05, 9.838899999999734e-05, 9.82080000000024e-05, 9.832000000000243e-05, 9.82219999999985e-05, 9.826400000000068e-05, 9.858399999999878e-05, 9.812499999999752e-05, 9.881899999999999e-05, 9.79020000000004e-05, 9.85280000000005e-05, 9.861100000000192e-05, 9.876400000000118e-05, 9.840300000000038e-05, 9.877799999999728e-05, 9.865300000000063e-05, 9.877799999999728e-05]</msg>
<status status="PASS" starttime="20201112 10:14:09.339" endtime="20201112 10:14:09.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.334" endtime="20201112 10:14:09.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.344" endtime="20201112 10:14:09.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.348" endtime="20201112 10:14:09.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.346" endtime="20201112 10:14:09.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.342" endtime="20201112 10:14:09.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.971" endtime="20201112 10:14:09.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:08.971" endtime="20201112 10:14:09.368"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.377" endtime="20201112 10:14:09.398"></status>
</kw>
<msg timestamp="20201112 10:14:09.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.375" endtime="20201112 10:14:09.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.399" endtime="20201112 10:14:09.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.402" endtime="20201112 10:14:09.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.373" endtime="20201112 10:14:09.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.371" endtime="20201112 10:14:09.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.412" endtime="20201112 10:14:09.696"></status>
</kw>
<msg timestamp="20201112 10:14:09.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.411" endtime="20201112 10:14:09.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.701" endtime="20201112 10:14:09.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.709" endtime="20201112 10:14:09.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.408" endtime="20201112 10:14:09.711"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.406" endtime="20201112 10:14:09.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:09.715" level="INFO">${RESULT} = [{'time': 0.019668403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010394500000000112, 'source_diff': 0.00010394500000000112}, {'time': 0.019779028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:09.712" endtime="20201112 10:14:09.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:09.730" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:09.716" endtime="20201112 10:14:09.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.734" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 10:14:09.733" endtime="20201112 10:14:09.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.737" level="INFO">VALUE: [0.00010394500000000112, 9.895899999999916e-05, 9.901400000000143e-05, 9.915199999999819e-05, 9.944400000000062e-05, 9.926300000000221e-05, 0.00010081899999999852, 9.958300000000031e-05, 9.968100000000077e-05, 0.0001008610000000007, 9.973599999999957e-05, 9.956900000000074e-05, 9.932000000000343e-05, 9.95280000000015e-05, 9.919499999999984e-05, 0.00010087500000000027, 9.937499999999877e-05, 9.9722e-05, 9.933300000000006e-05, 9.938899999999834e-05, 9.894499999999959e-05, 9.919400000000037e-05, 9.95419999999976e-05, 9.915299999999766e-05, 9.936199999999867e-05, 9.901399999999796e-05, 0.00010090299999999941, 9.963900000000206e-05, 9.958300000000031e-05, 0.0001009159999999995, 9.963900000000206e-05, 9.95280000000015e-05, 9.970800000000044e-05, 9.909700000000285e-05, 9.895899999999916e-05, 9.938899999999834e-05, 9.962500000000249e-05, 9.929100000000135e-05, 0.00010083300000000156, 0.00010080499999999895, 9.970799999999697e-05, 9.894400000000012e-05, 9.963899999999859e-05, 9.970800000000044e-05, 9.962499999999902e-05, 9.9028000000001e-05, 9.933300000000006e-05, 9.901399999999796e-05, 9.975000000000261e-05, 9.952799999999803e-05]</msg>
<status status="PASS" starttime="20201112 10:14:09.735" endtime="20201112 10:14:09.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.731" endtime="20201112 10:14:09.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.740" endtime="20201112 10:14:09.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:09.744" endtime="20201112 10:14:09.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.742" endtime="20201112 10:14:09.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.739" endtime="20201112 10:14:09.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.369" endtime="20201112 10:14:09.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.369" endtime="20201112 10:14:09.765"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.773" endtime="20201112 10:14:09.794"></status>
</kw>
<msg timestamp="20201112 10:14:09.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.772" endtime="20201112 10:14:09.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:09.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:09.796" endtime="20201112 10:14:09.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.798" endtime="20201112 10:14:09.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.769" endtime="20201112 10:14:09.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.767" endtime="20201112 10:14:09.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:09.808" endtime="20201112 10:14:10.094"></status>
</kw>
<msg timestamp="20201112 10:14:10.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:09.807" endtime="20201112 10:14:10.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.098" endtime="20201112 10:14:10.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.106" endtime="20201112 10:14:10.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.804" endtime="20201112 10:14:10.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.803" endtime="20201112 10:14:10.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.113" level="INFO">${RESULT} = [{'time': 0.019723569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010467999999999936, 'source_diff': 0.00010467999999999936}, {'time': 0.019837181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:10.110" endtime="20201112 10:14:10.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:10.126" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:10.114" endtime="20201112 10:14:10.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.131" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 10:14:10.130" endtime="20201112 10:14:10.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.133" level="INFO">VALUE: [0.00010467999999999936, 0.00010070899999999744, 0.0001003610000000002, 9.997200000000026e-05, 0.00010009700000000038, 0.00010027799999999878, 0.00010020800000000094, 0.00010048600000000033, 0.00010005600000000114, 0.00010040299999999891, 0.00010184799999999813, 0.00010183399999999856, 0.00010067999999999883, 0.00010037499999999977, 0.00010048600000000033, 0.00010181899999999952, 0.00010038899999999934, 0.00010026399999999921, 0.00010067999999999883, 9.994400000000112e-05, 0.00010002799999999853, 0.00010052799999999903, 0.00010012499999999952, 0.00010037499999999977, 0.00010033400000000053, 0.00010076300000000024, 0.00010069400000000187, 0.00010190200000000094, 0.00010034700000000063, 0.00010030599999999792, 0.00010015299999999866, 0.00010062500000000002, 0.00010001299999999949, 0.00010040299999999891, 0.00010033399999999706, 0.00010183399999999856, 0.0001001800000000018, 0.00010031900000000149, 0.00010066699999999873, 0.00010079099999999938, 0.00010001399999999896, 0.00010034700000000063, 0.00010020800000000094, 0.00010191699999999998, 0.0001002220000000005, 0.00010075000000000014, 0.00010083400000000103, 0.00010191699999999998, 0.00010077799999999928, 9.997200000000026e-05]</msg>
<status status="PASS" starttime="20201112 10:14:10.132" endtime="20201112 10:14:10.167"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.127" endtime="20201112 10:14:10.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.170" endtime="20201112 10:14:10.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.174" endtime="20201112 10:14:10.193"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.172" endtime="20201112 10:14:10.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.168" endtime="20201112 10:14:10.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.766" endtime="20201112 10:14:10.194"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:09.765" endtime="20201112 10:14:10.194"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.203" endtime="20201112 10:14:10.223"></status>
</kw>
<msg timestamp="20201112 10:14:10.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.201" endtime="20201112 10:14:10.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.225" endtime="20201112 10:14:10.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.227" endtime="20201112 10:14:10.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.199" endtime="20201112 10:14:10.230"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.197" endtime="20201112 10:14:10.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.237" endtime="20201112 10:14:10.524"></status>
</kw>
<msg timestamp="20201112 10:14:10.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.236" endtime="20201112 10:14:10.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.528" endtime="20201112 10:14:10.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.536" endtime="20201112 10:14:10.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.233" endtime="20201112 10:14:10.538"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.232" endtime="20201112 10:14:10.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.543" level="INFO">${RESULT} = [{'time': 0.019844833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010545799999999925, 'source_diff': 0.00010545799999999925}, {'time': 0.019956431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:10.540" endtime="20201112 10:14:10.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:10.556" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:10.544" endtime="20201112 10:14:10.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.561" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 10:14:10.560" endtime="20201112 10:14:10.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.563" level="INFO">VALUE: [0.00010545799999999925, 0.00010159800000000135, 0.00010095900000000116, 0.00010131899999999902, 0.00010147199999999829, 0.00010108300000000181, 0.00010106899999999877, 0.00010284699999999966, 0.00010119400000000237, 0.00010176400000000071, 0.00010132000000000196, 0.00010159700000000188, 0.00010119500000000184, 0.00010097199999999779, 0.00010127700000000031, 0.00010108300000000181, 0.00010119400000000237, 0.00010158300000000231, 0.0001010549999999992, 0.00010156899999999927, 0.00010169400000000287, 0.0001011939999999989, 0.00010133300000000206, 0.00010109800000000085, 0.00010286099999999923, 0.00010119499999999837, 0.00010176399999999725, 0.0001013749999999973, 0.00010277700000000181, 0.00010174999999999768, 0.00010119400000000237, 0.00010107000000000171, 0.00010108299999999834, 0.00010113900000000009, 0.00010115299999999966, 0.00010107000000000171, 0.00010140199999999697, 0.00010151400000000046, 0.00010138900000000034, 0.0001011939999999989, 0.00010149999999999743, 0.0001015000000000009, 0.00010163900000000059, 0.00010108399999999781, 0.00010102799999999953, 0.00010108300000000181, 0.00010175000000000115, 0.00010133399999999806, 0.0001010000000000004, 0.0001028749999999988]</msg>
<status status="PASS" starttime="20201112 10:14:10.562" endtime="20201112 10:14:10.564"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.557" endtime="20201112 10:14:10.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.566" endtime="20201112 10:14:10.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.570" endtime="20201112 10:14:10.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.568" endtime="20201112 10:14:10.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.565" endtime="20201112 10:14:10.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.195" endtime="20201112 10:14:10.591"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.195" endtime="20201112 10:14:10.591"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.600" endtime="20201112 10:14:10.620"></status>
</kw>
<msg timestamp="20201112 10:14:10.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.598" endtime="20201112 10:14:10.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.621" endtime="20201112 10:14:10.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.624" endtime="20201112 10:14:10.626"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.595" endtime="20201112 10:14:10.627"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.593" endtime="20201112 10:14:10.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.634" endtime="20201112 10:14:10.918"></status>
</kw>
<msg timestamp="20201112 10:14:10.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019998333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.632" endtime="20201112 10:14:10.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019998333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:10.922" endtime="20201112 10:14:10.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.930" endtime="20201112 10:14:10.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.630" endtime="20201112 10:14:10.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.628" endtime="20201112 10:14:10.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:10.937" level="INFO">${RESULT} = [{'time': 0.019998333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010727699999999937, 'source_diff': 0.00010727699999999937}, {'time': 0.020114028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:10.933" endtime="20201112 10:14:10.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:10.950" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:10.938" endtime="20201112 10:14:10.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.954" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 10:14:10.953" endtime="20201112 10:14:10.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:10.957" level="INFO">VALUE: [0.00010727699999999937, 0.00010263899999999812, 0.00010227799999999732, 0.00010261099999999898, 0.0001038749999999998, 0.00010276400000000172, 0.00010261200000000192, 0.00010248599999999886, 0.00010268000000000083, 0.00010263900000000159, 0.00010258299999999984, 0.00010234699999999916, 0.00010208299999999934, 0.00010247300000000223, 0.00010229200000000035, 0.00010288900000000184, 0.00010197199999999879, 0.00010243100000000005, 0.00010391700000000198, 0.00010211100000000195, 0.00010209699999999891, 0.00010231900000000002, 0.0001025000000000019, 0.0001027359999999991, 0.00010243000000000058, 0.00010197199999999879, 0.00010230599999999992, 0.00010263900000000159, 0.0001020000000000014, 0.00010383400000000056, 0.00010390299999999894, 0.0001025550000000007, 0.00010276299999999877, 0.00010272199999999954, 0.00010276399999999825, 0.00010281900000000052, 0.00010208299999999934, 0.00010202800000000053, 0.00010226400000000122, 0.0001020139999999975, 0.00010191699999999998, 0.00010226400000000122, 0.00010282, 0.00010202700000000106, 0.00010226299999999827, 0.00010276399999999825, 0.00010276399999999825, 0.00010249999999999843, 0.00010195799999999922, 0.00010227800000000078]</msg>
<status status="PASS" starttime="20201112 10:14:10.955" endtime="20201112 10:14:10.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.951" endtime="20201112 10:14:10.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.960" endtime="20201112 10:14:10.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:10.964" endtime="20201112 10:14:10.983"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.962" endtime="20201112 10:14:10.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.959" endtime="20201112 10:14:10.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.592" endtime="20201112 10:14:10.984"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.591" endtime="20201112 10:14:10.985"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:10.993" endtime="20201112 10:14:11.014"></status>
</kw>
<msg timestamp="20201112 10:14:11.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:10.992" endtime="20201112 10:14:11.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.016" endtime="20201112 10:14:11.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.018" endtime="20201112 10:14:11.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.989" endtime="20201112 10:14:11.021"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.987" endtime="20201112 10:14:11.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.028" endtime="20201112 10:14:11.314"></status>
</kw>
<msg timestamp="20201112 10:14:11.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.026" endtime="20201112 10:14:11.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.318" endtime="20201112 10:14:11.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.326" endtime="20201112 10:14:11.327"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.024" endtime="20201112 10:14:11.328"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.022" endtime="20201112 10:14:11.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.332" level="INFO">${RESULT} = [{'time': 0.019834778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010741700000000201, 'source_diff': 0.00010741700000000201}, {'time': 0.019951417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:11.329" endtime="20201112 10:14:11.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:11.347" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:11.333" endtime="20201112 10:14:11.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.351" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 10:14:11.350" endtime="20201112 10:14:11.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.354" level="INFO">VALUE: [0.00010741700000000201, 0.00010307000000000024, 0.0001031940000000009, 0.00010322200000000004, 0.00010374999999999968, 0.00010322200000000004, 0.00010294399999999718, 0.00010491699999999951, 0.00010316700000000123, 0.0001032359999999996, 0.00010369500000000087, 0.0001030559999999972, 0.00010358400000000031, 0.0001033749999999993, 0.00010304100000000163, 0.0001033749999999993, 0.00010334799999999963, 0.00010342999999999811, 0.00010327800000000179, 0.00010295800000000022, 0.00010331900000000102, 0.0001030559999999972, 0.00010355600000000117, 0.00010356900000000127, 0.00010307000000000024, 0.0001048339999999981, 0.00010307000000000024, 0.00010481899999999905, 0.00010316599999999829, 0.0001037079999999975, 0.00010313899999999862, 0.00010297199999999979, 0.00010319500000000037, 0.00010380600000000142, 0.00010381999999999753, 0.00010362499999999955, 0.00010322200000000004, 0.00010294400000000065, 0.00010337500000000277, 0.00010337500000000277, 0.00010358300000000084, 0.00010326400000000222, 0.00010327799999999832, 0.00010344399999999768, 0.00010329200000000135, 0.0001037079999999975, 0.00010333400000000006, 0.000103513999999999, 0.00010490299999999994, 0.00010302699999999859]</msg>
<status status="PASS" starttime="20201112 10:14:11.352" endtime="20201112 10:14:11.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.348" endtime="20201112 10:14:11.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.357" endtime="20201112 10:14:11.358"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.361" endtime="20201112 10:14:11.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.359" endtime="20201112 10:14:11.380"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.355" endtime="20201112 10:14:11.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.985" endtime="20201112 10:14:11.381"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:10.985" endtime="20201112 10:14:11.381"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.390" endtime="20201112 10:14:11.410"></status>
</kw>
<msg timestamp="20201112 10:14:11.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.388" endtime="20201112 10:14:11.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.412" endtime="20201112 10:14:11.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.414" endtime="20201112 10:14:11.417"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.386" endtime="20201112 10:14:11.418"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.384" endtime="20201112 10:14:11.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.424" endtime="20201112 10:14:11.710"></status>
</kw>
<msg timestamp="20201112 10:14:11.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.423" endtime="20201112 10:14:11.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.714" endtime="20201112 10:14:11.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.722" endtime="20201112 10:14:11.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.420" endtime="20201112 10:14:11.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.419" endtime="20201112 10:14:11.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:11.729" level="INFO">${RESULT} = [{'time': 0.019708125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010843099999999911, 'source_diff': 0.00010843099999999911}, {'time': 0.01982575, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:11.725" endtime="20201112 10:14:11.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:11.742" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:11.730" endtime="20201112 10:14:11.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.746" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 10:14:11.745" endtime="20201112 10:14:11.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.749" level="INFO">VALUE: [0.00010843099999999911, 0.00010447200000000129, 0.00010476400000000025, 0.00010438899999999987, 0.000104514, 0.00010433400000000106, 0.00010402799999999907, 0.00010586099999999876, 0.00010427799999999932, 0.00010426399999999975, 0.00010402800000000254, 0.0001058889999999979, 0.00010468099999999883, 0.00010458300000000184, 0.00010462500000000055, 0.00010584699999999919, 0.0001043750000000003, 0.00010584799999999867, 0.00010580599999999996, 0.00010591600000000104, 0.00010395800000000122, 0.00010445900000000119, 0.000104416000000003, 0.00010469399999999893, 0.00010408299999999787, 0.00010436099999999726, 0.000104207999999998, 0.00010440299999999944, 0.00010420900000000094, 0.00010470900000000144, 0.00010591600000000104, 0.0001040689999999983, 0.00010450000000000043, 0.00010445799999999825, 0.00010452799999999957, 0.0001040139999999995, 0.00010402799999999907, 0.0001058750000000018, 0.00010438899999999987, 0.00010591700000000051, 0.00010399999999999993, 0.0001058620000000017, 0.00010468099999999883, 0.0001047079999999985, 0.00010479099999999991, 0.00010458300000000184, 0.00010412500000000005, 0.00010458300000000184, 0.00010418099999999833, 0.00010452799999999957]</msg>
<status status="PASS" starttime="20201112 10:14:11.747" endtime="20201112 10:14:11.750"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.743" endtime="20201112 10:14:11.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.752" endtime="20201112 10:14:11.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:11.756" endtime="20201112 10:14:11.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.754" endtime="20201112 10:14:11.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.751" endtime="20201112 10:14:11.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.382" endtime="20201112 10:14:11.776"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.382" endtime="20201112 10:14:11.776"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.785" endtime="20201112 10:14:11.805"></status>
</kw>
<msg timestamp="20201112 10:14:11.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.784" endtime="20201112 10:14:11.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:11.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:11.806" endtime="20201112 10:14:11.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.809" endtime="20201112 10:14:11.811"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.781" endtime="20201112 10:14:11.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.779" endtime="20201112 10:14:11.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:11.819" endtime="20201112 10:14:12.105"></status>
</kw>
<msg timestamp="20201112 10:14:12.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:11.817" endtime="20201112 10:14:12.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.110" endtime="20201112 10:14:12.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.118" endtime="20201112 10:14:12.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.815" endtime="20201112 10:14:12.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.813" endtime="20201112 10:14:12.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.124" level="INFO">${RESULT} = [{'time': 0.019785861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000109902999999998, 'source_diff': 0.000109902999999998}, {'time': 0.019905556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:12.121" endtime="20201112 10:14:12.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:12.137" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:12.125" endtime="20201112 10:14:12.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.142" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 10:14:12.141" endtime="20201112 10:14:12.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.144" level="INFO">VALUE: [0.000109902999999998, 0.00010566700000000026, 0.00010691699999999804, 0.00010502800000000007, 0.00010527799999999685, 0.00010551300000000152, 0.00010520800000000247, 0.00010538799999999793, 0.00010522299999999804, 0.00010550000000000143, 0.00010495799999999875, 0.00010687499999999933, 0.00010580599999999996, 0.00010529199999999989, 0.0001068340000000001, 0.00010495900000000169, 0.00010581999999999953, 0.00010683300000000062, 0.00010552700000000109, 0.00010512500000000105, 0.00010530499999999998, 0.00010563900000000112, 0.0001057079999999995, 0.0001050689999999993, 0.00010536099999999826, 0.00010558399999999885, 0.00010563900000000112, 0.0001057499999999982, 0.00010581999999999953, 0.00010526400000000075, 0.00010555500000000023, 0.00010573599999999864, 0.00010497200000000179, 0.00010579200000000039, 0.00010552800000000057, 0.00010522200000000204, 0.00010573599999999864, 0.000105514000000001, 0.00010500000000000093, 0.00010494499999999865, 0.00010550000000000143, 0.000106901999999999, 0.00010556900000000327, 0.00010683300000000062, 0.00010519399999999943, 0.00010691700000000151, 0.00010687499999999933, 0.0001050140000000005, 0.00010494500000000212, 0.00010558400000000231]</msg>
<status status="PASS" starttime="20201112 10:14:12.143" endtime="20201112 10:14:12.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.138" endtime="20201112 10:14:12.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.148" endtime="20201112 10:14:12.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.151" endtime="20201112 10:14:12.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.150" endtime="20201112 10:14:12.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.146" endtime="20201112 10:14:12.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.777" endtime="20201112 10:14:12.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:11.777" endtime="20201112 10:14:12.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:13:32.323" endtime="20201112 10:14:12.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.177" endtime="20201112 10:14:12.196"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.175" endtime="20201112 10:14:12.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.174" endtime="20201112 10:14:12.197"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:13:32.244" endtime="20201112 10:14:12.198" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.205" endtime="20201112 10:14:12.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.204" endtime="20201112 10:14:12.225"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.239" endtime="20201112 10:14:12.260"></status>
</kw>
<msg timestamp="20201112 10:14:12.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.238" endtime="20201112 10:14:12.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.263" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.262" endtime="20201112 10:14:12.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.266" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:12.264" endtime="20201112 10:14:12.266"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:12.235" endtime="20201112 10:14:12.267"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:12.233" endtime="20201112 10:14:12.268"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.231" endtime="20201112 10:14:12.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:12.272" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:12.271" endtime="20201112 10:14:12.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.269" endtime="20201112 10:14:12.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.230" endtime="20201112 10:14:12.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.229" endtime="20201112 10:14:12.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.273" endtime="20201112 10:14:12.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.228" endtime="20201112 10:14:12.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.226" endtime="20201112 10:14:12.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.202" endtime="20201112 10:14:12.276"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.286" endtime="20201112 10:14:12.304"></status>
</kw>
<msg timestamp="20201112 10:14:12.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.285" endtime="20201112 10:14:12.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.306" endtime="20201112 10:14:12.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.308" endtime="20201112 10:14:12.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.282" endtime="20201112 10:14:12.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.280" endtime="20201112 10:14:12.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.318" endtime="20201112 10:14:12.609"></status>
</kw>
<msg timestamp="20201112 10:14:12.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07139525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071418306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:12.316" endtime="20201112 10:14:12.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07139525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071418306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:12.613" endtime="20201112 10:14:12.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.621" endtime="20201112 10:14:12.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.313" endtime="20201112 10:14:12.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.311" endtime="20201112 10:14:12.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:12.628" level="INFO">${RESULT} = [{'time': 0.071418306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3056000000007404e-05, 'source_diff': 2.3056000000007404e-05}, {'time': 0.071427875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:12.624" endtime="20201112 10:14:12.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:12.641" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:12.629" endtime="20201112 10:14:12.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.645" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 10:14:12.644" endtime="20201112 10:14:12.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.648" level="INFO">VALUE: [2.3056000000007404e-05, 5.125000000008595e-06, 5.596999999996077e-06, 5.097000000009455e-06, 5.096999999995577e-06, 5.596999999996077e-06, 5.08400000000242e-06, 5.098000000008929e-06, 5.083000000002946e-06, 5.097000000009455e-06, 5.58400000000292e-06, 5.5829999999895685e-06, 5.111000000002086e-06, 5.570000000010289e-06, 5.097000000009455e-06, 6.083000000003946e-06, 5.097000000009455e-06, 5.08400000000242e-06, 5.152000000008261e-06, 5.096999999995577e-06, 5.611000000002586e-06, 5.08400000000242e-06, 5.096999999995577e-06, 5.179999999993523e-06, 5.554999999990429e-06, 5.652000000008761e-06, 5.624999999995217e-06, 5.596999999996077e-06, 5.139000000001226e-06, 5.111000000002086e-06, 5.527000000005167e-06, 5.096999999995577e-06, 6.098000000009929e-06, 5.597999999995551e-06, 5.611000000002586e-06, 5.096999999995577e-06, 6.083000000003946e-06, 5.597999999995551e-06, 6.125000000009595e-06, 5.097999999995051e-06, 5.596999999996077e-06, 5.096999999995577e-06, 5.596999999996077e-06, 5.598000000009429e-06, 6.083999999989542e-06, 5.110999999988208e-06, 5.097000000009455e-06, 5.611000000002586e-06, 5.597999999995551e-06, 6.097999999996051e-06]</msg>
<status status="PASS" starttime="20201112 10:14:12.646" endtime="20201112 10:14:12.648"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.642" endtime="20201112 10:14:12.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.651" endtime="20201112 10:14:12.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:12.654" endtime="20201112 10:14:12.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.653" endtime="20201112 10:14:12.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.649" endtime="20201112 10:14:12.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.278" endtime="20201112 10:14:12.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.277" endtime="20201112 10:14:12.675"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.684" endtime="20201112 10:14:12.702"></status>
</kw>
<msg timestamp="20201112 10:14:12.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.683" endtime="20201112 10:14:12.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:12.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:12.704" endtime="20201112 10:14:12.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.706" endtime="20201112 10:14:12.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.680" endtime="20201112 10:14:12.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.678" endtime="20201112 10:14:12.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:12.715" endtime="20201112 10:14:12.999"></status>
</kw>
<msg timestamp="20201112 10:14:13.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020032153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:12.713" endtime="20201112 10:14:13.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020032153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.003" endtime="20201112 10:14:13.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.012" endtime="20201112 10:14:13.013"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.711" endtime="20201112 10:14:13.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.709" endtime="20201112 10:14:13.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.018" level="INFO">${RESULT} = [{'time': 0.020032153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.611000000000117e-06, 'source_diff': 6.611000000000117e-06}, {'time': 0.020043417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:13.015" endtime="20201112 10:14:13.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.032" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:13.019" endtime="20201112 10:14:13.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.036" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.035" endtime="20201112 10:14:13.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.039" level="INFO">VALUE: [6.611000000000117e-06, 7.138999999999757e-06, 6.110999999999617e-06, 6.556000000001311e-06, 6.1389999999987566e-06, 6.611000000000117e-06, 6.556000000001311e-06, 6.653000000002296e-06, 6.083000000000477e-06, 6.597000000000547e-06, 6.597000000000547e-06, 7.111000000000617e-06, 6.097000000000047e-06, 6.5980000000000205e-06, 6.584000000000451e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.611000000000117e-06, 6.6119999999995904e-06, 6.584000000000451e-06, 6.638999999999257e-06, 6.110999999999617e-06, 6.1529999999983265e-06, 6.597000000000547e-06, 6.110999999999617e-06, 6.597000000000547e-06, 7.0969999999975775e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.6669999999983964e-06, 6.597000000000547e-06, 7.097000000001047e-06, 6.597000000000547e-06, 6.0979999999995205e-06, 6.083000000000477e-06, 6.124999999999187e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.597000000000547e-06, 6.096999999996577e-06, 6.097000000000047e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.111000000003086e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.097000000000047e-06, 6.09800000000299e-06]</msg>
<status status="PASS" starttime="20201112 10:14:13.037" endtime="20201112 10:14:13.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.033" endtime="20201112 10:14:13.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.042" endtime="20201112 10:14:13.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.045" endtime="20201112 10:14:13.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.044" endtime="20201112 10:14:13.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.040" endtime="20201112 10:14:13.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.676" endtime="20201112 10:14:13.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.676" endtime="20201112 10:14:13.066"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.075" endtime="20201112 10:14:13.092"></status>
</kw>
<msg timestamp="20201112 10:14:13.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.073" endtime="20201112 10:14:13.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.094" endtime="20201112 10:14:13.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.096" endtime="20201112 10:14:13.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.071" endtime="20201112 10:14:13.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.069" endtime="20201112 10:14:13.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.105" endtime="20201112 10:14:13.391"></status>
</kw>
<msg timestamp="20201112 10:14:13.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.104" endtime="20201112 10:14:13.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.395" endtime="20201112 10:14:13.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.403" endtime="20201112 10:14:13.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.101" endtime="20201112 10:14:13.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.100" endtime="20201112 10:14:13.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.410" level="INFO">${RESULT} = [{'time': 0.019730292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.598000000001021e-06, 'source_diff': 7.598000000001021e-06}, {'time': 0.019741347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:13.407" endtime="20201112 10:14:13.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.423" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:13.411" endtime="20201112 10:14:13.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.428" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.427" endtime="20201112 10:14:13.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.430" level="INFO">VALUE: [7.598000000001021e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.583000000001977e-06, 7.111000000000617e-06, 7.110999999997147e-06, 7.1120000000000905e-06, 7.0969999999975775e-06, 7.5969999999980775e-06, 8.110999999998147e-06, 7.0980000000005206e-06, 7.611000000001117e-06, 7.111000000000617e-06, 7.0969999999975775e-06, 7.625000000000687e-06, 7.597999999997551e-06, 7.165999999999423e-06, 7.138000000000283e-06, 7.5419999999992715e-06, 7.083000000001477e-06, 7.097000000001047e-06, 7.6109999999976474e-06, 7.097000000001047e-06, 7.0980000000005206e-06, 7.181000000001936e-06, 7.5969999999980775e-06, 7.6109999999976474e-06, 7.611000000001117e-06, 7.569000000002407e-06, 7.6109999999976474e-06, 7.597000000001547e-06, 7.111000000000617e-06, 7.583999999997981e-06, 7.0980000000005206e-06, 7.084000000000951e-06, 7.070000000001381e-06, 7.0969999999975775e-06, 7.111000000000617e-06, 8.082999999999008e-06, 7.540999999999798e-06, 7.5969999999980775e-06, 7.097000000001047e-06, 7.0980000000005206e-06, 7.583000000001977e-06, 7.0969999999975775e-06, 7.568999999998938e-06, 7.180000000002462e-06, 7.666999999999397e-06, 7.5419999999992715e-06, 7.583000000001977e-06]</msg>
<status status="PASS" starttime="20201112 10:14:13.429" endtime="20201112 10:14:13.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.424" endtime="20201112 10:14:13.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.434" endtime="20201112 10:14:13.435"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.437" endtime="20201112 10:14:13.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.436" endtime="20201112 10:14:13.457"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.432" endtime="20201112 10:14:13.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.067" endtime="20201112 10:14:13.458"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.067" endtime="20201112 10:14:13.458"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.467" endtime="20201112 10:14:13.483"></status>
</kw>
<msg timestamp="20201112 10:14:13.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.465" endtime="20201112 10:14:13.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.484" endtime="20201112 10:14:13.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.487" endtime="20201112 10:14:13.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.463" endtime="20201112 10:14:13.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.461" endtime="20201112 10:14:13.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.496" endtime="20201112 10:14:13.783"></status>
</kw>
<msg timestamp="20201112 10:14:13.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019590389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019598444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.494" endtime="20201112 10:14:13.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019590389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019598444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.788" endtime="20201112 10:14:13.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.796" endtime="20201112 10:14:13.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.492" endtime="20201112 10:14:13.798"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.490" endtime="20201112 10:14:13.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:13.803" level="INFO">${RESULT} = [{'time': 0.019598444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.054999999999868e-06, 'source_diff': 8.054999999999868e-06}, {'time': 0.019609375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:13.799" endtime="20201112 10:14:13.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:13.816" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:13.804" endtime="20201112 10:14:13.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.821" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 10:14:13.820" endtime="20201112 10:14:13.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.823" level="INFO">VALUE: [8.054999999999868e-06, 8.096999999998578e-06, 8.611999999998121e-06, 8.125000000001187e-06, 8.582999999999508e-06, 8.568999999999938e-06, 9.096999999999578e-06, 8.082999999999008e-06, 8.611000000002117e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.096999999998578e-06, 8.068999999999438e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.083000000002477e-06, 8.083000000002477e-06, 8.082999999999008e-06, 9.056000000000342e-06, 8.597999999998551e-06, 8.111000000001617e-06, 8.097000000002047e-06, 8.570000000002881e-06, 8.08400000000195e-06, 8.596999999999078e-06, 8.652000000001353e-06, 8.569999999999411e-06, 8.054999999999868e-06, 8.125000000001187e-06, 8.054999999999868e-06, 8.597999999998551e-06, 8.166999999999897e-06, 8.611000000002117e-06, 9.110999999999148e-06, 8.110999999998147e-06, 9.083000000000008e-06, 8.09800000000152e-06, 8.611000000002117e-06, 8.666000000000923e-06, 8.110999999998147e-06, 8.555000000000368e-06, 8.597999999998551e-06, 8.08400000000195e-06, 8.639000000001257e-06, 8.611000000002117e-06, 8.59800000000202e-06, 8.582999999999508e-06, 8.597999999998551e-06, 8.555999999999842e-06, 8.611000000002117e-06]</msg>
<status status="PASS" starttime="20201112 10:14:13.822" endtime="20201112 10:14:13.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.817" endtime="20201112 10:14:13.824"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.827" endtime="20201112 10:14:13.828"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:13.830" endtime="20201112 10:14:13.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.829" endtime="20201112 10:14:13.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.825" endtime="20201112 10:14:13.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.459" endtime="20201112 10:14:13.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.459" endtime="20201112 10:14:13.851"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.860" endtime="20201112 10:14:13.876"></status>
</kw>
<msg timestamp="20201112 10:14:13.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.858" endtime="20201112 10:14:13.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:13.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:13.877" endtime="20201112 10:14:13.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.880" endtime="20201112 10:14:13.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.856" endtime="20201112 10:14:13.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.853" endtime="20201112 10:14:13.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:13.889" endtime="20201112 10:14:14.174"></status>
</kw>
<msg timestamp="20201112 10:14:14.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019860153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:13.887" endtime="20201112 10:14:14.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019860153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.178" endtime="20201112 10:14:14.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.186" endtime="20201112 10:14:14.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.885" endtime="20201112 10:14:14.188"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.883" endtime="20201112 10:14:14.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.193" level="INFO">${RESULT} = [{'time': 0.019869806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.01988275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:14.190" endtime="20201112 10:14:14.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:14.206" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:14.194" endtime="20201112 10:14:14.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.211" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 10:14:14.210" endtime="20201112 10:14:14.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.213" level="INFO">VALUE: [9.653000000001827e-06, 1.0097000000000578e-05, 9.09800000000252e-06, 1.0098000000000051e-05, 1.0096999999997108e-05, 9.542000000001272e-06, 9.110999999999148e-06, 9.111000000002617e-06, 9.597999999999551e-06, 9.111000000002617e-06, 9.610999999999648e-06, 9.041000000001298e-06, 9.110999999999148e-06, 9.138000000002283e-06, 9.639000000002257e-06, 1.0084000000000481e-05, 9.597000000000078e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.083999999999481e-06, 9.083000000000008e-06, 9.110999999999148e-06, 9.138999999998287e-06, 9.097999999999051e-06, 9.096999999999578e-06, 9.110999999999148e-06, 9.583000000000508e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.583999999999981e-06, 9.125000000002187e-06, 9.597000000000078e-06, 9.110999999999148e-06, 9.596999999996608e-06, 1.0084000000000481e-05, 9.61200000000259e-06, 9.110999999999148e-06, 9.111000000002617e-06, 9.597000000000078e-06, 9.610999999999648e-06, 1.0138999999999287e-05, 9.096999999999578e-06, 9.597000000000078e-06, 9.083000000000008e-06, 9.137999999998814e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.097999999999051e-06, 9.110999999999148e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201112 10:14:14.212" endtime="20201112 10:14:14.214"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.207" endtime="20201112 10:14:14.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.217" endtime="20201112 10:14:14.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.220" endtime="20201112 10:14:14.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.219" endtime="20201112 10:14:14.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.215" endtime="20201112 10:14:14.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.852" endtime="20201112 10:14:14.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:13.851" endtime="20201112 10:14:14.241"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.250" endtime="20201112 10:14:14.265"></status>
</kw>
<msg timestamp="20201112 10:14:14.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.248" endtime="20201112 10:14:14.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.267" endtime="20201112 10:14:14.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.269" endtime="20201112 10:14:14.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.245" endtime="20201112 10:14:14.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.243" endtime="20201112 10:14:14.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.278" endtime="20201112 10:14:14.564"></status>
</kw>
<msg timestamp="20201112 10:14:14.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.276" endtime="20201112 10:14:14.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.568" endtime="20201112 10:14:14.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.576" endtime="20201112 10:14:14.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.274" endtime="20201112 10:14:14.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.272" endtime="20201112 10:14:14.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:14.583" level="INFO">${RESULT} = [{'time': 0.019809014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.019822875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:14.580" endtime="20201112 10:14:14.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:14.641" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:14.584" endtime="20201112 10:14:14.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.646" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 10:14:14.645" endtime="20201112 10:14:14.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.648" level="INFO">VALUE: [1.0597000000001078e-05, 1.0611000000000648e-05, 1.0582999999998038e-05, 1.0625000000000218e-05, 1.0111000000000148e-05, 1.0597000000001078e-05, 1.0611000000000648e-05, 1.0542000000002272e-05, 1.0098000000000051e-05, 1.0624999999996748e-05, 1.0097000000000578e-05, 1.0124999999999718e-05, 1.0610999999997178e-05, 1.0612000000000121e-05, 1.0570000000001412e-05, 1.0597000000001078e-05, 1.0611000000000648e-05, 1.0083000000001008e-05, 1.0679999999999024e-05, 1.0027999999998732e-05, 1.0041999999998302e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.1096999999998108e-05, 1.0111999999999621e-05, 1.0111999999999621e-05, 1.0597000000001078e-05, 1.0097000000000578e-05, 1.0554999999998899e-05, 1.0124999999999718e-05, 1.0612000000000121e-05, 1.0568999999998469e-05, 1.0611000000000648e-05, 1.0596999999997608e-05, 1.0111000000000148e-05, 1.0611000000000648e-05, 1.0041999999998302e-05, 1.0097000000000578e-05, 1.0597000000001078e-05, 1.0625000000000218e-05, 1.0598000000000551e-05, 1.0598000000000551e-05, 1.0082999999997538e-05, 1.0597000000001078e-05, 1.0651999999999884e-05, 1.0597000000001078e-05, 1.0098000000000051e-05, 1.0611000000000648e-05, 1.0096999999997108e-05, 1.0597000000001078e-05]</msg>
<status status="PASS" starttime="20201112 10:14:14.647" endtime="20201112 10:14:14.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.642" endtime="20201112 10:14:14.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.652" endtime="20201112 10:14:14.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:14.655" endtime="20201112 10:14:14.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.654" endtime="20201112 10:14:14.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.650" endtime="20201112 10:14:14.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.242" endtime="20201112 10:14:14.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.241" endtime="20201112 10:14:14.676"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.685" endtime="20201112 10:14:14.703"></status>
</kw>
<msg timestamp="20201112 10:14:14.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.684" endtime="20201112 10:14:14.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:14.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:14.704" endtime="20201112 10:14:14.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.707" endtime="20201112 10:14:14.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.680" endtime="20201112 10:14:14.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.678" endtime="20201112 10:14:14.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:14.716" endtime="20201112 10:14:15.002"></status>
</kw>
<msg timestamp="20201112 10:14:15.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020316264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:14.714" endtime="20201112 10:14:15.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020316264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.007" endtime="20201112 10:14:15.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.015" endtime="20201112 10:14:15.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.712" endtime="20201112 10:14:15.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.710" endtime="20201112 10:14:15.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.022" level="INFO">${RESULT} = [{'time': 0.020327833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.020344, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:15.018" endtime="20201112 10:14:15.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.035" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:15.023" endtime="20201112 10:14:15.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.040" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.039" endtime="20201112 10:14:15.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.042" level="INFO">VALUE: [1.1568999999999469e-05, 1.1611000000001648e-05, 1.1583000000002508e-05, 1.2110999999998678e-05, 1.1582999999999039e-05, 1.1625000000001218e-05, 1.1083000000002008e-05, 1.2097999999998582e-05, 1.1652000000000884e-05, 1.1583999999998512e-05, 1.1166999999999427e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1598000000001552e-05, 1.1583999999998512e-05, 1.1596999999998608e-05, 1.1528000000000233e-05, 1.1625000000001218e-05, 1.1554999999999899e-05, 1.1097000000001578e-05, 1.1096999999998108e-05, 1.1666999999999927e-05, 1.1639000000000788e-05, 1.1598000000001552e-05, 1.1125000000000718e-05, 1.1165999999999954e-05, 1.1084000000001482e-05, 1.1651999999997414e-05, 1.1583000000002508e-05, 1.1096999999998108e-05, 1.1610999999998178e-05, 1.1597000000002078e-05, 1.1125000000000718e-05, 1.1028000000003202e-05, 1.1569999999998942e-05, 1.1111999999997152e-05, 1.2096999999999108e-05, 1.2111000000002148e-05, 1.1596999999998608e-05, 1.1083000000002008e-05, 1.1111000000001148e-05, 1.1096999999998108e-05, 1.1111000000001148e-05, 1.2082999999999539e-05, 1.1096999999998108e-05, 1.1541999999999802e-05, 1.1597999999998082e-05, 1.1596999999998608e-05, 1.1097000000001578e-05, 1.1068999999998969e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.041" endtime="20201112 10:14:15.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.036" endtime="20201112 10:14:15.043"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.046" endtime="20201112 10:14:15.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.049" endtime="20201112 10:14:15.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.047" endtime="20201112 10:14:15.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.044" endtime="20201112 10:14:15.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.677" endtime="20201112 10:14:15.070"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:14.676" endtime="20201112 10:14:15.070"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.079" endtime="20201112 10:14:15.097"></status>
</kw>
<msg timestamp="20201112 10:14:15.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.077" endtime="20201112 10:14:15.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.098" endtime="20201112 10:14:15.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.101" endtime="20201112 10:14:15.102"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.074" endtime="20201112 10:14:15.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.072" endtime="20201112 10:14:15.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.110" endtime="20201112 10:14:15.395"></status>
</kw>
<msg timestamp="20201112 10:14:15.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020496028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.108" endtime="20201112 10:14:15.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020496028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.399" endtime="20201112 10:14:15.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.407" endtime="20201112 10:14:15.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.106" endtime="20201112 10:14:15.410"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.104" endtime="20201112 10:14:15.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.414" level="INFO">${RESULT} = [{'time': 0.020508625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2596999999999609e-05, 'source_diff': 1.2596999999999609e-05}, {'time': 0.020525694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:15.411" endtime="20201112 10:14:15.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.427" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:15.415" endtime="20201112 10:14:15.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.432" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.431" endtime="20201112 10:14:15.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.434" level="INFO">VALUE: [1.2596999999999609e-05, 1.2111000000002148e-05, 1.2598000000002552e-05, 1.2569999999999942e-05, 1.2651999999998415e-05, 1.2111000000002148e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.2110999999998678e-05, 1.2097000000002578e-05, 1.2610999999999178e-05, 1.2082999999999539e-05, 1.2083999999999012e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2110999999998678e-05, 1.2598000000002552e-05, 1.2597999999999082e-05, 1.2111000000002148e-05, 1.2055999999999872e-05, 1.2096999999999108e-05, 1.2583000000000039e-05, 1.2611000000002648e-05, 1.2610999999999178e-05, 1.2110999999998678e-05, 1.2014000000001163e-05, 1.2097000000002578e-05, 1.2638999999998318e-05, 1.2138999999997818e-05, 1.2596999999999609e-05, 1.2625000000002218e-05, 1.2596999999999609e-05, 1.2652999999997888e-05, 1.3165999999998484e-05, 1.2097999999998582e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2541000000001329e-05, 1.2097000000002578e-05, 1.2610999999999178e-05, 1.2597999999999082e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2624999999998748e-05, 1.2125000000001718e-05, 1.2583000000000039e-05, 1.2110999999998678e-05, 1.2596999999999609e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.433" endtime="20201112 10:14:15.439"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.428" endtime="20201112 10:14:15.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.442" endtime="20201112 10:14:15.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.446" endtime="20201112 10:14:15.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.444" endtime="20201112 10:14:15.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.441" endtime="20201112 10:14:15.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.071" endtime="20201112 10:14:15.466"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.070" endtime="20201112 10:14:15.466"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.475" endtime="20201112 10:14:15.493"></status>
</kw>
<msg timestamp="20201112 10:14:15.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.474" endtime="20201112 10:14:15.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.494" endtime="20201112 10:14:15.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.497" endtime="20201112 10:14:15.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.471" endtime="20201112 10:14:15.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.469" endtime="20201112 10:14:15.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.506" endtime="20201112 10:14:15.792"></status>
</kw>
<msg timestamp="20201112 10:14:15.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.505" endtime="20201112 10:14:15.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.796" endtime="20201112 10:14:15.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.805" endtime="20201112 10:14:15.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.502" endtime="20201112 10:14:15.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.500" endtime="20201112 10:14:15.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:15.812" level="INFO">${RESULT} = [{'time': 0.020526014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.020542042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:15.808" endtime="20201112 10:14:15.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:15.825" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:15.813" endtime="20201112 10:14:15.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.829" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 10:14:15.828" endtime="20201112 10:14:15.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.832" level="INFO">VALUE: [1.3624999999999748e-05, 1.3598000000000082e-05, 1.3583000000001039e-05, 1.3097000000000109e-05, 1.3624999999999748e-05, 1.3083000000000539e-05, 1.3097999999999582e-05, 1.3111999999999152e-05, 1.3583999999997043e-05, 1.4165999999999485e-05, 1.3597000000000609e-05, 1.3056000000000872e-05, 1.3042000000001303e-05, 1.3583000000001039e-05, 1.30689999999975e-05, 1.3069000000000969e-05, 1.3097000000000109e-05, 1.3598000000000082e-05, 1.3097000000000109e-05, 1.3611999999999652e-05, 1.3083000000000539e-05, 1.3097000000000109e-05, 1.3583000000001039e-05, 1.3110999999999678e-05, 1.3569999999997473e-05, 1.355499999999843e-05, 1.3625000000003218e-05, 1.4138999999999818e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3584000000000512e-05, 1.3097000000000109e-05, 1.3097000000000109e-05, 1.3139000000002288e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3097999999999582e-05, 1.3596999999997139e-05, 1.3110999999999678e-05, 1.3624999999999748e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.3596999999997139e-05, 1.3097000000000109e-05, 1.3583000000001039e-05, 1.3583000000001039e-05, 1.3624999999999748e-05, 1.358299999999757e-05, 1.3110999999999678e-05, 1.3597000000000609e-05]</msg>
<status status="PASS" starttime="20201112 10:14:15.830" endtime="20201112 10:14:15.833"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.826" endtime="20201112 10:14:15.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.835" endtime="20201112 10:14:15.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:15.839" endtime="20201112 10:14:15.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.837" endtime="20201112 10:14:15.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.834" endtime="20201112 10:14:15.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.467" endtime="20201112 10:14:15.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.467" endtime="20201112 10:14:15.860"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.868" endtime="20201112 10:14:15.886"></status>
</kw>
<msg timestamp="20201112 10:14:15.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.867" endtime="20201112 10:14:15.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:15.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:15.887" endtime="20201112 10:14:15.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.890" endtime="20201112 10:14:15.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.864" endtime="20201112 10:14:15.892"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.862" endtime="20201112 10:14:15.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:15.899" endtime="20201112 10:14:16.184"></status>
</kw>
<msg timestamp="20201112 10:14:16.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:15.897" endtime="20201112 10:14:16.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.188" endtime="20201112 10:14:16.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.197" endtime="20201112 10:14:16.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.895" endtime="20201112 10:14:16.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.893" endtime="20201112 10:14:16.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.203" level="INFO">${RESULT} = [{'time': 0.019807931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4612000000000652e-05, 'source_diff': 1.4612000000000652e-05}, {'time': 0.019827333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:16.200" endtime="20201112 10:14:16.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:16.218" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:16.204" endtime="20201112 10:14:16.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.222" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 10:14:16.221" endtime="20201112 10:14:16.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.225" level="INFO">VALUE: [1.4612000000000652e-05, 1.511099999999821e-05, 1.461099999999771e-05, 1.4611000000001179e-05, 1.459699999999814e-05, 1.4111000000000679e-05, 1.4097999999997113e-05, 1.4598000000001082e-05, 1.4597000000001609e-05, 1.4597000000001609e-05, 1.4125000000000248e-05, 1.4583999999998043e-05, 1.4110999999997209e-05, 1.4639000000000318e-05, 1.5097000000002109e-05, 1.4597000000001609e-05, 1.4583000000002039e-05, 1.4111000000000679e-05, 1.409699999999764e-05, 1.4665999999999985e-05, 1.458299999999857e-05, 1.509699999999864e-05, 1.4111000000000679e-05, 1.4652999999999888e-05, 1.408299999999807e-05, 1.4042000000002303e-05, 1.4125000000000248e-05, 1.408299999999807e-05, 1.4598000000001082e-05, 1.4098000000000582e-05, 1.4124999999996779e-05, 1.4625000000000749e-05, 1.4666999999999458e-05, 1.4583000000002039e-05, 1.4611000000001179e-05, 1.405499999999893e-05, 1.4597000000001609e-05, 1.4097000000001109e-05, 1.4597000000001609e-05, 1.4111000000000679e-05, 1.4584000000001512e-05, 1.4098000000000582e-05, 1.511099999999821e-05, 1.458299999999857e-05, 1.4597000000001609e-05, 1.461099999999771e-05, 1.4597000000001609e-05, 1.4597000000001609e-05, 1.459699999999814e-05, 1.4153000000002858e-05]</msg>
<status status="PASS" starttime="20201112 10:14:16.223" endtime="20201112 10:14:16.225"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.219" endtime="20201112 10:14:16.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.228" endtime="20201112 10:14:16.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.232" endtime="20201112 10:14:16.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.230" endtime="20201112 10:14:16.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.227" endtime="20201112 10:14:16.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.861" endtime="20201112 10:14:16.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:15.860" endtime="20201112 10:14:16.252"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.261" endtime="20201112 10:14:16.279"></status>
</kw>
<msg timestamp="20201112 10:14:16.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.260" endtime="20201112 10:14:16.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.280" endtime="20201112 10:14:16.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.282" endtime="20201112 10:14:16.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.257" endtime="20201112 10:14:16.285"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.255" endtime="20201112 10:14:16.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.292" endtime="20201112 10:14:16.578"></status>
</kw>
<msg timestamp="20201112 10:14:16.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.291" endtime="20201112 10:14:16.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:16.582" endtime="20201112 10:14:16.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.590" endtime="20201112 10:14:16.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.288" endtime="20201112 10:14:16.592"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.287" endtime="20201112 10:14:16.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.597" level="INFO">${RESULT} = [{'time': 0.019944972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.504099999999689e-05, 'source_diff': 1.504099999999689e-05}, {'time': 0.019963208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:16.594" endtime="20201112 10:14:16.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:16.610" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:16.598" endtime="20201112 10:14:16.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.615" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 10:14:16.614" endtime="20201112 10:14:16.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.617" level="INFO">VALUE: [1.504099999999689e-05, 1.5680000000000555e-05, 1.5597999999998613e-05, 1.559700000000261e-05, 1.561099999999871e-05, 1.559699999999914e-05, 1.509699999999864e-05, 1.561099999999871e-05, 1.609699999999964e-05, 1.5611999999998183e-05, 1.5069000000002969e-05, 1.561099999999871e-05, 1.559699999999914e-05, 1.508299999999907e-05, 1.562499999999828e-05, 1.6069999999999973e-05, 1.5098000000001582e-05, 1.561100000000218e-05, 1.5569e-05, 1.561099999999871e-05, 1.5153000000000388e-05, 1.565299999999742e-05, 1.509699999999864e-05, 1.561100000000218e-05, 1.5111000000001679e-05, 1.559699999999914e-05, 1.6098000000002582e-05, 1.5153000000000388e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.5097000000002109e-05, 1.509699999999864e-05, 1.6111999999998683e-05, 1.509699999999864e-05, 1.611099999999921e-05, 1.508299999999907e-05, 1.559699999999914e-05, 1.511099999999821e-05, 1.508299999999907e-05, 1.563900000000132e-05, 1.612499999999878e-05, 1.5583999999999043e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.5583999999999043e-05, 1.5069999999998973e-05, 1.562499999999828e-05, 1.508299999999907e-05, 1.509699999999864e-05, 1.5597999999998613e-05]</msg>
<status status="PASS" starttime="20201112 10:14:16.616" endtime="20201112 10:14:16.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.611" endtime="20201112 10:14:16.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.621" endtime="20201112 10:14:16.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:16.624" endtime="20201112 10:14:16.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.623" endtime="20201112 10:14:16.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.619" endtime="20201112 10:14:16.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.253" endtime="20201112 10:14:16.645"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.253" endtime="20201112 10:14:16.645"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.654" endtime="20201112 10:14:16.671"></status>
</kw>
<msg timestamp="20201112 10:14:16.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.652" endtime="20201112 10:14:16.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:16.673" endtime="20201112 10:14:16.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.675" endtime="20201112 10:14:16.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.650" endtime="20201112 10:14:16.678"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.647" endtime="20201112 10:14:16.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.685" endtime="20201112 10:14:16.971"></status>
</kw>
<msg timestamp="20201112 10:14:16.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:16.684" endtime="20201112 10:14:16.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:16.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:16.975" endtime="20201112 10:14:16.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:16.983" endtime="20201112 10:14:16.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.681" endtime="20201112 10:14:16.985"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.679" endtime="20201112 10:14:16.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:16.990" level="INFO">${RESULT} = [{'time': 0.019822556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6556000000000903e-05, 'source_diff': 1.6556000000000903e-05}, {'time': 0.019843472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:16.987" endtime="20201112 10:14:16.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.003" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:16.991" endtime="20201112 10:14:17.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.008" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.007" endtime="20201112 10:14:17.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.010" level="INFO">VALUE: [1.6556000000000903e-05, 1.658300000000057e-05, 1.663900000000232e-05, 1.6666000000001985e-05, 1.608300000000007e-05, 1.6611999999999183e-05, 1.661099999999971e-05, 1.609699999999964e-05, 1.611099999999921e-05, 1.659700000000014e-05, 1.662499999999928e-05, 1.6611999999999183e-05, 1.658300000000057e-05, 1.612499999999878e-05, 1.612500000000225e-05, 1.612500000000225e-05, 1.6179999999997585e-05, 1.609699999999964e-05, 1.6542000000001333e-05, 1.662500000000275e-05, 1.6069999999999973e-05, 1.658300000000057e-05, 1.615299999999792e-05, 1.6069999999999973e-05, 1.6042000000000833e-05, 1.711100000000021e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.659700000000014e-05, 1.6694000000001125e-05, 1.6069999999999973e-05, 1.608300000000007e-05, 1.6056000000000403e-05, 1.661100000000318e-05, 1.611099999999921e-05, 1.659700000000014e-05, 1.6584000000000043e-05, 1.609699999999964e-05, 1.668100000000103e-05, 1.609699999999964e-05, 1.6611999999999183e-05, 1.711100000000021e-05, 1.659700000000014e-05, 1.609699999999964e-05, 1.612500000000225e-05, 1.661099999999971e-05, 1.7111999999999683e-05, 1.6597999999999613e-05, 1.661099999999971e-05, 1.609699999999964e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.009" endtime="20201112 10:14:17.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.004" endtime="20201112 10:14:17.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.014" endtime="20201112 10:14:17.015"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.017" endtime="20201112 10:14:17.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.016" endtime="20201112 10:14:17.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.012" endtime="20201112 10:14:17.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.646" endtime="20201112 10:14:17.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:16.645" endtime="20201112 10:14:17.038"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.047" endtime="20201112 10:14:17.064"></status>
</kw>
<msg timestamp="20201112 10:14:17.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.045" endtime="20201112 10:14:17.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.066" endtime="20201112 10:14:17.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.068" endtime="20201112 10:14:17.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.043" endtime="20201112 10:14:17.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.041" endtime="20201112 10:14:17.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.078" endtime="20201112 10:14:17.364"></status>
</kw>
<msg timestamp="20201112 10:14:17.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019757194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.076" endtime="20201112 10:14:17.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019757194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.368" endtime="20201112 10:14:17.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.376" endtime="20201112 10:14:17.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.074" endtime="20201112 10:14:17.378"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.072" endtime="20201112 10:14:17.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.383" level="INFO">${RESULT} = [{'time': 0.019774292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7098000000000113e-05, 'source_diff': 1.7098000000000113e-05}, {'time': 0.019797417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:17.379" endtime="20201112 10:14:17.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.396" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:17.384" endtime="20201112 10:14:17.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.400" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.399" endtime="20201112 10:14:17.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.403" level="INFO">VALUE: [1.7098000000000113e-05, 1.7098000000000113e-05, 1.713899999999935e-05, 1.70829999999976e-05, 1.709700000000064e-05, 1.75829999999981e-05, 1.7111999999999683e-05, 1.711100000000021e-05, 1.759699999999767e-05, 1.763899999999985e-05, 1.7098000000000113e-05, 1.762500000000028e-05, 1.7598000000000613e-05, 1.709700000000064e-05, 1.709699999999717e-05, 1.702700000000279e-05, 1.761099999999724e-05, 1.711100000000021e-05, 1.759699999999767e-05, 1.709699999999717e-05, 1.709699999999717e-05, 1.758300000000157e-05, 1.7583999999997574e-05, 1.754099999999939e-05, 1.8041999999999364e-05, 1.763899999999985e-05, 1.75829999999981e-05, 1.705500000000193e-05, 1.765299999999942e-05, 1.759700000000114e-05, 1.7612000000000183e-05, 1.759700000000114e-05, 1.709699999999717e-05, 1.759700000000114e-05, 1.7098000000000113e-05, 1.709699999999717e-05, 1.709700000000064e-05, 1.762500000000028e-05, 1.709700000000064e-05, 1.7541999999998864e-05, 1.761100000000071e-05, 1.708300000000107e-05, 1.762500000000028e-05, 1.708300000000107e-05, 1.761100000000071e-05, 1.708300000000107e-05, 1.713899999999935e-05, 1.7598000000000613e-05, 1.8097999999997644e-05, 1.759700000000114e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.402" endtime="20201112 10:14:17.404"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.397" endtime="20201112 10:14:17.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.406" endtime="20201112 10:14:17.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.410" endtime="20201112 10:14:17.429"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.409" endtime="20201112 10:14:17.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.405" endtime="20201112 10:14:17.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.039" endtime="20201112 10:14:17.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.039" endtime="20201112 10:14:17.431"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.439" endtime="20201112 10:14:17.457"></status>
</kw>
<msg timestamp="20201112 10:14:17.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.438" endtime="20201112 10:14:17.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.458" endtime="20201112 10:14:17.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.461" endtime="20201112 10:14:17.463"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.435" endtime="20201112 10:14:17.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.433" endtime="20201112 10:14:17.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.471" endtime="20201112 10:14:17.756"></status>
</kw>
<msg timestamp="20201112 10:14:17.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.469" endtime="20201112 10:14:17.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.761" endtime="20201112 10:14:17.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.769" endtime="20201112 10:14:17.770"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.467" endtime="20201112 10:14:17.771"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.465" endtime="20201112 10:14:17.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:17.775" level="INFO">${RESULT} = [{'time': 0.019856333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.861100000000171e-05, 'source_diff': 1.861100000000171e-05}, {'time': 0.019879139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:17.772" endtime="20201112 10:14:17.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:17.790" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:17.776" endtime="20201112 10:14:17.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.794" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 10:14:17.793" endtime="20201112 10:14:17.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.796" level="INFO">VALUE: [1.861100000000171e-05, 1.8569999999999004e-05, 1.859699999999867e-05, 1.859699999999867e-05, 1.8069999999998504e-05, 1.811099999999774e-05, 1.809699999999817e-05, 1.859700000000214e-05, 1.811100000000121e-05, 1.813900000000035e-05, 1.863900000000085e-05, 1.859699999999867e-05, 1.861100000000171e-05, 1.809699999999817e-05, 1.861100000000171e-05, 1.8598000000001613e-05, 1.859700000000214e-05, 1.862500000000128e-05, 1.8069999999998504e-05, 1.812499999999731e-05, 1.861099999999824e-05, 1.8112000000000683e-05, 1.861099999999824e-05, 1.85829999999991e-05, 1.813900000000035e-05, 1.859699999999867e-05, 1.809700000000164e-05, 1.8098000000001113e-05, 1.9084000000002543e-05, 1.812500000000078e-05, 1.9041999999996895e-05, 1.809700000000164e-05, 1.812500000000078e-05, 1.8598000000001613e-05, 1.861100000000171e-05, 1.809699999999817e-05, 1.813900000000035e-05, 1.861099999999824e-05, 1.811100000000121e-05, 1.862499999999781e-05, 1.85829999999991e-05, 1.809700000000164e-05, 1.859699999999867e-05, 1.859700000000214e-05, 1.806899999999903e-05, 1.8584000000002043e-05, 1.811100000000121e-05, 1.85829999999991e-05, 1.812500000000078e-05, 1.861100000000171e-05]</msg>
<status status="PASS" starttime="20201112 10:14:17.795" endtime="20201112 10:14:17.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.790" endtime="20201112 10:14:17.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.800" endtime="20201112 10:14:17.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:17.803" endtime="20201112 10:14:17.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.802" endtime="20201112 10:14:17.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.798" endtime="20201112 10:14:17.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.432" endtime="20201112 10:14:17.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.431" endtime="20201112 10:14:17.824"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.833" endtime="20201112 10:14:17.851"></status>
</kw>
<msg timestamp="20201112 10:14:17.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.831" endtime="20201112 10:14:17.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:17.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:17.852" endtime="20201112 10:14:17.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.855" endtime="20201112 10:14:17.857"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.829" endtime="20201112 10:14:17.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.827" endtime="20201112 10:14:17.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:17.865" endtime="20201112 10:14:18.150"></status>
</kw>
<msg timestamp="20201112 10:14:18.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019879681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:17.863" endtime="20201112 10:14:18.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019879681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019899292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.154" endtime="20201112 10:14:18.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.163" endtime="20201112 10:14:18.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.861" endtime="20201112 10:14:18.165"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.859" endtime="20201112 10:14:18.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.169" level="INFO">${RESULT} = [{'time': 0.019899292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.961099999999924e-05, 'source_diff': 1.961099999999924e-05}, {'time': 0.019921347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:18.166" endtime="20201112 10:14:18.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.183" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:18.170" endtime="20201112 10:14:18.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.187" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.186" endtime="20201112 10:14:18.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.190" level="INFO">VALUE: [1.961099999999924e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.90829999999996e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.911100000000221e-05, 1.909699999999917e-05, 1.9152000000001446e-05, 1.956900000000053e-05, 1.9598000000002613e-05, 1.961099999999924e-05, 1.956900000000053e-05, 2.00830000000006e-05, 1.909700000000264e-05, 1.9598000000002613e-05, 2.009700000000017e-05, 1.959699999999967e-05, 1.909700000000264e-05, 1.909700000000264e-05, 1.909700000000264e-05, 1.9694000000000655e-05, 1.9597999999999144e-05, 1.962500000000228e-05, 1.909699999999917e-05, 1.9083999999999074e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.9597999999999144e-05, 1.912500000000178e-05, 1.911099999999874e-05, 1.912499999999831e-05, 1.911099999999874e-05, 1.961099999999924e-05, 2.011099999999974e-05, 1.911099999999874e-05, 1.9583999999999574e-05, 1.959699999999967e-05, 1.9042000000000364e-05, 1.9098000000002113e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.956900000000053e-05, 1.909699999999917e-05, 1.913900000000135e-05, 1.9097999999998644e-05, 1.961099999999924e-05, 1.959699999999967e-05, 2.011099999999974e-05]</msg>
<status status="PASS" starttime="20201112 10:14:18.188" endtime="20201112 10:14:18.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.183" endtime="20201112 10:14:18.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.193" endtime="20201112 10:14:18.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.196" endtime="20201112 10:14:18.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.195" endtime="20201112 10:14:18.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.191" endtime="20201112 10:14:18.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.825" endtime="20201112 10:14:18.217"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:17.825" endtime="20201112 10:14:18.217"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.226" endtime="20201112 10:14:18.241"></status>
</kw>
<msg timestamp="20201112 10:14:18.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.224" endtime="20201112 10:14:18.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.243" endtime="20201112 10:14:18.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.245" endtime="20201112 10:14:18.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.222" endtime="20201112 10:14:18.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.220" endtime="20201112 10:14:18.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.255" endtime="20201112 10:14:18.542"></status>
</kw>
<msg timestamp="20201112 10:14:18.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.254" endtime="20201112 10:14:18.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.546" endtime="20201112 10:14:18.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.554" endtime="20201112 10:14:18.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.251" endtime="20201112 10:14:18.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.250" endtime="20201112 10:14:18.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.561" level="INFO">${RESULT} = [{'time': 0.019781236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.006900000000103e-05, 'source_diff': 2.006900000000103e-05}, {'time': 0.019807139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:18.557" endtime="20201112 10:14:18.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.574" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:18.562" endtime="20201112 10:14:18.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.579" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.578" endtime="20201112 10:14:18.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.582" level="INFO">VALUE: [2.006900000000103e-05, 2.063900000000285e-05, 2.009700000000017e-05, 2.00830000000006e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.061099999999677e-05, 2.011099999999974e-05, 2.059700000000067e-05, 2.011099999999974e-05, 2.059700000000067e-05, 2.112500000000031e-05, 2.0598000000000144e-05, 2.0097999999999644e-05, 2.05830000000011e-05, 2.012499999999931e-05, 2.011099999999974e-05, 2.00830000000006e-05, 2.0097999999999644e-05, 2.062499999999981e-05, 2.059700000000067e-05, 2.0583999999997105e-05, 2.009700000000017e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.0611999999999714e-05, 2.062499999999981e-05, 2.061099999999677e-05, 2.011099999999974e-05, 2.0542000000001864e-05, 2.062499999999981e-05, 2.0097999999999644e-05, 2.063899999999938e-05, 2.059700000000067e-05, 2.009700000000017e-05, 2.059700000000067e-05, 2.00830000000006e-05, 2.015299999999845e-05, 2.016700000000149e-05, 2.008299999999713e-05, 2.009700000000017e-05, 2.05830000000011e-05, 2.011099999999974e-05, 2.0111999999999214e-05, 2.011099999999974e-05, 2.1098000000000644e-05, 2.006900000000103e-05, 2.10969999999977e-05, 2.011099999999974e-05, 2.016699999999802e-05]</msg>
<status status="PASS" starttime="20201112 10:14:18.580" endtime="20201112 10:14:18.583"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.575" endtime="20201112 10:14:18.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.586" endtime="20201112 10:14:18.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.590" endtime="20201112 10:14:18.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.588" endtime="20201112 10:14:18.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.584" endtime="20201112 10:14:18.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.218" endtime="20201112 10:14:18.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.218" endtime="20201112 10:14:18.610"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.619" endtime="20201112 10:14:18.637"></status>
</kw>
<msg timestamp="20201112 10:14:18.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.618" endtime="20201112 10:14:18.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:18.638" endtime="20201112 10:14:18.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.641" endtime="20201112 10:14:18.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.615" endtime="20201112 10:14:18.644"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.613" endtime="20201112 10:14:18.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.650" endtime="20201112 10:14:18.936"></status>
</kw>
<msg timestamp="20201112 10:14:18.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.649" endtime="20201112 10:14:18.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:18.941" endtime="20201112 10:14:18.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.949" endtime="20201112 10:14:18.950"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.646" endtime="20201112 10:14:18.951"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.645" endtime="20201112 10:14:18.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:18.955" level="INFO">${RESULT} = [{'time': 0.019983667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1098000000000644e-05, 'source_diff': 2.1098000000000644e-05}, {'time': 0.020008667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:18.952" endtime="20201112 10:14:18.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:18.969" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:18.956" endtime="20201112 10:14:18.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.973" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 10:14:18.972" endtime="20201112 10:14:18.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:18.976" level="INFO">VALUE: [2.1098000000000644e-05, 2.1098000000000644e-05, 2.111100000000074e-05, 2.162500000000081e-05, 2.159700000000167e-05, 2.108299999999813e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.109700000000117e-05, 2.20969999999987e-05, 2.212500000000131e-05, 2.1612000000000714e-05, 2.158299999999863e-05, 2.116699999999902e-05, 2.10969999999977e-05, 2.161100000000124e-05, 2.109700000000117e-05, 2.15969999999982e-05, 2.1597999999997675e-05, 2.112500000000031e-05, 2.159700000000167e-05, 2.159700000000167e-05, 2.105499999999899e-05, 2.1584000000001574e-05, 2.1584000000001574e-05, 2.159700000000167e-05, 2.111100000000074e-05, 2.15969999999982e-05, 2.111100000000074e-05, 2.106900000000203e-05, 2.211100000000174e-05, 2.162500000000081e-05, 2.158299999999863e-05, 2.109700000000117e-05, 2.10969999999977e-05, 2.1070000000001504e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.211099999999827e-05, 2.209700000000217e-05, 2.158299999999863e-05, 2.1180000000002586e-05, 2.1597999999997675e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.161099999999777e-05, 2.159700000000167e-05, 2.1083999999997605e-05, 2.1527999999999825e-05, 2.108299999999813e-05]</msg>
<status status="PASS" starttime="20201112 10:14:18.974" endtime="20201112 10:14:18.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.970" endtime="20201112 10:14:18.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:18.979" endtime="20201112 10:14:18.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:18.983" endtime="20201112 10:14:19.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.981" endtime="20201112 10:14:19.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.978" endtime="20201112 10:14:19.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.611" endtime="20201112 10:14:19.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:18.611" endtime="20201112 10:14:19.004"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.012" endtime="20201112 10:14:19.031"></status>
</kw>
<msg timestamp="20201112 10:14:19.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.011" endtime="20201112 10:14:19.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.032" endtime="20201112 10:14:19.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.035" endtime="20201112 10:14:19.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.008" endtime="20201112 10:14:19.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.006" endtime="20201112 10:14:19.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.044" endtime="20201112 10:14:19.329"></status>
</kw>
<msg timestamp="20201112 10:14:19.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020072167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.043" endtime="20201112 10:14:19.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020072167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.333" endtime="20201112 10:14:19.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.341" endtime="20201112 10:14:19.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.040" endtime="20201112 10:14:19.343"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.039" endtime="20201112 10:14:19.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.348" level="INFO">${RESULT} = [{'time': 0.020094764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.259700000000267e-05, 'source_diff': 2.259700000000267e-05}, {'time': 0.020120708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:19.344" endtime="20201112 10:14:19.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.362" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:19.349" endtime="20201112 10:14:19.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.366" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.365" endtime="20201112 10:14:19.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.369" level="INFO">VALUE: [2.259700000000267e-05, 2.211100000000174e-05, 2.2055999999999465e-05, 2.209700000000217e-05, 2.315300000000145e-05, 2.211100000000174e-05, 2.2598000000002144e-05, 2.20969999999987e-05, 2.209700000000217e-05, 2.2569999999999535e-05, 2.263900000000138e-05, 2.20969999999987e-05, 2.211100000000174e-05, 2.25969999999992e-05, 2.20830000000026e-05, 2.25969999999992e-05, 2.25830000000031e-05, 2.2055999999999465e-05, 2.25969999999992e-05, 2.261099999999877e-05, 2.261099999999877e-05, 2.261099999999877e-05, 2.306900000000056e-05, 2.2584000000002574e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.211099999999827e-05, 2.209700000000217e-05, 2.25969999999992e-05, 2.2083999999998605e-05, 2.308300000000013e-05, 2.3082999999996662e-05, 2.2152000000000976e-05, 2.262499999999834e-05, 2.2541999999996926e-05, 2.2098000000001644e-05, 2.2665999999997577e-05, 2.258299999999963e-05, 2.258299999999963e-05, 2.2041999999999895e-05, 2.259700000000267e-05, 2.2597999999998675e-05, 2.311099999999927e-05, 2.20969999999987e-05, 2.209700000000217e-05, 2.211100000000174e-05, 2.2084000000002074e-05, 2.213900000000088e-05, 2.211100000000174e-05, 2.25969999999992e-05]</msg>
<status status="PASS" starttime="20201112 10:14:19.367" endtime="20201112 10:14:19.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.363" endtime="20201112 10:14:19.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.372" endtime="20201112 10:14:19.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.376" endtime="20201112 10:14:19.395"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.374" endtime="20201112 10:14:19.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.371" endtime="20201112 10:14:19.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.004" endtime="20201112 10:14:19.396"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.004" endtime="20201112 10:14:19.397"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.405" endtime="20201112 10:14:19.423"></status>
</kw>
<msg timestamp="20201112 10:14:19.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.404" endtime="20201112 10:14:19.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.425" endtime="20201112 10:14:19.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.427" endtime="20201112 10:14:19.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.401" endtime="20201112 10:14:19.430"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.399" endtime="20201112 10:14:19.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.437" endtime="20201112 10:14:19.722"></status>
</kw>
<msg timestamp="20201112 10:14:19.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.436" endtime="20201112 10:14:19.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.726" endtime="20201112 10:14:19.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.734" endtime="20201112 10:14:19.736"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.433" endtime="20201112 10:14:19.737"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.431" endtime="20201112 10:14:19.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:19.741" level="INFO">${RESULT} = [{'time': 0.019805014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.35970000000002e-05, 'source_diff': 2.35970000000002e-05}, {'time': 0.019834319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:19.738" endtime="20201112 10:14:19.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:19.754" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:19.742" endtime="20201112 10:14:19.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.759" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 10:14:19.758" endtime="20201112 10:14:19.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.761" level="INFO">VALUE: [2.35970000000002e-05, 2.361099999999977e-05, 2.35970000000002e-05, 2.311099999999927e-05, 2.3028000000001325e-05, 2.311099999999927e-05, 2.361099999999977e-05, 2.308300000000013e-05, 2.365299999999848e-05, 2.35970000000002e-05, 2.30969999999997e-05, 2.35970000000002e-05, 2.412499999999984e-05, 2.30969999999997e-05, 2.408300000000113e-05, 2.312499999999884e-05, 2.30969999999997e-05, 2.311100000000274e-05, 2.3582999999997162e-05, 2.361099999999977e-05, 2.35970000000002e-05, 2.3111999999998745e-05, 2.309700000000317e-05, 2.311099999999927e-05, 2.362499999999934e-05, 2.30969999999997e-05, 2.361099999999977e-05, 2.361099999999977e-05, 2.311099999999927e-05, 2.3097999999999175e-05, 2.361099999999977e-05, 2.3596999999996732e-05, 2.311100000000274e-05, 2.309700000000317e-05, 2.3028000000001325e-05, 2.361099999999977e-05, 2.313900000000188e-05, 2.311100000000274e-05, 2.358300000000063e-05, 2.311100000000274e-05, 2.35970000000002e-05, 2.3554999999998022e-05, 2.3042000000000895e-05, 2.308300000000013e-05, 2.3554999999998022e-05, 2.308300000000013e-05, 2.35970000000002e-05, 2.3098000000002644e-05, 2.3597999999999675e-05, 2.312499999999884e-05]</msg>
<status status="PASS" starttime="20201112 10:14:19.760" endtime="20201112 10:14:19.762"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.755" endtime="20201112 10:14:19.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.765" endtime="20201112 10:14:19.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:19.768" endtime="20201112 10:14:19.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.767" endtime="20201112 10:14:19.788"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.763" endtime="20201112 10:14:19.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.397" endtime="20201112 10:14:19.789"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.397" endtime="20201112 10:14:19.789"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.798" endtime="20201112 10:14:19.816"></status>
</kw>
<msg timestamp="20201112 10:14:19.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.796" endtime="20201112 10:14:19.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:19.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:19.817" endtime="20201112 10:14:19.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.820" endtime="20201112 10:14:19.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.794" endtime="20201112 10:14:19.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.792" endtime="20201112 10:14:19.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:19.830" endtime="20201112 10:14:20.115"></status>
</kw>
<msg timestamp="20201112 10:14:20.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:19.828" endtime="20201112 10:14:20.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019817583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.119" endtime="20201112 10:14:20.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.127" endtime="20201112 10:14:20.129"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.826" endtime="20201112 10:14:20.130"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.824" endtime="20201112 10:14:20.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.134" level="INFO">${RESULT} = [{'time': 0.019842181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4598000000000675e-05, 'source_diff': 2.4598000000000675e-05}, {'time': 0.019869069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:20.131" endtime="20201112 10:14:20.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.147" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:20.135" endtime="20201112 10:14:20.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.152" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.151" endtime="20201112 10:14:20.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.154" level="INFO">VALUE: [2.4598000000000675e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4596999999997732e-05, 2.45970000000012e-05, 2.45970000000012e-05, 2.45970000000012e-05, 2.40970000000007e-05, 2.4098000000000175e-05, 2.4082999999997662e-05, 2.40970000000007e-05, 2.4096999999997232e-05, 2.4096999999997232e-05, 2.411100000000027e-05, 2.4083999999997135e-05, 2.50970000000017e-05, 2.40970000000007e-05, 2.45970000000012e-05, 2.4610999999997302e-05, 2.462500000000034e-05, 2.4111999999999745e-05, 2.4111999999999745e-05, 2.408300000000113e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.462500000000034e-05, 2.4584000000001105e-05, 2.45970000000012e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.4013999999999286e-05, 2.4598000000000675e-05, 2.456900000000206e-05, 2.461100000000077e-05, 2.4569999999998066e-05, 2.412499999999984e-05, 2.4082999999997662e-05, 2.4598000000000675e-05, 2.4111999999999745e-05, 2.45970000000012e-05, 2.411100000000027e-05, 2.461100000000077e-05, 2.412499999999984e-05, 2.4582999999998162e-05, 2.465299999999948e-05, 2.4598000000000675e-05, 2.45970000000012e-05, 2.40970000000007e-05, 2.45970000000012e-05]</msg>
<status status="PASS" starttime="20201112 10:14:20.153" endtime="20201112 10:14:20.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.148" endtime="20201112 10:14:20.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.158" endtime="20201112 10:14:20.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.161" endtime="20201112 10:14:20.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.160" endtime="20201112 10:14:20.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.156" endtime="20201112 10:14:20.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.790" endtime="20201112 10:14:20.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:19.790" endtime="20201112 10:14:20.182"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.191" endtime="20201112 10:14:20.209"></status>
</kw>
<msg timestamp="20201112 10:14:20.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.189" endtime="20201112 10:14:20.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.210" endtime="20201112 10:14:20.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.213" endtime="20201112 10:14:20.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.186" endtime="20201112 10:14:20.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.184" endtime="20201112 10:14:20.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.223" endtime="20201112 10:14:20.507"></status>
</kw>
<msg timestamp="20201112 10:14:20.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.221" endtime="20201112 10:14:20.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.511" endtime="20201112 10:14:20.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.520" endtime="20201112 10:14:20.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.219" endtime="20201112 10:14:20.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.217" endtime="20201112 10:14:20.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.527" level="INFO">${RESULT} = [{'time': 0.019863264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5610999999998302e-05, 'source_diff': 2.5610999999998302e-05}, {'time': 0.019894306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:20.523" endtime="20201112 10:14:20.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.540" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:20.528" endtime="20201112 10:14:20.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.545" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.544" endtime="20201112 10:14:20.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.547" level="INFO">VALUE: [2.5610999999998302e-05, 2.6098000000002175e-05, 2.5096999999998232e-05, 2.561100000000177e-05, 2.6110999999998802e-05, 2.5555999999999496e-05, 2.562500000000134e-05, 2.50970000000017e-05, 2.5096999999998232e-05, 2.5084000000001605e-05, 2.5610999999998302e-05, 2.561100000000177e-05, 2.5596999999998732e-05, 2.512500000000084e-05, 2.561100000000177e-05, 2.5582999999999162e-05, 2.562500000000134e-05, 2.5096999999998232e-05, 2.611100000000227e-05, 2.5110999999997802e-05, 2.5596999999998732e-05, 2.5596999999998732e-05, 2.511100000000127e-05, 2.6110999999998802e-05, 2.5110999999997802e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.5096999999998232e-05, 2.5610999999998302e-05, 2.5138000000000937e-05, 2.6110999999998802e-05, 2.5637999999997968e-05, 2.5096999999998232e-05, 2.6110999999998802e-05, 2.611100000000227e-05, 2.5596999999998732e-05, 2.561100000000177e-05, 2.5652000000001007e-05, 2.5070000000002035e-05, 2.561100000000177e-05, 2.5597999999998206e-05, 2.5612000000001245e-05, 2.5110999999997802e-05, 2.611100000000227e-05, 2.511100000000127e-05, 2.506900000000256e-05, 2.6110999999998802e-05, 2.562500000000134e-05, 2.5610999999998302e-05, 2.511100000000127e-05]</msg>
<status status="PASS" starttime="20201112 10:14:20.546" endtime="20201112 10:14:20.573"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.541" endtime="20201112 10:14:20.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.576" endtime="20201112 10:14:20.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.579" endtime="20201112 10:14:20.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.578" endtime="20201112 10:14:20.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.574" endtime="20201112 10:14:20.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.183" endtime="20201112 10:14:20.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.182" endtime="20201112 10:14:20.600"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.609" endtime="20201112 10:14:20.627"></status>
</kw>
<msg timestamp="20201112 10:14:20.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.607" endtime="20201112 10:14:20.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:20.628" endtime="20201112 10:14:20.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.631" endtime="20201112 10:14:20.633"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.605" endtime="20201112 10:14:20.634"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.602" endtime="20201112 10:14:20.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.641" endtime="20201112 10:14:20.927"></status>
</kw>
<msg timestamp="20201112 10:14:20.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020528694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.639" endtime="20201112 10:14:20.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020528694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:20.931" endtime="20201112 10:14:20.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.939" endtime="20201112 10:14:20.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.637" endtime="20201112 10:14:20.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.635" endtime="20201112 10:14:20.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:20.946" level="INFO">${RESULT} = [{'time': 0.020554806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6111999999998275e-05, 'source_diff': 2.6111999999998275e-05}, {'time': 0.020584167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:20.942" endtime="20201112 10:14:20.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:20.960" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:20.947" endtime="20201112 10:14:20.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.965" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 10:14:20.963" endtime="20201112 10:14:20.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:20.967" level="INFO">VALUE: [2.6111999999998275e-05, 2.6110999999998802e-05, 2.6096999999999232e-05, 2.6110999999998802e-05, 2.65970000000032e-05, 2.6110999999998802e-05, 2.6570000000000066e-05, 2.6082999999999662e-05, 2.6596999999999732e-05, 2.6110999999998802e-05, 2.7110999999999802e-05, 2.6569000000000592e-05, 2.6596999999999732e-05, 2.7111999999999276e-05, 2.6096999999999232e-05, 2.611100000000227e-05, 2.6541000000001452e-05, 2.6096999999999232e-05, 2.6110999999998802e-05, 2.6096999999999232e-05, 2.6097999999998706e-05, 2.6096999999999232e-05, 2.6096999999999232e-05, 2.7097000000000232e-05, 2.6583000000000162e-05, 2.6612000000002245e-05, 2.6098000000002175e-05, 2.6528000000001356e-05, 2.6610999999999302e-05, 2.60970000000027e-05, 2.6679999999997678e-05, 2.6610999999999302e-05, 2.6583999999999636e-05, 2.6693999999997248e-05, 2.661100000000277e-05, 2.6610999999999302e-05, 2.6610999999999302e-05, 2.611100000000227e-05, 2.6638999999998442e-05, 2.611100000000227e-05, 2.6069000000000092e-05, 2.6110999999998802e-05, 2.6651999999998538e-05, 2.6610999999999302e-05, 2.6096999999999232e-05, 2.7110999999999802e-05, 2.6651999999998538e-05, 2.6082999999999662e-05, 2.6096999999999232e-05, 2.7042000000001426e-05]</msg>
<status status="PASS" starttime="20201112 10:14:20.966" endtime="20201112 10:14:20.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.961" endtime="20201112 10:14:20.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:20.971" endtime="20201112 10:14:20.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:20.974" endtime="20201112 10:14:20.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.973" endtime="20201112 10:14:20.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.969" endtime="20201112 10:14:20.994"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.601" endtime="20201112 10:14:20.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.600" endtime="20201112 10:14:20.995"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.004" endtime="20201112 10:14:21.022"></status>
</kw>
<msg timestamp="20201112 10:14:21.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.002" endtime="20201112 10:14:21.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.023" endtime="20201112 10:14:21.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.026" endtime="20201112 10:14:21.028"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.999" endtime="20201112 10:14:21.029"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.997" endtime="20201112 10:14:21.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.036" endtime="20201112 10:14:21.321"></status>
</kw>
<msg timestamp="20201112 10:14:21.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019900125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.034" endtime="20201112 10:14:21.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019900125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.325" endtime="20201112 10:14:21.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.333" endtime="20201112 10:14:21.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.032" endtime="20201112 10:14:21.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.030" endtime="20201112 10:14:21.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.340" level="INFO">${RESULT} = [{'time': 0.019927222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7097000000000232e-05, 'source_diff': 2.7097000000000232e-05}, {'time': 0.019957403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:21.336" endtime="20201112 10:14:21.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.353" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:21.341" endtime="20201112 10:14:21.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.358" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.357" endtime="20201112 10:14:21.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.360" level="INFO">VALUE: [2.7097000000000232e-05, 2.7610999999996833e-05, 2.7110999999999802e-05, 2.7597000000000732e-05, 2.7110999999999802e-05, 2.8083999999997666e-05, 2.7611000000000302e-05, 2.7611000000000302e-05, 2.7597000000000732e-05, 2.7110999999999802e-05, 2.7083000000000662e-05, 2.7097000000000232e-05, 2.7598000000000206e-05, 2.7110999999999802e-05, 2.7097000000000232e-05, 2.7570000000001066e-05, 2.7624999999999872e-05, 2.7110999999999802e-05, 2.8096999999997763e-05, 2.7624999999999872e-05, 2.7110999999999802e-05, 2.7084000000000136e-05, 2.7611000000000302e-05, 2.7597000000000732e-05, 2.7097000000000232e-05, 2.7082999999997193e-05, 2.7597000000000732e-05, 2.8111000000000802e-05, 2.7638999999999442e-05, 2.7110999999999802e-05, 2.7098000000003175e-05, 2.7097999999999706e-05, 2.7083000000000662e-05, 2.7097000000000232e-05, 2.7610999999996833e-05, 2.7110999999999802e-05, 2.8097000000001232e-05, 2.7097000000000232e-05, 2.7598000000000206e-05, 2.7097000000000232e-05, 2.7597000000000732e-05, 2.8096999999997763e-05, 2.7040999999998483e-05, 2.7097999999999706e-05, 2.7097000000000232e-05, 2.7598000000000206e-05, 2.7611000000000302e-05, 2.762500000000334e-05, 2.7097000000000232e-05, 2.7582999999997693e-05]</msg>
<status status="PASS" starttime="20201112 10:14:21.359" endtime="20201112 10:14:21.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.354" endtime="20201112 10:14:21.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.364" endtime="20201112 10:14:21.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.367" endtime="20201112 10:14:21.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.366" endtime="20201112 10:14:21.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.362" endtime="20201112 10:14:21.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.996" endtime="20201112 10:14:21.388"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:20.995" endtime="20201112 10:14:21.388"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.397" endtime="20201112 10:14:21.414"></status>
</kw>
<msg timestamp="20201112 10:14:21.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.395" endtime="20201112 10:14:21.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.416" endtime="20201112 10:14:21.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.419" endtime="20201112 10:14:21.421"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.393" endtime="20201112 10:14:21.422"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.391" endtime="20201112 10:14:21.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.428" endtime="20201112 10:14:21.713"></status>
</kw>
<msg timestamp="20201112 10:14:21.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.427" endtime="20201112 10:14:21.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.718" endtime="20201112 10:14:21.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.726" endtime="20201112 10:14:21.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.424" endtime="20201112 10:14:21.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.423" endtime="20201112 10:14:21.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:21.733" level="INFO">${RESULT} = [{'time': 0.019744472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8068999999998623e-05, 'source_diff': 2.8068999999998623e-05}, {'time': 0.019775681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:21.729" endtime="20201112 10:14:21.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:21.746" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:21.734" endtime="20201112 10:14:21.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.751" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 10:14:21.750" endtime="20201112 10:14:21.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.753" level="INFO">VALUE: [2.8068999999998623e-05, 2.8639000000000442e-05, 2.8125000000000372e-05, 2.8611000000001302e-05, 2.8096999999997763e-05, 2.8598000000001206e-05, 2.9125000000001372e-05, 2.8597000000001732e-05, 2.8097000000001232e-05, 2.8582999999998693e-05, 2.8082999999998193e-05, 2.8596999999998263e-05, 2.8597000000001732e-05, 2.8583000000002162e-05, 2.8611000000001302e-05, 2.8597000000001732e-05, 2.8611000000001302e-05, 2.8111000000000802e-05, 2.9111999999997806e-05, 2.9096999999998763e-05, 2.8111000000000802e-05, 2.8097000000001232e-05, 2.8083000000001662e-05, 2.8097000000001232e-05, 2.8112000000000276e-05, 2.8625000000000872e-05, 2.8096999999997763e-05, 2.8097000000001232e-05, 2.8596999999998263e-05, 2.8639000000000442e-05, 2.8597999999997736e-05, 2.8596999999998263e-05, 2.8040999999999483e-05, 2.8098000000000706e-05, 2.8611000000001302e-05, 2.8625000000000872e-05, 2.8097000000001232e-05, 2.8069999999998096e-05, 2.8611999999997306e-05, 2.8097000000001232e-05, 2.8084000000001136e-05, 2.8097000000001232e-05, 2.8653000000000012e-05, 2.8111000000000802e-05, 2.8612000000000776e-05, 2.9069999999999097e-05, 2.8097000000001232e-05, 2.8693999999999248e-05, 2.8097000000001232e-05, 2.8110999999997333e-05]</msg>
<status status="PASS" starttime="20201112 10:14:21.752" endtime="20201112 10:14:21.754"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.747" endtime="20201112 10:14:21.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.757" endtime="20201112 10:14:21.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:21.760" endtime="20201112 10:14:21.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.758" endtime="20201112 10:14:21.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.755" endtime="20201112 10:14:21.780"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.389" endtime="20201112 10:14:21.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.389" endtime="20201112 10:14:21.781"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.789" endtime="20201112 10:14:21.807"></status>
</kw>
<msg timestamp="20201112 10:14:21.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.788" endtime="20201112 10:14:21.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:21.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:21.809" endtime="20201112 10:14:21.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.811" endtime="20201112 10:14:21.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.785" endtime="20201112 10:14:21.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.783" endtime="20201112 10:14:21.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:21.821" endtime="20201112 10:14:22.106"></status>
</kw>
<msg timestamp="20201112 10:14:22.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:21.820" endtime="20201112 10:14:22.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.111" endtime="20201112 10:14:22.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.119" endtime="20201112 10:14:22.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.817" endtime="20201112 10:14:22.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.815" endtime="20201112 10:14:22.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.126" level="INFO">${RESULT} = [{'time': 0.019772708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9610999999998833e-05, 'source_diff': 2.9610999999998833e-05}, {'time': 0.019807833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.122" endtime="20201112 10:14:22.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.139" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:22.127" endtime="20201112 10:14:22.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.144" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.143" endtime="20201112 10:14:22.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.146" level="INFO">VALUE: [2.9610999999998833e-05, 2.9111000000001802e-05, 2.9596999999999263e-05, 2.9125000000001372e-05, 2.9097999999998236e-05, 2.9125000000001372e-05, 2.9111000000001802e-05, 2.9110999999998333e-05, 2.9096999999998763e-05, 2.9584000000002636e-05, 2.9110999999998333e-05, 2.9138000000001468e-05, 2.9124999999997903e-05, 2.965199999999807e-05, 2.9125000000001372e-05, 3.0096999999999763e-05, 2.9596999999999263e-05, 3.0112000000002276e-05, 2.9513999999997848e-05, 2.9110999999998333e-05, 2.9096999999998763e-05, 2.9582999999999693e-05, 2.9610999999998833e-05, 2.9096999999998763e-05, 2.9597999999998736e-05, 2.9610999999998833e-05, 2.9596999999999263e-05, 2.9082999999999193e-05, 2.9096999999998763e-05, 2.9542000000000457e-05, 2.9583999999999167e-05, 2.9569000000000123e-05, 2.9610999999998833e-05, 2.9681000000000152e-05, 2.9153000000000512e-05, 2.9180000000000178e-05, 2.9596999999999263e-05, 2.9596999999999263e-05, 2.9112000000001276e-05, 2.9096999999998763e-05, 2.9596999999999263e-05, 2.9582999999999693e-05, 2.9098000000001706e-05, 2.9624999999998403e-05, 2.9625000000001872e-05, 3.0083999999999667e-05, 2.9597000000002732e-05, 2.9597000000002732e-05, 2.9542000000000457e-05, 2.9597999999998736e-05]</msg>
<status status="PASS" starttime="20201112 10:14:22.145" endtime="20201112 10:14:22.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.140" endtime="20201112 10:14:22.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.150" endtime="20201112 10:14:22.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.153" endtime="20201112 10:14:22.172"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.152" endtime="20201112 10:14:22.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.148" endtime="20201112 10:14:22.173"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.782" endtime="20201112 10:14:22.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:21.781" endtime="20201112 10:14:22.174"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.182" endtime="20201112 10:14:22.200"></status>
</kw>
<msg timestamp="20201112 10:14:22.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.181" endtime="20201112 10:14:22.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.202" endtime="20201112 10:14:22.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.204" endtime="20201112 10:14:22.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.178" endtime="20201112 10:14:22.207"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.176" endtime="20201112 10:14:22.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.214" endtime="20201112 10:14:22.499"></status>
</kw>
<msg timestamp="20201112 10:14:22.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.212" endtime="20201112 10:14:22.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019835806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.503" endtime="20201112 10:14:22.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.511" endtime="20201112 10:14:22.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.210" endtime="20201112 10:14:22.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.208" endtime="20201112 10:14:22.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.518" level="INFO">${RESULT} = [{'time': 0.019865903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0096999999999763e-05, 'source_diff': 3.0096999999999763e-05}, {'time': 0.019901764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:22.514" endtime="20201112 10:14:22.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.532" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:22.519" endtime="20201112 10:14:22.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.537" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.536" endtime="20201112 10:14:22.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.539" level="INFO">VALUE: [3.0096999999999763e-05, 3.0070000000000097e-05, 3.052800000000189e-05, 3.0138999999998473e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.0110999999999333e-05, 3.059700000000026e-05, 3.0138999999998473e-05, 3.059700000000026e-05, 3.0611999999999306e-05, 3.058300000000069e-05, 3.0055000000001053e-05, 3.109700000000076e-05, 3.0096999999999763e-05, 3.111100000000033e-05, 3.0597999999999737e-05, 3.0597999999999737e-05, 3.059700000000026e-05, 3.061099999999983e-05, 3.0110999999999333e-05, 3.0083000000000193e-05, 3.0124999999998903e-05, 3.017999999999771e-05, 3.0096999999999763e-05, 3.0584000000000167e-05, 3.061099999999983e-05, 3.0096999999999763e-05, 3.058300000000069e-05, 3.0138999999998473e-05, 3.0597999999999737e-05, 3.0111999999998806e-05, 3.0125000000002372e-05, 3.059700000000026e-05, 3.062500000000287e-05, 3.061099999999983e-05, 3.0110999999999333e-05, 3.061099999999983e-05, 3.0584000000000167e-05, 3.0096999999999763e-05, 3.059700000000026e-05, 3.0110999999999333e-05, 3.0139000000001942e-05, 3.0597999999999737e-05, 3.06110000000033e-05, 3.059700000000026e-05, 3.0110999999999333e-05, 3.0125000000002372e-05, 3.0083000000000193e-05]</msg>
<status status="PASS" starttime="20201112 10:14:22.538" endtime="20201112 10:14:22.540"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.533" endtime="20201112 10:14:22.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.543" endtime="20201112 10:14:22.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.546" endtime="20201112 10:14:22.565"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.545" endtime="20201112 10:14:22.566"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.541" endtime="20201112 10:14:22.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.175" endtime="20201112 10:14:22.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.174" endtime="20201112 10:14:22.567"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.576" endtime="20201112 10:14:22.593"></status>
</kw>
<msg timestamp="20201112 10:14:22.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.574" endtime="20201112 10:14:22.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.594" endtime="20201112 10:14:22.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.597" endtime="20201112 10:14:22.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.572" endtime="20201112 10:14:22.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.570" endtime="20201112 10:14:22.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.607" endtime="20201112 10:14:22.892"></status>
</kw>
<msg timestamp="20201112 10:14:22.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.605" endtime="20201112 10:14:22.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.896" endtime="20201112 10:14:22.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.904" endtime="20201112 10:14:22.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.603" endtime="20201112 10:14:22.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.601" endtime="20201112 10:14:22.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:22.911" level="INFO">${RESULT} = [{'time': 0.019877847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.163899999999997e-05, 'source_diff': 3.163899999999997e-05}, {'time': 0.019913681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:22.908" endtime="20201112 10:14:22.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:22.924" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:22.912" endtime="20201112 10:14:22.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.929" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 10:14:22.928" endtime="20201112 10:14:22.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.931" level="INFO">VALUE: [3.163899999999997e-05, 3.105599999999806e-05, 3.1582999999998224e-05, 3.109700000000076e-05, 3.161100000000083e-05, 3.159700000000126e-05, 3.159700000000126e-05, 3.111100000000033e-05, 3.109700000000076e-05, 3.111100000000033e-05, 3.159700000000126e-05, 3.108300000000119e-05, 3.16250000000004e-05, 3.115199999999957e-05, 3.11249999999999e-05, 3.115300000000251e-05, 3.111100000000033e-05, 3.1596999999997794e-05, 3.109700000000076e-05, 3.111100000000033e-05, 3.159700000000126e-05, 3.108400000000067e-05, 3.1598000000000737e-05, 3.1111999999999806e-05, 3.111100000000033e-05, 3.1582999999998224e-05, 3.109700000000076e-05, 3.109700000000076e-05, 3.1111999999999806e-05, 3.156999999999813e-05, 3.108300000000119e-05, 3.1610999999997363e-05, 3.16250000000004e-05, 3.118100000000165e-05, 3.16250000000004e-05, 3.105500000000205e-05, 3.111100000000033e-05, 3.1096999999997293e-05, 3.11249999999999e-05, 3.159700000000126e-05, 3.1096999999997293e-05, 3.111100000000033e-05, 3.162499999999693e-05, 3.1582999999998224e-05, 3.161100000000083e-05, 3.109700000000076e-05, 3.111099999999686e-05, 3.159700000000126e-05, 3.111099999999686e-05, 3.1098000000000237e-05]</msg>
<status status="PASS" starttime="20201112 10:14:22.930" endtime="20201112 10:14:22.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.925" endtime="20201112 10:14:22.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.935" endtime="20201112 10:14:22.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:22.938" endtime="20201112 10:14:22.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.937" endtime="20201112 10:14:22.958"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.933" endtime="20201112 10:14:22.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.568" endtime="20201112 10:14:22.959"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.567" endtime="20201112 10:14:22.959"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.968" endtime="20201112 10:14:22.985"></status>
</kw>
<msg timestamp="20201112 10:14:22.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.966" endtime="20201112 10:14:22.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:22.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:22.987" endtime="20201112 10:14:22.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.990" endtime="20201112 10:14:22.992"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.964" endtime="20201112 10:14:22.993"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.962" endtime="20201112 10:14:22.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:22.999" endtime="20201112 10:14:23.286"></status>
</kw>
<msg timestamp="20201112 10:14:23.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:22.998" endtime="20201112 10:14:23.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019796167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.290" endtime="20201112 10:14:23.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.298" endtime="20201112 10:14:23.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.995" endtime="20201112 10:14:23.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.994" endtime="20201112 10:14:23.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.305" level="INFO">${RESULT} = [{'time': 0.019828764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2596999999998794e-05, 'source_diff': 3.2596999999998794e-05}, {'time': 0.019865694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.302" endtime="20201112 10:14:23.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.318" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:23.306" endtime="20201112 10:14:23.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.323" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.322" endtime="20201112 10:14:23.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.325" level="INFO">VALUE: [3.2596999999998794e-05, 3.2596999999998794e-05, 3.259799999999827e-05, 3.2068999999999154e-05, 3.2068999999999154e-05, 3.2596999999998794e-05, 3.2082999999998724e-05, 3.209700000000176e-05, 3.211100000000133e-05, 3.251400000000085e-05, 3.209799999999777e-05, 3.261199999999784e-05, 3.308400000000267e-05, 3.2596999999998794e-05, 3.211100000000133e-05, 3.2110999999997863e-05, 3.209700000000176e-05, 3.261199999999784e-05, 3.259700000000226e-05, 3.2596999999998794e-05, 3.2110999999997863e-05, 3.211100000000133e-05, 3.25839999999987e-05, 3.263900000000097e-05, 3.2610999999998364e-05, 3.2138000000001e-05, 3.211100000000133e-05, 3.2596999999998794e-05, 3.2568999999999654e-05, 3.3110999999998864e-05, 3.3096999999999294e-05, 3.2582999999999224e-05, 3.209700000000176e-05, 3.2610999999998364e-05, 3.2054999999999584e-05, 3.2082999999998724e-05, 3.215300000000004e-05, 3.209800000000124e-05, 3.209800000000124e-05, 3.263900000000097e-05, 3.2110999999997863e-05, 3.211100000000133e-05, 3.2596999999998794e-05, 3.259799999999827e-05, 3.261199999999784e-05, 3.261199999999784e-05, 3.258300000000269e-05, 3.258300000000269e-05, 3.2096999999998294e-05, 3.2596999999998794e-05]</msg>
<status status="PASS" starttime="20201112 10:14:23.324" endtime="20201112 10:14:23.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.319" endtime="20201112 10:14:23.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.329" endtime="20201112 10:14:23.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.332" endtime="20201112 10:14:23.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.331" endtime="20201112 10:14:23.352"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.327" endtime="20201112 10:14:23.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.960" endtime="20201112 10:14:23.353"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:22.960" endtime="20201112 10:14:23.353"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.362" endtime="20201112 10:14:23.380"></status>
</kw>
<msg timestamp="20201112 10:14:23.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.360" endtime="20201112 10:14:23.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.381" endtime="20201112 10:14:23.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.384" endtime="20201112 10:14:23.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.358" endtime="20201112 10:14:23.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.356" endtime="20201112 10:14:23.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.394" endtime="20201112 10:14:23.679"></status>
</kw>
<msg timestamp="20201112 10:14:23.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.392" endtime="20201112 10:14:23.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019778097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.683" endtime="20201112 10:14:23.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.691" endtime="20201112 10:14:23.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.390" endtime="20201112 10:14:23.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.388" endtime="20201112 10:14:23.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:23.698" level="INFO">${RESULT} = [{'time': 0.019778097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3583000000000224e-05, 'source_diff': 3.3583000000000224e-05}, {'time': 0.019814472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:23.695" endtime="20201112 10:14:23.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:23.711" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:23.699" endtime="20201112 10:14:23.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.716" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 10:14:23.715" endtime="20201112 10:14:23.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.718" level="INFO">VALUE: [3.3583000000000224e-05, 3.3610999999999364e-05, 3.309700000000276e-05, 3.3583000000000224e-05, 3.3096999999999294e-05, 3.3110999999998864e-05, 3.361199999999884e-05, 3.359799999999927e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.311100000000233e-05, 3.4110999999999864e-05, 3.3110999999998864e-05, 3.36519999999986e-05, 3.3624999999998934e-05, 3.3082999999999724e-05, 3.3569000000000654e-05, 3.3596999999999794e-05, 3.3624999999998934e-05, 3.309799999999877e-05, 3.3096999999999294e-05, 3.365300000000154e-05, 3.3596999999999794e-05, 3.3096999999999294e-05, 3.3596999999999794e-05, 3.365300000000154e-05, 3.309799999999877e-05, 3.319400000000028e-05, 3.358400000000317e-05, 3.3055000000000584e-05, 3.31250000000019e-05, 3.3596999999999794e-05, 3.359799999999927e-05, 3.361100000000283e-05, 3.36380000000025e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.3082999999999724e-05, 3.3596999999999794e-05, 3.3096999999999294e-05, 3.3138999999998e-05, 3.315300000000104e-05, 3.3596999999999794e-05, 3.3096999999999294e-05, 3.309700000000276e-05, 3.3110999999998864e-05, 3.361199999999884e-05, 3.3568999999997184e-05, 3.3624999999998934e-05]</msg>
<status status="PASS" starttime="20201112 10:14:23.717" endtime="20201112 10:14:23.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.712" endtime="20201112 10:14:23.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.722" endtime="20201112 10:14:23.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:23.725" endtime="20201112 10:14:23.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.724" endtime="20201112 10:14:23.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.720" endtime="20201112 10:14:23.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.354" endtime="20201112 10:14:23.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.354" endtime="20201112 10:14:23.746"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.755" endtime="20201112 10:14:23.775"></status>
</kw>
<msg timestamp="20201112 10:14:23.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.753" endtime="20201112 10:14:23.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:23.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:23.776" endtime="20201112 10:14:23.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.779" endtime="20201112 10:14:23.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.751" endtime="20201112 10:14:23.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.749" endtime="20201112 10:14:23.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:23.789" endtime="20201112 10:14:24.075"></status>
</kw>
<msg timestamp="20201112 10:14:24.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:23.787" endtime="20201112 10:14:24.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.079" endtime="20201112 10:14:24.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.087" endtime="20201112 10:14:24.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.785" endtime="20201112 10:14:24.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.783" endtime="20201112 10:14:24.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.094" level="INFO">${RESULT} = [{'time': 0.019797736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.063899999999816e-05, 'source_diff': 5.063899999999816e-05}, {'time': 0.01985275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 10:14:24.091" endtime="20201112 10:14:24.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.108" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:24.095" endtime="20201112 10:14:24.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.113" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.112" endtime="20201112 10:14:24.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.115" level="INFO">VALUE: [5.063899999999816e-05, 5.016700000000027e-05, 5.025000000000168e-05, 5.004100000000067e-05, 5.044400000000018e-05, 5.029100000000092e-05, 5.013900000000113e-05, 4.987499999999784e-05, 5.029200000000039e-05, 5.025000000000168e-05, 5.180600000000146e-05, 5.009699999999895e-05, 5.176400000000275e-05, 5.024999999999821e-05, 5.006999999999928e-05, 4.987499999999784e-05, 5.180499999999852e-05, 4.990200000000097e-05, 5.066700000000077e-05, 5.011099999999852e-05, 5.019399999999993e-05, 5.011200000000146e-05, 4.984700000000217e-05, 5.0651999999998254e-05, 5.173600000000014e-05, 5.019399999999993e-05, 5.052800000000107e-05, 5.016600000000079e-05, 5.062499999999859e-05, 4.991600000000054e-05, 5.037499999999834e-05, 5.016700000000027e-05, 5.019399999999993e-05, 5.018099999999984e-05, 5.030599999999996e-05, 5.048599999999889e-05, 5.169500000000091e-05, 5.065299999999773e-05, 5.031999999999953e-05, 5.048599999999889e-05, 5.026400000000125e-05, 5.019499999999941e-05, 5.066700000000077e-05, 5.019499999999941e-05, 5.0402000000001473e-05, 5.030599999999996e-05, 5.058299999999988e-05, 5.036200000000171e-05, 5.016600000000079e-05, 5.055500000000074e-05]</msg>
<status status="PASS" starttime="20201112 10:14:24.114" endtime="20201112 10:14:24.116"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.109" endtime="20201112 10:14:24.117"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.119" endtime="20201112 10:14:24.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.123" endtime="20201112 10:14:24.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.121" endtime="20201112 10:14:24.142"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.117" endtime="20201112 10:14:24.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.747" endtime="20201112 10:14:24.143"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:23.747" endtime="20201112 10:14:24.143"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.152" endtime="20201112 10:14:24.170"></status>
</kw>
<msg timestamp="20201112 10:14:24.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.150" endtime="20201112 10:14:24.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.172" endtime="20201112 10:14:24.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.174" endtime="20201112 10:14:24.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.148" endtime="20201112 10:14:24.177"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.146" endtime="20201112 10:14:24.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.184" endtime="20201112 10:14:24.469"></status>
</kw>
<msg timestamp="20201112 10:14:24.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.183" endtime="20201112 10:14:24.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.473" endtime="20201112 10:14:24.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.481" endtime="20201112 10:14:24.483"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.180" endtime="20201112 10:14:24.484"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.178" endtime="20201112 10:14:24.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.488" level="INFO">${RESULT} = [{'time': 0.019868931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.281999999999856e-05, 'source_diff': 5.281999999999856e-05}, {'time': 0.019924931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:24.485" endtime="20201112 10:14:24.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.501" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:24.489" endtime="20201112 10:14:24.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.506" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.505" endtime="20201112 10:14:24.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.508" level="INFO">VALUE: [5.281999999999856e-05, 5.129200000000139e-05, 5.1415999999998574e-05, 5.148599999999989e-05, 5.1416000000002043e-05, 5.144500000000066e-05, 5.093000000000111e-05, 5.279099999999995e-05, 5.130500000000149e-05, 5.161100000000002e-05, 5.11530000000017e-05, 5.091700000000102e-05, 5.1708000000001e-05, 5.163899999999916e-05, 5.107000000000028e-05, 5.149999999999946e-05, 5.141700000000152e-05, 5.119500000000041e-05, 5.099999999999896e-05, 5.116700000000127e-05, 5.159799999999992e-05, 5.162499999999959e-05, 5.152800000000207e-05, 5.099999999999896e-05, 5.154200000000164e-05, 5.1137999999999184e-05, 5.111199999999899e-05, 5.1679999999998394e-05, 5.154199999999817e-05, 5.113899999999866e-05, 5.15409999999987e-05, 5.137499999999934e-05, 5.1165999999998324e-05, 5.133299999999716e-05, 5.116600000000179e-05, 5.277799999999985e-05, 5.145800000000075e-05, 5.125000000000268e-05, 5.138899999999891e-05, 5.12080000000005e-05, 5.086099999999927e-05, 5.087500000000231e-05, 5.130600000000096e-05, 5.143100000000109e-05, 5.13470000000002e-05, 5.169500000000091e-05, 5.172200000000057e-05, 5.091700000000102e-05, 5.123599999999964e-05, 5.276400000000028e-05]</msg>
<status status="PASS" starttime="20201112 10:14:24.507" endtime="20201112 10:14:24.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.502" endtime="20201112 10:14:24.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.512" endtime="20201112 10:14:24.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.515" endtime="20201112 10:14:24.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.514" endtime="20201112 10:14:24.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.510" endtime="20201112 10:14:24.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.144" endtime="20201112 10:14:24.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.144" endtime="20201112 10:14:24.536"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.545" endtime="20201112 10:14:24.564"></status>
</kw>
<msg timestamp="20201112 10:14:24.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.543" endtime="20201112 10:14:24.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.566" endtime="20201112 10:14:24.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.568" endtime="20201112 10:14:24.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.541" endtime="20201112 10:14:24.571"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.539" endtime="20201112 10:14:24.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.578" endtime="20201112 10:14:24.865"></status>
</kw>
<msg timestamp="20201112 10:14:24.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01979975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:24.577" endtime="20201112 10:14:24.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01979975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019851958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:24.869" endtime="20201112 10:14:24.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.877" endtime="20201112 10:14:24.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.574" endtime="20201112 10:14:24.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.572" endtime="20201112 10:14:24.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:24.884" level="INFO">${RESULT} = [{'time': 0.019851958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2207999999998034e-05, 'source_diff': 5.2207999999998034e-05}, {'time': 0.019907972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:24.881" endtime="20201112 10:14:24.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:24.897" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:24.885" endtime="20201112 10:14:24.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.902" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 10:14:24.901" endtime="20201112 10:14:24.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.904" level="INFO">VALUE: [5.2207999999998034e-05, 5.263900000000016e-05, 5.2471999999997854e-05, 5.2679999999999394e-05, 5.3735999999998674e-05, 5.205499999999877e-05, 5.257000000000178e-05, 5.2708000000002e-05, 5.215299999999923e-05, 5.201399999999953e-05, 5.219500000000141e-05, 5.269500000000191e-05, 5.23609999999973e-05, 5.225000000000021e-05, 5.187499999999984e-05, 5.229199999999892e-05, 5.26669999999993e-05, 5.376400000000128e-05, 5.23470000000012e-05, 5.212500000000009e-05, 5.263900000000016e-05, 5.273600000000114e-05, 5.272200000000157e-05, 5.229099999999945e-05, 5.258300000000188e-05, 5.209700000000095e-05, 5.229099999999945e-05, 5.2708000000002e-05, 5.3763999999997814e-05, 5.2680000000002863e-05, 5.2679999999999394e-05, 5.194400000000168e-05, 5.216700000000227e-05, 5.199999999999996e-05, 5.269499999999844e-05, 5.207000000000128e-05, 5.3777999999997383e-05, 5.276400000000028e-05, 5.191699999999855e-05, 5.244500000000166e-05, 5.202800000000257e-05, 5.2471999999997854e-05, 5.380599999999999e-05, 5.199999999999996e-05, 5.184699999999723e-05, 5.236100000000077e-05, 5.2429999999999144e-05, 5.225000000000021e-05, 5.22080000000015e-05, 5.21530000000027e-05]</msg>
<status status="PASS" starttime="20201112 10:14:24.903" endtime="20201112 10:14:24.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.898" endtime="20201112 10:14:24.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.908" endtime="20201112 10:14:24.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:24.911" endtime="20201112 10:14:24.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.910" endtime="20201112 10:14:24.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.906" endtime="20201112 10:14:24.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.537" endtime="20201112 10:14:24.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.536" endtime="20201112 10:14:24.932"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.941" endtime="20201112 10:14:24.958"></status>
</kw>
<msg timestamp="20201112 10:14:24.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.939" endtime="20201112 10:14:24.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:24.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:24.960" endtime="20201112 10:14:24.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.962" endtime="20201112 10:14:24.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.937" endtime="20201112 10:14:24.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.934" endtime="20201112 10:14:24.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:24.972" endtime="20201112 10:14:25.258"></status>
</kw>
<msg timestamp="20201112 10:14:25.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:24.971" endtime="20201112 10:14:25.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.262" endtime="20201112 10:14:25.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.270" endtime="20201112 10:14:25.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.968" endtime="20201112 10:14:25.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.966" endtime="20201112 10:14:25.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.277" level="INFO">${RESULT} = [{'time': 0.019869875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3457999999999284e-05, 'source_diff': 5.3457999999999284e-05}, {'time': 0.019924861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:25.273" endtime="20201112 10:14:25.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.290" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:25.278" endtime="20201112 10:14:25.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.295" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.294" endtime="20201112 10:14:25.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.297" level="INFO">VALUE: [5.3457999999999284e-05, 5.276400000000028e-05, 5.319500000000241e-05, 5.293099999999912e-05, 5.336100000000177e-05, 5.362500000000159e-05, 5.331999999999906e-05, 5.293099999999912e-05, 5.370899999999901e-05, 5.301400000000053e-05, 5.361200000000149e-05, 5.319499999999894e-05, 5.479200000000142e-05, 5.313900000000066e-05, 5.315300000000023e-05, 5.3444000000003183e-05, 5.480499999999805e-05, 5.287499999999737e-05, 5.483299999999719e-05, 5.3249999999997744e-05, 5.305499999999977e-05, 5.2971999999998354e-05, 5.2916000000000074e-05, 5.4722000000000104e-05, 5.3707999999999534e-05, 5.331999999999906e-05, 5.35280000000006e-05, 5.323600000000164e-05, 5.287500000000084e-05, 5.31669999999998e-05, 5.369499999999944e-05, 5.304199999999967e-05, 5.2902000000000504e-05, 5.482000000000056e-05, 5.368099999999987e-05, 5.4763999999998814e-05, 5.3443999999999714e-05, 5.293099999999912e-05, 5.4749999999999244e-05, 5.4777999999998384e-05, 5.348600000000189e-05, 5.2929999999999644e-05, 5.4722000000000104e-05, 5.2957999999998784e-05, 5.3721999999999104e-05, 5.315300000000023e-05, 5.315300000000023e-05, 5.35280000000006e-05, 5.305600000000271e-05, 5.28470000000017e-05]</msg>
<status status="PASS" starttime="20201112 10:14:25.296" endtime="20201112 10:14:25.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.291" endtime="20201112 10:14:25.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.301" endtime="20201112 10:14:25.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.304" endtime="20201112 10:14:25.323"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.303" endtime="20201112 10:14:25.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.299" endtime="20201112 10:14:25.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.933" endtime="20201112 10:14:25.325"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:24.932" endtime="20201112 10:14:25.325"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.334" endtime="20201112 10:14:25.352"></status>
</kw>
<msg timestamp="20201112 10:14:25.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.332" endtime="20201112 10:14:25.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.354" endtime="20201112 10:14:25.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.356" endtime="20201112 10:14:25.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.330" endtime="20201112 10:14:25.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.328" endtime="20201112 10:14:25.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.366" endtime="20201112 10:14:25.652"></status>
</kw>
<msg timestamp="20201112 10:14:25.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.365" endtime="20201112 10:14:25.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.656" endtime="20201112 10:14:25.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.664" endtime="20201112 10:14:25.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.362" endtime="20201112 10:14:25.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.360" endtime="20201112 10:14:25.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:25.671" level="INFO">${RESULT} = [{'time': 0.019926778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.443100000000062e-05, 'source_diff': 5.443100000000062e-05}, {'time': 0.019983778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:25.667" endtime="20201112 10:14:25.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:25.685" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:25.672" endtime="20201112 10:14:25.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.690" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 10:14:25.689" endtime="20201112 10:14:25.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.693" level="INFO">VALUE: [5.443100000000062e-05, 5.3985999999998924e-05, 5.393100000000012e-05, 5.418100000000037e-05, 5.4263999999998314e-05, 5.43609999999993e-05, 5.577699999999991e-05, 5.581899999999862e-05, 5.459699999999998e-05, 5.4735999999999674e-05, 5.411099999999905e-05, 5.580500000000252e-05, 5.406900000000034e-05, 5.3929999999997175e-05, 5.406900000000034e-05, 5.40410000000012e-05, 5.3944000000000214e-05, 5.427800000000135e-05, 5.41670000000008e-05, 5.5791999999998954e-05, 5.5805999999998523e-05, 5.429200000000092e-05, 5.430600000000049e-05, 5.387500000000184e-05, 5.463900000000216e-05, 5.4513999999998564e-05, 5.405600000000024e-05, 5.440300000000148e-05, 5.409699999999948e-05, 5.3985999999998924e-05, 5.451299999999909e-05, 5.4527999999998134e-05, 5.5791999999998954e-05, 5.3916000000001074e-05, 5.4680000000001394e-05, 5.5750000000000244e-05, 5.462500000000259e-05, 5.405500000000077e-05, 5.4513999999998564e-05, 5.580499999999905e-05, 5.430500000000102e-05, 5.405600000000024e-05, 5.5750000000000244e-05, 5.387499999999837e-05, 5.5805999999998523e-05, 5.433300000000016e-05, 5.411100000000252e-05, 5.46809999999974e-05, 5.581900000000209e-05, 5.4527999999998134e-05]</msg>
<status status="PASS" starttime="20201112 10:14:25.691" endtime="20201112 10:14:25.698"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.686" endtime="20201112 10:14:25.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.701" endtime="20201112 10:14:25.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:25.705" endtime="20201112 10:14:25.724"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.703" endtime="20201112 10:14:25.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.700" endtime="20201112 10:14:25.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.326" endtime="20201112 10:14:25.726"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.325" endtime="20201112 10:14:25.726"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.734" endtime="20201112 10:14:25.752"></status>
</kw>
<msg timestamp="20201112 10:14:25.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.733" endtime="20201112 10:14:25.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:25.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:25.754" endtime="20201112 10:14:25.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.756" endtime="20201112 10:14:25.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.730" endtime="20201112 10:14:25.760"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.728" endtime="20201112 10:14:25.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:25.766" endtime="20201112 10:14:26.052"></status>
</kw>
<msg timestamp="20201112 10:14:26.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019976139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:25.765" endtime="20201112 10:14:26.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019976139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.056" endtime="20201112 10:14:26.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.064" endtime="20201112 10:14:26.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.762" endtime="20201112 10:14:26.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.761" endtime="20201112 10:14:26.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.071" level="INFO">${RESULT} = [{'time': 0.020031875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5736000000000674e-05, 'source_diff': 5.5736000000000674e-05}, {'time': 0.020089875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:26.067" endtime="20201112 10:14:26.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.084" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:26.072" endtime="20201112 10:14:26.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.089" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.088" endtime="20201112 10:14:26.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.091" level="INFO">VALUE: [5.5736000000000674e-05, 5.5236000000000174e-05, 5.6778000000000384e-05, 5.544500000000119e-05, 5.4999999999999494e-05, 5.53610000000003e-05, 5.493100000000112e-05, 5.5027999999998634e-05, 5.536199999999977e-05, 5.495900000000026e-05, 5.562500000000012e-05, 5.486199999999927e-05, 5.6707999999999065e-05, 5.5693999999998495e-05, 5.5236000000000174e-05, 5.55410000000027e-05, 5.536099999999683e-05, 5.4972000000000354e-05, 5.4915999999998605e-05, 5.5236000000000174e-05, 5.512499999999962e-05, 5.682000000000256e-05, 5.529200000000192e-05, 5.487499999999937e-05, 5.681899999999962e-05, 5.518100000000137e-05, 5.537499999999987e-05, 5.556999999999784e-05, 5.513899999999919e-05, 5.56809999999984e-05, 5.5750000000000244e-05, 5.543099999999815e-05, 5.6736000000001674e-05, 5.493100000000112e-05, 5.672300000000158e-05, 5.5387999999999965e-05, 5.4944000000001214e-05, 5.5236000000000174e-05, 5.5499999999999994e-05, 5.5680000000002394e-05, 5.5513999999999564e-05, 5.4999999999999494e-05, 5.5721999999997635e-05, 5.5541999999998704e-05, 5.561100000000055e-05, 5.5249999999999744e-05, 5.5513999999999564e-05, 5.491699999999808e-05, 5.556999999999784e-05, 5.5235999999996704e-05]</msg>
<status status="PASS" starttime="20201112 10:14:26.090" endtime="20201112 10:14:26.092"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.085" endtime="20201112 10:14:26.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.095" endtime="20201112 10:14:26.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.098" endtime="20201112 10:14:26.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.097" endtime="20201112 10:14:26.118"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.093" endtime="20201112 10:14:26.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.727" endtime="20201112 10:14:26.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:25.726" endtime="20201112 10:14:26.119"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.128" endtime="20201112 10:14:26.146"></status>
</kw>
<msg timestamp="20201112 10:14:26.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.126" endtime="20201112 10:14:26.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.148" endtime="20201112 10:14:26.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.151" endtime="20201112 10:14:26.153"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.124" endtime="20201112 10:14:26.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.122" endtime="20201112 10:14:26.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.160" endtime="20201112 10:14:26.446"></status>
</kw>
<msg timestamp="20201112 10:14:26.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.159" endtime="20201112 10:14:26.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.451" endtime="20201112 10:14:26.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.459" endtime="20201112 10:14:26.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.156" endtime="20201112 10:14:26.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.155" endtime="20201112 10:14:26.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.465" level="INFO">${RESULT} = [{'time': 0.020060681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.607000000000181e-05, 'source_diff': 5.607000000000181e-05}, {'time': 0.020122667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:26.462" endtime="20201112 10:14:26.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.479" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:26.466" endtime="20201112 10:14:26.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.483" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.482" endtime="20201112 10:14:26.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.486" level="INFO">VALUE: [5.607000000000181e-05, 5.640300000000001e-05, 5.663900000000069e-05, 5.588899999999994e-05, 5.6041999999999204e-05, 5.665299999999679e-05, 5.6055999999998773e-05, 5.644499999999872e-05, 5.6138000000000715e-05, 5.6305999999999023e-05, 5.611100000000105e-05, 5.6569999999998843e-05, 5.658299999999894e-05, 5.7749999999998775e-05, 5.606999999999834e-05, 5.626299999999737e-05, 5.606899999999887e-05, 5.6652000000000785e-05, 5.611100000000105e-05, 5.6179999999999425e-05, 5.665300000000026e-05, 5.6000000000000494e-05, 5.616699999999933e-05, 5.655600000000274e-05, 5.6291999999999454e-05, 5.7763999999998344e-05, 5.6041999999999204e-05, 5.7777999999997914e-05, 5.634700000000173e-05, 5.611100000000105e-05, 5.6264000000000314e-05, 5.7806000000000524e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.66809999999994e-05, 5.661200000000102e-05, 5.6500000000000994e-05, 5.6152000000000285e-05, 5.7750000000002244e-05, 5.6416000000000105e-05, 5.7778000000001384e-05, 5.611099999999758e-05, 5.6250000000000744e-05, 5.586099999999733e-05, 5.6264000000000314e-05, 5.613900000000019e-05, 5.61809999999989e-05, 5.594499999999822e-05, 5.6736000000001674e-05, 5.583400000000113e-05]</msg>
<status status="PASS" starttime="20201112 10:14:26.484" endtime="20201112 10:14:26.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.480" endtime="20201112 10:14:26.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.489" endtime="20201112 10:14:26.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.493" endtime="20201112 10:14:26.512"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.491" endtime="20201112 10:14:26.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.488" endtime="20201112 10:14:26.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.120" endtime="20201112 10:14:26.513"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.119" endtime="20201112 10:14:26.514"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.522" endtime="20201112 10:14:26.541"></status>
</kw>
<msg timestamp="20201112 10:14:26.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.521" endtime="20201112 10:14:26.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.542" endtime="20201112 10:14:26.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.544" endtime="20201112 10:14:26.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.518" endtime="20201112 10:14:26.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.516" endtime="20201112 10:14:26.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.554" endtime="20201112 10:14:26.840"></status>
</kw>
<msg timestamp="20201112 10:14:26.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.553" endtime="20201112 10:14:26.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020088306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.844" endtime="20201112 10:14:26.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.853" endtime="20201112 10:14:26.854"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.550" endtime="20201112 10:14:26.855"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.549" endtime="20201112 10:14:26.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:26.859" level="INFO">${RESULT} = [{'time': 0.020145694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7387999999998496e-05, 'source_diff': 5.7387999999998496e-05}, {'time': 0.020205694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:26.856" endtime="20201112 10:14:26.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:26.873" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:26.860" endtime="20201112 10:14:26.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.877" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 10:14:26.876" endtime="20201112 10:14:26.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.880" level="INFO">VALUE: [5.7387999999998496e-05, 5.686099999999833e-05, 5.6930000000000175e-05, 5.704099999999726e-05, 5.7013999999997594e-05, 5.7166000000000855e-05, 5.713899999999772e-05, 5.7249999999998274e-05, 5.7485999999998955e-05, 5.7513999999998094e-05, 5.7000000000001494e-05, 5.769499999999997e-05, 5.743100000000015e-05, 5.768099999999693e-05, 5.7193999999999995e-05, 5.7499999999998525e-05, 5.744499999999972e-05, 5.883300000000119e-05, 5.769499999999997e-05, 5.7542000000000704e-05, 5.756900000000037e-05, 5.75550000000008e-05, 5.691700000000008e-05, 5.8749999999999775e-05, 5.730500000000055e-05, 5.763900000000169e-05, 5.6985999999998455e-05, 5.730499999999708e-05, 5.684699999999876e-05, 5.766700000000083e-05, 5.6999999999998024e-05, 5.7013999999997594e-05, 5.711099999999858e-05, 5.744499999999972e-05, 5.7722000000003104e-05, 5.766700000000083e-05, 5.7292000000000454e-05, 5.7166000000000855e-05, 5.8806000000001524e-05, 5.702699999999769e-05, 5.71809999999999e-05, 5.7055999999999774e-05, 5.7055999999999774e-05, 5.7388000000001965e-05, 5.697299999999836e-05, 5.755499999999733e-05, 5.68610000000018e-05, 5.880499999999858e-05, 5.7527999999997664e-05, 5.7665999999997886e-05]</msg>
<status status="PASS" starttime="20201112 10:14:26.878" endtime="20201112 10:14:26.881"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.873" endtime="20201112 10:14:26.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.883" endtime="20201112 10:14:26.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:26.887" endtime="20201112 10:14:26.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.885" endtime="20201112 10:14:26.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.882" endtime="20201112 10:14:26.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.515" endtime="20201112 10:14:26.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.514" endtime="20201112 10:14:26.908"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.916" endtime="20201112 10:14:26.934"></status>
</kw>
<msg timestamp="20201112 10:14:26.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.915" endtime="20201112 10:14:26.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:26.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:26.936" endtime="20201112 10:14:26.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.938" endtime="20201112 10:14:26.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.912" endtime="20201112 10:14:26.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.910" endtime="20201112 10:14:26.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:26.948" endtime="20201112 10:14:27.234"></status>
</kw>
<msg timestamp="20201112 10:14:27.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:26.947" endtime="20201112 10:14:27.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.239" endtime="20201112 10:14:27.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.247" endtime="20201112 10:14:27.248"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.944" endtime="20201112 10:14:27.249"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.943" endtime="20201112 10:14:27.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.253" level="INFO">${RESULT} = [{'time': 0.019821611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9791999999999484e-05, 'source_diff': 5.9791999999999484e-05}, {'time': 0.019881625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:27.250" endtime="20201112 10:14:27.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.268" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:27.254" endtime="20201112 10:14:27.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.272" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.271" endtime="20201112 10:14:27.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.275" level="INFO">VALUE: [5.9791999999999484e-05, 5.784699999999976e-05, 5.9806000000002524e-05, 5.866699999999836e-05, 5.9777999999999915e-05, 5.8222000000000135e-05, 5.865300000000226e-05, 5.809700000000001e-05, 5.793100000000065e-05, 5.78610000000028e-05, 5.8249999999999275e-05, 5.843100000000115e-05, 5.862499999999965e-05, 5.861100000000008e-05, 5.80550000000013e-05, 5.81810000000009e-05, 5.8263999999998844e-05, 5.804100000000173e-05, 5.7999999999999025e-05, 5.830499999999808e-05, 5.813899999999872e-05, 5.85550000000018e-05, 5.861100000000008e-05, 5.8235999999999705e-05, 5.8485999999999955e-05, 5.841700000000158e-05, 5.8292000000001454e-05, 5.836099999999983e-05, 5.8513999999999095e-05, 5.7930000000001175e-05, 5.8749999999999775e-05, 5.791699999999761e-05, 5.811099999999958e-05, 5.788900000000194e-05, 5.866699999999836e-05, 5.826299999999937e-05, 5.8722000000000635e-05, 5.8514000000002564e-05, 5.8680000000001925e-05, 5.9750000000000775e-05, 5.861100000000008e-05, 5.809700000000001e-05, 5.806900000000087e-05, 5.790300000000151e-05, 5.8430000000001675e-05, 5.9778000000003384e-05, 5.8236000000003174e-05, 5.7944000000000745e-05, 5.81810000000009e-05, 5.843100000000115e-05]</msg>
<status status="PASS" starttime="20201112 10:14:27.273" endtime="20201112 10:14:27.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.269" endtime="20201112 10:14:27.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.278" endtime="20201112 10:14:27.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.282" endtime="20201112 10:14:27.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.280" endtime="20201112 10:14:27.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.276" endtime="20201112 10:14:27.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.908" endtime="20201112 10:14:27.302"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:26.908" endtime="20201112 10:14:27.303"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.311" endtime="20201112 10:14:27.330"></status>
</kw>
<msg timestamp="20201112 10:14:27.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.310" endtime="20201112 10:14:27.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.331" endtime="20201112 10:14:27.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.334" endtime="20201112 10:14:27.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.307" endtime="20201112 10:14:27.337"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.305" endtime="20201112 10:14:27.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.344" endtime="20201112 10:14:27.629"></status>
</kw>
<msg timestamp="20201112 10:14:27.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.342" endtime="20201112 10:14:27.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.633" endtime="20201112 10:14:27.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.641" endtime="20201112 10:14:27.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.340" endtime="20201112 10:14:27.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.338" endtime="20201112 10:14:27.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:27.648" level="INFO">${RESULT} = [{'time': 0.019815958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8972000000000885e-05, 'source_diff': 5.8972000000000885e-05}, {'time': 0.019880972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:27.645" endtime="20201112 10:14:27.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:27.661" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:27.649" endtime="20201112 10:14:27.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.666" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 10:14:27.665" endtime="20201112 10:14:27.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.668" level="INFO">VALUE: [5.8972000000000885e-05, 5.9500000000000525e-05, 5.9721999999998165e-05, 5.968099999999893e-05, 5.940299999999954e-05, 6.0806000000000054e-05, 5.9320000000001594e-05, 5.883300000000119e-05, 5.9679999999999456e-05, 5.9500000000000525e-05, 5.968099999999893e-05, 5.9472000000001385e-05, 5.9291999999998984e-05, 5.962500000000065e-05, 5.8887999999999996e-05, 6.0792000000000485e-05, 6.081899999999668e-05, 5.8915999999999136e-05, 5.911099999999711e-05, 5.9429999999999206e-05, 5.931900000000212e-05, 5.930499999999908e-05, 6.081899999999668e-05, 5.9500000000000525e-05, 5.936099999999736e-05, 5.9514000000000095e-05, 5.912500000000015e-05, 5.894500000000122e-05, 5.891699999999861e-05, 5.9334000000001164e-05, 5.883299999999772e-05, 5.912500000000015e-05, 5.919500000000147e-05, 5.9236000000000705e-05, 5.936100000000083e-05, 5.9500000000000525e-05, 5.943099999999868e-05, 5.915300000000276e-05, 6.072300000000211e-05, 5.9055999999998304e-05, 6.0750000000001775e-05, 5.933299999999822e-05, 5.934699999999779e-05, 5.9514000000000095e-05, 5.879099999999901e-05, 5.959700000000151e-05, 5.8986000000000455e-05, 6.0778000000000915e-05, 5.9319999999998124e-05, 5.891700000000208e-05]</msg>
<status status="PASS" starttime="20201112 10:14:27.667" endtime="20201112 10:14:27.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.662" endtime="20201112 10:14:27.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.672" endtime="20201112 10:14:27.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:27.675" endtime="20201112 10:14:27.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.674" endtime="20201112 10:14:27.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.670" endtime="20201112 10:14:27.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.303" endtime="20201112 10:14:27.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.303" endtime="20201112 10:14:27.696"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.705" endtime="20201112 10:14:27.723"></status>
</kw>
<msg timestamp="20201112 10:14:27.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.703" endtime="20201112 10:14:27.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:27.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:27.724" endtime="20201112 10:14:27.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.727" endtime="20201112 10:14:27.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.700" endtime="20201112 10:14:27.730"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.698" endtime="20201112 10:14:27.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:27.737" endtime="20201112 10:14:28.022"></status>
</kw>
<msg timestamp="20201112 10:14:28.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:27.735" endtime="20201112 10:14:28.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019894278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.026" endtime="20201112 10:14:28.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.035" endtime="20201112 10:14:28.036"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.733" endtime="20201112 10:14:28.037"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.731" endtime="20201112 10:14:28.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.041" level="INFO">${RESULT} = [{'time': 0.019894278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0236000000001705e-05, 'source_diff': 6.0236000000001705e-05}, {'time': 0.019960278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:28.038" endtime="20201112 10:14:28.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.055" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:28.042" endtime="20201112 10:14:28.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.059" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.058" endtime="20201112 10:14:28.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.062" level="INFO">VALUE: [6.0236000000001705e-05, 6.0291999999999984e-05, 6.036099999999836e-05, 6.0028000000000165e-05, 6.00689999999994e-05, 5.9888000000000996e-05, 6.066700000000036e-05, 6.0194000000002995e-05, 6.062500000000165e-05, 6.180499999999811e-05, 6.061100000000208e-05, 5.9916000000000136e-05, 6.0319999999999124e-05, 6.0542000000000235e-05, 6.011100000000158e-05, 6.013900000000072e-05, 6.0680000000000456e-05, 6.0013999999997125e-05, 6.180599999999759e-05, 6.03889999999975e-05, 6.0569999999999374e-05, 6.036099999999836e-05, 6.0306000000003024e-05, 5.9848000000001234e-05, 6.0749999999998305e-05, 6.047300000000186e-05, 6.0111999999997584e-05, 6.0443999999999776e-05, 6.0792000000000485e-05, 6.0666000000000886e-05, 6.168000000000146e-05, 6.0000000000001025e-05, 6.033299999999922e-05, 6.0194999999999e-05, 6.065300000000079e-05, 6.009699999999854e-05, 6.0680000000000456e-05, 6.0542000000000235e-05, 6.0333999999998694e-05, 6.17499999999993e-05, 6.0735999999998735e-05, 6.012499999999768e-05, 6.0056000000002774e-05, 6.06949999999995e-05, 6.0000000000001025e-05, 6.0306000000003024e-05, 6.17629999999994e-05, 6.0207999999999096e-05, 5.987499999999743e-05, 6.0569999999999374e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.060" endtime="20201112 10:14:28.062"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.055" endtime="20201112 10:14:28.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.065" endtime="20201112 10:14:28.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.069" endtime="20201112 10:14:28.088"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.067" endtime="20201112 10:14:28.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.064" endtime="20201112 10:14:28.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.697" endtime="20201112 10:14:28.089"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:27.696" endtime="20201112 10:14:28.089"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.098" endtime="20201112 10:14:28.116"></status>
</kw>
<msg timestamp="20201112 10:14:28.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.096" endtime="20201112 10:14:28.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.118" endtime="20201112 10:14:28.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.120" endtime="20201112 10:14:28.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.094" endtime="20201112 10:14:28.124"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.092" endtime="20201112 10:14:28.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.131" endtime="20201112 10:14:28.413"></status>
</kw>
<msg timestamp="20201112 10:14:28.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019766361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.129" endtime="20201112 10:14:28.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019766361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019828056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.417" endtime="20201112 10:14:28.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.425" endtime="20201112 10:14:28.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.126" endtime="20201112 10:14:28.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.125" endtime="20201112 10:14:28.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.432" level="INFO">${RESULT} = [{'time': 0.019828056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.16950000000005e-05, 'source_diff': 6.16950000000005e-05}, {'time': 0.019895042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:28.429" endtime="20201112 10:14:28.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.446" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:28.433" endtime="20201112 10:14:28.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.450" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.449" endtime="20201112 10:14:28.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.453" level="INFO">VALUE: [6.16950000000005e-05, 6.133400000000316e-05, 6.141700000000111e-05, 6.10560000000003e-05, 6.276399999999988e-05, 6.088799999999853e-05, 6.105500000000083e-05, 6.155500000000133e-05, 6.0971999999999416e-05, 6.14300000000012e-05, 6.138900000000197e-05, 6.086100000000233e-05, 6.142999999999774e-05, 6.149999999999906e-05, 6.162499999999918e-05, 6.094499999999975e-05, 6.152800000000166e-05, 6.091700000000061e-05, 6.13889999999985e-05, 6.172200000000017e-05, 6.0888000000001996e-05, 6.098700000000193e-05, 6.113900000000172e-05, 6.104100000000126e-05, 6.280500000000258e-05, 6.105500000000083e-05, 6.17080000000006e-05, 6.115200000000182e-05, 6.133300000000022e-05, 6.123599999999924e-05, 6.159700000000004e-05, 6.134699999999979e-05, 6.154200000000123e-05, 6.116700000000086e-05, 6.087499999999843e-05, 6.112499999999868e-05, 6.111100000000258e-05, 6.090300000000104e-05, 6.1000000000002025e-05, 6.116600000000139e-05, 6.084699999999929e-05, 6.1014000000001595e-05, 6.170900000000007e-05, 6.272300000000064e-05, 6.17080000000006e-05, 6.163900000000222e-05, 6.0944000000000276e-05, 6.134699999999979e-05, 6.113900000000172e-05, 6.130500000000108e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.451" endtime="20201112 10:14:28.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.447" endtime="20201112 10:14:28.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.456" endtime="20201112 10:14:28.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.460" endtime="20201112 10:14:28.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.458" endtime="20201112 10:14:28.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.455" endtime="20201112 10:14:28.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.090" endtime="20201112 10:14:28.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.090" endtime="20201112 10:14:28.481"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.489" endtime="20201112 10:14:28.508"></status>
</kw>
<msg timestamp="20201112 10:14:28.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.488" endtime="20201112 10:14:28.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.510" endtime="20201112 10:14:28.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.512" endtime="20201112 10:14:28.514"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.485" endtime="20201112 10:14:28.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.483" endtime="20201112 10:14:28.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.522" endtime="20201112 10:14:28.808"></status>
</kw>
<msg timestamp="20201112 10:14:28.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019845861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019908097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.521" endtime="20201112 10:14:28.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019845861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019908097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.813" endtime="20201112 10:14:28.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.822" endtime="20201112 10:14:28.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.518" endtime="20201112 10:14:28.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.516" endtime="20201112 10:14:28.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:28.829" level="INFO">${RESULT} = [{'time': 0.019908097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.223600000000024e-05, 'source_diff': 6.223600000000024e-05}, {'time': 0.019973083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:28.825" endtime="20201112 10:14:28.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:28.844" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:28.830" endtime="20201112 10:14:28.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.849" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 10:14:28.848" endtime="20201112 10:14:28.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.851" level="INFO">VALUE: [6.223600000000024e-05, 6.186099999999986e-05, 6.205500000000183e-05, 6.237499999999993e-05, 6.230499999999861e-05, 6.268000000000246e-05, 6.223600000000024e-05, 6.243099999999821e-05, 6.247200000000092e-05, 6.194500000000075e-05, 6.247300000000039e-05, 6.218100000000143e-05, 6.18750000000029e-05, 6.223600000000024e-05, 6.268099999999846e-05, 6.2195000000001e-05, 6.250000000000006e-05, 6.193100000000118e-05, 6.218000000000196e-05, 6.25690000000019e-05, 6.237499999999993e-05, 6.379100000000054e-05, 6.236100000000036e-05, 6.270799999999813e-05, 6.223600000000024e-05, 6.213899999999925e-05, 6.236100000000036e-05, 6.194400000000128e-05, 6.187499999999943e-05, 6.231999999999766e-05, 6.197200000000042e-05, 6.261099999999714e-05, 6.20279999999987e-05, 6.373599999999827e-05, 6.211100000000011e-05, 6.262500000000018e-05, 6.229199999999852e-05, 6.24019999999996e-05, 6.180500000000158e-05, 6.261100000000061e-05, 6.204200000000173e-05, 6.188900000000247e-05, 6.237499999999993e-05, 6.279200000000248e-05, 6.258300000000147e-05, 6.230600000000155e-05, 6.192999999999824e-05, 6.266600000000289e-05, 6.227799999999895e-05, 6.27500000000003e-05]</msg>
<status status="PASS" starttime="20201112 10:14:28.850" endtime="20201112 10:14:28.852"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.845" endtime="20201112 10:14:28.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.855" endtime="20201112 10:14:28.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:28.858" endtime="20201112 10:14:28.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.857" endtime="20201112 10:14:28.878"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.853" endtime="20201112 10:14:28.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.482" endtime="20201112 10:14:28.879"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.481" endtime="20201112 10:14:28.879"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.888" endtime="20201112 10:14:28.907"></status>
</kw>
<msg timestamp="20201112 10:14:28.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.886" endtime="20201112 10:14:28.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:28.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:28.908" endtime="20201112 10:14:28.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.911" endtime="20201112 10:14:28.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.884" endtime="20201112 10:14:28.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.882" endtime="20201112 10:14:28.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:28.921" endtime="20201112 10:14:29.207"></status>
</kw>
<msg timestamp="20201112 10:14:29.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:28.920" endtime="20201112 10:14:29.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020058306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.211" endtime="20201112 10:14:29.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.220" endtime="20201112 10:14:29.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.917" endtime="20201112 10:14:29.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.915" endtime="20201112 10:14:29.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.227" level="INFO">${RESULT} = [{'time': 0.020123125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.481899999999721e-05, 'source_diff': 6.481899999999721e-05}, {'time': 0.020188139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:29.224" endtime="20201112 10:14:29.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.242" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:29.228" endtime="20201112 10:14:29.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.246" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.245" endtime="20201112 10:14:29.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.249" level="INFO">VALUE: [6.481899999999721e-05, 6.287500000000043e-05, 6.35690000000029e-05, 6.37219999999987e-05, 6.305599999999884e-05, 6.362499999999771e-05, 6.482000000000016e-05, 6.298599999999752e-05, 6.317999999999949e-05, 6.333299999999875e-05, 6.477800000000145e-05, 6.37639999999974e-05, 6.479100000000154e-05, 6.342999999999974e-05, 6.313900000000025e-05, 6.366699999999989e-05, 6.35280000000002e-05, 6.350000000000106e-05, 6.37639999999974e-05, 6.323599999999777e-05, 6.340300000000007e-05, 6.316699999999939e-05, 6.32500000000008e-05, 6.305599999999884e-05, 6.324999999999734e-05, 6.341700000000311e-05, 6.350000000000106e-05, 6.480599999999712e-05, 6.366600000000042e-05, 6.474999999999884e-05, 6.323700000000071e-05, 6.344400000000278e-05, 6.337500000000093e-05, 6.30279999999997e-05, 6.312500000000068e-05, 6.474999999999884e-05, 6.359700000000204e-05, 6.300000000000056e-05, 6.362500000000118e-05, 6.348599999999802e-05, 6.336100000000136e-05, 6.341699999999964e-05, 6.295799999999838e-05, 6.370900000000207e-05, 6.340300000000007e-05, 6.348599999999802e-05, 6.298600000000099e-05, 6.482000000000016e-05, 6.330599999999909e-05, 6.351399999999716e-05]</msg>
<status status="PASS" starttime="20201112 10:14:29.247" endtime="20201112 10:14:29.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.243" endtime="20201112 10:14:29.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.252" endtime="20201112 10:14:29.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.256" endtime="20201112 10:14:29.275"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.254" endtime="20201112 10:14:29.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.251" endtime="20201112 10:14:29.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.880" endtime="20201112 10:14:29.276"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:28.879" endtime="20201112 10:14:29.277"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.285" endtime="20201112 10:14:29.305"></status>
</kw>
<msg timestamp="20201112 10:14:29.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.284" endtime="20201112 10:14:29.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.306" endtime="20201112 10:14:29.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.309" endtime="20201112 10:14:29.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.281" endtime="20201112 10:14:29.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.279" endtime="20201112 10:14:29.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.319" endtime="20201112 10:14:29.605"></status>
</kw>
<msg timestamp="20201112 10:14:29.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.317" endtime="20201112 10:14:29.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020096819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020161486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.609" endtime="20201112 10:14:29.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.617" endtime="20201112 10:14:29.619"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.315" endtime="20201112 10:14:29.620"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.313" endtime="20201112 10:14:29.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:29.624" level="INFO">${RESULT} = [{'time': 0.020161486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.466700000000089e-05, 'source_diff': 6.466700000000089e-05}, {'time': 0.0202295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:29.621" endtime="20201112 10:14:29.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:29.638" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:29.625" endtime="20201112 10:14:29.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.642" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 10:14:29.641" endtime="20201112 10:14:29.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.645" level="INFO">VALUE: [6.466700000000089e-05, 6.468100000000046e-05, 6.399999999999809e-05, 6.437499999999846e-05, 6.444499999999978e-05, 6.419499999999953e-05, 6.469500000000003e-05, 6.580599999999812e-05, 6.581900000000168e-05, 6.574999999999984e-05, 6.466700000000089e-05, 6.39439999999998e-05, 6.47500000000023e-05, 6.393000000000024e-05, 6.466600000000142e-05, 6.408300000000297e-05, 6.423600000000224e-05, 6.448600000000249e-05, 6.466700000000089e-05, 6.393099999999971e-05, 6.447199999999945e-05, 6.461099999999914e-05, 6.394499999999928e-05, 6.447199999999945e-05, 6.448599999999902e-05, 6.413900000000125e-05, 6.574999999999984e-05, 6.398599999999852e-05, 6.422299999999867e-05, 6.449999999999859e-05, 6.42219999999992e-05, 6.581899999999821e-05, 6.406899999999993e-05, 6.417999999999702e-05, 6.423599999999877e-05, 6.424999999999834e-05, 6.474999999999884e-05, 6.393000000000024e-05, 6.39439999999998e-05, 6.466700000000089e-05, 6.400000000000156e-05, 6.444499999999978e-05, 6.416700000000039e-05, 6.448599999999902e-05, 6.580599999999812e-05, 6.448599999999902e-05, 6.580600000000159e-05, 6.399999999999809e-05, 6.442999999999727e-05, 6.422299999999867e-05]</msg>
<status status="PASS" starttime="20201112 10:14:29.643" endtime="20201112 10:14:29.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.639" endtime="20201112 10:14:29.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.648" endtime="20201112 10:14:29.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:29.652" endtime="20201112 10:14:29.671"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.650" endtime="20201112 10:14:29.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.647" endtime="20201112 10:14:29.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.278" endtime="20201112 10:14:29.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.277" endtime="20201112 10:14:29.673"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.681" endtime="20201112 10:14:29.700"></status>
</kw>
<msg timestamp="20201112 10:14:29.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.680" endtime="20201112 10:14:29.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:29.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:29.702" endtime="20201112 10:14:29.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.704" endtime="20201112 10:14:29.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.677" endtime="20201112 10:14:29.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.675" endtime="20201112 10:14:29.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:29.714" endtime="20201112 10:14:30.000"></status>
</kw>
<msg timestamp="20201112 10:14:30.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:29.713" endtime="20201112 10:14:30.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.004" endtime="20201112 10:14:30.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.012" endtime="20201112 10:14:30.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.710" endtime="20201112 10:14:30.014"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.708" endtime="20201112 10:14:30.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.019" level="INFO">${RESULT} = [{'time': 0.019860153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.493099999999724e-05, 'source_diff': 6.493099999999724e-05}, {'time': 0.019932153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:30.015" endtime="20201112 10:14:30.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.032" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:30.020" endtime="20201112 10:14:30.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.037" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.036" endtime="20201112 10:14:30.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.039" level="INFO">VALUE: [6.493099999999724e-05, 6.673600000000127e-05, 6.561100000000014e-05, 6.48479999999993e-05, 6.681899999999921e-05, 6.530499999999814e-05, 6.504100000000179e-05, 6.493000000000124e-05, 6.531900000000118e-05, 6.540300000000207e-05, 6.53890000000025e-05, 6.486099999999939e-05, 6.681899999999921e-05, 6.488899999999853e-05, 6.531900000000118e-05, 6.551399999999916e-05, 6.543099999999774e-05, 6.487499999999896e-05, 6.569499999999756e-05, 6.505600000000084e-05, 6.568100000000146e-05, 6.491700000000114e-05, 6.498699999999899e-05, 6.502700000000222e-05, 6.501399999999866e-05, 6.542999999999827e-05, 6.524999999999934e-05, 6.680499999999964e-05, 6.523599999999977e-05, 6.530500000000161e-05, 6.548600000000002e-05, 6.523599999999977e-05, 6.505600000000084e-05, 6.57220000000007e-05, 6.520800000000063e-05, 6.55969999999971e-05, 6.516700000000139e-05, 6.673600000000127e-05, 6.505599999999737e-05, 6.55280000000022e-05, 6.538899999999903e-05, 6.516700000000139e-05, 6.551299999999968e-05, 6.569399999999809e-05, 6.48479999999993e-05, 6.490300000000157e-05, 6.519400000000106e-05, 6.574999999999984e-05, 6.512500000000268e-05, 6.491600000000167e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.038" endtime="20201112 10:14:30.040"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.033" endtime="20201112 10:14:30.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.043" endtime="20201112 10:14:30.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.046" endtime="20201112 10:14:30.065"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.045" endtime="20201112 10:14:30.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.041" endtime="20201112 10:14:30.066"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.674" endtime="20201112 10:14:30.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:29.673" endtime="20201112 10:14:30.067"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.075" endtime="20201112 10:14:30.094"></status>
</kw>
<msg timestamp="20201112 10:14:30.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.074" endtime="20201112 10:14:30.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.095" endtime="20201112 10:14:30.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.098" endtime="20201112 10:14:30.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.071" endtime="20201112 10:14:30.101"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.069" endtime="20201112 10:14:30.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.108" endtime="20201112 10:14:30.393"></status>
</kw>
<msg timestamp="20201112 10:14:30.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.106" endtime="20201112 10:14:30.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019719139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.397" endtime="20201112 10:14:30.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.405" endtime="20201112 10:14:30.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.104" endtime="20201112 10:14:30.407"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.102" endtime="20201112 10:14:30.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.412" level="INFO">${RESULT} = [{'time': 0.019785542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.64029999999996e-05, 'source_diff': 6.64029999999996e-05}, {'time': 0.019856528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:30.409" endtime="20201112 10:14:30.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.426" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:30.413" endtime="20201112 10:14:30.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.431" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.430" endtime="20201112 10:14:30.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.433" level="INFO">VALUE: [6.64029999999996e-05, 6.631999999999819e-05, 6.665299999999985e-05, 6.679100000000007e-05, 6.58480000000003e-05, 6.63480000000008e-05, 6.63480000000008e-05, 6.587499999999996e-05, 6.64029999999996e-05, 6.631900000000218e-05, 6.775000000000184e-05, 6.780500000000064e-05, 6.652799999999973e-05, 6.625000000000034e-05, 6.587499999999996e-05, 6.623600000000077e-05, 6.661100000000114e-05, 6.600000000000009e-05, 6.652799999999973e-05, 6.67090000000016e-05, 6.587499999999996e-05, 6.586100000000039e-05, 6.652799999999973e-05, 6.591699999999867e-05, 6.601300000000018e-05, 6.641700000000264e-05, 6.637499999999699e-05, 6.611100000000064e-05, 6.643000000000274e-05, 6.637500000000046e-05, 6.592999999999877e-05, 6.637500000000046e-05, 6.648600000000102e-05, 6.592999999999877e-05, 6.787499999999849e-05, 6.600000000000009e-05, 6.776399999999794e-05, 6.629199999999905e-05, 6.663900000000028e-05, 6.588899999999953e-05, 6.618100000000196e-05, 6.616699999999892e-05, 6.641699999999917e-05, 6.594500000000128e-05, 6.666699999999942e-05, 6.588799999999659e-05, 6.601399999999966e-05, 6.650000000000059e-05, 6.587499999999996e-05, 6.682000000000216e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.432" endtime="20201112 10:14:30.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.427" endtime="20201112 10:14:30.435"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.437" endtime="20201112 10:14:30.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.440" endtime="20201112 10:14:30.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.439" endtime="20201112 10:14:30.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.435" endtime="20201112 10:14:30.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.068" endtime="20201112 10:14:30.461"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.067" endtime="20201112 10:14:30.461"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.470" endtime="20201112 10:14:30.488"></status>
</kw>
<msg timestamp="20201112 10:14:30.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.468" endtime="20201112 10:14:30.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.490" endtime="20201112 10:14:30.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.492" endtime="20201112 10:14:30.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.465" endtime="20201112 10:14:30.495"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.463" endtime="20201112 10:14:30.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.502" endtime="20201112 10:14:30.788"></status>
</kw>
<msg timestamp="20201112 10:14:30.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.500" endtime="20201112 10:14:30.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.792" endtime="20201112 10:14:30.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.800" endtime="20201112 10:14:30.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.498" endtime="20201112 10:14:30.802"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.496" endtime="20201112 10:14:30.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:30.807" level="INFO">${RESULT} = [{'time': 0.019792375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.747200000000245e-05, 'source_diff': 6.747200000000245e-05}, {'time': 0.019865375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:30.803" endtime="20201112 10:14:30.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:30.820" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:30.808" endtime="20201112 10:14:30.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.825" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 10:14:30.824" endtime="20201112 10:14:30.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.827" level="INFO">VALUE: [6.747200000000245e-05, 6.705599999999937e-05, 6.768099999999999e-05, 6.724999999999787e-05, 6.705599999999937e-05, 6.715300000000035e-05, 6.698700000000099e-05, 6.694399999999934e-05, 6.725000000000134e-05, 6.880499999999817e-05, 6.718000000000002e-05, 6.737500000000146e-05, 6.72359999999983e-05, 6.754100000000082e-05, 6.705500000000336e-05, 6.713900000000078e-05, 6.734700000000232e-05, 6.691699999999967e-05, 6.883300000000078e-05, 6.737499999999799e-05, 6.725000000000134e-05, 6.70419999999998e-05, 6.730599999999962e-05, 6.686100000000139e-05, 6.712500000000121e-05, 6.712500000000121e-05, 6.759799999999858e-05, 6.766599999999748e-05, 6.769400000000009e-05, 6.719399999999959e-05, 6.74030000000006e-05, 6.737500000000146e-05, 6.769400000000009e-05, 6.770799999999966e-05, 6.74030000000006e-05, 6.754099999999735e-05, 6.727800000000048e-05, 6.701399999999719e-05, 6.725000000000134e-05, 6.75420000000003e-05, 6.693099999999924e-05, 6.7583999999999e-05, 6.70419999999998e-05, 6.730600000000309e-05, 6.74169999999967e-05, 6.686200000000087e-05, 6.77640000000014e-05, 6.695800000000238e-05, 6.763900000000128e-05, 6.879100000000207e-05]</msg>
<status status="PASS" starttime="20201112 10:14:30.826" endtime="20201112 10:14:30.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.821" endtime="20201112 10:14:30.832"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.835" endtime="20201112 10:14:30.836"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:30.838" endtime="20201112 10:14:30.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.837" endtime="20201112 10:14:30.858"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.833" endtime="20201112 10:14:30.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.462" endtime="20201112 10:14:30.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.461" endtime="20201112 10:14:30.859"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.868" endtime="20201112 10:14:30.887"></status>
</kw>
<msg timestamp="20201112 10:14:30.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.866" endtime="20201112 10:14:30.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:30.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:30.889" endtime="20201112 10:14:30.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.891" endtime="20201112 10:14:30.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.864" endtime="20201112 10:14:30.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.862" endtime="20201112 10:14:30.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:30.901" endtime="20201112 10:14:31.187"></status>
</kw>
<msg timestamp="20201112 10:14:31.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:30.899" endtime="20201112 10:14:31.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019746833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.191" endtime="20201112 10:14:31.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.199" endtime="20201112 10:14:31.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.897" endtime="20201112 10:14:31.201"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.895" endtime="20201112 10:14:31.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.206" level="INFO">${RESULT} = [{'time': 0.019814958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.812500000000221e-05, 'source_diff': 6.812500000000221e-05}, {'time': 0.019888958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:31.202" endtime="20201112 10:14:31.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.219" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:31.207" endtime="20201112 10:14:31.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.223" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.222" endtime="20201112 10:14:31.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.226" level="INFO">VALUE: [6.812500000000221e-05, 6.812500000000221e-05, 6.82640000000019e-05, 6.827800000000148e-05, 6.980499999999917e-05, 6.862499999999924e-05, 6.80969999999996e-05, 6.808300000000003e-05, 6.825000000000234e-05, 6.787500000000196e-05, 6.822199999999973e-05, 6.818100000000049e-05, 6.812499999999874e-05, 6.972299999999723e-05, 6.874999999999937e-05, 6.837499999999899e-05, 6.841700000000117e-05, 6.836200000000237e-05, 6.849999999999912e-05, 6.787500000000196e-05, 6.820899999999963e-05, 6.975000000000037e-05, 6.79160000000012e-05, 6.805500000000089e-05, 6.79169999999972e-05, 6.847199999999998e-05, 6.824999999999887e-05, 6.820800000000016e-05, 6.801400000000166e-05, 6.819500000000006e-05, 6.851400000000216e-05, 6.819500000000006e-05, 6.800000000000209e-05, 6.855600000000087e-05, 6.876399999999894e-05, 6.793000000000077e-05, 6.862500000000271e-05, 6.849999999999912e-05, 6.855500000000139e-05, 6.84160000000017e-05, 6.829100000000157e-05, 6.794399999999687e-05, 6.979199999999908e-05, 6.85970000000001e-05, 6.8584e-05, 6.837499999999899e-05, 6.830600000000062e-05, 6.980600000000212e-05, 6.872200000000023e-05, 6.813899999999831e-05]</msg>
<status status="PASS" starttime="20201112 10:14:31.224" endtime="20201112 10:14:31.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.220" endtime="20201112 10:14:31.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.229" endtime="20201112 10:14:31.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.233" endtime="20201112 10:14:31.252"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.231" endtime="20201112 10:14:31.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.228" endtime="20201112 10:14:31.253"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.860" endtime="20201112 10:14:31.254"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:30.860" endtime="20201112 10:14:31.254"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.262" endtime="20201112 10:14:31.281"></status>
</kw>
<msg timestamp="20201112 10:14:31.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.261" endtime="20201112 10:14:31.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.282" endtime="20201112 10:14:31.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.285" endtime="20201112 10:14:31.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.258" endtime="20201112 10:14:31.288"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.256" endtime="20201112 10:14:31.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.295" endtime="20201112 10:14:31.580"></status>
</kw>
<msg timestamp="20201112 10:14:31.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.293" endtime="20201112 10:14:31.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.584" endtime="20201112 10:14:31.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.593" endtime="20201112 10:14:31.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.291" endtime="20201112 10:14:31.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.289" endtime="20201112 10:14:31.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.600" level="INFO">${RESULT} = [{'time': 0.019822736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.931900000000171e-05, 'source_diff': 6.931900000000171e-05}, {'time': 0.019896736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:31.596" endtime="20201112 10:14:31.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:31.613" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:31.600" endtime="20201112 10:14:31.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.617" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 10:14:31.616" endtime="20201112 10:14:31.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.620" level="INFO">VALUE: [6.931900000000171e-05, 6.92360000000003e-05, 6.962500000000024e-05, 6.952799999999926e-05, 6.938899999999956e-05, 6.887500000000296e-05, 6.955600000000187e-05, 6.893100000000124e-05, 6.97360000000008e-05, 7.069499999999909e-05, 6.936100000000042e-05, 6.973599999999733e-05, 7.081899999999974e-05, 6.93619999999999e-05, 6.941700000000217e-05, 6.894400000000134e-05, 6.908300000000103e-05, 6.951399999999969e-05, 6.933300000000128e-05, 6.938899999999956e-05, 6.897199999999701e-05, 6.919400000000159e-05, 6.941700000000217e-05, 6.936100000000042e-05, 6.912499999999974e-05, 6.948600000000055e-05, 6.950000000000012e-05, 6.915299999999888e-05, 7.07360000000018e-05, 6.962500000000024e-05, 6.958299999999806e-05, 6.944399999999837e-05, 6.94299999999988e-05, 6.893099999999777e-05, 7.081899999999974e-05, 6.948600000000055e-05, 6.92360000000003e-05, 6.894399999999787e-05, 6.933299999999781e-05, 6.94030000000026e-05, 6.924999999999987e-05, 6.962500000000024e-05, 6.937499999999999e-05, 6.924999999999987e-05, 6.966699999999895e-05, 7.077800000000051e-05, 7.081999999999922e-05, 6.894500000000081e-05, 7.080599999999965e-05, 6.909800000000008e-05]</msg>
<status status="PASS" starttime="20201112 10:14:31.618" endtime="20201112 10:14:31.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.614" endtime="20201112 10:14:31.621"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.623" endtime="20201112 10:14:31.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:31.627" endtime="20201112 10:14:31.646"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.625" endtime="20201112 10:14:31.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.622" endtime="20201112 10:14:31.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.255" endtime="20201112 10:14:31.647"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.254" endtime="20201112 10:14:31.648"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.656" endtime="20201112 10:14:31.675"></status>
</kw>
<msg timestamp="20201112 10:14:31.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.655" endtime="20201112 10:14:31.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:31.676" endtime="20201112 10:14:31.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.679" endtime="20201112 10:14:31.681"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.652" endtime="20201112 10:14:31.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.650" endtime="20201112 10:14:31.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.689" endtime="20201112 10:14:31.974"></status>
</kw>
<msg timestamp="20201112 10:14:31.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.687" endtime="20201112 10:14:31.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:31.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:31.979" endtime="20201112 10:14:31.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:31.987" endtime="20201112 10:14:31.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.685" endtime="20201112 10:14:31.989"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.683" endtime="20201112 10:14:31.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:31.994" level="INFO">${RESULT} = [{'time': 0.019881847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.020800000000216e-05, 'source_diff': 7.020800000000216e-05}, {'time': 0.019956847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:31.990" endtime="20201112 10:14:31.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.008" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:31.995" endtime="20201112 10:14:32.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.012" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.011" endtime="20201112 10:14:32.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.015" level="INFO">VALUE: [7.020800000000216e-05, 6.987500000000049e-05, 7.045899999999841e-05, 7.058300000000253e-05, 7.048599999999808e-05, 6.998599999999758e-05, 6.994399999999887e-05, 7.05559999999994e-05, 6.993100000000224e-05, 7.001400000000019e-05, 7.179200000000108e-05, 7.047199999999851e-05, 7.026400000000044e-05, 7.058399999999854e-05, 7.037499999999752e-05, 6.994499999999834e-05, 7.011199999999718e-05, 6.988900000000006e-05, 7.180500000000117e-05, 6.998600000000105e-05, 7.048600000000155e-05, 7.036100000000142e-05, 7.04299999999998e-05, 7.036100000000142e-05, 7.019499999999859e-05, 7.05559999999994e-05, 7.006899999999899e-05, 7.182000000000022e-05, 6.995899999999791e-05, 6.994500000000181e-05, 7.062500000000124e-05, 7.068099999999952e-05, 7.025000000000087e-05, 7.044399999999937e-05, 7.181900000000074e-05, 7.180600000000065e-05, 6.99299999999993e-05, 7.059699999999863e-05, 7.069399999999962e-05, 7.02910000000001e-05, 7.054199999999983e-05, 6.987500000000049e-05, 7.012500000000074e-05, 6.984700000000135e-05, 7.065300000000038e-05, 7.048599999999808e-05, 7.030599999999915e-05, 6.994499999999834e-05, 6.987500000000049e-05, 7.009699999999813e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.013" endtime="20201112 10:14:32.016"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.009" endtime="20201112 10:14:32.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.018" endtime="20201112 10:14:32.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.022" endtime="20201112 10:14:32.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.020" endtime="20201112 10:14:32.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.017" endtime="20201112 10:14:32.042"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.649" endtime="20201112 10:14:32.043"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:31.648" endtime="20201112 10:14:32.043"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.051" endtime="20201112 10:14:32.070"></status>
</kw>
<msg timestamp="20201112 10:14:32.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.050" endtime="20201112 10:14:32.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.072" endtime="20201112 10:14:32.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.074" endtime="20201112 10:14:32.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.047" endtime="20201112 10:14:32.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.045" endtime="20201112 10:14:32.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.084" endtime="20201112 10:14:32.369"></status>
</kw>
<msg timestamp="20201112 10:14:32.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.083" endtime="20201112 10:14:32.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.373" endtime="20201112 10:14:32.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.382" endtime="20201112 10:14:32.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.080" endtime="20201112 10:14:32.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.078" endtime="20201112 10:14:32.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.388" level="INFO">${RESULT} = [{'time': 0.019837181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.126399999999797e-05, 'source_diff': 7.126399999999797e-05}, {'time': 0.019912153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:32.385" endtime="20201112 10:14:32.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.402" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:32.389" endtime="20201112 10:14:32.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.406" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.405" endtime="20201112 10:14:32.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.409" level="INFO">VALUE: [7.126399999999797e-05, 7.116699999999698e-05, 7.097300000000195e-05, 7.112499999999827e-05, 7.280599999999818e-05, 7.09300000000003e-05, 7.136099999999895e-05, 7.086100000000192e-05, 7.148600000000255e-05, 7.131900000000024e-05, 7.165299999999791e-05, 7.098600000000205e-05, 7.134699999999938e-05, 7.115299999999741e-05, 7.279199999999861e-05, 7.115299999999741e-05, 7.084699999999888e-05, 7.123599999999883e-05, 7.282000000000122e-05, 7.131999999999972e-05, 7.086099999999845e-05, 7.087499999999802e-05, 7.119400000000012e-05, 7.117999999999708e-05, 7.272300000000023e-05, 7.138900000000156e-05, 7.273600000000033e-05, 7.141599999999776e-05, 7.169400000000062e-05, 7.100000000000162e-05, 7.112499999999827e-05, 7.097199999999901e-05, 7.138900000000156e-05, 7.125000000000187e-05, 7.097200000000248e-05, 7.273600000000033e-05, 7.137500000000199e-05, 7.140300000000113e-05, 7.095899999999891e-05, 7.131999999999972e-05, 7.111200000000165e-05, 7.137499999999852e-05, 7.136099999999895e-05, 7.130600000000015e-05, 7.163900000000181e-05, 7.155500000000092e-05, 7.144400000000037e-05, 7.09300000000003e-05, 7.104100000000085e-05, 7.126400000000144e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.407" endtime="20201112 10:14:32.409"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.403" endtime="20201112 10:14:32.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.412" endtime="20201112 10:14:32.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.416" endtime="20201112 10:14:32.435"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.414" endtime="20201112 10:14:32.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.411" endtime="20201112 10:14:32.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.044" endtime="20201112 10:14:32.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.043" endtime="20201112 10:14:32.436"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.445" endtime="20201112 10:14:32.464"></status>
</kw>
<msg timestamp="20201112 10:14:32.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.444" endtime="20201112 10:14:32.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.466" endtime="20201112 10:14:32.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.468" endtime="20201112 10:14:32.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.441" endtime="20201112 10:14:32.471"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.439" endtime="20201112 10:14:32.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.478" endtime="20201112 10:14:32.764"></status>
</kw>
<msg timestamp="20201112 10:14:32.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.477" endtime="20201112 10:14:32.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020074736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.768" endtime="20201112 10:14:32.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.777" endtime="20201112 10:14:32.778"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.474" endtime="20201112 10:14:32.779"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.472" endtime="20201112 10:14:32.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:32.783" level="INFO">${RESULT} = [{'time': 0.020074736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.217999999999808e-05, 'source_diff': 7.217999999999808e-05}, {'time': 0.020151722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:32.780" endtime="20201112 10:14:32.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:32.797" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:32.784" endtime="20201112 10:14:32.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.802" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 10:14:32.801" endtime="20201112 10:14:32.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.804" level="INFO">VALUE: [7.217999999999808e-05, 7.245800000000094e-05, 7.220799999999722e-05, 7.2069000000001e-05, 7.202799999999829e-05, 7.225000000000287e-05, 7.226400000000244e-05, 7.243100000000127e-05, 7.263899999999934e-05, 7.227799999999854e-05, 7.234799999999986e-05, 7.194500000000034e-05, 7.22369999999993e-05, 7.372300000000123e-05, 7.258300000000106e-05, 7.198599999999958e-05, 7.234700000000038e-05, 7.2069000000001e-05, 7.190299999999816e-05, 7.262499999999977e-05, 7.21109999999997e-05, 7.243100000000127e-05, 7.25560000000014e-05, 7.21109999999997e-05, 7.380599999999918e-05, 7.22499999999994e-05, 7.218099999999755e-05, 7.241699999999823e-05, 7.198599999999958e-05, 7.379199999999961e-05, 7.369399999999915e-05, 7.266600000000248e-05, 7.205500000000142e-05, 7.38049999999997e-05, 7.273600000000033e-05, 7.38049999999997e-05, 7.190299999999816e-05, 7.38049999999997e-05, 7.19309999999973e-05, 7.186099999999945e-05, 7.383400000000179e-05, 7.219500000000059e-05, 7.266699999999848e-05, 7.238899999999909e-05, 7.244500000000084e-05, 7.229200000000158e-05, 7.219400000000112e-05, 7.381899999999927e-05, 7.25690000000015e-05, 7.245799999999747e-05]</msg>
<status status="PASS" starttime="20201112 10:14:32.803" endtime="20201112 10:14:32.805"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.798" endtime="20201112 10:14:32.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.808" endtime="20201112 10:14:32.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:32.811" endtime="20201112 10:14:32.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.810" endtime="20201112 10:14:32.831"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.806" endtime="20201112 10:14:32.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.437" endtime="20201112 10:14:32.832"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.437" endtime="20201112 10:14:32.832"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.841" endtime="20201112 10:14:32.861"></status>
</kw>
<msg timestamp="20201112 10:14:32.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.839" endtime="20201112 10:14:32.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:32.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:32.862" endtime="20201112 10:14:32.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.865" endtime="20201112 10:14:32.867"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.837" endtime="20201112 10:14:32.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.835" endtime="20201112 10:14:32.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:32.875" endtime="20201112 10:14:33.160"></status>
</kw>
<msg timestamp="20201112 10:14:33.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:32.873" endtime="20201112 10:14:33.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020155708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.164" endtime="20201112 10:14:33.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.173" endtime="20201112 10:14:33.174"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.871" endtime="20201112 10:14:33.175"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.869" endtime="20201112 10:14:33.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.179" level="INFO">${RESULT} = [{'time': 0.020155708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.476400000000147e-05, 'source_diff': 7.476400000000147e-05}, {'time': 0.020232722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:33.176" endtime="20201112 10:14:33.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.193" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:33.180" endtime="20201112 10:14:33.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.197" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.196" endtime="20201112 10:14:33.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.200" level="INFO">VALUE: [7.476400000000147e-05, 7.369400000000262e-05, 7.336099999999748e-05, 7.359699999999816e-05, 7.311099999999723e-05, 7.350000000000065e-05, 7.323600000000083e-05, 7.330599999999868e-05, 7.31110000000007e-05, 7.36110000000012e-05, 7.307000000000147e-05, 7.372200000000176e-05, 7.332000000000172e-05, 7.313899999999984e-05, 7.287500000000002e-05, 7.356899999999902e-05, 7.370899999999819e-05, 7.483299999999984e-05, 7.336100000000095e-05, 7.362500000000077e-05, 7.341599999999976e-05, 7.373599999999786e-05, 7.300000000000015e-05, 7.312500000000027e-05, 7.313899999999984e-05, 7.480600000000018e-05, 7.318099999999855e-05, 7.34309999999988e-05, 7.294500000000134e-05, 7.340299999999966e-05, 7.317999999999908e-05, 7.368099999999905e-05, 7.286199999999993e-05, 7.369399999999915e-05, 7.361099999999773e-05, 7.284699999999741e-05, 7.359700000000163e-05, 7.469400000000015e-05, 7.338900000000009e-05, 7.347199999999804e-05, 7.332000000000172e-05, 7.284699999999741e-05, 7.307000000000147e-05, 7.338900000000009e-05, 7.361099999999773e-05, 7.297199999999754e-05, 7.30560000000019e-05, 7.35699999999985e-05, 7.362500000000077e-05, 7.336200000000043e-05]</msg>
<status status="PASS" starttime="20201112 10:14:33.198" endtime="20201112 10:14:33.200"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.194" endtime="20201112 10:14:33.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.203" endtime="20201112 10:14:33.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.207" endtime="20201112 10:14:33.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.205" endtime="20201112 10:14:33.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.202" endtime="20201112 10:14:33.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.833" endtime="20201112 10:14:33.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:32.833" endtime="20201112 10:14:33.227"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.236" endtime="20201112 10:14:33.255"></status>
</kw>
<msg timestamp="20201112 10:14:33.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.234" endtime="20201112 10:14:33.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.256" endtime="20201112 10:14:33.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.259" endtime="20201112 10:14:33.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.232" endtime="20201112 10:14:33.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.230" endtime="20201112 10:14:33.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.269" endtime="20201112 10:14:33.555"></status>
</kw>
<msg timestamp="20201112 10:14:33.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019866639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019940583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.267" endtime="20201112 10:14:33.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019866639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019940583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.559" endtime="20201112 10:14:33.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.567" endtime="20201112 10:14:33.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.265" endtime="20201112 10:14:33.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.263" endtime="20201112 10:14:33.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.574" level="INFO">${RESULT} = [{'time': 0.019940583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.394400000000287e-05, 'source_diff': 7.394400000000287e-05}, {'time': 0.020019597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:33.571" endtime="20201112 10:14:33.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.588" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:33.575" endtime="20201112 10:14:33.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.593" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.592" endtime="20201112 10:14:33.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.595" level="INFO">VALUE: [7.394400000000287e-05, 7.412500000000127e-05, 7.58050000000017e-05, 7.434699999999891e-05, 7.576400000000247e-05, 7.444499999999937e-05, 7.466700000000048e-05, 7.418000000000008e-05, 7.444499999999937e-05, 7.431999999999925e-05, 7.430600000000315e-05, 7.450000000000165e-05, 7.440300000000066e-05, 7.39439999999994e-05, 7.459799999999864e-05, 7.456900000000002e-05, 7.43050000000002e-05, 7.388900000000059e-05, 7.418099999999955e-05, 7.423599999999836e-05, 7.436099999999848e-05, 7.400000000000115e-05, 7.40560000000029e-05, 7.423599999999836e-05, 7.455599999999993e-05, 7.388900000000059e-05, 7.449999999999818e-05, 7.469499999999962e-05, 7.582000000000075e-05, 7.466700000000048e-05, 7.39439999999994e-05, 7.418000000000008e-05, 7.447199999999904e-05, 7.397200000000201e-05, 7.473599999999886e-05, 7.388900000000059e-05, 7.455599999999993e-05, 7.391699999999973e-05, 7.581900000000127e-05, 7.454200000000036e-05, 7.430599999999968e-05, 7.41249999999978e-05, 7.455599999999993e-05, 7.46249999999983e-05, 7.405599999999943e-05, 7.455599999999993e-05, 7.580599999999771e-05, 7.395799999999897e-05, 7.409799999999814e-05, 7.436099999999848e-05]</msg>
<status status="PASS" starttime="20201112 10:14:33.594" endtime="20201112 10:14:33.596"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.589" endtime="20201112 10:14:33.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.599" endtime="20201112 10:14:33.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.602" endtime="20201112 10:14:33.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.601" endtime="20201112 10:14:33.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.597" endtime="20201112 10:14:33.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.228" endtime="20201112 10:14:33.623"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.228" endtime="20201112 10:14:33.623"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.632" endtime="20201112 10:14:33.652"></status>
</kw>
<msg timestamp="20201112 10:14:33.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.630" endtime="20201112 10:14:33.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:33.653" endtime="20201112 10:14:33.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.655" endtime="20201112 10:14:33.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.628" endtime="20201112 10:14:33.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.626" endtime="20201112 10:14:33.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.665" endtime="20201112 10:14:33.951"></status>
</kw>
<msg timestamp="20201112 10:14:33.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019790417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.664" endtime="20201112 10:14:33.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019790417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019865958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:33.956" endtime="20201112 10:14:33.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.964" endtime="20201112 10:14:33.965"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.661" endtime="20201112 10:14:33.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.660" endtime="20201112 10:14:33.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:33.970" level="INFO">${RESULT} = [{'time': 0.019865958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554099999999841e-05, 'source_diff': 7.554099999999841e-05}, {'time': 0.019947014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:33.967" endtime="20201112 10:14:33.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:33.984" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:33.971" endtime="20201112 10:14:33.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.988" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 10:14:33.987" endtime="20201112 10:14:33.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:33.991" level="INFO">VALUE: [7.554099999999841e-05, 7.527799999999807e-05, 7.576400000000247e-05, 7.541600000000176e-05, 7.519400000000065e-05, 7.49310000000003e-05, 7.497199999999954e-05, 7.49310000000003e-05, 7.552799999999832e-05, 7.56249999999993e-05, 7.547200000000004e-05, 7.529200000000111e-05, 7.549999999999918e-05, 7.541700000000123e-05, 7.547299999999951e-05, 7.68050000000027e-05, 7.544399999999743e-05, 7.487499999999855e-05, 7.531900000000077e-05, 7.516600000000151e-05, 7.519400000000065e-05, 7.534699999999991e-05, 7.494499999999987e-05, 7.527800000000154e-05, 7.516700000000098e-05, 7.508399999999957e-05, 7.519500000000012e-05, 7.523599999999936e-05, 7.516600000000151e-05, 7.515299999999794e-05, 7.488900000000159e-05, 7.56249999999993e-05, 7.524999999999893e-05, 7.543000000000133e-05, 7.534699999999991e-05, 7.523600000000283e-05, 7.491599999999779e-05, 7.519399999999718e-05, 7.536099999999948e-05, 7.536099999999948e-05, 7.499999999999868e-05, 7.554200000000136e-05, 7.561099999999973e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.680599999999871e-05, 7.555600000000093e-05, 7.551400000000222e-05, 7.508399999999957e-05, 7.568000000000158e-05]</msg>
<status status="PASS" starttime="20201112 10:14:33.989" endtime="20201112 10:14:33.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.985" endtime="20201112 10:14:33.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:33.994" endtime="20201112 10:14:33.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:33.998" endtime="20201112 10:14:34.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.996" endtime="20201112 10:14:34.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.993" endtime="20201112 10:14:34.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.624" endtime="20201112 10:14:34.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:33.624" endtime="20201112 10:14:34.019"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.027" endtime="20201112 10:14:34.047"></status>
</kw>
<msg timestamp="20201112 10:14:34.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.026" endtime="20201112 10:14:34.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.048" endtime="20201112 10:14:34.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.051" endtime="20201112 10:14:34.053"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.023" endtime="20201112 10:14:34.054"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.021" endtime="20201112 10:14:34.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.061" endtime="20201112 10:14:34.346"></status>
</kw>
<msg timestamp="20201112 10:14:34.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.059" endtime="20201112 10:14:34.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019948694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.350" endtime="20201112 10:14:34.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.358" endtime="20201112 10:14:34.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.057" endtime="20201112 10:14:34.360"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.055" endtime="20201112 10:14:34.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.365" level="INFO">${RESULT} = [{'time': 0.019948694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.78189999999998e-05, 'source_diff': 7.78189999999998e-05}, {'time': 0.020030653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:34.361" endtime="20201112 10:14:34.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.378" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:34.366" endtime="20201112 10:14:34.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.382" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.381" endtime="20201112 10:14:34.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.385" level="INFO">VALUE: [7.78189999999998e-05, 7.601399999999925e-05, 7.594500000000087e-05, 7.599999999999968e-05, 7.654099999999942e-05, 7.668099999999858e-05, 7.611199999999971e-05, 7.591700000000173e-05, 7.651399999999975e-05, 7.640199999999972e-05, 7.59029999999987e-05, 7.78189999999998e-05, 7.602799999999882e-05, 7.777800000000057e-05, 7.604199999999839e-05, 7.637500000000005e-05, 7.612500000000327e-05, 7.661099999999726e-05, 7.623600000000036e-05, 7.656999999999803e-05, 7.654200000000236e-05, 7.661100000000073e-05, 7.611100000000023e-05, 7.588799999999965e-05, 7.651399999999975e-05, 7.611100000000023e-05, 7.611100000000023e-05, 7.61249999999998e-05, 7.64440000000019e-05, 7.605499999999848e-05, 7.601400000000272e-05, 7.648600000000061e-05, 7.62639999999995e-05, 7.656900000000202e-05, 7.644500000000137e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.641700000000223e-05, 7.598600000000011e-05, 7.782000000000275e-05, 7.618100000000155e-05, 7.598699999999958e-05, 7.7764000000001e-05, 7.622200000000079e-05, 7.611100000000023e-05, 7.609700000000066e-05, 7.62639999999995e-05, 7.605500000000195e-05, 7.644500000000137e-05, 7.631999999999778e-05]</msg>
<status status="PASS" starttime="20201112 10:14:34.383" endtime="20201112 10:14:34.385"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.379" endtime="20201112 10:14:34.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.388" endtime="20201112 10:14:34.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.392" endtime="20201112 10:14:34.411"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.390" endtime="20201112 10:14:34.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.387" endtime="20201112 10:14:34.412"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.020" endtime="20201112 10:14:34.413"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.019" endtime="20201112 10:14:34.413"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.421" endtime="20201112 10:14:34.441"></status>
</kw>
<msg timestamp="20201112 10:14:34.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.420" endtime="20201112 10:14:34.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.442" endtime="20201112 10:14:34.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.445" endtime="20201112 10:14:34.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.417" endtime="20201112 10:14:34.448"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.415" endtime="20201112 10:14:34.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.455" endtime="20201112 10:14:34.741"></status>
</kw>
<msg timestamp="20201112 10:14:34.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.453" endtime="20201112 10:14:34.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.745" endtime="20201112 10:14:34.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.753" endtime="20201112 10:14:34.755"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.451" endtime="20201112 10:14:34.756"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.449" endtime="20201112 10:14:34.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:34.760" level="INFO">${RESULT} = [{'time': 0.019782931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.709800000000114e-05, 'source_diff': 7.709800000000114e-05}, {'time': 0.019864972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:34.757" endtime="20201112 10:14:34.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:34.773" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:34.761" endtime="20201112 10:14:34.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.778" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 10:14:34.777" endtime="20201112 10:14:34.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.780" level="INFO">VALUE: [7.709800000000114e-05, 7.715299999999994e-05, 7.741599999999682e-05, 7.741600000000029e-05, 7.886100000000298e-05, 7.725000000000093e-05, 7.88329999999969e-05, 7.766700000000001e-05, 7.7457999999999e-05, 7.691699999999926e-05, 7.711099999999776e-05, 7.697200000000154e-05, 7.75969999999987e-05, 7.698599999999764e-05, 7.722199999999832e-05, 7.706999999999853e-05, 7.682000000000175e-05, 7.705599999999896e-05, 7.883300000000037e-05, 7.698700000000058e-05, 7.687500000000055e-05, 7.763900000000087e-05, 7.742999999999986e-05, 7.71250000000008e-05, 7.88190000000008e-05, 7.758299999999912e-05, 7.704199999999939e-05, 7.72640000000005e-05, 7.754199999999989e-05, 7.872199999999982e-05, 7.704199999999939e-05, 7.883399999999985e-05, 7.750000000000118e-05, 7.768099999999958e-05, 7.750000000000118e-05, 7.750000000000118e-05, 7.745899999999847e-05, 7.701400000000025e-05, 7.880500000000124e-05, 7.747199999999857e-05, 7.706899999999905e-05, 7.699999999999721e-05, 7.761100000000173e-05, 7.736100000000148e-05, 7.693099999999883e-05, 7.74030000000002e-05, 7.69310000000023e-05, 7.752700000000085e-05, 7.705599999999896e-05, 7.769499999999915e-05]</msg>
<status status="PASS" starttime="20201112 10:14:34.779" endtime="20201112 10:14:34.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.774" endtime="20201112 10:14:34.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.784" endtime="20201112 10:14:34.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:34.787" endtime="20201112 10:14:34.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.786" endtime="20201112 10:14:34.807"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.782" endtime="20201112 10:14:34.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.414" endtime="20201112 10:14:34.808"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.413" endtime="20201112 10:14:34.808"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.817" endtime="20201112 10:14:34.836"></status>
</kw>
<msg timestamp="20201112 10:14:34.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.815" endtime="20201112 10:14:34.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:34.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:34.838" endtime="20201112 10:14:34.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.840" endtime="20201112 10:14:34.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.813" endtime="20201112 10:14:34.844"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.811" endtime="20201112 10:14:34.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:34.850" endtime="20201112 10:14:35.137"></status>
</kw>
<msg timestamp="20201112 10:14:35.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020290278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:34.849" endtime="20201112 10:14:35.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020290278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.141" endtime="20201112 10:14:35.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.149" endtime="20201112 10:14:35.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.846" endtime="20201112 10:14:35.151"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.845" endtime="20201112 10:14:35.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.156" level="INFO">${RESULT} = [{'time': 0.020368708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.843000000000086e-05, 'source_diff': 7.843000000000086e-05}, {'time': 0.020449694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.153" endtime="20201112 10:14:35.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.170" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:35.157" endtime="20201112 10:14:35.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.175" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.174" endtime="20201112 10:14:35.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.177" level="INFO">VALUE: [7.843000000000086e-05, 7.866600000000154e-05, 7.97779999999991e-05, 7.836099999999901e-05, 7.794399999999993e-05, 7.836100000000248e-05, 7.843100000000033e-05, 7.861099999999926e-05, 7.849999999999871e-05, 7.806999999999953e-05, 7.823600000000236e-05, 7.805599999999996e-05, 7.806999999999953e-05, 7.862499999999883e-05, 7.797300000000201e-05, 7.844400000000043e-05, 7.872199999999982e-05, 7.818000000000061e-05, 7.791600000000079e-05, 7.980499999999877e-05, 7.834699999999944e-05, 7.79579999999995e-05, 7.844400000000043e-05, 7.806900000000006e-05, 7.804199999999692e-05, 7.794399999999993e-05, 7.850000000000218e-05, 7.834700000000291e-05, 7.980600000000171e-05, 7.980599999999824e-05, 7.805500000000049e-05, 7.862499999999883e-05, 7.791600000000079e-05, 7.799999999999821e-05, 7.811099999999876e-05, 7.983400000000085e-05, 7.836099999999901e-05, 7.805500000000049e-05, 7.843100000000033e-05, 7.825000000000193e-05, 7.805599999999996e-05, 7.84449999999999e-05, 7.845899999999947e-05, 7.976399999999953e-05, 7.980600000000171e-05, 7.974999999999996e-05, 7.804200000000039e-05, 7.787500000000155e-05, 7.861200000000221e-05, 7.844399999999696e-05]</msg>
<status status="PASS" starttime="20201112 10:14:35.176" endtime="20201112 10:14:35.178"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.171" endtime="20201112 10:14:35.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.181" endtime="20201112 10:14:35.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.184" endtime="20201112 10:14:35.203"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.183" endtime="20201112 10:14:35.204"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.179" endtime="20201112 10:14:35.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.809" endtime="20201112 10:14:35.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:34.808" endtime="20201112 10:14:35.205"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.213" endtime="20201112 10:14:35.233"></status>
</kw>
<msg timestamp="20201112 10:14:35.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.212" endtime="20201112 10:14:35.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.234" endtime="20201112 10:14:35.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.236" endtime="20201112 10:14:35.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.209" endtime="20201112 10:14:35.240"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.207" endtime="20201112 10:14:35.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.247" endtime="20201112 10:14:35.533"></status>
</kw>
<msg timestamp="20201112 10:14:35.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.245" endtime="20201112 10:14:35.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.537" endtime="20201112 10:14:35.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.546" endtime="20201112 10:14:35.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.242" endtime="20201112 10:14:35.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.241" endtime="20201112 10:14:35.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.553" level="INFO">${RESULT} = [{'time': 0.019803903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929200000000164e-05, 'source_diff': 7.929200000000164e-05}, {'time': 0.019887903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.549" endtime="20201112 10:14:35.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.566" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:35.554" endtime="20201112 10:14:35.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.570" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.569" endtime="20201112 10:14:35.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.573" level="INFO">VALUE: [7.929200000000164e-05, 8.081999999999881e-05, 7.970900000000072e-05, 7.924999999999946e-05, 7.958299999999766e-05, 7.961199999999974e-05, 7.967999999999864e-05, 7.918000000000161e-05, 7.886099999999951e-05, 7.904199999999792e-05, 7.905499999999802e-05, 7.891600000000179e-05, 7.93190000000013e-05, 7.905599999999749e-05, 7.952800000000232e-05, 8.076400000000053e-05, 7.898599999999964e-05, 7.905600000000096e-05, 7.916700000000151e-05, 7.951400000000275e-05, 7.934799999999992e-05, 7.97779999999991e-05, 7.886099999999951e-05, 7.880600000000071e-05, 8.075000000000096e-05, 7.909699999999673e-05, 7.970800000000125e-05, 7.906900000000106e-05, 7.961100000000026e-05, 7.96389999999994e-05, 7.893099999999736e-05, 7.930600000000121e-05, 7.970799999999778e-05, 7.920900000000022e-05, 7.954199999999842e-05, 7.957000000000103e-05, 7.936100000000001e-05, 7.9151999999999e-05, 7.904100000000192e-05, 7.884799999999942e-05, 7.967999999999864e-05, 7.961100000000026e-05, 7.904199999999792e-05, 7.966599999999907e-05, 7.905500000000149e-05, 7.894400000000093e-05, 7.934700000000044e-05, 7.911099999999976e-05, 8.079199999999967e-05, 7.899999999999921e-05]</msg>
<status status="PASS" starttime="20201112 10:14:35.571" endtime="20201112 10:14:35.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.567" endtime="20201112 10:14:35.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.576" endtime="20201112 10:14:35.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.580" endtime="20201112 10:14:35.599"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.578" endtime="20201112 10:14:35.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.575" endtime="20201112 10:14:35.600"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.206" endtime="20201112 10:14:35.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.205" endtime="20201112 10:14:35.601"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.609" endtime="20201112 10:14:35.629"></status>
</kw>
<msg timestamp="20201112 10:14:35.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.608" endtime="20201112 10:14:35.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:35.631" endtime="20201112 10:14:35.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.633" endtime="20201112 10:14:35.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.605" endtime="20201112 10:14:35.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.603" endtime="20201112 10:14:35.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.643" endtime="20201112 10:14:35.929"></status>
</kw>
<msg timestamp="20201112 10:14:35.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019827208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.642" endtime="20201112 10:14:35.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019827208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:35.933" endtime="20201112 10:14:35.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.941" endtime="20201112 10:14:35.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.639" endtime="20201112 10:14:35.943"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.637" endtime="20201112 10:14:35.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:35.948" level="INFO">${RESULT} = [{'time': 0.019907389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.018100000000208e-05, 'source_diff': 8.018100000000208e-05}, {'time': 0.019992389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:35.944" endtime="20201112 10:14:35.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:35.961" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:35.949" endtime="20201112 10:14:35.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.966" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 10:14:35.965" endtime="20201112 10:14:35.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:35.968" level="INFO">VALUE: [8.018100000000208e-05, 8.011100000000076e-05, 8.047300000000104e-05, 8.009699999999773e-05, 8.007000000000153e-05, 8.002699999999988e-05, 8.184699999999948e-05, 8.01389999999999e-05, 8.019399999999871e-05, 8.030499999999927e-05, 8.026400000000003e-05, 8.004099999999945e-05, 8.055499999999952e-05, 8.04169999999993e-05, 8.002800000000282e-05, 8.022200000000132e-05, 8.026400000000003e-05, 7.984700000000094e-05, 8.073600000000139e-05, 8.019500000000165e-05, 7.984800000000042e-05, 7.984800000000042e-05, 8.041700000000276e-05, 8.018000000000261e-05, 7.995799999999803e-05, 8.038900000000015e-05, 8.050000000000071e-05, 8.026400000000003e-05, 8.031899999999884e-05, 8.073600000000139e-05, 8.01389999999999e-05, 8.176400000000153e-05, 8.031999999999831e-05, 8.066699999999954e-05, 8.038900000000015e-05, 8.040200000000025e-05, 8.036100000000101e-05, 8.012500000000033e-05, 8.026300000000056e-05, 8.18049999999973e-05, 7.992999999999889e-05, 8.020800000000175e-05, 8.016599999999957e-05, 8.18049999999973e-05, 8.02909999999997e-05, 8.025000000000046e-05, 8.055599999999899e-05, 8.031999999999831e-05, 8.075000000000096e-05, 8.047200000000157e-05]</msg>
<status status="PASS" starttime="20201112 10:14:35.967" endtime="20201112 10:14:35.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.962" endtime="20201112 10:14:35.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:35.972" endtime="20201112 10:14:35.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:35.976" endtime="20201112 10:14:35.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.974" endtime="20201112 10:14:35.995"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.970" endtime="20201112 10:14:35.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.602" endtime="20201112 10:14:35.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.601" endtime="20201112 10:14:35.997"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.005" endtime="20201112 10:14:36.024"></status>
</kw>
<msg timestamp="20201112 10:14:36.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.004" endtime="20201112 10:14:36.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.026" endtime="20201112 10:14:36.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.028" endtime="20201112 10:14:36.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.001" endtime="20201112 10:14:36.031"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.999" endtime="20201112 10:14:36.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.038" endtime="20201112 10:14:36.324"></status>
</kw>
<msg timestamp="20201112 10:14:36.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01998975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:36.037" endtime="20201112 10:14:36.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01998975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:36.328" endtime="20201112 10:14:36.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.336" endtime="20201112 10:14:36.338"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.034" endtime="20201112 10:14:36.339"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.033" endtime="20201112 10:14:36.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.343" level="INFO">${RESULT} = [{'time': 0.020070958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.120799999999928e-05, 'source_diff': 8.120799999999928e-05}, {'time': 0.020154972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:36.340" endtime="20201112 10:14:36.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.357" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:36.344" endtime="20201112 10:14:36.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.361" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.360" endtime="20201112 10:14:36.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.364" level="INFO">VALUE: [8.120799999999928e-05, 8.105500000000002e-05, 8.281900000000134e-05, 8.172199999999935e-05, 8.149999999999824e-05, 8.098599999999817e-05, 8.140300000000072e-05, 8.151399999999781e-05, 8.154200000000042e-05, 8.172199999999935e-05, 8.105500000000002e-05, 8.118099999999961e-05, 8.273599999999992e-05, 8.169400000000021e-05, 8.11109999999983e-05, 8.277699999999916e-05, 8.13329999999994e-05, 8.152700000000138e-05, 8.280500000000177e-05, 8.14170000000003e-05, 8.112499999999787e-05, 8.173599999999892e-05, 8.107000000000253e-05, 8.111100000000177e-05, 8.084699999999848e-05, 8.11390000000009e-05, 8.154200000000042e-05, 8.161200000000174e-05, 8.274999999999949e-05, 8.143099999999986e-05, 8.125000000000146e-05, 8.154099999999748e-05, 8.112499999999787e-05, 8.150000000000171e-05, 8.169400000000021e-05, 8.105500000000002e-05, 8.143000000000039e-05, 8.11109999999983e-05, 8.16109999999988e-05, 8.169400000000021e-05, 8.143099999999986e-05, 8.138900000000115e-05, 8.094499999999893e-05, 8.095799999999903e-05, 8.124999999999799e-05, 8.279099999999873e-05, 8.119400000000318e-05, 8.134699999999898e-05, 8.131899999999984e-05, 8.101399999999731e-05]</msg>
<status status="PASS" starttime="20201112 10:14:36.362" endtime="20201112 10:14:36.364"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.357" endtime="20201112 10:14:36.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.367" endtime="20201112 10:14:36.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.371" endtime="20201112 10:14:36.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.369" endtime="20201112 10:14:36.390"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.365" endtime="20201112 10:14:36.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.997" endtime="20201112 10:14:36.391"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:35.997" endtime="20201112 10:14:36.391"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.400" endtime="20201112 10:14:36.420"></status>
</kw>
<msg timestamp="20201112 10:14:36.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.398" endtime="20201112 10:14:36.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.421" endtime="20201112 10:14:36.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.424" endtime="20201112 10:14:36.426"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.396" endtime="20201112 10:14:36.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.394" endtime="20201112 10:14:36.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.433" endtime="20201112 10:14:36.718"></status>
</kw>
<msg timestamp="20201112 10:14:36.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020116847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.432" endtime="20201112 10:14:36.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020116847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:36.722" endtime="20201112 10:14:36.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.731" endtime="20201112 10:14:36.732"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.429" endtime="20201112 10:14:36.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.428" endtime="20201112 10:14:36.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:36.737" level="INFO">${RESULT} = [{'time': 0.020116847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.26529999999985e-05, 'source_diff': 8.26529999999985e-05}, {'time': 0.020202861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:36.734" endtime="20201112 10:14:36.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:36.752" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:36.738" endtime="20201112 10:14:36.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.756" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 10:14:36.755" endtime="20201112 10:14:36.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.759" level="INFO">VALUE: [8.26529999999985e-05, 8.373599999999745e-05, 8.193100000000036e-05, 8.251399999999881e-05, 8.22919999999977e-05, 8.248599999999967e-05, 8.207000000000006e-05, 8.212500000000234e-05, 8.268100000000111e-05, 8.219500000000018e-05, 8.193100000000036e-05, 8.256899999999762e-05, 8.199999999999874e-05, 8.187500000000208e-05, 8.201399999999831e-05, 8.236099999999955e-05, 8.231900000000084e-05, 8.24720000000001e-05, 8.251399999999881e-05, 8.226399999999856e-05, 8.187500000000208e-05, 8.207000000000006e-05, 8.236099999999955e-05, 8.229200000000117e-05, 8.256999999999709e-05, 8.212499999999887e-05, 8.194400000000046e-05, 8.237499999999912e-05, 8.234699999999998e-05, 8.250000000000271e-05, 8.262500000000284e-05, 8.270799999999731e-05, 8.262499999999937e-05, 8.186100000000252e-05, 8.223600000000289e-05, 8.244500000000043e-05, 8.237499999999912e-05, 8.233399999999988e-05, 8.234699999999998e-05, 8.216700000000104e-05, 8.187499999999862e-05, 8.237499999999912e-05, 8.259700000000023e-05, 8.200000000000221e-05, 8.255499999999805e-05, 8.3846999999998e-05, 8.226400000000203e-05, 8.243000000000139e-05, 8.26390000000024e-05, 8.225000000000246e-05]</msg>
<status status="PASS" starttime="20201112 10:14:36.757" endtime="20201112 10:14:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.753" endtime="20201112 10:14:36.760"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.762" endtime="20201112 10:14:36.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:36.766" endtime="20201112 10:14:36.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.764" endtime="20201112 10:14:36.785"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.761" endtime="20201112 10:14:36.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.392" endtime="20201112 10:14:36.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.392" endtime="20201112 10:14:36.786"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.795" endtime="20201112 10:14:36.815"></status>
</kw>
<msg timestamp="20201112 10:14:36.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.793" endtime="20201112 10:14:36.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:36.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:36.816" endtime="20201112 10:14:36.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.819" endtime="20201112 10:14:36.821"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.791" endtime="20201112 10:14:36.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.789" endtime="20201112 10:14:36.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:36.829" endtime="20201112 10:14:37.114"></status>
</kw>
<msg timestamp="20201112 10:14:37.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01979075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:36.827" endtime="20201112 10:14:37.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01979075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:37.118" endtime="20201112 10:14:37.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.126" endtime="20201112 10:14:37.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.825" endtime="20201112 10:14:37.128"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.823" endtime="20201112 10:14:37.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.133" level="INFO">${RESULT} = [{'time': 0.019873708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.295800000000103e-05, 'source_diff': 8.295800000000103e-05}, {'time': 0.019959708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.130" endtime="20201112 10:14:37.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.146" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:37.134" endtime="20201112 10:14:37.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.151" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.150" endtime="20201112 10:14:37.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.153" level="INFO">VALUE: [8.295800000000103e-05, 8.331899999999837e-05, 8.331899999999837e-05, 8.293000000000189e-05, 8.479100000000073e-05, 8.356899999999862e-05, 8.29309999999979e-05, 8.29309999999979e-05, 8.326399999999956e-05, 8.330599999999827e-05, 8.293100000000136e-05, 8.373600000000092e-05, 8.312499999999987e-05, 8.376400000000006e-05, 8.370900000000125e-05, 8.317999999999867e-05, 8.316699999999858e-05, 8.294400000000146e-05, 8.313899999999944e-05, 8.29720000000006e-05, 8.292999999999842e-05, 8.320900000000075e-05, 8.337500000000012e-05, 8.324999999999999e-05, 8.305600000000149e-05, 8.338899999999969e-05, 8.336100000000055e-05, 8.338899999999969e-05, 8.334700000000098e-05, 8.351399999999981e-05, 8.362500000000037e-05, 8.362500000000037e-05, 8.354099999999948e-05, 8.342999999999892e-05, 8.330600000000174e-05, 8.336100000000055e-05, 8.312499999999987e-05, 8.368100000000211e-05, 8.29720000000006e-05, 8.305600000000149e-05, 8.305600000000149e-05, 8.338899999999969e-05, 8.354199999999895e-05, 8.481999999999934e-05, 8.305600000000149e-05, 8.359700000000123e-05, 8.31390000000029e-05, 8.286100000000005e-05, 8.287499999999962e-05, 8.302800000000235e-05]</msg>
<status status="PASS" starttime="20201112 10:14:37.152" endtime="20201112 10:14:37.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.147" endtime="20201112 10:14:37.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.157" endtime="20201112 10:14:37.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.160" endtime="20201112 10:14:37.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.159" endtime="20201112 10:14:37.180"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.155" endtime="20201112 10:14:37.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.787" endtime="20201112 10:14:37.181"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:36.787" endtime="20201112 10:14:37.181"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.190" endtime="20201112 10:14:37.209"></status>
</kw>
<msg timestamp="20201112 10:14:37.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.188" endtime="20201112 10:14:37.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.210" endtime="20201112 10:14:37.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.213" endtime="20201112 10:14:37.215"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.186" endtime="20201112 10:14:37.216"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.184" endtime="20201112 10:14:37.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.223" endtime="20201112 10:14:37.508"></status>
</kw>
<msg timestamp="20201112 10:14:37.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019806708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.221" endtime="20201112 10:14:37.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019806708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.512" endtime="20201112 10:14:37.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.521" endtime="20201112 10:14:37.522"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.219" endtime="20201112 10:14:37.523"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.217" endtime="20201112 10:14:37.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.527" level="INFO">${RESULT} = [{'time': 0.019806708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.465199999999756e-05, 'source_diff': 8.465199999999756e-05}, {'time': 0.019894736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.524" endtime="20201112 10:14:37.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.541" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:37.528" endtime="20201112 10:14:37.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.545" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.544" endtime="20201112 10:14:37.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.548" level="INFO">VALUE: [8.465199999999756e-05, 8.444399999999949e-05, 8.46530000000005e-05, 8.444399999999949e-05, 8.462500000000137e-05, 8.458299999999919e-05, 8.401400000000031e-05, 8.447300000000157e-05, 8.57920000000012e-05, 8.418099999999915e-05, 8.57920000000012e-05, 8.426400000000056e-05, 8.476400000000106e-05, 8.442999999999992e-05, 8.436099999999808e-05, 8.452700000000091e-05, 8.417999999999967e-05, 8.451400000000081e-05, 8.580499999999783e-05, 8.466700000000008e-05, 8.425000000000099e-05, 8.406999999999859e-05, 8.468099999999965e-05, 8.430599999999927e-05, 8.42919999999997e-05, 8.395899999999804e-05, 8.44859999999982e-05, 8.411200000000077e-05, 8.406899999999912e-05, 8.475000000000149e-05, 8.465200000000103e-05, 8.442999999999992e-05, 8.437500000000112e-05, 8.456900000000309e-05, 8.401400000000031e-05, 8.408299999999869e-05, 8.416699999999958e-05, 8.425000000000099e-05, 8.426399999999709e-05, 8.418099999999915e-05, 8.466700000000008e-05, 8.399999999999727e-05, 8.458299999999919e-05, 8.412500000000087e-05, 8.451400000000081e-05, 8.433399999999841e-05, 8.438900000000069e-05, 8.468000000000017e-05, 8.573599999999945e-05, 8.46249999999979e-05]</msg>
<status status="PASS" starttime="20201112 10:14:37.546" endtime="20201112 10:14:37.548"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.542" endtime="20201112 10:14:37.549"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.551" endtime="20201112 10:14:37.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.555" endtime="20201112 10:14:37.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.553" endtime="20201112 10:14:37.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.550" endtime="20201112 10:14:37.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.182" endtime="20201112 10:14:37.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.181" endtime="20201112 10:14:37.575"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.584" endtime="20201112 10:14:37.604"></status>
</kw>
<msg timestamp="20201112 10:14:37.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.583" endtime="20201112 10:14:37.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.606" endtime="20201112 10:14:37.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.608" endtime="20201112 10:14:37.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.580" endtime="20201112 10:14:37.611"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.578" endtime="20201112 10:14:37.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.618" endtime="20201112 10:14:37.904"></status>
</kw>
<msg timestamp="20201112 10:14:37.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.617" endtime="20201112 10:14:37.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019797458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:37.909" endtime="20201112 10:14:37.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.917" endtime="20201112 10:14:37.918"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.614" endtime="20201112 10:14:37.919"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.612" endtime="20201112 10:14:37.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:37.924" level="INFO">${RESULT} = [{'time': 0.019797458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.568000000000117e-05, 'source_diff': 8.568000000000117e-05}, {'time': 0.019886458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:37.920" endtime="20201112 10:14:37.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:37.937" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:37.925" endtime="20201112 10:14:37.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.941" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 10:14:37.940" endtime="20201112 10:14:37.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:37.944" level="INFO">VALUE: [8.568000000000117e-05, 8.516599999999763e-05, 8.486099999999858e-05, 8.52920000000007e-05, 8.530600000000027e-05, 8.509700000000273e-05, 8.575000000000249e-05, 8.509699999999926e-05, 8.54310000000004e-05, 8.486099999999858e-05, 8.54310000000004e-05, 8.531999999999984e-05, 8.49729999999986e-05, 8.506900000000012e-05, 8.681900000000187e-05, 8.536100000000255e-05, 8.540299999999779e-05, 8.570800000000031e-05, 8.501399999999784e-05, 8.68189999999984e-05, 8.515299999999754e-05, 8.563900000000194e-05, 8.491700000000033e-05, 8.524999999999852e-05, 8.49590000000025e-05, 8.520899999999929e-05, 8.573699999999893e-05, 8.530600000000027e-05, 8.568000000000117e-05, 8.573600000000292e-05, 8.531999999999984e-05, 8.56249999999989e-05, 8.486099999999858e-05, 8.533299999999994e-05, 8.544400000000049e-05, 8.568100000000065e-05, 8.53469999999995e-05, 8.522200000000285e-05, 8.538900000000169e-05, 8.504200000000045e-05, 8.53469999999995e-05, 8.527799999999766e-05, 8.568000000000117e-05, 8.531900000000037e-05, 8.523600000000242e-05, 8.543000000000092e-05, 8.53469999999995e-05, 8.525000000000199e-05, 8.551400000000181e-05, 8.543000000000092e-05]</msg>
<status status="PASS" starttime="20201112 10:14:37.942" endtime="20201112 10:14:37.945"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.938" endtime="20201112 10:14:37.945"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.947" endtime="20201112 10:14:37.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:37.951" endtime="20201112 10:14:37.970"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.949" endtime="20201112 10:14:37.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.946" endtime="20201112 10:14:37.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.576" endtime="20201112 10:14:37.972"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.576" endtime="20201112 10:14:37.972"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:37.980" endtime="20201112 10:14:38.001"></status>
</kw>
<msg timestamp="20201112 10:14:38.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:37.979" endtime="20201112 10:14:38.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.002" endtime="20201112 10:14:38.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.005" endtime="20201112 10:14:38.007"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.976" endtime="20201112 10:14:38.008"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.974" endtime="20201112 10:14:38.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.015" endtime="20201112 10:14:38.301"></status>
</kw>
<msg timestamp="20201112 10:14:38.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.013" endtime="20201112 10:14:38.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.305" endtime="20201112 10:14:38.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.314" endtime="20201112 10:14:38.315"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.011" endtime="20201112 10:14:38.316"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.009" endtime="20201112 10:14:38.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.320" level="INFO">${RESULT} = [{'time': 0.019833444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.616599999999863e-05, 'source_diff': 8.616599999999863e-05}, {'time': 0.019925458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:38.317" endtime="20201112 10:14:38.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.335" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:38.321" endtime="20201112 10:14:38.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.339" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.338" endtime="20201112 10:14:38.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.342" level="INFO">VALUE: [8.616599999999863e-05, 8.616599999999863e-05, 8.63050000000018e-05, 8.66249999999999e-05, 8.649999999999977e-05, 8.611099999999983e-05, 8.599999999999927e-05, 8.632000000000084e-05, 8.59310000000009e-05, 8.665299999999904e-05, 8.607000000000059e-05, 8.783300000000244e-05, 8.619499999999725e-05, 8.633400000000041e-05, 8.66669999999986e-05, 8.618000000000167e-05, 8.622200000000038e-05, 8.6153000000002e-05, 8.663900000000294e-05, 8.583300000000044e-05, 8.615299999999854e-05, 8.609700000000026e-05, 8.593099999999743e-05, 8.622200000000038e-05, 8.608400000000016e-05, 8.623599999999995e-05, 8.779199999999973e-05, 8.623699999999943e-05, 8.651399999999934e-05, 8.668000000000217e-05, 8.784699999999854e-05, 8.776400000000059e-05, 8.647200000000063e-05, 8.668000000000217e-05, 8.619500000000072e-05, 8.594399999999752e-05, 8.591699999999786e-05, 8.611099999999983e-05, 8.776400000000059e-05, 8.591700000000133e-05, 8.602700000000241e-05, 8.608300000000069e-05, 8.618000000000167e-05, 8.636100000000008e-05, 8.654100000000248e-05, 8.602699999999894e-05, 8.612500000000287e-05, 8.595800000000056e-05, 8.609700000000026e-05, 8.588900000000219e-05]</msg>
<status status="PASS" starttime="20201112 10:14:38.340" endtime="20201112 10:14:38.342"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.335" endtime="20201112 10:14:38.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.345" endtime="20201112 10:14:38.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.349" endtime="20201112 10:14:38.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.347" endtime="20201112 10:14:38.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.343" endtime="20201112 10:14:38.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.973" endtime="20201112 10:14:38.369"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:37.972" endtime="20201112 10:14:38.369"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.378" endtime="20201112 10:14:38.398"></status>
</kw>
<msg timestamp="20201112 10:14:38.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.376" endtime="20201112 10:14:38.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.400" endtime="20201112 10:14:38.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.403" endtime="20201112 10:14:38.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.374" endtime="20201112 10:14:38.406"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.372" endtime="20201112 10:14:38.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.413" endtime="20201112 10:14:38.698"></status>
</kw>
<msg timestamp="20201112 10:14:38.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019763403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.411" endtime="20201112 10:14:38.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019763403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:38.702" endtime="20201112 10:14:38.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.710" endtime="20201112 10:14:38.712"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.408" endtime="20201112 10:14:38.713"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.407" endtime="20201112 10:14:38.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:38.717" level="INFO">${RESULT} = [{'time': 0.019850819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.741599999999988e-05, 'source_diff': 8.741599999999988e-05}, {'time': 0.019942833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:38.714" endtime="20201112 10:14:38.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:38.730" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:38.718" endtime="20201112 10:14:38.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.735" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 10:14:38.734" endtime="20201112 10:14:38.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.737" level="INFO">VALUE: [8.741599999999988e-05, 8.73189999999989e-05, 8.701399999999984e-05, 8.691600000000285e-05, 8.747199999999816e-05, 8.773600000000145e-05, 8.751400000000034e-05, 8.879200000000073e-05, 8.715299999999954e-05, 8.769399999999927e-05, 8.876400000000159e-05, 8.769499999999875e-05, 8.711099999999736e-05, 8.705599999999855e-05, 8.705599999999855e-05, 8.725000000000052e-05, 8.758300000000219e-05, 8.711100000000083e-05, 8.725000000000052e-05, 8.76250000000009e-05, 8.69860000000007e-05, 8.74449999999985e-05, 8.701400000000331e-05, 8.71669999999991e-05, 8.869500000000322e-05, 8.737500000000065e-05, 8.71669999999991e-05, 8.723600000000095e-05, 8.71250000000004e-05, 8.768099999999918e-05, 8.691600000000285e-05, 8.741599999999988e-05, 8.700000000000027e-05, 8.88190000000004e-05, 8.711099999999736e-05, 8.705499999999908e-05, 8.74449999999985e-05, 8.683300000000144e-05, 8.705600000000202e-05, 8.702799999999941e-05, 8.691699999999886e-05, 8.704199999999898e-05, 8.72920000000027e-05, 8.763900000000047e-05, 8.772300000000136e-05, 8.719399999999877e-05, 8.711100000000083e-05, 8.773599999999798e-05, 8.73189999999989e-05, 8.765300000000004e-05]</msg>
<status status="PASS" starttime="20201112 10:14:38.736" endtime="20201112 10:14:38.738"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.731" endtime="20201112 10:14:38.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.741" endtime="20201112 10:14:38.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:38.744" endtime="20201112 10:14:38.763"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.743" endtime="20201112 10:14:38.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.739" endtime="20201112 10:14:38.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.370" endtime="20201112 10:14:38.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.370" endtime="20201112 10:14:38.765"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.773" endtime="20201112 10:14:38.794"></status>
</kw>
<msg timestamp="20201112 10:14:38.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.772" endtime="20201112 10:14:38.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:38.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:38.795" endtime="20201112 10:14:38.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.798" endtime="20201112 10:14:38.800"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.769" endtime="20201112 10:14:38.801"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.767" endtime="20201112 10:14:38.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:38.808" endtime="20201112 10:14:39.094"></status>
</kw>
<msg timestamp="20201112 10:14:39.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:38.806" endtime="20201112 10:14:39.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826986, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:39.098" endtime="20201112 10:14:39.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.107" endtime="20201112 10:14:39.108"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.804" endtime="20201112 10:14:39.109"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.802" endtime="20201112 10:14:39.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.113" level="INFO">${RESULT} = [{'time': 0.019826986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.79860000000017e-05, 'source_diff': 8.79860000000017e-05}, {'time': 0.019919986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:39.110" endtime="20201112 10:14:39.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.127" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:39.114" endtime="20201112 10:14:39.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.131" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.130" endtime="20201112 10:14:39.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.133" level="INFO">VALUE: [8.79860000000017e-05, 8.800000000000127e-05, 8.865300000000104e-05, 8.83189999999999e-05, 8.980599999999783e-05, 8.800000000000127e-05, 8.862499999999843e-05, 8.854199999999701e-05, 8.793099999999943e-05, 8.797299999999814e-05, 8.83189999999999e-05, 8.98060000000013e-05, 8.806899999999965e-05, 8.838900000000122e-05, 8.819399999999977e-05, 8.98190000000014e-05, 8.805500000000008e-05, 8.855499999999711e-05, 8.802800000000041e-05, 8.823600000000195e-05, 8.854200000000048e-05, 8.837500000000165e-05, 8.975000000000302e-05, 8.865300000000104e-05, 8.811099999999836e-05, 8.838799999999827e-05, 8.790299999999682e-05, 8.801399999999737e-05, 8.862499999999843e-05, 8.86250000000019e-05, 8.823600000000195e-05, 8.81250000000014e-05, 8.876400000000159e-05, 8.868100000000018e-05, 8.98060000000013e-05, 8.81250000000014e-05, 8.855600000000005e-05, 8.824999999999805e-05, 8.823699999999796e-05, 8.837500000000165e-05, 8.83189999999999e-05, 8.866600000000113e-05, 8.98190000000014e-05, 8.855500000000058e-05, 8.830500000000033e-05, 8.843000000000045e-05, 8.826399999999762e-05, 8.7944999999999e-05, 8.81250000000014e-05, 8.830600000000327e-05]</msg>
<status status="PASS" starttime="20201112 10:14:39.132" endtime="20201112 10:14:39.134"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.127" endtime="20201112 10:14:39.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.137" endtime="20201112 10:14:39.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.140" endtime="20201112 10:14:39.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.139" endtime="20201112 10:14:39.160"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.135" endtime="20201112 10:14:39.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.766" endtime="20201112 10:14:39.161"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:38.765" endtime="20201112 10:14:39.161"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.170" endtime="20201112 10:14:39.190"></status>
</kw>
<msg timestamp="20201112 10:14:39.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.168" endtime="20201112 10:14:39.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.192" endtime="20201112 10:14:39.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.194" endtime="20201112 10:14:39.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.166" endtime="20201112 10:14:39.197"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.164" endtime="20201112 10:14:39.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.204" endtime="20201112 10:14:39.490"></status>
</kw>
<msg timestamp="20201112 10:14:39.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.203" endtime="20201112 10:14:39.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.495" endtime="20201112 10:14:39.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.503" endtime="20201112 10:14:39.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.200" endtime="20201112 10:14:39.505"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.198" endtime="20201112 10:14:39.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.510" level="INFO">${RESULT} = [{'time': 0.019850042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.8945e-05, 'source_diff': 8.8945e-05}, {'time': 0.019945069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.936099999999961e-...</msg>
<status status="PASS" starttime="20201112 10:14:39.506" endtime="20201112 10:14:39.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.523" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:39.511" endtime="20201112 10:14:39.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.528" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.527" endtime="20201112 10:14:39.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.530" level="INFO">VALUE: [8.8945e-05, 8.936099999999961e-05, 8.93190000000009e-05, 8.973599999999998e-05, 8.893000000000095e-05, 9.08190000000024e-05, 8.895799999999662e-05, 8.94450000000005e-05, 8.943099999999746e-05, 8.957000000000062e-05, 8.893100000000043e-05, 8.943100000000093e-05, 8.969500000000075e-05, 9.076400000000012e-05, 8.94999999999993e-05, 8.94869999999992e-05, 8.969400000000127e-05, 8.91800000000012e-05, 8.922199999999991e-05, 8.89999999999988e-05, 8.941600000000188e-05, 8.951400000000234e-05, 8.937499999999918e-05, 8.901400000000184e-05, 8.94999999999993e-05, 8.923599999999948e-05, 8.951400000000234e-05, 8.893100000000043e-05, 8.912499999999893e-05, 8.961199999999933e-05, 9.076300000000065e-05, 8.958300000000072e-05, 8.94999999999993e-05, 8.941599999999841e-05, 8.887500000000215e-05, 8.912499999999893e-05, 8.892999999999748e-05, 8.920800000000034e-05, 8.938899999999875e-05, 8.948599999999973e-05, 8.93199999999969e-05, 8.883299999999997e-05, 8.909699999999979e-05, 8.883399999999944e-05, 8.877800000000116e-05, 8.945900000000007e-05, 8.924999999999905e-05, 8.94999999999993e-05, 8.891600000000138e-05, 8.904099999999804e-05]</msg>
<status status="PASS" starttime="20201112 10:14:39.529" endtime="20201112 10:14:39.531"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.524" endtime="20201112 10:14:39.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.534" endtime="20201112 10:14:39.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.537" endtime="20201112 10:14:39.556"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.536" endtime="20201112 10:14:39.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.532" endtime="20201112 10:14:39.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.162" endtime="20201112 10:14:39.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.162" endtime="20201112 10:14:39.558"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.566" endtime="20201112 10:14:39.587"></status>
</kw>
<msg timestamp="20201112 10:14:39.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.565" endtime="20201112 10:14:39.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.588" endtime="20201112 10:14:39.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.591" endtime="20201112 10:14:39.593"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.562" endtime="20201112 10:14:39.594"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.560" endtime="20201112 10:14:39.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.601" endtime="20201112 10:14:39.887"></status>
</kw>
<msg timestamp="20201112 10:14:39.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:39.599" endtime="20201112 10:14:39.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0198435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 10:14:39.891" endtime="20201112 10:14:39.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.900" endtime="20201112 10:14:39.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.596" endtime="20201112 10:14:39.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.595" endtime="20201112 10:14:39.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:39.907" level="INFO">${RESULT} = [{'time': 0.0198435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.031899999999843e-05, 'source_diff': 9.031899999999843e-05}, {'time': 0.019939486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:39.903" endtime="20201112 10:14:39.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:39.921" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:39.908" endtime="20201112 10:14:39.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.926" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 10:14:39.925" endtime="20201112 10:14:39.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.928" level="INFO">VALUE: [9.031899999999843e-05, 8.997200000000066e-05, 9.059700000000129e-05, 9.043099999999846e-05, 9.074999999999708e-05, 8.998600000000023e-05, 8.993099999999796e-05, 9.051399999999987e-05, 9.008399999999722e-05, 9.055600000000205e-05, 9.029099999999929e-05, 8.991700000000186e-05, 9.004100000000251e-05, 9.057000000000162e-05, 9.031899999999843e-05, 9.180500000000036e-05, 9.044400000000202e-05, 9.070900000000132e-05, 9.006999999999765e-05, 9.01389999999995e-05, 9.179200000000026e-05, 9.036100000000061e-05, 8.988799999999977e-05, 9.009800000000026e-05, 9.022199999999744e-05, 9.179200000000026e-05, 9.183399999999897e-05, 9.033300000000147e-05, 9.052799999999944e-05, 9.001399999999937e-05, 9.001399999999937e-05, 9.005600000000155e-05, 9.025000000000005e-05, 9.018099999999821e-05, 8.987499999999968e-05, 9.068100000000218e-05, 9.026399999999962e-05, 8.984800000000001e-05, 9.04870000000002e-05, 8.997300000000014e-05, 9.033300000000147e-05, 9.0639e-05, 9.041599999999941e-05, 9.033300000000147e-05, 9.030499999999886e-05, 9.043099999999846e-05, 8.988899999999925e-05, 9.058400000000119e-05, 9.055600000000205e-05, 9.009700000000079e-05]</msg>
<status status="PASS" starttime="20201112 10:14:39.927" endtime="20201112 10:14:39.929"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.922" endtime="20201112 10:14:39.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.932" endtime="20201112 10:14:39.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:39.935" endtime="20201112 10:14:39.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.934" endtime="20201112 10:14:39.955"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.930" endtime="20201112 10:14:39.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.559" endtime="20201112 10:14:39.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.558" endtime="20201112 10:14:39.956"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.965" endtime="20201112 10:14:39.984"></status>
</kw>
<msg timestamp="20201112 10:14:39.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.963" endtime="20201112 10:14:39.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:39.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:39.986" endtime="20201112 10:14:39.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.988" endtime="20201112 10:14:39.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.961" endtime="20201112 10:14:39.991"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.959" endtime="20201112 10:14:39.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:39.998" endtime="20201112 10:14:40.284"></status>
</kw>
<msg timestamp="20201112 10:14:40.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:39.997" endtime="20201112 10:14:40.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019869875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019961625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.288" endtime="20201112 10:14:40.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.296" endtime="20201112 10:14:40.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.994" endtime="20201112 10:14:40.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.993" endtime="20201112 10:14:40.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.303" level="INFO">${RESULT} = [{'time': 0.019961625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.175000000000155e-05, 'source_diff': 9.175000000000155e-05}, {'time': 0.020056667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:40.299" endtime="20201112 10:14:40.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.316" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:40.304" endtime="20201112 10:14:40.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.321" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.320" endtime="20201112 10:14:40.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.323" level="INFO">VALUE: [9.175000000000155e-05, 9.147300000000164e-05, 9.134699999999857e-05, 9.102799999999994e-05, 9.281999999999693e-05, 9.095900000000157e-05, 9.137499999999771e-05, 9.102700000000047e-05, 9.130599999999933e-05, 9.170899999999885e-05, 9.168000000000023e-05, 9.098599999999776e-05, 9.142999999999998e-05, 9.108299999999875e-05, 9.281899999999746e-05, 9.15000000000013e-05, 9.161099999999839e-05, 9.116699999999964e-05, 9.11390000000005e-05, 9.105600000000255e-05, 9.172299999999842e-05, 9.162499999999796e-05, 9.169499999999928e-05, 9.130499999999986e-05, 9.115300000000007e-05, 9.288900000000225e-05, 9.16939999999998e-05, 9.084700000000154e-05, 9.156899999999968e-05, 9.094400000000252e-05, 9.123600000000148e-05, 9.143099999999946e-05, 9.129199999999976e-05, 9.151400000000087e-05, 9.112500000000093e-05, 9.161099999999839e-05, 9.170900000000232e-05, 9.281899999999746e-05, 9.106900000000265e-05, 9.104200000000298e-05, 9.158299999999925e-05, 9.161099999999839e-05, 9.162500000000143e-05, 9.117999999999973e-05, 9.281900000000093e-05, 9.181899999999993e-05, 9.126400000000062e-05, 9.148599999999826e-05, 9.138900000000075e-05, 9.105600000000255e-05]</msg>
<status status="PASS" starttime="20201112 10:14:40.322" endtime="20201112 10:14:40.324"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.317" endtime="20201112 10:14:40.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.327" endtime="20201112 10:14:40.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.330" endtime="20201112 10:14:40.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.329" endtime="20201112 10:14:40.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.325" endtime="20201112 10:14:40.350"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.957" endtime="20201112 10:14:40.351"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:39.956" endtime="20201112 10:14:40.351"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.360" endtime="20201112 10:14:40.380"></status>
</kw>
<msg timestamp="20201112 10:14:40.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.358" endtime="20201112 10:14:40.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.381" endtime="20201112 10:14:40.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.384" endtime="20201112 10:14:40.386"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.356" endtime="20201112 10:14:40.387"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.353" endtime="20201112 10:14:40.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.394" endtime="20201112 10:14:40.678"></status>
</kw>
<msg timestamp="20201112 10:14:40.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.392" endtime="20201112 10:14:40.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019944694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.683" endtime="20201112 10:14:40.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.691" endtime="20201112 10:14:40.692"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.389" endtime="20201112 10:14:40.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.388" endtime="20201112 10:14:40.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:40.697" level="INFO">${RESULT} = [{'time': 0.020038472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.377800000000269e-05, 'source_diff': 9.377800000000269e-05}, {'time': 0.020136458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:40.694" endtime="20201112 10:14:40.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:40.711" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:40.699" endtime="20201112 10:14:40.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.716" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 10:14:40.715" endtime="20201112 10:14:40.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.718" level="INFO">VALUE: [9.377800000000269e-05, 9.198599999999876e-05, 9.256900000000068e-05, 9.231900000000043e-05, 9.256900000000068e-05, 9.20000000000018e-05, 9.238900000000175e-05, 9.234699999999957e-05, 9.216700000000064e-05, 9.262500000000243e-05, 9.23199999999999e-05, 9.386100000000064e-05, 9.380600000000183e-05, 9.25269999999985e-05, 9.26940000000008e-05, 9.248599999999926e-05, 9.262499999999896e-05, 9.190299999999735e-05, 9.273599999999951e-05, 9.241700000000089e-05, 9.211099999999889e-05, 9.375000000000008e-05, 9.266700000000114e-05, 9.268100000000071e-05, 9.380599999999836e-05, 9.255600000000058e-05, 9.248699999999874e-05, 9.218100000000021e-05, 9.2639000000002e-05, 9.234699999999957e-05, 9.243000000000098e-05, 9.248599999999926e-05, 9.198599999999876e-05, 9.263899999999853e-05, 9.198600000000223e-05, 9.186100000000211e-05, 9.226400000000162e-05, 9.224999999999858e-05, 9.261099999999939e-05, 9.211099999999889e-05, 9.244500000000003e-05, 9.211200000000183e-05, 9.240300000000132e-05, 9.220799999999987e-05, 9.20139999999979e-05, 9.209699999999932e-05, 9.222199999999944e-05, 9.255500000000111e-05, 9.231899999999696e-05, 9.259699999999982e-05]</msg>
<status status="PASS" starttime="20201112 10:14:40.717" endtime="20201112 10:14:40.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.712" endtime="20201112 10:14:40.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.721" endtime="20201112 10:14:40.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:40.725" endtime="20201112 10:14:40.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.723" endtime="20201112 10:14:40.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.720" endtime="20201112 10:14:40.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.352" endtime="20201112 10:14:40.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.351" endtime="20201112 10:14:40.746"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.754" endtime="20201112 10:14:40.775"></status>
</kw>
<msg timestamp="20201112 10:14:40.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.753" endtime="20201112 10:14:40.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:40.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:40.776" endtime="20201112 10:14:40.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.779" endtime="20201112 10:14:40.781"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.750" endtime="20201112 10:14:40.782"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.748" endtime="20201112 10:14:40.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:40.789" endtime="20201112 10:14:41.075"></status>
</kw>
<msg timestamp="20201112 10:14:41.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:40.787" endtime="20201112 10:14:41.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019934583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.080" endtime="20201112 10:14:41.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.088" endtime="20201112 10:14:41.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.785" endtime="20201112 10:14:41.090"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.783" endtime="20201112 10:14:41.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.095" level="INFO">${RESULT} = [{'time': 0.019934583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.372199999999747e-05, 'source_diff': 9.372199999999747e-05}, {'time': 0.020031639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.091" endtime="20201112 10:14:41.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.108" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:41.096" endtime="20201112 10:14:41.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.113" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.112" endtime="20201112 10:14:41.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.115" level="INFO">VALUE: [9.372199999999747e-05, 9.288899999999878e-05, 9.366699999999867e-05, 9.480499999999989e-05, 9.287499999999921e-05, 9.361099999999692e-05, 9.323600000000001e-05, 9.30139999999989e-05, 9.307000000000065e-05, 9.347300000000017e-05, 9.297299999999967e-05, 9.320800000000087e-05, 9.284799999999954e-05, 9.318000000000173e-05, 9.284700000000007e-05, 9.36940000000018e-05, 9.330499999999839e-05, 9.295799999999715e-05, 9.298599999999976e-05, 9.320899999999688e-05, 9.361100000000039e-05, 9.368000000000223e-05, 9.344500000000103e-05, 9.311099999999989e-05, 9.367999999999876e-05, 9.287499999999921e-05, 9.367999999999876e-05, 9.354099999999907e-05, 9.361100000000039e-05, 9.322200000000044e-05, 9.352800000000244e-05, 9.368000000000223e-05, 9.347199999999722e-05, 9.288899999999878e-05, 9.319500000000078e-05, 9.316699999999817e-05, 9.484700000000207e-05, 9.287499999999921e-05, 9.35139999999994e-05, 9.349999999999983e-05, 9.368000000000223e-05, 9.477700000000075e-05, 9.31529999999986e-05, 9.293000000000148e-05, 9.377800000000269e-05, 9.286099999999964e-05, 9.320800000000087e-05, 9.337499999999971e-05, 9.312499999999946e-05, 9.330599999999786e-05]</msg>
<status status="PASS" starttime="20201112 10:14:41.114" endtime="20201112 10:14:41.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.109" endtime="20201112 10:14:41.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.123" endtime="20201112 10:14:41.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.126" endtime="20201112 10:14:41.145"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.124" endtime="20201112 10:14:41.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.121" endtime="20201112 10:14:41.146"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.747" endtime="20201112 10:14:41.147"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:40.746" endtime="20201112 10:14:41.147"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.155" endtime="20201112 10:14:41.175"></status>
</kw>
<msg timestamp="20201112 10:14:41.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.154" endtime="20201112 10:14:41.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.177" endtime="20201112 10:14:41.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.179" endtime="20201112 10:14:41.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.151" endtime="20201112 10:14:41.182"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.149" endtime="20201112 10:14:41.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.189" endtime="20201112 10:14:41.474"></status>
</kw>
<msg timestamp="20201112 10:14:41.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.188" endtime="20201112 10:14:41.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.479" endtime="20201112 10:14:41.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.487" endtime="20201112 10:14:41.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.185" endtime="20201112 10:14:41.489"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.183" endtime="20201112 10:14:41.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.493" level="INFO">${RESULT} = [{'time': 0.019949889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.46530000000001e-05, 'source_diff': 9.46530000000001e-05}, {'time': 0.020047917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 10:14:41.490" endtime="20201112 10:14:41.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.508" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:41.494" endtime="20201112 10:14:41.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.512" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.511" endtime="20201112 10:14:41.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.515" level="INFO">VALUE: [9.46530000000001e-05, 9.394499999999806e-05, 9.379200000000226e-05, 9.409800000000079e-05, 9.394399999999858e-05, 9.411099999999742e-05, 9.580500000000089e-05, 9.406899999999871e-05, 9.404099999999957e-05, 9.400000000000033e-05, 9.394399999999858e-05, 9.454199999999954e-05, 9.404199999999904e-05, 9.576399999999818e-05, 9.404200000000251e-05, 9.392999999999901e-05, 9.58200000000034e-05, 9.420900000000135e-05, 9.469399999999933e-05, 9.455499999999964e-05, 9.402799999999947e-05, 9.45140000000004e-05, 9.408300000000175e-05, 9.426400000000015e-05, 9.426400000000015e-05, 9.419500000000178e-05, 9.436100000000114e-05, 9.416700000000264e-05, 9.398600000000076e-05, 9.473600000000151e-05, 9.469399999999933e-05, 9.424999999999711e-05, 9.437500000000071e-05, 9.459699999999835e-05, 9.449999999999736e-05, 9.441599999999994e-05, 9.400000000000033e-05, 9.461100000000139e-05, 9.454199999999954e-05, 9.390299999999935e-05, 9.398600000000076e-05, 9.394499999999806e-05, 9.469500000000228e-05, 9.581999999999993e-05, 9.468100000000271e-05, 9.434700000000157e-05, 9.462499999999749e-05, 9.43469999999981e-05, 9.417999999999926e-05, 9.44019999999969e-05]</msg>
<status status="PASS" starttime="20201112 10:14:41.513" endtime="20201112 10:14:41.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.509" endtime="20201112 10:14:41.516"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.519" endtime="20201112 10:14:41.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.522" endtime="20201112 10:14:41.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.521" endtime="20201112 10:14:41.542"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.517" endtime="20201112 10:14:41.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.148" endtime="20201112 10:14:41.543"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.147" endtime="20201112 10:14:41.543"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.552" endtime="20201112 10:14:41.572"></status>
</kw>
<msg timestamp="20201112 10:14:41.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.550" endtime="20201112 10:14:41.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.573" endtime="20201112 10:14:41.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.576" endtime="20201112 10:14:41.578"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.547" endtime="20201112 10:14:41.579"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.545" endtime="20201112 10:14:41.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.586" endtime="20201112 10:14:41.870"></status>
</kw>
<msg timestamp="20201112 10:14:41.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.584" endtime="20201112 10:14:41.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.874" endtime="20201112 10:14:41.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.883" endtime="20201112 10:14:41.884"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.582" endtime="20201112 10:14:41.885"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.580" endtime="20201112 10:14:41.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:41.889" level="INFO">${RESULT} = [{'time': 0.019880139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.561100000000239e-05, 'source_diff': 9.561100000000239e-05}, {'time': 0.019978194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:41.886" endtime="20201112 10:14:41.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:41.903" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:41.890" endtime="20201112 10:14:41.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.907" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 10:14:41.906" endtime="20201112 10:14:41.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.910" level="INFO">VALUE: [9.561100000000239e-05, 9.541600000000094e-05, 9.676399999999918e-05, 9.562499999999849e-05, 9.512500000000146e-05, 9.572300000000242e-05, 9.513799999999809e-05, 9.509699999999885e-05, 9.499999999999786e-05, 9.680499999999842e-05, 9.505500000000014e-05, 9.491600000000044e-05, 9.544400000000008e-05, 9.512500000000146e-05, 9.518099999999974e-05, 9.5333999999999e-05, 9.554200000000054e-05, 9.679099999999885e-05, 9.504100000000057e-05, 9.49729999999982e-05, 9.526299999999821e-05, 9.527800000000072e-05, 9.530599999999986e-05, 9.679100000000232e-05, 9.561099999999892e-05, 9.513899999999756e-05, 9.55140000000014e-05, 9.669399999999786e-05, 9.498700000000124e-05, 9.541700000000042e-05, 9.499999999999786e-05, 9.569499999999981e-05, 9.530500000000039e-05, 9.486200000000111e-05, 9.491600000000044e-05, 9.493000000000001e-05, 9.49859999999983e-05, 9.524999999999811e-05, 9.538899999999781e-05, 9.48469999999986e-05, 9.569400000000033e-05, 9.576400000000165e-05, 9.512500000000146e-05, 9.493099999999949e-05, 9.679199999999832e-05, 9.499999999999786e-05, 9.526400000000115e-05, 9.543099999999999e-05, 9.486200000000111e-05, 9.673600000000004e-05]</msg>
<status status="PASS" starttime="20201112 10:14:41.908" endtime="20201112 10:14:41.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.903" endtime="20201112 10:14:41.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.913" endtime="20201112 10:14:41.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:41.917" endtime="20201112 10:14:41.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.915" endtime="20201112 10:14:41.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.912" endtime="20201112 10:14:41.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.544" endtime="20201112 10:14:41.937"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.543" endtime="20201112 10:14:41.937"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.946" endtime="20201112 10:14:41.967"></status>
</kw>
<msg timestamp="20201112 10:14:41.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.945" endtime="20201112 10:14:41.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:41.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:41.968" endtime="20201112 10:14:41.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.971" endtime="20201112 10:14:41.973"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.942" endtime="20201112 10:14:41.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.940" endtime="20201112 10:14:41.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:41.981" endtime="20201112 10:14:42.267"></status>
</kw>
<msg timestamp="20201112 10:14:42.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019903333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:41.979" endtime="20201112 10:14:42.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019903333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.271" endtime="20201112 10:14:42.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.280" endtime="20201112 10:14:42.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.977" endtime="20201112 10:14:42.282"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.975" endtime="20201112 10:14:42.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.286" level="INFO">${RESULT} = [{'time': 0.019999444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.611100000000289e-05, 'source_diff': 9.611100000000289e-05}, {'time': 0.020098486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.283" endtime="20201112 10:14:42.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.300" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:42.287" endtime="20201112 10:14:42.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.304" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.303" endtime="20201112 10:14:42.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.307" level="INFO">VALUE: [9.611100000000289e-05, 9.595800000000015e-05, 9.663899999999906e-05, 9.618000000000126e-05, 9.774999999999714e-05, 9.781999999999846e-05, 9.676399999999918e-05, 9.62920000000013e-05, 9.647200000000022e-05, 9.640300000000185e-05, 9.63059999999974e-05, 9.779099999999985e-05, 9.609800000000279e-05, 9.626400000000215e-05, 9.619400000000083e-05, 9.609699999999985e-05, 9.599999999999886e-05, 9.59859999999993e-05, 9.78059999999989e-05, 9.669400000000133e-05, 9.608399999999975e-05, 9.612500000000246e-05, 9.618100000000074e-05, 9.600000000000233e-05, 9.638799999999934e-05, 9.630600000000086e-05, 9.776400000000018e-05, 9.647200000000022e-05, 9.663899999999906e-05, 9.64859999999998e-05, 9.637499999999924e-05, 9.652800000000197e-05, 9.597199999999972e-05, 9.649999999999936e-05, 9.618099999999727e-05, 9.64859999999998e-05, 9.624999999999911e-05, 9.604199999999757e-05, 9.665200000000262e-05, 9.63470000000001e-05, 9.597199999999972e-05, 9.599999999999886e-05, 9.644400000000108e-05, 9.666700000000167e-05, 9.599999999999886e-05, 9.644400000000108e-05, 9.779199999999932e-05, 9.587499999999874e-05, 9.672200000000047e-05, 9.623599999999954e-05]</msg>
<status status="PASS" starttime="20201112 10:14:42.305" endtime="20201112 10:14:42.307"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.301" endtime="20201112 10:14:42.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.310" endtime="20201112 10:14:42.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.314" endtime="20201112 10:14:42.333"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.312" endtime="20201112 10:14:42.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.309" endtime="20201112 10:14:42.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.938" endtime="20201112 10:14:42.334"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:41.938" endtime="20201112 10:14:42.335"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.343" endtime="20201112 10:14:42.363"></status>
</kw>
<msg timestamp="20201112 10:14:42.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.342" endtime="20201112 10:14:42.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.365" endtime="20201112 10:14:42.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.367" endtime="20201112 10:14:42.370"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.339" endtime="20201112 10:14:42.371"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.337" endtime="20201112 10:14:42.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.377" endtime="20201112 10:14:42.661"></status>
</kw>
<msg timestamp="20201112 10:14:42.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.376" endtime="20201112 10:14:42.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.666" endtime="20201112 10:14:42.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.674" endtime="20201112 10:14:42.675"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.373" endtime="20201112 10:14:42.676"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.372" endtime="20201112 10:14:42.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:42.681" level="INFO">${RESULT} = [{'time': 0.019931042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.741699999999895e-05, 'source_diff': 9.741699999999895e-05}, {'time': 0.020034014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:42.677" endtime="20201112 10:14:42.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:42.694" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:42.682" endtime="20201112 10:14:42.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.698" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 10:14:42.697" endtime="20201112 10:14:42.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.701" level="INFO">VALUE: [9.741699999999895e-05, 9.883299999999956e-05, 9.684699999999713e-05, 9.772200000000147e-05, 9.69860000000003e-05, 9.726399999999968e-05, 9.70140000000029e-05, 9.750000000000036e-05, 9.769400000000233e-05, 9.762500000000049e-05, 9.694399999999812e-05, 9.877700000000128e-05, 9.756899999999874e-05, 9.763900000000006e-05, 9.755599999999864e-05, 9.88059999999999e-05, 9.718100000000174e-05, 9.686100000000017e-05, 9.705600000000161e-05, 9.701399999999943e-05, 9.755600000000211e-05, 9.738800000000034e-05, 9.741600000000294e-05, 9.693000000000201e-05, 9.693000000000201e-05, 9.71660000000027e-05, 9.686100000000017e-05, 9.7027999999999e-05, 9.700000000000333e-05, 9.691700000000192e-05, 9.72920000000023e-05, 9.718100000000174e-05, 9.881999999999946e-05, 9.773700000000052e-05, 9.726300000000021e-05, 9.691699999999845e-05, 9.762500000000049e-05, 9.719400000000183e-05, 9.697200000000072e-05, 9.75279999999995e-05, 9.741700000000242e-05, 9.750000000000036e-05, 9.69860000000003e-05, 9.769500000000181e-05, 9.737500000000024e-05, 9.718100000000174e-05, 9.713899999999956e-05, 9.726399999999968e-05, 9.687499999999974e-05, 9.733299999999806e-05]</msg>
<status status="PASS" starttime="20201112 10:14:42.700" endtime="20201112 10:14:42.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.695" endtime="20201112 10:14:42.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.704" endtime="20201112 10:14:42.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:42.708" endtime="20201112 10:14:42.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.706" endtime="20201112 10:14:42.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.703" endtime="20201112 10:14:42.728"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.335" endtime="20201112 10:14:42.729"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.335" endtime="20201112 10:14:42.729"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.737" endtime="20201112 10:14:42.757"></status>
</kw>
<msg timestamp="20201112 10:14:42.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.736" endtime="20201112 10:14:42.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:42.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:42.759" endtime="20201112 10:14:42.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.762" endtime="20201112 10:14:42.764"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.733" endtime="20201112 10:14:42.765"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.731" endtime="20201112 10:14:42.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:42.771" endtime="20201112 10:14:43.058"></status>
</kw>
<msg timestamp="20201112 10:14:43.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:42.770" endtime="20201112 10:14:43.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019795792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.062" endtime="20201112 10:14:43.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.070" endtime="20201112 10:14:43.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.767" endtime="20201112 10:14:43.072"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.766" endtime="20201112 10:14:43.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.077" level="INFO">${RESULT} = [{'time': 0.019893958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.816600000000023e-05, 'source_diff': 9.816600000000023e-05}, {'time': 0.019994958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.074" endtime="20201112 10:14:43.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.091" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:43.078" endtime="20201112 10:14:43.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.096" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.095" endtime="20201112 10:14:43.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.098" level="INFO">VALUE: [9.816600000000023e-05, 9.811100000000142e-05, 9.812499999999752e-05, 9.808299999999881e-05, 9.83059999999994e-05, 9.836100000000167e-05, 9.801399999999696e-05, 9.83059999999994e-05, 9.805599999999914e-05, 9.848599999999832e-05, 9.818099999999927e-05, 9.862500000000149e-05, 9.983299999999709e-05, 9.869399999999987e-05, 9.855500000000017e-05, 9.977799999999828e-05, 9.837500000000124e-05, 9.874999999999814e-05, 9.787500000000074e-05, 9.982000000000046e-05, 9.868099999999977e-05, 9.976399999999871e-05, 9.859699999999888e-05, 9.84999999999979e-05, 9.855500000000017e-05, 9.800000000000086e-05, 9.822200000000197e-05, 9.830499999999992e-05, 9.983299999999709e-05, 9.830499999999992e-05, 9.979200000000132e-05, 9.795900000000163e-05, 9.78609999999977e-05, 9.840300000000038e-05, 9.848599999999832e-05, 9.833399999999853e-05, 9.869499999999934e-05, 9.830499999999992e-05, 9.974999999999914e-05, 9.979100000000185e-05, 9.791599999999998e-05, 9.844399999999962e-05, 9.868099999999977e-05, 9.794399999999912e-05, 9.805599999999914e-05, 9.79730000000012e-05, 9.865300000000063e-05, 9.795900000000163e-05, 9.826299999999774e-05, 9.8721999999999e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.097" endtime="20201112 10:14:43.099"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.092" endtime="20201112 10:14:43.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.102" endtime="20201112 10:14:43.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.105" endtime="20201112 10:14:43.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.104" endtime="20201112 10:14:43.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.100" endtime="20201112 10:14:43.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.730" endtime="20201112 10:14:43.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:42.729" endtime="20201112 10:14:43.126"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.135" endtime="20201112 10:14:43.155"></status>
</kw>
<msg timestamp="20201112 10:14:43.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.133" endtime="20201112 10:14:43.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.157" endtime="20201112 10:14:43.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.159" endtime="20201112 10:14:43.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.131" endtime="20201112 10:14:43.162"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.129" endtime="20201112 10:14:43.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.169" endtime="20201112 10:14:43.454"></status>
</kw>
<msg timestamp="20201112 10:14:43.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.168" endtime="20201112 10:14:43.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019823375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.458" endtime="20201112 10:14:43.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.466" endtime="20201112 10:14:43.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.165" endtime="20201112 10:14:43.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.163" endtime="20201112 10:14:43.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.473" level="INFO">${RESULT} = [{'time': 0.019922611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.923599999999907e-05, 'source_diff': 9.923599999999907e-05}, {'time': 0.020027611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:43.470" endtime="20201112 10:14:43.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.486" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:43.474" endtime="20201112 10:14:43.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.491" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.490" endtime="20201112 10:14:43.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.493" level="INFO">VALUE: [9.923599999999907e-05, 9.9028000000001e-05, 9.95419999999976e-05, 9.958399999999978e-05, 9.906999999999971e-05, 9.929199999999735e-05, 9.943100000000052e-05, 9.915300000000113e-05, 9.923599999999907e-05, 9.931900000000049e-05, 9.906900000000024e-05, 9.952700000000203e-05, 9.90549999999972e-05, 9.9028000000001e-05, 9.919400000000037e-05, 9.905600000000014e-05, 9.962499999999902e-05, 9.980499999999795e-05, 0.00010073600000000058, 9.963900000000206e-05, 9.887500000000174e-05, 0.00010073600000000058, 9.937499999999877e-05, 9.911099999999895e-05, 9.977800000000175e-05, 9.958300000000031e-05, 9.93609999999992e-05, 9.905500000000067e-05, 9.9028000000001e-05, 9.95419999999976e-05, 9.959799999999935e-05, 9.900000000000186e-05, 9.951399999999846e-05, 9.94860000000028e-05, 9.919400000000037e-05, 9.904099999999763e-05, 9.886100000000217e-05, 0.00010081900000000199, 9.915200000000166e-05, 9.895799999999969e-05, 9.959699999999988e-05, 9.962500000000249e-05, 9.944500000000009e-05, 9.900000000000186e-05, 9.938899999999834e-05, 9.893100000000002e-05, 9.938899999999834e-05, 9.973599999999957e-05, 9.950000000000236e-05, 9.905500000000067e-05]</msg>
<status status="PASS" starttime="20201112 10:14:43.492" endtime="20201112 10:14:43.494"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.487" endtime="20201112 10:14:43.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.497" endtime="20201112 10:14:43.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.500" endtime="20201112 10:14:43.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.499" endtime="20201112 10:14:43.520"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.495" endtime="20201112 10:14:43.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.127" endtime="20201112 10:14:43.521"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.126" endtime="20201112 10:14:43.521"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.530" endtime="20201112 10:14:43.551"></status>
</kw>
<msg timestamp="20201112 10:14:43.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.528" endtime="20201112 10:14:43.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.552" endtime="20201112 10:14:43.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.554" endtime="20201112 10:14:43.557"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.525" endtime="20201112 10:14:43.558"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.523" endtime="20201112 10:14:43.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.565" endtime="20201112 10:14:43.850"></status>
</kw>
<msg timestamp="20201112 10:14:43.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020010111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020110597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.563" endtime="20201112 10:14:43.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020010111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020110597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.855" endtime="20201112 10:14:43.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.863" endtime="20201112 10:14:43.864"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.560" endtime="20201112 10:14:43.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.559" endtime="20201112 10:14:43.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:43.869" level="INFO">${RESULT} = [{'time': 0.020110597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010048600000000033, 'source_diff': 0.00010048600000000033}, {'time': 0.020216639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:43.866" endtime="20201112 10:14:43.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:43.883" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:43.870" endtime="20201112 10:14:43.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.887" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 10:14:43.886" endtime="20201112 10:14:43.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.889" level="INFO">VALUE: [0.00010048600000000033, 0.00010009700000000038, 9.98609999999997e-05, 0.00010008299999999734, 0.00010018100000000127, 0.00010056999999999774, 0.0001003610000000002, 0.00010011099999999995, 0.00010013799999999962, 0.00010006899999999777, 0.00010048600000000033, 0.00010006899999999777, 0.00010040300000000238, 0.0001003610000000002, 0.00010037500000000324, 0.00010037499999999977, 0.00010012499999999952, 0.00010030599999999792, 9.98609999999997e-05, 0.00010043099999999805, 0.00010001399999999896, 9.994400000000112e-05, 0.00010061199999999992, 0.00010027799999999878, 9.987499999999927e-05, 0.00010180499999999995, 0.00010179199999999985, 9.993000000000155e-05, 9.99860000000033e-05, 0.00010036199999999967, 0.0001004999999999999, 0.00010018100000000127, 0.00010000000000000286, 0.00010047200000000076, 0.00010013899999999909, 0.00010181899999999952, 9.990199999999894e-05, 0.00010073600000000058, 0.00010180499999999995, 0.00010011099999999995, 0.00010027800000000225, 0.00010048600000000033, 0.00010065299999999916, 0.00010055600000000164, 0.00010020900000000041, 0.0001018060000000029, 0.00010018100000000127, 0.00010174999999999768, 0.00010023699999999955, 0.00010018100000000127]</msg>
<status status="PASS" starttime="20201112 10:14:43.888" endtime="20201112 10:14:43.890"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.883" endtime="20201112 10:14:43.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.893" endtime="20201112 10:14:43.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:43.896" endtime="20201112 10:14:43.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.895" endtime="20201112 10:14:43.916"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.891" endtime="20201112 10:14:43.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.522" endtime="20201112 10:14:43.917"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.521" endtime="20201112 10:14:43.917"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.926" endtime="20201112 10:14:43.946"></status>
</kw>
<msg timestamp="20201112 10:14:43.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.924" endtime="20201112 10:14:43.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:43.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:43.947" endtime="20201112 10:14:43.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.950" endtime="20201112 10:14:43.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.922" endtime="20201112 10:14:43.953"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.920" endtime="20201112 10:14:43.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:43.961" endtime="20201112 10:14:44.246"></status>
</kw>
<msg timestamp="20201112 10:14:44.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:43.959" endtime="20201112 10:14:44.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019794375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019897194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.250" endtime="20201112 10:14:44.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.258" endtime="20201112 10:14:44.260"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.956" endtime="20201112 10:14:44.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.955" endtime="20201112 10:14:44.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.265" level="INFO">${RESULT} = [{'time': 0.019897194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010281900000000052, 'source_diff': 0.00010281900000000052}, {'time': 0.020002194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:44.262" endtime="20201112 10:14:44.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.278" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:44.266" endtime="20201112 10:14:44.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.283" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.282" endtime="20201112 10:14:44.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.285" level="INFO">VALUE: [0.00010281900000000052, 0.00010130499999999945, 0.00010143000000000305, 0.00010117999999999933, 0.00010137500000000077, 0.0001015000000000009, 0.0001018060000000029, 0.0001013610000000012, 0.00010118100000000227, 0.00010138900000000034, 0.00010087500000000027, 0.0001015419999999996, 0.00010102700000000006, 0.00010170800000000244, 0.00010105500000000267, 0.00010129200000000282, 0.00010281899999999705, 0.0001013749999999973, 0.00010129199999999935, 0.00010112500000000052, 0.00010159700000000188, 0.0001010000000000004, 0.00010157000000000221, 0.00010169499999999887, 0.00010168100000000277, 0.00010129199999999935, 0.00010142999999999958, 0.0001009159999999995, 0.00010140299999999991, 0.00010281900000000052, 0.0001009159999999995, 0.00010175000000000115, 0.0001016939999999994, 0.00010161100000000145, 0.00010130599999999892, 0.00010162500000000102, 0.00010108399999999781, 0.00010122300000000098, 0.00010113800000000062, 0.00010154100000000013, 0.00010115200000000019, 0.0001015000000000009, 0.00010137500000000077, 0.0001010000000000004, 0.00010279100000000138, 0.00010086099999999723, 0.00010108300000000181, 0.00010161100000000145, 0.00010111100000000095, 0.00010166600000000026]</msg>
<status status="PASS" starttime="20201112 10:14:44.284" endtime="20201112 10:14:44.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.279" endtime="20201112 10:14:44.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.289" endtime="20201112 10:14:44.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.292" endtime="20201112 10:14:44.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.291" endtime="20201112 10:14:44.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.287" endtime="20201112 10:14:44.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.918" endtime="20201112 10:14:44.313"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:43.918" endtime="20201112 10:14:44.313"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.322" endtime="20201112 10:14:44.342"></status>
</kw>
<msg timestamp="20201112 10:14:44.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.320" endtime="20201112 10:14:44.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.344" endtime="20201112 10:14:44.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.346" endtime="20201112 10:14:44.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.318" endtime="20201112 10:14:44.349"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.316" endtime="20201112 10:14:44.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.356" endtime="20201112 10:14:44.641"></status>
</kw>
<msg timestamp="20201112 10:14:44.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.355" endtime="20201112 10:14:44.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019918986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020021597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:44.646" endtime="20201112 10:14:44.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.654" endtime="20201112 10:14:44.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.352" endtime="20201112 10:14:44.656"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.350" endtime="20201112 10:14:44.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:44.660" level="INFO">${RESULT} = [{'time': 0.020021597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010261099999999898, 'source_diff': 0.00010261099999999898}, {'time': 0.020128625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:44.657" endtime="20201112 10:14:44.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:44.674" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:44.661" endtime="20201112 10:14:44.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.679" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 10:14:44.678" endtime="20201112 10:14:44.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.681" level="INFO">VALUE: [0.00010261099999999898, 0.00010251400000000147, 0.00010213899999999762, 0.00010243100000000005, 0.00010240300000000091, 0.00010198600000000183, 0.00010208399999999881, 0.0001023879999999984, 0.00010380500000000195, 0.00010248599999999886, 0.00010248600000000233, 0.00010263900000000159, 0.0001020550000000002, 0.00010245799999999972, 0.00010255600000000017, 0.00010380599999999796, 0.00010205600000000314, 0.00010224999999999818, 0.0001027359999999991, 0.00010205599999999967, 0.00010205599999999967, 0.00010222199999999904, 0.00010237500000000177, 0.0001026940000000004, 0.00010198600000000183, 0.00010218000000000033, 0.00010268000000000083, 0.00010383300000000109, 0.00010255600000000017, 0.00010237500000000177, 0.00010226400000000122, 0.0001020420000000001, 0.00010245799999999972, 0.00010193099999999955, 0.0001023749999999983, 0.00010263900000000159, 0.00010261099999999898, 0.00010229100000000088, 0.00010198599999999836, 0.00010267999999999736, 0.000102513999999998, 0.00010256999999999974, 0.00010245899999999919, 0.00010209699999999891, 0.00010233399999999906, 0.00010215300000000066, 0.00010208300000000281, 0.00010230500000000045, 0.0001022359999999986, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201112 10:14:44.680" endtime="20201112 10:14:44.682"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.675" endtime="20201112 10:14:44.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.685" endtime="20201112 10:14:44.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:44.688" endtime="20201112 10:14:44.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.687" endtime="20201112 10:14:44.708"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.683" endtime="20201112 10:14:44.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.314" endtime="20201112 10:14:44.709"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.313" endtime="20201112 10:14:44.709"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.718" endtime="20201112 10:14:44.739"></status>
</kw>
<msg timestamp="20201112 10:14:44.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.716" endtime="20201112 10:14:44.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:44.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:44.740" endtime="20201112 10:14:44.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.743" endtime="20201112 10:14:44.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.714" endtime="20201112 10:14:44.746"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.711" endtime="20201112 10:14:44.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:44.753" endtime="20201112 10:14:45.038"></status>
</kw>
<msg timestamp="20201112 10:14:45.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:44.751" endtime="20201112 10:14:45.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020002986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 10:14:45.042" endtime="20201112 10:14:45.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.050" endtime="20201112 10:14:45.051"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.749" endtime="20201112 10:14:45.052"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.747" endtime="20201112 10:14:45.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.056" level="INFO">${RESULT} = [{'time': 0.020106, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001030139999999985, 'source_diff': 0.0001030139999999985}, {'time': 0.020212, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0...</msg>
<status status="PASS" starttime="20201112 10:14:45.053" endtime="20201112 10:14:45.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.069" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:45.057" endtime="20201112 10:14:45.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.074" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.073" endtime="20201112 10:14:45.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.076" level="INFO">VALUE: [0.0001030139999999985, 0.00010298599999999936, 0.00010312499999999905, 0.00010347299999999976, 0.00010348599999999986, 0.00010312500000000252, 0.0001035420000000016, 0.00010323700000000255, 0.0001031940000000009, 0.00010320800000000047, 0.00010302799999999807, 0.00010317999999999786, 0.00010291599999999804, 0.00010337500000000277, 0.00010294500000000012, 0.00010343100000000105, 0.00010330600000000092, 0.00010298599999999936, 0.00010344500000000062, 0.0001030000000000024, 0.00010342999999999811, 0.00010479099999999991, 0.00010354099999999866, 0.00010324999999999918, 0.0001032359999999996, 0.00010333300000000059, 0.00010480599999999896, 0.00010293100000000055, 0.00010312499999999905, 0.00010347299999999976, 0.00010286099999999923, 0.00010361099999999998, 0.00010483299999999862, 0.00010376400000000272, 0.00010359700000000041, 0.00010347200000000029, 0.00010362499999999955, 0.00010355499999999823, 0.00010319399999999743, 0.00010306900000000077, 0.0001030139999999985, 0.00010304199999999764, 0.0001033200000000005, 0.00010298599999999936, 0.0001030420000000011, 0.00010362499999999955, 0.00010315199999999872, 0.0001028749999999988, 0.00010351400000000247, 0.0001047360000000011]</msg>
<status status="PASS" starttime="20201112 10:14:45.075" endtime="20201112 10:14:45.077"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.070" endtime="20201112 10:14:45.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.080" endtime="20201112 10:14:45.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.083" endtime="20201112 10:14:45.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.082" endtime="20201112 10:14:45.103"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.078" endtime="20201112 10:14:45.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.710" endtime="20201112 10:14:45.104"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:44.709" endtime="20201112 10:14:45.104"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.113" endtime="20201112 10:14:45.134"></status>
</kw>
<msg timestamp="20201112 10:14:45.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.111" endtime="20201112 10:14:45.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.136" endtime="20201112 10:14:45.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.138" endtime="20201112 10:14:45.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.109" endtime="20201112 10:14:45.141"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.107" endtime="20201112 10:14:45.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.148" endtime="20201112 10:14:45.433"></status>
</kw>
<msg timestamp="20201112 10:14:45.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.146" endtime="20201112 10:14:45.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019710667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.437" endtime="20201112 10:14:45.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.445" endtime="20201112 10:14:45.446"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.144" endtime="20201112 10:14:45.447"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.142" endtime="20201112 10:14:45.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.451" level="INFO">${RESULT} = [{'time': 0.019814681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001040139999999995, 'source_diff': 0.0001040139999999995}, {'time': 0.019922722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:45.448" endtime="20201112 10:14:45.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.465" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:45.452" endtime="20201112 10:14:45.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.469" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.468" endtime="20201112 10:14:45.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.472" level="INFO">VALUE: [0.0001040139999999995, 0.00010402799999999907, 0.0001047360000000011, 0.00010404099999999916, 0.00010580500000000048, 0.00010425000000000018, 0.00010388899999999937, 0.00010416700000000223, 0.00010436100000000073, 0.00010466699999999926, 0.00010456999999999828, 0.00010580599999999996, 0.0001046949999999984, 0.00010447200000000129, 0.00010386100000000023, 0.00010448600000000086, 0.00010423599999999714, 0.00010450000000000043, 0.0001040139999999995, 0.00010413899999999962, 0.00010397300000000026, 0.00010465300000000316, 0.00010580599999999996, 0.000104514, 0.00010461100000000098, 0.00010472200000000154, 0.00010390199999999947, 0.0001045550000000027, 0.00010463900000000012, 0.00010466699999999926, 0.0001047499999999972, 0.00010580599999999996, 0.00010397200000000079, 0.00010481899999999905, 0.0001040559999999982, 0.00010401300000000002, 0.0001057499999999982, 0.00010393100000000155, 0.0001038749999999998, 0.00010390199999999947, 0.00010427799999999932, 0.00010380499999999848, 0.00010388900000000284, 0.00010580599999999996, 0.00010458400000000131, 0.00010411099999999701, 0.00010445900000000119, 0.00010429199999999889, 0.00010408399999999735, 0.00010404199999999864]</msg>
<status status="PASS" starttime="20201112 10:14:45.470" endtime="20201112 10:14:45.472"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.466" endtime="20201112 10:14:45.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.475" endtime="20201112 10:14:45.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.479" endtime="20201112 10:14:45.498"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.477" endtime="20201112 10:14:45.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.474" endtime="20201112 10:14:45.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.105" endtime="20201112 10:14:45.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.105" endtime="20201112 10:14:45.499"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.508" endtime="20201112 10:14:45.529"></status>
</kw>
<msg timestamp="20201112 10:14:45.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.506" endtime="20201112 10:14:45.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.531" endtime="20201112 10:14:45.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.533" endtime="20201112 10:14:45.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.504" endtime="20201112 10:14:45.536"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.502" endtime="20201112 10:14:45.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.543" endtime="20201112 10:14:45.828"></status>
</kw>
<msg timestamp="20201112 10:14:45.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019939681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.542" endtime="20201112 10:14:45.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019939681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:45.832" endtime="20201112 10:14:45.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.840" endtime="20201112 10:14:45.842"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.539" endtime="20201112 10:14:45.843"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.537" endtime="20201112 10:14:45.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:45.847" level="INFO">${RESULT} = [{'time': 0.019939681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010558400000000231, 'source_diff': 0.00010558400000000231}, {'time': 0.020048694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:45.844" endtime="20201112 10:14:45.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:45.860" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:45.848" endtime="20201112 10:14:45.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.865" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 10:14:45.864" endtime="20201112 10:14:45.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.867" level="INFO">VALUE: [0.00010558400000000231, 0.00010537499999999783, 0.00010504100000000016, 0.00010495799999999875, 0.00010544399999999968, 0.0001050689999999993, 0.00010556999999999928, 0.0001050140000000005, 0.0001056949999999994, 0.00010531999999999903, 0.00010679200000000139, 0.00010488900000000037, 0.00010500000000000093, 0.00010561100000000198, 0.00010525000000000118, 0.00010549999999999796, 0.00010502800000000007, 0.00010513899999999715, 0.00010508299999999887, 0.00010498600000000136, 0.00010675000000000268, 0.00010504199999999964, 0.0001052499999999977, 0.00010572299999999854, 0.00010495800000000222, 0.0001053750000000013, 0.00010516599999999682, 0.00010533299999999912, 0.00010516600000000029, 0.00010492999999999961, 0.00010512500000000105, 0.00010679199999999792, 0.00010543100000000305, 0.00010515300000000019, 0.00010568099999999983, 0.00010680600000000096, 0.00010506900000000277, 0.00010680599999999749, 0.00010531899999999955, 0.00010519399999999943, 0.00010525000000000118, 0.00010573599999999864, 0.00010499999999999746, 0.0001056949999999994, 0.00010566700000000026, 0.00010497199999999832, 0.00010494500000000212, 0.0001048750000000008, 0.00010488900000000037, 0.00010500000000000093]</msg>
<status status="PASS" starttime="20201112 10:14:45.866" endtime="20201112 10:14:45.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.861" endtime="20201112 10:14:45.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.871" endtime="20201112 10:14:45.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:45.874" endtime="20201112 10:14:45.893"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.873" endtime="20201112 10:14:45.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.869" endtime="20201112 10:14:45.894"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.500" endtime="20201112 10:14:45.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.500" endtime="20201112 10:14:45.895"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.904" endtime="20201112 10:14:45.925"></status>
</kw>
<msg timestamp="20201112 10:14:45.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.902" endtime="20201112 10:14:45.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:45.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:45.926" endtime="20201112 10:14:45.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.929" endtime="20201112 10:14:45.931"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.899" endtime="20201112 10:14:45.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.897" endtime="20201112 10:14:45.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:45.939" endtime="20201112 10:14:46.224"></status>
</kw>
<msg timestamp="20201112 10:14:46.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01987075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:45.937" endtime="20201112 10:14:46.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019764431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01987075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:46.228" endtime="20201112 10:14:46.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.237" endtime="20201112 10:14:46.238"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.935" endtime="20201112 10:14:46.239"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.933" endtime="20201112 10:14:46.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.243" level="INFO">${RESULT} = [{'time': 0.01987075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010631900000000055, 'source_diff': 0.00010631900000000055}, {'time': 0.019983764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:46.240" endtime="20201112 10:14:46.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.257" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:46.244" endtime="20201112 10:14:46.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.262" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.261" endtime="20201112 10:14:46.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.264" level="INFO">VALUE: [0.00010631900000000055, 0.00010772200000000107, 0.00010611099999999901, 0.00010597299999999879, 0.0001058339999999991, 0.00010665300000000169, 0.0001060690000000003, 0.00010643000000000111, 0.00010661099999999951, 0.00010648600000000286, 0.00010663899999999865, 0.0001063750000000023, 0.00010590299999999747, 0.0001063750000000023, 0.00010669400000000093, 0.0001063750000000023, 0.00010606999999999978, 0.00010659799999999942, 0.00010633300000000012, 0.00010641699999999754, 0.0001063889999999984, 0.00010626400000000175, 0.00010592999999999714, 0.00010617999999999739, 0.0001063889999999984, 0.00010587499999999833, 0.0001062499999999987, 0.00010594499999999965, 0.00010591700000000051, 0.00010637499999999883, 0.00010612500000000205, 0.00010612499999999858, 0.0001060690000000003, 0.00010600000000000193, 0.00010659699999999994, 0.00010594400000000018, 0.00010637499999999883, 0.00010780600000000196, 0.00010587499999999833, 0.00010776399999999978, 0.00010668099999999736, 0.00010780600000000196, 0.00010644400000000068, 0.00010590300000000094, 0.00010626400000000175, 0.00010647200000000329, 0.00010588900000000137, 0.00010776399999999978, 0.00010781900000000205, 0.00010659699999999994]</msg>
<status status="PASS" starttime="20201112 10:14:46.263" endtime="20201112 10:14:46.269"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.258" endtime="20201112 10:14:46.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.272" endtime="20201112 10:14:46.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.275" endtime="20201112 10:14:46.294"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.274" endtime="20201112 10:14:46.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.270" endtime="20201112 10:14:46.295"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.896" endtime="20201112 10:14:46.296"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:45.895" endtime="20201112 10:14:46.296"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.304" endtime="20201112 10:14:46.325"></status>
</kw>
<msg timestamp="20201112 10:14:46.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.303" endtime="20201112 10:14:46.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.326" endtime="20201112 10:14:46.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.329" endtime="20201112 10:14:46.331"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.300" endtime="20201112 10:14:46.332"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.298" endtime="20201112 10:14:46.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.339" endtime="20201112 10:14:46.624"></status>
</kw>
<msg timestamp="20201112 10:14:46.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.337" endtime="20201112 10:14:46.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019915153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.628" endtime="20201112 10:14:46.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.636" endtime="20201112 10:14:46.638"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.335" endtime="20201112 10:14:46.639"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.333" endtime="20201112 10:14:46.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:46.643" level="INFO">${RESULT} = [{'time': 0.019915153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010880600000000296, 'source_diff': 0.00010880600000000296}, {'time': 0.020026153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:46.640" endtime="20201112 10:14:46.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:46.656" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:46.644" endtime="20201112 10:14:46.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.661" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 10:14:46.660" endtime="20201112 10:14:46.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.663" level="INFO">VALUE: [0.00010880600000000296, 0.00010716700000000176, 0.00010686099999999976, 0.00010738799999999993, 0.00010698699999999936, 0.00010708300000000087, 0.0001070829999999974, 0.00010762500000000008, 0.00010877800000000035, 0.00010881999999999906, 0.00010722200000000057, 0.00010733300000000112, 0.00010686099999999976, 0.00010737499999999983, 0.00010716699999999829, 0.00010709700000000044, 0.00010880500000000001, 0.00010881899999999958, 0.0001077080000000015, 0.00010713899999999915, 0.00010773599999999717, 0.00010736100000000026, 0.0001075279999999991, 0.00010881899999999958, 0.00010715299999999872, 0.00010748599999999692, 0.00010773600000000064, 0.0001072499999999997, 0.00010702699999999912, 0.00010723600000000014, 0.00010737499999999983, 0.00010699999999999946, 0.00010880500000000001, 0.00010699999999999946, 0.00010765299999999922, 0.00010712499999999958, 0.00010770900000000097, 0.00010754199999999867, 0.00010716699999999829, 0.00010694500000000065, 0.00010748600000000039, 0.00010751399999999953, 0.00010731900000000155, 0.00010694399999999771, 0.00010733299999999765, 0.00010736100000000026, 0.00010757000000000128, 0.00010723600000000014, 0.00010712499999999958, 0.00010693099999999761]</msg>
<status status="PASS" starttime="20201112 10:14:46.662" endtime="20201112 10:14:46.664"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.657" endtime="20201112 10:14:46.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.667" endtime="20201112 10:14:46.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:46.670" endtime="20201112 10:14:46.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.669" endtime="20201112 10:14:46.690"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.665" endtime="20201112 10:14:46.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.297" endtime="20201112 10:14:46.691"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.296" endtime="20201112 10:14:46.691"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.700" endtime="20201112 10:14:46.720"></status>
</kw>
<msg timestamp="20201112 10:14:46.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.698" endtime="20201112 10:14:46.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:46.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:46.722" endtime="20201112 10:14:46.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.724" endtime="20201112 10:14:46.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.695" endtime="20201112 10:14:46.727"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.693" endtime="20201112 10:14:46.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:46.734" endtime="20201112 10:14:47.020"></status>
</kw>
<msg timestamp="20201112 10:14:47.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:46.733" endtime="20201112 10:14:47.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.024" endtime="20201112 10:14:47.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.032" endtime="20201112 10:14:47.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.730" endtime="20201112 10:14:47.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.728" endtime="20201112 10:14:47.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.038" level="INFO">${RESULT} = [{'time': 0.019847403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010793099999999861, 'source_diff': 0.00010793099999999861}, {'time': 0.019958389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:47.035" endtime="20201112 10:14:47.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.051" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:47.039" endtime="20201112 10:14:47.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.056" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.055" endtime="20201112 10:14:47.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.058" level="INFO">VALUE: [0.00010793099999999861, 0.00010847199999999835, 0.00010980600000000049, 0.00010861099999999804, 0.00010812500000000058, 0.00010812500000000058, 0.00010794399999999871, 0.00010980499999999754, 0.00010841600000000007, 0.00010811100000000101, 0.00010793100000000208, 0.00010800000000000046, 0.00010837500000000083, 0.00010823600000000114, 0.00010855599999999924, 0.00010836099999999779, 0.00010982000000000006, 0.00010982000000000006, 0.00010983300000000015, 0.00010838899999999693, 0.0001085690000000028, 0.00010847200000000182, 0.00010858399999999838, 0.00010800000000000046, 0.00010841699999999954, 0.00010836100000000126, 0.00010812500000000058, 0.0001078889999999999, 0.00010866699999999979, 0.00010816699999999929, 0.0001083890000000004, 0.00010869400000000293, 0.00010975000000000221, 0.00010786100000000076, 0.00010798600000000089, 0.00010848600000000139, 0.00010812500000000058, 0.00010851399999999706, 0.00010824999999999724, 0.00010855599999999924, 0.00010854100000000019, 0.0001082630000000008, 0.00010830499999999951, 0.00010794399999999871, 0.00010875000000000121, 0.00010865300000000022, 0.00010980500000000101, 0.00010865300000000022, 0.00010831999999999856, 0.00010824999999999724]</msg>
<status status="PASS" starttime="20201112 10:14:47.057" endtime="20201112 10:14:47.059"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.052" endtime="20201112 10:14:47.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.062" endtime="20201112 10:14:47.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.065" endtime="20201112 10:14:47.084"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.064" endtime="20201112 10:14:47.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.060" endtime="20201112 10:14:47.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.692" endtime="20201112 10:14:47.086"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:46.691" endtime="20201112 10:14:47.086"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.094" endtime="20201112 10:14:47.115"></status>
</kw>
<msg timestamp="20201112 10:14:47.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.093" endtime="20201112 10:14:47.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.117" endtime="20201112 10:14:47.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.120" endtime="20201112 10:14:47.122"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.091" endtime="20201112 10:14:47.123"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.088" endtime="20201112 10:14:47.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.130" endtime="20201112 10:14:47.413"></status>
</kw>
<msg timestamp="20201112 10:14:47.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.128" endtime="20201112 10:14:47.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.418" endtime="20201112 10:14:47.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.426" endtime="20201112 10:14:47.427"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.125" endtime="20201112 10:14:47.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.124" endtime="20201112 10:14:47.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.432" level="INFO">${RESULT} = [{'time': 0.019930028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011073600000000017, 'source_diff': 0.00011073600000000017}, {'time': 0.020045056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:47.429" endtime="20201112 10:14:47.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.446" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:47.433" endtime="20201112 10:14:47.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.450" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.449" endtime="20201112 10:14:47.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.452" level="INFO">VALUE: [0.00011073600000000017, 0.00011074999999999974, 0.00010923599999999867, 0.00010927700000000137, 0.00010913900000000115, 0.00010924999999999824, 0.00010908300000000287, 0.0001095280000000011, 0.00010901400000000103, 0.00010932000000000303, 0.00010944499999999968, 0.00011076399999999931, 0.00010955600000000024, 0.0001095419999999972, 0.00010944499999999968, 0.00010958399999999938, 0.00010887500000000133, 0.00010918000000000039, 0.00010913900000000115, 0.00010969400000000046, 0.0001095829999999999, 0.00010887500000000133, 0.00010958399999999938, 0.00010940300000000097, 0.00010912499999999811, 0.0001092219999999991, 0.00010901300000000155, 0.00010915300000000072, 0.0001095829999999999, 0.00010925000000000171, 0.00010890300000000047, 0.00010936099999999879, 0.00010951399999999806, 0.00010901400000000103, 0.00011084700000000072, 0.00010900000000000146, 0.00010968100000000036, 0.00010943100000000011, 0.00011073699999999964, 0.00010955500000000076, 0.00010963899999999818, 0.00010898599999999842, 0.00010901400000000103, 0.00010893000000000014, 0.00010936100000000226, 0.00010911099999999854, 0.00010933399999999913, 0.00010943100000000011, 0.00010909700000000244, 0.00011074999999999974]</msg>
<status status="PASS" starttime="20201112 10:14:47.451" endtime="20201112 10:14:47.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.446" endtime="20201112 10:14:47.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.456" endtime="20201112 10:14:47.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.459" endtime="20201112 10:14:47.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.458" endtime="20201112 10:14:47.479"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.454" endtime="20201112 10:14:47.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.087" endtime="20201112 10:14:47.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.086" endtime="20201112 10:14:47.480"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.489" endtime="20201112 10:14:47.511"></status>
</kw>
<msg timestamp="20201112 10:14:47.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.487" endtime="20201112 10:14:47.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.512" endtime="20201112 10:14:47.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.515" endtime="20201112 10:14:47.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.485" endtime="20201112 10:14:47.518"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.483" endtime="20201112 10:14:47.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.525" endtime="20201112 10:14:47.810"></status>
</kw>
<msg timestamp="20201112 10:14:47.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019965194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.523" endtime="20201112 10:14:47.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019965194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.814" endtime="20201112 10:14:47.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.822" endtime="20201112 10:14:47.823"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.521" endtime="20201112 10:14:47.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.519" endtime="20201112 10:14:47.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:47.828" level="INFO">${RESULT} = [{'time': 0.019965194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011051299999999958, 'source_diff': 0.00011051299999999958}, {'time': 0.020079181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:47.825" endtime="20201112 10:14:47.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:47.842" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:47.829" endtime="20201112 10:14:47.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.847" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 10:14:47.846" endtime="20201112 10:14:47.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.849" level="INFO">VALUE: [0.00011051299999999958, 0.00011054200000000167, 0.00011004099999999822, 0.0001102220000000001, 0.00010987499999999886, 0.00011180599999999902, 0.00011019400000000096, 0.00011073600000000017, 0.00011023599999999967, 0.00011055599999999777, 0.00010999999999999899, 0.0001105700000000008, 0.00011051400000000253, 0.00010988799999999896, 0.00011076400000000278, 0.00011041600000000207, 0.00011175000000000074, 0.00011019399999999749, 0.00011032000000000056, 0.00011027799999999838, 0.0001100419999999977, 0.00011044500000000068, 0.00010991700000000104, 0.00011066700000000179, 0.00010999999999999899, 0.00011056900000000133, 0.00011016599999999835, 0.0001117220000000016, 0.00011074999999999974, 0.00011074999999999974, 0.00011002799999999813, 0.00010994500000000018, 0.00010987499999999886, 0.00011009699999999997, 0.00011008399999999988, 0.0001100700000000003, 0.00011047200000000035, 0.00011059799999999995, 0.00011180500000000301, 0.0001105549999999983, 0.00011183299999999868, 0.00010986100000000276, 0.00011012499999999911, 0.00011005600000000074, 0.00011055500000000176, 0.00011032000000000056, 0.00010998599999999942, 0.00011179199999999945, 0.00011043000000000164, 0.00010999999999999899]</msg>
<status status="PASS" starttime="20201112 10:14:47.848" endtime="20201112 10:14:47.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.843" endtime="20201112 10:14:47.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.853" endtime="20201112 10:14:47.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:47.856" endtime="20201112 10:14:47.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.855" endtime="20201112 10:14:47.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.851" endtime="20201112 10:14:47.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.481" endtime="20201112 10:14:47.877"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.481" endtime="20201112 10:14:47.877"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.886" endtime="20201112 10:14:47.907"></status>
</kw>
<msg timestamp="20201112 10:14:47.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.884" endtime="20201112 10:14:47.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:47.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:47.909" endtime="20201112 10:14:47.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.911" endtime="20201112 10:14:47.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.882" endtime="20201112 10:14:47.914"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.879" endtime="20201112 10:14:47.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:47.921" endtime="20201112 10:14:48.207"></status>
</kw>
<msg timestamp="20201112 10:14:48.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:47.920" endtime="20201112 10:14:48.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.211" endtime="20201112 10:14:48.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.219" endtime="20201112 10:14:48.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.917" endtime="20201112 10:14:48.222"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.915" endtime="20201112 10:14:48.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.226" level="INFO">${RESULT} = [{'time': 0.019826097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011087499999999986, 'source_diff': 0.00011087499999999986}, {'time': 0.019940111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.223" endtime="20201112 10:14:48.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.239" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:48.227" endtime="20201112 10:14:48.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.244" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.243" endtime="20201112 10:14:48.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.246" level="INFO">VALUE: [0.00011087499999999986, 0.00011148600000000092, 0.0001113480000000007, 0.00011108400000000088, 0.00011112500000000011, 0.00011165300000000322, 0.00011159700000000147, 0.00011274999999999827, 0.00011142999999999917, 0.00011123600000000067, 0.00011163900000000018, 0.00011131899999999861, 0.00011125000000000024, 0.00011151400000000006, 0.00011126400000000328, 0.00011168099999999889, 0.00011158400000000138, 0.00011097200000000085, 0.00011116700000000229, 0.00011276299999999836, 0.00011151400000000006, 0.00011126399999999981, 0.00011162500000000061, 0.00011138899999999993, 0.00011125000000000024, 0.00011170799999999856, 0.00011125000000000024, 0.00011133400000000113, 0.00011138899999999993, 0.00011162500000000061, 0.0001112220000000011, 0.00011166699999999932, 0.00011145799999999831, 0.00011154099999999972, 0.00011268000000000042, 0.00011099999999999999, 0.00011136099999999732, 0.00011148599999999745, 0.00011087499999999986, 0.00011113900000000315, 0.00011282000000000306, 0.00011144499999999821, 0.00011126399999999981, 0.00011273700000000164, 0.0001115549999999993, 0.0001110549999999988, 0.00011279100000000097, 0.00011133299999999818, 0.00011161200000000052, 0.0001127359999999987]</msg>
<status status="PASS" starttime="20201112 10:14:48.245" endtime="20201112 10:14:48.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.240" endtime="20201112 10:14:48.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.250" endtime="20201112 10:14:48.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.253" endtime="20201112 10:14:48.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.252" endtime="20201112 10:14:48.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.248" endtime="20201112 10:14:48.273"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.878" endtime="20201112 10:14:48.274"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:47.877" endtime="20201112 10:14:48.274"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.282" endtime="20201112 10:14:48.304"></status>
</kw>
<msg timestamp="20201112 10:14:48.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.281" endtime="20201112 10:14:48.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.305" endtime="20201112 10:14:48.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.308" endtime="20201112 10:14:48.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.278" endtime="20201112 10:14:48.311"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.276" endtime="20201112 10:14:48.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.318" endtime="20201112 10:14:48.603"></status>
</kw>
<msg timestamp="20201112 10:14:48.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.316" endtime="20201112 10:14:48.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019815569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.607" endtime="20201112 10:14:48.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.616" endtime="20201112 10:14:48.617"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.314" endtime="20201112 10:14:48.618"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.312" endtime="20201112 10:14:48.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:48.622" level="INFO">${RESULT} = [{'time': 0.019928278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011270899999999903, 'source_diff': 0.00011270899999999903}, {'time': 0.020044361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:48.619" endtime="20201112 10:14:48.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:48.636" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:48.623" endtime="20201112 10:14:48.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.640" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 10:14:48.639" endtime="20201112 10:14:48.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.643" level="INFO">VALUE: [0.00011270899999999903, 0.00011281900000000011, 0.00011249999999999802, 0.00011266600000000085, 0.0001120419999999997, 0.00011243099999999964, 0.00011268099999999989, 0.0001124299999999967, 0.00011236099999999832, 0.00011262499999999814, 0.00011238899999999746, 0.00011237500000000136, 0.0001120419999999997, 0.00011223600000000167, 0.00011230600000000299, 0.00011249999999999802, 0.00011195800000000228, 0.00011209700000000197, 0.00011219499999999896, 0.00011250000000000149, 0.00011237500000000136, 0.00011236099999999832, 0.00011244500000000268, 0.00011222199999999863, 0.00011197200000000185, 0.00011193099999999914, 0.00011218099999999939, 0.00011212499999999764, 0.00011217999999999992, 0.0001120419999999997, 0.00011234699999999875, 0.00011275000000000174, 0.00011261099999999857, 0.00011383299999999721, 0.00011231999999999909, 0.0001120419999999997, 0.00011380599999999755, 0.00011211099999999807, 0.00011224999999999777, 0.00011208299999999893, 0.00011243000000000017, 0.00011226400000000081, 0.0001120549999999998, 0.00011240299999999703, 0.00011258299999999943, 0.00011240299999999703, 0.00011188900000000043, 0.00011211100000000154, 0.00011190199999999706, 0.00011218099999999939]</msg>
<status status="PASS" starttime="20201112 10:14:48.641" endtime="20201112 10:14:48.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.637" endtime="20201112 10:14:48.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.646" endtime="20201112 10:14:48.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:48.650" endtime="20201112 10:14:48.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.648" endtime="20201112 10:14:48.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.645" endtime="20201112 10:14:48.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.275" endtime="20201112 10:14:48.670"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.274" endtime="20201112 10:14:48.670"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.679" endtime="20201112 10:14:48.700"></status>
</kw>
<msg timestamp="20201112 10:14:48.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.678" endtime="20201112 10:14:48.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:48.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:48.702" endtime="20201112 10:14:48.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.704" endtime="20201112 10:14:48.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.675" endtime="20201112 10:14:48.707"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.673" endtime="20201112 10:14:48.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:48.714" endtime="20201112 10:14:49.001"></status>
</kw>
<msg timestamp="20201112 10:14:49.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:48.713" endtime="20201112 10:14:49.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019934875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.005" endtime="20201112 10:14:49.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.013" endtime="20201112 10:14:49.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.710" endtime="20201112 10:14:49.015"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.708" endtime="20201112 10:14:49.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.019" level="INFO">${RESULT} = [{'time': 0.020047958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011308299999999993, 'source_diff': 0.00011308299999999993}, {'time': 0.020164889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:49.016" endtime="20201112 10:14:49.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.033" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:49.020" endtime="20201112 10:14:49.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.038" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.037" endtime="20201112 10:14:49.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.040" level="INFO">VALUE: [0.00011308299999999993, 0.0001130559999999968, 0.00011481999999999812, 0.00011316700000000082, 0.00011363799999999924, 0.0001135420000000012, 0.00011352800000000163, 0.00011480499999999907, 0.000113597, 0.00011331900000000061, 0.0001130559999999968, 0.00011286099999999882, 0.00011312500000000211, 0.00011330599999999705, 0.00011362499999999914, 0.00011483300000000168, 0.00011318100000000039, 0.000112903000000001, 0.00011304100000000122, 0.00011351400000000206, 0.00011483300000000168, 0.00011351399999999859, 0.0001128749999999984, 0.00011351399999999859, 0.00011343100000000064, 0.00011306999999999984, 0.00011354199999999773, 0.00011349999999999902, 0.00011479199999999898, 0.0001128749999999984, 0.00011368100000000089, 0.00011316600000000135, 0.00011330600000000052, 0.00011312499999999864, 0.00011343099999999717, 0.00011343100000000064, 0.00011326400000000181, 0.00011294499999999971, 0.00011313899999999821, 0.00011318100000000039, 0.00011356900000000086, 0.0001130550000000008, 0.00011344400000000074, 0.00011318000000000092, 0.00011298600000000242, 0.00011333400000000313, 0.00011343100000000064, 0.00011351399999999859, 0.00011312500000000211, 0.00011348599999999945]</msg>
<status status="PASS" starttime="20201112 10:14:49.039" endtime="20201112 10:14:49.041"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.034" endtime="20201112 10:14:49.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.044" endtime="20201112 10:14:49.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.047" endtime="20201112 10:14:49.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.046" endtime="20201112 10:14:49.067"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.042" endtime="20201112 10:14:49.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.671" endtime="20201112 10:14:49.068"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:48.671" endtime="20201112 10:14:49.068"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.077" endtime="20201112 10:14:49.099"></status>
</kw>
<msg timestamp="20201112 10:14:49.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.076" endtime="20201112 10:14:49.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.101" endtime="20201112 10:14:49.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.103" endtime="20201112 10:14:49.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.073" endtime="20201112 10:14:49.107"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.071" endtime="20201112 10:14:49.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.114" endtime="20201112 10:14:49.401"></status>
</kw>
<msg timestamp="20201112 10:14:49.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.113" endtime="20201112 10:14:49.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.405" endtime="20201112 10:14:49.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.413" endtime="20201112 10:14:49.414"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.110" endtime="20201112 10:14:49.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.108" endtime="20201112 10:14:49.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.420" level="INFO">${RESULT} = [{'time': 0.020287125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001144169999999986, 'source_diff': 0.0001144169999999986}, {'time': 0.020407139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 10:14:49.416" endtime="20201112 10:14:49.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.434" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:49.421" endtime="20201112 10:14:49.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.438" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.437" endtime="20201112 10:14:49.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.441" level="INFO">VALUE: [0.0001144169999999986, 0.00011582000000000259, 0.0001140970000000005, 0.0001143749999999999, 0.00011418100000000139, 0.00011445800000000131, 0.00011391700000000157, 0.00011430499999999857, 0.00011420799999999759, 0.00011416600000000235, 0.00011408299999999746, 0.0001146109999999971, 0.00011576400000000084, 0.0001140970000000005, 0.00011398599999999995, 0.00011416700000000182, 0.00011462499999999667, 0.00011450000000000002, 0.00011399999999999952, 0.00011413899999999921, 0.0001157910000000005, 0.00011406900000000136, 0.0001147360000000007, 0.00011475000000000027, 0.0001147499999999968, 0.00011465300000000275, 0.00011584699999999878, 0.0001145559999999983, 0.0001145689999999984, 0.00011467999999999895, 0.00011413899999999921, 0.00011580500000000007, 0.00011406900000000136, 0.00011447200000000088, 0.00011458300000000143, 0.00011575000000000127, 0.00011461100000000057, 0.00011462499999999667, 0.00011448600000000045, 0.00011431999999999762, 0.00011418099999999792, 0.00011419400000000149, 0.00011581899999999964, 0.00011426400000000281, 0.00011429200000000195, 0.0001145550000000023, 0.0001143749999999999, 0.00011426399999999934, 0.00011401400000000256, 0.00011390299999999853]</msg>
<status status="PASS" starttime="20201112 10:14:49.440" endtime="20201112 10:14:49.442"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.435" endtime="20201112 10:14:49.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.444" endtime="20201112 10:14:49.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.448" endtime="20201112 10:14:49.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.446" endtime="20201112 10:14:49.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.443" endtime="20201112 10:14:49.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.069" endtime="20201112 10:14:49.469"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.069" endtime="20201112 10:14:49.469"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.477" endtime="20201112 10:14:49.498"></status>
</kw>
<msg timestamp="20201112 10:14:49.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.476" endtime="20201112 10:14:49.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.500" endtime="20201112 10:14:49.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.503" endtime="20201112 10:14:49.506"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.473" endtime="20201112 10:14:49.507"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.471" endtime="20201112 10:14:49.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.514" endtime="20201112 10:14:49.800"></status>
</kw>
<msg timestamp="20201112 10:14:49.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019954694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.512" endtime="20201112 10:14:49.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019954694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.804" endtime="20201112 10:14:49.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.812" endtime="20201112 10:14:49.813"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.510" endtime="20201112 10:14:49.814"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.508" endtime="20201112 10:14:49.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:49.818" level="INFO">${RESULT} = [{'time': 0.020070347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011565300000000028, 'source_diff': 0.00011565300000000028}, {'time': 0.020188347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:49.815" endtime="20201112 10:14:49.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:49.832" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:49.819" endtime="20201112 10:14:49.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.836" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 10:14:49.835" endtime="20201112 10:14:49.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.839" level="INFO">VALUE: [0.00011565300000000028, 0.0001151109999999976, 0.00011544399999999927, 0.00011547199999999841, 0.00011555499999999982, 0.00011491599999999963, 0.0001148750000000004, 0.00011526399999999687, 0.000115388999999997, 0.00011525000000000077, 0.00011565300000000028, 0.00011520900000000153, 0.00011501400000000009, 0.00011536099999999785, 0.00011544499999999874, 0.00011565199999999734, 0.00011491599999999963, 0.00011515200000000031, 0.00011525000000000077, 0.00011519399999999902, 0.00011545799999999884, 0.00011516699999999935, 0.00011513900000000021, 0.00011573599999999823, 0.00011519499999999849, 0.00011679200000000098, 0.00011563800000000124, 0.00011493000000000267, 0.00011544399999999927, 0.00011517999999999945, 0.00011515299999999978, 0.00011529199999999948, 0.00011493000000000267, 0.00011544499999999874, 0.0001152360000000012, 0.00011502799999999966, 0.00011552800000000016, 0.00011494399999999877, 0.00011550000000000102, 0.00011516599999999988, 0.0001150559999999988, 0.0001149169999999991, 0.00011488899999999996, 0.00011544500000000221, 0.00011486100000000082, 0.00011493099999999867, 0.0001167499999999988, 0.00011507000000000184, 0.00011538799999999752, 0.00011500000000000052]</msg>
<status status="PASS" starttime="20201112 10:14:49.837" endtime="20201112 10:14:49.839"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.833" endtime="20201112 10:14:49.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.842" endtime="20201112 10:14:49.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:49.846" endtime="20201112 10:14:49.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.844" endtime="20201112 10:14:49.865"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.841" endtime="20201112 10:14:49.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.470" endtime="20201112 10:14:49.866"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.469" endtime="20201112 10:14:49.866"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.875" endtime="20201112 10:14:49.897"></status>
</kw>
<msg timestamp="20201112 10:14:49.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.873" endtime="20201112 10:14:49.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:49.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:49.899" endtime="20201112 10:14:49.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.901" endtime="20201112 10:14:49.904"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.871" endtime="20201112 10:14:49.904"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.869" endtime="20201112 10:14:49.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:49.911" endtime="20201112 10:14:50.197"></status>
</kw>
<msg timestamp="20201112 10:14:50.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020114181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:49.910" endtime="20201112 10:14:50.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020114181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.201" endtime="20201112 10:14:50.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.209" endtime="20201112 10:14:50.210"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.907" endtime="20201112 10:14:50.211"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.905" endtime="20201112 10:14:50.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.215" level="INFO">${RESULT} = [{'time': 0.020230569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011638800000000199, 'source_diff': 0.00011638800000000199}, {'time': 0.020349556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:50.212" endtime="20201112 10:14:50.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.228" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:50.216" endtime="20201112 10:14:50.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.233" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.232" endtime="20201112 10:14:50.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.235" level="INFO">VALUE: [0.00011638800000000199, 0.00011668100000000042, 0.00011655500000000082, 0.00011598599999999848, 0.00011627800000000091, 0.00011630600000000005, 0.00011586099999999835, 0.0001167499999999988, 0.00011666699999999738, 0.00011611100000000207, 0.00011776399999999937, 0.0001159170000000001, 0.0001163750000000019, 0.00011611100000000207, 0.00011617999999999698, 0.00011626400000000134, 0.00011599999999999805, 0.0001162360000000022, 0.00011619499999999949, 0.00011601400000000109, 0.00011777799999999894, 0.00011787499999999992, 0.00011779200000000198, 0.00011637499999999842, 0.00011618000000000045, 0.00011623599999999873, 0.00011601400000000109, 0.0001161109999999986, 0.00011630500000000057, 0.00011650000000000202, 0.00011645899999999931, 0.00011781999999999765, 0.00011629200000000048, 0.00011650000000000202, 0.00011591600000000063, 0.0001159300000000002, 0.00011650000000000202, 0.00011654099999999779, 0.00011776399999999937, 0.00011627800000000091, 0.00011600000000000152, 0.0001166109999999991, 0.00011612500000000164, 0.00011648600000000245, 0.00011612500000000164, 0.00011648700000000192, 0.00011612500000000164, 0.00011636099999999885, 0.00011650000000000202, 0.00011630500000000057]</msg>
<status status="PASS" starttime="20201112 10:14:50.234" endtime="20201112 10:14:50.236"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.229" endtime="20201112 10:14:50.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.239" endtime="20201112 10:14:50.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.242" endtime="20201112 10:14:50.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.241" endtime="20201112 10:14:50.262"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.237" endtime="20201112 10:14:50.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.867" endtime="20201112 10:14:50.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:49.867" endtime="20201112 10:14:50.263"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.272" endtime="20201112 10:14:50.294"></status>
</kw>
<msg timestamp="20201112 10:14:50.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.270" endtime="20201112 10:14:50.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.295" endtime="20201112 10:14:50.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.298" endtime="20201112 10:14:50.300"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.268" endtime="20201112 10:14:50.301"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.266" endtime="20201112 10:14:50.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.308" endtime="20201112 10:14:50.593"></status>
</kw>
<msg timestamp="20201112 10:14:50.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.306" endtime="20201112 10:14:50.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.597" endtime="20201112 10:14:50.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.605" endtime="20201112 10:14:50.606"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.304" endtime="20201112 10:14:50.607"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.302" endtime="20201112 10:14:50.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:50.611" level="INFO">${RESULT} = [{'time': 0.019935528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011745900000000031, 'source_diff': 0.00011745900000000031}, {'time': 0.020055542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:50.608" endtime="20201112 10:14:50.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:50.624" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:50.612" endtime="20201112 10:14:50.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.629" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 10:14:50.628" endtime="20201112 10:14:50.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.632" level="INFO">VALUE: [0.00011745900000000031, 0.00011712499999999917, 0.00011732000000000062, 0.00011737499999999942, 0.00011881899999999918, 0.00011772200000000066, 0.00011687499999999892, 0.00011691600000000163, 0.00011702800000000166, 0.00011765299999999881, 0.00011695899999999981, 0.0001172499999999993, 0.00011732000000000062, 0.0001177499999999998, 0.00011751399999999912, 0.0001168750000000024, 0.0001174300000000017, 0.00011691600000000163, 0.00011773600000000023, 0.00011717999999999798, 0.00011744500000000074, 0.00011726399999999887, 0.0001168889999999985, 0.00011768099999999795, 0.00011705599999999733, 0.00011697299999999938, 0.00011738799999999952, 0.0001167910000000015, 0.00011704099999999829, 0.00011726400000000234, 0.00011712500000000264, 0.00011713899999999874, 0.00011736100000000332, 0.0001174309999999977, 0.00011737499999999942, 0.00011712500000000264, 0.00011732000000000062, 0.00011697299999999938, 0.00011707000000000037, 0.00011776399999999937, 0.00011745900000000031, 0.00011754100000000225, 0.0001174439999999978, 0.00011770800000000109, 0.00011729200000000148, 0.00011716600000000188, 0.000117695000000001, 0.00011695800000000034, 0.00011706899999999743, 0.00011749999999999955]</msg>
<status status="PASS" starttime="20201112 10:14:50.630" endtime="20201112 10:14:50.632"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.625" endtime="20201112 10:14:50.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.635" endtime="20201112 10:14:50.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:50.639" endtime="20201112 10:14:50.658"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.637" endtime="20201112 10:14:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.634" endtime="20201112 10:14:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.264" endtime="20201112 10:14:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.264" endtime="20201112 10:14:50.660"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.668" endtime="20201112 10:14:50.689"></status>
</kw>
<msg timestamp="20201112 10:14:50.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.666" endtime="20201112 10:14:50.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:50.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:50.690" endtime="20201112 10:14:50.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.693" endtime="20201112 10:14:50.695"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.664" endtime="20201112 10:14:50.696"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.662" endtime="20201112 10:14:50.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:50.703" endtime="20201112 10:14:50.989"></status>
</kw>
<msg timestamp="20201112 10:14:50.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019891083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.701" endtime="20201112 10:14:50.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019891083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:50.993" endtime="20201112 10:14:51.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.001" endtime="20201112 10:14:51.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.699" endtime="20201112 10:14:51.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.697" endtime="20201112 10:14:51.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.008" level="INFO">${RESULT} = [{'time': 0.019891083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011870800000000209, 'source_diff': 0.00011870800000000209}, {'time': 0.020014097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:51.004" endtime="20201112 10:14:51.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.022" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:51.009" endtime="20201112 10:14:51.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.026" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.025" endtime="20201112 10:14:51.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.029" level="INFO">VALUE: [0.00011870800000000209, 0.00011981900000000018, 0.00011850000000000055, 0.0001180690000000019, 0.000118389, 0.00011844500000000174, 0.00011980599999999661, 0.00011863900000000024, 0.00011791699999999863, 0.00011855599999999883, 0.00011818000000000245, 0.00011863900000000024, 0.00011869400000000252, 0.0001181110000000006, 0.00011809699999999757, 0.00011981999999999965, 0.00011980600000000008, 0.00011801399999999962, 0.00011813899999999974, 0.0001186249999999972, 0.0001198050000000006, 0.00011850000000000055, 0.00011805499999999886, 0.00011872199999999819, 0.0001182500000000003, 0.00011831999999999815, 0.00011831899999999868, 0.00011848600000000098, 0.0001178889999999995, 0.00011862500000000067, 0.00011844499999999827, 0.00011856899999999893, 0.0001179300000000022, 0.00011869399999999905, 0.0001198050000000006, 0.00011795800000000134, 0.0001183049999999991, 0.00011866699999999938, 0.00011980600000000008, 0.00011849999999999708, 0.00011859700000000153, 0.00011838800000000052, 0.00011833299999999825, 0.00011817999999999898, 0.0001178889999999995, 0.00011981900000000018, 0.00011798600000000048, 0.00011873600000000123, 0.0001186110000000011, 0.00011800000000000005]</msg>
<status status="PASS" starttime="20201112 10:14:51.028" endtime="20201112 10:14:51.030"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.023" endtime="20201112 10:14:51.030"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.032" endtime="20201112 10:14:51.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.036" endtime="20201112 10:14:51.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.034" endtime="20201112 10:14:51.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.031" endtime="20201112 10:14:51.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.660" endtime="20201112 10:14:51.057"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:50.660" endtime="20201112 10:14:51.057"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.066" endtime="20201112 10:14:51.088"></status>
</kw>
<msg timestamp="20201112 10:14:51.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.065" endtime="20201112 10:14:51.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.090" endtime="20201112 10:14:51.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.092" endtime="20201112 10:14:51.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.062" endtime="20201112 10:14:51.095"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.060" endtime="20201112 10:14:51.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.102" endtime="20201112 10:14:51.388"></status>
</kw>
<msg timestamp="20201112 10:14:51.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021086236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021205278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.100" endtime="20201112 10:14:51.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021086236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021205278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:51.392" endtime="20201112 10:14:51.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.400" endtime="20201112 10:14:51.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.098" endtime="20201112 10:14:51.402"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.096" endtime="20201112 10:14:51.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.407" level="INFO">${RESULT} = [{'time': 0.021205278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011904199999999976, 'source_diff': 0.00011904199999999976}, {'time': 0.021330306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 10:14:51.404" endtime="20201112 10:14:51.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.420" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:51.408" endtime="20201112 10:14:51.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.424" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.423" endtime="20201112 10:14:51.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.427" level="INFO">VALUE: [0.00011904199999999976, 0.00011901400000000062, 0.00012076400000000237, 0.00011887499999999745, 0.00011954100000000079, 0.00011891600000000016, 0.00011898599999999801, 0.00012084700000000032, 0.00011965299999999734, 0.00011963899999999777, 0.00011919499999999902, 0.0001190699999999989, 0.00011886099999999789, 0.00011912500000000117, 0.0001193050000000001, 0.00011913900000000074, 0.00011881899999999918, 0.00011900000000000105, 0.00011920800000000259, 0.00011901400000000062, 0.0001194309999999997, 0.00011969499999999952, 0.00011973599999999876, 0.00011941700000000013, 0.000119389000000001, 0.00011952800000000069, 0.00011912500000000117, 0.00011897200000000191, 0.00011959699999999907, 0.0001193050000000001, 0.00012079199999999804, 0.0001195699999999994, 0.00011905599999999933, 0.00011902800000000019, 0.00011973599999999876, 0.00012072299999999966, 0.00011913800000000127, 0.00011950000000000155, 0.0001194439999999998, 0.00012084700000000032, 0.00011948600000000198, 0.00012082000000000065, 0.00011969499999999952, 0.00011963899999999777, 0.00011943100000000317, 0.00011955599999999983, 0.00011968099999999995, 0.00011916699999999988, 0.00011920799999999912, 0.00012080499999999814]</msg>
<status status="PASS" starttime="20201112 10:14:51.425" endtime="20201112 10:14:51.428"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.421" endtime="20201112 10:14:51.428"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.431" endtime="20201112 10:14:51.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.434" endtime="20201112 10:14:51.453"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.432" endtime="20201112 10:14:51.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.429" endtime="20201112 10:14:51.454"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.058" endtime="20201112 10:14:51.455"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.057" endtime="20201112 10:14:51.455"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.463" endtime="20201112 10:14:51.483"></status>
</kw>
<msg timestamp="20201112 10:14:51.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.462" endtime="20201112 10:14:51.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:51.485" endtime="20201112 10:14:51.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.487" endtime="20201112 10:14:51.490"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.459" endtime="20201112 10:14:51.491"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.457" endtime="20201112 10:14:51.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.497" endtime="20201112 10:14:51.782"></status>
</kw>
<msg timestamp="20201112 10:14:51.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02004575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:51.496" endtime="20201112 10:14:51.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02004575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 10:14:51.786" endtime="20201112 10:14:51.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.795" endtime="20201112 10:14:51.796"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.493" endtime="20201112 10:14:51.797"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.492" endtime="20201112 10:14:51.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:51.801" level="INFO">${RESULT} = [{'time': 0.02004575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012023600000000273, 'source_diff': 0.00012023600000000273}, {'time': 0.020170736, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 10:14:51.798" endtime="20201112 10:14:51.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 10:14:51.814" level="INFO">${ACCURACY} = {'event': ['FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'FALLING', 'F...</msg>
<status status="PASS" starttime="20201112 10:14:51.802" endtime="20201112 10:14:51.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.819" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 10:14:51.818" endtime="20201112 10:14:51.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.821" level="INFO">VALUE: [0.00012023600000000273, 0.00012041700000000113, 0.00012008399999999947, 0.0001207500000000028, 0.00012011099999999914, 0.0001217639999999999, 0.00012022299999999916, 0.00012013899999999827, 0.00012009699999999957, 0.00012009699999999957, 0.00012001400000000162, 0.00011995799999999987, 0.00012011099999999914, 0.00012177800000000294, 0.00011999999999999858, 0.00012055600000000083, 0.00012052699999999875, 0.00012005600000000033, 0.00012056899999999746, 0.00012001399999999815, 0.00012000000000000205, 0.00012180499999999914, 0.0001201249999999987, 0.000120389000000002, 0.00011999999999999858, 0.00012059700000000007, 0.00012036099999999939, 0.0001217639999999999, 0.00011999999999999858, 0.00012068000000000148, 0.00012056900000000093, 0.0001201249999999987, 0.0001198890000000015, 0.00012018099999999698, 0.00011988899999999802, 0.00012018100000000045, 0.00011987499999999846, 0.00012000000000000205, 0.0001201249999999987, 0.00012182000000000165, 0.00012045800000000037, 0.00012036099999999939, 0.0001202500000000023, 0.00011988899999999802, 0.00012002800000000119, 0.0001201249999999987, 0.00012009799999999904, 0.00012045800000000037, 0.00011988899999999802, 0.00012029200000000101]</msg>
<status status="PASS" starttime="20201112 10:14:51.820" endtime="20201112 10:14:51.822"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.815" endtime="20201112 10:14:51.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:51.825" endtime="20201112 10:14:51.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.828" endtime="20201112 10:14:51.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.827" endtime="20201112 10:14:51.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.823" endtime="20201112 10:14:51.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.456" endtime="20201112 10:14:51.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.455" endtime="20201112 10:14:51.849"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:12.276" endtime="20201112 10:14:51.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:51.854" endtime="20201112 10:14:51.873"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.852" endtime="20201112 10:14:51.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.851" endtime="20201112 10:14:51.874"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:12.200" endtime="20201112 10:14:51.875" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:13:30.858" endtime="20201112 10:14:51.879"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 10:14:51.936" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 10:14:51.944" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 10:14:52.977" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 10:14:51.934" endtime="20201112 10:14:52.977"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 10:14:52.980" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 10:14:52.978" endtime="20201112 10:14:52.980"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.933" endtime="20201112 10:14:52.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:52.983" endtime="20201112 10:14:53.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:52.982" endtime="20201112 10:14:53.227"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.239" endtime="20201112 10:14:53.264"></status>
</kw>
<msg timestamp="20201112 10:14:53.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.238" endtime="20201112 10:14:53.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.266" endtime="20201112 10:14:53.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.270" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:53.268" endtime="20201112 10:14:53.271"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:53.235" endtime="20201112 10:14:53.271"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:53.233" endtime="20201112 10:14:53.272"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.232" endtime="20201112 10:14:53.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:53.277" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:53.276" endtime="20201112 10:14:53.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.273" endtime="20201112 10:14:53.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.231" endtime="20201112 10:14:53.278"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.230" endtime="20201112 10:14:53.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.279" endtime="20201112 10:14:53.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.229" endtime="20201112 10:14:53.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.282" endtime="20201112 10:14:53.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.227" endtime="20201112 10:14:53.284"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:51.931" endtime="20201112 10:14:53.285"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:53.291" endtime="20201112 10:14:53.310"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.289" endtime="20201112 10:14:53.311"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.324" endtime="20201112 10:14:53.346"></status>
</kw>
<msg timestamp="20201112 10:14:53.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.322" endtime="20201112 10:14:53.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.349" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 10:14:53.348" endtime="20201112 10:14:53.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 10:14:53.352" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 10:14:53.351" endtime="20201112 10:14:53.353"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:53.320" endtime="20201112 10:14:53.353"></status>
</kw>
<status status="FAIL" starttime="20201112 10:14:53.317" endtime="20201112 10:14:53.354"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.316" endtime="20201112 10:14:53.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 10:14:53.358" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 10:14:53.357" endtime="20201112 10:14:53.358"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.355" endtime="20201112 10:14:53.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.315" endtime="20201112 10:14:53.359"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.314" endtime="20201112 10:14:53.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.360" endtime="20201112 10:14:53.361"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.313" endtime="20201112 10:14:53.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.311" endtime="20201112 10:14:53.362"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.288" endtime="20201112 10:14:53.362"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:14:53.366" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:53.375" endtime="20201112 10:14:55.453"></status>
</kw>
<msg timestamp="20201112 10:14:55.455" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 321665, 'wakeups': [331751, 341692, 351673, 361673, 371673, 381673, 39...</msg>
<status status="PASS" starttime="20201112 10:14:53.374" endtime="20201112 10:14:55.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.460" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 321665, 'wakeups': [331751, 341692, 351673, 361673, 371673, 381673, 39...</msg>
<status status="PASS" starttime="20201112 10:14:55.457" endtime="20201112 10:14:55.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.463" endtime="20201112 10:14:55.467"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.371" endtime="20201112 10:14:55.468"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.368" endtime="20201112 10:14:55.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.474" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 321665, 'wakeups': [331751, 341692, 351673, 361673, 371673, 381673, 391673, 401673, 411673, 421673, 431673, 441673, 451673, 461673, 471673, 481673, 491673, 5016...</msg>
<status status="PASS" starttime="20201112 10:14:55.470" endtime="20201112 10:14:55.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.483" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:14:55.481" endtime="20201112 10:14:55.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.487" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:14:55.485" endtime="20201112 10:14:55.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.476" endtime="20201112 10:14:55.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.497" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:14:55.495" endtime="20201112 10:14:55.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.501" level="INFO">VALUE: 321665</msg>
<status status="PASS" starttime="20201112 10:14:55.499" endtime="20201112 10:14:55.502"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.490" endtime="20201112 10:14:55.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.511" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:14:55.509" endtime="20201112 10:14:55.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.516" level="INFO">VALUE: [331751, 341692, 351673, 361673, 371673, 381673, 391673, 401673, 411673, 421673, 431673, 441673, 451673, 461673, 471673, 481673, 491673, 501673, 511673, 521673, 531673, 541673, 551673, 561673, 571673, 581673, 591673, 601673, 611673, 621673, 631673, 641673, 651673, 661673, 671673, 681673, 691673, 701673, 711673, 721673, 731673, 741673, 751673, 761673, 771673, 781673, 791673, 801673, 811673, 821673, 831673, 841673, 851673, 861673, 871673, 881673, 891673, 901673, 911673, 921673, 931673, 941673, 951673, 961673, 971673, 981673, 991673, 1001673, 1011673, 1021673, 1031673, 1041673, 1051673, 1061673, 1071673, 1081673, 1091673, 1101673, 1111673, 1121673, 1131673, 1141673, 1151673, 1161673, 1171673, 1181673, 1191673, 1201673, 1211673, 1221673, 1231673, 1241673, 1251673, 1261673, 1271673, 1281673, 1291673, 1301673, 1311673, 1321673]</msg>
<status status="PASS" starttime="20201112 10:14:55.514" endtime="20201112 10:14:55.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.504" endtime="20201112 10:14:55.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.531" endtime="20201112 10:14:55.827"></status>
</kw>
<msg timestamp="20201112 10:14:55.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073966528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084062569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.528" endtime="20201112 10:14:55.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073966528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084062569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:55.831" endtime="20201112 10:14:55.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.838" endtime="20201112 10:14:55.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.523" endtime="20201112 10:14:55.840"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.519" endtime="20201112 10:14:55.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:55.865" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:55.842" endtime="20201112 10:14:55.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.870" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:14:55.869" endtime="20201112 10:14:55.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.872" level="INFO">VALUE: 0.073966528</msg>
<status status="PASS" starttime="20201112 10:14:55.871" endtime="20201112 10:14:55.872"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.866" endtime="20201112 10:14:55.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.877" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:14:55.876" endtime="20201112 10:14:55.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:55.880" level="INFO">VALUE: [0.084062569, 0.0939915, 0.103973417, 0.113974361, 0.12397525, 0.133976194, 0.143977111, 0.153978042, 0.163978944, 0.173979903, 0.183980792, 0.193981764, 0.203982653, 0.213983583, 0.223984486, 0.233985444, 0.243986347, 0.253987292, 0.263988264, 0.273989125, 0.283990069, 0.293990986, 0.303991889, 0.313992819, 0.323993736, 0.333994681, 0.343995583, 0.353996528, 0.363997444, 0.373998389, 0.383999278, 0.394000236, 0.404001167, 0.414002083, 0.424002986, 0.434003917, 0.444004847, 0.454005792, 0.464006681, 0.474007667, 0.484008528, 0.494009472, 0.504010403, 0.514011375, 0.524012236, 0.534013167, 0.544014097, 0.554015042, 0.564015944, 0.574016875, 0.584017806, 0.594018722, 0.604019639, 0.614020583, 0.624021542, 0.634022458, 0.644023333, 0.654024278, 0.664025208, 0.674026125, 0.684027056, 0.694028014, 0.704028889, 0.714029833, 0.72403075, 0.734031681, 0.744032597, 0.754033528, 0.764034444, 0.774035389, 0.784036292, 0.794037236, 0.804038167, 0.814039083, 0.82404, 0.834040931, 0.844041847, 0.854042806, 0.864043694, 0.874044639, 0.884045625, 0.8940465, 0.904047403, 0.914048361, 0.92404925, 0.934050194, 0.944051139, 0.954052042, 0.964052958, 0.974053889, 0.984054806, 0.99405575, 1.004056667, 1.014057611, 1.024058514, 1.034059458, 1.044060431, 1.054061306, 1.064062208, 1.074063153] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:14:55.878" endtime="20201112 10:14:55.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.873" endtime="20201112 10:14:55.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.883" endtime="20201112 10:14:55.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:55.886" endtime="20201112 10:14:55.905"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.884" endtime="20201112 10:14:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.881" endtime="20201112 10:14:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.367" endtime="20201112 10:14:55.907"></status>
</kw>
<msg timestamp="20201112 10:14:55.907" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:55.915" endtime="20201112 10:14:57.997"></status>
</kw>
<msg timestamp="20201112 10:14:57.999" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2860995, 'wakeups': [2871003, 2881003, 2891003, 2901003, 2911003, 2921...</msg>
<status status="PASS" starttime="20201112 10:14:55.913" endtime="20201112 10:14:57.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.004" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2860995, 'wakeups': [2871003, 2881003, 2891003, 2901003, 2911003, 2921...</msg>
<status status="PASS" starttime="20201112 10:14:58.001" endtime="20201112 10:14:58.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.007" endtime="20201112 10:14:58.010"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.911" endtime="20201112 10:14:58.011"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.909" endtime="20201112 10:14:58.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.017" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 2860995, 'wakeups': [2871003, 2881003, 2891003, 2901003, 2911003, 2921003, 2931003, 2941003, 2951003, 2961003, 2971003, 2981003, 2991003, 3001003, 3011003, 3021...</msg>
<status status="PASS" starttime="20201112 10:14:58.014" endtime="20201112 10:14:58.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.028" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:14:58.024" endtime="20201112 10:14:58.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.032" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:14:58.030" endtime="20201112 10:14:58.033"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.019" endtime="20201112 10:14:58.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.043" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:14:58.041" endtime="20201112 10:14:58.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.047" level="INFO">VALUE: 2860995</msg>
<status status="PASS" starttime="20201112 10:14:58.046" endtime="20201112 10:14:58.048"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.035" endtime="20201112 10:14:58.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.057" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:14:58.055" endtime="20201112 10:14:58.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.062" level="INFO">VALUE: [2871003, 2881003, 2891003, 2901003, 2911003, 2921003, 2931003, 2941003, 2951003, 2961003, 2971003, 2981003, 2991003, 3001003, 3011003, 3021003, 3031003, 3041003, 3051003, 3061003, 3071003, 3081003, 3091003, 3101003, 3111003, 3121003, 3131003, 3141003, 3151003, 3161003, 3171003, 3181003, 3191003, 3201003, 3211003, 3221003, 3231003, 3241003, 3251003, 3261003, 3271003, 3281003, 3291003, 3301003, 3311003, 3321003, 3331003, 3341003, 3351003, 3361003, 3371003, 3381003, 3391003, 3401003, 3411003, 3421003, 3431003, 3441003, 3451003, 3461003, 3471003, 3481003, 3491003, 3501003, 3511003, 3521003, 3531003, 3541003, 3551003, 3561003, 3571003, 3581003, 3591003, 3601003, 3611003, 3621003, 3631003, 3641003, 3651003, 3661003, 3671003, 3681003, 3691003, 3701003, 3711003, 3721003, 3731003, 3741003, 3751003, 3761003, 3771003, 3781003, 3791003, 3801003, 3811003, 3821003, 3831003, 3841003, 3851003, 3861003]</msg>
<status status="PASS" starttime="20201112 10:14:58.060" endtime="20201112 10:14:58.063"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.050" endtime="20201112 10:14:58.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.077" endtime="20201112 10:14:58.371"></status>
</kw>
<msg timestamp="20201112 10:14:58.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018116375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028125458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.074" endtime="20201112 10:14:58.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018116375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028125458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:14:58.374" endtime="20201112 10:14:58.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.382" endtime="20201112 10:14:58.383"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.068" endtime="20201112 10:14:58.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.065" endtime="20201112 10:14:58.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:14:58.408" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:14:58.385" endtime="20201112 10:14:58.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.413" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:14:58.412" endtime="20201112 10:14:58.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.415" level="INFO">VALUE: 0.018116375</msg>
<status status="PASS" starttime="20201112 10:14:58.414" endtime="20201112 10:14:58.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.409" endtime="20201112 10:14:58.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.420" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:14:58.419" endtime="20201112 10:14:58.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:14:58.422" level="INFO">VALUE: [0.028125458, 0.038126375, 0.048127278, 0.058128236, 0.068129139, 0.078130111, 0.088130972, 0.098131958, 0.108132819, 0.118133778, 0.128134681, 0.138135611, 0.148136514, 0.158137458, 0.168138361, 0.178139306, 0.188140222, 0.198141167, 0.208142056, 0.218143, 0.228143972, 0.238144847, 0.248145778, 0.258146694, 0.268147611, 0.278148542, 0.288149458, 0.298150403, 0.308151333, 0.318152264, 0.328153153, 0.338154125, 0.348155056, 0.358155944, 0.368156847, 0.378157792, 0.388158694, 0.398159639, 0.408160542, 0.418161486, 0.428162417, 0.438163361, 0.44816425, 0.458165194, 0.468166111, 0.478167042, 0.488167944, 0.498168903, 0.508169792, 0.518170806, 0.528171694, 0.538172597, 0.5481735, 0.558174458, 0.568175347, 0.578176278, 0.588177194, 0.598178139, 0.608179069, 0.61818, 0.628180889, 0.638181847, 0.648182764, 0.658183681, 0.668184597, 0.678185597, 0.688186458, 0.698187389, 0.708188292, 0.718189236, 0.728190153, 0.738191125, 0.748192014, 0.758192931, 0.768193861, 0.778194792, 0.788195708, 0.798196639, 0.808197542, 0.818198486, 0.828199403, 0.838200333, 0.84820125, 0.858202181, 0.868203097, 0.878204056, 0.888204944, 0.898205889, 0.908206875, 0.918207736, 0.928208667, 0.938209583, 0.9482105, 0.958211472, 0.968212361, 0.978213292, 0.988214194, 0.998215153, 1.008216056, 1.018217] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:14:58.421" endtime="20201112 10:14:58.423"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.416" endtime="20201112 10:14:58.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.426" endtime="20201112 10:14:58.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:14:58.429" endtime="20201112 10:14:58.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.428" endtime="20201112 10:14:58.449"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.424" endtime="20201112 10:14:58.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:55.908" endtime="20201112 10:14:58.450"></status>
</kw>
<msg timestamp="20201112 10:14:58.450" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:14:58.458" endtime="20201112 10:15:00.541"></status>
</kw>
<msg timestamp="20201112 10:15:00.542" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5404308, 'wakeups': [5414316, 5424316, 5434316, 5444316, 5454316, 5464...</msg>
<status status="PASS" starttime="20201112 10:14:58.457" endtime="20201112 10:15:00.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.548" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5404308, 'wakeups': [5414316, 5424316, 5434316, 5444316, 5454316, 5464...</msg>
<status status="PASS" starttime="20201112 10:15:00.545" endtime="20201112 10:15:00.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.550" endtime="20201112 10:15:00.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.454" endtime="20201112 10:15:00.555"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.452" endtime="20201112 10:15:00.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.561" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 5404308, 'wakeups': [5414316, 5424316, 5434316, 5444316, 5454316, 5464316, 5474316, 5484316, 5494316, 5504316, 5514316, 5524316, 5534316, 5544316, 5554316, 5564...</msg>
<status status="PASS" starttime="20201112 10:15:00.557" endtime="20201112 10:15:00.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.569" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:00.567" endtime="20201112 10:15:00.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.574" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:00.572" endtime="20201112 10:15:00.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.563" endtime="20201112 10:15:00.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.584" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:00.582" endtime="20201112 10:15:00.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.588" level="INFO">VALUE: 5404308</msg>
<status status="PASS" starttime="20201112 10:15:00.586" endtime="20201112 10:15:00.588"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.576" endtime="20201112 10:15:00.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.598" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:00.596" endtime="20201112 10:15:00.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.602" level="INFO">VALUE: [5414316, 5424316, 5434316, 5444316, 5454316, 5464316, 5474316, 5484316, 5494316, 5504316, 5514316, 5524316, 5534316, 5544316, 5554316, 5564316, 5574316, 5584316, 5594316, 5604316, 5614316, 5624316, 5634316, 5644316, 5654316, 5664316, 5674316, 5684316, 5694316, 5704316, 5714316, 5724316, 5734316, 5744316, 5754316, 5764316, 5774316, 5784316, 5794316, 5804316, 5814316, 5824316, 5834316, 5844316, 5854316, 5864316, 5874316, 5884316, 5894316, 5904316, 5914316, 5924316, 5934316, 5944316, 5954316, 5964316, 5974316, 5984316, 5994316, 6004316, 6014316, 6024316, 6034316, 6044316, 6054316, 6064316, 6074316, 6084316, 6094316, 6104316, 6114316, 6124316, 6134316, 6144316, 6154316, 6164316, 6174316, 6184316, 6194316, 6204316, 6214316, 6224316, 6234316, 6244316, 6254316, 6264316, 6274316, 6284316, 6294316, 6304316, 6314316, 6324316, 6334316, 6344316, 6354316, 6364316, 6374316, 6384316, 6394316, 6404316]</msg>
<status status="PASS" starttime="20201112 10:15:00.600" endtime="20201112 10:15:00.603"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.591" endtime="20201112 10:15:00.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.620" endtime="20201112 10:15:00.919"></status>
</kw>
<msg timestamp="20201112 10:15:00.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018078, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02808675, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:15:00.617" endtime="20201112 10:15:00.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018078, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02808675, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 10:15:00.923" endtime="20201112 10:15:00.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.930" endtime="20201112 10:15:00.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.610" endtime="20201112 10:15:00.932"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.606" endtime="20201112 10:15:00.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:00.957" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:00.933" endtime="20201112 10:15:00.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.961" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 10:15:00.960" endtime="20201112 10:15:00.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.963" level="INFO">VALUE: 0.018078</msg>
<status status="PASS" starttime="20201112 10:15:00.962" endtime="20201112 10:15:00.963"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.958" endtime="20201112 10:15:00.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.968" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:00.967" endtime="20201112 10:15:00.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:00.971" level="INFO">VALUE: [0.02808675, 0.038087667, 0.048088569, 0.058089528, 0.068090431, 0.078091375, 0.088092264, 0.098093222, 0.108094125, 0.118095056, 0.128095958, 0.138096903, 0.148097819, 0.15809875, 0.168099681, 0.178100597, 0.188101556, 0.198102458, 0.208103361, 0.218104292, 0.228105222, 0.238106139, 0.248107069, 0.258108, 0.268108903, 0.278109847, 0.28811075, 0.298111778, 0.308112611, 0.318113542, 0.328114472, 0.338115403, 0.348116333, 0.35811725, 0.368118167, 0.378119111, 0.388120028, 0.398120944, 0.408121917, 0.418122806, 0.428123708, 0.438124667, 0.448125569, 0.4581265, 0.468127431, 0.478128375, 0.488129264, 0.498130208, 0.508131111, 0.518132125, 0.528132958, 0.538133903, 0.548134833, 0.558135764, 0.568136667, 0.578137597, 0.588138528, 0.598139472, 0.608140389, 0.618141306, 0.628142222, 0.638143181, 0.648144069, 0.658145028, 0.668145931, 0.678146861, 0.688147792, 0.698148778, 0.708149625, 0.718150639, 0.728151486, 0.738152417, 0.748153347, 0.758154292, 0.768155181, 0.778156125, 0.788157028, 0.798157986, 0.808158875, 0.818159806, 0.828160736, 0.838161653, 0.848162583, 0.858163528, 0.868164431, 0.878165431, 0.888166264, 0.898167194, 0.908168111, 0.918169042, 0.928169958, 0.938170903, 0.948171806, 0.95817275, 0.968173653, 0.978174611, 0.9881755, 0.998176444, 1.008177347, 1.018178306] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:00.970" endtime="20201112 10:15:00.971"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.965" endtime="20201112 10:15:00.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:00.974" endtime="20201112 10:15:00.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:00.977" endtime="20201112 10:15:00.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.975" endtime="20201112 10:15:00.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.972" endtime="20201112 10:15:00.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:58.451" endtime="20201112 10:15:00.997"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.365" endtime="20201112 10:15:00.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.364" endtime="20201112 10:15:00.998"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:01.001" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:01.010" endtime="20201112 10:15:03.092"></status>
</kw>
<msg timestamp="20201112 10:15:03.093" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7956010, 'wakeups': [7966039, 7976019, 7986018, 7996018, 8006018, 8016...</msg>
<status status="PASS" starttime="20201112 10:15:01.008" endtime="20201112 10:15:03.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.100" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7956010, 'wakeups': [7966039, 7976019, 7986018, 7996018, 8006018, 8016...</msg>
<status status="PASS" starttime="20201112 10:15:03.096" endtime="20201112 10:15:03.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.102" endtime="20201112 10:15:03.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.005" endtime="20201112 10:15:03.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.003" endtime="20201112 10:15:03.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.113" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 7956010, 'wakeups': [7966039, 7976019, 7986018, 7996018, 8006018, 8016018, 8026018, 8036018, 8046018, 8056018, 8066018, 8076018, 8086018, 8096018, 8106018, 8116...</msg>
<status status="PASS" starttime="20201112 10:15:03.109" endtime="20201112 10:15:03.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.121" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:03.119" endtime="20201112 10:15:03.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.125" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:03.123" endtime="20201112 10:15:03.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.114" endtime="20201112 10:15:03.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.135" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:03.133" endtime="20201112 10:15:03.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.139" level="INFO">VALUE: 7956010</msg>
<status status="PASS" starttime="20201112 10:15:03.137" endtime="20201112 10:15:03.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.128" endtime="20201112 10:15:03.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.149" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:03.147" endtime="20201112 10:15:03.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.154" level="INFO">VALUE: [7966039, 7976019, 7986018, 7996018, 8006018, 8016018, 8026018, 8036018, 8046018, 8056018, 8066018, 8076018, 8086018, 8096018, 8106018, 8116018, 8126018, 8136018, 8146018, 8156018, 8166018, 8176018, 8186018, 8196018, 8206018, 8216018, 8226018, 8236018, 8246018, 8256018, 8266018, 8276018, 8286018, 8296018, 8306018, 8316018, 8326018, 8336018, 8346018, 8356018, 8366018, 8376018, 8386018, 8396018, 8406018, 8416018, 8426018, 8436018, 8446018, 8456018, 8466018, 8476018, 8486018, 8496018, 8506018, 8516018, 8526018, 8536018, 8546018, 8556018, 8566018, 8576018, 8586018, 8596018, 8606018, 8616018, 8626018, 8636018, 8646018, 8656018, 8666018, 8676018, 8686018, 8696018, 8706018, 8716018, 8726018, 8736018, 8746018, 8756018, 8766018, 8776018, 8786018, 8796018, 8806018, 8816018, 8826018, 8836018, 8846018, 8856018, 8866018, 8876018, 8886018, 8896018, 8906018, 8916018, 8926018, 8936018, 8946018, 8956018]</msg>
<status status="PASS" starttime="20201112 10:15:03.152" endtime="20201112 10:15:03.155"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.142" endtime="20201112 10:15:03.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.169" endtime="20201112 10:15:03.467"></status>
</kw>
<msg timestamp="20201112 10:15:03.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032399639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.166" endtime="20201112 10:15:03.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032399639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:03.471" endtime="20201112 10:15:03.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.478" endtime="20201112 10:15:03.480"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.160" endtime="20201112 10:15:03.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.157" endtime="20201112 10:15:03.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:03.512" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:03.489" endtime="20201112 10:15:03.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.516" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:03.515" endtime="20201112 10:15:03.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.519" level="INFO">VALUE: 0.022369097</msg>
<status status="PASS" starttime="20201112 10:15:03.518" endtime="20201112 10:15:03.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.513" endtime="20201112 10:15:03.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.524" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:03.523" endtime="20201112 10:15:03.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:03.526" level="INFO">VALUE: [0.032399639, 0.042380194, 0.052380167, 0.062381069, 0.072381972, 0.082382903, 0.092383819, 0.10238475, 0.112385736, 0.122386597, 0.132387514, 0.142388444, 0.152389361, 0.162390292, 0.172391208, 0.182392139, 0.192393069, 0.202393986, 0.212394917, 0.222395833, 0.232396764, 0.242397681, 0.252398597, 0.262399597, 0.272400444, 0.282401375, 0.292402306, 0.302403236, 0.312404139, 0.322405069, 0.332406, 0.342406931, 0.352407847, 0.362408778, 0.372409694, 0.382410611, 0.392411542, 0.402412458, 0.412413389, 0.422414319, 0.43241525, 0.442416167, 0.452417097, 0.462418014, 0.472418944, 0.482419875, 0.492420806, 0.502421708, 0.512422653, 0.522423569, 0.532424486, 0.542425444, 0.552426333, 0.562427264, 0.572428236, 0.582429111, 0.592430056, 0.602430958, 0.612431889, 0.622432847, 0.63243375, 0.642434681, 0.652435597, 0.662436528, 0.672437458, 0.682438375, 0.692439292, 0.702440264, 0.712441139, 0.722442083, 0.732442986, 0.742443917, 0.752444847, 0.762445764, 0.772446694, 0.782447611, 0.792448556, 0.802449458, 0.812450389, 0.822451333, 0.83245225, 0.842453222, 0.852454083, 0.862455069, 0.872455958, 0.882456861, 0.892457792, 0.902458736, 0.912459653, 0.922460569, 0.932461486, 0.942462444, 0.952463361, 0.962464264, 0.972465208, 0.982466125, 0.992467056, 1.002467986, 1.012468903, 1.022469833] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:03.525" endtime="20201112 10:15:03.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.520" endtime="20201112 10:15:03.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.529" endtime="20201112 10:15:03.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:03.533" endtime="20201112 10:15:03.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.531" endtime="20201112 10:15:03.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.528" endtime="20201112 10:15:03.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:01.001" endtime="20201112 10:15:03.553"></status>
</kw>
<msg timestamp="20201112 10:15:03.554" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:03.561" endtime="20201112 10:15:05.654"></status>
</kw>
<msg timestamp="20201112 10:15:05.655" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10507496, 'wakeups': [10517517, 10527504, 10537504, 10547504, 10557504...</msg>
<status status="PASS" starttime="20201112 10:15:03.560" endtime="20201112 10:15:05.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.661" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10507496, 'wakeups': [10517517, 10527504, 10537504, 10547504, 10557504...</msg>
<status status="PASS" starttime="20201112 10:15:05.657" endtime="20201112 10:15:05.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.663" endtime="20201112 10:15:05.666"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.557" endtime="20201112 10:15:05.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.555" endtime="20201112 10:15:05.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:05.674" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 10507496, 'wakeups': [10517517, 10527504, 10537504, 10547504, 10557504, 10567504, 10577504, 10587504, 10597504, 10607504, 10617504, 10627504, 10637504, 10647504...</msg>
<status status="PASS" starttime="20201112 10:15:05.670" endtime="20201112 10:15:05.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.683" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:05.681" endtime="20201112 10:15:05.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.687" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:05.685" endtime="20201112 10:15:05.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.676" endtime="20201112 10:15:05.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.699" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:05.695" endtime="20201112 10:15:05.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.704" level="INFO">VALUE: 10507496</msg>
<status status="PASS" starttime="20201112 10:15:05.702" endtime="20201112 10:15:05.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.690" endtime="20201112 10:15:05.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.714" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:05.712" endtime="20201112 10:15:05.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:05.718" level="INFO">VALUE: [10517517, 10527504, 10537504, 10547504, 10557504, 10567504, 10577504, 10587504, 10597504, 10607504, 10617504, 10627504, 10637504, 10647504, 10657504, 10667504, 10677504, 10687504, 10697504, 10707504, 10717504, 10727504, 10737504, 10747504, 10757504, 10767504, 10777504, 10787504, 10797504, 10807504, 10817504, 10827504, 10837504, 10847504, 10857504, 10867504, 10877504, 10887504, 10897504, 10907504, 10917504, 10927504, 10937504, 10947504, 10957504, 10967504, 10977504, 10987504, 10997504, 11007504, 11017504, 11027504, 11037504, 11047504, 11057504, 11067504, 11077504, 11087504, 11097504, 11107504, 11117504, 11127504, 11137504, 11147504, 11157504, 11167504, 11177504, 11187504, 11197504, 11207504, 11217504, 11227504, 11237504, 11247504, 11257504, 11267504, 11277504, 11287504, 11297504, 11307504, 11317504, 11327504, 11337504, 11347504, 11357504, 11367504, 11377504, 11387504, 11397504, 11407504, 11417504, 11427504, 11437504, 11447504, 11457504, 11467504, 11477504, 11487504, 11497504, 11507504]</msg>
<status status="PASS" starttime="20201112 10:15:05.716" endtime="20201112 10:15:05.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.707" endtime="20201112 10:15:05.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:05.733" endtime="20201112 10:15:06.032"></status>
</kw>
<msg timestamp="20201112 10:15:06.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018082847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028104222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:05.730" endtime="20201112 10:15:06.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018082847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028104222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:06.035" endtime="20201112 10:15:06.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.043" endtime="20201112 10:15:06.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.725" endtime="20201112 10:15:06.045"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:05.722" endtime="20201112 10:15:06.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:06.070" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:06.046" endtime="20201112 10:15:06.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.074" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:06.073" endtime="20201112 10:15:06.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.076" level="INFO">VALUE: 0.018082847</msg>
<status status="PASS" starttime="20201112 10:15:06.075" endtime="20201112 10:15:06.076"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.070" endtime="20201112 10:15:06.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.081" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:06.080" endtime="20201112 10:15:06.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:06.085" level="INFO">VALUE: [0.028104222, 0.038092486, 0.048093417, 0.058094333, 0.068095264, 0.078096181, 0.088097111, 0.098098028, 0.108098986, 0.118099875, 0.128100806, 0.138101736, 0.148102653, 0.158103569, 0.168104514, 0.178105417, 0.188106375, 0.198107264, 0.208108194, 0.218109111, 0.228110042, 0.238110972, 0.248111903, 0.258112833, 0.268113736, 0.278114667, 0.288115583, 0.298116514, 0.308117486, 0.318118361, 0.328119319, 0.338120222, 0.348121153, 0.358122069, 0.368123, 0.378123917, 0.388124847, 0.398125778, 0.408126736, 0.418127611, 0.428128583, 0.438129458, 0.448130389, 0.458131306, 0.468132236, 0.478133153, 0.488134097, 0.498135042, 0.508135972, 0.518136861, 0.528137792, 0.538138722, 0.548139639, 0.558140583, 0.568141486, 0.578142417, 0.588143333, 0.598144264, 0.608145194, 0.618146125, 0.628147042, 0.638147958, 0.648148889, 0.658149806, 0.66815075, 0.678151681, 0.688152597, 0.698153514, 0.708154444, 0.718155375, 0.728156306, 0.738157208, 0.748158139, 0.758159083, 0.768159986, 0.778160917, 0.788161833, 0.798162764, 0.808163694, 0.818164625, 0.828165542, 0.838166458, 0.848167389, 0.858168347, 0.868169236, 0.878170167, 0.888171111, 0.898172014, 0.908172944, 0.918173861, 0.928174792, 0.938175722, 0.948176653, 0.958177569, 0.9681785, 0.978179431, 0.988180389, 0.998181264, 1.008182208, 1.018183153] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:06.083" endtime="20201112 10:15:06.085"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.077" endtime="20201112 10:15:06.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.088" endtime="20201112 10:15:06.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:06.091" endtime="20201112 10:15:06.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.090" endtime="20201112 10:15:06.111"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.086" endtime="20201112 10:15:06.112"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:03.554" endtime="20201112 10:15:06.112"></status>
</kw>
<msg timestamp="20201112 10:15:06.112" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:06.120" endtime="20201112 10:15:08.213"></status>
</kw>
<msg timestamp="20201112 10:15:08.215" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13066136, 'wakeups': [13076157, 13086144, 13096144, 13106144, 13116144...</msg>
<status status="PASS" starttime="20201112 10:15:06.118" endtime="20201112 10:15:08.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.220" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13066136, 'wakeups': [13076157, 13086144, 13096144, 13106144, 13116144...</msg>
<status status="PASS" starttime="20201112 10:15:08.217" endtime="20201112 10:15:08.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.223" endtime="20201112 10:15:08.226"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.116" endtime="20201112 10:15:08.227"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.114" endtime="20201112 10:15:08.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.234" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 13066136, 'wakeups': [13076157, 13086144, 13096144, 13106144, 13116144, 13126144, 13136144, 13146144, 13156144, 13166144, 13176144, 13186144, 13196144, 13206144...</msg>
<status status="PASS" starttime="20201112 10:15:08.230" endtime="20201112 10:15:08.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.242" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:08.240" endtime="20201112 10:15:08.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.246" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:08.244" endtime="20201112 10:15:08.247"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.235" endtime="20201112 10:15:08.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.256" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:08.254" endtime="20201112 10:15:08.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.260" level="INFO">VALUE: 13066136</msg>
<status status="PASS" starttime="20201112 10:15:08.258" endtime="20201112 10:15:08.261"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.249" endtime="20201112 10:15:08.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.271" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:08.268" endtime="20201112 10:15:08.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.276" level="INFO">VALUE: [13076157, 13086144, 13096144, 13106144, 13116144, 13126144, 13136144, 13146144, 13156144, 13166144, 13176144, 13186144, 13196144, 13206144, 13216144, 13226144, 13236144, 13246144, 13256144, 13266144, 13276144, 13286144, 13296144, 13306144, 13316144, 13326144, 13336144, 13346144, 13356144, 13366144, 13376144, 13386144, 13396144, 13406144, 13416144, 13426144, 13436144, 13446144, 13456144, 13466144, 13476144, 13486144, 13496144, 13506144, 13516144, 13526144, 13536144, 13546144, 13556144, 13566144, 13576144, 13586144, 13596144, 13606144, 13616144, 13626144, 13636144, 13646144, 13656144, 13666144, 13676144, 13686144, 13696144, 13706144, 13716144, 13726144, 13736144, 13746144, 13756144, 13766144, 13776144, 13786144, 13796144, 13806144, 13816144, 13826144, 13836144, 13846144, 13856144, 13866144, 13876144, 13886144, 13896144, 13906144, 13916144, 13926144, 13936144, 13946144, 13956144, 13966144, 13976144, 13986144, 13996144, 14006144, 14016144, 14026144, 14036144, 14046144, 14056144, 14066144]</msg>
<status status="PASS" starttime="20201112 10:15:08.273" endtime="20201112 10:15:08.277"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.263" endtime="20201112 10:15:08.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.291" endtime="20201112 10:15:08.592"></status>
</kw>
<msg timestamp="20201112 10:15:08.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028133736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.288" endtime="20201112 10:15:08.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028133736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:08.595" endtime="20201112 10:15:08.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.603" endtime="20201112 10:15:08.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.283" endtime="20201112 10:15:08.605"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.279" endtime="20201112 10:15:08.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:08.629" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:08.606" endtime="20201112 10:15:08.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.633" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 10:15:08.632" endtime="20201112 10:15:08.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.635" level="INFO">VALUE: 0.018111681</msg>
<status status="PASS" starttime="20201112 10:15:08.634" endtime="20201112 10:15:08.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.630" endtime="20201112 10:15:08.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.641" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:08.640" endtime="20201112 10:15:08.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:08.643" level="INFO">VALUE: [0.028133736, 0.038122014, 0.048122958, 0.058123861, 0.068124806, 0.078125708, 0.088126639, 0.098127556, 0.108128486, 0.118129403, 0.128130333, 0.138131264, 0.148132194, 0.158133111, 0.168134028, 0.178134944, 0.188135875, 0.198136792, 0.208137736, 0.218138653, 0.228139569, 0.238140542, 0.248141431, 0.258142375, 0.268143264, 0.278144194, 0.288145111, 0.298146042, 0.308146958, 0.318147889, 0.328148819, 0.33814975, 0.348150708, 0.358151583, 0.368152528, 0.378153444, 0.388154361, 0.398155292, 0.408156208, 0.418157153, 0.428158056, 0.438159, 0.448159917, 0.458160833, 0.468161764, 0.478162694, 0.488163625, 0.498164542, 0.508165458, 0.518166403, 0.528167319, 0.53816825, 0.548169167, 0.558170083, 0.568171028, 0.578171958, 0.588172861, 0.598173792, 0.608174722, 0.618175639, 0.628176583, 0.638177486, 0.648178417, 0.658179375, 0.668180319, 0.678181208, 0.688182111, 0.698183042, 0.708183972, 0.718184903, 0.728185819, 0.73818675, 0.748187681, 0.758188597, 0.768189514, 0.778190444, 0.788191389, 0.798192292, 0.808193236, 0.818194153, 0.828195083, 0.838196042, 0.848196931, 0.858197847, 0.868198792, 0.878199708, 0.888200625, 0.898201569, 0.908202472, 0.918203403, 0.928204333, 0.938205264, 0.948206181, 0.958207111, 0.968208028, 0.978208958, 0.988209889, 0.998210819, 1.008211736, 1.018212667] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:08.642" endtime="20201112 10:15:08.643"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.637" endtime="20201112 10:15:08.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.646" endtime="20201112 10:15:08.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:08.649" endtime="20201112 10:15:08.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.648" endtime="20201112 10:15:08.669"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.644" endtime="20201112 10:15:08.673"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:06.113" endtime="20201112 10:15:08.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.999" endtime="20201112 10:15:08.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:00.998" endtime="20201112 10:15:08.674"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:08.677" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:08.686" endtime="20201112 10:15:10.779"></status>
</kw>
<msg timestamp="20201112 10:15:10.780" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15631771, 'wakeups': [15641801, 15651788, 15661788, 15671788, 15681788...</msg>
<status status="PASS" starttime="20201112 10:15:08.684" endtime="20201112 10:15:10.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.786" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15631771, 'wakeups': [15641801, 15651788, 15661788, 15671788, 15681788...</msg>
<status status="PASS" starttime="20201112 10:15:10.782" endtime="20201112 10:15:10.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.788" endtime="20201112 10:15:10.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.681" endtime="20201112 10:15:10.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.679" endtime="20201112 10:15:10.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:10.799" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 15631771, 'wakeups': [15641801, 15651788, 15661788, 15671788, 15681788, 15691788, 15701788, 15711788, 15721788, 15731788, 15741788, 15751788, 15761788, 15771788...</msg>
<status status="PASS" starttime="20201112 10:15:10.795" endtime="20201112 10:15:10.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.807" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:10.805" endtime="20201112 10:15:10.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.811" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:10.809" endtime="20201112 10:15:10.812"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.800" endtime="20201112 10:15:10.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.821" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:10.819" endtime="20201112 10:15:10.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.826" level="INFO">VALUE: 15631771</msg>
<status status="PASS" starttime="20201112 10:15:10.824" endtime="20201112 10:15:10.826"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.814" endtime="20201112 10:15:10.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.836" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:10.834" endtime="20201112 10:15:10.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:10.840" level="INFO">VALUE: [15641801, 15651788, 15661788, 15671788, 15681788, 15691788, 15701788, 15711788, 15721788, 15731788, 15741788, 15751788, 15761788, 15771788, 15781788, 15791788, 15801788, 15811788, 15821788, 15831788, 15841788, 15851788, 15861788, 15871788, 15881788, 15891788, 15901788, 15911788, 15921788, 15931788, 15941788, 15951788, 15961788, 15971788, 15981788, 15991788, 16001788, 16011788, 16021788, 16031788, 16041788, 16051788, 16061788, 16071788, 16081788, 16091788, 16101788, 16111788, 16121788, 16131788, 16141788, 16151788, 16161788, 16171788, 16181788, 16191788, 16201788, 16211788, 16221788, 16231788, 16241788, 16251788, 16261788, 16271788, 16281788, 16291788, 16301788, 16311788, 16321788, 16331788, 16341788, 16351788, 16361788, 16371788, 16381788, 16391788, 16401788, 16411788, 16421788, 16431788, 16441788, 16451788, 16461788, 16471788, 16481788, 16491788, 16501788, 16511788, 16521788, 16531788, 16541788, 16551788, 16561788, 16571788, 16581788, 16591788, 16601788, 16611788, 16621788, 16631788]</msg>
<status status="PASS" starttime="20201112 10:15:10.838" endtime="20201112 10:15:10.841"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.829" endtime="20201112 10:15:10.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:10.856" endtime="20201112 10:15:11.153"></status>
</kw>
<msg timestamp="20201112 10:15:11.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025655764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035686556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:10.852" endtime="20201112 10:15:11.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025655764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035686556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:11.157" endtime="20201112 10:15:11.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.164" endtime="20201112 10:15:11.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.847" endtime="20201112 10:15:11.166"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:10.843" endtime="20201112 10:15:11.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:11.192" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:11.168" endtime="20201112 10:15:11.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.196" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:11.195" endtime="20201112 10:15:11.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.198" level="INFO">VALUE: 0.025655764</msg>
<status status="PASS" starttime="20201112 10:15:11.197" endtime="20201112 10:15:11.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.192" endtime="20201112 10:15:11.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.203" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:11.202" endtime="20201112 10:15:11.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:11.205" level="INFO">VALUE: [0.035686556, 0.045674486, 0.055675403, 0.065676333, 0.075677264, 0.085678194, 0.095679097, 0.105680056, 0.115680944, 0.125681875, 0.135682847, 0.145683778, 0.155684653, 0.165685597, 0.175686556, 0.185687417, 0.195688347, 0.205689264, 0.215690194, 0.225691125, 0.235692042, 0.245692972, 0.255693889, 0.265694833, 0.275695736, 0.285696681, 0.295697597, 0.305698514, 0.315699458, 0.325700361, 0.335701292, 0.345702264, 0.355703139, 0.365704069, 0.375705014, 0.385705917, 0.395706847, 0.405707778, 0.415708708, 0.425709639, 0.435710625, 0.445711486, 0.455712403, 0.465713333, 0.47571425, 0.485715181, 0.495716097, 0.505717042, 0.515717944, 0.525718903, 0.535719792, 0.545720722, 0.555721639, 0.565722569, 0.575723486, 0.585724431, 0.595725333, 0.605726292, 0.615727181, 0.625728111, 0.635729028, 0.645729958, 0.655730889, 0.665731819, 0.675732736, 0.685733653, 0.695734583, 0.7057355, 0.715736444, 0.725737347, 0.735738278, 0.745739194, 0.755740167, 0.765741056, 0.775741972, 0.785742903, 0.795743819, 0.805744764, 0.815745667, 0.825746625, 0.835747514, 0.845748444, 0.855749389, 0.865750292, 0.875751222, 0.885752167, 0.895753069, 0.905754014, 0.915754917, 0.925755847, 0.935756764, 0.945757694, 0.955758681, 0.965759542, 0.975760486, 0.985761444, 0.995762319, 1.005763264, 1.015764181, 1.025765097] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:11.204" endtime="20201112 10:15:11.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.199" endtime="20201112 10:15:11.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.208" endtime="20201112 10:15:11.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:11.212" endtime="20201112 10:15:11.231"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.210" endtime="20201112 10:15:11.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.207" endtime="20201112 10:15:11.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.678" endtime="20201112 10:15:11.232"></status>
</kw>
<msg timestamp="20201112 10:15:11.233" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:11.241" endtime="20201112 10:15:13.333"></status>
</kw>
<msg timestamp="20201112 10:15:13.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18186720, 'wakeups': [18196750, 18206737, 18216737, 18226737, 18236737...</msg>
<status status="PASS" starttime="20201112 10:15:11.239" endtime="20201112 10:15:13.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.341" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18186720, 'wakeups': [18196750, 18206737, 18216737, 18226737, 18236737...</msg>
<status status="PASS" starttime="20201112 10:15:13.336" endtime="20201112 10:15:13.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.343" endtime="20201112 10:15:13.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.237" endtime="20201112 10:15:13.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.235" endtime="20201112 10:15:13.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.354" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 18186720, 'wakeups': [18196750, 18206737, 18216737, 18226737, 18236737, 18246737, 18256737, 18266737, 18276737, 18286737, 18296737, 18306737, 18316737, 18326737...</msg>
<status status="PASS" starttime="20201112 10:15:13.350" endtime="20201112 10:15:13.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.363" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:13.361" endtime="20201112 10:15:13.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.367" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:13.365" endtime="20201112 10:15:13.368"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.356" endtime="20201112 10:15:13.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.379" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:13.377" endtime="20201112 10:15:13.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.383" level="INFO">VALUE: 18186720</msg>
<status status="PASS" starttime="20201112 10:15:13.381" endtime="20201112 10:15:13.384"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.370" endtime="20201112 10:15:13.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.393" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:13.391" endtime="20201112 10:15:13.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.398" level="INFO">VALUE: [18196750, 18206737, 18216737, 18226737, 18236737, 18246737, 18256737, 18266737, 18276737, 18286737, 18296737, 18306737, 18316737, 18326737, 18336737, 18346737, 18356737, 18366737, 18376737, 18386737, 18396737, 18406737, 18416737, 18426737, 18436737, 18446737, 18456737, 18466737, 18476737, 18486737, 18496737, 18506737, 18516737, 18526737, 18536737, 18546737, 18556737, 18566737, 18576737, 18586737, 18596737, 18606737, 18616737, 18626737, 18636737, 18646737, 18656737, 18666737, 18676737, 18686737, 18696737, 18706737, 18716737, 18726737, 18736737, 18746737, 18756737, 18766737, 18776737, 18786737, 18796737, 18806737, 18816737, 18826737, 18836737, 18846737, 18856737, 18866737, 18876737, 18886737, 18896737, 18906737, 18916737, 18926737, 18936737, 18946737, 18956737, 18966737, 18976737, 18986737, 18996737, 19006737, 19016737, 19026737, 19036737, 19046737, 19056737, 19066737, 19076737, 19086737, 19096737, 19106737, 19116737, 19126737, 19136737, 19146737, 19156737, 19166737, 19176737, 19186737]</msg>
<status status="PASS" starttime="20201112 10:15:13.395" endtime="20201112 10:15:13.399"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.386" endtime="20201112 10:15:13.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.413" endtime="20201112 10:15:13.709"></status>
</kw>
<msg timestamp="20201112 10:15:13.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018148125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028178625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.410" endtime="20201112 10:15:13.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018148125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028178625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:13.712" endtime="20201112 10:15:13.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.720" endtime="20201112 10:15:13.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.404" endtime="20201112 10:15:13.722"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.401" endtime="20201112 10:15:13.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:13.746" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:13.723" endtime="20201112 10:15:13.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.755" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:13.754" endtime="20201112 10:15:13.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.757" level="INFO">VALUE: 0.018148125</msg>
<status status="PASS" starttime="20201112 10:15:13.756" endtime="20201112 10:15:13.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.751" endtime="20201112 10:15:13.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.763" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:13.761" endtime="20201112 10:15:13.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:13.765" level="INFO">VALUE: [0.028178625, 0.038166569, 0.048167486, 0.058168403, 0.068169347, 0.07817025, 0.088171236, 0.098172097, 0.108173042, 0.118173958, 0.128174861, 0.138175792, 0.148176722, 0.158177639, 0.168178556, 0.1781795, 0.188180403, 0.198181333, 0.20818225, 0.218183181, 0.228184111, 0.238185042, 0.248185958, 0.258186889, 0.268187833, 0.278188722, 0.288189653, 0.298190569, 0.3081915, 0.318192431, 0.328193361, 0.338194278, 0.348195194, 0.358196125, 0.368197056, 0.378197972, 0.388198889, 0.398199819, 0.408200736, 0.418201667, 0.428202583, 0.438203528, 0.448204458, 0.458205361, 0.468206292, 0.478207236, 0.488208167, 0.498209125, 0.50821, 0.518210917, 0.528211889, 0.538212778, 0.548213681, 0.558214611, 0.568215542, 0.578216458, 0.588217389, 0.598218306, 0.608219236, 0.618220167, 0.628221083, 0.638222014, 0.648222931, 0.658223875, 0.668224806, 0.678225708, 0.688226653, 0.698227556, 0.7082285, 0.718229417, 0.728230333, 0.738231264, 0.748232194, 0.758233125, 0.768234042, 0.778234958, 0.788235889, 0.798236819, 0.808237764, 0.818238667, 0.828239625, 0.838240556, 0.848241431, 0.858242375, 0.868243292, 0.878244278, 0.888245139, 0.898246111, 0.908247, 0.918247917, 0.928248847, 0.938249778, 0.948250681, 0.958251611, 0.968252542, 0.978253458, 0.988254389, 0.998255319, 1.008256236, 1.018257181] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:13.764" endtime="20201112 10:15:13.766"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.758" endtime="20201112 10:15:13.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.768" endtime="20201112 10:15:13.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:13.772" endtime="20201112 10:15:13.791"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.770" endtime="20201112 10:15:13.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.767" endtime="20201112 10:15:13.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:11.233" endtime="20201112 10:15:13.793"></status>
</kw>
<msg timestamp="20201112 10:15:13.793" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:13.801" endtime="20201112 10:15:15.894"></status>
</kw>
<msg timestamp="20201112 10:15:15.895" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20746922, 'wakeups': [20756952, 20766939, 20776939, 20786939, 20796939...</msg>
<status status="PASS" starttime="20201112 10:15:13.799" endtime="20201112 10:15:15.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.901" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20746922, 'wakeups': [20756952, 20766939, 20776939, 20786939, 20796939...</msg>
<status status="PASS" starttime="20201112 10:15:15.897" endtime="20201112 10:15:15.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.903" endtime="20201112 10:15:15.906"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.797" endtime="20201112 10:15:15.907"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.795" endtime="20201112 10:15:15.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:15.914" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 20746922, 'wakeups': [20756952, 20766939, 20776939, 20786939, 20796939, 20806939, 20816939, 20826939, 20836939, 20846939, 20856939, 20866939, 20876939, 20886939...</msg>
<status status="PASS" starttime="20201112 10:15:15.910" endtime="20201112 10:15:15.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.922" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:15.920" endtime="20201112 10:15:15.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.926" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:15.924" endtime="20201112 10:15:15.927"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.915" endtime="20201112 10:15:15.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.937" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:15.935" endtime="20201112 10:15:15.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.941" level="INFO">VALUE: 20746922</msg>
<status status="PASS" starttime="20201112 10:15:15.939" endtime="20201112 10:15:15.942"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.930" endtime="20201112 10:15:15.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.951" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:15.949" endtime="20201112 10:15:15.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:15.956" level="INFO">VALUE: [20756952, 20766939, 20776939, 20786939, 20796939, 20806939, 20816939, 20826939, 20836939, 20846939, 20856939, 20866939, 20876939, 20886939, 20896939, 20906939, 20916939, 20926939, 20936939, 20946939, 20956939, 20966939, 20976939, 20986939, 20996939, 21006939, 21016939, 21026939, 21036939, 21046939, 21056939, 21066939, 21076939, 21086939, 21096939, 21106939, 21116939, 21126939, 21136939, 21146939, 21156939, 21166939, 21176939, 21186939, 21196939, 21206939, 21216939, 21226939, 21236939, 21246939, 21256939, 21266939, 21276939, 21286939, 21296939, 21306939, 21316939, 21326939, 21336939, 21346939, 21356939, 21366939, 21376939, 21386939, 21396939, 21406939, 21416939, 21426939, 21436939, 21446939, 21456939, 21466939, 21476939, 21486939, 21496939, 21506939, 21516939, 21526939, 21536939, 21546939, 21556939, 21566939, 21576939, 21586939, 21596939, 21606939, 21616939, 21626939, 21636939, 21646939, 21656939, 21666939, 21676939, 21686939, 21696939, 21706939, 21716939, 21726939, 21736939, 21746939]</msg>
<status status="PASS" starttime="20201112 10:15:15.953" endtime="20201112 10:15:15.956"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.944" endtime="20201112 10:15:15.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:15.973" endtime="20201112 10:15:16.267"></status>
</kw>
<msg timestamp="20201112 10:15:16.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018365542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028396458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:15.968" endtime="20201112 10:15:16.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018365542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028396458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:16.271" endtime="20201112 10:15:16.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.279" endtime="20201112 10:15:16.280"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.962" endtime="20201112 10:15:16.281"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:15.959" endtime="20201112 10:15:16.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:16.305" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:16.282" endtime="20201112 10:15:16.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.309" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 10:15:16.308" endtime="20201112 10:15:16.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.311" level="INFO">VALUE: 0.018365542</msg>
<status status="PASS" starttime="20201112 10:15:16.311" endtime="20201112 10:15:16.312"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.306" endtime="20201112 10:15:16.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.317" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:16.316" endtime="20201112 10:15:16.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:16.319" level="INFO">VALUE: [0.028396458, 0.038384444, 0.048385361, 0.058386306, 0.068387222, 0.078388153, 0.088389056, 0.098389986, 0.108390917, 0.118391833, 0.128392764, 0.138393667, 0.148394597, 0.158395514, 0.168396444, 0.178397375, 0.188398292, 0.198399222, 0.208400139, 0.218401069, 0.228402014, 0.238402917, 0.248403847, 0.258404764, 0.268405694, 0.278406611, 0.288407528, 0.298408458, 0.308409389, 0.318410319, 0.328411292, 0.338412153, 0.348413083, 0.358414, 0.368414931, 0.378415847, 0.388416792, 0.398417708, 0.408418625, 0.418419611, 0.428420472, 0.438421431, 0.448422319, 0.45842325, 0.468424181, 0.478425097, 0.488426042, 0.498427014, 0.508427889, 0.518428819, 0.528429722, 0.538430667, 0.548431569, 0.5584325, 0.568433486, 0.578434347, 0.588435278, 0.598436236, 0.608437139, 0.618438056, 0.628438986, 0.638439903, 0.648440847, 0.658441764, 0.668442708, 0.678443611, 0.688444597, 0.698445486, 0.708446389, 0.718447306, 0.728448236, 0.738449181, 0.748450083, 0.758451, 0.768451944, 0.778452875, 0.788453792, 0.79845475, 0.808455625, 0.818456625, 0.8284575, 0.838458403, 0.848459333, 0.858460264, 0.868461181, 0.878462111, 0.888463069, 0.898463958, 0.908464903, 0.918465806, 0.928466736, 0.938467722, 0.948468653, 0.958469514, 0.968470431, 0.978471361, 0.988472306, 0.998473222, 1.008474167, 1.018475056] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:16.318" endtime="20201112 10:15:16.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.313" endtime="20201112 10:15:16.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.323" endtime="20201112 10:15:16.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:16.326" endtime="20201112 10:15:16.345"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.324" endtime="20201112 10:15:16.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.321" endtime="20201112 10:15:16.346"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:13.793" endtime="20201112 10:15:16.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.675" endtime="20201112 10:15:16.347"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:08.675" endtime="20201112 10:15:16.347"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:16.350" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:16.358" endtime="20201112 10:15:18.452"></status>
</kw>
<msg timestamp="20201112 10:15:18.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23304568, 'wakeups': [23314609, 23324594, 23334604, 23344603, 23354603...</msg>
<status status="PASS" starttime="20201112 10:15:16.356" endtime="20201112 10:15:18.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.459" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23304568, 'wakeups': [23314609, 23324594, 23334604, 23344603, 23354603...</msg>
<status status="PASS" starttime="20201112 10:15:18.455" endtime="20201112 10:15:18.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.461" endtime="20201112 10:15:18.464"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.353" endtime="20201112 10:15:18.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.352" endtime="20201112 10:15:18.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.472" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 23304568, 'wakeups': [23314609, 23324594, 23334604, 23344603, 23354603, 23364603, 23374603, 23384603, 23394603, 23404603, 23414603, 23424603, 23434603, 23444603...</msg>
<status status="PASS" starttime="20201112 10:15:18.468" endtime="20201112 10:15:18.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.480" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:18.478" endtime="20201112 10:15:18.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.485" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:18.483" endtime="20201112 10:15:18.485"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.473" endtime="20201112 10:15:18.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.494" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:18.492" endtime="20201112 10:15:18.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.499" level="INFO">VALUE: 23304568</msg>
<status status="PASS" starttime="20201112 10:15:18.497" endtime="20201112 10:15:18.499"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.487" endtime="20201112 10:15:18.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.509" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:18.507" endtime="20201112 10:15:18.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.513" level="INFO">VALUE: [23314609, 23324594, 23334604, 23344603, 23354603, 23364603, 23374603, 23384603, 23394603, 23404603, 23414603, 23424603, 23434603, 23444603, 23454603, 23464603, 23474603, 23484603, 23494603, 23504603, 23514603, 23524603, 23534603, 23544603, 23554603, 23564603, 23574603, 23584603, 23594603, 23604603, 23614603, 23624603, 23634603, 23644603, 23654603, 23664603, 23674603, 23684603, 23694603, 23704603, 23714603, 23724603, 23734603, 23744603, 23754603, 23764603, 23774603, 23784603, 23794603, 23804603, 23814603, 23824603, 23834603, 23844603, 23854603, 23864603, 23874603, 23884603, 23894603, 23904603, 23914603, 23924603, 23934603, 23944603, 23954603, 23964603, 23974603, 23984603, 23994603, 24004603, 24014603, 24024603, 24034603, 24044603, 24054603, 24064603, 24074603, 24084603, 24094603, 24104603, 24114603, 24124603, 24134603, 24144603, 24154603, 24164603, 24174603, 24184603, 24194603, 24204603, 24214603, 24224603, 24234603, 24244603, 24254603, 24264603, 24274603, 24284603, 24294603, 24304603]</msg>
<status status="PASS" starttime="20201112 10:15:18.511" endtime="20201112 10:15:18.515"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.502" endtime="20201112 10:15:18.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.530" endtime="20201112 10:15:18.823"></status>
</kw>
<msg timestamp="20201112 10:15:18.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031869042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.526" endtime="20201112 10:15:18.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031869042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:18.827" endtime="20201112 10:15:18.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.835" endtime="20201112 10:15:18.836"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.521" endtime="20201112 10:15:18.837"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.517" endtime="20201112 10:15:18.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:18.861" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:18.838" endtime="20201112 10:15:18.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.866" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:18.865" endtime="20201112 10:15:18.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.868" level="INFO">VALUE: 0.021826986</msg>
<status status="PASS" starttime="20201112 10:15:18.867" endtime="20201112 10:15:18.868"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.862" endtime="20201112 10:15:18.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.873" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:18.872" endtime="20201112 10:15:18.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:18.875" level="INFO">VALUE: [0.031869042, 0.041854708, 0.051865833, 0.06186575, 0.071866681, 0.081867625, 0.091868528, 0.101869472, 0.111870403, 0.121871306, 0.131872222, 0.141873153, 0.151874097, 0.161875, 0.171875931, 0.181876847, 0.191877792, 0.201878694, 0.211879625, 0.221880597, 0.231881514, 0.241882403, 0.251883347, 0.261884264, 0.271885167, 0.281886097, 0.291887014, 0.301887944, 0.311888861, 0.321889819, 0.331890722, 0.341891639, 0.351892625, 0.361893486, 0.371894458, 0.381895403, 0.391896278, 0.401897222, 0.411898125, 0.421899042, 0.431899958, 0.441900889, 0.451901819, 0.461902736, 0.471903681, 0.481904611, 0.491905528, 0.501906444, 0.511907361, 0.521908306, 0.531909222, 0.541910139, 0.551911069, 0.561912014, 0.571912917, 0.581913875, 0.591914792, 0.601915694, 0.611916625, 0.621917556, 0.631918486, 0.641919403, 0.651920403, 0.661921264, 0.671922181, 0.681923097, 0.691924028, 0.701924958, 0.711925889, 0.721926806, 0.731927736, 0.741928722, 0.751929597, 0.761930514, 0.771931444, 0.781932361, 0.791933278, 0.801934222, 0.811935167, 0.821936056, 0.831937, 0.841937917, 0.851938875, 0.861939764, 0.871940681, 0.881941611, 0.891942583, 0.901943458, 0.911944389, 0.921945319, 0.93194625, 0.941947208, 0.951948125, 0.961949028, 0.971949958, 0.981950875, 0.991951792, 1.001952722, 1.011953653, 1.021954569] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:18.874" endtime="20201112 10:15:18.876"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.869" endtime="20201112 10:15:18.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.878" endtime="20201112 10:15:18.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:18.882" endtime="20201112 10:15:18.901"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.880" endtime="20201112 10:15:18.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.877" endtime="20201112 10:15:18.902"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.350" endtime="20201112 10:15:18.903"></status>
</kw>
<msg timestamp="20201112 10:15:18.903" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:18.911" endtime="20201112 10:15:21.005"></status>
</kw>
<msg timestamp="20201112 10:15:21.006" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25857302, 'wakeups': [25867341, 25877328, 25887338, 25897337, 25907337...</msg>
<status status="PASS" starttime="20201112 10:15:18.909" endtime="20201112 10:15:21.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.012" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25857302, 'wakeups': [25867341, 25877328, 25887338, 25897337, 25907337...</msg>
<status status="PASS" starttime="20201112 10:15:21.008" endtime="20201112 10:15:21.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.014" endtime="20201112 10:15:21.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.907" endtime="20201112 10:15:21.018"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.905" endtime="20201112 10:15:21.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.025" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 25857302, 'wakeups': [25867341, 25877328, 25887338, 25897337, 25907337, 25917337, 25927337, 25937337, 25947337, 25957337, 25967337, 25977337, 25987337, 25997337...</msg>
<status status="PASS" starttime="20201112 10:15:21.021" endtime="20201112 10:15:21.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.033" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:21.031" endtime="20201112 10:15:21.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.037" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:21.036" endtime="20201112 10:15:21.038"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.026" endtime="20201112 10:15:21.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.047" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:21.045" endtime="20201112 10:15:21.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.054" level="INFO">VALUE: 25857302</msg>
<status status="PASS" starttime="20201112 10:15:21.052" endtime="20201112 10:15:21.055"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.040" endtime="20201112 10:15:21.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.064" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:21.062" endtime="20201112 10:15:21.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.068" level="INFO">VALUE: [25867341, 25877328, 25887338, 25897337, 25907337, 25917337, 25927337, 25937337, 25947337, 25957337, 25967337, 25977337, 25987337, 25997337, 26007337, 26017337, 26027337, 26037337, 26047337, 26057337, 26067337, 26077337, 26087337, 26097337, 26107337, 26117337, 26127337, 26137337, 26147337, 26157337, 26167337, 26177337, 26187337, 26197337, 26207337, 26217337, 26227337, 26237337, 26247337, 26257337, 26267337, 26277337, 26287337, 26297337, 26307337, 26317337, 26327337, 26337337, 26347337, 26357337, 26367337, 26377337, 26387337, 26397337, 26407337, 26417337, 26427337, 26437337, 26447337, 26457337, 26467337, 26477337, 26487337, 26497337, 26507337, 26517337, 26527337, 26537337, 26547337, 26557337, 26567337, 26577337, 26587337, 26597337, 26607337, 26617337, 26627337, 26637337, 26647337, 26657337, 26667337, 26677337, 26687337, 26697337, 26707337, 26717337, 26727337, 26737337, 26747337, 26757337, 26767337, 26777337, 26787337, 26797337, 26807337, 26817337, 26827337, 26837337, 26847337, 26857337]</msg>
<status status="PASS" starttime="20201112 10:15:21.066" endtime="20201112 10:15:21.069"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.057" endtime="20201112 10:15:21.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.084" endtime="20201112 10:15:21.380"></status>
</kw>
<msg timestamp="20201112 10:15:21.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018634917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028675764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.080" endtime="20201112 10:15:21.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018634917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028675764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:21.384" endtime="20201112 10:15:21.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.392" endtime="20201112 10:15:21.393"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.075" endtime="20201112 10:15:21.394"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.071" endtime="20201112 10:15:21.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:21.419" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:21.395" endtime="20201112 10:15:21.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.423" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:21.422" endtime="20201112 10:15:21.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.425" level="INFO">VALUE: 0.018634917</msg>
<status status="PASS" starttime="20201112 10:15:21.424" endtime="20201112 10:15:21.425"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.420" endtime="20201112 10:15:21.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.430" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:21.429" endtime="20201112 10:15:21.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:21.433" level="INFO">VALUE: [0.028675764, 0.038663403, 0.048674542, 0.058674444, 0.068675389, 0.078676319, 0.088677236, 0.098678153, 0.108679097, 0.118680014, 0.128680944, 0.138681875, 0.148682778, 0.158683708, 0.168684625, 0.178685625, 0.188686486, 0.198687389, 0.208688319, 0.218689236, 0.228690181, 0.238691111, 0.248692028, 0.258692944, 0.268693861, 0.278694819, 0.288695708, 0.298696639, 0.308697569, 0.318698486, 0.328699403, 0.338700333, 0.348701264, 0.358702181, 0.368703111, 0.378704042, 0.388705014, 0.398705875, 0.408706806, 0.418707736, 0.428708667, 0.438709583, 0.4487105, 0.458711431, 0.468712361, 0.478713278, 0.488714208, 0.498715139, 0.508716069, 0.518716986, 0.528717903, 0.538718847, 0.54871975, 0.558720681, 0.568721611, 0.578722542, 0.588723472, 0.598724375, 0.608725319, 0.618726236, 0.628727153, 0.638728097, 0.648729014, 0.658729931, 0.668730861, 0.678731792, 0.688732708, 0.698733653, 0.708734556, 0.7187355, 0.728736417, 0.738737333, 0.748738278, 0.758739194, 0.768740139, 0.778741042, 0.788741972, 0.798742889, 0.808743819, 0.818744764, 0.828745694, 0.838746597, 0.848747528, 0.858748444, 0.868749375, 0.878750292, 0.888751222, 0.898752139, 0.908753069, 0.918753986, 0.928754903, 0.938755847, 0.948756792, 0.958757694, 0.968758597, 0.978759528, 0.988760472, 0.998761375, 1.008762292, 1.018763222] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:21.432" endtime="20201112 10:15:21.434"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.426" endtime="20201112 10:15:21.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.437" endtime="20201112 10:15:21.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:21.440" endtime="20201112 10:15:21.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.439" endtime="20201112 10:15:21.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.435" endtime="20201112 10:15:21.460"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:18.903" endtime="20201112 10:15:21.461"></status>
</kw>
<msg timestamp="20201112 10:15:21.461" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:21.469" endtime="20201112 10:15:23.561"></status>
</kw>
<msg timestamp="20201112 10:15:23.563" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28414881, 'wakeups': [28424920, 28434907, 28444917, 28454916, 28464916...</msg>
<status status="PASS" starttime="20201112 10:15:21.467" endtime="20201112 10:15:23.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.568" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28414881, 'wakeups': [28424920, 28434907, 28444917, 28454916, 28464916...</msg>
<status status="PASS" starttime="20201112 10:15:23.565" endtime="20201112 10:15:23.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.571" endtime="20201112 10:15:23.574"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.465" endtime="20201112 10:15:23.575"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.463" endtime="20201112 10:15:23.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.581" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 28414881, 'wakeups': [28424920, 28434907, 28444917, 28454916, 28464916, 28474916, 28484916, 28494916, 28504916, 28514916, 28524916, 28534916, 28544916, 28554916...</msg>
<status status="PASS" starttime="20201112 10:15:23.577" endtime="20201112 10:15:23.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.591" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:23.589" endtime="20201112 10:15:23.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.595" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:23.593" endtime="20201112 10:15:23.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.583" endtime="20201112 10:15:23.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.605" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:23.603" endtime="20201112 10:15:23.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.609" level="INFO">VALUE: 28414881</msg>
<status status="PASS" starttime="20201112 10:15:23.607" endtime="20201112 10:15:23.610"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.598" endtime="20201112 10:15:23.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.619" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:23.617" endtime="20201112 10:15:23.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.622" level="INFO">VALUE: [28424920, 28434907, 28444917, 28454916, 28464916, 28474916, 28484916, 28494916, 28504916, 28514916, 28524916, 28534916, 28544916, 28554916, 28564916, 28574916, 28584916, 28594916, 28604916, 28614916, 28624916, 28634916, 28644916, 28654916, 28664916, 28674916, 28684916, 28694916, 28704916, 28714916, 28724916, 28734916, 28744916, 28754916, 28764916, 28774916, 28784916, 28794916, 28804916, 28814916, 28824916, 28834916, 28844916, 28854916, 28864916, 28874916, 28884916, 28894916, 28904916, 28914916, 28924916, 28934916, 28944916, 28954916, 28964916, 28974916, 28984916, 28994916, 29004916, 29014916, 29024916, 29034916, 29044916, 29054916, 29064916, 29074916, 29084916, 29094916, 29104916, 29114916, 29124916, 29134916, 29144916, 29154916, 29164916, 29174916, 29184916, 29194916, 29204916, 29214916, 29224916, 29234916, 29244916, 29254916, 29264916, 29274916, 29284916, 29294916, 29304916, 29314916, 29324916, 29334916, 29344916, 29354916, 29364916, 29374916, 29384916, 29394916, 29404916, 29414916]</msg>
<status status="PASS" starttime="20201112 10:15:23.621" endtime="20201112 10:15:23.622"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.612" endtime="20201112 10:15:23.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.629" endtime="20201112 10:15:23.922"></status>
</kw>
<msg timestamp="20201112 10:15:23.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018060736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028101597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.627" endtime="20201112 10:15:23.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018060736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028101597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:23.926" endtime="20201112 10:15:23.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.934" endtime="20201112 10:15:23.935"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.625" endtime="20201112 10:15:23.936"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.623" endtime="20201112 10:15:23.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:23.960" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:23.937" endtime="20201112 10:15:23.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.964" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 10:15:23.963" endtime="20201112 10:15:23.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.966" level="INFO">VALUE: 0.018060736</msg>
<status status="PASS" starttime="20201112 10:15:23.965" endtime="20201112 10:15:23.966"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.961" endtime="20201112 10:15:23.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.971" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:23.970" endtime="20201112 10:15:23.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:23.974" level="INFO">VALUE: [0.028101597, 0.038089236, 0.048100375, 0.058100292, 0.068101236, 0.078102153, 0.088103083, 0.098104069, 0.108104917, 0.118105847, 0.128106792, 0.138107694, 0.148108611, 0.158109597, 0.168110486, 0.178111389, 0.188112333, 0.198113292, 0.208114167, 0.218115097, 0.228116014, 0.238116931, 0.248117861, 0.258118778, 0.268119708, 0.278120653, 0.288121556, 0.2981225, 0.308123389, 0.318124319, 0.328125264, 0.338126167, 0.348127111, 0.358128028, 0.368128944, 0.378129861, 0.388130792, 0.398131708, 0.408132639, 0.418133556, 0.428134486, 0.438135417, 0.448136375, 0.458137264, 0.468138181, 0.478139097, 0.488140042, 0.498140958, 0.508141889, 0.518142806, 0.528143736, 0.538144653, 0.548145569, 0.558146514, 0.568147431, 0.578148347, 0.588149278, 0.598150194, 0.608151125, 0.618152042, 0.628152986, 0.638153903, 0.648154847, 0.658155736, 0.668156667, 0.678157597, 0.688158514, 0.698159458, 0.708160417, 0.718161306, 0.728162222, 0.738163181, 0.748164069, 0.758164986, 0.768165931, 0.778166833, 0.788167792, 0.798168694, 0.808169625, 0.818170556, 0.828171458, 0.838172389, 0.848173319, 0.858174236, 0.868175181, 0.878176097, 0.888177028, 0.898177986, 0.908178861, 0.918179819, 0.928180708, 0.938181639, 0.948182556, 0.9581835, 0.968184417, 0.978185347, 0.988186292, 0.998187194, 1.008188181, 1.018189042] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:23.972" endtime="20201112 10:15:23.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.967" endtime="20201112 10:15:23.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:23.977" endtime="20201112 10:15:23.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:23.981" endtime="20201112 10:15:24.000"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.979" endtime="20201112 10:15:24.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:23.976" endtime="20201112 10:15:24.001"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:21.462" endtime="20201112 10:15:24.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.348" endtime="20201112 10:15:24.002"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:16.347" endtime="20201112 10:15:24.002"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:24.005" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:24.014" endtime="20201112 10:15:26.107"></status>
</kw>
<msg timestamp="20201112 10:15:26.108" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30959540, 'wakeups': [30969592, 30979577, 30989586, 30999586, 31009586...</msg>
<status status="PASS" starttime="20201112 10:15:24.012" endtime="20201112 10:15:26.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.114" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30959540, 'wakeups': [30969592, 30979577, 30989586, 30999586, 31009586...</msg>
<status status="PASS" starttime="20201112 10:15:26.110" endtime="20201112 10:15:26.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.116" endtime="20201112 10:15:26.119"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.009" endtime="20201112 10:15:26.120"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.007" endtime="20201112 10:15:26.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.127" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 30959540, 'wakeups': [30969592, 30979577, 30989586, 30999586, 31009586, 31019586, 31029586, 31039586, 31049586, 31059586, 31069586, 31079586, 31089586, 31099586...</msg>
<status status="PASS" starttime="20201112 10:15:26.123" endtime="20201112 10:15:26.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.135" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:26.133" endtime="20201112 10:15:26.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.140" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:26.137" endtime="20201112 10:15:26.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.129" endtime="20201112 10:15:26.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.150" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:26.147" endtime="20201112 10:15:26.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.154" level="INFO">VALUE: 30959540</msg>
<status status="PASS" starttime="20201112 10:15:26.152" endtime="20201112 10:15:26.154"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.143" endtime="20201112 10:15:26.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.164" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:26.162" endtime="20201112 10:15:26.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.169" level="INFO">VALUE: [30969592, 30979577, 30989586, 30999586, 31009586, 31019586, 31029586, 31039586, 31049586, 31059586, 31069586, 31079586, 31089586, 31099586, 31109586, 31119586, 31129586, 31139586, 31149586, 31159586, 31169586, 31179586, 31189586, 31199586, 31209586, 31219586, 31229586, 31239586, 31249586, 31259586, 31269586, 31279586, 31289586, 31299586, 31309586, 31319586, 31329586, 31339586, 31349586, 31359586, 31369586, 31379586, 31389586, 31399586, 31409586, 31419586, 31429586, 31439586, 31449586, 31459586, 31469586, 31479586, 31489586, 31499586, 31509586, 31519586, 31529586, 31539586, 31549586, 31559586, 31569586, 31579586, 31589586, 31599586, 31609586, 31619586, 31629586, 31639586, 31649586, 31659586, 31669586, 31679586, 31689586, 31699586, 31709586, 31719586, 31729586, 31739586, 31749586, 31759586, 31769586, 31779586, 31789586, 31799586, 31809586, 31819586, 31829586, 31839586, 31849586, 31859586, 31869586, 31879586, 31889586, 31899586, 31909586, 31919586, 31929586, 31939586, 31949586, 31959586]</msg>
<status status="PASS" starttime="20201112 10:15:26.167" endtime="20201112 10:15:26.170"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.157" endtime="20201112 10:15:26.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.182" endtime="20201112 10:15:26.473"></status>
</kw>
<msg timestamp="20201112 10:15:26.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031893653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.180" endtime="20201112 10:15:26.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031893653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:26.477" endtime="20201112 10:15:26.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.485" endtime="20201112 10:15:26.486"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.175" endtime="20201112 10:15:26.487"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.172" endtime="20201112 10:15:26.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:26.512" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:26.488" endtime="20201112 10:15:26.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.516" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:26.515" endtime="20201112 10:15:26.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.519" level="INFO">VALUE: 0.021840681</msg>
<status status="PASS" starttime="20201112 10:15:26.518" endtime="20201112 10:15:26.519"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.513" endtime="20201112 10:15:26.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.524" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:26.523" endtime="20201112 10:15:26.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:26.526" level="INFO">VALUE: [0.031893653, 0.041878986, 0.051889403, 0.061890361, 0.071891278, 0.081892194, 0.091893139, 0.101894125, 0.111894958, 0.121895889, 0.131896806, 0.141897764, 0.151898667, 0.161899597, 0.1719005, 0.181901431, 0.191902347, 0.201903278, 0.211904194, 0.221905125, 0.231906042, 0.241906972, 0.251907903, 0.261908833, 0.27190975, 0.281910681, 0.291911611, 0.301912528, 0.3119135, 0.321914375, 0.331915306, 0.341916222, 0.351917153, 0.361918069, 0.371919014, 0.381919917, 0.391920847, 0.401921764, 0.411922708, 0.421923611, 0.431924556, 0.4419255, 0.451926389, 0.461927375, 0.47192825, 0.481929167, 0.491930111, 0.501931028, 0.511932, 0.521932889, 0.531933792, 0.541934736, 0.551935653, 0.561936569, 0.5719375, 0.581938431, 0.591939347, 0.601940264, 0.611941194, 0.621942125, 0.631943042, 0.641943972, 0.651944986, 0.661945833, 0.67194675, 0.681947681, 0.691948597, 0.701949528, 0.711950444, 0.721951417, 0.731952319, 0.741953236, 0.751954181, 0.761955097, 0.771956, 0.781956944, 0.791957875, 0.801958778, 0.811959722, 0.821960653, 0.831961597, 0.841962486, 0.851963403, 0.861964333, 0.87196525, 0.881966181, 0.891967111, 0.901968028, 0.911968944, 0.921969875, 0.931970806, 0.941971722, 0.951972639, 0.961973569, 0.971974486, 0.981975431, 0.991976417, 1.001977264, 1.011978194, 1.021979125] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:26.525" endtime="20201112 10:15:26.526"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.520" endtime="20201112 10:15:26.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.529" endtime="20201112 10:15:26.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:26.533" endtime="20201112 10:15:26.552"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.531" endtime="20201112 10:15:26.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.527" endtime="20201112 10:15:26.553"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.005" endtime="20201112 10:15:26.554"></status>
</kw>
<msg timestamp="20201112 10:15:26.554" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:26.562" endtime="20201112 10:15:28.655"></status>
</kw>
<msg timestamp="20201112 10:15:28.656" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33507675, 'wakeups': [33517725, 33527712, 33537721, 33547721, 33557721...</msg>
<status status="PASS" starttime="20201112 10:15:26.560" endtime="20201112 10:15:28.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.662" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33507675, 'wakeups': [33517725, 33527712, 33537721, 33547721, 33557721...</msg>
<status status="PASS" starttime="20201112 10:15:28.658" endtime="20201112 10:15:28.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.664" endtime="20201112 10:15:28.667"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.558" endtime="20201112 10:15:28.668"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.556" endtime="20201112 10:15:28.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:28.675" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 33507675, 'wakeups': [33517725, 33527712, 33537721, 33547721, 33557721, 33567721, 33577721, 33587721, 33597721, 33607721, 33617721, 33627721, 33637721, 33647721...</msg>
<status status="PASS" starttime="20201112 10:15:28.671" endtime="20201112 10:15:28.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.683" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:28.681" endtime="20201112 10:15:28.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.687" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:28.685" endtime="20201112 10:15:28.688"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.677" endtime="20201112 10:15:28.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.700" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:28.697" endtime="20201112 10:15:28.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.704" level="INFO">VALUE: 33507675</msg>
<status status="PASS" starttime="20201112 10:15:28.702" endtime="20201112 10:15:28.705"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.690" endtime="20201112 10:15:28.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.714" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:28.712" endtime="20201112 10:15:28.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:28.718" level="INFO">VALUE: [33517725, 33527712, 33537721, 33547721, 33557721, 33567721, 33577721, 33587721, 33597721, 33607721, 33617721, 33627721, 33637721, 33647721, 33657721, 33667721, 33677721, 33687721, 33697721, 33707721, 33717721, 33727721, 33737721, 33747721, 33757721, 33767721, 33777721, 33787721, 33797721, 33807721, 33817721, 33827721, 33837721, 33847721, 33857721, 33867721, 33877721, 33887721, 33897721, 33907721, 33917721, 33927721, 33937721, 33947721, 33957721, 33967721, 33977721, 33987721, 33997721, 34007721, 34017721, 34027721, 34037721, 34047721, 34057721, 34067721, 34077721, 34087721, 34097721, 34107721, 34117721, 34127721, 34137721, 34147721, 34157721, 34167721, 34177721, 34187721, 34197721, 34207721, 34217721, 34227721, 34237721, 34247721, 34257721, 34267721, 34277721, 34287721, 34297721, 34307721, 34317721, 34327721, 34337721, 34347721, 34357721, 34367721, 34377721, 34387721, 34397721, 34407721, 34417721, 34427721, 34437721, 34447721, 34457721, 34467721, 34477721, 34487721, 34497721, 34507721]</msg>
<status status="PASS" starttime="20201112 10:15:28.716" endtime="20201112 10:15:28.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.707" endtime="20201112 10:15:28.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:28.731" endtime="20201112 10:15:29.023"></status>
</kw>
<msg timestamp="20201112 10:15:29.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018108431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028159819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:28.729" endtime="20201112 10:15:29.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018108431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028159819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:29.028" endtime="20201112 10:15:29.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.037" endtime="20201112 10:15:29.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.725" endtime="20201112 10:15:29.039"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:28.722" endtime="20201112 10:15:29.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:29.064" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:29.041" endtime="20201112 10:15:29.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.068" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:29.067" endtime="20201112 10:15:29.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.070" level="INFO">VALUE: 0.018108431</msg>
<status status="PASS" starttime="20201112 10:15:29.069" endtime="20201112 10:15:29.071"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.065" endtime="20201112 10:15:29.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.076" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:29.075" endtime="20201112 10:15:29.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:29.079" level="INFO">VALUE: [0.028159819, 0.038147139, 0.048157569, 0.0581585, 0.068159417, 0.078160347, 0.088161264, 0.098162181, 0.108163125, 0.118164028, 0.128164958, 0.138165889, 0.148166806, 0.158167722, 0.168168681, 0.178169583, 0.1881705, 0.198171417, 0.208172403, 0.218173264, 0.228174194, 0.238175111, 0.248176042, 0.258176972, 0.268177889, 0.278178806, 0.288179736, 0.298180653, 0.308181653, 0.3181825, 0.328183431, 0.338184347, 0.348185292, 0.358186194, 0.368187139, 0.378188042, 0.388188972, 0.398189903, 0.408190819, 0.418191736, 0.428192667, 0.438193597, 0.448194528, 0.458195458, 0.468196361, 0.478197306, 0.488198208, 0.498199139, 0.508200069, 0.518200986, 0.528201931, 0.538202833, 0.548203764, 0.558204694, 0.568205611, 0.578206542, 0.588207458, 0.598208389, 0.608209319, 0.618210264, 0.628211153, 0.638212083, 0.648213014, 0.658213972, 0.668214861, 0.678215778, 0.688216708, 0.698217653, 0.708218556, 0.718219486, 0.728220403, 0.738221333, 0.748222264, 0.758223194, 0.768224125, 0.778225028, 0.788225958, 0.798226889, 0.808227806, 0.81822875, 0.828229667, 0.838230583, 0.848231542, 0.858232431, 0.868233375, 0.878234278, 0.888235208, 0.898236181, 0.908237069, 0.918237986, 0.928238917, 0.938239833, 0.948240778, 0.958241681, 0.968242681, 0.978243528, 0.988244472, 0.998245403, 1.008246319, 1.018247236] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:29.077" endtime="20201112 10:15:29.079"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.072" endtime="20201112 10:15:29.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.082" endtime="20201112 10:15:29.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:29.085" endtime="20201112 10:15:29.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.084" endtime="20201112 10:15:29.105"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.080" endtime="20201112 10:15:29.106"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:26.554" endtime="20201112 10:15:29.106"></status>
</kw>
<msg timestamp="20201112 10:15:29.106" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:29.114" endtime="20201112 10:15:31.207"></status>
</kw>
<msg timestamp="20201112 10:15:31.208" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36060205, 'wakeups': [36070255, 36080242, 36090251, 36100251, 36110251...</msg>
<status status="PASS" starttime="20201112 10:15:29.113" endtime="20201112 10:15:31.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.214" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36060205, 'wakeups': [36070255, 36080242, 36090251, 36100251, 36110251...</msg>
<status status="PASS" starttime="20201112 10:15:31.210" endtime="20201112 10:15:31.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.217" endtime="20201112 10:15:31.220"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.110" endtime="20201112 10:15:31.221"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.108" endtime="20201112 10:15:31.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.227" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 36060205, 'wakeups': [36070255, 36080242, 36090251, 36100251, 36110251, 36120251, 36130251, 36140251, 36150251, 36160251, 36170251, 36180251, 36190251, 36200251...</msg>
<status status="PASS" starttime="20201112 10:15:31.223" endtime="20201112 10:15:31.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.236" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:31.234" endtime="20201112 10:15:31.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.240" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:31.238" endtime="20201112 10:15:31.241"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.229" endtime="20201112 10:15:31.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.250" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:31.248" endtime="20201112 10:15:31.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.254" level="INFO">VALUE: 36060205</msg>
<status status="PASS" starttime="20201112 10:15:31.252" endtime="20201112 10:15:31.255"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.243" endtime="20201112 10:15:31.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.264" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:31.262" endtime="20201112 10:15:31.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.269" level="INFO">VALUE: [36070255, 36080242, 36090251, 36100251, 36110251, 36120251, 36130251, 36140251, 36150251, 36160251, 36170251, 36180251, 36190251, 36200251, 36210251, 36220251, 36230251, 36240251, 36250251, 36260251, 36270251, 36280251, 36290251, 36300251, 36310251, 36320251, 36330251, 36340251, 36350251, 36360251, 36370251, 36380251, 36390251, 36400251, 36410251, 36420251, 36430251, 36440251, 36450251, 36460251, 36470251, 36480251, 36490251, 36500251, 36510251, 36520251, 36530251, 36540251, 36550251, 36560251, 36570251, 36580251, 36590251, 36600251, 36610251, 36620251, 36630251, 36640251, 36650251, 36660251, 36670251, 36680251, 36690251, 36700251, 36710251, 36720251, 36730251, 36740251, 36750251, 36760251, 36770251, 36780251, 36790251, 36800251, 36810251, 36820251, 36830251, 36840251, 36850251, 36860251, 36870251, 36880251, 36890251, 36900251, 36910251, 36920251, 36930251, 36940251, 36950251, 36960251, 36970251, 36980251, 36990251, 37000251, 37010251, 37020251, 37030251, 37040251, 37050251, 37060251]</msg>
<status status="PASS" starttime="20201112 10:15:31.266" endtime="20201112 10:15:31.270"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.257" endtime="20201112 10:15:31.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.284" endtime="20201112 10:15:31.576"></status>
</kw>
<msg timestamp="20201112 10:15:31.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018314097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028365639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.281" endtime="20201112 10:15:31.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018314097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028365639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:31.580" endtime="20201112 10:15:31.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.587" endtime="20201112 10:15:31.589"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.275" endtime="20201112 10:15:31.590"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.272" endtime="20201112 10:15:31.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:31.613" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:31.591" endtime="20201112 10:15:31.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.618" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 10:15:31.617" endtime="20201112 10:15:31.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.620" level="INFO">VALUE: 0.018314097</msg>
<status status="PASS" starttime="20201112 10:15:31.619" endtime="20201112 10:15:31.621"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.615" endtime="20201112 10:15:31.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.626" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:31.625" endtime="20201112 10:15:31.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:31.628" level="INFO">VALUE: [0.028365639, 0.038352972, 0.048363389, 0.058364333, 0.06836525, 0.078366167, 0.088367125, 0.098368014, 0.108368944, 0.118369861, 0.128370792, 0.138371708, 0.148372639, 0.158373556, 0.1683745, 0.178375403, 0.188376347, 0.19837725, 0.208378181, 0.218379097, 0.228380028, 0.238380944, 0.248381875, 0.258382833, 0.268383722, 0.278384653, 0.288385569, 0.2983865, 0.308387431, 0.318388347, 0.328389264, 0.338390208, 0.348391111, 0.358392042, 0.368392972, 0.378393889, 0.388394833, 0.398395736, 0.408396667, 0.418397583, 0.428398514, 0.438399458, 0.448400403, 0.458401319, 0.468402222, 0.478403139, 0.488404056, 0.498405, 0.508405917, 0.518406833, 0.528407764, 0.538408681, 0.548409681, 0.558410542, 0.568411458, 0.578412403, 0.588413306, 0.59841425, 0.608415181, 0.618416097, 0.628417014, 0.638417931, 0.648418889, 0.658419806, 0.668420708, 0.678421639, 0.688422569, 0.6984235, 0.7084245, 0.718425333, 0.728426278, 0.738427181, 0.748428111, 0.758429056, 0.768429958, 0.778430889, 0.788431819, 0.798432736, 0.808433681, 0.818434583, 0.828435528, 0.838436444, 0.848437375, 0.858438306, 0.868439222, 0.878440139, 0.888441056, 0.898442, 0.908442931, 0.918443833, 0.928444778, 0.938445694, 0.948446667, 0.958447542, 0.968448472, 0.978449389, 0.988450319, 0.998451236, 1.008452222, 1.018453097] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:31.627" endtime="20201112 10:15:31.628"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.622" endtime="20201112 10:15:31.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.631" endtime="20201112 10:15:31.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:31.634" endtime="20201112 10:15:31.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.633" endtime="20201112 10:15:31.654"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.629" endtime="20201112 10:15:31.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:29.107" endtime="20201112 10:15:31.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.003" endtime="20201112 10:15:31.655"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:24.002" endtime="20201112 10:15:31.655"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:31.658" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:31.667" endtime="20201112 10:15:33.761"></status>
</kw>
<msg timestamp="20201112 10:15:33.762" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38613482, 'wakeups': [38623544, 38633530, 38643530, 38653530, 38663530...</msg>
<status status="PASS" starttime="20201112 10:15:31.666" endtime="20201112 10:15:33.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.768" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38613482, 'wakeups': [38623544, 38633530, 38643530, 38653530, 38663530...</msg>
<status status="PASS" starttime="20201112 10:15:33.764" endtime="20201112 10:15:33.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.770" endtime="20201112 10:15:33.774"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.662" endtime="20201112 10:15:33.775"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.660" endtime="20201112 10:15:33.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:33.781" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 38613482, 'wakeups': [38623544, 38633530, 38643530, 38653530, 38663530, 38673530, 38683530, 38693530, 38703530, 38713530, 38723530, 38733530, 38743530, 38753530...</msg>
<status status="PASS" starttime="20201112 10:15:33.777" endtime="20201112 10:15:33.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.789" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:33.787" endtime="20201112 10:15:33.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.794" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:33.792" endtime="20201112 10:15:33.795"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.783" endtime="20201112 10:15:33.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.805" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:33.802" endtime="20201112 10:15:33.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.809" level="INFO">VALUE: 38613482</msg>
<status status="PASS" starttime="20201112 10:15:33.807" endtime="20201112 10:15:33.810"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.797" endtime="20201112 10:15:33.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.819" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:33.817" endtime="20201112 10:15:33.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:33.823" level="INFO">VALUE: [38623544, 38633530, 38643530, 38653530, 38663530, 38673530, 38683530, 38693530, 38703530, 38713530, 38723530, 38733530, 38743530, 38753530, 38763530, 38773530, 38783530, 38793530, 38803530, 38813530, 38823530, 38833530, 38843530, 38853530, 38863530, 38873530, 38883530, 38893530, 38903530, 38913530, 38923530, 38933530, 38943530, 38953530, 38963530, 38973530, 38983530, 38993530, 39003530, 39013530, 39023530, 39033530, 39043530, 39053530, 39063530, 39073530, 39083530, 39093530, 39103530, 39113530, 39123530, 39133530, 39143530, 39153530, 39163530, 39173530, 39183530, 39193530, 39203530, 39213530, 39223530, 39233530, 39243530, 39253530, 39263530, 39273530, 39283530, 39293530, 39303530, 39313530, 39323530, 39333530, 39343530, 39353530, 39363530, 39373530, 39383530, 39393530, 39403530, 39413530, 39423530, 39433530, 39443530, 39453530, 39463530, 39473530, 39483530, 39493530, 39503530, 39513530, 39523530, 39533530, 39543530, 39553530, 39563530, 39573530, 39583530, 39593530, 39603530, 39613530]</msg>
<status status="PASS" starttime="20201112 10:15:33.821" endtime="20201112 10:15:33.824"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.812" endtime="20201112 10:15:33.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:33.834" endtime="20201112 10:15:34.127"></status>
</kw>
<msg timestamp="20201112 10:15:34.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032656917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:33.833" endtime="20201112 10:15:34.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032656917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:34.130" endtime="20201112 10:15:34.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.138" endtime="20201112 10:15:34.139"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.830" endtime="20201112 10:15:34.140"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:33.826" endtime="20201112 10:15:34.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:34.164" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:34.141" endtime="20201112 10:15:34.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.169" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:34.168" endtime="20201112 10:15:34.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.171" level="INFO">VALUE: 0.022593306</msg>
<status status="PASS" starttime="20201112 10:15:34.170" endtime="20201112 10:15:34.171"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.165" endtime="20201112 10:15:34.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.176" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:34.175" endtime="20201112 10:15:34.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:34.178" level="INFO">VALUE: [0.032656917, 0.042643917, 0.052644833, 0.062645764, 0.072646694, 0.082647611, 0.092648542, 0.102649472, 0.112650375, 0.122651319, 0.132652222, 0.142653167, 0.152654069, 0.162655014, 0.172655917, 0.182656847, 0.192657778, 0.202658694, 0.212659625, 0.222660542, 0.232661472, 0.242662431, 0.252663319, 0.262664236, 0.272665222, 0.282666083, 0.292667042, 0.302667931, 0.312668875, 0.322669806, 0.332670708, 0.342671639, 0.352672569, 0.362673486, 0.372674403, 0.382675333, 0.392676264, 0.402677194, 0.412678125, 0.422679056, 0.432679986, 0.442680889, 0.452681806, 0.462682806, 0.472683653, 0.482684583, 0.492685514, 0.502686431, 0.512687375, 0.522688292, 0.532689208, 0.542690139, 0.552691056, 0.562691986, 0.572692917, 0.582693833, 0.592694819, 0.602695708, 0.612696625, 0.622697556, 0.632698458, 0.642699389, 0.652700319, 0.662701236, 0.672702208, 0.682703083, 0.692704014, 0.702704958, 0.712705875, 0.722706792, 0.732707708, 0.742708708, 0.752709569, 0.762710514, 0.772711431, 0.782712347, 0.792713278, 0.802714208, 0.812715125, 0.822716056, 0.832716986, 0.842717889, 0.852718833, 0.86271975, 0.872720736, 0.882721597, 0.892722514, 0.902723444, 0.912724375, 0.922725292, 0.932726236, 0.942727153, 0.952728069, 0.962729042, 0.972729917, 0.982730861, 0.992731778, 1.00273275, 1.012733625, 1.022734556] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:34.177" endtime="20201112 10:15:34.179"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.172" endtime="20201112 10:15:34.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.182" endtime="20201112 10:15:34.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:34.186" endtime="20201112 10:15:34.205"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.184" endtime="20201112 10:15:34.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.180" endtime="20201112 10:15:34.206"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.658" endtime="20201112 10:15:34.206"></status>
</kw>
<msg timestamp="20201112 10:15:34.207" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:34.214" endtime="20201112 10:15:36.308"></status>
</kw>
<msg timestamp="20201112 10:15:36.309" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41160444, 'wakeups': [41170506, 41180492, 41190502, 41200502, 41210502...</msg>
<status status="PASS" starttime="20201112 10:15:34.213" endtime="20201112 10:15:36.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.315" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41160444, 'wakeups': [41170506, 41180492, 41190502, 41200502, 41210502...</msg>
<status status="PASS" starttime="20201112 10:15:36.311" endtime="20201112 10:15:36.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.317" endtime="20201112 10:15:36.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.210" endtime="20201112 10:15:36.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.209" endtime="20201112 10:15:36.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.327" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 41160444, 'wakeups': [41170506, 41180492, 41190502, 41200502, 41210502, 41220502, 41230502, 41240502, 41250502, 41260502, 41270502, 41280502, 41290502, 41300502...</msg>
<status status="PASS" starttime="20201112 10:15:36.324" endtime="20201112 10:15:36.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.336" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:36.334" endtime="20201112 10:15:36.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.340" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:36.338" endtime="20201112 10:15:36.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.329" endtime="20201112 10:15:36.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.350" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:36.348" endtime="20201112 10:15:36.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.357" level="INFO">VALUE: 41160444</msg>
<status status="PASS" starttime="20201112 10:15:36.355" endtime="20201112 10:15:36.357"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.343" endtime="20201112 10:15:36.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.367" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:36.365" endtime="20201112 10:15:36.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.371" level="INFO">VALUE: [41170506, 41180492, 41190502, 41200502, 41210502, 41220502, 41230502, 41240502, 41250502, 41260502, 41270502, 41280502, 41290502, 41300502, 41310502, 41320502, 41330502, 41340502, 41350502, 41360502, 41370502, 41380502, 41390502, 41400502, 41410502, 41420502, 41430502, 41440502, 41450502, 41460502, 41470502, 41480502, 41490502, 41500502, 41510502, 41520502, 41530502, 41540502, 41550502, 41560502, 41570502, 41580502, 41590502, 41600502, 41610502, 41620502, 41630502, 41640502, 41650502, 41660502, 41670502, 41680502, 41690502, 41700502, 41710502, 41720502, 41730502, 41740502, 41750502, 41760502, 41770502, 41780502, 41790502, 41800502, 41810502, 41820502, 41830502, 41840502, 41850502, 41860502, 41870502, 41880502, 41890502, 41900502, 41910502, 41920502, 41930502, 41940502, 41950502, 41960502, 41970502, 41980502, 41990502, 42000502, 42010502, 42020502, 42030502, 42040502, 42050502, 42060502, 42070502, 42080502, 42090502, 42100502, 42110502, 42120502, 42130502, 42140502, 42150502, 42160502]</msg>
<status status="PASS" starttime="20201112 10:15:36.369" endtime="20201112 10:15:36.372"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.360" endtime="20201112 10:15:36.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.387" endtime="20201112 10:15:36.681"></status>
</kw>
<msg timestamp="20201112 10:15:36.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018085153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028148667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.384" endtime="20201112 10:15:36.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018085153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028148667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:36.684" endtime="20201112 10:15:36.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.692" endtime="20201112 10:15:36.693"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.379" endtime="20201112 10:15:36.694"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.375" endtime="20201112 10:15:36.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:36.718" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:36.695" endtime="20201112 10:15:36.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.722" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:36.721" endtime="20201112 10:15:36.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.724" level="INFO">VALUE: 0.018085153</msg>
<status status="PASS" starttime="20201112 10:15:36.723" endtime="20201112 10:15:36.725"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.719" endtime="20201112 10:15:36.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.730" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:36.729" endtime="20201112 10:15:36.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:36.733" level="INFO">VALUE: [0.028148667, 0.038135639, 0.048146694, 0.058147625, 0.068148542, 0.078149458, 0.088150375, 0.098151306, 0.108152264, 0.118153153, 0.128154069, 0.138155028, 0.148155944, 0.158156847, 0.168157778, 0.178158736, 0.188159611, 0.198160625, 0.208161472, 0.218162389, 0.228163361, 0.238164236, 0.248165153, 0.258166097, 0.268167, 0.278167931, 0.288168847, 0.298169778, 0.308170708, 0.318171625, 0.328172556, 0.338173472, 0.348174403, 0.358175333, 0.368176264, 0.378177167, 0.388178097, 0.398179014, 0.408179972, 0.418180875, 0.428181861, 0.43818275, 0.448183653, 0.458184583, 0.468185486, 0.478186444, 0.488187417, 0.498188264, 0.508189194, 0.518190181, 0.528191042, 0.538191986, 0.548192889, 0.558193819, 0.56819475, 0.578195667, 0.588196583, 0.598197514, 0.608198444, 0.618199361, 0.628200306, 0.638201222, 0.648202139, 0.658203139, 0.668203986, 0.678204917, 0.688205833, 0.698206764, 0.708207694, 0.718208625, 0.728209583, 0.7382105, 0.748211417, 0.758212319, 0.76821325, 0.778214181, 0.788215083, 0.798216014, 0.808216944, 0.818217861, 0.828218806, 0.838219736, 0.848220639, 0.858221569, 0.868222528, 0.878223417, 0.888224333, 0.898225264, 0.908226194, 0.918227111, 0.928228042, 0.938228972, 0.948229903, 0.958230875, 0.968231736, 0.978232667, 0.988233597, 0.998234528, 1.008235444, 1.018236361] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:36.731" endtime="20201112 10:15:36.733"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.726" endtime="20201112 10:15:36.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.736" endtime="20201112 10:15:36.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:36.739" endtime="20201112 10:15:36.758"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.737" endtime="20201112 10:15:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.734" endtime="20201112 10:15:36.759"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:34.207" endtime="20201112 10:15:36.760"></status>
</kw>
<msg timestamp="20201112 10:15:36.760" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:36.768" endtime="20201112 10:15:38.860"></status>
</kw>
<msg timestamp="20201112 10:15:38.862" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43713870, 'wakeups': [43723932, 43733918, 43743918, 43753918, 43763918...</msg>
<status status="PASS" starttime="20201112 10:15:36.766" endtime="20201112 10:15:38.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.868" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43713870, 'wakeups': [43723932, 43733918, 43743918, 43753918, 43763918...</msg>
<status status="PASS" starttime="20201112 10:15:38.865" endtime="20201112 10:15:38.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.871" endtime="20201112 10:15:38.874"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.764" endtime="20201112 10:15:38.875"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.762" endtime="20201112 10:15:38.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:38.881" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 43713870, 'wakeups': [43723932, 43733918, 43743918, 43753918, 43763918, 43773918, 43783918, 43793918, 43803918, 43813918, 43823918, 43833918, 43843918, 43853918...</msg>
<status status="PASS" starttime="20201112 10:15:38.877" endtime="20201112 10:15:38.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.890" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:38.888" endtime="20201112 10:15:38.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.894" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:38.892" endtime="20201112 10:15:38.895"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.883" endtime="20201112 10:15:38.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.904" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:38.902" endtime="20201112 10:15:38.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.908" level="INFO">VALUE: 43713870</msg>
<status status="PASS" starttime="20201112 10:15:38.906" endtime="20201112 10:15:38.909"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.897" endtime="20201112 10:15:38.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.918" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:38.916" endtime="20201112 10:15:38.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:38.923" level="INFO">VALUE: [43723932, 43733918, 43743918, 43753918, 43763918, 43773918, 43783918, 43793918, 43803918, 43813918, 43823918, 43833918, 43843918, 43853918, 43863918, 43873918, 43883918, 43893918, 43903918, 43913918, 43923918, 43933918, 43943918, 43953918, 43963918, 43973918, 43983918, 43993918, 44003918, 44013918, 44023918, 44033918, 44043918, 44053918, 44063918, 44073918, 44083918, 44093918, 44103918, 44113918, 44123918, 44133918, 44143918, 44153918, 44163918, 44173918, 44183918, 44193918, 44203918, 44213918, 44223918, 44233918, 44243918, 44253918, 44263918, 44273918, 44283918, 44293918, 44303918, 44313918, 44323918, 44333918, 44343918, 44353918, 44363918, 44373918, 44383918, 44393918, 44403918, 44413918, 44423918, 44433918, 44443918, 44453918, 44463918, 44473918, 44483918, 44493918, 44503918, 44513918, 44523918, 44533918, 44543918, 44553918, 44563918, 44573918, 44583918, 44593918, 44603918, 44613918, 44623918, 44633918, 44643918, 44653918, 44663918, 44673918, 44683918, 44693918, 44703918, 44713918]</msg>
<status status="PASS" starttime="20201112 10:15:38.920" endtime="20201112 10:15:38.924"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.911" endtime="20201112 10:15:38.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:38.938" endtime="20201112 10:15:39.237"></status>
</kw>
<msg timestamp="20201112 10:15:39.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028212611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:38.935" endtime="20201112 10:15:39.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028212611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:39.241" endtime="20201112 10:15:39.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.249" endtime="20201112 10:15:39.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.929" endtime="20201112 10:15:39.251"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:38.926" endtime="20201112 10:15:39.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:39.279" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:39.252" endtime="20201112 10:15:39.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.284" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 10:15:39.283" endtime="20201112 10:15:39.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.286" level="INFO">VALUE: 0.018149486</msg>
<status status="PASS" starttime="20201112 10:15:39.285" endtime="20201112 10:15:39.286"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.280" endtime="20201112 10:15:39.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.291" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:39.290" endtime="20201112 10:15:39.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:39.293" level="INFO">VALUE: [0.028212611, 0.038199583, 0.048200514, 0.058201458, 0.068202375, 0.078203292, 0.088204208, 0.098205125, 0.108206069, 0.118206972, 0.128207931, 0.138208819, 0.14820975, 0.158210667, 0.168211611, 0.178212514, 0.188213444, 0.198214375, 0.208215292, 0.218216222, 0.228217208, 0.238218069, 0.248218986, 0.258219986, 0.268220847, 0.278221764, 0.288222694, 0.298223611, 0.308224528, 0.3182255, 0.328226389, 0.338227347, 0.348228236, 0.358229208, 0.368230097, 0.378231, 0.388231931, 0.398232861, 0.408233778, 0.418234708, 0.428235625, 0.438236556, 0.448237486, 0.458238417, 0.468239333, 0.47824025, 0.488241194, 0.498242125, 0.508243028, 0.518243958, 0.528244875, 0.538245819, 0.548246736, 0.558247667, 0.568248653, 0.578249514, 0.588250431, 0.598251361, 0.608252292, 0.618253222, 0.628254139, 0.638255056, 0.648255986, 0.658256917, 0.668257847, 0.678258764, 0.688259681, 0.698260625, 0.708261556, 0.718262472, 0.728263403, 0.738264319, 0.74826525, 0.758266167, 0.768267153, 0.778268028, 0.788268931, 0.798269861, 0.808270847, 0.818271736, 0.828272639, 0.838273569, 0.848274486, 0.858275417, 0.868276347, 0.878277264, 0.888278194, 0.898279125, 0.908280056, 0.918280986, 0.928281903, 0.938282819, 0.948283736, 0.958284667, 0.968285597, 0.978286514, 0.988287444, 0.998288389, 1.008289319, 1.018290236] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:39.292" endtime="20201112 10:15:39.293"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.287" endtime="20201112 10:15:39.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.296" endtime="20201112 10:15:39.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:39.300" endtime="20201112 10:15:39.319"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.298" endtime="20201112 10:15:39.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.294" endtime="20201112 10:15:39.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:36.761" endtime="20201112 10:15:39.320"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.656" endtime="20201112 10:15:39.321"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:31.656" endtime="20201112 10:15:39.321"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:39.323" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:39.332" endtime="20201112 10:15:41.425"></status>
</kw>
<msg timestamp="20201112 10:15:41.426" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46277946, 'wakeups': [46288019, 46298006, 46308006, 46318006, 46328006...</msg>
<status status="PASS" starttime="20201112 10:15:39.330" endtime="20201112 10:15:41.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.432" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46277946, 'wakeups': [46288019, 46298006, 46308006, 46318006, 46328006...</msg>
<status status="PASS" starttime="20201112 10:15:41.428" endtime="20201112 10:15:41.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.434" endtime="20201112 10:15:41.437"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.327" endtime="20201112 10:15:41.438"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.325" endtime="20201112 10:15:41.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.445" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 46277946, 'wakeups': [46288019, 46298006, 46308006, 46318006, 46328006, 46338006, 46348006, 46358006, 46368006, 46378006, 46388006, 46398006, 46408006, 46418006...</msg>
<status status="PASS" starttime="20201112 10:15:41.441" endtime="20201112 10:15:41.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.454" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:41.452" endtime="20201112 10:15:41.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.458" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:41.456" endtime="20201112 10:15:41.459"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.447" endtime="20201112 10:15:41.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.468" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:15:41.466" endtime="20201112 10:15:41.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.472" level="INFO">VALUE: 46277946</msg>
<status status="PASS" starttime="20201112 10:15:41.471" endtime="20201112 10:15:41.473"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.461" endtime="20201112 10:15:41.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.482" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:41.480" endtime="20201112 10:15:41.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.487" level="INFO">VALUE: [46288019, 46298006, 46308006, 46318006, 46328006, 46338006, 46348006, 46358006, 46368006, 46378006, 46388006, 46398006, 46408006, 46418006, 46428006, 46438006, 46448006, 46458006, 46468006, 46478006, 46488006, 46498006, 46508006, 46518006, 46528006, 46538006, 46548006, 46558006, 46568006, 46578006, 46588006, 46598006, 46608006, 46618006, 46628006, 46638006, 46648006, 46658006, 46668006, 46678006, 46688006, 46698006, 46708006, 46718006, 46728006, 46738006, 46748006, 46758006, 46768006, 46778006, 46788006, 46798006, 46808006, 46818006, 46828006, 46838006, 46848006, 46858006, 46868006, 46878006, 46888006, 46898006, 46908006, 46918006, 46928006, 46938006, 46948006, 46958006, 46968006, 46978006, 46988006, 46998006, 47008006, 47018006, 47028006, 47038006, 47048006, 47058006, 47068006, 47078006, 47088006, 47098006, 47108006, 47118006, 47128006, 47138006, 47148006, 47158006, 47168006, 47178006, 47188006, 47198006, 47208006, 47218006, 47228006, 47238006, 47248006, 47258006, 47268006, 47278006]</msg>
<status status="PASS" starttime="20201112 10:15:41.485" endtime="20201112 10:15:41.488"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.475" endtime="20201112 10:15:41.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.502" endtime="20201112 10:15:41.803"></status>
</kw>
<msg timestamp="20201112 10:15:41.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031766639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.499" endtime="20201112 10:15:41.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031766639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:41.807" endtime="20201112 10:15:41.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.814" endtime="20201112 10:15:41.816"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.494" endtime="20201112 10:15:41.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.490" endtime="20201112 10:15:41.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:41.841" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:41.818" endtime="20201112 10:15:41.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.846" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:15:41.845" endtime="20201112 10:15:41.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.848" level="INFO">VALUE: 0.021692278</msg>
<status status="PASS" starttime="20201112 10:15:41.847" endtime="20201112 10:15:41.848"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.842" endtime="20201112 10:15:41.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.853" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:41.852" endtime="20201112 10:15:41.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:41.856" level="INFO">VALUE: [0.031766639, 0.041754042, 0.051754931, 0.061755847, 0.071756778, 0.081757694, 0.091758611, 0.101759583, 0.111760458, 0.121761444, 0.131762306, 0.141763236, 0.151764153, 0.161765083, 0.171766, 0.181766931, 0.191767847, 0.201768778, 0.211769694, 0.221770708, 0.231771542, 0.241772472, 0.251773389, 0.261774319, 0.27177525, 0.281776167, 0.291777111, 0.301778014, 0.311778958, 0.321779889, 0.331780806, 0.341781708, 0.351782667, 0.361783569, 0.3717845, 0.381785458, 0.391786333, 0.401787264, 0.411788194, 0.421789125, 0.431790042, 0.441790958, 0.451791889, 0.461792847, 0.47179375, 0.481794667, 0.491795597, 0.501796514, 0.511797431, 0.521798361, 0.531799333, 0.541800208, 0.551801181, 0.561802056, 0.571802986, 0.581803944, 0.591804847, 0.601805764, 0.611806681, 0.621807611, 0.631808556, 0.641809472, 0.651810389, 0.661811347, 0.671812319, 0.681813167, 0.691814097, 0.701815028, 0.711815958, 0.721816861, 0.731817792, 0.741818736, 0.751819653, 0.761820569, 0.771821486, 0.781822417, 0.791823361, 0.801824278, 0.811825194, 0.821826139, 0.831827083, 0.841827972, 0.851828958, 0.861829833, 0.871830764, 0.881831667, 0.891832597, 0.901833528, 0.911834444, 0.921835389, 0.931836292, 0.941837264, 0.951838194, 0.961839069, 0.97184, 0.981840917, 0.991841861, 1.001842778, 1.011843694, 1.021844625] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:41.855" endtime="20201112 10:15:41.856"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.849" endtime="20201112 10:15:41.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.859" endtime="20201112 10:15:41.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:41.862" endtime="20201112 10:15:41.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.861" endtime="20201112 10:15:41.882"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.857" endtime="20201112 10:15:41.883"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.324" endtime="20201112 10:15:41.883"></status>
</kw>
<msg timestamp="20201112 10:15:41.883" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:41.891" endtime="20201112 10:15:43.984"></status>
</kw>
<msg timestamp="20201112 10:15:43.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48837013, 'wakeups': [48847086, 48857073, 48867073, 48877073, 48887073...</msg>
<status status="PASS" starttime="20201112 10:15:41.890" endtime="20201112 10:15:43.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:43.991" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48837013, 'wakeups': [48847086, 48857073, 48867073, 48877073, 48887073...</msg>
<status status="PASS" starttime="20201112 10:15:43.987" endtime="20201112 10:15:43.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:43.993" endtime="20201112 10:15:43.996"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.887" endtime="20201112 10:15:43.998"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.885" endtime="20201112 10:15:43.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.004" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 48837013, 'wakeups': [48847086, 48857073, 48867073, 48877073, 48887073, 48897073, 48907073, 48917073, 48927073, 48937073, 48947073, 48957073, 48967073, 48977073...</msg>
<status status="PASS" starttime="20201112 10:15:44.000" endtime="20201112 10:15:44.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.012" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:44.010" endtime="20201112 10:15:44.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.017" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:44.015" endtime="20201112 10:15:44.019"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.006" endtime="20201112 10:15:44.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.029" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:15:44.027" endtime="20201112 10:15:44.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.033" level="INFO">VALUE: 48837013</msg>
<status status="PASS" starttime="20201112 10:15:44.031" endtime="20201112 10:15:44.034"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.022" endtime="20201112 10:15:44.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.043" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:44.041" endtime="20201112 10:15:44.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.049" level="INFO">VALUE: [48847086, 48857073, 48867073, 48877073, 48887073, 48897073, 48907073, 48917073, 48927073, 48937073, 48947073, 48957073, 48967073, 48977073, 48987073, 48997073, 49007073, 49017073, 49027073, 49037073, 49047073, 49057073, 49067073, 49077073, 49087073, 49097073, 49107073, 49117073, 49127073, 49137073, 49147073, 49157073, 49167073, 49177073, 49187073, 49197073, 49207073, 49217073, 49227073, 49237073, 49247073, 49257073, 49267073, 49277073, 49287073, 49297073, 49307073, 49317073, 49327073, 49337073, 49347073, 49357073, 49367073, 49377073, 49387073, 49397073, 49407073, 49417073, 49427073, 49437073, 49447073, 49457073, 49467073, 49477073, 49487073, 49497073, 49507073, 49517073, 49527073, 49537073, 49547073, 49557073, 49567073, 49577073, 49587073, 49597073, 49607073, 49617073, 49627073, 49637073, 49647073, 49657073, 49667073, 49677073, 49687073, 49697073, 49707073, 49717073, 49727073, 49737073, 49747073, 49757073, 49767073, 49777073, 49787073, 49797073, 49807073, 49817073, 49827073, 49837073]</msg>
<status status="PASS" starttime="20201112 10:15:44.046" endtime="20201112 10:15:44.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.036" endtime="20201112 10:15:44.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.061" endtime="20201112 10:15:44.353"></status>
</kw>
<msg timestamp="20201112 10:15:44.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018089069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028163542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.059" endtime="20201112 10:15:44.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018089069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028163542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:44.356" endtime="20201112 10:15:44.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.364" endtime="20201112 10:15:44.365"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.055" endtime="20201112 10:15:44.366"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.052" endtime="20201112 10:15:44.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:44.391" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:44.367" endtime="20201112 10:15:44.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.396" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:15:44.395" endtime="20201112 10:15:44.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.398" level="INFO">VALUE: 0.018089069</msg>
<status status="PASS" starttime="20201112 10:15:44.397" endtime="20201112 10:15:44.398"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.391" endtime="20201112 10:15:44.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.403" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:44.402" endtime="20201112 10:15:44.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:44.405" level="INFO">VALUE: [0.028163542, 0.038150944, 0.048151847, 0.058152778, 0.068153694, 0.078154653, 0.088155556, 0.098156458, 0.108157389, 0.118158319, 0.128159222, 0.138160167, 0.148161069, 0.158162, 0.168162917, 0.178163847, 0.188164764, 0.198165694, 0.208166639, 0.218167556, 0.228168458, 0.238169444, 0.248170306, 0.258171236, 0.268172167, 0.278173083, 0.288174014, 0.298174931, 0.308175875, 0.318176792, 0.328177708, 0.338178625, 0.348179556, 0.358180472, 0.368181403, 0.378182319, 0.38818325, 0.398184167, 0.408185097, 0.418186042, 0.428186944, 0.438187903, 0.448188806, 0.458189736, 0.468190653, 0.478191569, 0.488192486, 0.498193417, 0.508194347, 0.518195264, 0.528196208, 0.538197111, 0.548198056, 0.558198972, 0.568199889, 0.578200819, 0.588201736, 0.598202736, 0.608203597, 0.618204542, 0.628205444, 0.638206375, 0.648207292, 0.658208208, 0.668209153, 0.678210139, 0.688211, 0.698211931, 0.708212861, 0.718213764, 0.728214694, 0.738215625, 0.748216528, 0.758217458, 0.768218389, 0.778219306, 0.788220222, 0.798221167, 0.808222069, 0.818223, 0.828223986, 0.838224847, 0.848225806, 0.85822675, 0.868227639, 0.878228542, 0.888229472, 0.898230403, 0.908231333, 0.918232236, 0.928233194, 0.938234083, 0.948235028, 0.958235931, 0.968236889, 0.978237778, 0.988238708, 0.998239653, 1.008240569, 1.0182415] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:44.404" endtime="20201112 10:15:44.405"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.399" endtime="20201112 10:15:44.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.408" endtime="20201112 10:15:44.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:44.411" endtime="20201112 10:15:44.431"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.410" endtime="20201112 10:15:44.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.406" endtime="20201112 10:15:44.432"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:41.884" endtime="20201112 10:15:44.433"></status>
</kw>
<msg timestamp="20201112 10:15:44.433" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:44.441" endtime="20201112 10:15:46.533"></status>
</kw>
<msg timestamp="20201112 10:15:46.535" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51386697, 'wakeups': [51396770, 51406757, 51416757, 51426757, 51436757...</msg>
<status status="PASS" starttime="20201112 10:15:44.439" endtime="20201112 10:15:46.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.540" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51386697, 'wakeups': [51396770, 51406757, 51416757, 51426757, 51436757...</msg>
<status status="PASS" starttime="20201112 10:15:46.537" endtime="20201112 10:15:46.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.543" endtime="20201112 10:15:46.546"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.437" endtime="20201112 10:15:46.547"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.435" endtime="20201112 10:15:46.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.553" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 51386697, 'wakeups': [51396770, 51406757, 51416757, 51426757, 51436757, 51446757, 51456757, 51466757, 51476757, 51486757, 51496757, 51506757, 51516757, 51526757...</msg>
<status status="PASS" starttime="20201112 10:15:46.550" endtime="20201112 10:15:46.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.562" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:46.560" endtime="20201112 10:15:46.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.566" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:46.564" endtime="20201112 10:15:46.567"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.555" endtime="20201112 10:15:46.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.576" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 10:15:46.574" endtime="20201112 10:15:46.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.580" level="INFO">VALUE: 51386697</msg>
<status status="PASS" starttime="20201112 10:15:46.578" endtime="20201112 10:15:46.581"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.569" endtime="20201112 10:15:46.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.590" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:46.588" endtime="20201112 10:15:46.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.595" level="INFO">VALUE: [51396770, 51406757, 51416757, 51426757, 51436757, 51446757, 51456757, 51466757, 51476757, 51486757, 51496757, 51506757, 51516757, 51526757, 51536757, 51546757, 51556757, 51566757, 51576757, 51586757, 51596757, 51606757, 51616757, 51626757, 51636757, 51646757, 51656757, 51666757, 51676757, 51686757, 51696757, 51706757, 51716757, 51726757, 51736757, 51746757, 51756757, 51766757, 51776757, 51786757, 51796757, 51806757, 51816757, 51826757, 51836757, 51846757, 51856757, 51866757, 51876757, 51886757, 51896757, 51906757, 51916757, 51926757, 51936757, 51946757, 51956757, 51966757, 51976757, 51986757, 51996757, 52006757, 52016757, 52026757, 52036757, 52046757, 52056757, 52066757, 52076757, 52086757, 52096757, 52106757, 52116757, 52126757, 52136757, 52146757, 52156757, 52166757, 52176757, 52186757, 52196757, 52206757, 52216757, 52226757, 52236757, 52246757, 52256757, 52266757, 52276757, 52286757, 52296757, 52306757, 52316757, 52326757, 52336757, 52346757, 52356757, 52366757, 52376757, 52386757]</msg>
<status status="PASS" starttime="20201112 10:15:46.592" endtime="20201112 10:15:46.595"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.583" endtime="20201112 10:15:46.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.606" endtime="20201112 10:15:46.897"></status>
</kw>
<msg timestamp="20201112 10:15:46.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028666611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.604" endtime="20201112 10:15:46.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018591889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028666611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:46.901" endtime="20201112 10:15:46.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.909" endtime="20201112 10:15:46.910"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.601" endtime="20201112 10:15:46.911"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.598" endtime="20201112 10:15:46.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:46.934" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:46.912" endtime="20201112 10:15:46.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.939" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 10:15:46.938" endtime="20201112 10:15:46.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.941" level="INFO">VALUE: 0.018591889</msg>
<status status="PASS" starttime="20201112 10:15:46.940" endtime="20201112 10:15:46.941"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.935" endtime="20201112 10:15:46.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.946" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:46.945" endtime="20201112 10:15:46.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:46.948" level="INFO">VALUE: [0.028666611, 0.038653681, 0.048654611, 0.058655542, 0.068656486, 0.078657375, 0.088658306, 0.098659222, 0.108660139, 0.118661069, 0.128661986, 0.138662917, 0.148663847, 0.158664819, 0.168665708, 0.178666611, 0.188667542, 0.198668486, 0.208669389, 0.218670319, 0.228671319, 0.238672167, 0.248673083, 0.258674028, 0.268674944, 0.278675875, 0.288676792, 0.298677806, 0.308678639, 0.318679569, 0.328680514, 0.338681417, 0.348682361, 0.358683333, 0.368684208, 0.378685139, 0.388686042, 0.398686972, 0.408687903, 0.418688819, 0.42868975, 0.438690653, 0.448691583, 0.458692514, 0.468693431, 0.478694347, 0.488695278, 0.498696208, 0.508697125, 0.518698056, 0.528698972, 0.538699944, 0.548700819, 0.55870175, 0.568702681, 0.578703583, 0.588704542, 0.598705431, 0.608706361, 0.618707278, 0.628708208, 0.638709125, 0.648710056, 0.658710972, 0.668711917, 0.678712847, 0.68871375, 0.698714681, 0.708715625, 0.718716528, 0.728717444, 0.738718375, 0.748719306, 0.758720236, 0.768721153, 0.778722069, 0.788723, 0.798723931, 0.808724903, 0.818725833, 0.828726694, 0.838727625, 0.848728556, 0.858729472, 0.868730403, 0.878731319, 0.888732306, 0.898733181, 0.908734097, 0.918735014, 0.928735944, 0.938736861, 0.948737792, 0.958738722, 0.968739653, 0.978740569, 0.988741486, 0.998742417, 1.008743333, 1.018744278] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:46.947" endtime="20201112 10:15:46.949"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.942" endtime="20201112 10:15:46.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.951" endtime="20201112 10:15:46.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:46.955" endtime="20201112 10:15:46.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.953" endtime="20201112 10:15:46.974"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.950" endtime="20201112 10:15:46.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:44.433" endtime="20201112 10:15:46.975"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.322" endtime="20201112 10:15:46.976"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:39.321" endtime="20201112 10:15:46.976"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:46.978" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:46.987" endtime="20201112 10:15:49.082"></status>
</kw>
<msg timestamp="20201112 10:15:49.083" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53933113, 'wakeups': [53943200, 53953187, 53963199, 53973199, 53983199...</msg>
<status status="PASS" starttime="20201112 10:15:46.986" endtime="20201112 10:15:49.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.090" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53933113, 'wakeups': [53943200, 53953187, 53963199, 53973199, 53983199...</msg>
<status status="PASS" starttime="20201112 10:15:49.085" endtime="20201112 10:15:49.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.093" endtime="20201112 10:15:49.097"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.983" endtime="20201112 10:15:49.098"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.980" endtime="20201112 10:15:49.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.105" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 53933113, 'wakeups': [53943200, 53953187, 53963199, 53973199, 53983199, 53993199, 54003199, 54013199, 54023199, 54033199, 54043199, 54053199, 54063199, 54073199...</msg>
<status status="PASS" starttime="20201112 10:15:49.100" endtime="20201112 10:15:49.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.116" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:49.113" endtime="20201112 10:15:49.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.121" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:49.119" endtime="20201112 10:15:49.121"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.107" endtime="20201112 10:15:49.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.131" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:15:49.129" endtime="20201112 10:15:49.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.135" level="INFO">VALUE: 53933113</msg>
<status status="PASS" starttime="20201112 10:15:49.133" endtime="20201112 10:15:49.136"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.124" endtime="20201112 10:15:49.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.145" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:49.143" endtime="20201112 10:15:49.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.150" level="INFO">VALUE: [53943200, 53953187, 53963199, 53973199, 53983199, 53993199, 54003199, 54013199, 54023199, 54033199, 54043199, 54053199, 54063199, 54073199, 54083199, 54093199, 54103199, 54113199, 54123199, 54133199, 54143199, 54153199, 54163199, 54173199, 54183199, 54193199, 54203199, 54213199, 54223199, 54233199, 54243199, 54253199, 54263199, 54273199, 54283199, 54293199, 54303199, 54313199, 54323199, 54333199, 54343199, 54353199, 54363199, 54373199, 54383199, 54393199, 54403199, 54413199, 54423199, 54433199, 54443199, 54453199, 54463199, 54473199, 54483199, 54493199, 54503199, 54513199, 54523199, 54533199, 54543199, 54553199, 54563199, 54573199, 54583199, 54593199, 54603199, 54613199, 54623199, 54633199, 54643199, 54653199, 54663199, 54673199, 54683199, 54693199, 54703199, 54713199, 54723199, 54733199, 54743199, 54753199, 54763199, 54773199, 54783199, 54793199, 54803199, 54813199, 54823199, 54833199, 54843199, 54853199, 54863199, 54873199, 54883199, 54893199, 54903199, 54913199, 54923199, 54933199]</msg>
<status status="PASS" starttime="20201112 10:15:49.147" endtime="20201112 10:15:49.150"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.138" endtime="20201112 10:15:49.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.157" endtime="20201112 10:15:49.449"></status>
</kw>
<msg timestamp="20201112 10:15:49.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031957778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.156" endtime="20201112 10:15:49.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021869694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031957778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:49.452" endtime="20201112 10:15:49.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.460" endtime="20201112 10:15:49.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.153" endtime="20201112 10:15:49.462"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.152" endtime="20201112 10:15:49.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:49.487" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:49.463" endtime="20201112 10:15:49.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.498" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:15:49.497" endtime="20201112 10:15:49.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.500" level="INFO">VALUE: 0.021869694</msg>
<status status="PASS" starttime="20201112 10:15:49.499" endtime="20201112 10:15:49.500"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.494" endtime="20201112 10:15:49.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.506" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:49.505" endtime="20201112 10:15:49.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:49.508" level="INFO">VALUE: [0.031957778, 0.041945278, 0.051958264, 0.061959236, 0.071960097, 0.081961042, 0.091961944, 0.101962889, 0.111963819, 0.121964722, 0.131965653, 0.141966569, 0.1519675, 0.161968431, 0.171969347, 0.181970264, 0.191971194, 0.201972111, 0.211973042, 0.221974014, 0.231974889, 0.241975819, 0.251976764, 0.26197775, 0.271978597, 0.281979514, 0.291980431, 0.301981361, 0.311982278, 0.321983208, 0.331984139, 0.341985069, 0.351985986, 0.361986903, 0.371987847, 0.381988792, 0.391989681, 0.401990625, 0.411991528, 0.421992458, 0.431993375, 0.441994306, 0.45199525, 0.461996153, 0.471997097, 0.481998014, 0.491998931, 0.501999861, 0.512000778, 0.522001708, 0.532002639, 0.542003569, 0.552004486, 0.562005417, 0.572006347, 0.582007264, 0.592008181, 0.602009111, 0.612010042, 0.622010958, 0.632011889, 0.642012819, 0.65201375, 0.662014681, 0.672015583, 0.682016514, 0.692017458, 0.702018375, 0.712019319, 0.722020208, 0.732021139, 0.742022097, 0.752023, 0.762023931, 0.772024861, 0.782025764, 0.792026694, 0.802027625, 0.812028542, 0.822029472, 0.832030389, 0.842031319, 0.85203225, 0.862033181, 0.872034111, 0.882035042, 0.892035958, 0.902036889, 0.912037806, 0.922038736, 0.932039653, 0.942040569, 0.9520415, 0.962042444, 0.972043347, 0.982044292, 0.992045208, 1.002046125, 1.012047083, 1.022047972] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:49.507" endtime="20201112 10:15:49.509"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.502" endtime="20201112 10:15:49.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.511" endtime="20201112 10:15:49.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:49.515" endtime="20201112 10:15:49.534"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.513" endtime="20201112 10:15:49.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.510" endtime="20201112 10:15:49.535"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.979" endtime="20201112 10:15:49.535"></status>
</kw>
<msg timestamp="20201112 10:15:49.536" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:49.544" endtime="20201112 10:15:51.637"></status>
</kw>
<msg timestamp="20201112 10:15:51.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56489480, 'wakeups': [56499567, 56509554, 56519565, 56529566, 56539566...</msg>
<status status="PASS" starttime="20201112 10:15:49.542" endtime="20201112 10:15:51.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.644" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56489480, 'wakeups': [56499567, 56509554, 56519565, 56529566, 56539566...</msg>
<status status="PASS" starttime="20201112 10:15:51.640" endtime="20201112 10:15:51.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.646" endtime="20201112 10:15:51.649"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.540" endtime="20201112 10:15:51.651"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.538" endtime="20201112 10:15:51.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:51.657" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 56489480, 'wakeups': [56499567, 56509554, 56519565, 56529566, 56539566, 56549566, 56559566, 56569566, 56579566, 56589566, 56599566, 56609566, 56619566, 56629566...</msg>
<status status="PASS" starttime="20201112 10:15:51.653" endtime="20201112 10:15:51.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.667" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:51.665" endtime="20201112 10:15:51.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.672" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:51.670" endtime="20201112 10:15:51.672"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.659" endtime="20201112 10:15:51.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.682" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:15:51.680" endtime="20201112 10:15:51.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.687" level="INFO">VALUE: 56489480</msg>
<status status="PASS" starttime="20201112 10:15:51.685" endtime="20201112 10:15:51.687"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.675" endtime="20201112 10:15:51.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.697" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:51.695" endtime="20201112 10:15:51.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:51.701" level="INFO">VALUE: [56499567, 56509554, 56519565, 56529566, 56539566, 56549566, 56559566, 56569566, 56579566, 56589566, 56599566, 56609566, 56619566, 56629566, 56639566, 56649566, 56659566, 56669566, 56679566, 56689566, 56699566, 56709566, 56719566, 56729566, 56739566, 56749566, 56759566, 56769566, 56779566, 56789566, 56799566, 56809566, 56819566, 56829566, 56839566, 56849566, 56859566, 56869566, 56879566, 56889566, 56899566, 56909566, 56919566, 56929566, 56939566, 56949566, 56959566, 56969566, 56979566, 56989566, 56999566, 57009566, 57019566, 57029566, 57039566, 57049566, 57059566, 57069566, 57079566, 57089566, 57099566, 57109566, 57119566, 57129566, 57139566, 57149566, 57159566, 57169566, 57179566, 57189566, 57199566, 57209566, 57219566, 57229566, 57239566, 57249566, 57259566, 57269566, 57279566, 57289566, 57299566, 57309566, 57319566, 57329566, 57339566, 57349566, 57359566, 57369566, 57379566, 57389566, 57399566, 57409566, 57419566, 57429566, 57439566, 57449566, 57459566, 57469566, 57479566, 57489566]</msg>
<status status="PASS" starttime="20201112 10:15:51.699" endtime="20201112 10:15:51.702"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.690" endtime="20201112 10:15:51.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:51.713" endtime="20201112 10:15:52.004"></status>
</kw>
<msg timestamp="20201112 10:15:52.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018221139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028309639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:51.712" endtime="20201112 10:15:52.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018221139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028309639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:52.008" endtime="20201112 10:15:52.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.015" endtime="20201112 10:15:52.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.708" endtime="20201112 10:15:52.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:51.704" endtime="20201112 10:15:52.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:52.042" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:52.019" endtime="20201112 10:15:52.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.046" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:15:52.045" endtime="20201112 10:15:52.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.048" level="INFO">VALUE: 0.018221139</msg>
<status status="PASS" starttime="20201112 10:15:52.047" endtime="20201112 10:15:52.049"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.043" endtime="20201112 10:15:52.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.054" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:52.053" endtime="20201112 10:15:52.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:52.056" level="INFO">VALUE: [0.028309639, 0.038297194, 0.048309139, 0.058311042, 0.068312028, 0.078312889, 0.088313806, 0.098314736, 0.108315653, 0.118316569, 0.1283175, 0.138318431, 0.148319333, 0.158320264, 0.168321181, 0.178322111, 0.188323056, 0.198323972, 0.208324889, 0.218325861, 0.22832675, 0.238327653, 0.248328597, 0.2583295, 0.268330431, 0.278331347, 0.288332361, 0.298333194, 0.308334139, 0.318335042, 0.328335972, 0.338336889, 0.348337833, 0.358338736, 0.368339708, 0.378340597, 0.388341514, 0.398342458, 0.408343361, 0.418344306, 0.428345222, 0.438346153, 0.448347056, 0.458347986, 0.468348917, 0.478349833, 0.488350778, 0.498351681, 0.508352625, 0.518353556, 0.528354472, 0.538355389, 0.548356306, 0.558357319, 0.568358194, 0.578359083, 0.588360014, 0.598360931, 0.608361861, 0.618362778, 0.628363722, 0.638364653, 0.648365583, 0.658366486, 0.668367417, 0.678368347, 0.688369264, 0.698370222, 0.708371181, 0.718372028, 0.728372986, 0.738373875, 0.748374819, 0.758375736, 0.768376653, 0.778377597, 0.788378514, 0.798379444, 0.808380361, 0.818381278, 0.828382222, 0.838383181, 0.848384069, 0.858384986, 0.868385917, 0.878386889, 0.88838775, 0.898388681, 0.908389597, 0.918390528, 0.928391458, 0.938392389, 0.948393306, 0.958394236, 0.968395153, 0.978396083, 0.988397, 0.998397931, 1.008398847, 1.018399778] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:52.055" endtime="20201112 10:15:52.056"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.050" endtime="20201112 10:15:52.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.059" endtime="20201112 10:15:52.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:52.063" endtime="20201112 10:15:52.082"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.061" endtime="20201112 10:15:52.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.057" endtime="20201112 10:15:52.083"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:49.536" endtime="20201112 10:15:52.083"></status>
</kw>
<msg timestamp="20201112 10:15:52.083" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:52.092" endtime="20201112 10:15:54.185"></status>
</kw>
<msg timestamp="20201112 10:15:54.186" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59037679, 'wakeups': [59047766, 59057753, 59067764, 59077765, 59087765...</msg>
<status status="PASS" starttime="20201112 10:15:52.090" endtime="20201112 10:15:54.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.192" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59037679, 'wakeups': [59047766, 59057753, 59067764, 59077765, 59087765...</msg>
<status status="PASS" starttime="20201112 10:15:54.189" endtime="20201112 10:15:54.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.195" endtime="20201112 10:15:54.198"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.088" endtime="20201112 10:15:54.199"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.086" endtime="20201112 10:15:54.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.205" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 59037679, 'wakeups': [59047766, 59057753, 59067764, 59077765, 59087765, 59097765, 59107765, 59117765, 59127765, 59137765, 59147765, 59157765, 59167765, 59177765...</msg>
<status status="PASS" starttime="20201112 10:15:54.201" endtime="20201112 10:15:54.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.214" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:54.212" endtime="20201112 10:15:54.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.218" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:54.216" endtime="20201112 10:15:54.219"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.207" endtime="20201112 10:15:54.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.228" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 10:15:54.226" endtime="20201112 10:15:54.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.232" level="INFO">VALUE: 59037679</msg>
<status status="PASS" starttime="20201112 10:15:54.230" endtime="20201112 10:15:54.233"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.221" endtime="20201112 10:15:54.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.244" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:54.240" endtime="20201112 10:15:54.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.249" level="INFO">VALUE: [59047766, 59057753, 59067764, 59077765, 59087765, 59097765, 59107765, 59117765, 59127765, 59137765, 59147765, 59157765, 59167765, 59177765, 59187765, 59197765, 59207765, 59217765, 59227765, 59237765, 59247765, 59257765, 59267765, 59277765, 59287765, 59297765, 59307765, 59317765, 59327765, 59337765, 59347765, 59357765, 59367765, 59377765, 59387765, 59397765, 59407765, 59417765, 59427765, 59437765, 59447765, 59457765, 59467765, 59477765, 59487765, 59497765, 59507765, 59517765, 59527765, 59537765, 59547765, 59557765, 59567765, 59577765, 59587765, 59597765, 59607765, 59617765, 59627765, 59637765, 59647765, 59657765, 59667765, 59677765, 59687765, 59697765, 59707765, 59717765, 59727765, 59737765, 59747765, 59757765, 59767765, 59777765, 59787765, 59797765, 59807765, 59817765, 59827765, 59837765, 59847765, 59857765, 59867765, 59877765, 59887765, 59897765, 59907765, 59917765, 59927765, 59937765, 59947765, 59957765, 59967765, 59977765, 59987765, 59997765, 60007765, 60017765, 60027765, 60037765]</msg>
<status status="PASS" starttime="20201112 10:15:54.247" endtime="20201112 10:15:54.250"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.235" endtime="20201112 10:15:54.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.265" endtime="20201112 10:15:54.557"></status>
</kw>
<msg timestamp="20201112 10:15:54.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018521264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028609514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.262" endtime="20201112 10:15:54.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018521264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028609514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:54.561" endtime="20201112 10:15:54.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.568" endtime="20201112 10:15:54.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.256" endtime="20201112 10:15:54.570"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.252" endtime="20201112 10:15:54.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:54.595" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:54.571" endtime="20201112 10:15:54.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.599" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 10:15:54.598" endtime="20201112 10:15:54.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.601" level="INFO">VALUE: 0.018521264</msg>
<status status="PASS" starttime="20201112 10:15:54.600" endtime="20201112 10:15:54.601"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.596" endtime="20201112 10:15:54.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.606" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:54.605" endtime="20201112 10:15:54.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:54.608" level="INFO">VALUE: [0.028609514, 0.038597, 0.048608986, 0.058610917, 0.068611819, 0.07861275, 0.088613681, 0.098614597, 0.108615514, 0.118616472, 0.128617361, 0.138618278, 0.148619208, 0.158620139, 0.168621069, 0.178621986, 0.188622903, 0.198623819, 0.20862475, 0.218625681, 0.228626597, 0.238627514, 0.248628458, 0.258629361, 0.268630292, 0.278631222, 0.288632139, 0.298633056, 0.308634, 0.318634917, 0.328635833, 0.338636806, 0.348637681, 0.358638611, 0.368639542, 0.378640472, 0.388641389, 0.398642319, 0.408643236, 0.418644153, 0.428645111, 0.438646, 0.448646958, 0.458647861, 0.468648778, 0.478649722, 0.488650625, 0.498651569, 0.508652472, 0.518653417, 0.528654347, 0.53865525, 0.548656194, 0.558657125, 0.568658042, 0.578659042, 0.588659889, 0.598660819, 0.608661722, 0.618662653, 0.628663597, 0.6386645, 0.648665431, 0.658666375, 0.668667278, 0.678668292, 0.688669139, 0.698670069, 0.708670986, 0.718671903, 0.728672833, 0.738673778, 0.748674694, 0.758675625, 0.768676556, 0.778677458, 0.788678389, 0.798679319, 0.808680236, 0.818681153, 0.828682125, 0.838683, 0.848683931, 0.858684861, 0.868685806, 0.878686708, 0.888687625, 0.898688556, 0.908689486, 0.918690417, 0.928691347, 0.938692264, 0.948693208, 0.958694111, 0.968695042, 0.978695958, 0.988696889, 0.998697819, 1.008698736, 1.018699667] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:54.607" endtime="20201112 10:15:54.609"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.602" endtime="20201112 10:15:54.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.612" endtime="20201112 10:15:54.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:54.616" endtime="20201112 10:15:54.635"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.613" endtime="20201112 10:15:54.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.610" endtime="20201112 10:15:54.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:52.084" endtime="20201112 10:15:54.636"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.977" endtime="20201112 10:15:54.637"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:46.976" endtime="20201112 10:15:54.637"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:15:54.640" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:54.652" endtime="20201112 10:15:56.744"></status>
</kw>
<msg timestamp="20201112 10:15:56.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61597874, 'wakeups': [61607976, 61617962, 61627961, 61637961, 61647961...</msg>
<status status="PASS" starttime="20201112 10:15:54.646" endtime="20201112 10:15:56.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.751" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61597874, 'wakeups': [61607976, 61617962, 61627961, 61637961, 61647961...</msg>
<status status="PASS" starttime="20201112 10:15:56.748" endtime="20201112 10:15:56.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.754" endtime="20201112 10:15:56.757"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.643" endtime="20201112 10:15:56.758"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.642" endtime="20201112 10:15:56.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:56.764" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 61597874, 'wakeups': [61607976, 61617962, 61627961, 61637961, 61647961, 61657961, 61667961, 61677961, 61687961, 61697961, 61707961, 61717961, 61727961, 61737961...</msg>
<status status="PASS" starttime="20201112 10:15:56.760" endtime="20201112 10:15:56.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.773" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:56.771" endtime="20201112 10:15:56.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.777" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:56.775" endtime="20201112 10:15:56.777"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.766" endtime="20201112 10:15:56.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.787" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:15:56.785" endtime="20201112 10:15:56.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.791" level="INFO">VALUE: 61597874</msg>
<status status="PASS" starttime="20201112 10:15:56.789" endtime="20201112 10:15:56.792"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.780" endtime="20201112 10:15:56.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.801" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:56.799" endtime="20201112 10:15:56.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:56.806" level="INFO">VALUE: [61607976, 61617962, 61627961, 61637961, 61647961, 61657961, 61667961, 61677961, 61687961, 61697961, 61707961, 61717961, 61727961, 61737961, 61747961, 61757961, 61767961, 61777961, 61787961, 61797961, 61807961, 61817961, 61827961, 61837961, 61847961, 61857961, 61867961, 61877961, 61887961, 61897961, 61907961, 61917961, 61927961, 61937961, 61947961, 61957961, 61967961, 61977961, 61987961, 61997961, 62007961, 62017961, 62027961, 62037961, 62047961, 62057961, 62067961, 62077961, 62087961, 62097961, 62107961, 62117961, 62127961, 62137961, 62147961, 62157961, 62167961, 62177961, 62187961, 62197961, 62207961, 62217961, 62227961, 62237961, 62247961, 62257961, 62267961, 62277961, 62287961, 62297961, 62307961, 62317961, 62327961, 62337961, 62347961, 62357961, 62367961, 62377961, 62387961, 62397961, 62407961, 62417961, 62427961, 62437961, 62447961, 62457961, 62467961, 62477961, 62487961, 62497961, 62507961, 62517961, 62527961, 62537961, 62547961, 62557961, 62567961, 62577961, 62587961, 62597961]</msg>
<status status="PASS" starttime="20201112 10:15:56.803" endtime="20201112 10:15:56.806"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.794" endtime="20201112 10:15:56.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:56.821" endtime="20201112 10:15:57.112"></status>
</kw>
<msg timestamp="20201112 10:15:57.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025538264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035641347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:56.817" endtime="20201112 10:15:57.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025538264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035641347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:57.116" endtime="20201112 10:15:57.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.123" endtime="20201112 10:15:57.125"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.812" endtime="20201112 10:15:57.126"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:56.809" endtime="20201112 10:15:57.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:57.150" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:57.127" endtime="20201112 10:15:57.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.154" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:15:57.153" endtime="20201112 10:15:57.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.156" level="INFO">VALUE: 0.025538264</msg>
<status status="PASS" starttime="20201112 10:15:57.155" endtime="20201112 10:15:57.156"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.151" endtime="20201112 10:15:57.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.161" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:57.160" endtime="20201112 10:15:57.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:57.163" level="INFO">VALUE: [0.035641347, 0.045627778, 0.055627708, 0.065628611, 0.075629542, 0.085630444, 0.095631389, 0.105632292, 0.11563325, 0.125634153, 0.135635097, 0.145636, 0.155636944, 0.165637861, 0.175638792, 0.185639694, 0.195640639, 0.205641542, 0.215642472, 0.225643389, 0.235644319, 0.24564525, 0.255646181, 0.265647083, 0.275648042, 0.285648931, 0.295649875, 0.305650778, 0.315651736, 0.325652639, 0.335653569, 0.345654542, 0.355655417, 0.365656333, 0.375657264, 0.385658181, 0.395659125, 0.405660042, 0.415660972, 0.425661889, 0.435662819, 0.445663764, 0.455664667, 0.465665667, 0.475666583, 0.485667431, 0.495668375, 0.505669306, 0.515670264, 0.525671181, 0.535672125, 0.545672986, 0.555673931, 0.565674833, 0.575675778, 0.585676694, 0.595677667, 0.605678556, 0.615679486, 0.625680403, 0.635681333, 0.645682264, 0.655683181, 0.665684125, 0.675685028, 0.685685944, 0.695686903, 0.705687792, 0.715688736, 0.725689653, 0.735690597, 0.745691569, 0.755692458, 0.765693417, 0.775694306, 0.785695222, 0.795696139, 0.805697056, 0.815698042, 0.825698903, 0.835699847, 0.84570075, 0.855701694, 0.865702681, 0.875703542, 0.885704458, 0.895705431, 0.905706319, 0.915707264, 0.925708222, 0.935709097, 0.945710014, 0.955710944, 0.965711861, 0.975712806, 0.985713736, 0.995714653, 1.005715583, 1.015716514, 1.025717417] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:57.162" endtime="20201112 10:15:57.164"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.157" endtime="20201112 10:15:57.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.166" endtime="20201112 10:15:57.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:57.170" endtime="20201112 10:15:57.189"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.168" endtime="20201112 10:15:57.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.165" endtime="20201112 10:15:57.190"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.640" endtime="20201112 10:15:57.190"></status>
</kw>
<msg timestamp="20201112 10:15:57.191" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:57.199" endtime="20201112 10:15:59.292"></status>
</kw>
<msg timestamp="20201112 10:15:59.294" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64145527, 'wakeups': [64155630, 64165614, 64175614, 64185614, 64195614...</msg>
<status status="PASS" starttime="20201112 10:15:57.197" endtime="20201112 10:15:59.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.300" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64145527, 'wakeups': [64155630, 64165614, 64175614, 64185614, 64195614...</msg>
<status status="PASS" starttime="20201112 10:15:59.296" endtime="20201112 10:15:59.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.302" endtime="20201112 10:15:59.305"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.195" endtime="20201112 10:15:59.306"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.193" endtime="20201112 10:15:59.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.313" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 64145527, 'wakeups': [64155630, 64165614, 64175614, 64185614, 64195614, 64205614, 64215614, 64225614, 64235614, 64245614, 64255614, 64265614, 64275614, 64285614...</msg>
<status status="PASS" starttime="20201112 10:15:59.309" endtime="20201112 10:15:59.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.322" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:15:59.320" endtime="20201112 10:15:59.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.326" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:15:59.324" endtime="20201112 10:15:59.326"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.315" endtime="20201112 10:15:59.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.336" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:15:59.334" endtime="20201112 10:15:59.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.340" level="INFO">VALUE: 64145527</msg>
<status status="PASS" starttime="20201112 10:15:59.338" endtime="20201112 10:15:59.341"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.329" endtime="20201112 10:15:59.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.350" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:59.348" endtime="20201112 10:15:59.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.355" level="INFO">VALUE: [64155630, 64165614, 64175614, 64185614, 64195614, 64205614, 64215614, 64225614, 64235614, 64245614, 64255614, 64265614, 64275614, 64285614, 64295614, 64305614, 64315614, 64325614, 64335614, 64345614, 64355614, 64365614, 64375614, 64385614, 64395614, 64405614, 64415614, 64425614, 64435614, 64445614, 64455614, 64465614, 64475614, 64485614, 64495614, 64505614, 64515614, 64525614, 64535614, 64545614, 64555614, 64565614, 64575614, 64585614, 64595614, 64605614, 64615614, 64625614, 64635614, 64645614, 64655614, 64665614, 64675614, 64685614, 64695614, 64705614, 64715614, 64725614, 64735614, 64745614, 64755614, 64765614, 64775614, 64785614, 64795614, 64805614, 64815614, 64825614, 64835614, 64845614, 64855614, 64865614, 64875614, 64885614, 64895614, 64905614, 64915614, 64925614, 64935614, 64945614, 64955614, 64965614, 64975614, 64985614, 64995614, 65005614, 65015614, 65025614, 65035614, 65045614, 65055614, 65065614, 65075614, 65085614, 65095614, 65105614, 65115614, 65125614, 65135614, 65145614]</msg>
<status status="PASS" starttime="20201112 10:15:59.352" endtime="20201112 10:15:59.355"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.343" endtime="20201112 10:15:59.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.370" endtime="20201112 10:15:59.661"></status>
</kw>
<msg timestamp="20201112 10:15:59.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019096444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029200236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.366" endtime="20201112 10:15:59.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019096444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029200236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:15:59.665" endtime="20201112 10:15:59.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.672" endtime="20201112 10:15:59.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.361" endtime="20201112 10:15:59.674"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.358" endtime="20201112 10:15:59.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:15:59.700" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:15:59.676" endtime="20201112 10:15:59.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.704" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:15:59.703" endtime="20201112 10:15:59.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.706" level="INFO">VALUE: 0.019096444</msg>
<status status="PASS" starttime="20201112 10:15:59.705" endtime="20201112 10:15:59.706"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.701" endtime="20201112 10:15:59.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.711" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:15:59.710" endtime="20201112 10:15:59.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:15:59.718" level="INFO">VALUE: [0.029200236, 0.039184625, 0.049185556, 0.059186472, 0.069187403, 0.079188319, 0.08918925, 0.099190167, 0.109191097, 0.119192028, 0.129192958, 0.139193917, 0.149194806, 0.159195708, 0.169196639, 0.179197556, 0.1891985, 0.199199403, 0.209200347, 0.21920125, 0.229202194, 0.239203097, 0.249204042, 0.259204944, 0.269205889, 0.279206875, 0.289207736, 0.299208653, 0.309209583, 0.319210569, 0.329211458, 0.339212347, 0.349213292, 0.359214208, 0.369215139, 0.379216042, 0.389217056, 0.399217903, 0.409218833, 0.419219792, 0.429220681, 0.439221597, 0.449222528, 0.459223444, 0.469224389, 0.479225292, 0.489226236, 0.499227167, 0.509228097, 0.519229014, 0.529229931, 0.539230847, 0.549231806, 0.559232694, 0.569233653, 0.579234569, 0.589235486, 0.599236403, 0.609237347, 0.619238264, 0.629239208, 0.639240111, 0.649241042, 0.659241958, 0.669242889, 0.679243806, 0.689244736, 0.699245653, 0.709246625, 0.7192475, 0.729248444, 0.739249361, 0.749250292, 0.759251222, 0.769252153, 0.779253069, 0.789254, 0.799254903, 0.809255847, 0.819256764, 0.829257694, 0.839258611, 0.849259542, 0.859260458, 0.869261403, 0.879262319, 0.88926325, 0.899264167, 0.909265111, 0.919266014, 0.929266944, 0.939267861, 0.949268806, 0.959269708, 0.969270667, 0.979271569, 0.9892725, 0.999273417, 1.009274375, 1.019275264] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:15:59.717" endtime="20201112 10:15:59.719"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.708" endtime="20201112 10:15:59.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.721" endtime="20201112 10:15:59.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:15:59.725" endtime="20201112 10:15:59.744"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.723" endtime="20201112 10:15:59.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.720" endtime="20201112 10:15:59.745"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:57.191" endtime="20201112 10:15:59.745"></status>
</kw>
<msg timestamp="20201112 10:15:59.746" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:15:59.754" endtime="20201112 10:16:01.847"></status>
</kw>
<msg timestamp="20201112 10:16:01.848" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66699469, 'wakeups': [66709571, 66719556, 66729556, 66739556, 66749556...</msg>
<status status="PASS" starttime="20201112 10:15:59.752" endtime="20201112 10:16:01.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.854" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66699469, 'wakeups': [66709571, 66719556, 66729556, 66739556, 66749556...</msg>
<status status="PASS" starttime="20201112 10:16:01.850" endtime="20201112 10:16:01.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.856" endtime="20201112 10:16:01.859"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.750" endtime="20201112 10:16:01.860"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.747" endtime="20201112 10:16:01.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:01.867" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 66699469, 'wakeups': [66709571, 66719556, 66729556, 66739556, 66749556, 66759556, 66769556, 66779556, 66789556, 66799556, 66809556, 66819556, 66829556, 66839556...</msg>
<status status="PASS" starttime="20201112 10:16:01.863" endtime="20201112 10:16:01.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.875" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:01.873" endtime="20201112 10:16:01.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.879" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:01.877" endtime="20201112 10:16:01.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.868" endtime="20201112 10:16:01.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.889" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:01.887" endtime="20201112 10:16:01.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.895" level="INFO">VALUE: 66699469</msg>
<status status="PASS" starttime="20201112 10:16:01.891" endtime="20201112 10:16:01.896"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.882" endtime="20201112 10:16:01.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.906" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:01.904" endtime="20201112 10:16:01.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:01.911" level="INFO">VALUE: [66709571, 66719556, 66729556, 66739556, 66749556, 66759556, 66769556, 66779556, 66789556, 66799556, 66809556, 66819556, 66829556, 66839556, 66849556, 66859556, 66869556, 66879556, 66889556, 66899556, 66909556, 66919556, 66929556, 66939556, 66949556, 66959556, 66969556, 66979556, 66989556, 66999556, 67009556, 67019556, 67029556, 67039556, 67049556, 67059556, 67069556, 67079556, 67089556, 67099556, 67109556, 67119556, 67129556, 67139556, 67149556, 67159556, 67169556, 67179556, 67189556, 67199556, 67209556, 67219556, 67229556, 67239556, 67249556, 67259556, 67269556, 67279556, 67289556, 67299556, 67309556, 67319556, 67329556, 67339556, 67349556, 67359556, 67369556, 67379556, 67389556, 67399556, 67409556, 67419556, 67429556, 67439556, 67449556, 67459556, 67469556, 67479556, 67489556, 67499556, 67509556, 67519556, 67529556, 67539556, 67549556, 67559556, 67569556, 67579556, 67589556, 67599556, 67609556, 67619556, 67629556, 67639556, 67649556, 67659556, 67669556, 67679556, 67689556, 67699556]</msg>
<status status="PASS" starttime="20201112 10:16:01.909" endtime="20201112 10:16:01.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.899" endtime="20201112 10:16:01.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:01.926" endtime="20201112 10:16:02.219"></status>
</kw>
<msg timestamp="20201112 10:16:02.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018179889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028283347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:01.923" endtime="20201112 10:16:02.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018179889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028283347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:02.223" endtime="20201112 10:16:02.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.230" endtime="20201112 10:16:02.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.918" endtime="20201112 10:16:02.232"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:01.914" endtime="20201112 10:16:02.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:02.256" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:02.233" endtime="20201112 10:16:02.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.261" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 10:16:02.260" endtime="20201112 10:16:02.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.263" level="INFO">VALUE: 0.018179889</msg>
<status status="PASS" starttime="20201112 10:16:02.262" endtime="20201112 10:16:02.263"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.257" endtime="20201112 10:16:02.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.268" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:02.267" endtime="20201112 10:16:02.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:02.271" level="INFO">VALUE: [0.028283347, 0.03826875, 0.048269667, 0.058270597, 0.068271514, 0.078272444, 0.088273403, 0.098274292, 0.108275208, 0.118276153, 0.128277056, 0.138278014, 0.148278889, 0.158279875, 0.168280736, 0.178281681, 0.188282583, 0.198283542, 0.208284431, 0.218285389, 0.228286278, 0.238287222, 0.248288125, 0.258289097, 0.268289986, 0.278290917, 0.288291833, 0.298292778, 0.308293681, 0.318294625, 0.328295569, 0.338296458, 0.348297389, 0.358298319, 0.368299222, 0.378300167, 0.388301083, 0.398302028, 0.408302931, 0.418303875, 0.428304778, 0.438305708, 0.448306611, 0.458307569, 0.468308472, 0.478309403, 0.488310319, 0.49831125, 0.50831225, 0.518313125, 0.528314028, 0.538314958, 0.548315861, 0.558316819, 0.568317736, 0.578318708, 0.588319569, 0.5983205, 0.608321417, 0.618322361, 0.628323264, 0.638324194, 0.648325111, 0.658326069, 0.668326958, 0.678327903, 0.688328806, 0.69832975, 0.708330653, 0.718331597, 0.728332528, 0.738333444, 0.748334389, 0.758335306, 0.768336222, 0.778337167, 0.788338056, 0.798339, 0.808339903, 0.818340847, 0.828341819, 0.838342708, 0.848343611, 0.858344556, 0.868345472, 0.878346431, 0.888347306, 0.89834825, 0.908349153, 0.918350097, 0.928351014, 0.938351944, 0.948352861, 0.958353792, 0.968354708, 0.978355667, 0.988356556, 0.9983575, 1.008358417, 1.018359389] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:02.270" endtime="20201112 10:16:02.271"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.264" endtime="20201112 10:16:02.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.274" endtime="20201112 10:16:02.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:02.277" endtime="20201112 10:16:02.297"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.276" endtime="20201112 10:16:02.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.272" endtime="20201112 10:16:02.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:59.746" endtime="20201112 10:16:02.298"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.638" endtime="20201112 10:16:02.299"></status>
</kw>
<status status="PASS" starttime="20201112 10:15:54.637" endtime="20201112 10:16:02.299"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 10:16:02.301" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:02.309" endtime="20201112 10:16:04.402"></status>
</kw>
<msg timestamp="20201112 10:16:04.403" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69255420, 'wakeups': [69265538, 69275524, 69285536, 69295535, 693055...</msg>
<status status="PASS" starttime="20201112 10:16:02.308" endtime="20201112 10:16:04.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.409" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69255420, 'wakeups': [69265538, 69275524, 69285536, 69295535, 693055...</msg>
<status status="PASS" starttime="20201112 10:16:04.406" endtime="20201112 10:16:04.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.412" endtime="20201112 10:16:04.415"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.305" endtime="20201112 10:16:04.416"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.303" endtime="20201112 10:16:04.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.422" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 69255420, 'wakeups': [69265538, 69275524, 69285536, 69295535, 69305535, 69315536, 69325535, 69335535, 69345536, 69355535, 69365535, 69375536, 69385535, 69395535...</msg>
<status status="PASS" starttime="20201112 10:16:04.419" endtime="20201112 10:16:04.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.431" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:04.429" endtime="20201112 10:16:04.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.435" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:04.433" endtime="20201112 10:16:04.436"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.424" endtime="20201112 10:16:04.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.445" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:04.443" endtime="20201112 10:16:04.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.449" level="INFO">VALUE: 69255420</msg>
<status status="PASS" starttime="20201112 10:16:04.447" endtime="20201112 10:16:04.450"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.438" endtime="20201112 10:16:04.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.459" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:04.457" endtime="20201112 10:16:04.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.464" level="INFO">VALUE: [69265538, 69275524, 69285536, 69295535, 69305535, 69315536, 69325535, 69335535, 69345536, 69355535, 69365535, 69375536, 69385535, 69395535, 69405536, 69415535, 69425535, 69435536, 69445535, 69455535, 69465536, 69475535, 69485535, 69495536, 69505535, 69515535, 69525536, 69535535, 69545535, 69555536, 69565535, 69575535, 69585536, 69595535, 69605535, 69615536, 69625535, 69635535, 69645536, 69655535, 69665535, 69675536, 69685535, 69695535, 69705536, 69715535, 69725535, 69735536, 69745535, 69755535, 69765536, 69775535, 69785535, 69795536, 69805535, 69815535, 69825536, 69835535, 69845535, 69855536, 69865535, 69875535, 69885536, 69895535, 69905535, 69915536, 69925535, 69935535, 69945536, 69955535, 69965535, 69975536, 69985535, 69995535, 70005536, 70015535, 70025535, 70035536, 70045535, 70055535, 70065536, 70075535, 70085535, 70095536, 70105535, 70115535, 70125536, 70135535, 70145535, 70155536, 70165535, 70175535, 70185536, 70195535, 70205535, 70215536, 70225535, 70235535, 70245536, 70255535]</msg>
<status status="PASS" starttime="20201112 10:16:04.462" endtime="20201112 10:16:04.465"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.452" endtime="20201112 10:16:04.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.481" endtime="20201112 10:16:04.773"></status>
</kw>
<msg timestamp="20201112 10:16:04.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021501056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031620819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.476" endtime="20201112 10:16:04.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021501056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031620819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:04.777" endtime="20201112 10:16:04.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.784" endtime="20201112 10:16:04.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.470" endtime="20201112 10:16:04.786"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.467" endtime="20201112 10:16:04.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:04.811" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:04.787" endtime="20201112 10:16:04.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.815" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:04.814" endtime="20201112 10:16:04.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.817" level="INFO">VALUE: 0.021501056</msg>
<status status="PASS" starttime="20201112 10:16:04.816" endtime="20201112 10:16:04.817"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.812" endtime="20201112 10:16:04.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.822" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:04.821" endtime="20201112 10:16:04.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:04.824" level="INFO">VALUE: [0.031620819, 0.041607319, 0.051620208, 0.061620361, 0.071621042, 0.081622986, 0.091623153, 0.101623889, 0.111625736, 0.121625889, 0.131626583, 0.141628514, 0.151628667, 0.161629361, 0.171631292, 0.181631431, 0.191632181, 0.201634056, 0.211634222, 0.221634931, 0.231636833, 0.241636972, 0.251637681, 0.261639597, 0.271639764, 0.281640458, 0.291642375, 0.301642542, 0.31164325, 0.321645139, 0.331645292, 0.341646042, 0.351647931, 0.361648125, 0.371648819, 0.381650694, 0.391650847, 0.401651542, 0.411653486, 0.421653653, 0.431654319, 0.44165625, 0.451656389, 0.461657097, 0.471659042, 0.481659167, 0.491659861, 0.501661792, 0.511661944, 0.521662639, 0.531664569, 0.541664722, 0.551665417, 0.561667347, 0.571667486, 0.581668194, 0.591670125, 0.601670264, 0.611670972, 0.621672903, 0.631673042, 0.64167375, 0.651675667, 0.661675819, 0.671676514, 0.681678444, 0.691678597, 0.701679306, 0.711681264, 0.721681375, 0.731682069, 0.741684014, 0.751684181, 0.761684875, 0.771686778, 0.781686931, 0.791687625, 0.801689542, 0.811689694, 0.821690389, 0.831692319, 0.841692472, 0.851693167, 0.861695097, 0.871695278, 0.881695958, 0.891697931, 0.901698028, 0.911698736, 0.921700653, 0.931700847, 0.9417015, 0.951703431, 0.961703583, 0.971704292, 0.981706194, 0.991706347, 1.001707069, 1.011708986, 1.021709139] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:04.823" endtime="20201112 10:16:04.825"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.819" endtime="20201112 10:16:04.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.827" endtime="20201112 10:16:04.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:04.831" endtime="20201112 10:16:04.850"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.829" endtime="20201112 10:16:04.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.826" endtime="20201112 10:16:04.851"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.302" endtime="20201112 10:16:04.852"></status>
</kw>
<msg timestamp="20201112 10:16:04.852" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:04.861" endtime="20201112 10:16:06.954"></status>
</kw>
<msg timestamp="20201112 10:16:06.955" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71806717, 'wakeups': [71816837, 71826820, 71836832, 71846833, 718568...</msg>
<status status="PASS" starttime="20201112 10:16:04.858" endtime="20201112 10:16:06.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.962" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71806717, 'wakeups': [71816837, 71826820, 71836832, 71846833, 718568...</msg>
<status status="PASS" starttime="20201112 10:16:06.957" endtime="20201112 10:16:06.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:06.964" endtime="20201112 10:16:06.968"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.856" endtime="20201112 10:16:06.969"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.854" endtime="20201112 10:16:06.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:06.975" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 71806717, 'wakeups': [71816837, 71826820, 71836832, 71846833, 71856832, 71866832, 71876833, 71886832, 71896832, 71906833, 71916832, 71926832, 71936833, 71946832...</msg>
<status status="PASS" starttime="20201112 10:16:06.971" endtime="20201112 10:16:06.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.984" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:06.981" endtime="20201112 10:16:06.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.988" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:06.986" endtime="20201112 10:16:06.988"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.977" endtime="20201112 10:16:06.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:06.998" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:06.996" endtime="20201112 10:16:06.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.002" level="INFO">VALUE: 71806717</msg>
<status status="PASS" starttime="20201112 10:16:07.000" endtime="20201112 10:16:07.003"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:06.991" endtime="20201112 10:16:07.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.012" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:07.010" endtime="20201112 10:16:07.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.017" level="INFO">VALUE: [71816837, 71826820, 71836832, 71846833, 71856832, 71866832, 71876833, 71886832, 71896832, 71906833, 71916832, 71926832, 71936833, 71946832, 71956832, 71966833, 71976832, 71986832, 71996833, 72006832, 72016832, 72026833, 72036832, 72046832, 72056833, 72066832, 72076832, 72086833, 72096832, 72106832, 72116833, 72126832, 72136832, 72146833, 72156832, 72166832, 72176833, 72186832, 72196832, 72206833, 72216832, 72226832, 72236833, 72246832, 72256832, 72266833, 72276832, 72286832, 72296833, 72306832, 72316832, 72326833, 72336832, 72346832, 72356833, 72366832, 72376832, 72386833, 72396832, 72406832, 72416833, 72426832, 72436832, 72446833, 72456832, 72466832, 72476833, 72486832, 72496832, 72506833, 72516832, 72526832, 72536833, 72546832, 72556832, 72566833, 72576832, 72586832, 72596833, 72606832, 72616832, 72626833, 72636832, 72646832, 72656833, 72666832, 72676832, 72686833, 72696832, 72706832, 72716833, 72726832, 72736832, 72746833, 72756832, 72766832, 72776833, 72786832, 72796832, 72806833]</msg>
<status status="PASS" starttime="20201112 10:16:07.014" endtime="20201112 10:16:07.017"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.005" endtime="20201112 10:16:07.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.032" endtime="20201112 10:16:07.323"></status>
</kw>
<msg timestamp="20201112 10:16:07.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019253389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029374292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.029" endtime="20201112 10:16:07.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019253389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029374292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:07.326" endtime="20201112 10:16:07.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.334" endtime="20201112 10:16:07.335"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.023" endtime="20201112 10:16:07.336"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.020" endtime="20201112 10:16:07.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:07.360" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:07.337" endtime="20201112 10:16:07.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.365" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:07.364" endtime="20201112 10:16:07.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.367" level="INFO">VALUE: 0.019253389</msg>
<status status="PASS" starttime="20201112 10:16:07.366" endtime="20201112 10:16:07.367"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.361" endtime="20201112 10:16:07.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.372" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:07.371" endtime="20201112 10:16:07.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:07.374" level="INFO">VALUE: [0.029374292, 0.039358, 0.049370653, 0.059372583, 0.069372736, 0.079373444, 0.089375361, 0.0993755, 0.109376264, 0.119378125, 0.129378278, 0.139378972, 0.149380889, 0.159381056, 0.169381736, 0.179383681, 0.189383833, 0.199384528, 0.209386444, 0.219386583, 0.229387319, 0.239389222, 0.249389361, 0.259390056, 0.269392, 0.279392153, 0.289392833, 0.29939475, 0.309394903, 0.319395611, 0.329397542, 0.339397736, 0.349398389, 0.359400306, 0.369400472, 0.379401153, 0.389403125, 0.399403222, 0.409403944, 0.419405847, 0.429406, 0.439406708, 0.449408653, 0.459408778, 0.469409472, 0.479411403, 0.489411583, 0.499412264, 0.50941425, 0.519414375, 0.529415042, 0.539416958, 0.549417097, 0.559417806, 0.569419722, 0.579419875, 0.589420583, 0.5994225, 0.609422736, 0.619423361, 0.629425319, 0.639425458, 0.649426125, 0.659428056, 0.669428208, 0.679428903, 0.689430833, 0.699430986, 0.709431681, 0.719433611, 0.729433806, 0.739434458, 0.749436389, 0.759436528, 0.76943725, 0.779439181, 0.789439375, 0.799440042, 0.809441931, 0.819442153, 0.829442792, 0.839444708, 0.849444875, 0.859445569, 0.869447486, 0.879447639, 0.889448333, 0.899450264, 0.909450417, 0.919451111, 0.929453042, 0.939453208, 0.949453889, 0.959455819, 0.969455972, 0.979456667, 0.989458597, 0.99945875, 1.009459444, 1.019461389] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:07.373" endtime="20201112 10:16:07.375"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.369" endtime="20201112 10:16:07.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.377" endtime="20201112 10:16:07.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:07.381" endtime="20201112 10:16:07.400"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.379" endtime="20201112 10:16:07.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.376" endtime="20201112 10:16:07.401"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:04.852" endtime="20201112 10:16:07.402"></status>
</kw>
<msg timestamp="20201112 10:16:07.402" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:07.410" endtime="20201112 10:16:09.503"></status>
</kw>
<msg timestamp="20201112 10:16:09.505" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74355659, 'wakeups': [74365777, 74375762, 74385774, 74395775, 744057...</msg>
<status status="PASS" starttime="20201112 10:16:07.408" endtime="20201112 10:16:09.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.510" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74355659, 'wakeups': [74365777, 74375762, 74385774, 74395775, 744057...</msg>
<status status="PASS" starttime="20201112 10:16:09.507" endtime="20201112 10:16:09.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.513" endtime="20201112 10:16:09.516"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.406" endtime="20201112 10:16:09.517"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.404" endtime="20201112 10:16:09.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.524" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 74355659, 'wakeups': [74365777, 74375762, 74385774, 74395775, 74405774, 74415774, 74425775, 74435774, 74445774, 74455775, 74465774, 74475774, 74485775, 74495774...</msg>
<status status="PASS" starttime="20201112 10:16:09.520" endtime="20201112 10:16:09.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.532" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 10:16:09.530" endtime="20201112 10:16:09.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.536" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 10:16:09.534" endtime="20201112 10:16:09.537"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.525" endtime="20201112 10:16:09.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.547" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:09.545" endtime="20201112 10:16:09.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.553" level="INFO">VALUE: 74355659</msg>
<status status="PASS" starttime="20201112 10:16:09.549" endtime="20201112 10:16:09.554"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.540" endtime="20201112 10:16:09.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.563" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:09.561" endtime="20201112 10:16:09.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.568" level="INFO">VALUE: [74365777, 74375762, 74385774, 74395775, 74405774, 74415774, 74425775, 74435774, 74445774, 74455775, 74465774, 74475774, 74485775, 74495774, 74505774, 74515775, 74525774, 74535774, 74545775, 74555774, 74565774, 74575775, 74585774, 74595774, 74605775, 74615774, 74625774, 74635775, 74645774, 74655774, 74665775, 74675774, 74685774, 74695775, 74705774, 74715774, 74725775, 74735774, 74745774, 74755775, 74765774, 74775774, 74785775, 74795774, 74805774, 74815775, 74825774, 74835774, 74845775, 74855774, 74865774, 74875775, 74885774, 74895774, 74905775, 74915774, 74925774, 74935775, 74945774, 74955774, 74965775, 74975774, 74985774, 74995775, 75005774, 75015774, 75025775, 75035774, 75045774, 75055775, 75065774, 75075774, 75085775, 75095774, 75105774, 75115775, 75125774, 75135774, 75145775, 75155774, 75165774, 75175775, 75185774, 75195774, 75205775, 75215774, 75225774, 75235775, 75245774, 75255774, 75265775, 75275774, 75285774, 75295775, 75305774, 75315774, 75325775, 75335774, 75345774, 75355775]</msg>
<status status="PASS" starttime="20201112 10:16:09.566" endtime="20201112 10:16:09.569"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.556" endtime="20201112 10:16:09.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.576" endtime="20201112 10:16:09.867"></status>
</kw>
<msg timestamp="20201112 10:16:09.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018159222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028278389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.574" endtime="20201112 10:16:09.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018159222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028278389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 10:16:09.871" endtime="20201112 10:16:09.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.878" endtime="20201112 10:16:09.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.572" endtime="20201112 10:16:09.880"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.570" endtime="20201112 10:16:09.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 10:16:09.905" level="INFO">${RESULT} = {'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', ...</msg>
<status status="PASS" starttime="20201112 10:16:09.882" endtime="20201112 10:16:09.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.909" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 10:16:09.908" endtime="20201112 10:16:09.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.911" level="INFO">VALUE: 0.018159222</msg>
<status status="PASS" starttime="20201112 10:16:09.910" endtime="20201112 10:16:09.912"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.906" endtime="20201112 10:16:09.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.917" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 10:16:09.916" endtime="20201112 10:16:09.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 10:16:09.920" level="INFO">VALUE: [0.028278389, 0.038264083, 0.048276764, 0.058278681, 0.068278819, 0.078279597, 0.088281458, 0.098281597, 0.108282361, 0.118284222, 0.128284361, 0.138285097, 0.148287, 0.158287139, 0.168287833, 0.178289764, 0.188289917, 0.198290625, 0.208292542, 0.218292681, 0.228293375, 0.238295333, 0.248295458, 0.258296167, 0.268298069, 0.278298236, 0.288298931, 0.298300847, 0.308301014, 0.318301694, 0.328303625, 0.338303778, 0.348304486, 0.358306389, 0.368306542, 0.378307264, 0.388309167, 0.398309333, 0.408310014, 0.418311944, 0.428312097, 0.438312833, 0.448314722, 0.458314917, 0.468315569, 0.478317486, 0.488317667, 0.498318347, 0.508320264, 0.518320458, 0.528321139, 0.538323042, 0.548323194, 0.558323889, 0.568325819, 0.578326, 0.588326681, 0.598328597, 0.608328736, 0.618329458, 0.628331361, 0.638331528, 0.648332222, 0.658334139, 0.668334306, 0.678334986, 0.688336931, 0.698337069, 0.708337778, 0.718339708, 0.728339847, 0.738340556, 0.748342472, 0.758342639, 0.768343319, 0.778345264, 0.788345389, 0.798346125, 0.808348014, 0.818348181, 0.828348931, 0.838350792, 0.848350944, 0.858351639, 0.868353569, 0.878353736, 0.888354486, 0.898356361, 0.9083565, 0.918357208, 0.928359125, 0.938359278, 0.948359986, 0.958361903, 0.968362056, 0.978362764, 0.988364667, 0.998364833, 1.008365542, 1.0183675] # exclude start event</msg>
<status status="PASS" starttime="20201112 10:16:09.919" endtime="20201112 10:16:09.921"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.913" endtime="20201112 10:16:09.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 10:16:09.923" endtime="20201112 10:16:09.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 10:16:09.927" endtime="20201112 10:16:09.946"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.925" endtime="20201112 10:16:09.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:09.922" endtime="20201112 10:16:09.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:07.402" endtime="20201112 10:16:09.947"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.300" endtime="20201112 10:16:09.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:16:02.299" endtime="20201112 10:16:09.948"></status>
</kw>
<status status="PASS" starttime="20201112 10:14:53.363" endtime="20201112 10:16:09.948"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 10:14:53.285" endtime="20201112 10:16:09.949" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 10:14:51.889" endtime="20201112 10:16:09.952"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 10:13:08.197" endtime="20201112 10:16:09.970"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
