<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:42:36.561" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:37.122" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:37.130" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:38.105" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:37.120" endtime="20201112 09:42:38.106"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.108" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:38.107" endtime="20201112 09:42:38.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:37.119" endtime="20201112 09:42:38.109"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:38.111" endtime="20201112 09:42:38.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.110" endtime="20201112 09:42:38.294"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.308" endtime="20201112 09:42:38.334"></status>
</kw>
<msg timestamp="20201112 09:42:38.334" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.307" endtime="20201112 09:42:38.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.337" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.335" endtime="20201112 09:42:38.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.340" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:38.338" endtime="20201112 09:42:38.340"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.304" endtime="20201112 09:42:38.341"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.301" endtime="20201112 09:42:38.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.299" endtime="20201112 09:42:38.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:38.346" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:38.345" endtime="20201112 09:42:38.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.343" endtime="20201112 09:42:38.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.298" endtime="20201112 09:42:38.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.298" endtime="20201112 09:42:38.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.347" endtime="20201112 09:42:38.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.296" endtime="20201112 09:42:38.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.350" endtime="20201112 09:42:38.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.295" endtime="20201112 09:42:38.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:37.117" endtime="20201112 09:42:38.353"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:38.359" endtime="20201112 09:42:38.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.357" endtime="20201112 09:42:38.379"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.393" endtime="20201112 09:42:38.417"></status>
</kw>
<msg timestamp="20201112 09:42:38.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.392" endtime="20201112 09:42:38.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.420" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.418" endtime="20201112 09:42:38.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.423" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:38.421" endtime="20201112 09:42:38.423"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.389" endtime="20201112 09:42:38.424"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:38.387" endtime="20201112 09:42:38.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.385" endtime="20201112 09:42:38.425"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:38.428" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:38.427" endtime="20201112 09:42:38.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.425" endtime="20201112 09:42:38.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.384" endtime="20201112 09:42:38.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.383" endtime="20201112 09:42:38.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.430" endtime="20201112 09:42:38.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.381" endtime="20201112 09:42:38.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.380" endtime="20201112 09:42:38.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.356" endtime="20201112 09:42:38.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.440" endtime="20201112 09:42:38.453"></status>
</kw>
<msg timestamp="20201112 09:42:38.453" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.438" endtime="20201112 09:42:38.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.455" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:38.454" endtime="20201112 09:42:38.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:38.456" endtime="20201112 09:42:38.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.436" endtime="20201112 09:42:38.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.434" endtime="20201112 09:42:38.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.463" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:42:38.462" endtime="20201112 09:42:38.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.465" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:42:38.465" endtime="20201112 09:42:38.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.460" endtime="20201112 09:42:38.466"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:38.353" endtime="20201112 09:42:38.467" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:36.672" endtime="20201112 09:42:38.470"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.523" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:38.531" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:39.571" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:38.521" endtime="20201112 09:42:39.573"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.579" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:39.575" endtime="20201112 09:42:39.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.520" endtime="20201112 09:42:39.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:39.585" endtime="20201112 09:42:39.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.583" endtime="20201112 09:42:39.806"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.818" endtime="20201112 09:42:39.844"></status>
</kw>
<msg timestamp="20201112 09:42:39.845" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.816" endtime="20201112 09:42:39.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.847" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.846" endtime="20201112 09:42:39.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.850" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:39.848" endtime="20201112 09:42:39.851"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:39.814" endtime="20201112 09:42:39.851"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:39.812" endtime="20201112 09:42:39.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.811" endtime="20201112 09:42:39.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:39.856" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:39.855" endtime="20201112 09:42:39.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.853" endtime="20201112 09:42:39.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.810" endtime="20201112 09:42:39.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.809" endtime="20201112 09:42:39.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.857" endtime="20201112 09:42:39.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.808" endtime="20201112 09:42:39.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.860" endtime="20201112 09:42:39.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.806" endtime="20201112 09:42:39.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.518" endtime="20201112 09:42:39.862"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:39.868" endtime="20201112 09:42:39.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.867" endtime="20201112 09:42:39.888"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.902" endtime="20201112 09:42:39.925"></status>
</kw>
<msg timestamp="20201112 09:42:39.926" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.900" endtime="20201112 09:42:39.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.927" endtime="20201112 09:42:39.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.931" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:39.929" endtime="20201112 09:42:39.931"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:39.897" endtime="20201112 09:42:39.932"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:39.895" endtime="20201112 09:42:39.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.893" endtime="20201112 09:42:39.933"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:39.937" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:39.936" endtime="20201112 09:42:39.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.934" endtime="20201112 09:42:39.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.892" endtime="20201112 09:42:39.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.892" endtime="20201112 09:42:39.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.938" endtime="20201112 09:42:39.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.890" endtime="20201112 09:42:39.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.889" endtime="20201112 09:42:39.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.865" endtime="20201112 09:42:39.941"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:39.943" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.951" endtime="20201112 09:42:39.965"></status>
</kw>
<msg timestamp="20201112 09:42:39.966" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.949" endtime="20201112 09:42:39.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.968" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.967" endtime="20201112 09:42:39.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.969" endtime="20201112 09:42:39.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.947" endtime="20201112 09:42:39.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.945" endtime="20201112 09:42:39.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.978" endtime="20201112 09:42:40.248"></status>
</kw>
<msg timestamp="20201112 09:42:40.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071844514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071849917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:39.977" endtime="20201112 09:42:40.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071844514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071849917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:40.251" endtime="20201112 09:42:40.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.256" endtime="20201112 09:42:40.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.974" endtime="20201112 09:42:40.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.972" endtime="20201112 09:42:40.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.263" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:40.262" endtime="20201112 09:42:40.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.266" level="INFO">VALUE: [{'time': 0.071844514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071849917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.071853903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9859999999974915e-06, 'source_diff': 3.9859999999974915e-06}, {'time': 0.071857972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069000000009315e-06, 'source_diff': 4.069000000009315e-06}, {'time': 0.071861472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4999999999896225e-06, 'source_diff': 3.4999999999896225e-06}, {'time': 0.071864639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.071870611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.972000000006861e-06, 'source_diff': 5.972000000006861e-06}, {'time': 0.071875833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.07187825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4170000000045544e-06, 'source_diff': 2.4170000000045544e-06}, {'time': 0.0718845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.071889194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.071894236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.071900153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916999999994177e-06, 'source_diff': 5.916999999994177e-06}, {'time': 0.071903361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2080000000045406e-06, 'source_diff': 3.2080000000045406e-06}, {'time': 0.071907167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.805999999995091e-06, 'source_diff': 3.805999999995091e-06}, {'time': 0.071913208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0410000000121755e-06, 'source_diff': 6.0410000000121755e-06}, {'time': 0.071918875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999986988e-06, 'source_diff': 5.666999999986988e-06}, {'time': 0.071921472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000006955e-06, 'source_diff': 2.597000000006955e-06}, {'time': 0.07192475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2779999999954512e-06, 'source_diff': 3.2779999999954512e-06}, {'time': 0.071930736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.071934889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.153000000006735e-06, 'source_diff': 4.153000000006735e-06}, {'time': 0.071939681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.071942097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.415999999991203e-06, 'source_diff': 2.415999999991203e-06}, {'time': 0.071947125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.071951861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.071954639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.777999999994951e-06, 'source_diff': 2.777999999994951e-06}, {'time': 0.071957056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4170000000045544e-06, 'source_diff': 2.4170000000045544e-06}, {'time': 0.071961097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0409999999962976e-06, 'source_diff': 4.0409999999962976e-06}, {'time': 0.071965319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.071971625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.071976833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.208000000006541e-06, 'source_diff': 5.208000000006541e-06}, {'time': 0.071979681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.071985528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8469999999893885e-06, 'source_diff': 5.8469999999893885e-06}, {'time': 0.071988028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.071993861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000010635e-06, 'source_diff': 5.833000000010635e-06}, {'time': 0.071999208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999988888e-06, 'source_diff': 5.346999999988888e-06}, {'time': 0.07200525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000011649e-06, 'source_diff': 6.042000000011649e-06}, {'time': 0.072008792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.072014569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.072017639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069999999993911e-06, 'source_diff': 3.069999999993911e-06}, {'time': 0.072022958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000003626e-06, 'source_diff': 5.319000000003626e-06}, {'time': 0.072026889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.072030361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4720000000043605e-06, 'source_diff': 3.4720000000043605e-06}, {'time': 0.072035264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.072041361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.072047111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.072051861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.072055667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.806000000008969e-06, 'source_diff': 3.806000000008969e-06}, {'time': 0.072059722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.055000000002806e-06, 'source_diff': 4.055000000002806e-06}, {'time': 0.072063986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2639999999899425e-06, 'source_diff': 4.2639999999899425e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:40.264" endtime="20201112 09:42:40.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.259" endtime="20201112 09:42:40.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:40.281" level="INFO">${debug-compressed} = {'source_diff': [0, 5.403000000001046e-06, 3.9859999999974915e-06, 4.069000000009315e-06, 3.4999999999896225e-06, 3.1669999999983656e-06, 5.972000000006861e-06, 5.221999999999172e-06, 2.41700000000455...</msg>
<status status="PASS" starttime="20201112 09:42:40.268" endtime="20201112 09:42:40.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.286" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:40.285" endtime="20201112 09:42:40.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.289" level="INFO">VALUE: {'source_diff': [0, 5.403000000001046e-06, 3.9859999999974915e-06, 4.069000000009315e-06, 3.4999999999896225e-06, 3.1669999999983656e-06, 5.972000000006861e-06, 5.221999999999172e-06, 2.4170000000045544e-06, 6.249999999999312e-06, 4.693999999999532e-06, 5.041999999996771e-06, 5.916999999994177e-06, 3.2080000000045406e-06, 3.805999999995091e-06, 6.0410000000121755e-06, 5.666999999986988e-06, 2.597000000006955e-06, 3.2779999999954512e-06, 5.985999999999492e-06, 4.153000000006735e-06, 4.79200000000346e-06, 2.415999999991203e-06, 5.02800000000414e-06, 4.7360000000051805e-06, 2.777999999994951e-06, 2.4170000000045544e-06, 4.0409999999962976e-06, 4.221999999998172e-06, 6.305999999997591e-06, 5.208000000006541e-06, 2.8479999999997396e-06, 5.8469999999893885e-06, 2.5000000000025002e-06, 5.833000000010635e-06, 5.346999999988888e-06, 6.042000000011649e-06, 3.541999999995271e-06, 5.776999999998478e-06, 3.069999999993911e-06, 5.319000000003626e-06, 3.9309999999986855e-06, 3.4720000000043605e-06, 4.903000000000546e-06, 6.096999999996577e-06, 5.749999999998812e-06, 4.7499999999978115e-06, 3.806000000008969e-06, 4.055000000002806e-06, 4.2639999999899425e-06], 'diff': [0, 5.403000000001046e-06, 3.9859999999974915e-06, 4.069000000009315e-06, 3.4999999999896225e-06, 3.1669999999983656e-06, 5.972000000006861e-06, 5.221999999999172e-06, 2.4170000000045544e-06, 6.249999999999312e-06, 4.693999999999532e-06, 5.041999999996771e-06, 5.916999999994177e-06, 3.2080000000045406e-06, 3.805999999995091e-06, 6.0410000000121755e-06, 5.666999999986988e-06, 2.597000000006955e-06, 3.2779999999954512e-06, 5.985999999999492e-06, 4.153000000006735e-06, 4.79200000000346e-06, 2.415999999991203e-06, 5.02800000000414e-06, 4.7360000000051805e-06, 2.777999999994951e-06, 2.4170000000045544e-06, 4.0409999999962976e-06, 4.221999999998172e-06, 6.305999999997591e-06, 5.208000000006541e-06, 2.8479999999997396e-06, 5.8469999999893885e-06, 2.5000000000025002e-06, 5.833000000010635e-06, 5.346999999988888e-06, 6.042000000011649e-06, 3.541999999995271e-06, 5.776999999998478e-06, 3.069999999993911e-06, 5.319000000003626e-06, 3.9309999999986855e-06, 3.4720000000043605e-06, 4.903000000000546e-06, 6.096999999996577e-06, 5.749999999998812e-06, 4.7499999999978115e-06, 3.806000000008969e-06, 4.055000000002806e-06, 4.2639999999899425e-06], 'eventsourcetime': [0.071844514, 0.071849917, 0.071853903, 0.071857972, 0.071861472, 0.071864639, 0.071870611, 0.071875833, 0.07187825, 0.0718845, 0.071889194, 0.071894236, 0.071900153, 0.071903361, 0.071907167, 0.071913208, 0.071918875, 0.071921472, 0.07192475, 0.071930736, 0.071934889, 0.071939681, 0.071942097, 0.071947125, 0.071951861, 0.071954639, 0.071957056, 0.071961097, 0.071965319, 0.071971625, 0.071976833, 0.071979681, 0.071985528, 0.071988028, 0.071993861, 0.071999208, 0.07200525, 0.072008792, 0.072014569, 0.072017639, 0.072022958, 0.072026889, 0.072030361, 0.072035264, 0.072041361, 0.072047111, 0.072051861, 0.072055667, 0.072059722, 0.072063986]}</msg>
<status status="PASS" starttime="20201112 09:42:40.287" endtime="20201112 09:42:40.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.282" endtime="20201112 09:42:40.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:40.293" level="INFO">${RESULT} = [{'time': 0.071849917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.071857972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:40.291" endtime="20201112 09:42:40.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:40.301" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.403000000001046e-06, 4.069000000009315e-06, 3.1669999999983656e-06, 5.221999999999172e-06, 6.249999999999312e-06, 5.041999999996771e-06, 3.2080000000045406e-06, 6.0410000000121755e-...</msg>
<status status="PASS" starttime="20201112 09:42:40.294" endtime="20201112 09:42:40.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.305" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:40.304" endtime="20201112 09:42:40.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.307" level="INFO">VALUE: [5.403000000001046e-06, 4.069000000009315e-06, 3.1669999999983656e-06, 5.221999999999172e-06, 6.249999999999312e-06, 5.041999999996771e-06, 3.2080000000045406e-06, 6.0410000000121755e-06, 2.597000000006955e-06, 5.985999999999492e-06, 4.79200000000346e-06, 5.02800000000414e-06, 2.777999999994951e-06, 4.0409999999962976e-06, 6.305999999997591e-06, 2.8479999999997396e-06, 2.5000000000025002e-06, 5.346999999988888e-06, 3.541999999995271e-06, 3.069999999993911e-06, 3.9309999999986855e-06, 4.903000000000546e-06, 5.749999999998812e-06, 3.806000000008969e-06, 4.2639999999899425e-06]</msg>
<status status="PASS" starttime="20201112 09:42:40.306" endtime="20201112 09:42:40.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.302" endtime="20201112 09:42:40.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.311" endtime="20201112 09:42:40.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:40.314" endtime="20201112 09:42:40.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.312" endtime="20201112 09:42:40.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.309" endtime="20201112 09:42:40.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.944" endtime="20201112 09:42:40.335"></status>
</kw>
<msg timestamp="20201112 09:42:40.335" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.344" endtime="20201112 09:42:40.358"></status>
</kw>
<msg timestamp="20201112 09:42:40.358" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.342" endtime="20201112 09:42:40.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.361" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.359" endtime="20201112 09:42:40.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.362" endtime="20201112 09:42:40.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.340" endtime="20201112 09:42:40.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.337" endtime="20201112 09:42:40.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.371" endtime="20201112 09:42:40.637"></status>
</kw>
<msg timestamp="20201112 09:42:40.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019321833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:40.369" endtime="20201112 09:42:40.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019321833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:40.640" endtime="20201112 09:42:40.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.646" endtime="20201112 09:42:40.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.367" endtime="20201112 09:42:40.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.365" endtime="20201112 09:42:40.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.652" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:40.651" endtime="20201112 09:42:40.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.656" level="INFO">VALUE: [{'time': 0.019316611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019321833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.019327639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.019330097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.019335569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.01933875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.019341153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.019345194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.019347861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.019351514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.019357736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.019360722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.019365347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.019370611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.019376472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.019381958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.019385028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0699999999973804e-06, 'source_diff': 3.0699999999973804e-06}, {'time': 0.01939025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222000000002641e-06, 'source_diff': 5.222000000002641e-06}, {'time': 0.019393986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.019397208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.019401819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.01940725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.019409917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.019415625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.019418097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.019424417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.019429653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.019432139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.019434861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.019441097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.019443694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.019447222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.019452889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.019457444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.019459819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999989058e-06, 'source_diff': 2.3749999999989058e-06}, {'time': 0.019465264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.019468097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.019473208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.019479431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.019485458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.027000000002197e-06, 'source_diff': 6.027000000002197e-06}, {'time': 0.019490375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.019494306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.019496958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6520000000022914e-06, 'source_diff': 2.6520000000022914e-06}, {'time': 0.019502, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.019506861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.019512125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.019514875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.019520889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.019523681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.019529653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:40.653" endtime="20201112 09:42:40.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.649" endtime="20201112 09:42:40.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:40.671" level="INFO">${debug-compressed} = {'source_diff': [0, 5.221999999999172e-06, 5.806000000000561e-06, 2.458000000000321e-06, 5.471999999999422e-06, 3.1809999999979355e-06, 2.403000000001515e-06, 4.040999999999767e-06, 2.667000000001335e...</msg>
<status status="PASS" starttime="20201112 09:42:40.658" endtime="20201112 09:42:40.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.674" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:40.673" endtime="20201112 09:42:40.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.677" level="INFO">VALUE: {'source_diff': [0, 5.221999999999172e-06, 5.806000000000561e-06, 2.458000000000321e-06, 5.471999999999422e-06, 3.1809999999979355e-06, 2.403000000001515e-06, 4.040999999999767e-06, 2.667000000001335e-06, 3.6529999999992957e-06, 6.222000000000172e-06, 2.985999999999961e-06, 4.625000000001156e-06, 5.2639999999978815e-06, 5.860999999999367e-06, 5.486000000002461e-06, 3.0699999999973804e-06, 5.222000000002641e-06, 3.7359999999972415e-06, 3.222000000000641e-06, 4.611000000001586e-06, 5.431000000000186e-06, 2.6669999999978655e-06, 5.708000000000102e-06, 2.471999999999891e-06, 6.320000000000631e-06, 5.236000000002211e-06, 2.485999999999461e-06, 2.722000000000141e-06, 6.235999999999742e-06, 2.597000000000016e-06, 3.5279999999991707e-06, 5.667000000000866e-06, 4.554999999999837e-06, 2.3749999999989058e-06, 5.444999999999756e-06, 2.833000000000696e-06, 5.110999999998617e-06, 6.2229999999996455e-06, 6.027000000002197e-06, 4.917000000000116e-06, 3.9309999999986855e-06, 2.6520000000022914e-06, 5.041999999996771e-06, 4.861000000001836e-06, 5.264000000001351e-06, 2.749999999999281e-06, 6.0139999999986316e-06, 2.79200000000146e-06, 5.971999999999922e-06], 'diff': [0, 5.221999999999172e-06, 5.806000000000561e-06, 2.458000000000321e-06, 5.471999999999422e-06, 3.1809999999979355e-06, 2.403000000001515e-06, 4.040999999999767e-06, 2.667000000001335e-06, 3.6529999999992957e-06, 6.222000000000172e-06, 2.985999999999961e-06, 4.625000000001156e-06, 5.2639999999978815e-06, 5.860999999999367e-06, 5.486000000002461e-06, 3.0699999999973804e-06, 5.222000000002641e-06, 3.7359999999972415e-06, 3.222000000000641e-06, 4.611000000001586e-06, 5.431000000000186e-06, 2.6669999999978655e-06, 5.708000000000102e-06, 2.471999999999891e-06, 6.320000000000631e-06, 5.236000000002211e-06, 2.485999999999461e-06, 2.722000000000141e-06, 6.235999999999742e-06, 2.597000000000016e-06, 3.5279999999991707e-06, 5.667000000000866e-06, 4.554999999999837e-06, 2.3749999999989058e-06, 5.444999999999756e-06, 2.833000000000696e-06, 5.110999999998617e-06, 6.2229999999996455e-06, 6.027000000002197e-06, 4.917000000000116e-06, 3.9309999999986855e-06, 2.6520000000022914e-06, 5.041999999996771e-06, 4.861000000001836e-06, 5.264000000001351e-06, 2.749999999999281e-06, 6.0139999999986316e-06, 2.79200000000146e-06, 5.971999999999922e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'sourcetime': [0.019316611, 0.019321833, 0.019327639, 0.019330097, 0.019335569, 0.01933875, 0.019341153, 0.019345194, 0.019347861, 0.019351514, 0.019357736, 0.019360722, 0.019365347, 0.019370611, 0.019376472, 0.019381958, 0.019385028, 0.01939025, 0.019393986, 0.019397208, 0.019401819, 0.01940725, 0.019409917, 0.019415625, 0.019418097, 0.019424417, 0.019429653, 0.019432139, 0.019434861, 0.019441097, 0.019443694, 0.019447222, 0.019452889, 0.019457444, 0.019459819, 0.019465264, 0.019468097, 0.019473208, 0.019479431, 0.019485458, 0.019490375, 0.019494306, 0.019496958, 0.019502, 0.019506861, 0.019512125, 0.019514875, 0.019520889, 0.019523681, 0.019529653]}</msg>
<status status="PASS" starttime="20201112 09:42:40.675" endtime="20201112 09:42:40.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.671" endtime="20201112 09:42:40.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:40.682" level="INFO">${RESULT} = [{'time': 0.019321833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.019330097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:40.679" endtime="20201112 09:42:40.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:40.691" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.221999999999172e-06, 2.458000000000321e-06, 3.1809999999979355e-06, 4.040999999999767e-06, 3.6529999999992957e-06, 2.985999999999961e-06, 5.2639999999978815e-06, 5.486000000002461e-...</msg>
<status status="PASS" starttime="20201112 09:42:40.683" endtime="20201112 09:42:40.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.695" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:40.694" endtime="20201112 09:42:40.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.698" level="INFO">VALUE: [5.221999999999172e-06, 2.458000000000321e-06, 3.1809999999979355e-06, 4.040999999999767e-06, 3.6529999999992957e-06, 2.985999999999961e-06, 5.2639999999978815e-06, 5.486000000002461e-06, 5.222000000002641e-06, 3.222000000000641e-06, 5.431000000000186e-06, 5.708000000000102e-06, 6.320000000000631e-06, 2.485999999999461e-06, 6.235999999999742e-06, 3.5279999999991707e-06, 4.554999999999837e-06, 5.444999999999756e-06, 5.110999999998617e-06, 6.027000000002197e-06, 3.9309999999986855e-06, 5.041999999996771e-06, 5.264000000001351e-06, 6.0139999999986316e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201112 09:42:40.696" endtime="20201112 09:42:40.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.692" endtime="20201112 09:42:40.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.701" endtime="20201112 09:42:40.702"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:40.704" endtime="20201112 09:42:40.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.703" endtime="20201112 09:42:40.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.699" endtime="20201112 09:42:40.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.336" endtime="20201112 09:42:40.725"></status>
</kw>
<msg timestamp="20201112 09:42:40.725" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.733" endtime="20201112 09:42:40.747"></status>
</kw>
<msg timestamp="20201112 09:42:40.748" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.731" endtime="20201112 09:42:40.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:40.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:40.749" endtime="20201112 09:42:40.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.751" endtime="20201112 09:42:40.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.729" endtime="20201112 09:42:40.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.727" endtime="20201112 09:42:40.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:40.761" endtime="20201112 09:42:41.025"></status>
</kw>
<msg timestamp="20201112 09:42:41.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017336125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017341167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:40.759" endtime="20201112 09:42:41.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017336125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017341167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.028" endtime="20201112 09:42:41.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.033" endtime="20201112 09:42:41.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.756" endtime="20201112 09:42:41.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.754" endtime="20201112 09:42:41.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.040" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.039" endtime="20201112 09:42:41.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.043" level="INFO">VALUE: [{'time': 0.017336125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017341167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017345194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.017349486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017354208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017359681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.472999999998895e-06, 'source_diff': 5.472999999998895e-06}, {'time': 0.017363167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017368569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.017370931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3619999999988095e-06, 'source_diff': 2.3619999999988095e-06}, {'time': 0.017377153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.01738025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017384319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.017390097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017394236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.0173975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.017402875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.017406042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.017411097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055000000000337e-06, 'source_diff': 5.055000000000337e-06}, {'time': 0.017413861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017418972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.01742425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.017429139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017433472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.017438681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.209000000002545e-06, 'source_diff': 5.209000000002545e-06}, {'time': 0.017444347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.017450389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017454875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.017460875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.017464625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.017469347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017473083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017479, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.017483597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017486139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.017488556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.017492028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017496681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.017502903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017508264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.017512347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.017517014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017521806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017525958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.017531819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017536111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017539264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017542736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017545403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.017551583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999997993e-06, 'source_diff': 6.179999999997993e-06}, {'time': 0.017555611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:41.041" endtime="20201112 09:42:41.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.036" endtime="20201112 09:42:41.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:41.058" level="INFO">${debug-compressed} = {'source_diff': [0, 5.042000000000241e-06, 4.027000000000197e-06, 4.291999999999491e-06, 4.721999999998672e-06, 5.472999999998895e-06, 3.486000000000461e-06, 5.402000000001572e-06, 2.3619999999988095e...</msg>
<status status="PASS" starttime="20201112 09:42:41.046" endtime="20201112 09:42:41.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.062" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:41.061" endtime="20201112 09:42:41.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.065" level="INFO">VALUE: {'source_diff': [0, 5.042000000000241e-06, 4.027000000000197e-06, 4.291999999999491e-06, 4.721999999998672e-06, 5.472999999998895e-06, 3.486000000000461e-06, 5.402000000001572e-06, 2.3619999999988095e-06, 6.222000000000172e-06, 3.097000000000516e-06, 4.068999999998907e-06, 5.778000000001421e-06, 4.139000000000226e-06, 3.2639999999993508e-06, 5.375000000001906e-06, 3.1669999999983656e-06, 5.055000000000337e-06, 2.7639999999988507e-06, 5.111000000002086e-06, 5.277999999997451e-06, 4.889000000000976e-06, 4.332999999998727e-06, 5.209000000002545e-06, 5.665999999997923e-06, 6.042000000001241e-06, 4.486000000001461e-06, 5.999999999999062e-06, 3.750000000000281e-06, 4.721999999998672e-06, 3.736000000000711e-06, 5.917000000001116e-06, 4.596999999998547e-06, 2.54200000000121e-06, 2.4169999999976155e-06, 3.472000000000891e-06, 4.653000000000296e-06, 6.222000000000172e-06, 5.360999999998867e-06, 4.083000000001946e-06, 4.666999999999866e-06, 4.791999999999991e-06, 4.152000000000322e-06, 5.860999999999367e-06, 4.291999999999491e-06, 3.1529999999987957e-06, 3.472000000000891e-06, 2.667000000001335e-06, 6.179999999997993e-06, 4.027999999999671e-06], 'diff': [0, 5.042000000000241e-06, 4.027000000000197e-06, 4.291999999999491e-06, 4.721999999998672e-06, 5.472999999998895e-06, 3.486000000000461e-06, 5.402000000001572e-06, 2.3619999999988095e-06, 6.222000000000172e-06, 3.097000000000516e-06, 4.068999999998907e-06, 5.778000000001421e-06, 4.139000000000226e-06, 3.2639999999993508e-06, 5.375000000001906e-06, 3.1669999999983656e-06, 5.055000000000337e-06, 2.7639999999988507e-06, 5.111000000002086e-06, 5.277999999997451e-06, 4.889000000000976e-06, 4.332999999998727e-06, 5.209000000002545e-06, 5.665999999997923e-06, 6.042000000001241e-06, 4.486000000001461e-06, 5.999999999999062e-06, 3.750000000000281e-06, 4.721999999998672e-06, 3.736000000000711e-06, 5.917000000001116e-06, 4.596999999998547e-06, 2.54200000000121e-06, 2.4169999999976155e-06, 3.472000000000891e-06, 4.653000000000296e-06, 6.222000000000172e-06, 5.360999999998867e-06, 4.083000000001946e-06, 4.666999999999866e-06, 4.791999999999991e-06, 4.152000000000322e-06, 5.860999999999367e-06, 4.291999999999491e-06, 3.1529999999987957e-06, 3.472000000000891e-06, 2.667000000001335e-06, 6.179999999997993e-06, 4.027999999999671e-06], 'eventsourcetime': [0.017336125, 0.017341167, 0.017345194, 0.017349486, 0.017354208, 0.017359681, 0.017363167, 0.017368569, 0.017370931, 0.017377153, 0.01738025, 0.017384319, 0.017390097, 0.017394236, 0.0173975, 0.017402875, 0.017406042, 0.017411097, 0.017413861, 0.017418972, 0.01742425, 0.017429139, 0.017433472, 0.017438681, 0.017444347, 0.017450389, 0.017454875, 0.017460875, 0.017464625, 0.017469347, 0.017473083, 0.017479, 0.017483597, 0.017486139, 0.017488556, 0.017492028, 0.017496681, 0.017502903, 0.017508264, 0.017512347, 0.017517014, 0.017521806, 0.017525958, 0.017531819, 0.017536111, 0.017539264, 0.017542736, 0.017545403, 0.017551583, 0.017555611]}</msg>
<status status="PASS" starttime="20201112 09:42:41.063" endtime="20201112 09:42:41.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.059" endtime="20201112 09:42:41.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:41.070" level="INFO">${RESULT} = [{'time': 0.017341167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017349486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:41.067" endtime="20201112 09:42:41.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:41.078" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.042000000000241e-06, 4.291999999999491e-06, 5.472999999998895e-06, 5.402000000001572e-06, 6.222000000000172e-06, 4.068999999998907e-06, 4.139000000000226e-06, 5.375000000001906e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:41.071" endtime="20201112 09:42:41.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.082" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:41.081" endtime="20201112 09:42:41.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.084" level="INFO">VALUE: [5.042000000000241e-06, 4.291999999999491e-06, 5.472999999998895e-06, 5.402000000001572e-06, 6.222000000000172e-06, 4.068999999998907e-06, 4.139000000000226e-06, 5.375000000001906e-06, 5.055000000000337e-06, 5.111000000002086e-06, 4.889000000000976e-06, 5.209000000002545e-06, 6.042000000001241e-06, 5.999999999999062e-06, 4.721999999998672e-06, 5.917000000001116e-06, 2.54200000000121e-06, 3.472000000000891e-06, 6.222000000000172e-06, 4.083000000001946e-06, 4.791999999999991e-06, 5.860999999999367e-06, 3.1529999999987957e-06, 2.667000000001335e-06, 4.027999999999671e-06]</msg>
<status status="PASS" starttime="20201112 09:42:41.083" endtime="20201112 09:42:41.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.078" endtime="20201112 09:42:41.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.087" endtime="20201112 09:42:41.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.091" endtime="20201112 09:42:41.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.089" endtime="20201112 09:42:41.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.086" endtime="20201112 09:42:41.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:40.726" endtime="20201112 09:42:41.111"></status>
</kw>
<msg timestamp="20201112 09:42:41.112" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.119" endtime="20201112 09:42:41.135"></status>
</kw>
<msg timestamp="20201112 09:42:41.135" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.118" endtime="20201112 09:42:41.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.138" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.136" endtime="20201112 09:42:41.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.139" endtime="20201112 09:42:41.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.115" endtime="20201112 09:42:41.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.113" endtime="20201112 09:42:41.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.148" endtime="20201112 09:42:41.412"></status>
</kw>
<msg timestamp="20201112 09:42:41.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018189347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018193681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.146" endtime="20201112 09:42:41.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018189347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018193681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.415" endtime="20201112 09:42:41.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.420" endtime="20201112 09:42:41.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.144" endtime="20201112 09:42:41.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.142" endtime="20201112 09:42:41.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.427" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.426" endtime="20201112 09:42:41.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.430" level="INFO">VALUE: [{'time': 0.018189347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018193681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.018196903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018203097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.018206556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4589999999973253e-06, 'source_diff': 3.4589999999973253e-06}, {'time': 0.018212097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.018218056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.018222389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018228569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.018231792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018236208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018239014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.018245292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.018250028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.018252875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8469999999967965e-06, 'source_diff': 2.8469999999967965e-06}, {'time': 0.018257917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018260806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.889000000002445e-06, 'source_diff': 2.889000000002445e-06}, {'time': 0.018266167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018272389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018277292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.018280278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.01828625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018291222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018297139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018302569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.018306667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.018309389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018311847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018315833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018319486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.018323028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.018329125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018334042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916999999996646e-06, 'source_diff': 4.916999999996646e-06}, {'time': 0.0183365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.0183395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.018342611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.01834825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018354167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018358458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018361306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.018366403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018371069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018376625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.018379583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.018383681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.018389278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018392208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9300000000016813e-06, 'source_diff': 2.9300000000016813e-06}, {'time': 0.018397667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.018402278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.018404806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:41.428" endtime="20201112 09:42:41.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.424" endtime="20201112 09:42:41.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:41.445" level="INFO">${debug-compressed} = {'source_diff': [0, 4.3339999999982e-06, 3.222000000000641e-06, 6.194000000001032e-06, 3.4589999999973253e-06, 5.541000000001267e-06, 5.9589999999998255e-06, 4.332999999998727e-06, 6.180000000001462e-...</msg>
<status status="PASS" starttime="20201112 09:42:41.433" endtime="20201112 09:42:41.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.449" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:41.448" endtime="20201112 09:42:41.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.452" level="INFO">VALUE: {'source_diff': [0, 4.3339999999982e-06, 3.222000000000641e-06, 6.194000000001032e-06, 3.4589999999973253e-06, 5.541000000001267e-06, 5.9589999999998255e-06, 4.332999999998727e-06, 6.180000000001462e-06, 3.2230000000001147e-06, 4.416000000000142e-06, 2.80600000000103e-06, 6.2779999999984515e-06, 4.736000000001711e-06, 2.8469999999967965e-06, 5.042000000000241e-06, 2.889000000002445e-06, 5.360999999998867e-06, 6.222000000000172e-06, 4.903000000000546e-06, 2.985999999999961e-06, 5.971999999999922e-06, 4.971999999998922e-06, 5.917000000001116e-06, 5.430000000000712e-06, 4.09799999999752e-06, 2.722000000000141e-06, 2.458000000000321e-06, 3.986000000000961e-06, 3.6529999999992957e-06, 3.54200000000221e-06, 6.097000000000047e-06, 4.916999999996646e-06, 2.458000000000321e-06, 3.0000000000030003e-06, 3.111000000000086e-06, 5.6389999999982565e-06, 5.917000000001116e-06, 4.291000000000017e-06, 2.8479999999997396e-06, 5.096999999999047e-06, 4.666000000000392e-06, 5.556000000000311e-06, 2.958000000000821e-06, 4.09799999999752e-06, 5.596999999999547e-06, 2.9300000000016813e-06, 5.4589999999993255e-06, 4.611000000001586e-06, 2.5279999999981706e-06], 'diff': [0, 4.3339999999982e-06, 3.222000000000641e-06, 6.194000000001032e-06, 3.4589999999973253e-06, 5.541000000001267e-06, 5.9589999999998255e-06, 4.332999999998727e-06, 6.180000000001462e-06, 3.2230000000001147e-06, 4.416000000000142e-06, 2.80600000000103e-06, 6.2779999999984515e-06, 4.736000000001711e-06, 2.8469999999967965e-06, 5.042000000000241e-06, 2.889000000002445e-06, 5.360999999998867e-06, 6.222000000000172e-06, 4.903000000000546e-06, 2.985999999999961e-06, 5.971999999999922e-06, 4.971999999998922e-06, 5.917000000001116e-06, 5.430000000000712e-06, 4.09799999999752e-06, 2.722000000000141e-06, 2.458000000000321e-06, 3.986000000000961e-06, 3.6529999999992957e-06, 3.54200000000221e-06, 6.097000000000047e-06, 4.916999999996646e-06, 2.458000000000321e-06, 3.0000000000030003e-06, 3.111000000000086e-06, 5.6389999999982565e-06, 5.917000000001116e-06, 4.291000000000017e-06, 2.8479999999997396e-06, 5.096999999999047e-06, 4.666000000000392e-06, 5.556000000000311e-06, 2.958000000000821e-06, 4.09799999999752e-06, 5.596999999999547e-06, 2.9300000000016813e-06, 5.4589999999993255e-06, 4.611000000001586e-06, 2.5279999999981706e-06], 'eventsourcetime': [0.018189347, 0.018193681, 0.018196903, 0.018203097, 0.018206556, 0.018212097, 0.018218056, 0.018222389, 0.018228569, 0.018231792, 0.018236208, 0.018239014, 0.018245292, 0.018250028, 0.018252875, 0.018257917, 0.018260806, 0.018266167, 0.018272389, 0.018277292, 0.018280278, 0.01828625, 0.018291222, 0.018297139, 0.018302569, 0.018306667, 0.018309389, 0.018311847, 0.018315833, 0.018319486, 0.018323028, 0.018329125, 0.018334042, 0.0183365, 0.0183395, 0.018342611, 0.01834825, 0.018354167, 0.018358458, 0.018361306, 0.018366403, 0.018371069, 0.018376625, 0.018379583, 0.018383681, 0.018389278, 0.018392208, 0.018397667, 0.018402278, 0.018404806]}</msg>
<status status="PASS" starttime="20201112 09:42:41.450" endtime="20201112 09:42:41.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.446" endtime="20201112 09:42:41.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:41.457" level="INFO">${RESULT} = [{'time': 0.018193681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3339999999982e-06, 'source_diff': 4.3339999999982e-06}, {'time': 0.018203097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 09:42:41.454" endtime="20201112 09:42:41.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:41.465" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.3339999999982e-06, 6.194000000001032e-06, 5.541000000001267e-06, 4.332999999998727e-06, 3.2230000000001147e-06, 2.80600000000103e-06, 4.736000000001711e-06, 5.042000000000241e-06, 5...</msg>
<status status="PASS" starttime="20201112 09:42:41.458" endtime="20201112 09:42:41.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.469" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:41.468" endtime="20201112 09:42:41.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.471" level="INFO">VALUE: [4.3339999999982e-06, 6.194000000001032e-06, 5.541000000001267e-06, 4.332999999998727e-06, 3.2230000000001147e-06, 2.80600000000103e-06, 4.736000000001711e-06, 5.042000000000241e-06, 5.360999999998867e-06, 4.903000000000546e-06, 5.971999999999922e-06, 5.917000000001116e-06, 4.09799999999752e-06, 2.458000000000321e-06, 3.6529999999992957e-06, 6.097000000000047e-06, 2.458000000000321e-06, 3.111000000000086e-06, 5.917000000001116e-06, 2.8479999999997396e-06, 4.666000000000392e-06, 2.958000000000821e-06, 5.596999999999547e-06, 5.4589999999993255e-06, 2.5279999999981706e-06]</msg>
<status status="PASS" starttime="20201112 09:42:41.470" endtime="20201112 09:42:41.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.465" endtime="20201112 09:42:41.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.475" endtime="20201112 09:42:41.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.478" endtime="20201112 09:42:41.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.476" endtime="20201112 09:42:41.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.473" endtime="20201112 09:42:41.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.112" endtime="20201112 09:42:41.499"></status>
</kw>
<msg timestamp="20201112 09:42:41.499" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.507" endtime="20201112 09:42:41.521"></status>
</kw>
<msg timestamp="20201112 09:42:41.522" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.506" endtime="20201112 09:42:41.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.524" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.523" endtime="20201112 09:42:41.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.525" endtime="20201112 09:42:41.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.502" endtime="20201112 09:42:41.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.501" endtime="20201112 09:42:41.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.534" endtime="20201112 09:42:41.798"></status>
</kw>
<msg timestamp="20201112 09:42:41.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018278431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018281778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.533" endtime="20201112 09:42:41.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018278431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018281778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.801" endtime="20201112 09:42:41.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.806" endtime="20201112 09:42:41.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.530" endtime="20201112 09:42:41.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.529" endtime="20201112 09:42:41.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.813" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:41.812" endtime="20201112 09:42:41.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.816" level="INFO">VALUE: [{'time': 0.018278431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018281778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.018285806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.018290778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018294875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018300847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018305708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018308736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.018311153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.018316625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018319347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018324764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018329875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018335153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018338944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.018342667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.018346222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.018350931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.709000000002045e-06, 'source_diff': 4.709000000002045e-06}, {'time': 0.018355403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018361069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.018364167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.018369208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.018372431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018376153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.018379569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018382236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.018387708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018392, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018396167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.167000000002835e-06, 'source_diff': 4.167000000002835e-06}, {'time': 0.018401639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018404861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018410583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018415069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018418347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.018423194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018428875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.018435097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018438625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018443431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.018446083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.018449056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9729999999998646e-06, 'source_diff': 2.9729999999998646e-06}, {'time': 0.018452153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018456194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018461917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.723000000002615e-06, 'source_diff': 5.723000000002615e-06}, {'time': 0.018465583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.018471361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.018476278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018478944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.018483361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018488014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:41.814" endtime="20201112 09:42:41.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.810" endtime="20201112 09:42:41.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:41.832" level="INFO">${debug-compressed} = {'source_diff': [0, 3.3469999999972966e-06, 4.02800000000314e-06, 4.971999999998922e-06, 4.096999999998047e-06, 5.971999999999922e-06, 4.861000000001836e-06, 3.0279999999986706e-06, 2.417000000001085e...</msg>
<status status="PASS" starttime="20201112 09:42:41.819" endtime="20201112 09:42:41.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.835" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:41.834" endtime="20201112 09:42:41.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.839" level="INFO">VALUE: {'source_diff': [0, 3.3469999999972966e-06, 4.02800000000314e-06, 4.971999999998922e-06, 4.096999999998047e-06, 5.971999999999922e-06, 4.861000000001836e-06, 3.0279999999986706e-06, 2.417000000001085e-06, 5.471999999999422e-06, 2.722000000000141e-06, 5.417000000000616e-06, 5.110999999998617e-06, 5.278000000000921e-06, 3.790999999999517e-06, 3.7230000000006147e-06, 3.554999999998837e-06, 4.709000000002045e-06, 4.471999999998422e-06, 5.666000000001392e-06, 3.0979999999999897e-06, 5.041000000000767e-06, 3.2230000000001147e-06, 3.7219999999976716e-06, 3.415999999999142e-06, 2.667000000001335e-06, 5.471999999999422e-06, 4.291999999999491e-06, 4.167000000002835e-06, 5.471999999999422e-06, 3.222000000000641e-06, 5.721999999999672e-06, 4.485999999997992e-06, 3.27800000000239e-06, 4.846999999998797e-06, 5.681000000000436e-06, 6.222000000000172e-06, 3.5279999999991707e-06, 4.805999999999561e-06, 2.651999999998822e-06, 2.9729999999998646e-06, 3.097000000000516e-06, 4.040999999999767e-06, 5.723000000002615e-06, 3.665999999999392e-06, 5.7779999999979514e-06, 4.917000000000116e-06, 2.6660000000018613e-06, 4.416999999999616e-06, 4.653000000000296e-06], 'diff': [0, 3.3469999999972966e-06, 4.02800000000314e-06, 4.971999999998922e-06, 4.096999999998047e-06, 5.971999999999922e-06, 4.861000000001836e-06, 3.0279999999986706e-06, 2.417000000001085e-06, 5.471999999999422e-06, 2.722000000000141e-06, 5.417000000000616e-06, 5.110999999998617e-06, 5.278000000000921e-06, 3.790999999999517e-06, 3.7230000000006147e-06, 3.554999999998837e-06, 4.709000000002045e-06, 4.471999999998422e-06, 5.666000000001392e-06, 3.0979999999999897e-06, 5.041000000000767e-06, 3.2230000000001147e-06, 3.7219999999976716e-06, 3.415999999999142e-06, 2.667000000001335e-06, 5.471999999999422e-06, 4.291999999999491e-06, 4.167000000002835e-06, 5.471999999999422e-06, 3.222000000000641e-06, 5.721999999999672e-06, 4.485999999997992e-06, 3.27800000000239e-06, 4.846999999998797e-06, 5.681000000000436e-06, 6.222000000000172e-06, 3.5279999999991707e-06, 4.805999999999561e-06, 2.651999999998822e-06, 2.9729999999998646e-06, 3.097000000000516e-06, 4.040999999999767e-06, 5.723000000002615e-06, 3.665999999999392e-06, 5.7779999999979514e-06, 4.917000000000116e-06, 2.6660000000018613e-06, 4.416999999999616e-06, 4.653000000000296e-06], 'eventsourcetime': [0.018278431, 0.018281778, 0.018285806, 0.018290778, 0.018294875, 0.018300847, 0.018305708, 0.018308736, 0.018311153, 0.018316625, 0.018319347, 0.018324764, 0.018329875, 0.018335153, 0.018338944, 0.018342667, 0.018346222, 0.018350931, 0.018355403, 0.018361069, 0.018364167, 0.018369208, 0.018372431, 0.018376153, 0.018379569, 0.018382236, 0.018387708, 0.018392, 0.018396167, 0.018401639, 0.018404861, 0.018410583, 0.018415069, 0.018418347, 0.018423194, 0.018428875, 0.018435097, 0.018438625, 0.018443431, 0.018446083, 0.018449056, 0.018452153, 0.018456194, 0.018461917, 0.018465583, 0.018471361, 0.018476278, 0.018478944, 0.018483361, 0.018488014]}</msg>
<status status="PASS" starttime="20201112 09:42:41.836" endtime="20201112 09:42:41.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.833" endtime="20201112 09:42:41.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:41.843" level="INFO">${RESULT} = [{'time': 0.018281778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.018290778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:41.840" endtime="20201112 09:42:41.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:41.852" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.3469999999972966e-06, 4.971999999998922e-06, 5.971999999999922e-06, 3.0279999999986706e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.278000000000921e-06, 3.7230000000006147e-...</msg>
<status status="PASS" starttime="20201112 09:42:41.844" endtime="20201112 09:42:41.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.856" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:41.855" endtime="20201112 09:42:41.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.858" level="INFO">VALUE: [3.3469999999972966e-06, 4.971999999998922e-06, 5.971999999999922e-06, 3.0279999999986706e-06, 5.471999999999422e-06, 5.417000000000616e-06, 5.278000000000921e-06, 3.7230000000006147e-06, 4.709000000002045e-06, 5.666000000001392e-06, 5.041000000000767e-06, 3.7219999999976716e-06, 2.667000000001335e-06, 4.291999999999491e-06, 5.471999999999422e-06, 5.721999999999672e-06, 3.27800000000239e-06, 5.681000000000436e-06, 3.5279999999991707e-06, 2.651999999998822e-06, 3.097000000000516e-06, 5.723000000002615e-06, 5.7779999999979514e-06, 2.6660000000018613e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201112 09:42:41.857" endtime="20201112 09:42:41.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.853" endtime="20201112 09:42:41.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.862" endtime="20201112 09:42:41.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.865" endtime="20201112 09:42:41.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.863" endtime="20201112 09:42:41.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.860" endtime="20201112 09:42:41.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.499" endtime="20201112 09:42:41.886"></status>
</kw>
<msg timestamp="20201112 09:42:41.886" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.894" endtime="20201112 09:42:41.908"></status>
</kw>
<msg timestamp="20201112 09:42:41.908" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.893" endtime="20201112 09:42:41.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.911" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.909" endtime="20201112 09:42:41.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.912" endtime="20201112 09:42:41.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.890" endtime="20201112 09:42:41.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.888" endtime="20201112 09:42:41.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.921" endtime="20201112 09:42:42.185"></status>
</kw>
<msg timestamp="20201112 09:42:42.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018189389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.919" endtime="20201112 09:42:42.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018189389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.188" endtime="20201112 09:42:42.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.193" endtime="20201112 09:42:42.194"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.917" endtime="20201112 09:42:42.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.915" endtime="20201112 09:42:42.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.199" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.198" endtime="20201112 09:42:42.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.203" level="INFO">VALUE: [{'time': 0.018189389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018195736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018200375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018203167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.018207958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018210944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018213458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.018216375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018220667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018225583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018228181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.018232417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018237444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.018242542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.018247208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666000000000392e-06, 'source_diff': 4.666000000000392e-06}, {'time': 0.018251181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972999999997395e-06, 'source_diff': 3.972999999997395e-06}, {'time': 0.018256597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.018262444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018265931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4869999999999346e-06, 'source_diff': 3.4869999999999346e-06}, {'time': 0.018269389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.018275125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.018281111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018287069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.018293292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.018297333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018300194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018304417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.018309764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018312236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018317556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319999999999631e-06, 'source_diff': 5.319999999999631e-06}, {'time': 0.018321625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.018326917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018333014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018336361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.018339583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.0183435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018349472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018354014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.0183575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018363347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018365819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018369417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.018373708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018376236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.018379028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.0183835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018388236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.018390972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.01839425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:42.200" endtime="20201112 09:42:42.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.196" endtime="20201112 09:42:42.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.218" level="INFO">${debug-compressed} = {'source_diff': [0, 2.874999999999406e-06, 3.472000000000891e-06, 4.639000000000726e-06, 2.7919999999979905e-06, 4.791000000000517e-06, 2.985999999999961e-06, 2.5139999999986007e-06, 2.917000000001585...</msg>
<status status="PASS" starttime="20201112 09:42:42.205" endtime="20201112 09:42:42.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.222" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.221" endtime="20201112 09:42:42.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.225" level="INFO">VALUE: {'source_diff': [0, 2.874999999999406e-06, 3.472000000000891e-06, 4.639000000000726e-06, 2.7919999999979905e-06, 4.791000000000517e-06, 2.985999999999961e-06, 2.5139999999986007e-06, 2.917000000001585e-06, 4.291999999999491e-06, 4.916000000000642e-06, 2.5979999999994896e-06, 4.236000000001211e-06, 5.026999999997728e-06, 5.09800000000199e-06, 4.666000000000392e-06, 3.972999999997395e-06, 5.416000000001142e-06, 5.846999999999797e-06, 3.4869999999999346e-06, 3.458000000001321e-06, 5.735999999999242e-06, 5.985999999999492e-06, 5.958000000000352e-06, 6.2229999999996455e-06, 4.040999999999767e-06, 2.860999999999836e-06, 4.223000000001115e-06, 5.346999999999297e-06, 2.471999999999891e-06, 5.319999999999631e-06, 4.069000000002376e-06, 5.292000000000491e-06, 6.097000000000047e-06, 3.3469999999972966e-06, 3.222000000000641e-06, 3.916999999999116e-06, 5.971999999999922e-06, 4.541999999999741e-06, 3.486000000000461e-06, 5.846999999999797e-06, 2.471999999999891e-06, 3.5980000000004897e-06, 4.291000000000017e-06, 2.52800000000164e-06, 2.7919999999979905e-06, 4.472000000001891e-06, 4.735999999998242e-06, 2.735999999999711e-06, 3.27800000000239e-06], 'diff': [0, 2.874999999999406e-06, 3.472000000000891e-06, 4.639000000000726e-06, 2.7919999999979905e-06, 4.791000000000517e-06, 2.985999999999961e-06, 2.5139999999986007e-06, 2.917000000001585e-06, 4.291999999999491e-06, 4.916000000000642e-06, 2.5979999999994896e-06, 4.236000000001211e-06, 5.026999999997728e-06, 5.09800000000199e-06, 4.666000000000392e-06, 3.972999999997395e-06, 5.416000000001142e-06, 5.846999999999797e-06, 3.4869999999999346e-06, 3.458000000001321e-06, 5.735999999999242e-06, 5.985999999999492e-06, 5.958000000000352e-06, 6.2229999999996455e-06, 4.040999999999767e-06, 2.860999999999836e-06, 4.223000000001115e-06, 5.346999999999297e-06, 2.471999999999891e-06, 5.319999999999631e-06, 4.069000000002376e-06, 5.292000000000491e-06, 6.097000000000047e-06, 3.3469999999972966e-06, 3.222000000000641e-06, 3.916999999999116e-06, 5.971999999999922e-06, 4.541999999999741e-06, 3.486000000000461e-06, 5.846999999999797e-06, 2.471999999999891e-06, 3.5980000000004897e-06, 4.291000000000017e-06, 2.52800000000164e-06, 2.7919999999979905e-06, 4.472000000001891e-06, 4.735999999998242e-06, 2.735999999999711e-06, 3.27800000000239e-06], 'eventsourcetime': [0.018189389, 0.018192264, 0.018195736, 0.018200375, 0.018203167, 0.018207958, 0.018210944, 0.018213458, 0.018216375, 0.018220667, 0.018225583, 0.018228181, 0.018232417, 0.018237444, 0.018242542, 0.018247208, 0.018251181, 0.018256597, 0.018262444, 0.018265931, 0.018269389, 0.018275125, 0.018281111, 0.018287069, 0.018293292, 0.018297333, 0.018300194, 0.018304417, 0.018309764, 0.018312236, 0.018317556, 0.018321625, 0.018326917, 0.018333014, 0.018336361, 0.018339583, 0.0183435, 0.018349472, 0.018354014, 0.0183575, 0.018363347, 0.018365819, 0.018369417, 0.018373708, 0.018376236, 0.018379028, 0.0183835, 0.018388236, 0.018390972, 0.01839425]}</msg>
<status status="PASS" starttime="20201112 09:42:42.223" endtime="20201112 09:42:42.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.219" endtime="20201112 09:42:42.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.229" level="INFO">${RESULT} = [{'time': 0.018192264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018200375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:42.227" endtime="20201112 09:42:42.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.237" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.874999999999406e-06, 4.639000000000726e-06, 4.791000000000517e-06, 2.5139999999986007e-06, 4.291999999999491e-06, 2.5979999999994896e-06, 5.026999999997728e-06, 4.666000000000392e-0...</msg>
<status status="PASS" starttime="20201112 09:42:42.230" endtime="20201112 09:42:42.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.241" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.240" endtime="20201112 09:42:42.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.244" level="INFO">VALUE: [2.874999999999406e-06, 4.639000000000726e-06, 4.791000000000517e-06, 2.5139999999986007e-06, 4.291999999999491e-06, 2.5979999999994896e-06, 5.026999999997728e-06, 4.666000000000392e-06, 5.416000000001142e-06, 3.4869999999999346e-06, 5.735999999999242e-06, 5.958000000000352e-06, 4.040999999999767e-06, 4.223000000001115e-06, 2.471999999999891e-06, 4.069000000002376e-06, 6.097000000000047e-06, 3.222000000000641e-06, 5.971999999999922e-06, 3.486000000000461e-06, 2.471999999999891e-06, 4.291000000000017e-06, 2.7919999999979905e-06, 4.735999999998242e-06, 3.27800000000239e-06]</msg>
<status status="PASS" starttime="20201112 09:42:42.242" endtime="20201112 09:42:42.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.238" endtime="20201112 09:42:42.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.247" endtime="20201112 09:42:42.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.251" endtime="20201112 09:42:42.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.249" endtime="20201112 09:42:42.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.245" endtime="20201112 09:42:42.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.886" endtime="20201112 09:42:42.272"></status>
</kw>
<msg timestamp="20201112 09:42:42.272" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.280" endtime="20201112 09:42:42.293"></status>
</kw>
<msg timestamp="20201112 09:42:42.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.278" endtime="20201112 09:42:42.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.296" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.294" endtime="20201112 09:42:42.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.297" endtime="20201112 09:42:42.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.275" endtime="20201112 09:42:42.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.274" endtime="20201112 09:42:42.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.306" endtime="20201112 09:42:42.570"></status>
</kw>
<msg timestamp="20201112 09:42:42.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017373333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017379611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.304" endtime="20201112 09:42:42.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017373333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017379611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.573" endtime="20201112 09:42:42.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.578" endtime="20201112 09:42:42.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.302" endtime="20201112 09:42:42.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.300" endtime="20201112 09:42:42.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.584" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.583" endtime="20201112 09:42:42.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.588" level="INFO">VALUE: [{'time': 0.017373333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017379611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017383667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0559999999988106e-06, 'source_diff': 4.0559999999988106e-06}, {'time': 0.017387194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5270000000031665e-06, 'source_diff': 3.5270000000031665e-06}, {'time': 0.017392347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.017394861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.017400069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.017404597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.017409694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017414292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.017417847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.017420306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.017423486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.01742725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.017431542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.017436139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017438889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.017444153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.017449583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.017452806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.017459028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017464931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.017469653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017475319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.01748, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.017484917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017490806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.017495042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.017499569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.017502528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.017506722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.017511167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.445000000002225e-06, 'source_diff': 4.445000000002225e-06}, {'time': 0.017516472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305000000000587e-06, 'source_diff': 5.305000000000587e-06}, {'time': 0.017518972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.017521306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3339999999996697e-06, 'source_diff': 2.3339999999996697e-06}, {'time': 0.017525847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017529625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017533542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017537514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017542708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.017546986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017552069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017556361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017560708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.017565319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.017567833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.017572139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.017578236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017582708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017588125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:42.585" endtime="20201112 09:42:42.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.581" endtime="20201112 09:42:42.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.603" level="INFO">${debug-compressed} = {'source_diff': [0, 6.2779999999984515e-06, 4.0559999999988106e-06, 3.5270000000031665e-06, 5.152999999997326e-06, 2.51400000000207e-06, 5.207999999999602e-06, 4.528000000000171e-06, 5.096999999999047...</msg>
<status status="PASS" starttime="20201112 09:42:42.590" endtime="20201112 09:42:42.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.607" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.606" endtime="20201112 09:42:42.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.610" level="INFO">VALUE: {'source_diff': [0, 6.2779999999984515e-06, 4.0559999999988106e-06, 3.5270000000031665e-06, 5.152999999997326e-06, 2.51400000000207e-06, 5.207999999999602e-06, 4.528000000000171e-06, 5.096999999999047e-06, 4.59800000000149e-06, 3.554999999998837e-06, 2.4589999999997947e-06, 3.179999999998462e-06, 3.763999999999851e-06, 4.29200000000296e-06, 4.596999999998547e-06, 2.749999999999281e-06, 5.264000000001351e-06, 5.430000000000712e-06, 3.2230000000001147e-06, 6.222000000000172e-06, 5.9029999999980765e-06, 4.722000000002141e-06, 5.665999999997923e-06, 4.680999999999436e-06, 4.917000000000116e-06, 5.889000000001976e-06, 4.2359999999977416e-06, 4.527000000000697e-06, 2.9590000000002947e-06, 4.193999999999032e-06, 4.445000000002225e-06, 5.305000000000587e-06, 2.4999999999990308e-06, 2.3339999999996697e-06, 4.541000000000267e-06, 3.7779999999994207e-06, 3.916999999999116e-06, 3.972000000001391e-06, 5.194000000000032e-06, 4.277999999999921e-06, 5.082999999999477e-06, 4.291999999999491e-06, 4.347000000001766e-06, 4.610999999998117e-06, 2.51400000000207e-06, 4.305999999999061e-06, 6.097000000000047e-06, 4.471999999998422e-06, 5.417000000000616e-06], 'diff': [0, 6.2779999999984515e-06, 4.0559999999988106e-06, 3.5270000000031665e-06, 5.152999999997326e-06, 2.51400000000207e-06, 5.207999999999602e-06, 4.528000000000171e-06, 5.096999999999047e-06, 4.59800000000149e-06, 3.554999999998837e-06, 2.4589999999997947e-06, 3.179999999998462e-06, 3.763999999999851e-06, 4.29200000000296e-06, 4.596999999998547e-06, 2.749999999999281e-06, 5.264000000001351e-06, 5.430000000000712e-06, 3.2230000000001147e-06, 6.222000000000172e-06, 5.9029999999980765e-06, 4.722000000002141e-06, 5.665999999997923e-06, 4.680999999999436e-06, 4.917000000000116e-06, 5.889000000001976e-06, 4.2359999999977416e-06, 4.527000000000697e-06, 2.9590000000002947e-06, 4.193999999999032e-06, 4.445000000002225e-06, 5.305000000000587e-06, 2.4999999999990308e-06, 2.3339999999996697e-06, 4.541000000000267e-06, 3.7779999999994207e-06, 3.916999999999116e-06, 3.972000000001391e-06, 5.194000000000032e-06, 4.277999999999921e-06, 5.082999999999477e-06, 4.291999999999491e-06, 4.347000000001766e-06, 4.610999999998117e-06, 2.51400000000207e-06, 4.305999999999061e-06, 6.097000000000047e-06, 4.471999999998422e-06, 5.417000000000616e-06], 'eventsourcetime': [0.017373333, 0.017379611, 0.017383667, 0.017387194, 0.017392347, 0.017394861, 0.017400069, 0.017404597, 0.017409694, 0.017414292, 0.017417847, 0.017420306, 0.017423486, 0.01742725, 0.017431542, 0.017436139, 0.017438889, 0.017444153, 0.017449583, 0.017452806, 0.017459028, 0.017464931, 0.017469653, 0.017475319, 0.01748, 0.017484917, 0.017490806, 0.017495042, 0.017499569, 0.017502528, 0.017506722, 0.017511167, 0.017516472, 0.017518972, 0.017521306, 0.017525847, 0.017529625, 0.017533542, 0.017537514, 0.017542708, 0.017546986, 0.017552069, 0.017556361, 0.017560708, 0.017565319, 0.017567833, 0.017572139, 0.017578236, 0.017582708, 0.017588125]}</msg>
<status status="PASS" starttime="20201112 09:42:42.608" endtime="20201112 09:42:42.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.604" endtime="20201112 09:42:42.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.614" level="INFO">${RESULT} = [{'time': 0.017379611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017387194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:42.612" endtime="20201112 09:42:42.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.623" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [6.2779999999984515e-06, 3.5270000000031665e-06, 2.51400000000207e-06, 4.528000000000171e-06, 4.59800000000149e-06, 2.4589999999997947e-06, 3.763999999999851e-06, 4.596999999998547e-06...</msg>
<status status="PASS" starttime="20201112 09:42:42.615" endtime="20201112 09:42:42.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.627" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.626" endtime="20201112 09:42:42.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.629" level="INFO">VALUE: [6.2779999999984515e-06, 3.5270000000031665e-06, 2.51400000000207e-06, 4.528000000000171e-06, 4.59800000000149e-06, 2.4589999999997947e-06, 3.763999999999851e-06, 4.596999999998547e-06, 5.264000000001351e-06, 3.2230000000001147e-06, 5.9029999999980765e-06, 5.665999999997923e-06, 4.917000000000116e-06, 4.2359999999977416e-06, 2.9590000000002947e-06, 4.445000000002225e-06, 2.4999999999990308e-06, 4.541000000000267e-06, 3.916999999999116e-06, 5.194000000000032e-06, 5.082999999999477e-06, 4.347000000001766e-06, 2.51400000000207e-06, 6.097000000000047e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201112 09:42:42.628" endtime="20201112 09:42:42.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.624" endtime="20201112 09:42:42.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.632" endtime="20201112 09:42:42.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.636" endtime="20201112 09:42:42.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.634" endtime="20201112 09:42:42.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.631" endtime="20201112 09:42:42.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.273" endtime="20201112 09:42:42.656"></status>
</kw>
<msg timestamp="20201112 09:42:42.657" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.664" endtime="20201112 09:42:42.678"></status>
</kw>
<msg timestamp="20201112 09:42:42.679" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.663" endtime="20201112 09:42:42.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.681" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.680" endtime="20201112 09:42:42.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.682" endtime="20201112 09:42:42.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.660" endtime="20201112 09:42:42.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.659" endtime="20201112 09:42:42.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.691" endtime="20201112 09:42:42.955"></status>
</kw>
<msg timestamp="20201112 09:42:42.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017314458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017318319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.689" endtime="20201112 09:42:42.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017314458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017318319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.958" endtime="20201112 09:42:42.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.963" endtime="20201112 09:42:42.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.687" endtime="20201112 09:42:42.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.685" endtime="20201112 09:42:42.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.970" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.969" endtime="20201112 09:42:42.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.973" level="INFO">VALUE: [{'time': 0.017314458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017318319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.017322542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.223000000001115e-06, 'source_diff': 4.223000000001115e-06}, {'time': 0.017328833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.017332625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.017336486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017339, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999986007e-06, 'source_diff': 2.5139999999986007e-06}, {'time': 0.017343792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017349972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.017355125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.017359292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.0173645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.208000000003071e-06, 'source_diff': 5.208000000003071e-06}, {'time': 0.017368111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6109999999971165e-06, 'source_diff': 3.6109999999971165e-06}, {'time': 0.017374333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017377444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017380153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7090000000000447e-06, 'source_diff': 2.7090000000000447e-06}, {'time': 0.017383014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017386042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.017389347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.304999999998587e-06, 'source_diff': 3.304999999998587e-06}, {'time': 0.017392875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017396903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017402889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.017405417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.017409403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017415264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017420347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017425736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.017429306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5699999999978804e-06, 'source_diff': 3.5699999999978804e-06}, {'time': 0.017431833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.017437931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0979999999995205e-06, 'source_diff': 6.0979999999995205e-06}, {'time': 0.017443972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.017448583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.017451986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017454958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017457889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.017462556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017468389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.01747125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017476653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017482625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.01748825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999998687e-06, 'source_diff': 5.624999999998687e-06}, {'time': 0.017492889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017498069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.017501292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.017505639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017511736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.017515639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017520569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.017523153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5839999999999197e-06, 'source_diff': 2.5839999999999197e-06}, {'time': 0.017529208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055000000001337e-06, 'source_diff': 6.055000000001337e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:42.971" endtime="20201112 09:42:42.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.966" endtime="20201112 09:42:42.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.989" level="INFO">${debug-compressed} = {'source_diff': [0, 3.8609999999973665e-06, 4.223000000001115e-06, 6.290999999998548e-06, 3.79200000000246e-06, 3.861000000000836e-06, 2.5139999999986007e-06, 4.791999999999991e-06, 6.180000000001462e...</msg>
<status status="PASS" starttime="20201112 09:42:42.976" endtime="20201112 09:42:42.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.993" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.992" endtime="20201112 09:42:42.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.996" level="INFO">VALUE: {'source_diff': [0, 3.8609999999973665e-06, 4.223000000001115e-06, 6.290999999998548e-06, 3.79200000000246e-06, 3.861000000000836e-06, 2.5139999999986007e-06, 4.791999999999991e-06, 6.180000000001462e-06, 5.152999999997326e-06, 4.166999999999366e-06, 5.208000000003071e-06, 3.6109999999971165e-06, 6.222000000000172e-06, 3.111000000000086e-06, 2.7090000000000447e-06, 2.860999999999836e-06, 3.02800000000214e-06, 3.304999999998587e-06, 3.5279999999991707e-06, 4.027999999999671e-06, 5.986000000002961e-06, 2.5279999999981706e-06, 3.986000000000961e-06, 5.860999999999367e-06, 5.082999999999477e-06, 5.389000000001476e-06, 3.5699999999978804e-06, 2.5270000000021664e-06, 6.0979999999995205e-06, 6.040999999998298e-06, 4.611000000001586e-06, 3.4029999999990457e-06, 2.972000000000391e-06, 2.931000000001155e-06, 4.666999999999866e-06, 5.833000000000227e-06, 2.860999999999836e-06, 5.403000000001046e-06, 5.971999999999922e-06, 5.624999999998687e-06, 4.639000000000726e-06, 5.180000000000462e-06, 3.2230000000001147e-06, 4.346999999998297e-06, 6.097000000000047e-06, 3.902999999999546e-06, 4.930000000000212e-06, 2.5839999999999197e-06, 6.055000000001337e-06], 'diff': [0, 3.8609999999973665e-06, 4.223000000001115e-06, 6.290999999998548e-06, 3.79200000000246e-06, 3.861000000000836e-06, 2.5139999999986007e-06, 4.791999999999991e-06, 6.180000000001462e-06, 5.152999999997326e-06, 4.166999999999366e-06, 5.208000000003071e-06, 3.6109999999971165e-06, 6.222000000000172e-06, 3.111000000000086e-06, 2.7090000000000447e-06, 2.860999999999836e-06, 3.02800000000214e-06, 3.304999999998587e-06, 3.5279999999991707e-06, 4.027999999999671e-06, 5.986000000002961e-06, 2.5279999999981706e-06, 3.986000000000961e-06, 5.860999999999367e-06, 5.082999999999477e-06, 5.389000000001476e-06, 3.5699999999978804e-06, 2.5270000000021664e-06, 6.0979999999995205e-06, 6.040999999998298e-06, 4.611000000001586e-06, 3.4029999999990457e-06, 2.972000000000391e-06, 2.931000000001155e-06, 4.666999999999866e-06, 5.833000000000227e-06, 2.860999999999836e-06, 5.403000000001046e-06, 5.971999999999922e-06, 5.624999999998687e-06, 4.639000000000726e-06, 5.180000000000462e-06, 3.2230000000001147e-06, 4.346999999998297e-06, 6.097000000000047e-06, 3.902999999999546e-06, 4.930000000000212e-06, 2.5839999999999197e-06, 6.055000000001337e-06], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.017314458, 0.017318319, 0.017322542, 0.017328833, 0.017332625, 0.017336486, 0.017339, 0.017343792, 0.017349972, 0.017355125, 0.017359292, 0.0173645, 0.017368111, 0.017374333, 0.017377444, 0.017380153, 0.017383014, 0.017386042, 0.017389347, 0.017392875, 0.017396903, 0.017402889, 0.017405417, 0.017409403, 0.017415264, 0.017420347, 0.017425736, 0.017429306, 0.017431833, 0.017437931, 0.017443972, 0.017448583, 0.017451986, 0.017454958, 0.017457889, 0.017462556, 0.017468389, 0.01747125, 0.017476653, 0.017482625, 0.01748825, 0.017492889, 0.017498069, 0.017501292, 0.017505639, 0.017511736, 0.017515639, 0.017520569, 0.017523153, 0.017529208]}</msg>
<status status="PASS" starttime="20201112 09:42:42.994" endtime="20201112 09:42:42.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.990" endtime="20201112 09:42:42.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.001" level="INFO">${RESULT} = [{'time': 0.017318319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.017328833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:42.998" endtime="20201112 09:42:43.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.009" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.8609999999973665e-06, 6.290999999998548e-06, 3.861000000000836e-06, 4.791999999999991e-06, 5.152999999997326e-06, 5.208000000003071e-06, 6.222000000000172e-06, 2.7090000000000447e-0...</msg>
<status status="PASS" starttime="20201112 09:42:43.002" endtime="20201112 09:42:43.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.013" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.012" endtime="20201112 09:42:43.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.015" level="INFO">VALUE: [3.8609999999973665e-06, 6.290999999998548e-06, 3.861000000000836e-06, 4.791999999999991e-06, 5.152999999997326e-06, 5.208000000003071e-06, 6.222000000000172e-06, 2.7090000000000447e-06, 3.02800000000214e-06, 3.5279999999991707e-06, 5.986000000002961e-06, 3.986000000000961e-06, 5.082999999999477e-06, 3.5699999999978804e-06, 6.0979999999995205e-06, 4.611000000001586e-06, 2.972000000000391e-06, 4.666999999999866e-06, 2.860999999999836e-06, 5.971999999999922e-06, 4.639000000000726e-06, 3.2230000000001147e-06, 6.097000000000047e-06, 4.930000000000212e-06, 6.055000000001337e-06]</msg>
<status status="PASS" starttime="20201112 09:42:43.014" endtime="20201112 09:42:43.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.010" endtime="20201112 09:42:43.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.018" endtime="20201112 09:42:43.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.022" endtime="20201112 09:42:43.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.020" endtime="20201112 09:42:43.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.017" endtime="20201112 09:42:43.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.657" endtime="20201112 09:42:43.043"></status>
</kw>
<msg timestamp="20201112 09:42:43.043" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.050" endtime="20201112 09:42:43.065"></status>
</kw>
<msg timestamp="20201112 09:42:43.065" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.049" endtime="20201112 09:42:43.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.066" endtime="20201112 09:42:43.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.069" endtime="20201112 09:42:43.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.046" endtime="20201112 09:42:43.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.045" endtime="20201112 09:42:43.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.078" endtime="20201112 09:42:43.342"></status>
</kw>
<msg timestamp="20201112 09:42:43.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017277153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0172795, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:43.076" endtime="20201112 09:42:43.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017277153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0172795, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:42:43.344" endtime="20201112 09:42:43.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.350" endtime="20201112 09:42:43.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.074" endtime="20201112 09:42:43.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.072" endtime="20201112 09:42:43.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.357" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:43.356" endtime="20201112 09:42:43.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.361" level="INFO">VALUE: [{'time': 0.017277153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0172795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017285819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.319000000001157e-06, 'source_diff': 6.319000000001157e-06}, {'time': 0.017289125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3059999999980605e-06, 'source_diff': 3.3059999999980605e-06}, {'time': 0.017294361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.017298903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017302944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017308653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.017314694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.017320417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.723000000002615e-06, 'source_diff': 5.723000000002615e-06}, {'time': 0.017323278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017326375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017330722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.017333694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017338986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017342542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5559999999983105e-06, 'source_diff': 3.5559999999983105e-06}, {'time': 0.017347875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.017353222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017355639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.017360556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017365653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.017368583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.929999999998212e-06, 'source_diff': 2.929999999998212e-06}, {'time': 0.017371472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8889999999989757e-06, 'source_diff': 2.8889999999989757e-06}, {'time': 0.017374347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.017378111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7640000000033202e-06, 'source_diff': 3.7640000000033202e-06}, {'time': 0.017382028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017385417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.017387722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.017393264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541999999997271e-06, 'source_diff': 5.541999999997271e-06}, {'time': 0.017395986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017401972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.017407583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017413861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017419514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.017425625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.017428486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017431194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.017435861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.017438583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017441264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.017444417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017448694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.017454486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017458333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.017461194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017465403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.209000000001545e-06, 'source_diff': 4.209000000001545e-06}, {'time': 0.017468958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.017473861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017478292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.017481875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:43.358" endtime="20201112 09:42:43.362"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.354" endtime="20201112 09:42:43.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:43.376" level="INFO">${debug-compressed} = {'source_diff': [0, 2.346999999999766e-06, 6.319000000001157e-06, 3.3059999999980605e-06, 5.236000000002211e-06, 4.541999999999741e-06, 4.040999999999767e-06, 5.7089999999995755e-06, 6.040999999998298...</msg>
<status status="PASS" starttime="20201112 09:42:43.363" endtime="20201112 09:42:43.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.380" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:43.379" endtime="20201112 09:42:43.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.383" level="INFO">VALUE: {'source_diff': [0, 2.346999999999766e-06, 6.319000000001157e-06, 3.3059999999980605e-06, 5.236000000002211e-06, 4.541999999999741e-06, 4.040999999999767e-06, 5.7089999999995755e-06, 6.040999999998298e-06, 5.723000000002615e-06, 2.860999999999836e-06, 3.097000000000516e-06, 4.346999999998297e-06, 2.972000000000391e-06, 5.292000000000491e-06, 3.5559999999983105e-06, 5.332999999999727e-06, 5.347000000002766e-06, 2.4169999999976155e-06, 4.917000000000116e-06, 5.097000000002516e-06, 2.929999999998212e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 3.7640000000033202e-06, 3.916999999999116e-06, 3.3889999999994758e-06, 2.305000000001056e-06, 5.541999999997271e-06, 2.722000000000141e-06, 5.986000000002961e-06, 5.610999999999117e-06, 6.2779999999984515e-06, 5.653000000001296e-06, 6.110999999999617e-06, 2.860999999999836e-06, 2.708000000000571e-06, 4.666999999999866e-06, 2.722000000000141e-06, 2.681000000000905e-06, 3.1529999999987957e-06, 4.277000000000447e-06, 5.792000000000991e-06, 3.846999999997797e-06, 2.860999999999836e-06, 4.209000000001545e-06, 3.554999999998837e-06, 4.903000000000546e-06, 4.430999999999186e-06, 3.583000000001446e-06], 'diff': [0, 2.346999999999766e-06, 6.319000000001157e-06, 3.3059999999980605e-06, 5.236000000002211e-06, 4.541999999999741e-06, 4.040999999999767e-06, 5.7089999999995755e-06, 6.040999999998298e-06, 5.723000000002615e-06, 2.860999999999836e-06, 3.097000000000516e-06, 4.346999999998297e-06, 2.972000000000391e-06, 5.292000000000491e-06, 3.5559999999983105e-06, 5.332999999999727e-06, 5.347000000002766e-06, 2.4169999999976155e-06, 4.917000000000116e-06, 5.097000000002516e-06, 2.929999999998212e-06, 2.8889999999989757e-06, 2.874999999999406e-06, 3.7640000000033202e-06, 3.916999999999116e-06, 3.3889999999994758e-06, 2.305000000001056e-06, 5.541999999997271e-06, 2.722000000000141e-06, 5.986000000002961e-06, 5.610999999999117e-06, 6.2779999999984515e-06, 5.653000000001296e-06, 6.110999999999617e-06, 2.860999999999836e-06, 2.708000000000571e-06, 4.666999999999866e-06, 2.722000000000141e-06, 2.681000000000905e-06, 3.1529999999987957e-06, 4.277000000000447e-06, 5.792000000000991e-06, 3.846999999997797e-06, 2.860999999999836e-06, 4.209000000001545e-06, 3.554999999998837e-06, 4.903000000000546e-06, 4.430999999999186e-06, 3.583000000001446e-06], 'eventsourcetime': [0.017277153, 0.0172795, 0.017285819, 0.017289125, 0.017294361, 0.017298903, 0.017302944, 0.017308653, 0.017314694, 0.017320417, 0.017323278, 0.017326375, 0.017330722, 0.017333694, 0.017338986, 0.017342542, 0.017347875, 0.017353222, 0.017355639, 0.017360556, 0.017365653, 0.017368583, 0.017371472, 0.017374347, 0.017378111, 0.017382028, 0.017385417, 0.017387722, 0.017393264, 0.017395986, 0.017401972, 0.017407583, 0.017413861, 0.017419514, 0.017425625, 0.017428486, 0.017431194, 0.017435861, 0.017438583, 0.017441264, 0.017444417, 0.017448694, 0.017454486, 0.017458333, 0.017461194, 0.017465403, 0.017468958, 0.017473861, 0.017478292, 0.017481875]}</msg>
<status status="PASS" starttime="20201112 09:42:43.381" endtime="20201112 09:42:43.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.377" endtime="20201112 09:42:43.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.388" level="INFO">${RESULT} = [{'time': 0.0172795, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017289125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:43.385" endtime="20201112 09:42:43.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.396" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.346999999999766e-06, 3.3059999999980605e-06, 4.541999999999741e-06, 5.7089999999995755e-06, 5.723000000002615e-06, 3.097000000000516e-06, 2.972000000000391e-06, 3.5559999999983105e-...</msg>
<status status="PASS" starttime="20201112 09:42:43.389" endtime="20201112 09:42:43.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.400" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.399" endtime="20201112 09:42:43.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.403" level="INFO">VALUE: [2.346999999999766e-06, 3.3059999999980605e-06, 4.541999999999741e-06, 5.7089999999995755e-06, 5.723000000002615e-06, 3.097000000000516e-06, 2.972000000000391e-06, 3.5559999999983105e-06, 5.347000000002766e-06, 4.917000000000116e-06, 2.929999999998212e-06, 2.874999999999406e-06, 3.916999999999116e-06, 2.305000000001056e-06, 2.722000000000141e-06, 5.610999999999117e-06, 5.653000000001296e-06, 2.860999999999836e-06, 4.666999999999866e-06, 2.681000000000905e-06, 4.277000000000447e-06, 3.846999999997797e-06, 4.209000000001545e-06, 4.903000000000546e-06, 3.583000000001446e-06]</msg>
<status status="PASS" starttime="20201112 09:42:43.402" endtime="20201112 09:42:43.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.397" endtime="20201112 09:42:43.404"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.406" endtime="20201112 09:42:43.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.410" endtime="20201112 09:42:43.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.408" endtime="20201112 09:42:43.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.404" endtime="20201112 09:42:43.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.043" endtime="20201112 09:42:43.430"></status>
</kw>
<msg timestamp="20201112 09:42:43.430" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.438" endtime="20201112 09:42:43.452"></status>
</kw>
<msg timestamp="20201112 09:42:43.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.436" endtime="20201112 09:42:43.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.454" endtime="20201112 09:42:43.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.456" endtime="20201112 09:42:43.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.434" endtime="20201112 09:42:43.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.432" endtime="20201112 09:42:43.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.466" endtime="20201112 09:42:43.730"></status>
</kw>
<msg timestamp="20201112 09:42:43.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01735625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017359181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:43.465" endtime="20201112 09:42:43.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01735625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017359181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:43.733" endtime="20201112 09:42:43.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.738" endtime="20201112 09:42:43.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.461" endtime="20201112 09:42:43.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.459" endtime="20201112 09:42:43.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.745" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:43.744" endtime="20201112 09:42:43.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.748" level="INFO">VALUE: [{'time': 0.01735625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017359181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.017363139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.017366861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017370972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.017373764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.017378847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017382389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.017386806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017391347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.017397694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.346999999996827e-06, 'source_diff': 6.346999999996827e-06}, {'time': 0.017400375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.681000000000905e-06, 'source_diff': 2.681000000000905e-06}, {'time': 0.017404958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.01740775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.017412153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017414514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017418042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.017421264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.017425181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.017429472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017434764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.017440611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.017443208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.017448806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.017453597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.017459083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.017461986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017465278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.017468375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017470931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5559999999973104e-06, 'source_diff': 2.5559999999973104e-06}, {'time': 0.017474889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.958000000001821e-06, 'source_diff': 3.958000000001821e-06}, {'time': 0.017480931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017484333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.017487514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.017492597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.017498014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.0175015, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017505264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.01750875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.017520514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.017525486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017527847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.017530208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.01753525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017541056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.017546681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.017551528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017554694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.017559236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:43.746" endtime="20201112 09:42:43.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.741" endtime="20201112 09:42:43.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:43.763" level="INFO">${debug-compressed} = {'source_diff': [0, 2.931000000001155e-06, 3.957999999998352e-06, 3.722000000001141e-06, 4.1109999999976166e-06, 2.79200000000146e-06, 5.082999999999477e-06, 3.54200000000221e-06, 4.416999999999616e-0...</msg>
<status status="PASS" starttime="20201112 09:42:43.751" endtime="20201112 09:42:43.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.767" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:43.766" endtime="20201112 09:42:43.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.770" level="INFO">VALUE: {'source_diff': [0, 2.931000000001155e-06, 3.957999999998352e-06, 3.722000000001141e-06, 4.1109999999976166e-06, 2.79200000000146e-06, 5.082999999999477e-06, 3.54200000000221e-06, 4.416999999999616e-06, 4.541000000000267e-06, 6.346999999996827e-06, 2.681000000000905e-06, 4.583000000002446e-06, 2.7919999999979905e-06, 4.403000000000046e-06, 2.360999999999336e-06, 3.52800000000264e-06, 3.2219999999971716e-06, 3.917000000002585e-06, 4.291000000000017e-06, 5.291999999997021e-06, 5.847000000003266e-06, 2.597000000000016e-06, 5.5979999999990204e-06, 4.791000000000517e-06, 5.485999999998992e-06, 2.9029999999985456e-06, 3.29200000000196e-06, 3.097000000000516e-06, 2.5559999999973104e-06, 3.958000000001821e-06, 6.042000000001241e-06, 3.401999999999572e-06, 3.1809999999979355e-06, 5.082999999999477e-06, 5.417000000000616e-06, 3.486000000000461e-06, 3.763999999999851e-06, 3.486000000000461e-06, 6.249999999999312e-06, 5.514000000001601e-06, 4.971999999998922e-06, 2.360999999999336e-06, 2.360999999999336e-06, 5.042000000000241e-06, 5.806000000000561e-06, 5.625000000002156e-06, 4.846999999998797e-06, 3.165999999998892e-06, 4.541999999999741e-06], 'diff': [0, 2.931000000001155e-06, 3.957999999998352e-06, 3.722000000001141e-06, 4.1109999999976166e-06, 2.79200000000146e-06, 5.082999999999477e-06, 3.54200000000221e-06, 4.416999999999616e-06, 4.541000000000267e-06, 6.346999999996827e-06, 2.681000000000905e-06, 4.583000000002446e-06, 2.7919999999979905e-06, 4.403000000000046e-06, 2.360999999999336e-06, 3.52800000000264e-06, 3.2219999999971716e-06, 3.917000000002585e-06, 4.291000000000017e-06, 5.291999999997021e-06, 5.847000000003266e-06, 2.597000000000016e-06, 5.5979999999990204e-06, 4.791000000000517e-06, 5.485999999998992e-06, 2.9029999999985456e-06, 3.29200000000196e-06, 3.097000000000516e-06, 2.5559999999973104e-06, 3.958000000001821e-06, 6.042000000001241e-06, 3.401999999999572e-06, 3.1809999999979355e-06, 5.082999999999477e-06, 5.417000000000616e-06, 3.486000000000461e-06, 3.763999999999851e-06, 3.486000000000461e-06, 6.249999999999312e-06, 5.514000000001601e-06, 4.971999999998922e-06, 2.360999999999336e-06, 2.360999999999336e-06, 5.042000000000241e-06, 5.806000000000561e-06, 5.625000000002156e-06, 4.846999999998797e-06, 3.165999999998892e-06, 4.541999999999741e-06], 'eventsourcetime': [0.01735625, 0.017359181, 0.017363139, 0.017366861, 0.017370972, 0.017373764, 0.017378847, 0.017382389, 0.017386806, 0.017391347, 0.017397694, 0.017400375, 0.017404958, 0.01740775, 0.017412153, 0.017414514, 0.017418042, 0.017421264, 0.017425181, 0.017429472, 0.017434764, 0.017440611, 0.017443208, 0.017448806, 0.017453597, 0.017459083, 0.017461986, 0.017465278, 0.017468375, 0.017470931, 0.017474889, 0.017480931, 0.017484333, 0.017487514, 0.017492597, 0.017498014, 0.0175015, 0.017505264, 0.01750875, 0.017515, 0.017520514, 0.017525486, 0.017527847, 0.017530208, 0.01753525, 0.017541056, 0.017546681, 0.017551528, 0.017554694, 0.017559236]}</msg>
<status status="PASS" starttime="20201112 09:42:43.768" endtime="20201112 09:42:43.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.764" endtime="20201112 09:42:43.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.774" level="INFO">${RESULT} = [{'time': 0.017359181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.931000000001155e-06, 'source_diff': 2.931000000001155e-06}, {'time': 0.017366861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:43.772" endtime="20201112 09:42:43.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.782" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.931000000001155e-06, 3.722000000001141e-06, 2.79200000000146e-06, 3.54200000000221e-06, 4.541000000000267e-06, 2.681000000000905e-06, 2.7919999999979905e-06, 2.360999999999336e-06, ...</msg>
<status status="PASS" starttime="20201112 09:42:43.775" endtime="20201112 09:42:43.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.786" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.785" endtime="20201112 09:42:43.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.789" level="INFO">VALUE: [2.931000000001155e-06, 3.722000000001141e-06, 2.79200000000146e-06, 3.54200000000221e-06, 4.541000000000267e-06, 2.681000000000905e-06, 2.7919999999979905e-06, 2.360999999999336e-06, 3.2219999999971716e-06, 4.291000000000017e-06, 5.847000000003266e-06, 5.5979999999990204e-06, 5.485999999998992e-06, 3.29200000000196e-06, 2.5559999999973104e-06, 6.042000000001241e-06, 3.1809999999979355e-06, 5.417000000000616e-06, 3.763999999999851e-06, 6.249999999999312e-06, 4.971999999998922e-06, 2.360999999999336e-06, 5.806000000000561e-06, 4.846999999998797e-06, 4.541999999999741e-06]</msg>
<status status="PASS" starttime="20201112 09:42:43.788" endtime="20201112 09:42:43.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.783" endtime="20201112 09:42:43.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.792" endtime="20201112 09:42:43.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.796" endtime="20201112 09:42:43.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.794" endtime="20201112 09:42:43.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.791" endtime="20201112 09:42:43.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.431" endtime="20201112 09:42:43.816"></status>
</kw>
<msg timestamp="20201112 09:42:43.816" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.824" endtime="20201112 09:42:43.838"></status>
</kw>
<msg timestamp="20201112 09:42:43.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.823" endtime="20201112 09:42:43.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.841" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.839" endtime="20201112 09:42:43.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.842" endtime="20201112 09:42:43.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.820" endtime="20201112 09:42:43.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.818" endtime="20201112 09:42:43.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.851" endtime="20201112 09:42:44.116"></status>
</kw>
<msg timestamp="20201112 09:42:44.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017440333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017446069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.850" endtime="20201112 09:42:44.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017440333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017446069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.119" endtime="20201112 09:42:44.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.124" endtime="20201112 09:42:44.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.847" endtime="20201112 09:42:44.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.846" endtime="20201112 09:42:44.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.130" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.129" endtime="20201112 09:42:44.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.134" level="INFO">VALUE: [{'time': 0.017440333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017446069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.017450917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.017454014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017457, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.017460778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017464444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.017470222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017476097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.017478944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017482528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5840000000009198e-06, 'source_diff': 3.5840000000009198e-06}, {'time': 0.017487083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.01749125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017494764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.017497319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.017500167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.017503694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.526999999999697e-06, 'source_diff': 3.526999999999697e-06}, {'time': 0.017508986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017514514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.017520069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555000000000837e-06, 'source_diff': 5.555000000000837e-06}, {'time': 0.017523153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.017526708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.017529764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.017533347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.583000000001446e-06, 'source_diff': 3.583000000001446e-06}, {'time': 0.017538153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.017541972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017547764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017550542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.017556847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.017562625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.017566417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.017570264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.017575736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.017578153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.01758175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017585597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017587944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017593431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.017598528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017601375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017606736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.361000000002336e-06, 'source_diff': 5.361000000002336e-06}, {'time': 0.017612333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.017617181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.017619736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.017624569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.017629556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.987000000001435e-06, 'source_diff': 4.987000000001435e-06}, {'time': 0.017635653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.01763975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017643528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017647708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.180000000002931e-06, 'source_diff': 4.180000000002931e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:44.132" endtime="20201112 09:42:44.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.127" endtime="20201112 09:42:44.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.150" level="INFO">${debug-compressed} = {'source_diff': [0, 5.736000000002711e-06, 4.84799999999827e-06, 3.097000000000516e-06, 2.985999999999961e-06, 3.7779999999994207e-06, 3.665999999999392e-06, 5.778000000001421e-06, 5.874999999998937e-...</msg>
<status status="PASS" starttime="20201112 09:42:44.136" endtime="20201112 09:42:44.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.154" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.153" endtime="20201112 09:42:44.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.157" level="INFO">VALUE: {'source_diff': [0, 5.736000000002711e-06, 4.84799999999827e-06, 3.097000000000516e-06, 2.985999999999961e-06, 3.7779999999994207e-06, 3.665999999999392e-06, 5.778000000001421e-06, 5.874999999998937e-06, 2.847000000000266e-06, 3.5840000000009198e-06, 4.554999999999837e-06, 4.166999999999366e-06, 3.5139999999996008e-06, 2.5550000000013062e-06, 2.8479999999997396e-06, 3.526999999999697e-06, 5.292000000000491e-06, 5.527999999997701e-06, 5.555000000000837e-06, 3.0840000000004197e-06, 3.554999999998837e-06, 3.05600000000128e-06, 3.583000000001446e-06, 4.805999999999561e-06, 3.818999999998657e-06, 5.792000000000991e-06, 2.7779999999984206e-06, 6.305000000001587e-06, 5.7779999999979514e-06, 3.79200000000246e-06, 3.846999999997797e-06, 5.472000000002891e-06, 2.4169999999976155e-06, 3.597000000001016e-06, 3.847000000001266e-06, 2.346999999999766e-06, 5.486999999998465e-06, 5.096999999999047e-06, 2.847000000000266e-06, 5.361000000002336e-06, 5.596999999999547e-06, 4.84799999999827e-06, 2.5550000000013062e-06, 4.832999999999227e-06, 4.987000000001435e-06, 6.097000000000047e-06, 4.096999999998047e-06, 3.7779999999994207e-06, 4.180000000002931e-06], 'diff': [0, 5.736000000002711e-06, 4.84799999999827e-06, 3.097000000000516e-06, 2.985999999999961e-06, 3.7779999999994207e-06, 3.665999999999392e-06, 5.778000000001421e-06, 5.874999999998937e-06, 2.847000000000266e-06, 3.5840000000009198e-06, 4.554999999999837e-06, 4.166999999999366e-06, 3.5139999999996008e-06, 2.5550000000013062e-06, 2.8479999999997396e-06, 3.526999999999697e-06, 5.292000000000491e-06, 5.527999999997701e-06, 5.555000000000837e-06, 3.0840000000004197e-06, 3.554999999998837e-06, 3.05600000000128e-06, 3.583000000001446e-06, 4.805999999999561e-06, 3.818999999998657e-06, 5.792000000000991e-06, 2.7779999999984206e-06, 6.305000000001587e-06, 5.7779999999979514e-06, 3.79200000000246e-06, 3.846999999997797e-06, 5.472000000002891e-06, 2.4169999999976155e-06, 3.597000000001016e-06, 3.847000000001266e-06, 2.346999999999766e-06, 5.486999999998465e-06, 5.096999999999047e-06, 2.847000000000266e-06, 5.361000000002336e-06, 5.596999999999547e-06, 4.84799999999827e-06, 2.5550000000013062e-06, 4.832999999999227e-06, 4.987000000001435e-06, 6.097000000000047e-06, 4.096999999998047e-06, 3.7779999999994207e-06, 4.180000000002931e-06], 'eventsourcetime': [0.017440333, 0.017446069, 0.017450917, 0.017454014, 0.017457, 0.017460778, 0.017464444, 0.017470222, 0.017476097, 0.017478944, 0.017482528, 0.017487083, 0.01749125, 0.017494764, 0.017497319, 0.017500167, 0.017503694, 0.017508986, 0.017514514, 0.017520069, 0.017523153, 0.017526708, 0.017529764, 0.017533347, 0.017538153, 0.017541972, 0.017547764, 0.017550542, 0.017556847, 0.017562625, 0.017566417, 0.017570264, 0.017575736, 0.017578153, 0.01758175, 0.017585597, 0.017587944, 0.017593431, 0.017598528, 0.017601375, 0.017606736, 0.017612333, 0.017617181, 0.017619736, 0.017624569, 0.017629556, 0.017635653, 0.01763975, 0.017643528, 0.017647708]}</msg>
<status status="PASS" starttime="20201112 09:42:44.155" endtime="20201112 09:42:44.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.151" endtime="20201112 09:42:44.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.161" level="INFO">${RESULT} = [{'time': 0.017446069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.736000000002711e-06, 'source_diff': 5.736000000002711e-06}, {'time': 0.017454014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:44.159" endtime="20201112 09:42:44.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.169" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.736000000002711e-06, 3.097000000000516e-06, 3.7779999999994207e-06, 5.778000000001421e-06, 2.847000000000266e-06, 4.554999999999837e-06, 3.5139999999996008e-06, 2.8479999999997396e-...</msg>
<status status="PASS" starttime="20201112 09:42:44.162" endtime="20201112 09:42:44.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.173" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.172" endtime="20201112 09:42:44.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.176" level="INFO">VALUE: [5.736000000002711e-06, 3.097000000000516e-06, 3.7779999999994207e-06, 5.778000000001421e-06, 2.847000000000266e-06, 4.554999999999837e-06, 3.5139999999996008e-06, 2.8479999999997396e-06, 5.292000000000491e-06, 5.555000000000837e-06, 3.554999999998837e-06, 3.583000000001446e-06, 3.818999999998657e-06, 2.7779999999984206e-06, 5.7779999999979514e-06, 3.846999999997797e-06, 2.4169999999976155e-06, 3.847000000001266e-06, 5.486999999998465e-06, 2.847000000000266e-06, 5.596999999999547e-06, 2.5550000000013062e-06, 4.987000000001435e-06, 4.096999999998047e-06, 4.180000000002931e-06]</msg>
<status status="PASS" starttime="20201112 09:42:44.174" endtime="20201112 09:42:44.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.170" endtime="20201112 09:42:44.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.179" endtime="20201112 09:42:44.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.182" endtime="20201112 09:42:44.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.181" endtime="20201112 09:42:44.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.177" endtime="20201112 09:42:44.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.817" endtime="20201112 09:42:44.203"></status>
</kw>
<msg timestamp="20201112 09:42:44.203" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.212" endtime="20201112 09:42:44.225"></status>
</kw>
<msg timestamp="20201112 09:42:44.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.210" endtime="20201112 09:42:44.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.227" endtime="20201112 09:42:44.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.229" endtime="20201112 09:42:44.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.207" endtime="20201112 09:42:44.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.205" endtime="20201112 09:42:44.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.238" endtime="20201112 09:42:44.502"></status>
</kw>
<msg timestamp="20201112 09:42:44.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018279056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018284028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.237" endtime="20201112 09:42:44.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018279056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018284028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.505" endtime="20201112 09:42:44.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.511" endtime="20201112 09:42:44.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.234" endtime="20201112 09:42:44.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.233" endtime="20201112 09:42:44.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.517" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.516" endtime="20201112 09:42:44.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.521" level="INFO">VALUE: [{'time': 0.018279056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018284028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018289069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041000000000767e-06, 'source_diff': 5.041000000000767e-06}, {'time': 0.018294347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.018299583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.236000000002211e-06, 'source_diff': 5.236000000002211e-06}, {'time': 0.018303056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.018309347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.018313583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018317097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.018322389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018326681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018331292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999998117e-06, 'source_diff': 4.610999999998117e-06}, {'time': 0.018334653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018340792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.018346847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.018352431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.018355972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.018360153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.018362792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.018365583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7910000000019863e-06, 'source_diff': 2.7910000000019863e-06}, {'time': 0.0183695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018375528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.018378528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.018383417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8889999999975065e-06, 'source_diff': 4.8889999999975065e-06}, {'time': 0.018386958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018390375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.018395042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018399958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018403181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018407333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152000000000322e-06, 'source_diff': 4.152000000000322e-06}, {'time': 0.018411556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.018415417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018418833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018421681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.018425153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018430278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.125000000001656e-06, 'source_diff': 5.125000000001656e-06}, {'time': 0.018435292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0139999999976315e-06, 'source_diff': 5.0139999999976315e-06}, {'time': 0.018439764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018443486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.018449417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.018453625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000002071e-06, 'source_diff': 4.208000000002071e-06}, {'time': 0.018457472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.018461764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018465194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4300000000021813e-06, 'source_diff': 3.4300000000021813e-06}, {'time': 0.018471403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.018477597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1939999999975626e-06, 'source_diff': 6.1939999999975626e-06}, {'time': 0.018481292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.018486264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018488681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.018491597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:44.518" endtime="20201112 09:42:44.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.514" endtime="20201112 09:42:44.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.536" level="INFO">${debug-compressed} = {'source_diff': [0, 4.972000000002391e-06, 5.041000000000767e-06, 5.277999999997451e-06, 5.236000000002211e-06, 3.4730000000003647e-06, 6.290999999998548e-06, 4.236000000001211e-06, 3.5139999999996008...</msg>
<status status="PASS" starttime="20201112 09:42:44.523" endtime="20201112 09:42:44.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.540" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.539" endtime="20201112 09:42:44.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.543" level="INFO">VALUE: {'source_diff': [0, 4.972000000002391e-06, 5.041000000000767e-06, 5.277999999997451e-06, 5.236000000002211e-06, 3.4730000000003647e-06, 6.290999999998548e-06, 4.236000000001211e-06, 3.5139999999996008e-06, 5.292000000000491e-06, 4.291999999999491e-06, 4.610999999998117e-06, 3.361000000000336e-06, 6.139000000002226e-06, 6.054999999997868e-06, 5.5839999999994505e-06, 3.5410000000027364e-06, 4.1809999999989356e-06, 2.6389999999987257e-06, 2.7910000000019863e-06, 3.916999999999116e-06, 6.0279999999982015e-06, 3.0000000000030003e-06, 4.8889999999975065e-06, 3.540999999999267e-06, 3.417000000002085e-06, 4.666999999999866e-06, 4.916000000000642e-06, 3.2230000000001147e-06, 4.152000000000322e-06, 4.222999999997645e-06, 3.861000000000836e-06, 3.415999999999142e-06, 2.8479999999997396e-06, 3.472000000000891e-06, 5.125000000001656e-06, 5.0139999999976315e-06, 4.472000000001891e-06, 3.7219999999976716e-06, 5.931000000000686e-06, 4.208000000002071e-06, 3.846999999997797e-06, 4.291999999999491e-06, 3.4300000000021813e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 3.695000000001475e-06, 4.971999999998922e-06, 2.417000000001085e-06, 2.915999999998642e-06], 'diff': [0, 4.972000000002391e-06, 5.041000000000767e-06, 5.277999999997451e-06, 5.236000000002211e-06, 3.4730000000003647e-06, 6.290999999998548e-06, 4.236000000001211e-06, 3.5139999999996008e-06, 5.292000000000491e-06, 4.291999999999491e-06, 4.610999999998117e-06, 3.361000000000336e-06, 6.139000000002226e-06, 6.054999999997868e-06, 5.5839999999994505e-06, 3.5410000000027364e-06, 4.1809999999989356e-06, 2.6389999999987257e-06, 2.7910000000019863e-06, 3.916999999999116e-06, 6.0279999999982015e-06, 3.0000000000030003e-06, 4.8889999999975065e-06, 3.540999999999267e-06, 3.417000000002085e-06, 4.666999999999866e-06, 4.916000000000642e-06, 3.2230000000001147e-06, 4.152000000000322e-06, 4.222999999997645e-06, 3.861000000000836e-06, 3.415999999999142e-06, 2.8479999999997396e-06, 3.472000000000891e-06, 5.125000000001656e-06, 5.0139999999976315e-06, 4.472000000001891e-06, 3.7219999999976716e-06, 5.931000000000686e-06, 4.208000000002071e-06, 3.846999999997797e-06, 4.291999999999491e-06, 3.4300000000021813e-06, 6.2090000000000756e-06, 6.1939999999975626e-06, 3.695000000001475e-06, 4.971999999998922e-06, 2.417000000001085e-06, 2.915999999998642e-06], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.018279056, 0.018284028, 0.018289069, 0.018294347, 0.018299583, 0.018303056, 0.018309347, 0.018313583, 0.018317097, 0.018322389, 0.018326681, 0.018331292, 0.018334653, 0.018340792, 0.018346847, 0.018352431, 0.018355972, 0.018360153, 0.018362792, 0.018365583, 0.0183695, 0.018375528, 0.018378528, 0.018383417, 0.018386958, 0.018390375, 0.018395042, 0.018399958, 0.018403181, 0.018407333, 0.018411556, 0.018415417, 0.018418833, 0.018421681, 0.018425153, 0.018430278, 0.018435292, 0.018439764, 0.018443486, 0.018449417, 0.018453625, 0.018457472, 0.018461764, 0.018465194, 0.018471403, 0.018477597, 0.018481292, 0.018486264, 0.018488681, 0.018491597]}</msg>
<status status="PASS" starttime="20201112 09:42:44.541" endtime="20201112 09:42:44.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.537" endtime="20201112 09:42:44.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.547" level="INFO">${RESULT} = [{'time': 0.018284028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972000000002391e-06, 'source_diff': 4.972000000002391e-06}, {'time': 0.018294347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:44.545" endtime="20201112 09:42:44.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.555" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.972000000002391e-06, 5.277999999997451e-06, 3.4730000000003647e-06, 4.236000000001211e-06, 5.292000000000491e-06, 4.610999999998117e-06, 6.139000000002226e-06, 5.5839999999994505e-0...</msg>
<status status="PASS" starttime="20201112 09:42:44.548" endtime="20201112 09:42:44.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.559" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.558" endtime="20201112 09:42:44.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.562" level="INFO">VALUE: [4.972000000002391e-06, 5.277999999997451e-06, 3.4730000000003647e-06, 4.236000000001211e-06, 5.292000000000491e-06, 4.610999999998117e-06, 6.139000000002226e-06, 5.5839999999994505e-06, 4.1809999999989356e-06, 2.7910000000019863e-06, 6.0279999999982015e-06, 4.8889999999975065e-06, 3.417000000002085e-06, 4.916000000000642e-06, 4.152000000000322e-06, 3.861000000000836e-06, 2.8479999999997396e-06, 5.125000000001656e-06, 4.472000000001891e-06, 5.931000000000686e-06, 3.846999999997797e-06, 3.4300000000021813e-06, 6.1939999999975626e-06, 4.971999999998922e-06, 2.915999999998642e-06]</msg>
<status status="PASS" starttime="20201112 09:42:44.560" endtime="20201112 09:42:44.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.556" endtime="20201112 09:42:44.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.565" endtime="20201112 09:42:44.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.568" endtime="20201112 09:42:44.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.567" endtime="20201112 09:42:44.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.563" endtime="20201112 09:42:44.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.204" endtime="20201112 09:42:44.590"></status>
</kw>
<msg timestamp="20201112 09:42:44.590" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.598" endtime="20201112 09:42:44.612"></status>
</kw>
<msg timestamp="20201112 09:42:44.612" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.596" endtime="20201112 09:42:44.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.615" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.613" endtime="20201112 09:42:44.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.616" endtime="20201112 09:42:44.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.594" endtime="20201112 09:42:44.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.592" endtime="20201112 09:42:44.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.625" endtime="20201112 09:42:44.890"></status>
</kw>
<msg timestamp="20201112 09:42:44.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018112361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.623" endtime="20201112 09:42:44.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018112361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.893" endtime="20201112 09:42:44.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.898" endtime="20201112 09:42:44.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.621" endtime="20201112 09:42:44.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.619" endtime="20201112 09:42:44.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.905" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.904" endtime="20201112 09:42:44.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.908" level="INFO">VALUE: [{'time': 0.018109569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018112361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.018116764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018119681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018124097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018130139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018133861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018136597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.0181395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018143431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.018148014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.01815425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018158708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.018161431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.018166417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018171764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018175986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018181958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018187069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018191806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.737000000001185e-06, 'source_diff': 4.737000000001185e-06}, {'time': 0.018195264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.018199556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.01820325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6940000000020012e-06, 'source_diff': 3.6940000000020012e-06}, {'time': 0.018207889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018211986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018214458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018219056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59800000000149e-06, 'source_diff': 4.59800000000149e-06}, {'time': 0.018222028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018225069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.018229167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018232208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.018237069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018241153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.018244514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018250542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018256028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018260181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018266097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.018270639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.018275917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.018281903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018285681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.018291597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.018294514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018299611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018305042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.018307875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.018313042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018318986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9439999999973125e-06, 'source_diff': 5.9439999999973125e-06}, {'time': 0.018322806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8200000000016e-06, 'source_diff': 3.8200000000016e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:44.906" endtime="20201112 09:42:44.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.901" endtime="20201112 09:42:44.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.929" level="INFO">${debug-compressed} = {'source_diff': [0, 2.79200000000146e-06, 4.403000000000046e-06, 2.9169999999981155e-06, 4.416000000000142e-06, 6.042000000001241e-06, 3.722000000001141e-06, 2.735999999999711e-06, 2.9029999999985456e...</msg>
<status status="PASS" starttime="20201112 09:42:44.917" endtime="20201112 09:42:44.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.933" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.932" endtime="20201112 09:42:44.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.936" level="INFO">VALUE: {'source_diff': [0, 2.79200000000146e-06, 4.403000000000046e-06, 2.9169999999981155e-06, 4.416000000000142e-06, 6.042000000001241e-06, 3.722000000001141e-06, 2.735999999999711e-06, 2.9029999999985456e-06, 3.931000000002155e-06, 4.582999999998977e-06, 6.235999999999742e-06, 4.457999999998852e-06, 2.7229999999996146e-06, 4.986000000001961e-06, 5.346999999999297e-06, 4.222000000001641e-06, 5.971999999999922e-06, 5.110999999998617e-06, 4.737000000001185e-06, 3.4579999999978517e-06, 4.291999999999491e-06, 3.6940000000020012e-06, 4.639000000000726e-06, 4.096999999998047e-06, 2.471999999999891e-06, 4.59800000000149e-06, 2.972000000000391e-06, 3.040999999998767e-06, 4.09800000000099e-06, 3.040999999998767e-06, 4.861000000001836e-06, 4.08399999999795e-06, 3.361000000000336e-06, 6.028000000001671e-06, 5.485999999998992e-06, 4.152999999999796e-06, 5.915999999998173e-06, 4.54200000000321e-06, 5.277999999997451e-06, 5.985999999999492e-06, 3.77800000000289e-06, 5.915999999998173e-06, 2.917000000001585e-06, 5.096999999999047e-06, 5.431000000000186e-06, 2.833000000000696e-06, 5.167000000000366e-06, 5.9439999999973125e-06, 3.8200000000016e-06], 'diff': [0, 2.79200000000146e-06, 4.403000000000046e-06, 2.9169999999981155e-06, 4.416000000000142e-06, 6.042000000001241e-06, 3.722000000001141e-06, 2.735999999999711e-06, 2.9029999999985456e-06, 3.931000000002155e-06, 4.582999999998977e-06, 6.235999999999742e-06, 4.457999999998852e-06, 2.7229999999996146e-06, 4.986000000001961e-06, 5.346999999999297e-06, 4.222000000001641e-06, 5.971999999999922e-06, 5.110999999998617e-06, 4.737000000001185e-06, 3.4579999999978517e-06, 4.291999999999491e-06, 3.6940000000020012e-06, 4.639000000000726e-06, 4.096999999998047e-06, 2.471999999999891e-06, 4.59800000000149e-06, 2.972000000000391e-06, 3.040999999998767e-06, 4.09800000000099e-06, 3.040999999998767e-06, 4.861000000001836e-06, 4.08399999999795e-06, 3.361000000000336e-06, 6.028000000001671e-06, 5.485999999998992e-06, 4.152999999999796e-06, 5.915999999998173e-06, 4.54200000000321e-06, 5.277999999997451e-06, 5.985999999999492e-06, 3.77800000000289e-06, 5.915999999998173e-06, 2.917000000001585e-06, 5.096999999999047e-06, 5.431000000000186e-06, 2.833000000000696e-06, 5.167000000000366e-06, 5.9439999999973125e-06, 3.8200000000016e-06], 'eventsourcetime': [0.018109569, 0.018112361, 0.018116764, 0.018119681, 0.018124097, 0.018130139, 0.018133861, 0.018136597, 0.0181395, 0.018143431, 0.018148014, 0.01815425, 0.018158708, 0.018161431, 0.018166417, 0.018171764, 0.018175986, 0.018181958, 0.018187069, 0.018191806, 0.018195264, 0.018199556, 0.01820325, 0.018207889, 0.018211986, 0.018214458, 0.018219056, 0.018222028, 0.018225069, 0.018229167, 0.018232208, 0.018237069, 0.018241153, 0.018244514, 0.018250542, 0.018256028, 0.018260181, 0.018266097, 0.018270639, 0.018275917, 0.018281903, 0.018285681, 0.018291597, 0.018294514, 0.018299611, 0.018305042, 0.018307875, 0.018313042, 0.018318986, 0.018322806]}</msg>
<status status="PASS" starttime="20201112 09:42:44.934" endtime="20201112 09:42:44.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.930" endtime="20201112 09:42:44.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.941" level="INFO">${RESULT} = [{'time': 0.018112361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.018119681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:44.938" endtime="20201112 09:42:44.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.949" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.79200000000146e-06, 2.9169999999981155e-06, 6.042000000001241e-06, 2.735999999999711e-06, 3.931000000002155e-06, 6.235999999999742e-06, 2.7229999999996146e-06, 5.346999999999297e-06...</msg>
<status status="PASS" starttime="20201112 09:42:44.942" endtime="20201112 09:42:44.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.953" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.952" endtime="20201112 09:42:44.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.955" level="INFO">VALUE: [2.79200000000146e-06, 2.9169999999981155e-06, 6.042000000001241e-06, 2.735999999999711e-06, 3.931000000002155e-06, 6.235999999999742e-06, 2.7229999999996146e-06, 5.346999999999297e-06, 5.971999999999922e-06, 4.737000000001185e-06, 4.291999999999491e-06, 4.639000000000726e-06, 2.471999999999891e-06, 2.972000000000391e-06, 4.09800000000099e-06, 4.861000000001836e-06, 3.361000000000336e-06, 5.485999999998992e-06, 5.915999999998173e-06, 5.277999999997451e-06, 3.77800000000289e-06, 2.917000000001585e-06, 5.431000000000186e-06, 5.167000000000366e-06, 3.8200000000016e-06]</msg>
<status status="PASS" starttime="20201112 09:42:44.954" endtime="20201112 09:42:44.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.950" endtime="20201112 09:42:44.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.959" endtime="20201112 09:42:44.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.962" endtime="20201112 09:42:44.981"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.961" endtime="20201112 09:42:44.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.957" endtime="20201112 09:42:44.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.591" endtime="20201112 09:42:44.983"></status>
</kw>
<msg timestamp="20201112 09:42:44.983" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.991" endtime="20201112 09:42:45.005"></status>
</kw>
<msg timestamp="20201112 09:42:45.005" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.989" endtime="20201112 09:42:45.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.008" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.006" endtime="20201112 09:42:45.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.009" endtime="20201112 09:42:45.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.986" endtime="20201112 09:42:45.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.985" endtime="20201112 09:42:45.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.018" endtime="20201112 09:42:45.282"></status>
</kw>
<msg timestamp="20201112 09:42:45.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017335542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017340944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.016" endtime="20201112 09:42:45.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017335542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017340944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.285" endtime="20201112 09:42:45.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.290" endtime="20201112 09:42:45.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.014" endtime="20201112 09:42:45.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.012" endtime="20201112 09:42:45.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.296" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.295" endtime="20201112 09:42:45.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.300" level="INFO">VALUE: [{'time': 0.017335542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017340944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.017344819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017349458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.017352819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3609999999968665e-06, 'source_diff': 3.3609999999968665e-06}, {'time': 0.017358972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.017363958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.017369181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.223000000002115e-06, 'source_diff': 5.223000000002115e-06}, {'time': 0.017372153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017375597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.017380972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.017384417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4449999999977554e-06, 'source_diff': 3.4449999999977554e-06}, {'time': 0.017386875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017392903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.017396125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.017402431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.017408722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291000000002017e-06, 'source_diff': 6.291000000002017e-06}, {'time': 0.017413806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0839999999989505e-06, 'source_diff': 5.0839999999989505e-06}, {'time': 0.017417903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017424139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.236000000003211e-06, 'source_diff': 6.236000000003211e-06}, {'time': 0.017429958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.017433722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763999999999851e-06, 'source_diff': 3.763999999999851e-06}, {'time': 0.017436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9590000000002947e-06, 'source_diff': 2.9590000000002947e-06}, {'time': 0.017440097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}, {'time': 0.017442444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017446292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84799999999727e-06, 'source_diff': 3.84799999999727e-06}, {'time': 0.017448708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4160000000016113e-06, 'source_diff': 2.4160000000016113e-06}, {'time': 0.017453556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84799999999827e-06, 'source_diff': 4.84799999999827e-06}, {'time': 0.017458236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.017463194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.958000000002821e-06, 'source_diff': 4.958000000002821e-06}, {'time': 0.017469111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.017473472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017477, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017481722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017487597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.017491319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017496542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.017501264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017506736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017510708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017515597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.017521153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.017527375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017531292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017535139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017541361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.221999999996702e-06, 'source_diff': 6.221999999996702e-06}, {'time': 0.017546917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.556000000000311e-06, 'source_diff': 5.556000000000311e-06}, {'time': 0.01755025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.017554417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017560208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791000000001517e-06, 'source_diff': 5.791000000001517e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:45.297" endtime="20201112 09:42:45.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.293" endtime="20201112 09:42:45.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.316" level="INFO">${debug-compressed} = {'source_diff': [0, 5.402000000001572e-06, 3.875000000000406e-06, 4.639000000000726e-06, 3.3609999999968665e-06, 6.153000000001796e-06, 4.985999999998492e-06, 5.223000000002115e-06, 2.972000000000391e...</msg>
<status status="PASS" starttime="20201112 09:42:45.302" endtime="20201112 09:42:45.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.320" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.319" endtime="20201112 09:42:45.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.323" level="INFO">VALUE: {'source_diff': [0, 5.402000000001572e-06, 3.875000000000406e-06, 4.639000000000726e-06, 3.3609999999968665e-06, 6.153000000001796e-06, 4.985999999998492e-06, 5.223000000002115e-06, 2.972000000000391e-06, 3.4439999999982818e-06, 5.375000000001906e-06, 3.4449999999977554e-06, 2.458000000000321e-06, 6.028000000001671e-06, 3.2219999999971716e-06, 6.306000000001061e-06, 6.291000000002017e-06, 5.0839999999989505e-06, 4.096999999998047e-06, 6.236000000003211e-06, 5.8189999999971875e-06, 3.763999999999851e-06, 2.9590000000002947e-06, 3.4160000000026114e-06, 2.346999999999766e-06, 3.84799999999727e-06, 2.4160000000016113e-06, 4.84799999999827e-06, 4.679999999999962e-06, 4.958000000002821e-06, 5.916999999997646e-06, 4.361000000001336e-06, 3.5279999999991707e-06, 4.722000000002141e-06, 5.874999999998937e-06, 3.722000000001141e-06, 5.222999999998645e-06, 4.721999999998672e-06, 5.471999999999422e-06, 3.972000000001391e-06, 4.889000000000976e-06, 5.556000000000311e-06, 6.222000000000172e-06, 3.916999999999116e-06, 3.847000000001266e-06, 6.221999999996702e-06, 5.556000000000311e-06, 3.333000000001196e-06, 4.166999999999366e-06, 5.791000000001517e-06], 'diff': [0, 5.402000000001572e-06, 3.875000000000406e-06, 4.639000000000726e-06, 3.3609999999968665e-06, 6.153000000001796e-06, 4.985999999998492e-06, 5.223000000002115e-06, 2.972000000000391e-06, 3.4439999999982818e-06, 5.375000000001906e-06, 3.4449999999977554e-06, 2.458000000000321e-06, 6.028000000001671e-06, 3.2219999999971716e-06, 6.306000000001061e-06, 6.291000000002017e-06, 5.0839999999989505e-06, 4.096999999998047e-06, 6.236000000003211e-06, 5.8189999999971875e-06, 3.763999999999851e-06, 2.9590000000002947e-06, 3.4160000000026114e-06, 2.346999999999766e-06, 3.84799999999727e-06, 2.4160000000016113e-06, 4.84799999999827e-06, 4.679999999999962e-06, 4.958000000002821e-06, 5.916999999997646e-06, 4.361000000001336e-06, 3.5279999999991707e-06, 4.722000000002141e-06, 5.874999999998937e-06, 3.722000000001141e-06, 5.222999999998645e-06, 4.721999999998672e-06, 5.471999999999422e-06, 3.972000000001391e-06, 4.889000000000976e-06, 5.556000000000311e-06, 6.222000000000172e-06, 3.916999999999116e-06, 3.847000000001266e-06, 6.221999999996702e-06, 5.556000000000311e-06, 3.333000000001196e-06, 4.166999999999366e-06, 5.791000000001517e-06], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'time': [0.017335542, 0.017340944, 0.017344819, 0.017349458, 0.017352819, 0.017358972, 0.017363958, 0.017369181, 0.017372153, 0.017375597, 0.017380972, 0.017384417, 0.017386875, 0.017392903, 0.017396125, 0.017402431, 0.017408722, 0.017413806, 0.017417903, 0.017424139, 0.017429958, 0.017433722, 0.017436681, 0.017440097, 0.017442444, 0.017446292, 0.017448708, 0.017453556, 0.017458236, 0.017463194, 0.017469111, 0.017473472, 0.017477, 0.017481722, 0.017487597, 0.017491319, 0.017496542, 0.017501264, 0.017506736, 0.017510708, 0.017515597, 0.017521153, 0.017527375, 0.017531292, 0.017535139, 0.017541361, 0.017546917, 0.01755025, 0.017554417, 0.017560208]}</msg>
<status status="PASS" starttime="20201112 09:42:45.321" endtime="20201112 09:42:45.324"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.317" endtime="20201112 09:42:45.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.327" level="INFO">${RESULT} = [{'time': 0.017340944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.017349458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:45.325" endtime="20201112 09:42:45.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.335" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [5.402000000001572e-06, 4.639000000000726e-06, 6.153000000001796e-06, 5.223000000002115e-06, 3.4439999999982818e-06, 3.4449999999977554e-06, 6.028000000001671e-06, 6.306000000001061e-0...</msg>
<status status="PASS" starttime="20201112 09:42:45.328" endtime="20201112 09:42:45.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.340" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.339" endtime="20201112 09:42:45.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.342" level="INFO">VALUE: [5.402000000001572e-06, 4.639000000000726e-06, 6.153000000001796e-06, 5.223000000002115e-06, 3.4439999999982818e-06, 3.4449999999977554e-06, 6.028000000001671e-06, 6.306000000001061e-06, 5.0839999999989505e-06, 6.236000000003211e-06, 3.763999999999851e-06, 3.4160000000026114e-06, 3.84799999999727e-06, 4.84799999999827e-06, 4.958000000002821e-06, 4.361000000001336e-06, 4.722000000002141e-06, 3.722000000001141e-06, 4.721999999998672e-06, 3.972000000001391e-06, 5.556000000000311e-06, 3.916999999999116e-06, 6.221999999996702e-06, 3.333000000001196e-06, 5.791000000001517e-06]</msg>
<status status="PASS" starttime="20201112 09:42:45.341" endtime="20201112 09:42:45.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.336" endtime="20201112 09:42:45.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.345" endtime="20201112 09:42:45.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.349" endtime="20201112 09:42:45.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.347" endtime="20201112 09:42:45.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.344" endtime="20201112 09:42:45.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.984" endtime="20201112 09:42:45.369"></status>
</kw>
<msg timestamp="20201112 09:42:45.370" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.377" endtime="20201112 09:42:45.391"></status>
</kw>
<msg timestamp="20201112 09:42:45.392" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.376" endtime="20201112 09:42:45.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.394" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.393" endtime="20201112 09:42:45.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.395" endtime="20201112 09:42:45.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.373" endtime="20201112 09:42:45.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.371" endtime="20201112 09:42:45.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.404" endtime="20201112 09:42:45.669"></status>
</kw>
<msg timestamp="20201112 09:42:45.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017416347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.403" endtime="20201112 09:42:45.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017416347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.672" endtime="20201112 09:42:45.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.677" endtime="20201112 09:42:45.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.400" endtime="20201112 09:42:45.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.398" endtime="20201112 09:42:45.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.684" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.683" endtime="20201112 09:42:45.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.688" level="INFO">VALUE: [{'time': 0.017412944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017416347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017421181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.017425042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017427861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8189999999976567e-06, 'source_diff': 2.8189999999976567e-06}, {'time': 0.017430806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}, {'time': 0.017434528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017438972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.017445167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.017448278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.017454444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.017459181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.737000000001185e-06, 'source_diff': 4.737000000001185e-06}, {'time': 0.017463819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.637999999997783e-06, 'source_diff': 4.637999999997783e-06}, {'time': 0.017468306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.487000000000935e-06, 'source_diff': 4.487000000000935e-06}, {'time': 0.017473083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000000947e-06, 'source_diff': 4.777000000000947e-06}, {'time': 0.017477069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017481472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017487278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.017492444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.017497167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.723000000001615e-06, 'source_diff': 4.723000000001615e-06}, {'time': 0.017503125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017507097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.017509833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017516125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.017518889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.017524625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.017528917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.017531639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017534486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8469999999967965e-06, 'source_diff': 2.8469999999967965e-06}, {'time': 0.017540028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.01754375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017548736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.017554583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017560681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.017566542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017568944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.017572611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.017577403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017581194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7910000000029864e-06, 'source_diff': 3.7910000000029864e-06}, {'time': 0.017585806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.61199999999759e-06, 'source_diff': 4.61199999999759e-06}, {'time': 0.017591375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.569000000000407e-06, 'source_diff': 5.569000000000407e-06}, {'time': 0.017597264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.017603389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.017606639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.017609861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.017614569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.017619431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.86200000000131e-06, 'source_diff': 4.86200000000131e-06}, {'time': 0.017621958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.526999999998697e-06, 'source_diff': 2.526999999998697e-06}, {'time': 0.01762625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017631597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:45.685" endtime="20201112 09:42:45.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.681" endtime="20201112 09:42:45.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.703" level="INFO">${debug-compressed} = {'source_diff': [0, 3.4029999999990457e-06, 4.83400000000217e-06, 3.861000000000836e-06, 2.8189999999976567e-06, 2.945000000000725e-06, 3.722000000001141e-06, 4.443999999999282e-06, 6.195000000000506e...</msg>
<status status="PASS" starttime="20201112 09:42:45.690" endtime="20201112 09:42:45.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.707" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.706" endtime="20201112 09:42:45.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.710" level="INFO">VALUE: {'source_diff': [0, 3.4029999999990457e-06, 4.83400000000217e-06, 3.861000000000836e-06, 2.8189999999976567e-06, 2.945000000000725e-06, 3.722000000001141e-06, 4.443999999999282e-06, 6.195000000000506e-06, 3.111000000000086e-06, 6.165999999998423e-06, 4.737000000001185e-06, 4.637999999997783e-06, 4.487000000000935e-06, 4.777000000000947e-06, 3.986000000000961e-06, 4.403000000000046e-06, 5.805999999997091e-06, 5.166000000000892e-06, 4.723000000001615e-06, 5.958000000000352e-06, 3.971999999997922e-06, 2.735999999999711e-06, 6.292000000001491e-06, 2.7639999999988507e-06, 5.735999999999242e-06, 4.29200000000296e-06, 2.722000000000141e-06, 2.8469999999967965e-06, 5.542000000000741e-06, 3.722000000001141e-06, 4.985999999998492e-06, 5.846999999999797e-06, 6.09800000000299e-06, 5.860999999999367e-06, 2.401999999998572e-06, 3.6669999999988656e-06, 4.791999999999991e-06, 3.7910000000029864e-06, 4.61199999999759e-06, 5.569000000000407e-06, 5.889000000001976e-06, 6.124999999999187e-06, 3.249999999999781e-06, 3.222000000000641e-06, 4.707999999999102e-06, 4.86200000000131e-06, 2.526999999998697e-06, 4.291999999999491e-06, 5.346999999999297e-06], 'diff': [0, 3.4029999999990457e-06, 4.83400000000217e-06, 3.861000000000836e-06, 2.8189999999976567e-06, 2.945000000000725e-06, 3.722000000001141e-06, 4.443999999999282e-06, 6.195000000000506e-06, 3.111000000000086e-06, 6.165999999998423e-06, 4.737000000001185e-06, 4.637999999997783e-06, 4.487000000000935e-06, 4.777000000000947e-06, 3.986000000000961e-06, 4.403000000000046e-06, 5.805999999997091e-06, 5.166000000000892e-06, 4.723000000001615e-06, 5.958000000000352e-06, 3.971999999997922e-06, 2.735999999999711e-06, 6.292000000001491e-06, 2.7639999999988507e-06, 5.735999999999242e-06, 4.29200000000296e-06, 2.722000000000141e-06, 2.8469999999967965e-06, 5.542000000000741e-06, 3.722000000001141e-06, 4.985999999998492e-06, 5.846999999999797e-06, 6.09800000000299e-06, 5.860999999999367e-06, 2.401999999998572e-06, 3.6669999999988656e-06, 4.791999999999991e-06, 3.7910000000029864e-06, 4.61199999999759e-06, 5.569000000000407e-06, 5.889000000001976e-06, 6.124999999999187e-06, 3.249999999999781e-06, 3.222000000000641e-06, 4.707999999999102e-06, 4.86200000000131e-06, 2.526999999998697e-06, 4.291999999999491e-06, 5.346999999999297e-06], 'eventsourcetime': [0.017412944, 0.017416347, 0.017421181, 0.017425042, 0.017427861, 0.017430806, 0.017434528, 0.017438972, 0.017445167, 0.017448278, 0.017454444, 0.017459181, 0.017463819, 0.017468306, 0.017473083, 0.017477069, 0.017481472, 0.017487278, 0.017492444, 0.017497167, 0.017503125, 0.017507097, 0.017509833, 0.017516125, 0.017518889, 0.017524625, 0.017528917, 0.017531639, 0.017534486, 0.017540028, 0.01754375, 0.017548736, 0.017554583, 0.017560681, 0.017566542, 0.017568944, 0.017572611, 0.017577403, 0.017581194, 0.017585806, 0.017591375, 0.017597264, 0.017603389, 0.017606639, 0.017609861, 0.017614569, 0.017619431, 0.017621958, 0.01762625, 0.017631597]}</msg>
<status status="PASS" starttime="20201112 09:42:45.708" endtime="20201112 09:42:45.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.704" endtime="20201112 09:42:45.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.714" level="INFO">${RESULT} = [{'time': 0.017416347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.017425042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:45.712" endtime="20201112 09:42:45.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.722" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.4029999999990457e-06, 3.861000000000836e-06, 2.945000000000725e-06, 4.443999999999282e-06, 3.111000000000086e-06, 4.737000000001185e-06, 4.487000000000935e-06, 3.986000000000961e-06...</msg>
<status status="PASS" starttime="20201112 09:42:45.715" endtime="20201112 09:42:45.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.726" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.725" endtime="20201112 09:42:45.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.729" level="INFO">VALUE: [3.4029999999990457e-06, 3.861000000000836e-06, 2.945000000000725e-06, 4.443999999999282e-06, 3.111000000000086e-06, 4.737000000001185e-06, 4.487000000000935e-06, 3.986000000000961e-06, 5.805999999997091e-06, 4.723000000001615e-06, 3.971999999997922e-06, 6.292000000001491e-06, 5.735999999999242e-06, 2.722000000000141e-06, 5.542000000000741e-06, 4.985999999998492e-06, 6.09800000000299e-06, 2.401999999998572e-06, 4.791999999999991e-06, 4.61199999999759e-06, 5.889000000001976e-06, 3.249999999999781e-06, 4.707999999999102e-06, 2.526999999998697e-06, 5.346999999999297e-06]</msg>
<status status="PASS" starttime="20201112 09:42:45.727" endtime="20201112 09:42:45.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.723" endtime="20201112 09:42:45.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.732" endtime="20201112 09:42:45.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.735" endtime="20201112 09:42:45.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.734" endtime="20201112 09:42:45.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.730" endtime="20201112 09:42:45.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.370" endtime="20201112 09:42:45.756"></status>
</kw>
<msg timestamp="20201112 09:42:45.756" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.764" endtime="20201112 09:42:45.778"></status>
</kw>
<msg timestamp="20201112 09:42:45.778" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.762" endtime="20201112 09:42:45.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.781" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.779" endtime="20201112 09:42:45.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.782" endtime="20201112 09:42:45.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.760" endtime="20201112 09:42:45.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.758" endtime="20201112 09:42:45.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.791" endtime="20201112 09:42:46.056"></status>
</kw>
<msg timestamp="20201112 09:42:46.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017393431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017396014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.790" endtime="20201112 09:42:46.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017393431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017396014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.059" endtime="20201112 09:42:46.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.064" endtime="20201112 09:42:46.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.786" endtime="20201112 09:42:46.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.785" endtime="20201112 09:42:46.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.071" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.070" endtime="20201112 09:42:46.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.074" level="INFO">VALUE: [{'time': 0.017393431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017396014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.017400417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017406028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.017411431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017415472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.017420444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.017424847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.017429708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017435806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.017439222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.017443639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.017446486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017449833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.017454056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.017456972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.017459403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.017462736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.017466333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.017470056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.017473917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8609999999973665e-06, 'source_diff': 3.8609999999973665e-06}, {'time': 0.017478014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.017481431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.017487653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017490014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3610000000028053e-06, 'source_diff': 2.3610000000028053e-06}, {'time': 0.017494542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.017500514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017505417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.017510792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.017514819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.017518431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6120000000000596e-06, 'source_diff': 3.6120000000000596e-06}, {'time': 0.017521069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.637999999999252e-06, 'source_diff': 2.637999999999252e-06}, {'time': 0.017527056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.017530528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017535375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017539917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017544222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000003056e-06, 'source_diff': 4.305000000003056e-06}, {'time': 0.017548194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.017553347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.017558389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017562167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017565903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017569931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017573028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017579069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.017584042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.017589833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.017593806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.017597472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.665999999999392e-06, 'source_diff': 3.665999999999392e-06}, {'time': 0.017602583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:46.072" endtime="20201112 09:42:46.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.067" endtime="20201112 09:42:46.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.089" level="INFO">${debug-compressed} = {'source_diff': [0, 2.583000000000446e-06, 4.403000000000046e-06, 5.610999999999117e-06, 5.403000000001046e-06, 4.040999999999767e-06, 4.971999999998922e-06, 4.403000000000046e-06, 4.860999999998367e-...</msg>
<status status="PASS" starttime="20201112 09:42:46.077" endtime="20201112 09:42:46.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.093" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.092" endtime="20201112 09:42:46.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.096" level="INFO">VALUE: {'source_diff': [0, 2.583000000000446e-06, 4.403000000000046e-06, 5.610999999999117e-06, 5.403000000001046e-06, 4.040999999999767e-06, 4.971999999998922e-06, 4.403000000000046e-06, 4.860999999998367e-06, 6.09800000000299e-06, 3.415999999999142e-06, 4.416999999999616e-06, 2.847000000000266e-06, 3.347000000000766e-06, 4.222999999997645e-06, 2.9160000000021113e-06, 2.4309999999971854e-06, 3.333000000001196e-06, 3.597000000001016e-06, 3.7230000000006147e-06, 3.8609999999973665e-06, 4.097000000001516e-06, 3.4169999999986156e-06, 6.222000000000172e-06, 2.3610000000028053e-06, 4.527999999996701e-06, 5.971999999999922e-06, 4.903000000000546e-06, 5.375000000001906e-06, 4.027000000000197e-06, 3.6120000000000596e-06, 2.637999999999252e-06, 5.986999999998965e-06, 3.472000000000891e-06, 4.846999999998797e-06, 4.541999999999741e-06, 4.305000000003056e-06, 3.971999999997922e-06, 5.153000000000796e-06, 5.042000000000241e-06, 3.7779999999994207e-06, 3.736000000000711e-06, 4.027999999999671e-06, 3.097000000000516e-06, 6.040999999998298e-06, 4.973000000001865e-06, 5.790999999998048e-06, 3.973000000000865e-06, 3.665999999999392e-06, 5.111000000002086e-06], 'diff': [0, 2.583000000000446e-06, 4.403000000000046e-06, 5.610999999999117e-06, 5.403000000001046e-06, 4.040999999999767e-06, 4.971999999998922e-06, 4.403000000000046e-06, 4.860999999998367e-06, 6.09800000000299e-06, 3.415999999999142e-06, 4.416999999999616e-06, 2.847000000000266e-06, 3.347000000000766e-06, 4.222999999997645e-06, 2.9160000000021113e-06, 2.4309999999971854e-06, 3.333000000001196e-06, 3.597000000001016e-06, 3.7230000000006147e-06, 3.8609999999973665e-06, 4.097000000001516e-06, 3.4169999999986156e-06, 6.222000000000172e-06, 2.3610000000028053e-06, 4.527999999996701e-06, 5.971999999999922e-06, 4.903000000000546e-06, 5.375000000001906e-06, 4.027000000000197e-06, 3.6120000000000596e-06, 2.637999999999252e-06, 5.986999999998965e-06, 3.472000000000891e-06, 4.846999999998797e-06, 4.541999999999741e-06, 4.305000000003056e-06, 3.971999999997922e-06, 5.153000000000796e-06, 5.042000000000241e-06, 3.7779999999994207e-06, 3.736000000000711e-06, 4.027999999999671e-06, 3.097000000000516e-06, 6.040999999998298e-06, 4.973000000001865e-06, 5.790999999998048e-06, 3.973000000000865e-06, 3.665999999999392e-06, 5.111000000002086e-06], 'eventsourcetime': [0.017393431, 0.017396014, 0.017400417, 0.017406028, 0.017411431, 0.017415472, 0.017420444, 0.017424847, 0.017429708, 0.017435806, 0.017439222, 0.017443639, 0.017446486, 0.017449833, 0.017454056, 0.017456972, 0.017459403, 0.017462736, 0.017466333, 0.017470056, 0.017473917, 0.017478014, 0.017481431, 0.017487653, 0.017490014, 0.017494542, 0.017500514, 0.017505417, 0.017510792, 0.017514819, 0.017518431, 0.017521069, 0.017527056, 0.017530528, 0.017535375, 0.017539917, 0.017544222, 0.017548194, 0.017553347, 0.017558389, 0.017562167, 0.017565903, 0.017569931, 0.017573028, 0.017579069, 0.017584042, 0.017589833, 0.017593806, 0.017597472, 0.017602583]}</msg>
<status status="PASS" starttime="20201112 09:42:46.094" endtime="20201112 09:42:46.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.090" endtime="20201112 09:42:46.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.101" level="INFO">${RESULT} = [{'time': 0.017396014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.017406028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:46.098" endtime="20201112 09:42:46.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.108" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [2.583000000000446e-06, 5.610999999999117e-06, 4.040999999999767e-06, 4.403000000000046e-06, 6.09800000000299e-06, 4.416999999999616e-06, 3.347000000000766e-06, 2.9160000000021113e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:46.101" endtime="20201112 09:42:46.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.113" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.112" endtime="20201112 09:42:46.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.115" level="INFO">VALUE: [2.583000000000446e-06, 5.610999999999117e-06, 4.040999999999767e-06, 4.403000000000046e-06, 6.09800000000299e-06, 4.416999999999616e-06, 3.347000000000766e-06, 2.9160000000021113e-06, 3.333000000001196e-06, 3.7230000000006147e-06, 4.097000000001516e-06, 6.222000000000172e-06, 4.527999999996701e-06, 4.903000000000546e-06, 4.027000000000197e-06, 2.637999999999252e-06, 3.472000000000891e-06, 4.541999999999741e-06, 3.971999999997922e-06, 5.042000000000241e-06, 3.736000000000711e-06, 3.097000000000516e-06, 4.973000000001865e-06, 3.973000000000865e-06, 5.111000000002086e-06]</msg>
<status status="PASS" starttime="20201112 09:42:46.114" endtime="20201112 09:42:46.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.109" endtime="20201112 09:42:46.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.118" endtime="20201112 09:42:46.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.122" endtime="20201112 09:42:46.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.120" endtime="20201112 09:42:46.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.117" endtime="20201112 09:42:46.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.757" endtime="20201112 09:42:46.142"></status>
</kw>
<msg timestamp="20201112 09:42:46.143" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.150" endtime="20201112 09:42:46.164"></status>
</kw>
<msg timestamp="20201112 09:42:46.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.149" endtime="20201112 09:42:46.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.167" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.166" endtime="20201112 09:42:46.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.168" endtime="20201112 09:42:46.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.146" endtime="20201112 09:42:46.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.144" endtime="20201112 09:42:46.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.177" endtime="20201112 09:42:46.441"></status>
</kw>
<msg timestamp="20201112 09:42:46.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017369042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017373181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.176" endtime="20201112 09:42:46.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017369042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017373181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.444" endtime="20201112 09:42:46.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.449" endtime="20201112 09:42:46.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.173" endtime="20201112 09:42:46.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.171" endtime="20201112 09:42:46.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.455" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.454" endtime="20201112 09:42:46.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.459" level="INFO">VALUE: [{'time': 0.017369042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017373181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.017379306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999999187e-06, 'source_diff': 6.124999999999187e-06}, {'time': 0.017383597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017387778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.017393111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.017396153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.017401194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.017404931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7370000000001846e-06, 'source_diff': 3.7370000000001846e-06}, {'time': 0.017407639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.017411625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017417278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.017422125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017426111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.017429944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.017433861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.017439833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017443944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.017450097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.017454667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5699999999988805e-06, 'source_diff': 4.5699999999988805e-06}, {'time': 0.017459611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.017465403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}, {'time': 0.017468319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.017472014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.017477889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.017481306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.017483778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017488694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.017493611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017497889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.017502625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017506236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.0175115, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.017514986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017517514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017522514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.017527722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.017532736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.014000000001101e-06, 'source_diff': 5.014000000001101e-06}, {'time': 0.017537292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.017541208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.01754425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.017546792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.017552194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.017556875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.01756025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.017563819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.017566736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.017572819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.017578, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.017580958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:46.457" endtime="20201112 09:42:46.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.452" endtime="20201112 09:42:46.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.475" level="INFO">${debug-compressed} = {'source_diff': [0, 4.139000000000226e-06, 6.124999999999187e-06, 4.291000000000017e-06, 4.1809999999989356e-06, 5.332999999999727e-06, 3.04200000000171e-06, 5.040999999997298e-06, 3.7370000000001846e...</msg>
<status status="PASS" starttime="20201112 09:42:46.461" endtime="20201112 09:42:46.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.479" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.478" endtime="20201112 09:42:46.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.482" level="INFO">VALUE: {'source_diff': [0, 4.139000000000226e-06, 6.124999999999187e-06, 4.291000000000017e-06, 4.1809999999989356e-06, 5.332999999999727e-06, 3.04200000000171e-06, 5.040999999997298e-06, 3.7370000000001846e-06, 2.708000000000571e-06, 3.986000000000961e-06, 5.653000000001296e-06, 4.846999999998797e-06, 3.986000000000961e-06, 3.832999999998227e-06, 3.916999999999116e-06, 5.971999999999922e-06, 4.111000000001086e-06, 6.153000000001796e-06, 4.5699999999988805e-06, 4.943999999999782e-06, 5.792000000000991e-06, 2.915999999998642e-06, 3.695000000001475e-06, 5.874999999998937e-06, 3.4169999999986156e-06, 2.471999999999891e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.277999999999921e-06, 4.736000000001711e-06, 3.611000000000586e-06, 5.2639999999978815e-06, 3.486000000000461e-06, 2.52800000000164e-06, 4.9999999999980616e-06, 5.207999999999602e-06, 5.014000000001101e-06, 4.555999999999311e-06, 3.915999999999642e-06, 3.04200000000171e-06, 2.5419999999977405e-06, 5.402000000001572e-06, 4.680999999999436e-06, 3.374999999999906e-06, 3.5690000000018762e-06, 2.9169999999981155e-06, 6.083000000000477e-06, 5.180999999999936e-06, 2.958000000000821e-06], 'diff': [0, 4.139000000000226e-06, 6.124999999999187e-06, 4.291000000000017e-06, 4.1809999999989356e-06, 5.332999999999727e-06, 3.04200000000171e-06, 5.040999999997298e-06, 3.7370000000001846e-06, 2.708000000000571e-06, 3.986000000000961e-06, 5.653000000001296e-06, 4.846999999998797e-06, 3.986000000000961e-06, 3.832999999998227e-06, 3.916999999999116e-06, 5.971999999999922e-06, 4.111000000001086e-06, 6.153000000001796e-06, 4.5699999999988805e-06, 4.943999999999782e-06, 5.792000000000991e-06, 2.915999999998642e-06, 3.695000000001475e-06, 5.874999999998937e-06, 3.4169999999986156e-06, 2.471999999999891e-06, 4.916000000000642e-06, 4.917000000000116e-06, 4.277999999999921e-06, 4.736000000001711e-06, 3.611000000000586e-06, 5.2639999999978815e-06, 3.486000000000461e-06, 2.52800000000164e-06, 4.9999999999980616e-06, 5.207999999999602e-06, 5.014000000001101e-06, 4.555999999999311e-06, 3.915999999999642e-06, 3.04200000000171e-06, 2.5419999999977405e-06, 5.402000000001572e-06, 4.680999999999436e-06, 3.374999999999906e-06, 3.5690000000018762e-06, 2.9169999999981155e-06, 6.083000000000477e-06, 5.180999999999936e-06, 2.958000000000821e-06], 'eventsourcetime': [0.017369042, 0.017373181, 0.017379306, 0.017383597, 0.017387778, 0.017393111, 0.017396153, 0.017401194, 0.017404931, 0.017407639, 0.017411625, 0.017417278, 0.017422125, 0.017426111, 0.017429944, 0.017433861, 0.017439833, 0.017443944, 0.017450097, 0.017454667, 0.017459611, 0.017465403, 0.017468319, 0.017472014, 0.017477889, 0.017481306, 0.017483778, 0.017488694, 0.017493611, 0.017497889, 0.017502625, 0.017506236, 0.0175115, 0.017514986, 0.017517514, 0.017522514, 0.017527722, 0.017532736, 0.017537292, 0.017541208, 0.01754425, 0.017546792, 0.017552194, 0.017556875, 0.01756025, 0.017563819, 0.017566736, 0.017572819, 0.017578, 0.017580958]}</msg>
<status status="PASS" starttime="20201112 09:42:46.480" endtime="20201112 09:42:46.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.476" endtime="20201112 09:42:46.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.486" level="INFO">${RESULT} = [{'time': 0.017373181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.017383597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:46.484" endtime="20201112 09:42:46.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.494" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.139000000000226e-06, 4.291000000000017e-06, 5.332999999999727e-06, 5.040999999997298e-06, 2.708000000000571e-06, 5.653000000001296e-06, 3.986000000000961e-06, 3.916999999999116e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:46.487" endtime="20201112 09:42:46.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.498" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.497" endtime="20201112 09:42:46.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.501" level="INFO">VALUE: [4.139000000000226e-06, 4.291000000000017e-06, 5.332999999999727e-06, 5.040999999997298e-06, 2.708000000000571e-06, 5.653000000001296e-06, 3.986000000000961e-06, 3.916999999999116e-06, 4.111000000001086e-06, 4.5699999999988805e-06, 5.792000000000991e-06, 3.695000000001475e-06, 3.4169999999986156e-06, 4.916000000000642e-06, 4.277999999999921e-06, 3.611000000000586e-06, 3.486000000000461e-06, 4.9999999999980616e-06, 5.014000000001101e-06, 3.915999999999642e-06, 2.5419999999977405e-06, 4.680999999999436e-06, 3.5690000000018762e-06, 6.083000000000477e-06, 2.958000000000821e-06]</msg>
<status status="PASS" starttime="20201112 09:42:46.500" endtime="20201112 09:42:46.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.495" endtime="20201112 09:42:46.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.504" endtime="20201112 09:42:46.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.507" endtime="20201112 09:42:46.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.506" endtime="20201112 09:42:46.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.502" endtime="20201112 09:42:46.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.143" endtime="20201112 09:42:46.528"></status>
</kw>
<msg timestamp="20201112 09:42:46.528" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.537" endtime="20201112 09:42:46.551"></status>
</kw>
<msg timestamp="20201112 09:42:46.551" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.535" endtime="20201112 09:42:46.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.553" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.552" endtime="20201112 09:42:46.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.555" endtime="20201112 09:42:46.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.532" endtime="20201112 09:42:46.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.530" endtime="20201112 09:42:46.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.563" endtime="20201112 09:42:46.827"></status>
</kw>
<msg timestamp="20201112 09:42:46.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018238014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018241806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.562" endtime="20201112 09:42:46.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018238014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018241806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.830" endtime="20201112 09:42:46.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.836" endtime="20201112 09:42:46.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.560" endtime="20201112 09:42:46.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.558" endtime="20201112 09:42:46.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.842" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.841" endtime="20201112 09:42:46.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.846" level="INFO">VALUE: [{'time': 0.018238014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018241806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018246278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.018251944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.665999999997923e-06, 'source_diff': 5.665999999997923e-06}, {'time': 0.018256042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018262014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018266347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.018270667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.018273694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.018277792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018282667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.018285875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208000000001071e-06, 'source_diff': 3.208000000001071e-06}, {'time': 0.018290153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018294569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018297875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.30600000000153e-06, 'source_diff': 3.30600000000153e-06}, {'time': 0.018302611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.018305236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.018309417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.181000000002405e-06, 'source_diff': 4.181000000002405e-06}, {'time': 0.018315014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018320431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018325528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018329819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018335542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.018339792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.250000000000781e-06, 'source_diff': 4.250000000000781e-06}, {'time': 0.018343111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3189999999981568e-06, 'source_diff': 3.3189999999981568e-06}, {'time': 0.018346833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018350083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.249999999999781e-06, 'source_diff': 3.249999999999781e-06}, {'time': 0.018355236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018359083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018362111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.018364528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.01836975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.018374125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.018379708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018384931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.018389264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.01839175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.01839575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018402014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.264000000002351e-06, 'source_diff': 6.264000000002351e-06}, {'time': 0.018405375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018407903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.018410264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018414236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.018419417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.018423944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.018426347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.018428889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.0184345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018437417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018442806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3889999999980065e-06, 'source_diff': 5.3889999999980065e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:46.843" endtime="20201112 09:42:46.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.839" endtime="20201112 09:42:46.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.861" level="INFO">${debug-compressed} = {'source_diff': [0, 3.7919999999989906e-06, 4.472000000001891e-06, 5.665999999997923e-06, 4.09800000000099e-06, 5.971999999999922e-06, 4.332999999998727e-06, 4.3200000000021e-06, 3.026999999999197e-06...</msg>
<status status="PASS" starttime="20201112 09:42:46.848" endtime="20201112 09:42:46.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.864" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.863" endtime="20201112 09:42:46.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.867" level="INFO">VALUE: {'source_diff': [0, 3.7919999999989906e-06, 4.472000000001891e-06, 5.665999999997923e-06, 4.09800000000099e-06, 5.971999999999922e-06, 4.332999999998727e-06, 4.3200000000021e-06, 3.026999999999197e-06, 4.09800000000099e-06, 4.8749999999979365e-06, 3.208000000001071e-06, 4.277999999999921e-06, 4.416000000000142e-06, 3.30600000000153e-06, 4.735999999998242e-06, 2.6249999999991558e-06, 4.181000000002405e-06, 5.596999999999547e-06, 5.417000000000616e-06, 5.096999999999047e-06, 4.291000000000017e-06, 5.7229999999991454e-06, 4.250000000000781e-06, 3.3189999999981568e-06, 3.722000000001141e-06, 3.249999999999781e-06, 5.153000000000796e-06, 3.847000000001266e-06, 3.0279999999986706e-06, 2.417000000001085e-06, 5.221999999999172e-06, 4.375000000000906e-06, 5.582999999999977e-06, 5.222999999998645e-06, 4.332999999998727e-06, 2.485999999999461e-06, 4.000000000000531e-06, 6.264000000002351e-06, 3.361000000000336e-06, 2.5279999999981706e-06, 2.360999999999336e-06, 3.972000000001391e-06, 5.180999999999936e-06, 4.527000000000697e-06, 2.4029999999980456e-06, 2.54200000000121e-06, 5.610999999999117e-06, 2.917000000001585e-06, 5.3889999999980065e-06], 'diff': [0, 3.7919999999989906e-06, 4.472000000001891e-06, 5.665999999997923e-06, 4.09800000000099e-06, 5.971999999999922e-06, 4.332999999998727e-06, 4.3200000000021e-06, 3.026999999999197e-06, 4.09800000000099e-06, 4.8749999999979365e-06, 3.208000000001071e-06, 4.277999999999921e-06, 4.416000000000142e-06, 3.30600000000153e-06, 4.735999999998242e-06, 2.6249999999991558e-06, 4.181000000002405e-06, 5.596999999999547e-06, 5.417000000000616e-06, 5.096999999999047e-06, 4.291000000000017e-06, 5.7229999999991454e-06, 4.250000000000781e-06, 3.3189999999981568e-06, 3.722000000001141e-06, 3.249999999999781e-06, 5.153000000000796e-06, 3.847000000001266e-06, 3.0279999999986706e-06, 2.417000000001085e-06, 5.221999999999172e-06, 4.375000000000906e-06, 5.582999999999977e-06, 5.222999999998645e-06, 4.332999999998727e-06, 2.485999999999461e-06, 4.000000000000531e-06, 6.264000000002351e-06, 3.361000000000336e-06, 2.5279999999981706e-06, 2.360999999999336e-06, 3.972000000001391e-06, 5.180999999999936e-06, 4.527000000000697e-06, 2.4029999999980456e-06, 2.54200000000121e-06, 5.610999999999117e-06, 2.917000000001585e-06, 5.3889999999980065e-06], 'eventsourcetime': [0.018238014, 0.018241806, 0.018246278, 0.018251944, 0.018256042, 0.018262014, 0.018266347, 0.018270667, 0.018273694, 0.018277792, 0.018282667, 0.018285875, 0.018290153, 0.018294569, 0.018297875, 0.018302611, 0.018305236, 0.018309417, 0.018315014, 0.018320431, 0.018325528, 0.018329819, 0.018335542, 0.018339792, 0.018343111, 0.018346833, 0.018350083, 0.018355236, 0.018359083, 0.018362111, 0.018364528, 0.01836975, 0.018374125, 0.018379708, 0.018384931, 0.018389264, 0.01839175, 0.01839575, 0.018402014, 0.018405375, 0.018407903, 0.018410264, 0.018414236, 0.018419417, 0.018423944, 0.018426347, 0.018428889, 0.0184345, 0.018437417, 0.018442806]}</msg>
<status status="PASS" starttime="20201112 09:42:46.865" endtime="20201112 09:42:46.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.861" endtime="20201112 09:42:46.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.872" level="INFO">${RESULT} = [{'time': 0.018241806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018251944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:46.869" endtime="20201112 09:42:46.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.880" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [3.7919999999989906e-06, 5.665999999997923e-06, 5.971999999999922e-06, 4.3200000000021e-06, 4.09800000000099e-06, 3.208000000001071e-06, 4.416000000000142e-06, 4.735999999998242e-06, 4...</msg>
<status status="PASS" starttime="20201112 09:42:46.873" endtime="20201112 09:42:46.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.884" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.883" endtime="20201112 09:42:46.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.886" level="INFO">VALUE: [3.7919999999989906e-06, 5.665999999997923e-06, 5.971999999999922e-06, 4.3200000000021e-06, 4.09800000000099e-06, 3.208000000001071e-06, 4.416000000000142e-06, 4.735999999998242e-06, 4.181000000002405e-06, 5.417000000000616e-06, 4.291000000000017e-06, 4.250000000000781e-06, 3.722000000001141e-06, 5.153000000000796e-06, 3.0279999999986706e-06, 5.221999999999172e-06, 5.582999999999977e-06, 4.332999999998727e-06, 4.000000000000531e-06, 3.361000000000336e-06, 2.360999999999336e-06, 5.180999999999936e-06, 2.4029999999980456e-06, 5.610999999999117e-06, 5.3889999999980065e-06]</msg>
<status status="PASS" starttime="20201112 09:42:46.885" endtime="20201112 09:42:46.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.881" endtime="20201112 09:42:46.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.890" endtime="20201112 09:42:46.891"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.893" endtime="20201112 09:42:46.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.892" endtime="20201112 09:42:46.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.888" endtime="20201112 09:42:46.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.529" endtime="20201112 09:42:46.914"></status>
</kw>
<msg timestamp="20201112 09:42:46.915" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.922" endtime="20201112 09:42:46.936"></status>
</kw>
<msg timestamp="20201112 09:42:46.936" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.921" endtime="20201112 09:42:46.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.939" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.937" endtime="20201112 09:42:46.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.940" endtime="20201112 09:42:46.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.918" endtime="20201112 09:42:46.942"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.916" endtime="20201112 09:42:46.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.949" endtime="20201112 09:42:47.214"></status>
</kw>
<msg timestamp="20201112 09:42:47.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.947" endtime="20201112 09:42:47.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018109764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.217" endtime="20201112 09:42:47.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.222" endtime="20201112 09:42:47.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.945" endtime="20201112 09:42:47.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.943" endtime="20201112 09:42:47.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.229" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.228" endtime="20201112 09:42:47.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.232" level="INFO">VALUE: [{'time': 0.018109764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.018121042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018127333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.018131819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018136014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.01814225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018146792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018150083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}, {'time': 0.018152542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.018156764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.018161125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018164153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.018169069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018174667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018177403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.018182319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.915999999997173e-06, 'source_diff': 4.915999999997173e-06}, {'time': 0.018186222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018192083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.018198306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.018204583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.276999999998978e-06, 'source_diff': 6.276999999998978e-06}, {'time': 0.018210806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.018216458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652000000001822e-06, 'source_diff': 5.652000000001822e-06}, {'time': 0.018220528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0699999999983805e-06, 'source_diff': 4.0699999999983805e-06}, {'time': 0.018224611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.018230333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.01823575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.018240847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018246597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.018250986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018254722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.01825825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018263361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.018267583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018271986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018274347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018276819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018279417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.018282486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.018288472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018292167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.695000000001475e-06, 'source_diff': 3.695000000001475e-06}, {'time': 0.018294569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.018300306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736999999998715e-06, 'source_diff': 5.736999999998715e-06}, {'time': 0.018304903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.018307375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018309694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.319000000000626e-06, 'source_diff': 2.319000000000626e-06}, {'time': 0.018315569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018321264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.018325542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018329375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:47.230" endtime="20201112 09:42:47.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.226" endtime="20201112 09:42:47.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.248" level="INFO">${debug-compressed} = {'source_diff': [0, 6.166999999997896e-06, 5.111000000002086e-06, 6.290999999998548e-06, 4.486000000001461e-06, 4.1949999999985055e-06, 6.235999999999742e-06, 4.541999999999741e-06, 3.2910000000024864...</msg>
<status status="PASS" starttime="20201112 09:42:47.235" endtime="20201112 09:42:47.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.251" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.251" endtime="20201112 09:42:47.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.255" level="INFO">VALUE: {'source_diff': [0, 6.166999999997896e-06, 5.111000000002086e-06, 6.290999999998548e-06, 4.486000000001461e-06, 4.1949999999985055e-06, 6.235999999999742e-06, 4.541999999999741e-06, 3.2910000000024864e-06, 2.4589999999997947e-06, 4.221999999998172e-06, 4.361000000001336e-06, 3.0279999999986706e-06, 4.916000000000642e-06, 5.5979999999990204e-06, 2.7360000000031803e-06, 4.915999999997173e-06, 3.902999999999546e-06, 5.861000000002836e-06, 6.2229999999996455e-06, 6.276999999998978e-06, 6.2229999999996455e-06, 5.652000000001822e-06, 4.0699999999983805e-06, 4.083000000001946e-06, 5.721999999999672e-06, 5.416999999997146e-06, 5.097000000002516e-06, 5.749999999998812e-06, 4.389000000000476e-06, 3.736000000000711e-06, 3.5279999999991707e-06, 5.110999999998617e-06, 4.222000000001641e-06, 4.403000000000046e-06, 2.360999999999336e-06, 2.471999999999891e-06, 2.5979999999994896e-06, 3.069000000001376e-06, 5.985999999999492e-06, 3.695000000001475e-06, 2.401999999998572e-06, 5.736999999998715e-06, 4.597000000002016e-06, 2.471999999999891e-06, 2.319000000000626e-06, 5.874999999998937e-06, 5.695000000000006e-06, 4.277999999999921e-06, 3.832999999998227e-06], 'diff': [0, 6.166999999997896e-06, 5.111000000002086e-06, 6.290999999998548e-06, 4.486000000001461e-06, 4.1949999999985055e-06, 6.235999999999742e-06, 4.541999999999741e-06, 3.2910000000024864e-06, 2.4589999999997947e-06, 4.221999999998172e-06, 4.361000000001336e-06, 3.0279999999986706e-06, 4.916000000000642e-06, 5.5979999999990204e-06, 2.7360000000031803e-06, 4.915999999997173e-06, 3.902999999999546e-06, 5.861000000002836e-06, 6.2229999999996455e-06, 6.276999999998978e-06, 6.2229999999996455e-06, 5.652000000001822e-06, 4.0699999999983805e-06, 4.083000000001946e-06, 5.721999999999672e-06, 5.416999999997146e-06, 5.097000000002516e-06, 5.749999999998812e-06, 4.389000000000476e-06, 3.736000000000711e-06, 3.5279999999991707e-06, 5.110999999998617e-06, 4.222000000001641e-06, 4.403000000000046e-06, 2.360999999999336e-06, 2.471999999999891e-06, 2.5979999999994896e-06, 3.069000000001376e-06, 5.985999999999492e-06, 3.695000000001475e-06, 2.401999999998572e-06, 5.736999999998715e-06, 4.597000000002016e-06, 2.471999999999891e-06, 2.319000000000626e-06, 5.874999999998937e-06, 5.695000000000006e-06, 4.277999999999921e-06, 3.832999999998227e-06], 'eventsourcetime': [0.018109764, 0.018115931, 0.018121042, 0.018127333, 0.018131819, 0.018136014, 0.01814225, 0.018146792, 0.018150083, 0.018152542, 0.018156764, 0.018161125, 0.018164153, 0.018169069, 0.018174667, 0.018177403, 0.018182319, 0.018186222, 0.018192083, 0.018198306, 0.018204583, 0.018210806, 0.018216458, 0.018220528, 0.018224611, 0.018230333, 0.01823575, 0.018240847, 0.018246597, 0.018250986, 0.018254722, 0.01825825, 0.018263361, 0.018267583, 0.018271986, 0.018274347, 0.018276819, 0.018279417, 0.018282486, 0.018288472, 0.018292167, 0.018294569, 0.018300306, 0.018304903, 0.018307375, 0.018309694, 0.018315569, 0.018321264, 0.018325542, 0.018329375]}</msg>
<status status="PASS" starttime="20201112 09:42:47.253" endtime="20201112 09:42:47.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.249" endtime="20201112 09:42:47.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.259" level="INFO">${RESULT} = [{'time': 0.018115931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.018127333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:47.256" endtime="20201112 09:42:47.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.267" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [6.166999999997896e-06, 6.290999999998548e-06, 4.1949999999985055e-06, 4.541999999999741e-06, 2.4589999999997947e-06, 4.361000000001336e-06, 4.916000000000642e-06, 2.7360000000031803e-...</msg>
<status status="PASS" starttime="20201112 09:42:47.260" endtime="20201112 09:42:47.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.271" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.270" endtime="20201112 09:42:47.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.274" level="INFO">VALUE: [6.166999999997896e-06, 6.290999999998548e-06, 4.1949999999985055e-06, 4.541999999999741e-06, 2.4589999999997947e-06, 4.361000000001336e-06, 4.916000000000642e-06, 2.7360000000031803e-06, 3.902999999999546e-06, 6.2229999999996455e-06, 6.2229999999996455e-06, 4.0699999999983805e-06, 5.721999999999672e-06, 5.097000000002516e-06, 4.389000000000476e-06, 3.5279999999991707e-06, 4.222000000001641e-06, 2.360999999999336e-06, 2.5979999999994896e-06, 5.985999999999492e-06, 2.401999999998572e-06, 4.597000000002016e-06, 2.319000000000626e-06, 5.695000000000006e-06, 3.832999999998227e-06]</msg>
<status status="PASS" starttime="20201112 09:42:47.272" endtime="20201112 09:42:47.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.268" endtime="20201112 09:42:47.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.277" endtime="20201112 09:42:47.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.281" endtime="20201112 09:42:47.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.279" endtime="20201112 09:42:47.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.275" endtime="20201112 09:42:47.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.915" endtime="20201112 09:42:47.301"></status>
</kw>
<msg timestamp="20201112 09:42:47.301" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.309" endtime="20201112 09:42:47.322"></status>
</kw>
<msg timestamp="20201112 09:42:47.323" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.307" endtime="20201112 09:42:47.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.325" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.324" endtime="20201112 09:42:47.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.326" endtime="20201112 09:42:47.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.305" endtime="20201112 09:42:47.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.303" endtime="20201112 09:42:47.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.335" endtime="20201112 09:42:47.600"></status>
</kw>
<msg timestamp="20201112 09:42:47.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017311722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.334" endtime="20201112 09:42:47.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017311722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.602" endtime="20201112 09:42:47.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.608" endtime="20201112 09:42:47.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.331" endtime="20201112 09:42:47.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.330" endtime="20201112 09:42:47.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.614" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.613" endtime="20201112 09:42:47.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.618" level="INFO">VALUE: [{'time': 0.017311722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017322417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.017327514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017331806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.017335167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3609999999968665e-06, 'source_diff': 3.3609999999968665e-06}, {'time': 0.017341208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.017347319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.017350458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.017352944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017355972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.017361944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017365417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.017370958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.017375028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.017378292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.017381319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.017383736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.017387639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.017391875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.017395472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.017401694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017404042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.348000000002709e-06, 'source_diff': 2.348000000002709e-06}, {'time': 0.017408889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.017411306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.017417153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.017419833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.679999999997962e-06, 'source_diff': 2.679999999997962e-06}, {'time': 0.017425042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.209000000002545e-06, 'source_diff': 5.209000000002545e-06}, {'time': 0.017428278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2359999999967415e-06, 'source_diff': 3.2359999999967415e-06}, {'time': 0.017430806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.017436792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.017439444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.017443681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.017448583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.01745125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.667000000001335e-06, 'source_diff': 2.667000000001335e-06}, {'time': 0.017453931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6809999999974354e-06, 'source_diff': 2.6809999999974354e-06}, {'time': 0.017459514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.017462111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.017466847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.01747275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.017476167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.017480639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.017484806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.017488472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6660000000028614e-06, 'source_diff': 3.6660000000028614e-06}, {'time': 0.017492194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.017496389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.017500208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.818999999998657e-06, 'source_diff': 3.818999999998657e-06}, {'time': 0.017505611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017509472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.017512889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:47.615" endtime="20201112 09:42:47.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.611" endtime="20201112 09:42:47.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.634" level="INFO">${debug-compressed} = {'source_diff': [0, 4.8339999999987004e-06, 5.860999999999367e-06, 5.096999999999047e-06, 4.29200000000296e-06, 3.3609999999968665e-06, 6.041000000001767e-06, 6.110999999999617e-06, 3.1389999999992257...</msg>
<status status="PASS" starttime="20201112 09:42:47.620" endtime="20201112 09:42:47.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.638" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.637" endtime="20201112 09:42:47.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.641" level="INFO">VALUE: {'source_diff': [0, 4.8339999999987004e-06, 5.860999999999367e-06, 5.096999999999047e-06, 4.29200000000296e-06, 3.3609999999968665e-06, 6.041000000001767e-06, 6.110999999999617e-06, 3.1389999999992257e-06, 2.485999999999461e-06, 3.02800000000214e-06, 5.971999999999922e-06, 3.4730000000003647e-06, 5.540999999997798e-06, 4.07000000000185e-06, 3.2639999999993508e-06, 3.026999999999197e-06, 2.417000000001085e-06, 3.902999999999546e-06, 4.236000000001211e-06, 3.5969999999975466e-06, 6.222000000000172e-06, 2.348000000002709e-06, 4.846999999998797e-06, 2.417000000001085e-06, 5.846999999999797e-06, 2.679999999997962e-06, 5.209000000002545e-06, 3.2359999999967415e-06, 2.52800000000164e-06, 5.985999999999492e-06, 2.651999999998822e-06, 4.237000000000685e-06, 4.902000000001072e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 5.582999999999977e-06, 2.597000000000016e-06, 4.736000000001711e-06, 5.9029999999980765e-06, 3.417000000002085e-06, 4.471999999998422e-06, 4.166999999999366e-06, 3.6660000000028614e-06, 3.7219999999976716e-06, 4.195000000001975e-06, 3.818999999998657e-06, 5.403000000001046e-06, 3.861000000000836e-06, 3.4169999999986156e-06], 'diff': [0, 4.8339999999987004e-06, 5.860999999999367e-06, 5.096999999999047e-06, 4.29200000000296e-06, 3.3609999999968665e-06, 6.041000000001767e-06, 6.110999999999617e-06, 3.1389999999992257e-06, 2.485999999999461e-06, 3.02800000000214e-06, 5.971999999999922e-06, 3.4730000000003647e-06, 5.540999999997798e-06, 4.07000000000185e-06, 3.2639999999993508e-06, 3.026999999999197e-06, 2.417000000001085e-06, 3.902999999999546e-06, 4.236000000001211e-06, 3.5969999999975466e-06, 6.222000000000172e-06, 2.348000000002709e-06, 4.846999999998797e-06, 2.417000000001085e-06, 5.846999999999797e-06, 2.679999999997962e-06, 5.209000000002545e-06, 3.2359999999967415e-06, 2.52800000000164e-06, 5.985999999999492e-06, 2.651999999998822e-06, 4.237000000000685e-06, 4.902000000001072e-06, 2.667000000001335e-06, 2.6809999999974354e-06, 5.582999999999977e-06, 2.597000000000016e-06, 4.736000000001711e-06, 5.9029999999980765e-06, 3.417000000002085e-06, 4.471999999998422e-06, 4.166999999999366e-06, 3.6660000000028614e-06, 3.7219999999976716e-06, 4.195000000001975e-06, 3.818999999998657e-06, 5.403000000001046e-06, 3.861000000000836e-06, 3.4169999999986156e-06], 'eventsourcetime': [0.017311722, 0.017316556, 0.017322417, 0.017327514, 0.017331806, 0.017335167, 0.017341208, 0.017347319, 0.017350458, 0.017352944, 0.017355972, 0.017361944, 0.017365417, 0.017370958, 0.017375028, 0.017378292, 0.017381319, 0.017383736, 0.017387639, 0.017391875, 0.017395472, 0.017401694, 0.017404042, 0.017408889, 0.017411306, 0.017417153, 0.017419833, 0.017425042, 0.017428278, 0.017430806, 0.017436792, 0.017439444, 0.017443681, 0.017448583, 0.01745125, 0.017453931, 0.017459514, 0.017462111, 0.017466847, 0.01747275, 0.017476167, 0.017480639, 0.017484806, 0.017488472, 0.017492194, 0.017496389, 0.017500208, 0.017505611, 0.017509472, 0.017512889]}</msg>
<status status="PASS" starttime="20201112 09:42:47.639" endtime="20201112 09:42:47.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.635" endtime="20201112 09:42:47.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.645" level="INFO">${RESULT} = [{'time': 0.017316556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8339999999987004e-06, 'source_diff': 4.8339999999987004e-06}, {'time': 0.017327514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:47.643" endtime="20201112 09:42:47.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.653" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.8339999999987004e-06, 5.096999999999047e-06, 3.3609999999968665e-06, 6.110999999999617e-06, 2.485999999999461e-06, 5.971999999999922e-06, 5.540999999997798e-06, 3.2639999999993508e-...</msg>
<status status="PASS" starttime="20201112 09:42:47.646" endtime="20201112 09:42:47.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.657" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.656" endtime="20201112 09:42:47.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.660" level="INFO">VALUE: [4.8339999999987004e-06, 5.096999999999047e-06, 3.3609999999968665e-06, 6.110999999999617e-06, 2.485999999999461e-06, 5.971999999999922e-06, 5.540999999997798e-06, 3.2639999999993508e-06, 2.417000000001085e-06, 4.236000000001211e-06, 6.222000000000172e-06, 4.846999999998797e-06, 5.846999999999797e-06, 5.209000000002545e-06, 2.52800000000164e-06, 2.651999999998822e-06, 4.902000000001072e-06, 2.6809999999974354e-06, 2.597000000000016e-06, 5.9029999999980765e-06, 4.471999999998422e-06, 3.6660000000028614e-06, 4.195000000001975e-06, 5.403000000001046e-06, 3.4169999999986156e-06]</msg>
<status status="PASS" starttime="20201112 09:42:47.658" endtime="20201112 09:42:47.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.654" endtime="20201112 09:42:47.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.663" endtime="20201112 09:42:47.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.666" endtime="20201112 09:42:47.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.665" endtime="20201112 09:42:47.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.661" endtime="20201112 09:42:47.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.302" endtime="20201112 09:42:47.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.942" endtime="20201112 09:42:47.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.692" endtime="20201112 09:42:47.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.690" endtime="20201112 09:42:47.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.689" endtime="20201112 09:42:47.712"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:39.863" endtime="20201112 09:42:47.712" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.719" endtime="20201112 09:42:47.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.718" endtime="20201112 09:42:47.739"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.753" endtime="20201112 09:42:47.775"></status>
</kw>
<msg timestamp="20201112 09:42:47.775" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.751" endtime="20201112 09:42:47.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.778" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.776" endtime="20201112 09:42:47.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.781" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:47.779" endtime="20201112 09:42:47.781"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:47.748" endtime="20201112 09:42:47.782"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:47.746" endtime="20201112 09:42:47.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.744" endtime="20201112 09:42:47.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:47.786" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:47.786" endtime="20201112 09:42:47.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.784" endtime="20201112 09:42:47.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.744" endtime="20201112 09:42:47.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.743" endtime="20201112 09:42:47.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.788" endtime="20201112 09:42:47.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.742" endtime="20201112 09:42:47.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.740" endtime="20201112 09:42:47.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.716" endtime="20201112 09:42:47.791"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:47.793" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.801" endtime="20201112 09:42:47.816"></status>
</kw>
<msg timestamp="20201112 09:42:47.817" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.799" endtime="20201112 09:42:47.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.819" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.818" endtime="20201112 09:42:47.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.820" endtime="20201112 09:42:47.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.796" endtime="20201112 09:42:47.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.795" endtime="20201112 09:42:47.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.831" endtime="20201112 09:42:48.118"></status>
</kw>
<msg timestamp="20201112 09:42:48.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071264042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071270264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.829" endtime="20201112 09:42:48.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071264042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071270264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.122" endtime="20201112 09:42:48.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.130" endtime="20201112 09:42:48.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.826" endtime="20201112 09:42:48.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.824" endtime="20201112 09:42:48.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.137" level="INFO">${RESULT} = [{'time': 0.071270264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.071274458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:48.134" endtime="20201112 09:42:48.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.151" level="INFO">${OVERHEAD} = {'source_diff': [6.222000000000172e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8199999999995997e-06, 1.8610000000057747e-06, 1.8199999999995997e-06, 1.860999999991897e...</msg>
<status status="PASS" starttime="20201112 09:42:48.138" endtime="20201112 09:42:48.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.155" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:48.154" endtime="20201112 09:42:48.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.158" level="INFO">VALUE: [6.222000000000172e-06, 1.8610000000057747e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8199999999995997e-06, 1.8610000000057747e-06, 1.8199999999995997e-06, 1.860999999991897e-06, 1.8330000000066349e-06, 1.860999999991897e-06, 1.8339999999922307e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.860999999991897e-06, 1.9169999999901766e-06, 1.846999999999266e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.805999999993091e-06, 1.846999999999266e-06, 1.8610000000057747e-06, 1.8750000000122835e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.860999999991897e-06, 1.8479999999987395e-06, 1.8610000000057747e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.9170000000040543e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.860999999991897e-06]</msg>
<status status="PASS" starttime="20201112 09:42:48.156" endtime="20201112 09:42:48.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.152" endtime="20201112 09:42:48.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.161" endtime="20201112 09:42:48.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.164" endtime="20201112 09:42:48.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.163" endtime="20201112 09:42:48.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.159" endtime="20201112 09:42:48.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.794" endtime="20201112 09:42:48.185"></status>
</kw>
<msg timestamp="20201112 09:42:48.185" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.193" endtime="20201112 09:42:48.209"></status>
</kw>
<msg timestamp="20201112 09:42:48.209" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.192" endtime="20201112 09:42:48.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.210" endtime="20201112 09:42:48.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.213" endtime="20201112 09:42:48.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.189" endtime="20201112 09:42:48.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.187" endtime="20201112 09:42:48.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.222" endtime="20201112 09:42:48.502"></status>
</kw>
<msg timestamp="20201112 09:42:48.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018258278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018260139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.220" endtime="20201112 09:42:48.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018258278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018260139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.507" endtime="20201112 09:42:48.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.515" endtime="20201112 09:42:48.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.218" endtime="20201112 09:42:48.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.216" endtime="20201112 09:42:48.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.522" level="INFO">${RESULT} = [{'time': 0.018260139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018267069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:48.518" endtime="20201112 09:42:48.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.536" level="INFO">${OVERHEAD} = {'source_diff': [1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988...</msg>
<status status="PASS" starttime="20201112 09:42:48.523" endtime="20201112 09:42:48.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.540" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:48.539" endtime="20201112 09:42:48.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.542" level="INFO">VALUE: [1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.9169999999971155e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8200000000030692e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.889000000001445e-06, 1.77800000000089e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 09:42:48.541" endtime="20201112 09:42:48.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.537" endtime="20201112 09:42:48.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.546" endtime="20201112 09:42:48.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.549" endtime="20201112 09:42:48.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.548" endtime="20201112 09:42:48.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.544" endtime="20201112 09:42:48.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.186" endtime="20201112 09:42:48.570"></status>
</kw>
<msg timestamp="20201112 09:42:48.570" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.578" endtime="20201112 09:42:48.593"></status>
</kw>
<msg timestamp="20201112 09:42:48.593" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.576" endtime="20201112 09:42:48.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.596" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.594" endtime="20201112 09:42:48.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.597" endtime="20201112 09:42:48.598"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.574" endtime="20201112 09:42:48.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.572" endtime="20201112 09:42:48.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.606" endtime="20201112 09:42:48.892"></status>
</kw>
<msg timestamp="20201112 09:42:48.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017954389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.604" endtime="20201112 09:42:48.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017954389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.896" endtime="20201112 09:42:48.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.904" endtime="20201112 09:42:48.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.602" endtime="20201112 09:42:48.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.600" endtime="20201112 09:42:48.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.911" level="INFO">${RESULT} = [{'time': 0.017956236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017963986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:48.907" endtime="20201112 09:42:48.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.926" level="INFO">${OVERHEAD} = {'source_diff': [1.846999999999266e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.87500000000187...</msg>
<status status="PASS" starttime="20201112 09:42:48.912" endtime="20201112 09:42:48.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.930" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:48.929" endtime="20201112 09:42:48.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.933" level="INFO">VALUE: [1.846999999999266e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.915999999997642e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:42:48.931" endtime="20201112 09:42:48.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.927" endtime="20201112 09:42:48.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.936" endtime="20201112 09:42:48.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.940" endtime="20201112 09:42:48.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.938" endtime="20201112 09:42:48.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.935" endtime="20201112 09:42:48.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.571" endtime="20201112 09:42:48.960"></status>
</kw>
<msg timestamp="20201112 09:42:48.960" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.968" endtime="20201112 09:42:48.983"></status>
</kw>
<msg timestamp="20201112 09:42:48.983" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.966" endtime="20201112 09:42:48.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.986" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.984" endtime="20201112 09:42:48.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.987" endtime="20201112 09:42:48.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.964" endtime="20201112 09:42:48.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.962" endtime="20201112 09:42:48.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.996" endtime="20201112 09:42:49.284"></status>
</kw>
<msg timestamp="20201112 09:42:49.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017776389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.994" endtime="20201112 09:42:49.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017776389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017778236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.289" endtime="20201112 09:42:49.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.297" endtime="20201112 09:42:49.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.992" endtime="20201112 09:42:49.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.990" endtime="20201112 09:42:49.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.304" level="INFO">${RESULT} = [{'time': 0.017778236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.01778225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:42:49.300" endtime="20201112 09:42:49.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.317" level="INFO">${OVERHEAD} = {'source_diff': [1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.86200000000177...</msg>
<status status="PASS" starttime="20201112 09:42:49.305" endtime="20201112 09:42:49.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.322" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:49.321" endtime="20201112 09:42:49.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.324" level="INFO">VALUE: [1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.323" endtime="20201112 09:42:49.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.318" endtime="20201112 09:42:49.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.328" endtime="20201112 09:42:49.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.331" endtime="20201112 09:42:49.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.330" endtime="20201112 09:42:49.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.326" endtime="20201112 09:42:49.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.961" endtime="20201112 09:42:49.352"></status>
</kw>
<msg timestamp="20201112 09:42:49.352" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.360" endtime="20201112 09:42:49.374"></status>
</kw>
<msg timestamp="20201112 09:42:49.375" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.358" endtime="20201112 09:42:49.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.376" endtime="20201112 09:42:49.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.378" endtime="20201112 09:42:49.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.355" endtime="20201112 09:42:49.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.354" endtime="20201112 09:42:49.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.387" endtime="20201112 09:42:49.676"></status>
</kw>
<msg timestamp="20201112 09:42:49.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017771375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.386" endtime="20201112 09:42:49.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017771375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.681" endtime="20201112 09:42:49.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.689" endtime="20201112 09:42:49.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.383" endtime="20201112 09:42:49.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.382" endtime="20201112 09:42:49.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.695" level="INFO">${RESULT} = [{'time': 0.017771375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017776667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:49.692" endtime="20201112 09:42:49.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.710" level="INFO">${OVERHEAD} = {'source_diff': [1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.8609999999988358e...</msg>
<status status="PASS" starttime="20201112 09:42:49.696" endtime="20201112 09:42:49.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.714" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:49.713" endtime="20201112 09:42:49.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.716" level="INFO">VALUE: [1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8880000000019714e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8189999999966566e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.7920000000004599e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.848000000002209e-06, 1.848000000002209e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.715" endtime="20201112 09:42:49.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.710" endtime="20201112 09:42:49.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.720" endtime="20201112 09:42:49.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.723" endtime="20201112 09:42:49.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.722" endtime="20201112 09:42:49.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.718" endtime="20201112 09:42:49.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.353" endtime="20201112 09:42:49.744"></status>
</kw>
<msg timestamp="20201112 09:42:49.744" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.752" endtime="20201112 09:42:49.767"></status>
</kw>
<msg timestamp="20201112 09:42:49.768" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.750" endtime="20201112 09:42:49.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.769" endtime="20201112 09:42:49.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.771" endtime="20201112 09:42:49.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.747" endtime="20201112 09:42:49.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.746" endtime="20201112 09:42:49.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.780" endtime="20201112 09:42:50.069"></status>
</kw>
<msg timestamp="20201112 09:42:50.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017884167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017885944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.779" endtime="20201112 09:42:50.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017884167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017885944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.073" endtime="20201112 09:42:50.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.082" endtime="20201112 09:42:50.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.776" endtime="20201112 09:42:50.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.775" endtime="20201112 09:42:50.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.088" level="INFO">${RESULT} = [{'time': 0.017885944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.017893069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:50.085" endtime="20201112 09:42:50.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.102" level="INFO">${OVERHEAD} = {'source_diff': [1.7770000000014163e-06, 1.8610000000023053e-06, 1.8330000000031654e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.874999999998405...</msg>
<status status="PASS" starttime="20201112 09:42:50.089" endtime="20201112 09:42:50.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.107" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.106" endtime="20201112 09:42:50.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.109" level="INFO">VALUE: [1.7770000000014163e-06, 1.8610000000023053e-06, 1.8330000000031654e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.889000000001445e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8889999999979756e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.9020000000015413e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.108" endtime="20201112 09:42:50.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.103" endtime="20201112 09:42:50.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.113" endtime="20201112 09:42:50.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.117" endtime="20201112 09:42:50.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.115" endtime="20201112 09:42:50.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.111" endtime="20201112 09:42:50.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.744" endtime="20201112 09:42:50.137"></status>
</kw>
<msg timestamp="20201112 09:42:50.137" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.145" endtime="20201112 09:42:50.160"></status>
</kw>
<msg timestamp="20201112 09:42:50.160" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.143" endtime="20201112 09:42:50.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.163" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.162" endtime="20201112 09:42:50.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.164" endtime="20201112 09:42:50.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.141" endtime="20201112 09:42:50.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.139" endtime="20201112 09:42:50.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.173" endtime="20201112 09:42:50.462"></status>
</kw>
<msg timestamp="20201112 09:42:50.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017773264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017775111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.171" endtime="20201112 09:42:50.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017773264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017775111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.466" endtime="20201112 09:42:50.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.474" endtime="20201112 09:42:50.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.169" endtime="20201112 09:42:50.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.167" endtime="20201112 09:42:50.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.481" level="INFO">${RESULT} = [{'time': 0.017775111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017779167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:50.478" endtime="20201112 09:42:50.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.497" level="INFO">${OVERHEAD} = {'source_diff': [1.846999999999266e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.944000000000251e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e...</msg>
<status status="PASS" starttime="20201112 09:42:50.482" endtime="20201112 09:42:50.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.501" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.500" endtime="20201112 09:42:50.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.503" level="INFO">VALUE: [1.846999999999266e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.944000000000251e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.7919999999969904e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8619999999983095e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8470000000027353e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9029999999975455e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.502" endtime="20201112 09:42:50.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.498" endtime="20201112 09:42:50.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.507" endtime="20201112 09:42:50.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.510" endtime="20201112 09:42:50.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.509" endtime="20201112 09:42:50.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.505" endtime="20201112 09:42:50.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.138" endtime="20201112 09:42:50.531"></status>
</kw>
<msg timestamp="20201112 09:42:50.531" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.539" endtime="20201112 09:42:50.554"></status>
</kw>
<msg timestamp="20201112 09:42:50.554" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.537" endtime="20201112 09:42:50.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.557" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.555" endtime="20201112 09:42:50.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.558" endtime="20201112 09:42:50.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.535" endtime="20201112 09:42:50.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.533" endtime="20201112 09:42:50.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.567" endtime="20201112 09:42:50.853"></status>
</kw>
<msg timestamp="20201112 09:42:50.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017977667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017979528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.565" endtime="20201112 09:42:50.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017977667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017979528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.857" endtime="20201112 09:42:50.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.865" endtime="20201112 09:42:50.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.563" endtime="20201112 09:42:50.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.561" endtime="20201112 09:42:50.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.872" level="INFO">${RESULT} = [{'time': 0.017979528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.017983778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:50.868" endtime="20201112 09:42:50.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.886" level="INFO">${OVERHEAD} = {'source_diff': [1.8610000000023053e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.87499999999840...</msg>
<status status="PASS" starttime="20201112 09:42:50.873" endtime="20201112 09:42:50.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.890" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.889" endtime="20201112 09:42:50.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.892" level="INFO">VALUE: [1.8610000000023053e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.834000000002639e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.887999999998502e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.891" endtime="20201112 09:42:50.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.887" endtime="20201112 09:42:50.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.896" endtime="20201112 09:42:50.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.899" endtime="20201112 09:42:50.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.898" endtime="20201112 09:42:50.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.894" endtime="20201112 09:42:50.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.532" endtime="20201112 09:42:50.920"></status>
</kw>
<msg timestamp="20201112 09:42:50.920" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.928" endtime="20201112 09:42:50.943"></status>
</kw>
<msg timestamp="20201112 09:42:50.943" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.926" endtime="20201112 09:42:50.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.946" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.944" endtime="20201112 09:42:50.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.947" endtime="20201112 09:42:50.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.924" endtime="20201112 09:42:50.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.922" endtime="20201112 09:42:50.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.956" endtime="20201112 09:42:51.244"></status>
</kw>
<msg timestamp="20201112 09:42:51.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017841306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.954" endtime="20201112 09:42:51.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017841306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.248" endtime="20201112 09:42:51.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.257" endtime="20201112 09:42:51.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.952" endtime="20201112 09:42:51.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.950" endtime="20201112 09:42:51.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.263" level="INFO">${RESULT} = [{'time': 0.017841306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017846347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:51.260" endtime="20201112 09:42:51.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.277" level="INFO">${OVERHEAD} = {'source_diff': [1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.860999999998835...</msg>
<status status="PASS" starttime="20201112 09:42:51.264" endtime="20201112 09:42:51.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.282" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:51.281" endtime="20201112 09:42:51.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.284" level="INFO">VALUE: [1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.834000000002639e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.7779999999974205e-06, 1.9160000000011113e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.889000000001445e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.283" endtime="20201112 09:42:51.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.278" endtime="20201112 09:42:51.285"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.288" endtime="20201112 09:42:51.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.291" endtime="20201112 09:42:51.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.289" endtime="20201112 09:42:51.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.286" endtime="20201112 09:42:51.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.921" endtime="20201112 09:42:51.312"></status>
</kw>
<msg timestamp="20201112 09:42:51.312" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.319" endtime="20201112 09:42:51.335"></status>
</kw>
<msg timestamp="20201112 09:42:51.335" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.318" endtime="20201112 09:42:51.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.338" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.336" endtime="20201112 09:42:51.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.339" endtime="20201112 09:42:51.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.315" endtime="20201112 09:42:51.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.314" endtime="20201112 09:42:51.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.347" endtime="20201112 09:42:51.637"></status>
</kw>
<msg timestamp="20201112 09:42:51.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017859486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017861333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.346" endtime="20201112 09:42:51.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017859486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017861333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.641" endtime="20201112 09:42:51.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.649" endtime="20201112 09:42:51.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.343" endtime="20201112 09:42:51.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.342" endtime="20201112 09:42:51.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:51.656" level="INFO">${RESULT} = [{'time': 0.017861333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017865764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:51.652" endtime="20201112 09:42:51.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:51.670" level="INFO">${OVERHEAD} = {'source_diff': [1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057...</msg>
<status status="PASS" starttime="20201112 09:42:51.657" endtime="20201112 09:42:51.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.674" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:51.673" endtime="20201112 09:42:51.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.676" level="INFO">VALUE: [1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.901999999998072e-06, 1.8609999999988358e-06, 1.8330000000031654e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.9160000000011113e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.834000000002639e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8199999999995997e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8470000000027353e-06]</msg>
<status status="PASS" starttime="20201112 09:42:51.675" endtime="20201112 09:42:51.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.671" endtime="20201112 09:42:51.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.680" endtime="20201112 09:42:51.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:51.683" endtime="20201112 09:42:51.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.682" endtime="20201112 09:42:51.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.678" endtime="20201112 09:42:51.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.312" endtime="20201112 09:42:51.704"></status>
</kw>
<msg timestamp="20201112 09:42:51.704" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.712" endtime="20201112 09:42:51.727"></status>
</kw>
<msg timestamp="20201112 09:42:51.728" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.710" endtime="20201112 09:42:51.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:51.730" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:51.729" endtime="20201112 09:42:51.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.731" endtime="20201112 09:42:51.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.708" endtime="20201112 09:42:51.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.706" endtime="20201112 09:42:51.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:51.740" endtime="20201112 09:42:52.029"></status>
</kw>
<msg timestamp="20201112 09:42:52.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017771458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017773292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:51.739" endtime="20201112 09:42:52.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017771458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017773292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.033" endtime="20201112 09:42:52.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.042" endtime="20201112 09:42:52.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.736" endtime="20201112 09:42:52.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.734" endtime="20201112 09:42:52.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.048" level="INFO">${RESULT} = [{'time': 0.017773292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.017778653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:52.045" endtime="20201112 09:42:52.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.063" level="INFO">${OVERHEAD} = {'source_diff': [1.8339999999991696e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.861999999998309...</msg>
<status status="PASS" starttime="20201112 09:42:52.049" endtime="20201112 09:42:52.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.067" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:52.066" endtime="20201112 09:42:52.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.070" level="INFO">VALUE: [1.8339999999991696e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.944000000000251e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.77800000000089e-06, 1.903000000001015e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 09:42:52.068" endtime="20201112 09:42:52.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.064" endtime="20201112 09:42:52.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.073" endtime="20201112 09:42:52.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.076" endtime="20201112 09:42:52.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.075" endtime="20201112 09:42:52.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.071" endtime="20201112 09:42:52.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:51.705" endtime="20201112 09:42:52.097"></status>
</kw>
<msg timestamp="20201112 09:42:52.097" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.105" endtime="20201112 09:42:52.120"></status>
</kw>
<msg timestamp="20201112 09:42:52.120" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.103" endtime="20201112 09:42:52.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.123" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.121" endtime="20201112 09:42:52.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.124" endtime="20201112 09:42:52.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.101" endtime="20201112 09:42:52.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.099" endtime="20201112 09:42:52.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.133" endtime="20201112 09:42:52.421"></status>
</kw>
<msg timestamp="20201112 09:42:52.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017840986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.131" endtime="20201112 09:42:52.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017839125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017840986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.425" endtime="20201112 09:42:52.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.433" endtime="20201112 09:42:52.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.129" endtime="20201112 09:42:52.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.127" endtime="20201112 09:42:52.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.440" level="INFO">${RESULT} = [{'time': 0.017840986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017847861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:52.437" endtime="20201112 09:42:52.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.454" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8479999999987395...</msg>
<status status="PASS" starttime="20201112 09:42:52.441" endtime="20201112 09:42:52.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.458" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:52.457" endtime="20201112 09:42:52.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.461" level="INFO">VALUE: [1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8479999999987395e-06, 1.8479999999987395e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:42:52.459" endtime="20201112 09:42:52.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.455" endtime="20201112 09:42:52.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.464" endtime="20201112 09:42:52.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.468" endtime="20201112 09:42:52.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.466" endtime="20201112 09:42:52.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.463" endtime="20201112 09:42:52.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.098" endtime="20201112 09:42:52.488"></status>
</kw>
<msg timestamp="20201112 09:42:52.489" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.496" endtime="20201112 09:42:52.512"></status>
</kw>
<msg timestamp="20201112 09:42:52.512" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.494" endtime="20201112 09:42:52.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.515" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.513" endtime="20201112 09:42:52.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.516" endtime="20201112 09:42:52.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.492" endtime="20201112 09:42:52.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.490" endtime="20201112 09:42:52.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.526" endtime="20201112 09:42:52.815"></status>
</kw>
<msg timestamp="20201112 09:42:52.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017754986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017756847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.524" endtime="20201112 09:42:52.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017754986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017756847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.819" endtime="20201112 09:42:52.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.827" endtime="20201112 09:42:52.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.522" endtime="20201112 09:42:52.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.520" endtime="20201112 09:42:52.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:52.834" level="INFO">${RESULT} = [{'time': 0.017756847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017761417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:52.831" endtime="20201112 09:42:52.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:52.848" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.81999999999959...</msg>
<status status="PASS" starttime="20201112 09:42:52.835" endtime="20201112 09:42:52.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.852" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:52.851" endtime="20201112 09:42:52.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.855" level="INFO">VALUE: [1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.915999999997642e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.8889999999979756e-06, 1.8749999999984057e-06, 1.8889999999979756e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 09:42:52.854" endtime="20201112 09:42:52.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.849" endtime="20201112 09:42:52.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.858" endtime="20201112 09:42:52.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:52.862" endtime="20201112 09:42:52.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.860" endtime="20201112 09:42:52.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.857" endtime="20201112 09:42:52.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.489" endtime="20201112 09:42:52.882"></status>
</kw>
<msg timestamp="20201112 09:42:52.883" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.890" endtime="20201112 09:42:52.905"></status>
</kw>
<msg timestamp="20201112 09:42:52.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.889" endtime="20201112 09:42:52.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:52.908" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:52.907" endtime="20201112 09:42:52.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.909" endtime="20201112 09:42:52.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.886" endtime="20201112 09:42:52.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.884" endtime="20201112 09:42:52.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:52.918" endtime="20201112 09:42:53.207"></status>
</kw>
<msg timestamp="20201112 09:42:53.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017891736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017893611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:52.917" endtime="20201112 09:42:53.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017891736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017893611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.211" endtime="20201112 09:42:53.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.220" endtime="20201112 09:42:53.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.914" endtime="20201112 09:42:53.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.913" endtime="20201112 09:42:53.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.226" level="INFO">${RESULT} = [{'time': 0.017893611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017897611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:53.223" endtime="20201112 09:42:53.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.240" level="INFO">${OVERHEAD} = {'source_diff': [1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.84799999999873...</msg>
<status status="PASS" starttime="20201112 09:42:53.227" endtime="20201112 09:42:53.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:53.244" endtime="20201112 09:42:53.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.247" level="INFO">VALUE: [1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.957999999999821e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.903000000001015e-06, 1.848000000002209e-06, 1.8050000000005562e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.862000000001779e-06]</msg>
<status status="PASS" starttime="20201112 09:42:53.246" endtime="20201112 09:42:53.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.241" endtime="20201112 09:42:53.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.251" endtime="20201112 09:42:53.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.254" endtime="20201112 09:42:53.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.253" endtime="20201112 09:42:53.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.249" endtime="20201112 09:42:53.274"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:52.883" endtime="20201112 09:42:53.275"></status>
</kw>
<msg timestamp="20201112 09:42:53.275" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.282" endtime="20201112 09:42:53.297"></status>
</kw>
<msg timestamp="20201112 09:42:53.297" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.281" endtime="20201112 09:42:53.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.300" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.298" endtime="20201112 09:42:53.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.301" endtime="20201112 09:42:53.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.278" endtime="20201112 09:42:53.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.277" endtime="20201112 09:42:53.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.310" endtime="20201112 09:42:53.599"></status>
</kw>
<msg timestamp="20201112 09:42:53.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017759833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017761708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.308" endtime="20201112 09:42:53.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017759833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017761708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.603" endtime="20201112 09:42:53.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.612" endtime="20201112 09:42:53.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.306" endtime="20201112 09:42:53.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.304" endtime="20201112 09:42:53.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:53.618" level="INFO">${RESULT} = [{'time': 0.017761708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017768583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:53.615" endtime="20201112 09:42:53.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:53.633" level="INFO">${OVERHEAD} = {'source_diff': [1.8750000000018752e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8609999999988358...</msg>
<status status="PASS" starttime="20201112 09:42:53.619" endtime="20201112 09:42:53.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.637" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:53.636" endtime="20201112 09:42:53.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.640" level="INFO">VALUE: [1.8750000000018752e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.9169999999971155e-06, 1.846999999999266e-06, 1.887999999998502e-06, 1.8189999999966566e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.917000000000585e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:42:53.638" endtime="20201112 09:42:53.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.634" endtime="20201112 09:42:53.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.643" endtime="20201112 09:42:53.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:53.647" endtime="20201112 09:42:53.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.645" endtime="20201112 09:42:53.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.642" endtime="20201112 09:42:53.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.275" endtime="20201112 09:42:53.667"></status>
</kw>
<msg timestamp="20201112 09:42:53.668" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.675" endtime="20201112 09:42:53.690"></status>
</kw>
<msg timestamp="20201112 09:42:53.690" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.674" endtime="20201112 09:42:53.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:53.693" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:53.691" endtime="20201112 09:42:53.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.694" endtime="20201112 09:42:53.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.671" endtime="20201112 09:42:53.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.669" endtime="20201112 09:42:53.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:53.703" endtime="20201112 09:42:53.991"></status>
</kw>
<msg timestamp="20201112 09:42:53.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017729736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017731597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.701" endtime="20201112 09:42:53.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017729736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017731597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:53.995" endtime="20201112 09:42:54.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.003" endtime="20201112 09:42:54.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.698" endtime="20201112 09:42:54.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.697" endtime="20201112 09:42:54.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.010" level="INFO">${RESULT} = [{'time': 0.017731597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.017737167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:54.007" endtime="20201112 09:42:54.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.024" level="INFO">${OVERHEAD} = {'source_diff': [1.8610000000023053e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.889000000001445e-06, 1.8060000000000298e-06, 1.8060000000000298e-06, 1.8479999999987395e-06, 1.860999999998835...</msg>
<status status="PASS" starttime="20201112 09:42:54.011" endtime="20201112 09:42:54.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.028" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.027" endtime="20201112 09:42:54.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.031" level="INFO">VALUE: [1.8610000000023053e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.889000000001445e-06, 1.8060000000000298e-06, 1.8060000000000298e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.834000000002639e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.917000000000585e-06, 1.8470000000027353e-06, 1.917000000000585e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.029" endtime="20201112 09:42:54.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.025" endtime="20201112 09:42:54.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.034" endtime="20201112 09:42:54.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.037" endtime="20201112 09:42:54.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.036" endtime="20201112 09:42:54.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.032" endtime="20201112 09:42:54.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:53.668" endtime="20201112 09:42:54.058"></status>
</kw>
<msg timestamp="20201112 09:42:54.058" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.066" endtime="20201112 09:42:54.081"></status>
</kw>
<msg timestamp="20201112 09:42:54.082" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.064" endtime="20201112 09:42:54.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.084" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.083" endtime="20201112 09:42:54.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.085" endtime="20201112 09:42:54.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.062" endtime="20201112 09:42:54.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.060" endtime="20201112 09:42:54.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.094" endtime="20201112 09:42:54.383"></status>
</kw>
<msg timestamp="20201112 09:42:54.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017711472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017713333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.093" endtime="20201112 09:42:54.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017711472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017713333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.387" endtime="20201112 09:42:54.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.396" endtime="20201112 09:42:54.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.090" endtime="20201112 09:42:54.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.088" endtime="20201112 09:42:54.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.402" level="INFO">${RESULT} = [{'time': 0.017713333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.017717903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:54.399" endtime="20201112 09:42:54.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.416" level="INFO">${OVERHEAD} = {'source_diff': [1.8610000000023053e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.860999999998835...</msg>
<status status="PASS" starttime="20201112 09:42:54.403" endtime="20201112 09:42:54.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.421" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.420" endtime="20201112 09:42:54.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.423" level="INFO">VALUE: [1.8610000000023053e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8339999999991696e-06, 1.9160000000011113e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.7920000000004599e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.819000000000126e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.422" endtime="20201112 09:42:54.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.417" endtime="20201112 09:42:54.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.427" endtime="20201112 09:42:54.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.430" endtime="20201112 09:42:54.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.428" endtime="20201112 09:42:54.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.425" endtime="20201112 09:42:54.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.059" endtime="20201112 09:42:54.451"></status>
</kw>
<msg timestamp="20201112 09:42:54.451" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.458" endtime="20201112 09:42:54.474"></status>
</kw>
<msg timestamp="20201112 09:42:54.474" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.457" endtime="20201112 09:42:54.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.477" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.475" endtime="20201112 09:42:54.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.478" endtime="20201112 09:42:54.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.454" endtime="20201112 09:42:54.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.453" endtime="20201112 09:42:54.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.487" endtime="20201112 09:42:54.776"></status>
</kw>
<msg timestamp="20201112 09:42:54.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017887264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017889125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.485" endtime="20201112 09:42:54.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017887264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017889125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.780" endtime="20201112 09:42:54.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.788" endtime="20201112 09:42:54.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.483" endtime="20201112 09:42:54.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.481" endtime="20201112 09:42:54.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:54.796" level="INFO">${RESULT} = [{'time': 0.017889125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017894625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:54.793" endtime="20201112 09:42:54.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:54.809" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.7909999999975168e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.86100000000230...</msg>
<status status="PASS" starttime="20201112 09:42:54.797" endtime="20201112 09:42:54.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.813" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:54.812" endtime="20201112 09:42:54.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.816" level="INFO">VALUE: [1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.7909999999975168e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.7920000000004599e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 09:42:54.814" endtime="20201112 09:42:54.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.810" endtime="20201112 09:42:54.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.819" endtime="20201112 09:42:54.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:54.823" endtime="20201112 09:42:54.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.821" endtime="20201112 09:42:54.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.818" endtime="20201112 09:42:54.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.451" endtime="20201112 09:42:54.843"></status>
</kw>
<msg timestamp="20201112 09:42:54.844" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.851" endtime="20201112 09:42:54.867"></status>
</kw>
<msg timestamp="20201112 09:42:54.867" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.850" endtime="20201112 09:42:54.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:54.870" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:54.868" endtime="20201112 09:42:54.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.871" endtime="20201112 09:42:54.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.847" endtime="20201112 09:42:54.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.845" endtime="20201112 09:42:54.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:54.880" endtime="20201112 09:42:55.169"></status>
</kw>
<msg timestamp="20201112 09:42:55.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017819764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017821611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:54.878" endtime="20201112 09:42:55.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017819764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017821611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.173" endtime="20201112 09:42:55.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.181" endtime="20201112 09:42:55.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.875" endtime="20201112 09:42:55.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.874" endtime="20201112 09:42:55.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.188" level="INFO">${RESULT} = [{'time': 0.017821611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.017827361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:55.185" endtime="20201112 09:42:55.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.202" level="INFO">${OVERHEAD} = {'source_diff': [1.8470000000027353e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.80500000000055...</msg>
<status status="PASS" starttime="20201112 09:42:55.189" endtime="20201112 09:42:55.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.206" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:55.205" endtime="20201112 09:42:55.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.209" level="INFO">VALUE: [1.8470000000027353e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.848000000002209e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8889999999979756e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8060000000000298e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.207" endtime="20201112 09:42:55.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.203" endtime="20201112 09:42:55.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.216" endtime="20201112 09:42:55.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.220" endtime="20201112 09:42:55.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.218" endtime="20201112 09:42:55.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.214" endtime="20201112 09:42:55.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:54.844" endtime="20201112 09:42:55.240"></status>
</kw>
<msg timestamp="20201112 09:42:55.240" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.248" endtime="20201112 09:42:55.263"></status>
</kw>
<msg timestamp="20201112 09:42:55.264" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.246" endtime="20201112 09:42:55.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.266" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.265" endtime="20201112 09:42:55.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.267" endtime="20201112 09:42:55.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.244" endtime="20201112 09:42:55.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.242" endtime="20201112 09:42:55.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.276" endtime="20201112 09:42:55.566"></status>
</kw>
<msg timestamp="20201112 09:42:55.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017824361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017826222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.275" endtime="20201112 09:42:55.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017824361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017826222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.571" endtime="20201112 09:42:55.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.579" endtime="20201112 09:42:55.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.272" endtime="20201112 09:42:55.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.270" endtime="20201112 09:42:55.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.586" level="INFO">${RESULT} = [{'time': 0.017826222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.017832472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:55.582" endtime="20201112 09:42:55.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.599" level="INFO">${OVERHEAD} = {'source_diff': [1.8609999999988358e-06, 1.7909999999975168e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984...</msg>
<status status="PASS" starttime="20201112 09:42:55.587" endtime="20201112 09:42:55.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.603" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:55.602" endtime="20201112 09:42:55.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.606" level="INFO">VALUE: [1.8609999999988358e-06, 1.7909999999975168e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.9020000000015413e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.848000000002209e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8049999999970867e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.604" endtime="20201112 09:42:55.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.600" endtime="20201112 09:42:55.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.609" endtime="20201112 09:42:55.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.613" endtime="20201112 09:42:55.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.611" endtime="20201112 09:42:55.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.608" endtime="20201112 09:42:55.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.241" endtime="20201112 09:42:55.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.792" endtime="20201112 09:42:55.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.638" endtime="20201112 09:42:55.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.636" endtime="20201112 09:42:55.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.635" endtime="20201112 09:42:55.658"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:47.714" endtime="20201112 09:42:55.659" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.666" endtime="20201112 09:42:55.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.664" endtime="20201112 09:42:55.686"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.699" endtime="20201112 09:42:55.723"></status>
</kw>
<msg timestamp="20201112 09:42:55.723" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.697" endtime="20201112 09:42:55.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.726" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.724" endtime="20201112 09:42:55.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.729" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:55.727" endtime="20201112 09:42:55.729"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:55.694" endtime="20201112 09:42:55.730"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:55.692" endtime="20201112 09:42:55.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.691" endtime="20201112 09:42:55.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:55.734" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:55.733" endtime="20201112 09:42:55.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.731" endtime="20201112 09:42:55.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.690" endtime="20201112 09:42:55.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.689" endtime="20201112 09:42:55.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.736" endtime="20201112 09:42:55.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.688" endtime="20201112 09:42:55.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.686" endtime="20201112 09:42:55.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.663" endtime="20201112 09:42:55.739"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.748" endtime="20201112 09:42:55.770"></status>
</kw>
<msg timestamp="20201112 09:42:55.770" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.746" endtime="20201112 09:42:55.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.773" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.771" endtime="20201112 09:42:55.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.774" endtime="20201112 09:42:55.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.743" endtime="20201112 09:42:55.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.741" endtime="20201112 09:42:55.776"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.778" endtime="20201112 09:42:55.780"></status>
</kw>
<msg timestamp="20201112 09:42:55.780" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:55.777" endtime="20201112 09:42:55.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.784" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:55.783" endtime="20201112 09:42:55.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.786" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:55.785" endtime="20201112 09:42:55.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.781" endtime="20201112 09:42:55.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.791" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:55.790" endtime="20201112 09:42:55.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.793" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:55.792" endtime="20201112 09:42:55.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.788" endtime="20201112 09:42:55.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.800" endtime="20201112 09:42:56.084"></status>
</kw>
<msg timestamp="20201112 09:42:56.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072514514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072547986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.799" endtime="20201112 09:42:56.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072514514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072547986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.088" endtime="20201112 09:42:56.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.097" endtime="20201112 09:42:56.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.796" endtime="20201112 09:42:56.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.794" endtime="20201112 09:42:56.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.103" level="INFO">${RESULT} = [{'time': 0.072547986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347199999999273e-05, 'source_diff': 3.347199999999273e-05}, {'time': 0.072560931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:56.100" endtime="20201112 09:42:56.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.116" level="INFO">${OVERHEAD} = {'source_diff': [3.347199999999273e-05, 7.459000000001326e-06, 7.471999999994483e-06, 7.471999999994483e-06, 7.444999999994817e-06, 7.416999999995677e-06, 7.472000000008361e-06, 7.486000000000992e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:56.104" endtime="20201112 09:42:56.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.121" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:42:56.120" endtime="20201112 09:42:56.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.124" level="INFO">VALUE: [3.347199999999273e-05, 7.459000000001326e-06, 7.471999999994483e-06, 7.471999999994483e-06, 7.444999999994817e-06, 7.416999999995677e-06, 7.472000000008361e-06, 7.486000000000992e-06, 7.459000000001326e-06, 7.472000000008361e-06, 7.459000000001326e-06, 7.499999999993623e-06, 7.458000000001852e-06, 7.458000000001852e-06, 7.375000000003906e-06, 7.444999999994817e-06, 7.402000000003572e-06, 7.499999999993623e-06, 7.472000000008361e-06, 7.458000000001852e-06, 7.387999999997064e-06, 7.472000000008361e-06, 7.4870000000004655e-06, 7.459000000001326e-06, 7.471999999994483e-06, 7.471999999994483e-06, 7.443999999995343e-06, 7.514000000000132e-06, 7.458000000001852e-06, 7.471999999994483e-06, 7.458000000001852e-06, 7.457999999987974e-06, 7.471999999994483e-06, 7.444000000009221e-06, 7.444000000009221e-06, 7.471999999994483e-06, 7.485999999987114e-06, 7.486000000000992e-06, 7.445000000008695e-06, 7.471999999994483e-06, 7.416999999995677e-06, 7.514000000000132e-06, 7.457999999987974e-06, 7.457999999987974e-06, 7.375000000003906e-06, 7.471999999994483e-06, 7.499999999993623e-06, 7.458000000001852e-06, 7.472000000008361e-06, 7.5280000000066405e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.123" endtime="20201112 09:42:56.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.117" endtime="20201112 09:42:56.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.127" endtime="20201112 09:42:56.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.131" endtime="20201112 09:42:56.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.129" endtime="20201112 09:42:56.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.125" endtime="20201112 09:42:56.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.739" endtime="20201112 09:42:56.151"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:55.660" endtime="20201112 09:42:56.152" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.159" endtime="20201112 09:42:56.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.158" endtime="20201112 09:42:56.179"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.193" endtime="20201112 09:42:56.216"></status>
</kw>
<msg timestamp="20201112 09:42:56.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.191" endtime="20201112 09:42:56.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.219" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.218" endtime="20201112 09:42:56.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:56.221" endtime="20201112 09:42:56.223"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:56.188" endtime="20201112 09:42:56.223"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:56.185" endtime="20201112 09:42:56.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.184" endtime="20201112 09:42:56.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:56.228" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:56.227" endtime="20201112 09:42:56.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.225" endtime="20201112 09:42:56.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.183" endtime="20201112 09:42:56.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.183" endtime="20201112 09:42:56.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.230" endtime="20201112 09:42:56.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.181" endtime="20201112 09:42:56.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.180" endtime="20201112 09:42:56.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.156" endtime="20201112 09:42:56.232"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.241" endtime="20201112 09:42:56.298"></status>
</kw>
<msg timestamp="20201112 09:42:56.299" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.240" endtime="20201112 09:42:56.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.301" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.300" endtime="20201112 09:42:56.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.302" endtime="20201112 09:42:56.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.237" endtime="20201112 09:42:56.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.235" endtime="20201112 09:42:56.305"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.307" endtime="20201112 09:42:56.309"></status>
</kw>
<msg timestamp="20201112 09:42:56.309" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:56.306" endtime="20201112 09:42:56.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.313" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:56.312" endtime="20201112 09:42:56.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.315" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:56.314" endtime="20201112 09:42:56.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.310" endtime="20201112 09:42:56.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.320" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:56.319" endtime="20201112 09:42:56.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.322" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:56.321" endtime="20201112 09:42:56.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.317" endtime="20201112 09:42:56.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.330" endtime="20201112 09:42:56.620"></status>
</kw>
<msg timestamp="20201112 09:42:56.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073262542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073288597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.328" endtime="20201112 09:42:56.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073262542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073288597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.624" endtime="20201112 09:42:56.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.632" endtime="20201112 09:42:56.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.325" endtime="20201112 09:42:56.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.323" endtime="20201112 09:42:56.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.639" level="INFO">${RESULT} = [{'time': 0.073288597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6054999999997053e-05, 'source_diff': 2.6054999999997053e-05}, {'time': 0.074043903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:56.635" endtime="20201112 09:42:56.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.654" level="INFO">${OVERHEAD} = {'source_diff': [2.6054999999997053e-05, 2.6249999999991558e-05, 2.6249999999991558e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.6263999999998067e-05, 2.6277999999990...</msg>
<status status="PASS" starttime="20201112 09:42:56.640" endtime="20201112 09:42:56.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.659" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:42:56.658" endtime="20201112 09:42:56.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.661" level="INFO">VALUE: [2.6054999999997053e-05, 2.6249999999991558e-05, 2.6249999999991558e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.6263999999998067e-05, 2.6277999999990698e-05, 2.6222000000006296e-05, 2.6318999999996873e-05, 2.6263999999998067e-05, 2.6290999999997733e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.6263999999998067e-05, 2.6264000000011944e-05, 2.6249999999991558e-05, 2.6235999999998927e-05, 2.62369999999984e-05, 2.6263999999998067e-05, 2.6249999999991558e-05, 2.6263999999998067e-05, 2.6236000000012805e-05, 2.6264000000011944e-05, 2.6249999999991558e-05, 2.6250000000005436e-05, 2.6221999999992418e-05, 2.6263999999998067e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6263999999998067e-05, 2.6249999999991558e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6249999999991558e-05, 2.6221999999992418e-05, 2.631900000001075e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6250000000005436e-05, 2.6221999999992418e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6291999999997206e-05]</msg>
<status status="PASS" starttime="20201112 09:42:56.660" endtime="20201112 09:42:56.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.655" endtime="20201112 09:42:56.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.664" endtime="20201112 09:42:56.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.668" endtime="20201112 09:42:56.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.666" endtime="20201112 09:42:56.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.663" endtime="20201112 09:42:56.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.233" endtime="20201112 09:42:56.688"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:56.154" endtime="20201112 09:42:56.689" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.696" endtime="20201112 09:42:56.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.695" endtime="20201112 09:42:56.716"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.730" endtime="20201112 09:42:56.753"></status>
</kw>
<msg timestamp="20201112 09:42:56.753" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.727" endtime="20201112 09:42:56.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.756" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.754" endtime="20201112 09:42:56.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.759" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:56.757" endtime="20201112 09:42:56.759"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:56.725" endtime="20201112 09:42:56.760"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:56.722" endtime="20201112 09:42:56.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.721" endtime="20201112 09:42:56.761"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:56.764" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:56.764" endtime="20201112 09:42:56.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.762" endtime="20201112 09:42:56.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.720" endtime="20201112 09:42:56.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.720" endtime="20201112 09:42:56.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.766" endtime="20201112 09:42:56.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.718" endtime="20201112 09:42:56.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.717" endtime="20201112 09:42:56.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.693" endtime="20201112 09:42:56.769"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.778" endtime="20201112 09:42:56.931"></status>
</kw>
<msg timestamp="20201112 09:42:56.932" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.776" endtime="20201112 09:42:56.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.934" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.933" endtime="20201112 09:42:56.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.935" endtime="20201112 09:42:56.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.774" endtime="20201112 09:42:56.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.772" endtime="20201112 09:42:56.938"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.940" endtime="20201112 09:42:56.941"></status>
</kw>
<msg timestamp="20201112 09:42:56.942" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:56.938" endtime="20201112 09:42:56.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.946" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:56.945" endtime="20201112 09:42:56.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.948" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:56.947" endtime="20201112 09:42:56.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.943" endtime="20201112 09:42:56.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.952" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:56.951" endtime="20201112 09:42:56.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.954" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:56.953" endtime="20201112 09:42:56.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.949" endtime="20201112 09:42:56.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.962" endtime="20201112 09:42:57.255"></status>
</kw>
<msg timestamp="20201112 09:42:57.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074345139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074394333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.960" endtime="20201112 09:42:57.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074345139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074394333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.259" endtime="20201112 09:42:57.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.267" endtime="20201112 09:42:57.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.958" endtime="20201112 09:42:57.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.956" endtime="20201112 09:42:57.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.274" level="INFO">${RESULT} = [{'time': 0.074394333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.91940000000024e-05, 'source_diff': 4.91940000000024e-05}, {'time': 0.077076903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:57.270" endtime="20201112 09:42:57.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.290" level="INFO">${OVERHEAD} = {'source_diff': [4.91940000000024e-05, 4.906999999999828e-05, 4.906899999999881e-05, 4.906999999999828e-05, 4.909699999999795e-05, 4.905600000000565e-05, 4.908300000000532e-05, 4.908300000000532e-05, ...</msg>
<status status="PASS" starttime="20201112 09:42:57.275" endtime="20201112 09:42:57.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.299" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:42:57.297" endtime="20201112 09:42:57.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.305" level="INFO">VALUE: [4.91940000000024e-05, 4.906999999999828e-05, 4.906899999999881e-05, 4.906999999999828e-05, 4.909699999999795e-05, 4.905600000000565e-05, 4.908300000000532e-05, 4.908300000000532e-05, 4.905500000000618e-05, 4.909699999999795e-05, 4.909699999999795e-05, 4.911100000000446e-05, 4.905599999999177e-05, 4.908299999999144e-05, 4.908399999999091e-05, 4.902799999999263e-05, 4.906999999999828e-05, 4.908299999999144e-05, 4.908300000000532e-05, 4.909799999999742e-05, 4.9069999999984404e-05, 4.9055000000020055e-05, 4.915299999999623e-05, 4.909699999999795e-05, 4.908400000000479e-05, 4.908300000000532e-05, 4.9069000000012686e-05, 4.90549999999923e-05, 4.908400000000479e-05, 4.909799999999742e-05, 4.904199999999914e-05, 4.907000000001216e-05, 4.90549999999923e-05, 4.908300000000532e-05, 4.908400000000479e-05, 4.906899999998493e-05, 4.899999999999349e-05, 4.908400000000479e-05, 4.899999999999349e-05, 4.906899999998493e-05, 4.905599999999177e-05, 4.905600000001953e-05, 4.908300000000532e-05, 4.908400000000479e-05, 4.9069000000012686e-05, 4.9083999999977035e-05, 4.908400000000479e-05, 4.906899999998493e-05, 4.9125000000010965e-05, 4.908300000000532e-05]</msg>
<status status="PASS" starttime="20201112 09:42:57.302" endtime="20201112 09:42:57.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.292" endtime="20201112 09:42:57.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.311" endtime="20201112 09:42:57.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.318" endtime="20201112 09:42:57.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.315" endtime="20201112 09:42:57.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.308" endtime="20201112 09:42:57.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.770" endtime="20201112 09:42:57.342"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:56.691" endtime="20201112 09:42:57.344" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.358" endtime="20201112 09:42:57.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.355" endtime="20201112 09:42:57.381"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.399" endtime="20201112 09:42:57.421"></status>
</kw>
<msg timestamp="20201112 09:42:57.421" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.397" endtime="20201112 09:42:57.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.424" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.422" endtime="20201112 09:42:57.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.427" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:57.425" endtime="20201112 09:42:57.427"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.394" endtime="20201112 09:42:57.428"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.392" endtime="20201112 09:42:57.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.391" endtime="20201112 09:42:57.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:57.432" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:57.431" endtime="20201112 09:42:57.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.429" endtime="20201112 09:42:57.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.390" endtime="20201112 09:42:57.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.389" endtime="20201112 09:42:57.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.434" endtime="20201112 09:42:57.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.386" endtime="20201112 09:42:57.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.382" endtime="20201112 09:42:57.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.352" endtime="20201112 09:42:57.437"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.446" endtime="20201112 09:42:57.469"></status>
</kw>
<msg timestamp="20201112 09:42:57.469" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.444" endtime="20201112 09:42:57.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.472" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.470" endtime="20201112 09:42:57.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.473" endtime="20201112 09:42:57.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.442" endtime="20201112 09:42:57.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.440" endtime="20201112 09:42:57.475"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.477" endtime="20201112 09:42:57.479"></status>
</kw>
<msg timestamp="20201112 09:42:57.479" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:57.476" endtime="20201112 09:42:57.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.483" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:57.482" endtime="20201112 09:42:57.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.485" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:57.484" endtime="20201112 09:42:57.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.480" endtime="20201112 09:42:57.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.490" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:57.489" endtime="20201112 09:42:57.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.492" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:57.491" endtime="20201112 09:42:57.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.487" endtime="20201112 09:42:57.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.499" endtime="20201112 09:42:57.785"></status>
</kw>
<msg timestamp="20201112 09:42:57.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077413194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077414319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.498" endtime="20201112 09:42:57.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077413194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077414319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.789" endtime="20201112 09:42:57.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.798" endtime="20201112 09:42:57.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.495" endtime="20201112 09:42:57.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.493" endtime="20201112 09:42:57.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.805" level="INFO">${RESULT} = [{'time': 0.077414319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999907168e-06, 'source_diff': 1.1249999999907168e-06}, {'time': 0.077425722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:57.801" endtime="20201112 09:42:57.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.818" level="INFO">${OVERHEAD} = {'source_diff': [1.1249999999907168e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.0559999999992797e-06, 1.1390000000111034e-06, 1.1250000000045945e-06, 1.082999999998946e-06, 1.11099999999808...</msg>
<status status="PASS" starttime="20201112 09:42:57.806" endtime="20201112 09:42:57.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.823" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:42:57.822" endtime="20201112 09:42:57.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.825" level="INFO">VALUE: [1.1249999999907168e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.0559999999992797e-06, 1.1390000000111034e-06, 1.1250000000045945e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.1250000000045945e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1670000000102432e-06, 1.1250000000045945e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.054999999999806e-06, 1.1389999999972256e-06, 1.1249999999907168e-06, 1.1390000000111034e-06, 1.0970000000054547e-06, 1.1250000000045945e-06, 1.1530000000037344e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1529999999898566e-06, 1.1810000000028742e-06, 1.1109999999980857e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1389999999972256e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1249999999907168e-06, 1.1250000000045945e-06, 1.1939999999960316e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.824" endtime="20201112 09:42:57.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.819" endtime="20201112 09:42:57.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.828" endtime="20201112 09:42:57.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.831" endtime="20201112 09:42:57.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.830" endtime="20201112 09:42:57.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.826" endtime="20201112 09:42:57.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.438" endtime="20201112 09:42:57.852"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:57.347" endtime="20201112 09:42:57.853" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.860" endtime="20201112 09:42:57.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.859" endtime="20201112 09:42:57.880"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.894" endtime="20201112 09:42:57.917"></status>
</kw>
<msg timestamp="20201112 09:42:57.917" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.892" endtime="20201112 09:42:57.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.918" endtime="20201112 09:42:57.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.923" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:57.921" endtime="20201112 09:42:57.923"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.889" endtime="20201112 09:42:57.924"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:57.886" endtime="20201112 09:42:57.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.885" endtime="20201112 09:42:57.925"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:57.929" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:57.928" endtime="20201112 09:42:57.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.926" endtime="20201112 09:42:57.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.884" endtime="20201112 09:42:57.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.884" endtime="20201112 09:42:57.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.930" endtime="20201112 09:42:57.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.882" endtime="20201112 09:42:57.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.881" endtime="20201112 09:42:57.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.857" endtime="20201112 09:42:57.933"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.942" endtime="20201112 09:42:58.000"></status>
</kw>
<msg timestamp="20201112 09:42:58.000" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.940" endtime="20201112 09:42:58.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.003" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.001" endtime="20201112 09:42:58.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.004" endtime="20201112 09:42:58.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.938" endtime="20201112 09:42:58.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.936" endtime="20201112 09:42:58.007"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.009" endtime="20201112 09:42:58.010"></status>
</kw>
<msg timestamp="20201112 09:42:58.011" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:58.007" endtime="20201112 09:42:58.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.015" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:58.014" endtime="20201112 09:42:58.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.017" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:58.016" endtime="20201112 09:42:58.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.011" endtime="20201112 09:42:58.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.021" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:58.020" endtime="20201112 09:42:58.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.023" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:58.023" endtime="20201112 09:42:58.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.018" endtime="20201112 09:42:58.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.032" endtime="20201112 09:42:58.322"></status>
</kw>
<msg timestamp="20201112 09:42:58.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073018847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073027278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.029" endtime="20201112 09:42:58.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073018847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073027278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.326" endtime="20201112 09:42:58.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.334" endtime="20201112 09:42:58.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.027" endtime="20201112 09:42:58.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.025" endtime="20201112 09:42:58.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.341" level="INFO">${RESULT} = [{'time': 0.073027278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.431000000003186e-06, 'source_diff': 8.431000000003186e-06}, {'time': 0.073788569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:58.338" endtime="20201112 09:42:58.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.357" level="INFO">${OVERHEAD} = {'source_diff': [8.431000000003186e-06, 8.499999999994623e-06, 8.472999999994957e-06, 8.472000000009361e-06, 8.471999999995483e-06, 8.499999999994623e-06, 8.471999999995483e-06, 8.486000000001992e-06,...</msg>
<status status="PASS" starttime="20201112 09:42:58.342" endtime="20201112 09:42:58.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.361" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:42:58.360" endtime="20201112 09:42:58.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.364" level="INFO">VALUE: [8.431000000003186e-06, 8.499999999994623e-06, 8.472999999994957e-06, 8.472000000009361e-06, 8.471999999995483e-06, 8.499999999994623e-06, 8.471999999995483e-06, 8.486000000001992e-06, 8.485999999988114e-06, 8.459000000002326e-06, 8.444999999995817e-06, 8.486000000001992e-06, 8.485999999988114e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.443999999996343e-06, 8.499999999994623e-06, 8.486000000001992e-06, 8.473000000008835e-06, 8.459000000002326e-06, 8.499999999994623e-06, 8.458000000002852e-06, 8.472000000009361e-06, 8.499999999994623e-06, 8.514000000001132e-06, 8.487000000001466e-06, 8.486000000001992e-06, 8.472999999994957e-06, 8.472999999994957e-06, 8.471999999995483e-06, 8.499999999994623e-06, 8.486000000001992e-06, 8.471999999995483e-06, 8.485999999988114e-06, 8.52800000000764e-06, 8.444999999995817e-06, 8.458000000002852e-06, 8.459000000002326e-06, 8.499999999994623e-06, 8.458000000002852e-06, 8.472000000009361e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.429999999989835e-06, 8.458000000002852e-06, 8.471999999995483e-06, 8.486000000001992e-06, 8.486000000001992e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.362" endtime="20201112 09:42:58.364"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.357" endtime="20201112 09:42:58.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.367" endtime="20201112 09:42:58.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.370" endtime="20201112 09:42:58.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.369" endtime="20201112 09:42:58.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.365" endtime="20201112 09:42:58.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.934" endtime="20201112 09:42:58.391"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:57.854" endtime="20201112 09:42:58.391" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.399" endtime="20201112 09:42:58.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.397" endtime="20201112 09:42:58.419"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.432" endtime="20201112 09:42:58.455"></status>
</kw>
<msg timestamp="20201112 09:42:58.456" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.430" endtime="20201112 09:42:58.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.458" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.457" endtime="20201112 09:42:58.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.462" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:58.460" endtime="20201112 09:42:58.462"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.427" endtime="20201112 09:42:58.463"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:58.425" endtime="20201112 09:42:58.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.424" endtime="20201112 09:42:58.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:58.467" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:58.467" endtime="20201112 09:42:58.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.464" endtime="20201112 09:42:58.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.423" endtime="20201112 09:42:58.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.422" endtime="20201112 09:42:58.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.469" endtime="20201112 09:42:58.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.421" endtime="20201112 09:42:58.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.419" endtime="20201112 09:42:58.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.396" endtime="20201112 09:42:58.472"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.480" endtime="20201112 09:42:58.635"></status>
</kw>
<msg timestamp="20201112 09:42:58.635" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.479" endtime="20201112 09:42:58.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.638" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.636" endtime="20201112 09:42:58.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.639" endtime="20201112 09:42:58.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.476" endtime="20201112 09:42:58.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.474" endtime="20201112 09:42:58.641"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.644" endtime="20201112 09:42:58.645"></status>
</kw>
<msg timestamp="20201112 09:42:58.646" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:42:58.642" endtime="20201112 09:42:58.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.650" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:42:58.649" endtime="20201112 09:42:58.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.652" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:42:58.651" endtime="20201112 09:42:58.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.646" endtime="20201112 09:42:58.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.656" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:42:58.655" endtime="20201112 09:42:58.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.658" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:42:58.657" endtime="20201112 09:42:58.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.653" endtime="20201112 09:42:58.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.665" endtime="20201112 09:42:58.972"></status>
</kw>
<msg timestamp="20201112 09:42:58.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074691153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074707181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.664" endtime="20201112 09:42:58.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074691153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074707181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.976" endtime="20201112 09:42:58.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.984" endtime="20201112 09:42:58.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.661" endtime="20201112 09:42:58.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.660" endtime="20201112 09:42:58.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.991" level="INFO">${RESULT} = [{'time': 0.074707181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6028000000001263e-05, 'source_diff': 1.6028000000001263e-05}, {'time': 0.077406958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:58.988" endtime="20201112 09:42:58.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.004" level="INFO">${OVERHEAD} = {'source_diff': [1.6028000000001263e-05, 1.5972000000002984e-05, 1.5973000000002457e-05, 1.598699999999509e-05, 1.5972000000002984e-05, 1.602700000000179e-05, 1.5985999999995615e-05, 1.597200000000298...</msg>
<status status="PASS" starttime="20201112 09:42:58.992" endtime="20201112 09:42:59.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.009" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:42:59.008" endtime="20201112 09:42:59.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.011" level="INFO">VALUE: [1.6028000000001263e-05, 1.5972000000002984e-05, 1.5973000000002457e-05, 1.598699999999509e-05, 1.5972000000002984e-05, 1.602700000000179e-05, 1.5985999999995615e-05, 1.5972000000002984e-05, 1.5986000000009493e-05, 1.5973000000002457e-05, 1.6000000000002124e-05, 1.5971999999989106e-05, 1.5985999999995615e-05, 1.5971999999989106e-05, 1.594499999998944e-05, 1.598699999999509e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.5999999999988246e-05, 1.598600000002337e-05, 1.5971999999975228e-05, 1.5971999999975228e-05, 1.5999999999988246e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.598699999999509e-05, 1.5999999999988246e-05, 1.5999999999988246e-05, 1.601300000000916e-05, 1.598600000002337e-05, 1.5985999999995615e-05, 1.5971999999975228e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.591599999997695e-05, 1.5985999999995615e-05, 1.5973000000002457e-05, 1.5973000000002457e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5971999999975228e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.5999999999988246e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5973000000002457e-05, 1.5987000000022844e-05, 1.5958000000010353e-05]</msg>
<status status="PASS" starttime="20201112 09:42:59.010" endtime="20201112 09:42:59.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.005" endtime="20201112 09:42:59.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.014" endtime="20201112 09:42:59.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.018" endtime="20201112 09:42:59.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.016" endtime="20201112 09:42:59.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.013" endtime="20201112 09:42:59.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.472" endtime="20201112 09:42:59.038"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:58.393" endtime="20201112 09:42:59.039" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:38.475" endtime="20201112 09:42:59.047"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.113" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:59.121" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:43:00.149" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:59.112" endtime="20201112 09:43:00.149"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.152" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:43:00.150" endtime="20201112 09:43:00.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.111" endtime="20201112 09:43:00.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.155" endtime="20201112 09:43:00.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.153" endtime="20201112 09:43:00.339"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.357" endtime="20201112 09:43:00.382"></status>
</kw>
<msg timestamp="20201112 09:43:00.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.355" endtime="20201112 09:43:00.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.385" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.383" endtime="20201112 09:43:00.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.388" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:00.386" endtime="20201112 09:43:00.388"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:00.353" endtime="20201112 09:43:00.389"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:00.351" endtime="20201112 09:43:00.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.350" endtime="20201112 09:43:00.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:00.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:00.393" endtime="20201112 09:43:00.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.391" endtime="20201112 09:43:00.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.349" endtime="20201112 09:43:00.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.348" endtime="20201112 09:43:00.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.396" endtime="20201112 09:43:00.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.341" endtime="20201112 09:43:00.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.399" endtime="20201112 09:43:00.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.340" endtime="20201112 09:43:00.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.109" endtime="20201112 09:43:00.402"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.407" endtime="20201112 09:43:00.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.406" endtime="20201112 09:43:00.430"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.456" endtime="20201112 09:43:00.484"></status>
</kw>
<msg timestamp="20201112 09:43:00.485" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.453" endtime="20201112 09:43:00.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.490" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.487" endtime="20201112 09:43:00.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.496" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:00.493" endtime="20201112 09:43:00.498"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:00.447" endtime="20201112 09:43:00.499"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:00.443" endtime="20201112 09:43:00.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.440" endtime="20201112 09:43:00.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:00.509" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:00.507" endtime="20201112 09:43:00.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.503" endtime="20201112 09:43:00.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.438" endtime="20201112 09:43:00.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.437" endtime="20201112 09:43:00.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.512" endtime="20201112 09:43:00.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.434" endtime="20201112 09:43:00.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.431" endtime="20201112 09:43:00.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.405" endtime="20201112 09:43:00.518"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.530" endtime="20201112 09:43:00.546"></status>
</kw>
<msg timestamp="20201112 09:43:00.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.528" endtime="20201112 09:43:00.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.548" endtime="20201112 09:43:00.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.550" endtime="20201112 09:43:00.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.525" endtime="20201112 09:43:00.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.523" endtime="20201112 09:43:00.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.559" endtime="20201112 09:43:00.854"></status>
</kw>
<msg timestamp="20201112 09:43:00.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.112820681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.558" endtime="20201112 09:43:00.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.112787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.112820681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.858" endtime="20201112 09:43:00.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.866" endtime="20201112 09:43:00.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.555" endtime="20201112 09:43:00.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.553" endtime="20201112 09:43:00.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.873" level="INFO">${RESULT} = [{'time': 0.112820681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.282000000000285e-05, 'source_diff': 3.282000000000285e-05}, {'time': 0.112833222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:00.869" endtime="20201112 09:43:00.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:00.886" level="INFO">${ACCURACY} = {'source_diff': [3.282000000000285e-05, 2.7499999999958114e-06, 2.76400000000232e-06, 2.26400000000182e-06, 2.319000000000626e-06, 3.3049999999951174e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2...</msg>
<status status="PASS" starttime="20201112 09:43:00.874" endtime="20201112 09:43:00.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.891" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:00.889" endtime="20201112 09:43:00.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.893" level="INFO">VALUE: [3.282000000000285e-05, 2.7499999999958114e-06, 2.76400000000232e-06, 2.26400000000182e-06, 2.319000000000626e-06, 3.3049999999951174e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.8049999999946174e-06, 2.76400000000232e-06, 2.26400000000182e-06, 2.777999999994951e-06, 2.2629999999884687e-06, 2.7499999999958114e-06, 2.26400000000182e-06, 2.76400000000232e-06, 2.7499999999958114e-06, 2.3060000000074687e-06, 2.76400000000232e-06, 2.778000000008829e-06, 3.2909999999886086e-06, 2.7639999999884424e-06, 2.7639999999884424e-06, 3.2499999999963114e-06, 3.2219999999971716e-06, 3.26400000000282e-06, 2.2499999999953113e-06, 3.2499999999963114e-06, 2.76400000000232e-06, 2.7639999999884424e-06, 2.7499999999958114e-06, 2.7639999999884424e-06, 2.26400000000182e-06, 2.737000000002654e-06, 3.26400000000282e-06, 2.278000000008329e-06, 2.26400000000182e-06, 2.250000000009189e-06, 2.26400000000182e-06, 3.2220000000110494e-06, 2.250000000009189e-06, 2.26400000000182e-06, 2.7360000000031803e-06, 2.7360000000031803e-06, 3.2499999999963114e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.76400000000232e-06, 2.26400000000182e-06, 2.76400000000232e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.892" endtime="20201112 09:43:00.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.887" endtime="20201112 09:43:00.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.897" endtime="20201112 09:43:00.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.900" endtime="20201112 09:43:00.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.898" endtime="20201112 09:43:00.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.895" endtime="20201112 09:43:00.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.521" endtime="20201112 09:43:00.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.520" endtime="20201112 09:43:00.921"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.929" endtime="20201112 09:43:00.948"></status>
</kw>
<msg timestamp="20201112 09:43:00.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.928" endtime="20201112 09:43:00.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.949" endtime="20201112 09:43:00.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.952" endtime="20201112 09:43:00.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.925" endtime="20201112 09:43:00.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.923" endtime="20201112 09:43:00.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.961" endtime="20201112 09:43:01.248"></status>
</kw>
<msg timestamp="20201112 09:43:01.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020316931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.959" endtime="20201112 09:43:01.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020316931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.252" endtime="20201112 09:43:01.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.261" endtime="20201112 09:43:01.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.956" endtime="20201112 09:43:01.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.955" endtime="20201112 09:43:01.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.267" level="INFO">${RESULT} = [{'time': 0.020320694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.763000000000377e-06, 'source_diff': 3.763000000000377e-06}, {'time': 0.020330194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:01.264" endtime="20201112 09:43:01.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:01.282" level="INFO">${ACCURACY} = {'source_diff': [3.763000000000377e-06, 4.277000000000447e-06, 3.763999999999851e-06, 3.763000000000377e-06, 3.818999999998657e-06, 3.750000000000281e-06, 3.2639999999993508e-06, 3.249999999999781e-06...</msg>
<status status="PASS" starttime="20201112 09:43:01.268" endtime="20201112 09:43:01.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.286" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:01.285" endtime="20201112 09:43:01.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.289" level="INFO">VALUE: [3.763000000000377e-06, 4.277000000000447e-06, 3.763999999999851e-06, 3.763000000000377e-06, 3.818999999998657e-06, 3.750000000000281e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.262999999999877e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.249999999999781e-06, 3.2639999999993508e-06, 3.763000000000377e-06, 3.2639999999993508e-06, 3.27800000000239e-06, 3.26400000000282e-06, 3.7919999999989906e-06, 3.262999999999877e-06, 3.763999999999851e-06, 3.2639999999993508e-06, 3.7919999999989906e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 3.763999999999851e-06, 3.249999999999781e-06, 3.750000000000281e-06, 3.763999999999851e-06, 3.2779999999989207e-06, 3.763999999999851e-06, 3.236000000000211e-06, 3.763000000000377e-06, 3.2639999999993508e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.763999999999851e-06, 4.277000000000447e-06, 3.750000000000281e-06, 3.7779999999994207e-06, 3.750000000000281e-06, 3.2639999999993508e-06, 3.26400000000282e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.262999999999877e-06, 3.763999999999851e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.2230000000001147e-06, 3.2639999999993508e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.287" endtime="20201112 09:43:01.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.283" endtime="20201112 09:43:01.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.292" endtime="20201112 09:43:01.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.295" endtime="20201112 09:43:01.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.294" endtime="20201112 09:43:01.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.290" endtime="20201112 09:43:01.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.922" endtime="20201112 09:43:01.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.921" endtime="20201112 09:43:01.316"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.324" endtime="20201112 09:43:01.341"></status>
</kw>
<msg timestamp="20201112 09:43:01.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.323" endtime="20201112 09:43:01.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.342" endtime="20201112 09:43:01.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.345" endtime="20201112 09:43:01.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.320" endtime="20201112 09:43:01.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.318" endtime="20201112 09:43:01.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.354" endtime="20201112 09:43:01.643"></status>
</kw>
<msg timestamp="20201112 09:43:01.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.353" endtime="20201112 09:43:01.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019367347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.647" endtime="20201112 09:43:01.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.655" endtime="20201112 09:43:01.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.350" endtime="20201112 09:43:01.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.349" endtime="20201112 09:43:01.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.663" level="INFO">${RESULT} = [{'time': 0.019372111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.019382417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:01.659" endtime="20201112 09:43:01.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:01.676" level="INFO">${ACCURACY} = {'source_diff': [4.764000000000851e-06, 5.277999999997451e-06, 4.777000000000947e-06, 4.778000000000421e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.7639999999973814e-06, 4.764000000000851e-06...</msg>
<status status="PASS" starttime="20201112 09:43:01.664" endtime="20201112 09:43:01.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.681" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:01.680" endtime="20201112 09:43:01.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.684" level="INFO">VALUE: [4.764000000000851e-06, 5.277999999997451e-06, 4.777000000000947e-06, 4.778000000000421e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.7639999999973814e-06, 4.764000000000851e-06, 4.7639999999973814e-06, 4.847000000002266e-06, 4.764000000000851e-06, 4.7639999999973814e-06, 4.250000000000781e-06, 4.7639999999973814e-06, 4.750000000001281e-06, 4.721999999998672e-06, 4.7639999999973814e-06, 4.221999999998172e-06, 4.250000000000781e-06, 4.7639999999973814e-06, 4.805000000000087e-06, 4.264000000000351e-06, 4.264000000000351e-06, 5.2499999999983116e-06, 4.277999999999921e-06, 4.764000000000851e-06, 4.707999999999102e-06, 4.7639999999973814e-06, 4.2499999999973115e-06, 4.236000000001211e-06, 4.277999999999921e-06, 4.264000000000351e-06, 4.277999999999921e-06, 4.764000000000851e-06, 4.263999999996881e-06, 4.750000000001281e-06, 4.264000000000351e-06, 4.7499999999978115e-06, 4.735999999998242e-06, 4.7499999999978115e-06, 4.277999999999921e-06, 4.263000000000877e-06, 4.84799999999827e-06, 4.2359999999977416e-06, 4.7639999999973814e-06, 4.7639999999973814e-06, 4.764000000000851e-06, 4.264000000000351e-06, 4.778000000000421e-06, 4.250000000000781e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.682" endtime="20201112 09:43:01.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.677" endtime="20201112 09:43:01.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.687" endtime="20201112 09:43:01.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.690" endtime="20201112 09:43:01.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.689" endtime="20201112 09:43:01.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.685" endtime="20201112 09:43:01.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.317" endtime="20201112 09:43:01.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.316" endtime="20201112 09:43:01.711"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.720" endtime="20201112 09:43:01.737"></status>
</kw>
<msg timestamp="20201112 09:43:01.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.718" endtime="20201112 09:43:01.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.738" endtime="20201112 09:43:01.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.741" endtime="20201112 09:43:01.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.716" endtime="20201112 09:43:01.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.714" endtime="20201112 09:43:01.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.751" endtime="20201112 09:43:02.054"></status>
</kw>
<msg timestamp="20201112 09:43:02.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.749" endtime="20201112 09:43:02.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019497958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019503222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.058" endtime="20201112 09:43:02.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.067" endtime="20201112 09:43:02.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.747" endtime="20201112 09:43:02.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.745" endtime="20201112 09:43:02.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.074" level="INFO">${RESULT} = [{'time': 0.019503222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.264000000001351e-06, 'source_diff': 5.264000000001351e-06}, {'time': 0.019513319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.070" endtime="20201112 09:43:02.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:02.087" level="INFO">${ACCURACY} = {'source_diff': [5.264000000001351e-06, 5.763000000002377e-06, 5.7639999999983815e-06, 5.764000000001851e-06, 5.2639999999978815e-06, 5.749999999998812e-06, 5.806000000000561e-06, 5.694000000000532e-0...</msg>
<status status="PASS" starttime="20201112 09:43:02.075" endtime="20201112 09:43:02.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.092" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:02.091" endtime="20201112 09:43:02.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.094" level="INFO">VALUE: [5.264000000001351e-06, 5.763000000002377e-06, 5.7639999999983815e-06, 5.764000000001851e-06, 5.2639999999978815e-06, 5.749999999998812e-06, 5.806000000000561e-06, 5.694000000000532e-06, 5.778000000001421e-06, 5.763000000002377e-06, 5.7779999999979514e-06, 5.2499999999983116e-06, 5.764000000001851e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.777000000001947e-06, 5.2639999999978815e-06, 5.776999999998478e-06, 5.7639999999983815e-06, 6.222000000000172e-06, 5.763000000002377e-06, 5.7639999999983815e-06, 5.278000000000921e-06, 5.2499999999983116e-06, 5.778000000001421e-06, 5.776999999998478e-06, 5.319000000000157e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.2639999999978815e-06, 5.250000000001781e-06, 5.264000000001351e-06, 5.778000000001421e-06, 5.750000000002281e-06, 6.235999999999742e-06, 5.749999999998812e-06, 5.264000000001351e-06, 5.264000000001351e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.2499999999983116e-06, 5.278000000000921e-06, 5.264000000001351e-06, 5.278000000000921e-06, 5.7639999999983815e-06, 5.264000000001351e-06, 5.250000000001781e-06, 5.764000000001851e-06, 5.263000000001877e-06, 5.264000000001351e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.093" endtime="20201112 09:43:02.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.088" endtime="20201112 09:43:02.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.097" endtime="20201112 09:43:02.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.100" endtime="20201112 09:43:02.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.099" endtime="20201112 09:43:02.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.095" endtime="20201112 09:43:02.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.712" endtime="20201112 09:43:02.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.711" endtime="20201112 09:43:02.121"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.130" endtime="20201112 09:43:02.147"></status>
</kw>
<msg timestamp="20201112 09:43:02.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.128" endtime="20201112 09:43:02.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.149" endtime="20201112 09:43:02.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.151" endtime="20201112 09:43:02.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.126" endtime="20201112 09:43:02.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.124" endtime="20201112 09:43:02.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.162" endtime="20201112 09:43:02.449"></status>
</kw>
<msg timestamp="20201112 09:43:02.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.160" endtime="20201112 09:43:02.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.453" endtime="20201112 09:43:02.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.462" endtime="20201112 09:43:02.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.157" endtime="20201112 09:43:02.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.155" endtime="20201112 09:43:02.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.468" level="INFO">${RESULT} = [{'time': 0.019514194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.262999999999408e-06, 'source_diff': 6.262999999999408e-06}, {'time': 0.019524306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.465" endtime="20201112 09:43:02.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:02.481" level="INFO">${ACCURACY} = {'source_diff': [6.262999999999408e-06, 6.778000000002421e-06, 6.764000000002851e-06, 6.194000000001032e-06, 6.763999999999382e-06, 7.263999999999882e-06, 6.693999999998063e-06, 6.2779999999984515e-06...</msg>
<status status="PASS" starttime="20201112 09:43:02.469" endtime="20201112 09:43:02.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.486" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:02.485" endtime="20201112 09:43:02.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.488" level="INFO">VALUE: [6.262999999999408e-06, 6.778000000002421e-06, 6.764000000002851e-06, 6.194000000001032e-06, 6.763999999999382e-06, 7.263999999999882e-06, 6.693999999998063e-06, 6.2779999999984515e-06, 6.2090000000000756e-06, 6.7779999999989515e-06, 6.2639999999988816e-06, 6.776999999999478e-06, 6.805999999998091e-06, 6.776999999999478e-06, 6.264000000002351e-06, 6.250000000002781e-06, 6.2779999999984515e-06, 6.208000000000602e-06, 6.762999999999908e-06, 6.2639999999988816e-06, 7.263999999999882e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.250000000002781e-06, 6.749999999999812e-06, 6.291999999998021e-06, 6.222000000000172e-06, 6.735999999996772e-06, 6.792000000001991e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.249999999999312e-06, 6.764000000002851e-06, 6.7779999999989515e-06, 6.762999999999908e-06, 6.763999999999382e-06, 6.7079999999976325e-06, 6.320000000000631e-06, 6.2639999999988816e-06, 6.235999999999742e-06, 6.2779999999984515e-06, 6.763999999999382e-06, 6.763999999999382e-06, 6.2639999999988816e-06, 6.763999999999382e-06, 7.250000000000312e-06, 6.7779999999989515e-06, 6.2639999999988816e-06, 6.7779999999989515e-06, 6.2639999999988816e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.487" endtime="20201112 09:43:02.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.482" endtime="20201112 09:43:02.489"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.491" endtime="20201112 09:43:02.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.495" endtime="20201112 09:43:02.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.493" endtime="20201112 09:43:02.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.490" endtime="20201112 09:43:02.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.122" endtime="20201112 09:43:02.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.122" endtime="20201112 09:43:02.516"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.526" endtime="20201112 09:43:02.542"></status>
</kw>
<msg timestamp="20201112 09:43:02.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.525" endtime="20201112 09:43:02.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.543" endtime="20201112 09:43:02.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.546" endtime="20201112 09:43:02.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.522" endtime="20201112 09:43:02.549"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.520" endtime="20201112 09:43:02.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.556" endtime="20201112 09:43:02.860"></status>
</kw>
<msg timestamp="20201112 09:43:02.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021392583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021400319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.555" endtime="20201112 09:43:02.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021392583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021400319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.864" endtime="20201112 09:43:02.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.872" endtime="20201112 09:43:02.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.552" endtime="20201112 09:43:02.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.550" endtime="20201112 09:43:02.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.879" level="INFO">${RESULT} = [{'time': 0.021400319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.021411417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.876" endtime="20201112 09:43:02.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:02.894" level="INFO">${ACCURACY} = {'source_diff': [7.736000000001242e-06, 8.263999999997412e-06, 7.263999999999882e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.305999999998591e-06, 7.332999999998258e-06,...</msg>
<status status="PASS" starttime="20201112 09:43:02.880" endtime="20201112 09:43:02.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.898" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:02.897" endtime="20201112 09:43:02.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.901" level="INFO">VALUE: [7.736000000001242e-06, 8.263999999997412e-06, 7.263999999999882e-06, 7.263000000000408e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.305999999998591e-06, 7.332999999998258e-06, 7.263000000000408e-06, 7.764000000000382e-06, 7.737000000000716e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.708000000002102e-06, 7.777999999999952e-06, 8.250000000001312e-06, 7.278000000002921e-06, 7.777999999999952e-06, 7.276999999999978e-06, 7.777999999999952e-06, 7.263999999999882e-06, 7.736000000001242e-06, 7.764000000000382e-06, 7.195000000001506e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.777000000000478e-06, 7.2219999999977025e-06, 7.263999999999882e-06, 7.750000000000812e-06, 7.763999999996912e-06, 7.693999999999063e-06, 7.709000000001576e-06, 8.278000000000452e-06, 7.764000000000382e-06, 7.250000000000312e-06, 7.764000000000382e-06, 7.263999999999882e-06, 7.250000000000312e-06, 7.777999999999952e-06, 7.777999999999952e-06, 7.333999999997731e-06, 7.263999999999882e-06, 7.735999999997772e-06, 8.235999999998272e-06, 8.263999999997412e-06, 7.707999999998633e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.899" endtime="20201112 09:43:02.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.895" endtime="20201112 09:43:02.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.904" endtime="20201112 09:43:02.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.907" endtime="20201112 09:43:02.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.906" endtime="20201112 09:43:02.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.902" endtime="20201112 09:43:02.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.517" endtime="20201112 09:43:02.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.516" endtime="20201112 09:43:02.928"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.937" endtime="20201112 09:43:02.954"></status>
</kw>
<msg timestamp="20201112 09:43:02.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.935" endtime="20201112 09:43:02.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.956" endtime="20201112 09:43:02.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.959" endtime="20201112 09:43:02.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.933" endtime="20201112 09:43:02.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.931" endtime="20201112 09:43:02.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.969" endtime="20201112 09:43:03.254"></status>
</kw>
<msg timestamp="20201112 09:43:03.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019622889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.967" endtime="20201112 09:43:03.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019622889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.258" endtime="20201112 09:43:03.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.266" endtime="20201112 09:43:03.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.965" endtime="20201112 09:43:03.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.963" endtime="20201112 09:43:03.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.273" level="INFO">${RESULT} = [{'time': 0.019622889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.019637917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.270" endtime="20201112 09:43:03.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:03.286" level="INFO">${ACCURACY} = {'source_diff': [8.792000000000522e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.193999999999563e-06, 8.778000000000952e-06, 8.777999999997482e-06,...</msg>
<status status="PASS" starttime="20201112 09:43:03.274" endtime="20201112 09:43:03.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.291" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:03.290" endtime="20201112 09:43:03.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.293" level="INFO">VALUE: [8.792000000000522e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.764000000001382e-06, 8.735999999998773e-06, 8.193999999999563e-06, 8.778000000000952e-06, 8.777999999997482e-06, 8.735999999998773e-06, 8.179999999999993e-06, 8.764000000001382e-06, 8.278000000000452e-06, 9.263999999998412e-06, 8.749999999998342e-06, 8.792000000000522e-06, 8.749999999998342e-06, 8.264000000000882e-06, 8.763999999997912e-06, 8.263999999997412e-06, 8.778000000000952e-06, 8.763000000001908e-06, 8.264000000000882e-06, 8.250000000001312e-06, 8.278000000000452e-06, 8.749999999998342e-06, 8.709000000002576e-06, 8.263999999997412e-06, 8.763999999997912e-06, 8.292000000000022e-06, 8.264000000000882e-06, 8.694999999999536e-06, 8.750000000001812e-06, 8.791000000001048e-06, 8.264000000000882e-06, 8.750000000001812e-06, 8.277999999996982e-06, 8.263000000001408e-06, 8.235999999998272e-06, 8.806000000000092e-06, 8.264000000000882e-06, 8.749999999998342e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.750000000001812e-06, 8.250000000001312e-06, 8.249999999997842e-06, 8.763999999997912e-06, 9.264000000001882e-06, 8.264000000000882e-06, 8.776999999998009e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.292" endtime="20201112 09:43:03.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.287" endtime="20201112 09:43:03.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.296" endtime="20201112 09:43:03.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.300" endtime="20201112 09:43:03.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.298" endtime="20201112 09:43:03.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.295" endtime="20201112 09:43:03.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.929" endtime="20201112 09:43:03.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.928" endtime="20201112 09:43:03.321"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.330" endtime="20201112 09:43:03.347"></status>
</kw>
<msg timestamp="20201112 09:43:03.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.328" endtime="20201112 09:43:03.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.348" endtime="20201112 09:43:03.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.351" endtime="20201112 09:43:03.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.325" endtime="20201112 09:43:03.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.323" endtime="20201112 09:43:03.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.361" endtime="20201112 09:43:03.648"></status>
</kw>
<msg timestamp="20201112 09:43:03.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020125847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.359" endtime="20201112 09:43:03.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020116597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020125847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.652" endtime="20201112 09:43:03.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.660" endtime="20201112 09:43:03.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.357" endtime="20201112 09:43:03.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.355" endtime="20201112 09:43:03.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.667" level="INFO">${RESULT} = [{'time': 0.020125847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.020139472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.664" endtime="20201112 09:43:03.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:03.680" level="INFO">${ACCURACY} = {'source_diff': [9.249999999998842e-06, 9.777999999998482e-06, 1.0263999999999412e-05, 9.221999999999703e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.722999999999676e-06, 1.0262999999999939e-0...</msg>
<status status="PASS" starttime="20201112 09:43:03.668" endtime="20201112 09:43:03.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.685" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:03.684" endtime="20201112 09:43:03.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.687" level="INFO">VALUE: [9.249999999998842e-06, 9.777999999998482e-06, 1.0263999999999412e-05, 9.221999999999703e-06, 9.263999999998412e-06, 9.263999999998412e-06, 9.722999999999676e-06, 1.0262999999999939e-05, 9.764000000002382e-06, 9.763999999998912e-06, 9.736999999999246e-06, 9.750000000002812e-06, 9.333000000000258e-06, 9.763999999998912e-06, 9.249999999998842e-06, 9.250000000002312e-06, 1.0223000000000176e-05, 9.749999999999343e-06, 9.764000000002382e-06, 9.263999999998412e-06, 9.276999999998509e-06, 9.763999999998912e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.249999999998842e-06, 9.764000000002382e-06, 9.777999999998482e-06, 9.763999999998912e-06, 9.263999999998412e-06, 9.763999999998912e-06, 9.250000000002312e-06, 9.249999999998842e-06, 9.778000000001952e-06, 9.763999999998912e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.262999999998939e-06, 9.319000000000688e-06, 9.264000000001882e-06, 9.276999999998509e-06, 9.221999999999703e-06, 9.290999999998079e-06, 1.0277999999998982e-05, 9.764000000002382e-06, 9.250000000002312e-06, 9.249999999998842e-06, 9.722000000000203e-06, 9.278000000001452e-06, 9.249999999998842e-06, 9.263999999998412e-06]</msg>
<status status="PASS" starttime="20201112 09:43:03.686" endtime="20201112 09:43:03.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.681" endtime="20201112 09:43:03.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.691" endtime="20201112 09:43:03.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.694" endtime="20201112 09:43:03.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.692" endtime="20201112 09:43:03.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.689" endtime="20201112 09:43:03.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.322" endtime="20201112 09:43:03.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.321" endtime="20201112 09:43:03.715"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.724" endtime="20201112 09:43:03.742"></status>
</kw>
<msg timestamp="20201112 09:43:03.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.723" endtime="20201112 09:43:03.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.744" endtime="20201112 09:43:03.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.746" endtime="20201112 09:43:03.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.720" endtime="20201112 09:43:03.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.718" endtime="20201112 09:43:03.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.756" endtime="20201112 09:43:04.043"></status>
</kw>
<msg timestamp="20201112 09:43:04.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:03.755" endtime="20201112 09:43:04.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020437292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:04.047" endtime="20201112 09:43:04.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.055" endtime="20201112 09:43:04.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.752" endtime="20201112 09:43:04.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.750" endtime="20201112 09:43:04.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.062" level="INFO">${RESULT} = [{'time': 0.020437292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0791999999999052e-05, 'source_diff': 1.0791999999999052e-05}, {'time': 0.020450375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.059" endtime="20201112 09:43:04.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.075" level="INFO">${ACCURACY} = {'source_diff': [1.0791999999999052e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0333000000001258e-05, 1.126299999999747e-05, 1.12640000000004...</msg>
<status status="PASS" starttime="20201112 09:43:04.063" endtime="20201112 09:43:04.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.080" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.079" endtime="20201112 09:43:04.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.083" level="INFO">VALUE: [1.0791999999999052e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0333000000001258e-05, 1.126299999999747e-05, 1.1264000000000413e-05, 1.0750000000000343e-05, 1.0195000000001037e-05, 1.0249999999999843e-05, 1.0763999999999913e-05, 1.0736000000000773e-05, 1.1277999999999982e-05, 1.0263999999999412e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0208000000001133e-05, 1.0763999999999913e-05, 1.0262999999999939e-05, 1.0763999999999913e-05, 1.0249999999999843e-05, 1.1236999999997277e-05, 1.0750000000000343e-05, 1.0195000000001037e-05, 1.0262999999999939e-05, 1.0763999999999913e-05, 1.0263999999999412e-05, 1.0777999999999482e-05, 1.0249999999999843e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0249999999999843e-05, 1.0709000000001107e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.1250000000000843e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0277999999998982e-05, 1.0249999999999843e-05, 1.0736000000000773e-05, 1.0736000000000773e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0249999999999843e-05]</msg>
<status status="PASS" starttime="20201112 09:43:04.081" endtime="20201112 09:43:04.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.076" endtime="20201112 09:43:04.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.086" endtime="20201112 09:43:04.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.090" endtime="20201112 09:43:04.109"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.088" endtime="20201112 09:43:04.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.085" endtime="20201112 09:43:04.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.716" endtime="20201112 09:43:04.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.716" endtime="20201112 09:43:04.110"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.119" endtime="20201112 09:43:04.136"></status>
</kw>
<msg timestamp="20201112 09:43:04.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.117" endtime="20201112 09:43:04.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.138" endtime="20201112 09:43:04.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.140" endtime="20201112 09:43:04.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.115" endtime="20201112 09:43:04.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.113" endtime="20201112 09:43:04.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.150" endtime="20201112 09:43:04.435"></status>
</kw>
<msg timestamp="20201112 09:43:04.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.149" endtime="20201112 09:43:04.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.440" endtime="20201112 09:43:04.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.448" endtime="20201112 09:43:04.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.146" endtime="20201112 09:43:04.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.144" endtime="20201112 09:43:04.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.454" level="INFO">${RESULT} = [{'time': 0.019796736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1763999999997443e-05, 'source_diff': 1.1763999999997443e-05}, {'time': 0.019810903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.451" endtime="20201112 09:43:04.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.469" level="INFO">${ACCURACY} = {'source_diff': [1.1763999999997443e-05, 1.1264000000000413e-05, 1.1805999999999622e-05, 1.1264000000000413e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1764000000000913e-05, 1.1264000000000...</msg>
<status status="PASS" starttime="20201112 09:43:04.455" endtime="20201112 09:43:04.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.473" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.472" endtime="20201112 09:43:04.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.476" level="INFO">VALUE: [1.1763999999997443e-05, 1.1264000000000413e-05, 1.1805999999999622e-05, 1.1264000000000413e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.1764000000000913e-05, 1.1264000000000413e-05, 1.1791000000000579e-05, 1.1277999999999982e-05, 1.1764000000000913e-05, 1.1264000000000413e-05, 1.1791000000000579e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1708000000002633e-05, 1.1749999999997873e-05, 1.1806000000003092e-05, 1.1764000000000913e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1777999999997013e-05, 1.1250000000000843e-05, 1.1832999999999289e-05, 1.1721999999998733e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1763000000001439e-05, 1.1750000000001343e-05, 1.1735999999998303e-05, 1.1680999999999497e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1250000000000843e-05, 1.1264000000000413e-05, 1.176299999999797e-05, 1.1749999999997873e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1763999999997443e-05, 1.1195000000002037e-05, 1.1264000000000413e-05, 1.1263000000000939e-05, 1.1764000000000913e-05, 1.1764000000000913e-05]</msg>
<status status="PASS" starttime="20201112 09:43:04.474" endtime="20201112 09:43:04.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.470" endtime="20201112 09:43:04.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.479" endtime="20201112 09:43:04.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.483" endtime="20201112 09:43:04.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.481" endtime="20201112 09:43:04.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.478" endtime="20201112 09:43:04.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.111" endtime="20201112 09:43:04.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.111" endtime="20201112 09:43:04.503"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.512" endtime="20201112 09:43:04.529"></status>
</kw>
<msg timestamp="20201112 09:43:04.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.510" endtime="20201112 09:43:04.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.530" endtime="20201112 09:43:04.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.533" endtime="20201112 09:43:04.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.508" endtime="20201112 09:43:04.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.506" endtime="20201112 09:43:04.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.543" endtime="20201112 09:43:04.827"></status>
</kw>
<msg timestamp="20201112 09:43:04.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019593764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.541" endtime="20201112 09:43:04.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019593764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.832" endtime="20201112 09:43:04.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.840" endtime="20201112 09:43:04.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.539" endtime="20201112 09:43:04.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.537" endtime="20201112 09:43:04.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.846" level="INFO">${RESULT} = [{'time': 0.019593764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2777999999998013e-05, 'source_diff': 1.2777999999998013e-05}, {'time': 0.019611708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.843" endtime="20201112 09:43:04.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:04.860" level="INFO">${ACCURACY} = {'source_diff': [1.2777999999998013e-05, 1.2249999999998373e-05, 1.2263999999997943e-05, 1.2709000000003107e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2333999999999262e-05, 1.2264000000001...</msg>
<status status="PASS" starttime="20201112 09:43:04.847" endtime="20201112 09:43:04.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.864" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:04.863" endtime="20201112 09:43:04.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.867" level="INFO">VALUE: [1.2777999999998013e-05, 1.2249999999998373e-05, 1.2263999999997943e-05, 1.2709000000003107e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2333999999999262e-05, 1.2264000000001413e-05, 1.2263999999997943e-05, 1.3277999999998513e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.327699999999904e-05, 1.2249999999998373e-05, 1.2264000000001413e-05, 1.2277000000001509e-05, 1.2749999999998873e-05, 1.2263999999997943e-05, 1.2805000000001149e-05, 1.2250000000001843e-05, 1.2250000000001843e-05, 1.2264000000001413e-05, 1.2764000000001913e-05, 1.2778000000001483e-05, 1.2249999999998373e-05, 1.330499999999818e-05, 1.2763999999998443e-05, 1.2278000000000983e-05, 1.2735999999999303e-05, 1.2291000000001079e-05, 1.2250000000001843e-05, 1.2263000000001939e-05, 1.2263999999997943e-05, 1.2749999999998873e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2763999999998443e-05, 1.2235999999998803e-05, 1.2764000000001913e-05, 1.2263999999997943e-05, 1.3263999999998943e-05, 1.2250000000001843e-05, 1.2264000000001413e-05, 1.2778000000001483e-05, 1.2278000000000983e-05, 1.276299999999897e-05, 1.2263999999997943e-05, 1.2763999999998443e-05]</msg>
<status status="PASS" starttime="20201112 09:43:04.865" endtime="20201112 09:43:04.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.861" endtime="20201112 09:43:04.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.870" endtime="20201112 09:43:04.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.874" endtime="20201112 09:43:04.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.872" endtime="20201112 09:43:04.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.869" endtime="20201112 09:43:04.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.504" endtime="20201112 09:43:04.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.504" endtime="20201112 09:43:04.894"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.903" endtime="20201112 09:43:04.920"></status>
</kw>
<msg timestamp="20201112 09:43:04.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.901" endtime="20201112 09:43:04.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.922" endtime="20201112 09:43:04.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.924" endtime="20201112 09:43:04.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.899" endtime="20201112 09:43:04.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.897" endtime="20201112 09:43:04.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.934" endtime="20201112 09:43:05.232"></status>
</kw>
<msg timestamp="20201112 09:43:05.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.933" endtime="20201112 09:43:05.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.236" endtime="20201112 09:43:05.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.244" endtime="20201112 09:43:05.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.930" endtime="20201112 09:43:05.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.928" endtime="20201112 09:43:05.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.251" level="INFO">${RESULT} = [{'time': 0.019561681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3236999999999277e-05, 'source_diff': 1.3236999999999277e-05}, {'time': 0.019580931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:05.248" endtime="20201112 09:43:05.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:05.264" level="INFO">${ACCURACY} = {'source_diff': [1.3236999999999277e-05, 1.4250000000000373e-05, 1.3763999999999443e-05, 1.3778000000002483e-05, 1.3736000000000304e-05, 1.377699999999954e-05, 1.3305999999997653e-05, 1.37360000000003...</msg>
<status status="PASS" starttime="20201112 09:43:05.252" endtime="20201112 09:43:05.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.269" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:05.268" endtime="20201112 09:43:05.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.271" level="INFO">VALUE: [1.3236999999999277e-05, 1.4250000000000373e-05, 1.3763999999999443e-05, 1.3778000000002483e-05, 1.3736000000000304e-05, 1.377699999999954e-05, 1.3305999999997653e-05, 1.3736000000000304e-05, 1.376299999999997e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3264000000002413e-05, 1.3763999999999443e-05, 1.377699999999954e-05, 1.3806000000001623e-05, 1.3763999999999443e-05, 1.3249999999999373e-05, 1.3736000000000304e-05, 1.3722000000000734e-05, 1.3777999999999013e-05, 1.3278000000001983e-05, 1.4250000000000373e-05, 1.3709000000000637e-05, 1.3277999999998513e-05, 1.3264000000002413e-05, 1.3763999999999443e-05, 1.3305999999997653e-05, 1.3277999999998513e-05, 1.3763999999999443e-05, 1.3707999999997694e-05, 1.3763999999999443e-05, 1.3264000000002413e-05, 1.3263999999998943e-05, 1.3207999999997194e-05, 1.3806000000001623e-05, 1.3722000000000734e-05, 1.4278000000002983e-05, 1.3222000000000234e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3749999999999873e-05, 1.3278000000001983e-05, 1.3792000000002053e-05, 1.3277999999998513e-05, 1.3749999999999873e-05, 1.4278000000002983e-05, 1.3249999999999373e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3763999999999443e-05]</msg>
<status status="PASS" starttime="20201112 09:43:05.270" endtime="20201112 09:43:05.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.265" endtime="20201112 09:43:05.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.275" endtime="20201112 09:43:05.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.278" endtime="20201112 09:43:05.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.277" endtime="20201112 09:43:05.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.273" endtime="20201112 09:43:05.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.895" endtime="20201112 09:43:05.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.895" endtime="20201112 09:43:05.299"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.308" endtime="20201112 09:43:05.326"></status>
</kw>
<msg timestamp="20201112 09:43:05.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.306" endtime="20201112 09:43:05.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.327" endtime="20201112 09:43:05.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.330" endtime="20201112 09:43:05.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.304" endtime="20201112 09:43:05.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.302" endtime="20201112 09:43:05.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.339" endtime="20201112 09:43:05.624"></status>
</kw>
<msg timestamp="20201112 09:43:05.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.338" endtime="20201112 09:43:05.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019496292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.629" endtime="20201112 09:43:05.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.637" endtime="20201112 09:43:05.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.335" endtime="20201112 09:43:05.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.334" endtime="20201112 09:43:05.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:05.643" level="INFO">${RESULT} = [{'time': 0.019496292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4749999999997404e-05, 'source_diff': 1.4749999999997404e-05}, {'time': 0.019513347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:05.640" endtime="20201112 09:43:05.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:05.657" level="INFO">${ACCURACY} = {'source_diff': [1.4749999999997404e-05, 1.4250000000000373e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.476300000000097e-05, 1.4764000000000443e-05, 1.4278000000002983e-05, 1.42909999999996...</msg>
<status status="PASS" starttime="20201112 09:43:05.644" endtime="20201112 09:43:05.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.661" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:05.660" endtime="20201112 09:43:05.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.664" level="INFO">VALUE: [1.4749999999997404e-05, 1.4250000000000373e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.476300000000097e-05, 1.4764000000000443e-05, 1.4278000000002983e-05, 1.429099999999961e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4750000000000874e-05, 1.47629999999975e-05, 1.4277999999999513e-05, 1.4763999999996974e-05, 1.4763999999996974e-05, 1.4805999999999153e-05, 1.4263999999999943e-05, 1.4764000000000443e-05, 1.4291999999999083e-05, 1.4750000000000874e-05, 1.4764000000000443e-05, 1.4250000000000373e-05, 1.426300000000047e-05, 1.4778000000000013e-05, 1.4764000000000443e-05, 1.4250000000000373e-05, 1.5250000000001374e-05, 1.4750000000000874e-05, 1.4763999999996974e-05, 1.4236000000000804e-05, 1.5208000000002664e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.480499999999968e-05, 1.4764000000000443e-05, 1.476300000000097e-05, 1.4764000000000443e-05, 1.4778000000000013e-05, 1.4749999999997404e-05, 1.4764000000000443e-05, 1.4221999999997764e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.526300000000147e-05, 1.4764000000000443e-05, 1.4250000000000373e-05]</msg>
<status status="PASS" starttime="20201112 09:43:05.662" endtime="20201112 09:43:05.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.658" endtime="20201112 09:43:05.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.674" endtime="20201112 09:43:05.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:05.677" endtime="20201112 09:43:05.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.676" endtime="20201112 09:43:05.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.672" endtime="20201112 09:43:05.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.300" endtime="20201112 09:43:05.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.300" endtime="20201112 09:43:05.698"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.706" endtime="20201112 09:43:05.723"></status>
</kw>
<msg timestamp="20201112 09:43:05.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.705" endtime="20201112 09:43:05.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:05.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:05.725" endtime="20201112 09:43:05.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.728" endtime="20201112 09:43:05.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.703" endtime="20201112 09:43:05.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.700" endtime="20201112 09:43:05.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:05.739" endtime="20201112 09:43:06.024"></status>
</kw>
<msg timestamp="20201112 09:43:06.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019456486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:05.737" endtime="20201112 09:43:06.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019441208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019456486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.028" endtime="20201112 09:43:06.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.036" endtime="20201112 09:43:06.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.734" endtime="20201112 09:43:06.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.732" endtime="20201112 09:43:06.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.043" level="INFO">${RESULT} = [{'time': 0.019456486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5277999999997044e-05, 'source_diff': 1.5277999999997044e-05}, {'time': 0.019477569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:06.040" endtime="20201112 09:43:06.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.057" level="INFO">${ACCURACY} = {'source_diff': [1.5277999999997044e-05, 1.57629999999985e-05, 1.5764000000001444e-05, 1.5735999999998834e-05, 1.5292000000000083e-05, 1.5250000000001374e-05, 1.581900000000025e-05, 1.5763999999997974...</msg>
<status status="PASS" starttime="20201112 09:43:06.044" endtime="20201112 09:43:06.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.062" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.061" endtime="20201112 09:43:06.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.064" level="INFO">VALUE: [1.5277999999997044e-05, 1.57629999999985e-05, 1.5764000000001444e-05, 1.5735999999998834e-05, 1.5292000000000083e-05, 1.5250000000001374e-05, 1.581900000000025e-05, 1.5763999999997974e-05, 1.5264000000000943e-05, 1.5278000000000513e-05, 1.580499999999721e-05, 1.5750000000001874e-05, 1.527700000000104e-05, 1.5278000000000513e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5764000000001444e-05, 1.5763999999997974e-05, 1.5292000000000083e-05, 1.5249999999997904e-05, 1.5264000000000943e-05, 1.526300000000147e-05, 1.5737000000001777e-05, 1.5264000000000943e-05, 1.5737000000001777e-05, 1.5736000000002304e-05, 1.57629999999985e-05, 1.5764000000001444e-05, 1.5277999999997044e-05, 1.57629999999985e-05, 1.5207999999999194e-05, 1.5278000000000513e-05, 1.5250000000001374e-05, 1.5263999999997474e-05, 1.5763999999997974e-05, 1.5278000000000513e-05, 1.5806000000000153e-05, 1.576300000000197e-05, 1.5278000000000513e-05, 1.5236000000001804e-05, 1.5763999999997974e-05, 1.5278000000000513e-05, 1.5278000000000513e-05, 1.5764000000001444e-05, 1.5264000000000943e-05, 1.5735999999998834e-05, 1.5749999999998404e-05, 1.5249999999997904e-05]</msg>
<status status="PASS" starttime="20201112 09:43:06.063" endtime="20201112 09:43:06.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.058" endtime="20201112 09:43:06.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.068" endtime="20201112 09:43:06.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.071" endtime="20201112 09:43:06.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.070" endtime="20201112 09:43:06.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.066" endtime="20201112 09:43:06.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.699" endtime="20201112 09:43:06.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:05.698" endtime="20201112 09:43:06.092"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.101" endtime="20201112 09:43:06.116"></status>
</kw>
<msg timestamp="20201112 09:43:06.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.099" endtime="20201112 09:43:06.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.118" endtime="20201112 09:43:06.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.120" endtime="20201112 09:43:06.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.096" endtime="20201112 09:43:06.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.094" endtime="20201112 09:43:06.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.130" endtime="20201112 09:43:06.416"></status>
</kw>
<msg timestamp="20201112 09:43:06.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.129" endtime="20201112 09:43:06.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.420" endtime="20201112 09:43:06.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.428" endtime="20201112 09:43:06.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.126" endtime="20201112 09:43:06.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.124" endtime="20201112 09:43:06.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.435" level="INFO">${RESULT} = [{'time': 0.019658792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6264000000001944e-05, 'source_diff': 1.6264000000001944e-05}, {'time': 0.019678444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:06.431" endtime="20201112 09:43:06.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.448" level="INFO">${ACCURACY} = {'source_diff': [1.6264000000001944e-05, 1.6249999999998904e-05, 1.6306000000000653e-05, 1.6264000000001944e-05, 1.6208999999999668e-05, 1.6763999999998974e-05, 1.6735999999999834e-05, 1.6263999999998...</msg>
<status status="PASS" starttime="20201112 09:43:06.436" endtime="20201112 09:43:06.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.452" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.451" endtime="20201112 09:43:06.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.455" level="INFO">VALUE: [1.6264000000001944e-05, 1.6249999999998904e-05, 1.6306000000000653e-05, 1.6264000000001944e-05, 1.6208999999999668e-05, 1.6763999999998974e-05, 1.6735999999999834e-05, 1.6263999999998474e-05, 1.6763999999998974e-05, 1.7249999999999904e-05, 1.6763999999998974e-05, 1.6278000000001513e-05, 1.6236999999998808e-05, 1.6749999999999404e-05, 1.7277999999999044e-05, 1.677700000000254e-05, 1.6764000000002444e-05, 1.7263999999999474e-05, 1.6763999999998974e-05, 1.6263999999998474e-05, 1.683300000000082e-05, 1.6221999999999764e-05, 1.6208000000000194e-05, 1.6778000000002014e-05, 1.6306000000000653e-05, 1.6278000000001513e-05, 1.681899999999778e-05, 1.6292000000001083e-05, 1.6262999999999e-05, 1.6278000000001513e-05, 1.6249999999998904e-05, 1.6263999999998474e-05, 1.6764000000002444e-05, 1.6263999999998474e-05, 1.7263999999999474e-05, 1.6263999999998474e-05, 1.6278000000001513e-05, 1.6263999999998474e-05, 1.6249999999998904e-05, 1.681900000000125e-05, 1.6263999999998474e-05, 1.6249999999998904e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.6763999999998974e-05, 1.6278000000001513e-05, 1.6278000000001513e-05, 1.6263999999998474e-05, 1.6764000000002444e-05, 1.6749999999999404e-05]</msg>
<status status="PASS" starttime="20201112 09:43:06.454" endtime="20201112 09:43:06.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.449" endtime="20201112 09:43:06.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.458" endtime="20201112 09:43:06.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.462" endtime="20201112 09:43:06.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.460" endtime="20201112 09:43:06.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.457" endtime="20201112 09:43:06.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.093" endtime="20201112 09:43:06.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.092" endtime="20201112 09:43:06.483"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.491" endtime="20201112 09:43:06.509"></status>
</kw>
<msg timestamp="20201112 09:43:06.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.490" endtime="20201112 09:43:06.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.511" endtime="20201112 09:43:06.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.513" endtime="20201112 09:43:06.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.487" endtime="20201112 09:43:06.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.485" endtime="20201112 09:43:06.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.523" endtime="20201112 09:43:06.810"></status>
</kw>
<msg timestamp="20201112 09:43:06.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019534431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.522" endtime="20201112 09:43:06.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019534431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.814" endtime="20201112 09:43:06.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.822" endtime="20201112 09:43:06.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.519" endtime="20201112 09:43:06.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.517" endtime="20201112 09:43:06.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.829" level="INFO">${RESULT} = [{'time': 0.019534431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7278000000002514e-05, 'source_diff': 1.7278000000002514e-05}, {'time': 0.019554764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:06.825" endtime="20201112 09:43:06.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.842" level="INFO">${ACCURACY} = {'source_diff': [1.7278000000002514e-05, 1.7750000000000404e-05, 1.7263999999999474e-05, 1.777700000000007e-05, 1.7263e-05, 1.734700000000089e-05, 1.7722000000001265e-05, 1.7763999999999974e-05, 1.727...</msg>
<status status="PASS" starttime="20201112 09:43:06.830" endtime="20201112 09:43:06.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.846" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.845" endtime="20201112 09:43:06.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.849" level="INFO">VALUE: [1.7278000000002514e-05, 1.7750000000000404e-05, 1.7263999999999474e-05, 1.777700000000007e-05, 1.7263e-05, 1.734700000000089e-05, 1.7722000000001265e-05, 1.7763999999999974e-05, 1.7277999999999044e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7249999999999904e-05, 1.731900000000175e-05, 1.7763999999999974e-05, 1.7722000000001265e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7721999999997795e-05, 1.7707999999998225e-05, 1.8236000000001334e-05, 1.777700000000007e-05, 1.727699999999957e-05, 1.7263999999999474e-05, 1.7750000000000404e-05, 1.783300000000182e-05, 1.7805999999998684e-05, 1.777700000000007e-05, 1.7278000000002514e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, 1.8264000000000474e-05, 1.7763999999999974e-05, 1.7694000000002125e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7735999999997365e-05, 1.8278000000000044e-05, 1.779099999999964e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.7777999999999544e-05, 1.7263999999999474e-05, 1.7750000000000404e-05, 1.7264000000002944e-05, 1.8236000000001334e-05, 1.7763999999999974e-05, 1.7249999999999904e-05, 1.8264000000000474e-05]</msg>
<status status="PASS" starttime="20201112 09:43:06.847" endtime="20201112 09:43:06.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.843" endtime="20201112 09:43:06.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.852" endtime="20201112 09:43:06.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.856" endtime="20201112 09:43:06.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.854" endtime="20201112 09:43:06.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.851" endtime="20201112 09:43:06.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.484" endtime="20201112 09:43:06.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.483" endtime="20201112 09:43:06.877"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.885" endtime="20201112 09:43:06.903"></status>
</kw>
<msg timestamp="20201112 09:43:06.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.884" endtime="20201112 09:43:06.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.905" endtime="20201112 09:43:06.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.907" endtime="20201112 09:43:06.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.881" endtime="20201112 09:43:06.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.879" endtime="20201112 09:43:06.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.917" endtime="20201112 09:43:07.204"></status>
</kw>
<msg timestamp="20201112 09:43:07.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.915" endtime="20201112 09:43:07.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.208" endtime="20201112 09:43:07.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.216" endtime="20201112 09:43:07.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.913" endtime="20201112 09:43:07.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.911" endtime="20201112 09:43:07.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.223" level="INFO">${RESULT} = [{'time': 0.019599931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9278000000001044e-05, 'source_diff': 1.9278000000001044e-05}, {'time': 0.019622778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:07.220" endtime="20201112 09:43:07.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.236" level="INFO">${ACCURACY} = {'source_diff': [1.9278000000001044e-05, 1.8778000000000544e-05, 1.8750000000001404e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.8778000000000544e-05, 1.8250000000000...</msg>
<status status="PASS" starttime="20201112 09:43:07.224" endtime="20201112 09:43:07.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.241" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.240" endtime="20201112 09:43:07.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.243" level="INFO">VALUE: [1.9278000000001044e-05, 1.8778000000000544e-05, 1.8750000000001404e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.8778000000000544e-05, 1.8250000000000904e-05, 1.818099999999906e-05, 1.8250000000000904e-05, 1.8763999999997505e-05, 1.880500000000021e-05, 1.8764000000000974e-05, 1.8305999999999184e-05, 1.8291999999999614e-05, 1.8764000000000974e-05, 1.8264000000000474e-05, 1.8778000000000544e-05, 1.8763999999997505e-05, 1.8764000000000974e-05, 1.8778000000000544e-05, 1.8263999999997005e-05, 1.8305999999999184e-05, 1.8250000000000904e-05, 1.8264000000000474e-05, 1.8764000000000974e-05, 1.833299999999885e-05, 1.8249999999997435e-05, 1.8750000000001404e-05, 1.879100000000064e-05, 1.8237000000000808e-05, 1.881899999999978e-05, 1.8750000000001404e-05, 1.8264000000000474e-05, 1.8792000000000114e-05, 1.872299999999827e-05, 1.8778000000000544e-05, 1.8291999999999614e-05, 1.8264000000000474e-05, 1.8264000000000474e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8250000000000904e-05, 1.827700000000057e-05, 1.8763999999997505e-05, 1.8736000000001835e-05, 1.879100000000064e-05, 1.8763999999997505e-05, 1.827700000000057e-05, 1.8764000000000974e-05]</msg>
<status status="PASS" starttime="20201112 09:43:07.242" endtime="20201112 09:43:07.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.237" endtime="20201112 09:43:07.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.247" endtime="20201112 09:43:07.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.250" endtime="20201112 09:43:07.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.249" endtime="20201112 09:43:07.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.245" endtime="20201112 09:43:07.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.877" endtime="20201112 09:43:07.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.877" endtime="20201112 09:43:07.271"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.279" endtime="20201112 09:43:07.297"></status>
</kw>
<msg timestamp="20201112 09:43:07.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.278" endtime="20201112 09:43:07.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.299" endtime="20201112 09:43:07.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.301" endtime="20201112 09:43:07.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.275" endtime="20201112 09:43:07.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.273" endtime="20201112 09:43:07.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.311" endtime="20201112 09:43:07.598"></status>
</kw>
<msg timestamp="20201112 09:43:07.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.309" endtime="20201112 09:43:07.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019562042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.602" endtime="20201112 09:43:07.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.610" endtime="20201112 09:43:07.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.307" endtime="20201112 09:43:07.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.305" endtime="20201112 09:43:07.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.617" level="INFO">${RESULT} = [{'time': 0.019562042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9806000000000684e-05, 'source_diff': 1.9806000000000684e-05}, {'time': 0.019585042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:07.613" endtime="20201112 09:43:07.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.631" level="INFO">${ACCURACY} = {'source_diff': [1.9806000000000684e-05, 1.9278000000001044e-05, 1.9750000000002405e-05, 1.9264000000001474e-05, 1.9792000000001114e-05, 1.9263999999998005e-05, 1.972299999999927e-05, 1.92640000000014...</msg>
<status status="PASS" starttime="20201112 09:43:07.618" endtime="20201112 09:43:07.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.636" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.635" endtime="20201112 09:43:07.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.638" level="INFO">VALUE: [1.9806000000000684e-05, 1.9278000000001044e-05, 1.9750000000002405e-05, 1.9264000000001474e-05, 1.9792000000001114e-05, 1.9263999999998005e-05, 1.972299999999927e-05, 1.9264000000001474e-05, 1.934699999999942e-05, 1.9764000000001974e-05, 1.9277999999997575e-05, 1.9764000000001974e-05, 1.97089999999997e-05, 1.976299999999903e-05, 1.9264000000001474e-05, 1.9735999999999365e-05, 1.923699999999834e-05, 1.9763999999998505e-05, 1.9221999999999295e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9749999999998935e-05, 1.9263000000002e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 1.9278000000001044e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9277999999997575e-05, 1.97089999999997e-05, 1.9708000000000225e-05, 1.9764000000001974e-05, 1.9749999999998935e-05, 1.9263999999998005e-05, 1.9833999999999824e-05, 1.9777999999998075e-05, 1.9749999999998935e-05, 1.9777999999998075e-05, 1.977700000000207e-05, 1.983299999999688e-05, 1.92769999999981e-05, 1.977700000000207e-05, 1.9278000000001044e-05, 1.9764000000001974e-05, 1.9263999999998005e-05, 1.9749999999998935e-05, 1.9263999999998005e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9764000000001974e-05]</msg>
<status status="PASS" starttime="20201112 09:43:07.637" endtime="20201112 09:43:07.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.632" endtime="20201112 09:43:07.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.642" endtime="20201112 09:43:07.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.645" endtime="20201112 09:43:07.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.644" endtime="20201112 09:43:07.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.640" endtime="20201112 09:43:07.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.272" endtime="20201112 09:43:07.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.271" endtime="20201112 09:43:07.666"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.674" endtime="20201112 09:43:07.693"></status>
</kw>
<msg timestamp="20201112 09:43:07.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.673" endtime="20201112 09:43:07.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.694" endtime="20201112 09:43:07.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.697" endtime="20201112 09:43:07.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.670" endtime="20201112 09:43:07.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.668" endtime="20201112 09:43:07.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.707" endtime="20201112 09:43:08.008"></status>
</kw>
<msg timestamp="20201112 09:43:08.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.705" endtime="20201112 09:43:08.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.012" endtime="20201112 09:43:08.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.021" endtime="20201112 09:43:08.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.703" endtime="20201112 09:43:08.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.701" endtime="20201112 09:43:08.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.027" level="INFO">${RESULT} = [{'time': 0.019614722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0264000000002474e-05, 'source_diff': 2.0264000000002474e-05}, {'time': 0.019641625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:08.024" endtime="20201112 09:43:08.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.041" level="INFO">${ACCURACY} = {'source_diff': [2.0264000000002474e-05, 2.0763999999999505e-05, 2.0764000000002975e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0806000000001684e-05, 2.0749999999999935e-05, 2.0249999999999...</msg>
<status status="PASS" starttime="20201112 09:43:08.028" endtime="20201112 09:43:08.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.045" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.044" endtime="20201112 09:43:08.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.048" level="INFO">VALUE: [2.0264000000002474e-05, 2.0763999999999505e-05, 2.0764000000002975e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0806000000001684e-05, 2.0749999999999935e-05, 2.0249999999999435e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0820000000001254e-05, 2.0263999999999005e-05, 2.0263999999999005e-05, 2.1264000000000005e-05, 2.0249999999999435e-05, 2.0263999999999005e-05, 2.1264000000000005e-05, 2.076300000000003e-05, 2.0264000000002474e-05, 2.0778000000002544e-05, 2.076300000000003e-05, 2.0777999999999075e-05, 2.0221999999996826e-05, 2.0263999999999005e-05, 2.0763999999999505e-05, 2.0249999999999435e-05, 2.0749999999999935e-05, 2.0764000000002975e-05, 2.026299999999953e-05, 2.0763999999999505e-05, 2.0208000000000725e-05, 2.0235999999999865e-05, 2.1250000000000435e-05, 2.0749999999999935e-05, 2.0249999999999435e-05, 2.0777999999999075e-05, 2.076300000000003e-05, 2.0235999999999865e-05, 2.0763999999999505e-05, 2.0249999999999435e-05, 2.0263999999999005e-05, 2.0777999999999075e-05, 2.1250000000000435e-05, 2.0264000000002474e-05, 2.0777999999999075e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 2.0763999999999505e-05, 2.0263999999999005e-05]</msg>
<status status="PASS" starttime="20201112 09:43:08.046" endtime="20201112 09:43:08.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.042" endtime="20201112 09:43:08.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.051" endtime="20201112 09:43:08.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.055" endtime="20201112 09:43:08.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.053" endtime="20201112 09:43:08.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.050" endtime="20201112 09:43:08.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.667" endtime="20201112 09:43:08.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.666" endtime="20201112 09:43:08.075"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.084" endtime="20201112 09:43:08.101"></status>
</kw>
<msg timestamp="20201112 09:43:08.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.083" endtime="20201112 09:43:08.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.102" endtime="20201112 09:43:08.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.105" endtime="20201112 09:43:08.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.080" endtime="20201112 09:43:08.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.078" endtime="20201112 09:43:08.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.115" endtime="20201112 09:43:08.401"></status>
</kw>
<msg timestamp="20201112 09:43:08.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.113" endtime="20201112 09:43:08.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019655681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019677444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.405" endtime="20201112 09:43:08.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.414" endtime="20201112 09:43:08.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.111" endtime="20201112 09:43:08.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.109" endtime="20201112 09:43:08.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.420" level="INFO">${RESULT} = [{'time': 0.019677444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1762999999997562e-05, 'source_diff': 2.1762999999997562e-05}, {'time': 0.019703542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:08.417" endtime="20201112 09:43:08.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.434" level="INFO">${ACCURACY} = {'source_diff': [2.1762999999997562e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.1791999999999645e-05, 2.1791999999999645e-05, 2.17780000000000...</msg>
<status status="PASS" starttime="20201112 09:43:08.421" endtime="20201112 09:43:08.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.438" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.437" endtime="20201112 09:43:08.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.441" level="INFO">VALUE: [2.1762999999997562e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.1791999999999645e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.2221999999998826e-05, 2.12770000000001e-05, 2.2249999999997966e-05, 2.1791999999999645e-05, 2.17090000000017e-05, 2.1277999999999575e-05, 2.2235999999998396e-05, 2.1277999999999575e-05, 2.1264000000000005e-05, 2.1750000000000935e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.184699999999845e-05, 2.1763999999997036e-05, 2.1262999999997062e-05, 2.1277999999999575e-05, 2.1778000000000075e-05, 2.126300000000053e-05, 2.1264000000000005e-05, 2.1778000000000075e-05, 2.176300000000103e-05, 2.1264000000000005e-05, 2.1319999999998285e-05, 2.1250000000000435e-05, 2.1749999999997466e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.1291999999999145e-05, 2.126300000000053e-05, 2.180499999999974e-05, 2.1264000000000005e-05, 2.2276999999997632e-05, 2.1250000000000435e-05, 2.1736000000001365e-05, 2.1750000000000935e-05, 2.1277999999999575e-05, 2.1208000000001725e-05, 2.179100000000017e-05, 2.1277999999999575e-05, 2.1749999999997466e-05, 2.2278000000000575e-05, 2.1264000000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:43:08.439" endtime="20201112 09:43:08.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.435" endtime="20201112 09:43:08.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.444" endtime="20201112 09:43:08.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.448" endtime="20201112 09:43:08.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.446" endtime="20201112 09:43:08.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.443" endtime="20201112 09:43:08.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.076" endtime="20201112 09:43:08.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.076" endtime="20201112 09:43:08.468"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.477" endtime="20201112 09:43:08.494"></status>
</kw>
<msg timestamp="20201112 09:43:08.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.475" endtime="20201112 09:43:08.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.496" endtime="20201112 09:43:08.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.498" endtime="20201112 09:43:08.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.473" endtime="20201112 09:43:08.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.471" endtime="20201112 09:43:08.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.508" endtime="20201112 09:43:08.795"></status>
</kw>
<msg timestamp="20201112 09:43:08.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019538056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.507" endtime="20201112 09:43:08.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019538056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.799" endtime="20201112 09:43:08.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.807" endtime="20201112 09:43:08.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.504" endtime="20201112 09:43:08.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.502" endtime="20201112 09:43:08.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.814" level="INFO">${RESULT} = [{'time': 0.019538056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2764000000001505e-05, 'source_diff': 2.2764000000001505e-05}, {'time': 0.019562903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:08.811" endtime="20201112 09:43:08.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.827" level="INFO">${ACCURACY} = {'source_diff': [2.2764000000001505e-05, 2.2264000000001005e-05, 2.2276999999997632e-05, 2.3278000000001575e-05, 2.2763999999998036e-05, 2.2707999999999756e-05, 2.2264000000001005e-05, 2.2193999999999...</msg>
<status status="PASS" starttime="20201112 09:43:08.815" endtime="20201112 09:43:08.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.832" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.831" endtime="20201112 09:43:08.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.834" level="INFO">VALUE: [2.2764000000001505e-05, 2.2264000000001005e-05, 2.2276999999997632e-05, 2.3278000000001575e-05, 2.2763999999998036e-05, 2.2707999999999756e-05, 2.2264000000001005e-05, 2.2193999999999686e-05, 2.2750000000001935e-05, 2.2792000000000645e-05, 2.2250000000001435e-05, 2.2278000000000575e-05, 2.2763999999998036e-05, 2.22770000000011e-05, 2.2764000000001505e-05, 2.2291999999996676e-05, 2.2778000000001075e-05, 2.2249999999997966e-05, 2.2750000000001935e-05, 2.2763999999998036e-05, 2.2763999999998036e-05, 2.2749999999998466e-05, 2.27770000000016e-05, 2.2264000000001005e-05, 2.2749999999998466e-05, 2.2776999999998132e-05, 2.2847999999998925e-05, 2.2736000000002365e-05, 2.2763999999998036e-05, 2.2763999999998036e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.2749999999998466e-05, 2.2264000000001005e-05, 2.2749999999998466e-05, 2.2249999999997966e-05, 2.2735999999998896e-05, 2.2763999999998036e-05, 2.2777999999997606e-05, 2.2776999999998132e-05, 2.2791999999997176e-05, 2.2778000000001075e-05, 2.2263999999997536e-05, 2.2236000000001865e-05, 2.2750000000001935e-05, 2.3292000000001145e-05, 2.2249999999997966e-05, 2.276300000000203e-05]</msg>
<status status="PASS" starttime="20201112 09:43:08.833" endtime="20201112 09:43:08.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.828" endtime="20201112 09:43:08.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.838" endtime="20201112 09:43:08.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.841" endtime="20201112 09:43:08.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.840" endtime="20201112 09:43:08.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.836" endtime="20201112 09:43:08.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.469" endtime="20201112 09:43:08.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.469" endtime="20201112 09:43:08.862"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.871" endtime="20201112 09:43:08.888"></status>
</kw>
<msg timestamp="20201112 09:43:08.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.869" endtime="20201112 09:43:08.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.890" endtime="20201112 09:43:08.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.892" endtime="20201112 09:43:08.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.867" endtime="20201112 09:43:08.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.865" endtime="20201112 09:43:08.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.902" endtime="20201112 09:43:09.188"></status>
</kw>
<msg timestamp="20201112 09:43:09.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.901" endtime="20201112 09:43:09.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019596903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.192" endtime="20201112 09:43:09.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.200" endtime="20201112 09:43:09.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.898" endtime="20201112 09:43:09.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.896" endtime="20201112 09:43:09.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.207" level="INFO">${RESULT} = [{'time': 0.019620667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3764000000002505e-05, 'source_diff': 2.3764000000002505e-05}, {'time': 0.019649778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:09.204" endtime="20201112 09:43:09.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.222" level="INFO">${ACCURACY} = {'source_diff': [2.3764000000002505e-05, 2.3763999999999036e-05, 2.3277999999998106e-05, 2.3263999999998536e-05, 2.3820000000000785e-05, 2.3263999999998536e-05, 2.3263999999998536e-05, 2.4263000000000...</msg>
<status status="PASS" starttime="20201112 09:43:09.208" endtime="20201112 09:43:09.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.226" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.225" endtime="20201112 09:43:09.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.228" level="INFO">VALUE: [2.3764000000002505e-05, 2.3763999999999036e-05, 2.3277999999998106e-05, 2.3263999999998536e-05, 2.3820000000000785e-05, 2.3263999999998536e-05, 2.3263999999998536e-05, 2.4263000000000062e-05, 2.32770000000021e-05, 2.3777999999998606e-05, 2.3708000000000756e-05, 2.3763999999999036e-05, 2.3264000000002005e-05, 2.3264000000002005e-05, 2.3263999999998536e-05, 2.3778000000002075e-05, 2.3264000000002005e-05, 2.3278000000001575e-05, 2.3776999999999132e-05, 2.3776999999999132e-05, 2.3749999999999466e-05, 2.4276999999999632e-05, 2.3749999999999466e-05, 2.3249999999998966e-05, 2.3764000000002505e-05, 2.3764000000002505e-05, 2.3778000000002075e-05, 2.320899999999973e-05, 2.3763999999999036e-05, 2.3263999999998536e-05, 2.3777999999998606e-05, 2.3749999999999466e-05, 2.37770000000026e-05, 2.3264000000002005e-05, 2.3777999999998606e-05, 2.3763999999999036e-05, 2.3235999999999396e-05, 2.3264000000002005e-05, 2.3263999999998536e-05, 2.3777999999998606e-05, 2.3263999999998536e-05, 2.4249999999999966e-05, 2.3778000000002075e-05, 2.3263999999998536e-05, 2.4263999999999536e-05, 2.3264000000002005e-05, 2.3763000000003032e-05, 2.4263000000000062e-05, 2.418099999999812e-05, 2.326300000000253e-05]</msg>
<status status="PASS" starttime="20201112 09:43:09.227" endtime="20201112 09:43:09.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.222" endtime="20201112 09:43:09.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.232" endtime="20201112 09:43:09.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.235" endtime="20201112 09:43:09.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.234" endtime="20201112 09:43:09.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.230" endtime="20201112 09:43:09.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.863" endtime="20201112 09:43:09.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.862" endtime="20201112 09:43:09.256"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.265" endtime="20201112 09:43:09.282"></status>
</kw>
<msg timestamp="20201112 09:43:09.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.263" endtime="20201112 09:43:09.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.284" endtime="20201112 09:43:09.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.286" endtime="20201112 09:43:09.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.261" endtime="20201112 09:43:09.289"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.259" endtime="20201112 09:43:09.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.296" endtime="20201112 09:43:09.583"></status>
</kw>
<msg timestamp="20201112 09:43:09.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.295" endtime="20201112 09:43:09.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019548236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.587" endtime="20201112 09:43:09.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.595" endtime="20201112 09:43:09.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.292" endtime="20201112 09:43:09.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.290" endtime="20201112 09:43:09.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.602" level="INFO">${RESULT} = [{'time': 0.019548236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4750000000000466e-05, 'source_diff': 2.4750000000000466e-05}, {'time': 0.019579153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:09.598" endtime="20201112 09:43:09.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.615" level="INFO">${ACCURACY} = {'source_diff': [2.4750000000000466e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4264000000003005e-05, 2.4277999999999106e-05, 2.4790999999999702e-05, 2.4764000000000036e-05, 2.4236000000000...</msg>
<status status="PASS" starttime="20201112 09:43:09.603" endtime="20201112 09:43:09.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.620" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.619" endtime="20201112 09:43:09.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.623" level="INFO">VALUE: [2.4750000000000466e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4264000000003005e-05, 2.4277999999999106e-05, 2.4790999999999702e-05, 2.4764000000000036e-05, 2.4236000000000396e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4292000000002145e-05, 2.420900000000073e-05, 2.4263999999999536e-05, 2.433300000000138e-05, 2.4764000000000036e-05, 2.4693999999998717e-05, 2.4777999999999606e-05, 2.4249999999999966e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4263999999999536e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.470900000000123e-05, 2.4764000000000036e-05, 2.4263999999999536e-05, 2.4263999999999536e-05, 2.4764000000000036e-05, 2.4236000000000396e-05, 2.4320000000001285e-05, 2.4777999999999606e-05, 2.4750000000000466e-05, 2.4736000000000896e-05, 2.4750000000000466e-05, 2.4750000000000466e-05, 2.4264000000003005e-05, 2.4263999999999536e-05, 2.4750000000000466e-05, 2.4764000000000036e-05, 2.4263999999999536e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4777000000000132e-05, 2.4819999999998316e-05, 2.4249999999999966e-05, 2.4764000000000036e-05, 2.4249999999999966e-05, 2.4777000000000132e-05]</msg>
<status status="PASS" starttime="20201112 09:43:09.621" endtime="20201112 09:43:09.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.616" endtime="20201112 09:43:09.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.627" endtime="20201112 09:43:09.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.630" endtime="20201112 09:43:09.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.629" endtime="20201112 09:43:09.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.625" endtime="20201112 09:43:09.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.257" endtime="20201112 09:43:09.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.256" endtime="20201112 09:43:09.651"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.660" endtime="20201112 09:43:09.678"></status>
</kw>
<msg timestamp="20201112 09:43:09.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.658" endtime="20201112 09:43:09.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.679" endtime="20201112 09:43:09.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.682" endtime="20201112 09:43:09.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.655" endtime="20201112 09:43:09.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.653" endtime="20201112 09:43:09.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.691" endtime="20201112 09:43:09.978"></status>
</kw>
<msg timestamp="20201112 09:43:09.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.690" endtime="20201112 09:43:09.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.982" endtime="20201112 09:43:09.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.990" endtime="20201112 09:43:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.687" endtime="20201112 09:43:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.686" endtime="20201112 09:43:09.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.997" level="INFO">${RESULT} = [{'time': 0.019579944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5762999999998093e-05, 'source_diff': 2.5762999999998093e-05}, {'time': 0.019608111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:09.993" endtime="20201112 09:43:09.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.010" level="INFO">${ACCURACY} = {'source_diff': [2.5762999999998093e-05, 2.5750000000001466e-05, 2.5832999999999412e-05, 2.6249999999998497e-05, 2.5750000000001466e-05, 2.5763999999997567e-05, 2.5291999999999676e-05, 2.5250000000000...</msg>
<status status="PASS" starttime="20201112 09:43:09.998" endtime="20201112 09:43:10.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.014" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.013" endtime="20201112 09:43:10.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.017" level="INFO">VALUE: [2.5762999999998093e-05, 2.5750000000001466e-05, 2.5832999999999412e-05, 2.6249999999998497e-05, 2.5750000000001466e-05, 2.5763999999997567e-05, 2.5291999999999676e-05, 2.5250000000000966e-05, 2.5818999999999842e-05, 2.5778000000000606e-05, 2.5278000000000106e-05, 2.5749999999997997e-05, 2.519499999999869e-05, 2.5264000000000536e-05, 2.5263999999997067e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.5262999999997593e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.5264000000000536e-05, 2.52230000000013e-05, 2.5764000000001036e-05, 2.5250000000000966e-05, 2.5263999999997067e-05, 2.5264000000000536e-05, 2.5264000000000536e-05, 2.5735999999998427e-05, 2.5763999999997567e-05, 2.5749999999997997e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.5778000000000606e-05, 2.5264000000000536e-05, 2.5763999999997567e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.5778000000000606e-05, 2.5264000000000536e-05, 2.5263999999997067e-05, 2.5764000000001036e-05, 2.5776999999997663e-05, 2.5278000000000106e-05, 2.5764000000001036e-05, 2.5263000000001062e-05, 2.5264000000000536e-05, 2.5777999999997137e-05, 2.5291999999999676e-05, 2.5332999999998912e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.016" endtime="20201112 09:43:10.018"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.011" endtime="20201112 09:43:10.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.021" endtime="20201112 09:43:10.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.024" endtime="20201112 09:43:10.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.022" endtime="20201112 09:43:10.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.019" endtime="20201112 09:43:10.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.652" endtime="20201112 09:43:10.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.651" endtime="20201112 09:43:10.045"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.053" endtime="20201112 09:43:10.070"></status>
</kw>
<msg timestamp="20201112 09:43:10.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.052" endtime="20201112 09:43:10.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.072" endtime="20201112 09:43:10.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.074" endtime="20201112 09:43:10.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.049" endtime="20201112 09:43:10.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.047" endtime="20201112 09:43:10.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.084" endtime="20201112 09:43:10.370"></status>
</kw>
<msg timestamp="20201112 09:43:10.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019489958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.083" endtime="20201112 09:43:10.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019489958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.374" endtime="20201112 09:43:10.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.382" endtime="20201112 09:43:10.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.080" endtime="20201112 09:43:10.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.078" endtime="20201112 09:43:10.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.389" level="INFO">${RESULT} = [{'time': 0.019489958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6777000000002132e-05, 'source_diff': 2.6777000000002132e-05}, {'time': 0.019519986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:10.386" endtime="20201112 09:43:10.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.403" level="INFO">${ACCURACY} = {'source_diff': [2.6777000000002132e-05, 2.6319000000000342e-05, 2.6777999999998137e-05, 2.6764000000002036e-05, 2.6778000000001606e-05, 2.6735999999999427e-05, 2.6790999999998233e-05, 2.6249999999998...</msg>
<status status="PASS" starttime="20201112 09:43:10.390" endtime="20201112 09:43:10.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.407" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.406" endtime="20201112 09:43:10.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.410" level="INFO">VALUE: [2.6777000000002132e-05, 2.6319000000000342e-05, 2.6777999999998137e-05, 2.6764000000002036e-05, 2.6778000000001606e-05, 2.6735999999999427e-05, 2.6790999999998233e-05, 2.6249999999998497e-05, 2.6278000000001106e-05, 2.6776999999998663e-05, 2.6749999999998997e-05, 2.6763999999998567e-05, 2.7277000000002632e-05, 2.6764000000002036e-05, 2.6764000000002036e-05, 2.6278000000001106e-05, 2.6792000000001176e-05, 2.6846999999999982e-05, 2.6749999999998997e-05, 2.6749999999998997e-05, 2.6749999999998997e-05, 2.6264000000001536e-05, 2.6777999999998137e-05, 2.6764000000002036e-05, 2.6263999999998067e-05, 2.6806000000000746e-05, 2.7263999999999067e-05, 2.6264000000001536e-05, 2.6207999999999787e-05, 2.622299999999883e-05, 2.6764000000002036e-05, 2.6207999999999787e-05, 2.6764000000002036e-05, 2.6749999999998997e-05, 2.6264000000001536e-05, 2.6764000000002036e-05, 2.6264000000001536e-05, 2.6264000000001536e-05, 2.6763999999998567e-05, 2.7263999999999067e-05, 2.6263999999998067e-05, 2.6764000000002036e-05, 2.6764000000002036e-05, 2.6264000000001536e-05, 2.6264000000001536e-05, 2.6277999999997637e-05, 2.6249999999998497e-05, 2.6264000000001536e-05, 2.6278000000001106e-05, 2.6264000000001536e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.408" endtime="20201112 09:43:10.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.403" endtime="20201112 09:43:10.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.413" endtime="20201112 09:43:10.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.416" endtime="20201112 09:43:10.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.415" endtime="20201112 09:43:10.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.411" endtime="20201112 09:43:10.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.046" endtime="20201112 09:43:10.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.045" endtime="20201112 09:43:10.437"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.446" endtime="20201112 09:43:10.463"></status>
</kw>
<msg timestamp="20201112 09:43:10.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.444" endtime="20201112 09:43:10.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.465" endtime="20201112 09:43:10.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.467" endtime="20201112 09:43:10.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.442" endtime="20201112 09:43:10.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.440" endtime="20201112 09:43:10.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.477" endtime="20201112 09:43:10.762"></status>
</kw>
<msg timestamp="20201112 09:43:10.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.475" endtime="20201112 09:43:10.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019611528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.766" endtime="20201112 09:43:10.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.774" endtime="20201112 09:43:10.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.473" endtime="20201112 09:43:10.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.471" endtime="20201112 09:43:10.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.781" level="INFO">${RESULT} = [{'time': 0.019639292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7763999999999567e-05, 'source_diff': 2.7763999999999567e-05}, {'time': 0.019672083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:10.777" endtime="20201112 09:43:10.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.795" level="INFO">${ACCURACY} = {'source_diff': [2.7763999999999567e-05, 2.7263999999999067e-05, 2.7278000000002106e-05, 2.7763999999999567e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7777999999999137e-05, 2.8277999999999...</msg>
<status status="PASS" starttime="20201112 09:43:10.782" endtime="20201112 09:43:10.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.800" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.799" endtime="20201112 09:43:10.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.802" level="INFO">VALUE: [2.7763999999999567e-05, 2.7263999999999067e-05, 2.7278000000002106e-05, 2.7763999999999567e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7777999999999137e-05, 2.8277999999999637e-05, 2.7277999999998637e-05, 2.7778000000002606e-05, 2.7277999999998637e-05, 2.7736000000000427e-05, 2.7235999999999927e-05, 2.7277999999998637e-05, 2.7263999999999067e-05, 2.7264000000002536e-05, 2.7319999999997346e-05, 2.7763999999999567e-05, 2.7736000000000427e-05, 2.7777999999999137e-05, 2.7235999999999927e-05, 2.7749999999999997e-05, 2.7263999999999067e-05, 2.7263999999999067e-05, 2.7249999999999497e-05, 2.7278000000002106e-05, 2.7777999999999137e-05, 2.7763999999999567e-05, 2.7276999999999163e-05, 2.7804999999998803e-05, 2.7249999999999497e-05, 2.772300000000033e-05, 2.7222000000000357e-05, 2.7277000000002632e-05, 2.7277999999998637e-05, 2.7749999999999997e-05, 2.772300000000033e-05, 2.7694000000001717e-05, 2.7763999999999567e-05, 2.7291000000002202e-05, 2.7263999999999067e-05, 2.7834000000000886e-05, 2.8264000000000067e-05, 2.7749999999999997e-05, 2.8236000000000927e-05, 2.7278000000002106e-05, 2.7763999999999567e-05, 2.7249999999999497e-05, 2.7763999999999567e-05, 2.7763999999999567e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.801" endtime="20201112 09:43:10.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.796" endtime="20201112 09:43:10.809"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.811" endtime="20201112 09:43:10.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.815" endtime="20201112 09:43:10.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.813" endtime="20201112 09:43:10.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.809" endtime="20201112 09:43:10.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.438" endtime="20201112 09:43:10.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.438" endtime="20201112 09:43:10.836"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.845" endtime="20201112 09:43:10.861"></status>
</kw>
<msg timestamp="20201112 09:43:10.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.843" endtime="20201112 09:43:10.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.863" endtime="20201112 09:43:10.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.865" endtime="20201112 09:43:10.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.841" endtime="20201112 09:43:10.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.839" endtime="20201112 09:43:10.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.875" endtime="20201112 09:43:11.160"></status>
</kw>
<msg timestamp="20201112 09:43:11.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.874" endtime="20201112 09:43:11.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.165" endtime="20201112 09:43:11.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.173" endtime="20201112 09:43:11.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.871" endtime="20201112 09:43:11.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.869" endtime="20201112 09:43:11.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.179" level="INFO">${RESULT} = [{'time': 0.019667028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8721999999998388e-05, 'source_diff': 2.8721999999998388e-05}, {'time': 0.01969775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:11.176" endtime="20201112 09:43:11.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.193" level="INFO">${ACCURACY} = {'source_diff': [2.8721999999998388e-05, 2.8250000000000497e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8277999999999637e-05, 2.8764000000000567e-05, 2.8722000000001...</msg>
<status status="PASS" starttime="20201112 09:43:11.180" endtime="20201112 09:43:11.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.197" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.196" endtime="20201112 09:43:11.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.200" level="INFO">VALUE: [2.8721999999998388e-05, 2.8250000000000497e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8277999999999637e-05, 2.8764000000000567e-05, 2.8722000000001857e-05, 2.8250000000000497e-05, 2.8763000000001093e-05, 2.8750000000000997e-05, 2.8764000000000567e-05, 2.8263000000000593e-05, 2.8250000000000497e-05, 2.8791999999999707e-05, 2.8764000000000567e-05, 2.8250000000000497e-05, 2.9263999999997597e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.8778000000000137e-05, 2.8250000000000497e-05, 2.8763000000001093e-05, 2.8306000000002246e-05, 2.8764000000000567e-05, 2.8250000000000497e-05, 2.822299999999736e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8764000000000567e-05, 2.8722000000001857e-05, 2.8764000000000567e-05, 2.8749999999997528e-05, 2.8250000000000497e-05, 2.8778000000000137e-05, 2.9249999999998028e-05, 2.9278000000000637e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8777000000000663e-05, 2.8250000000000497e-05, 2.8763999999997097e-05, 2.8263000000000593e-05, 2.8221999999997888e-05, 2.8264000000000067e-05, 2.8222000000001357e-05, 2.8277000000000163e-05, 2.8249999999997027e-05, 2.8820000000002316e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.198" endtime="20201112 09:43:11.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.194" endtime="20201112 09:43:11.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.203" endtime="20201112 09:43:11.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.207" endtime="20201112 09:43:11.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.205" endtime="20201112 09:43:11.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.202" endtime="20201112 09:43:11.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.837" endtime="20201112 09:43:11.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.836" endtime="20201112 09:43:11.227"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.236" endtime="20201112 09:43:11.254"></status>
</kw>
<msg timestamp="20201112 09:43:11.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.234" endtime="20201112 09:43:11.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.255" endtime="20201112 09:43:11.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.258" endtime="20201112 09:43:11.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.232" endtime="20201112 09:43:11.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.230" endtime="20201112 09:43:11.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.268" endtime="20201112 09:43:11.553"></status>
</kw>
<msg timestamp="20201112 09:43:11.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.266" endtime="20201112 09:43:11.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.557" endtime="20201112 09:43:11.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.565" endtime="20201112 09:43:11.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.263" endtime="20201112 09:43:11.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.262" endtime="20201112 09:43:11.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.572" level="INFO">${RESULT} = [{'time': 0.019535042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.922299999999836e-05, 'source_diff': 2.922299999999836e-05}, {'time': 0.019566958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:11.569" endtime="20201112 09:43:11.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.585" level="INFO">${ACCURACY} = {'source_diff': [2.922299999999836e-05, 2.9263999999997597e-05, 2.9778000000001137e-05, 2.9750000000001997e-05, 2.9763000000002093e-05, 2.9264000000001067e-05, 2.9264000000001067e-05, 3.02780000000016...</msg>
<status status="PASS" starttime="20201112 09:43:11.573" endtime="20201112 09:43:11.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.590" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.589" endtime="20201112 09:43:11.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.592" level="INFO">VALUE: [2.922299999999836e-05, 2.9263999999997597e-05, 2.9778000000001137e-05, 2.9750000000001997e-05, 2.9763000000002093e-05, 2.9264000000001067e-05, 2.9264000000001067e-05, 3.0278000000001637e-05, 2.9763999999998098e-05, 2.9764000000001567e-05, 2.9763999999998098e-05, 2.9278000000000637e-05, 2.9292000000000207e-05, 2.9249999999998028e-05, 2.9778000000001137e-05, 2.9764000000001567e-05, 2.9750000000001997e-05, 2.9763999999998098e-05, 2.9735999999998958e-05, 3.0276999999998694e-05, 2.9764000000001567e-05, 2.9222000000002357e-05, 2.9764000000001567e-05, 2.9750000000001997e-05, 2.9764000000001567e-05, 2.9263999999997597e-05, 2.9778000000001137e-05, 2.9749999999998528e-05, 2.9264000000001067e-05, 2.9264000000001067e-05, 2.9249999999998028e-05, 2.9776999999998194e-05, 2.9749999999998528e-05, 2.9264000000001067e-05, 2.918099999999965e-05, 2.9264000000001067e-05, 3.0277999999998167e-05, 2.9264000000001067e-05, 2.9749999999998528e-05, 2.972299999999886e-05, 2.9249999999998028e-05, 2.9764000000001567e-05, 2.9736000000002427e-05, 3.0278000000001637e-05, 2.9778000000001137e-05, 2.9749999999998528e-05, 2.9305000000000303e-05, 2.9278000000000637e-05, 2.9763999999998098e-05, 2.9778000000001137e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.591" endtime="20201112 09:43:11.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.586" endtime="20201112 09:43:11.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.596" endtime="20201112 09:43:11.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.599" endtime="20201112 09:43:11.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.598" endtime="20201112 09:43:11.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.594" endtime="20201112 09:43:11.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.228" endtime="20201112 09:43:11.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.228" endtime="20201112 09:43:11.620"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.629" endtime="20201112 09:43:11.644"></status>
</kw>
<msg timestamp="20201112 09:43:11.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.627" endtime="20201112 09:43:11.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.646" endtime="20201112 09:43:11.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.648" endtime="20201112 09:43:11.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.625" endtime="20201112 09:43:11.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.622" endtime="20201112 09:43:11.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.658" endtime="20201112 09:43:11.943"></status>
</kw>
<msg timestamp="20201112 09:43:11.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.657" endtime="20201112 09:43:11.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019651639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.947" endtime="20201112 09:43:11.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.955" endtime="20201112 09:43:11.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.654" endtime="20201112 09:43:11.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.653" endtime="20201112 09:43:11.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.962" level="INFO">${RESULT} = [{'time': 0.019682417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.077800000000214e-05, 'source_diff': 3.077800000000214e-05}, {'time': 0.019716125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:11.959" endtime="20201112 09:43:11.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.975" level="INFO">${ACCURACY} = {'source_diff': [3.077800000000214e-05, 3.0235999999999458e-05, 3.0264000000002067e-05, 3.0320000000000347e-05, 3.0263000000002593e-05, 3.0278000000001637e-05, 3.0277999999998167e-05, 3.07640000000025...</msg>
<status status="PASS" starttime="20201112 09:43:11.963" endtime="20201112 09:43:11.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.980" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.979" endtime="20201112 09:43:11.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.982" level="INFO">VALUE: [3.077800000000214e-05, 3.0235999999999458e-05, 3.0264000000002067e-05, 3.0320000000000347e-05, 3.0263000000002593e-05, 3.0278000000001637e-05, 3.0277999999998167e-05, 3.076400000000257e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.0263999999998598e-05, 3.0249999999999028e-05, 3.0263999999998598e-05, 3.0263000000002593e-05, 3.0263999999998598e-05, 3.1263000000000124e-05, 3.0263999999998598e-05, 3.125000000000003e-05, 3.0263000000002593e-05, 3.119400000000175e-05, 3.076400000000257e-05, 3.072199999999692e-05, 3.0804999999998334e-05, 3.12639999999996e-05, 3.07639999999991e-05, 3.0263999999998598e-05, 3.0263999999998598e-05, 3.074999999999953e-05, 3.0278000000001637e-05, 3.0277999999998167e-05, 3.0750000000003e-05, 3.077800000000214e-05, 3.0263999999998598e-05, 3.12639999999996e-05, 3.076400000000257e-05, 3.0249999999999028e-05, 3.0249999999999028e-05, 3.076400000000257e-05, 3.0291999999997737e-05, 3.0264000000002067e-05, 3.0250000000002497e-05, 3.0776999999999194e-05, 3.0264000000002067e-05, 3.0263999999998598e-05, 3.0263999999998598e-05, 3.074999999999953e-05, 3.074999999999953e-05, 3.0263999999998598e-05, 3.074999999999953e-05, 3.07639999999991e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.981" endtime="20201112 09:43:11.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.976" endtime="20201112 09:43:11.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.986" endtime="20201112 09:43:11.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.989" endtime="20201112 09:43:12.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.988" endtime="20201112 09:43:12.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.984" endtime="20201112 09:43:12.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.621" endtime="20201112 09:43:12.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.620" endtime="20201112 09:43:12.010"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.019" endtime="20201112 09:43:12.038"></status>
</kw>
<msg timestamp="20201112 09:43:12.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.017" endtime="20201112 09:43:12.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.040" endtime="20201112 09:43:12.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.042" endtime="20201112 09:43:12.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.015" endtime="20201112 09:43:12.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.013" endtime="20201112 09:43:12.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.052" endtime="20201112 09:43:12.337"></status>
</kw>
<msg timestamp="20201112 09:43:12.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019767903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.051" endtime="20201112 09:43:12.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019767903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.342" endtime="20201112 09:43:12.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.350" endtime="20201112 09:43:12.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.048" endtime="20201112 09:43:12.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.046" endtime="20201112 09:43:12.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.357" level="INFO">${RESULT} = [{'time': 0.019767903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.004199999999933e-05, 'source_diff': 7.004199999999933e-05}, {'time': 0.019817986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.353" endtime="20201112 09:43:12.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.371" level="INFO">${ACCURACY} = {'source_diff': [7.004199999999933e-05, 3.5096999999997824e-05, 3.551400000000038e-05, 3.5111000000000864e-05, 3.525000000000056e-05, 3.551400000000038e-05, 3.49450000000015e-05, 3.504200000000249e-05...</msg>
<status status="PASS" starttime="20201112 09:43:12.358" endtime="20201112 09:43:12.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.375" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.374" endtime="20201112 09:43:12.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.378" level="INFO">VALUE: [7.004199999999933e-05, 3.5096999999997824e-05, 3.551400000000038e-05, 3.5111000000000864e-05, 3.525000000000056e-05, 3.551400000000038e-05, 3.49450000000015e-05, 3.504200000000249e-05, 3.544499999999853e-05, 3.55840000000017e-05, 3.5445000000002e-05, 3.5445000000002e-05, 3.502800000000292e-05, 3.498700000000021e-05, 3.558399999999823e-05, 3.552799999999995e-05, 3.524999999999709e-05, 3.495799999999813e-05, 3.525000000000056e-05, 3.5097000000001294e-05, 3.5068999999998685e-05, 3.523600000000099e-05, 3.543000000000296e-05, 3.49580000000016e-05, 3.5083000000001724e-05, 3.5554999999999615e-05, 3.5152999999999573e-05, 3.6860999999999144e-05, 3.5389000000000254e-05, 3.5166999999999143e-05, 3.501399999999988e-05, 3.5319000000002404e-05, 3.6833000000000005e-05, 3.57780000000002e-05, 3.531999999999841e-05, 3.5375000000000684e-05, 3.6888999999998284e-05, 3.681999999999991e-05, 3.6874999999998714e-05, 3.683399999999948e-05, 3.504200000000249e-05, 3.543099999999896e-05, 3.50979999999973e-05, 3.494400000000203e-05, 3.541599999999992e-05, 3.5069000000002154e-05, 3.49719999999977e-05, 3.5653000000000074e-05, 3.6791000000001295e-05, 3.5332999999998504e-05]</msg>
<status status="PASS" starttime="20201112 09:43:12.376" endtime="20201112 09:43:12.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.372" endtime="20201112 09:43:12.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.381" endtime="20201112 09:43:12.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.385" endtime="20201112 09:43:12.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.383" endtime="20201112 09:43:12.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.380" endtime="20201112 09:43:12.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.011" endtime="20201112 09:43:12.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.011" endtime="20201112 09:43:12.406"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.414" endtime="20201112 09:43:12.431"></status>
</kw>
<msg timestamp="20201112 09:43:12.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.413" endtime="20201112 09:43:12.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.433" endtime="20201112 09:43:12.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.435" endtime="20201112 09:43:12.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.410" endtime="20201112 09:43:12.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.408" endtime="20201112 09:43:12.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.445" endtime="20201112 09:43:12.731"></status>
</kw>
<msg timestamp="20201112 09:43:12.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.443" endtime="20201112 09:43:12.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.735" endtime="20201112 09:43:12.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.743" endtime="20201112 09:43:12.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.441" endtime="20201112 09:43:12.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.439" endtime="20201112 09:43:12.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.750" level="INFO">${RESULT} = [{'time': 0.019585097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.092999999999805e-05, 'source_diff': 4.092999999999805e-05}, {'time': 0.019632722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.747" endtime="20201112 09:43:12.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.763" level="INFO">${ACCURACY} = {'source_diff': [4.092999999999805e-05, 3.6110999999998394e-05, 3.6388999999997784e-05, 3.652800000000095e-05, 3.7889000000002754e-05, 3.7819000000001435e-05, 3.620799999999938e-05, 3.6332999999999505...</msg>
<status status="PASS" starttime="20201112 09:43:12.751" endtime="20201112 09:43:12.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.768" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.767" endtime="20201112 09:43:12.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.771" level="INFO">VALUE: [4.092999999999805e-05, 3.6110999999998394e-05, 3.6388999999997784e-05, 3.652800000000095e-05, 3.7889000000002754e-05, 3.7819000000001435e-05, 3.620799999999938e-05, 3.6332999999999505e-05, 3.619499999999928e-05, 3.676399999999816e-05, 3.6430999999999963e-05, 3.601400000000088e-05, 3.609800000000177e-05, 3.6138999999997534e-05, 3.602799999999698e-05, 3.633399999999898e-05, 3.6653000000001074e-05, 3.5916999999999893e-05, 3.6805000000000865e-05, 3.593099999999946e-05, 3.6527000000001475e-05, 3.6139000000001004e-05, 3.673599999999902e-05, 3.6554999999997145e-05, 3.6055000000000115e-05, 3.6318999999999935e-05, 3.6083000000002724e-05, 3.594400000000303e-05, 3.6167000000000143e-05, 3.6569000000000185e-05, 3.6139000000001004e-05, 3.6125000000001434e-05, 3.6068999999999685e-05, 3.670799999999988e-05, 3.6402999999997354e-05, 3.6332999999999505e-05, 3.626400000000113e-05, 3.6375000000001684e-05, 3.633400000000245e-05, 3.601400000000088e-05, 3.7889000000002754e-05, 3.648599999999877e-05, 3.669499999999978e-05, 3.619499999999928e-05, 3.670899999999935e-05, 3.6624999999998464e-05, 3.645799999999963e-05, 3.784800000000005e-05, 3.618000000000024e-05, 3.59580000000026e-05]</msg>
<status status="PASS" starttime="20201112 09:43:12.769" endtime="20201112 09:43:12.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.764" endtime="20201112 09:43:12.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.774" endtime="20201112 09:43:12.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.777" endtime="20201112 09:43:12.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.776" endtime="20201112 09:43:12.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.772" endtime="20201112 09:43:12.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.406" endtime="20201112 09:43:12.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.406" endtime="20201112 09:43:12.798"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.807" endtime="20201112 09:43:12.827"></status>
</kw>
<msg timestamp="20201112 09:43:12.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.805" endtime="20201112 09:43:12.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.828" endtime="20201112 09:43:12.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.831" endtime="20201112 09:43:12.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.803" endtime="20201112 09:43:12.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.801" endtime="20201112 09:43:12.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.841" endtime="20201112 09:43:13.126"></status>
</kw>
<msg timestamp="20201112 09:43:13.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.840" endtime="20201112 09:43:13.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.131" endtime="20201112 09:43:13.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.139" endtime="20201112 09:43:13.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.837" endtime="20201112 09:43:13.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.835" endtime="20201112 09:43:13.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.145" level="INFO">${RESULT} = [{'time': 0.019794806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2167000000002675e-05, 'source_diff': 4.2167000000002675e-05}, {'time': 0.019845417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:13.142" endtime="20201112 09:43:13.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.159" level="INFO">${ACCURACY} = {'source_diff': [4.2167000000002675e-05, 3.7667000000001644e-05, 3.724999999999909e-05, 3.723599999999952e-05, 3.773600000000002e-05, 3.741600000000192e-05, 3.7583000000000755e-05, 3.7181000000000713e...</msg>
<status status="PASS" starttime="20201112 09:43:13.146" endtime="20201112 09:43:13.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.163" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.162" endtime="20201112 09:43:13.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.166" level="INFO">VALUE: [4.2167000000002675e-05, 3.7667000000001644e-05, 3.724999999999909e-05, 3.723599999999952e-05, 3.773600000000002e-05, 3.741600000000192e-05, 3.7583000000000755e-05, 3.7181000000000713e-05, 3.8846999999998105e-05, 3.71659999999982e-05, 3.752800000000195e-05, 3.718000000000124e-05, 3.8819000000002435e-05, 3.751399999999891e-05, 3.745800000000063e-05, 3.694400000000056e-05, 3.774999999999959e-05, 3.8875000000000715e-05, 3.7124999999998964e-05, 3.754199999999805e-05, 3.701399999999841e-05, 3.726399999999866e-05, 3.695800000000013e-05, 3.781999999999744e-05, 3.727799999999823e-05, 3.8860999999997675e-05, 3.751399999999891e-05, 3.726400000000213e-05, 3.69589999999996e-05, 3.75979999999998e-05, 3.726400000000213e-05, 3.8875000000000715e-05, 3.7430999999997494e-05, 3.76659999999987e-05, 3.770900000000035e-05, 3.7138999999998534e-05, 3.7096999999999825e-05, 3.8776999999996786e-05, 3.749999999999934e-05, 3.7333000000000505e-05, 3.744400000000106e-05, 3.744399999999759e-05, 3.7610999999999895e-05, 3.695800000000013e-05, 3.7333000000000505e-05, 3.752799999999848e-05, 3.719400000000081e-05, 3.7402999999998354e-05, 3.694400000000056e-05, 3.7681000000001214e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.164" endtime="20201112 09:43:13.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.160" endtime="20201112 09:43:13.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.169" endtime="20201112 09:43:13.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.173" endtime="20201112 09:43:13.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.171" endtime="20201112 09:43:13.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.168" endtime="20201112 09:43:13.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.799" endtime="20201112 09:43:13.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.799" endtime="20201112 09:43:13.194"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.202" endtime="20201112 09:43:13.219"></status>
</kw>
<msg timestamp="20201112 09:43:13.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.201" endtime="20201112 09:43:13.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.221" endtime="20201112 09:43:13.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.223" endtime="20201112 09:43:13.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.198" endtime="20201112 09:43:13.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.196" endtime="20201112 09:43:13.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.233" endtime="20201112 09:43:13.518"></status>
</kw>
<msg timestamp="20201112 09:43:13.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019655139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.232" endtime="20201112 09:43:13.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019655139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.522" endtime="20201112 09:43:13.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.530" endtime="20201112 09:43:13.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.229" endtime="20201112 09:43:13.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.227" endtime="20201112 09:43:13.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.537" level="INFO">${RESULT} = [{'time': 0.019655139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2680999999999275e-05, 'source_diff': 4.2680999999999275e-05}, {'time': 0.019704806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:13.533" endtime="20201112 09:43:13.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.550" level="INFO">${ACCURACY} = {'source_diff': [4.2680999999999275e-05, 3.8930999999998994e-05, 3.830600000000184e-05, 3.9903000000000854e-05, 3.8445000000001534e-05, 3.980599999999987e-05, 3.872200000000145e-05, 3.8763000000000686...</msg>
<status status="PASS" starttime="20201112 09:43:13.538" endtime="20201112 09:43:13.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.555" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.554" endtime="20201112 09:43:13.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.557" level="INFO">VALUE: [4.2680999999999275e-05, 3.8930999999998994e-05, 3.830600000000184e-05, 3.9903000000000854e-05, 3.8445000000001534e-05, 3.980599999999987e-05, 3.872200000000145e-05, 3.8763000000000686e-05, 3.822199999999748e-05, 3.84720000000012e-05, 3.842999999999902e-05, 3.845800000000163e-05, 3.843000000000249e-05, 3.8083000000001255e-05, 3.9846999999999105e-05, 3.869400000000231e-05, 3.8582999999998285e-05, 3.850000000000034e-05, 3.8597000000001325e-05, 3.9805000000000396e-05, 3.82780000000027e-05, 3.875000000000059e-05, 3.823600000000052e-05, 3.8790999999999826e-05, 3.8388999999999784e-05, 3.823600000000052e-05, 3.8124999999999964e-05, 3.981999999999944e-05, 3.80980000000003e-05, 3.8054999999998645e-05, 3.856999999999819e-05, 3.798699999999974e-05, 3.8124999999999964e-05, 3.8276999999999756e-05, 3.8304999999998895e-05, 3.8375000000000214e-05, 3.850000000000034e-05, 3.8332999999998035e-05, 3.9833000000003005e-05, 3.8138999999999534e-05, 3.870799999999841e-05, 3.799999999999984e-05, 3.855599999999862e-05, 3.843000000000249e-05, 3.8804999999999396e-05, 3.8666999999999174e-05, 3.8138999999999534e-05, 3.875000000000059e-05, 3.7861000000000145e-05, 3.827799999999923e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.556" endtime="20201112 09:43:13.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.551" endtime="20201112 09:43:13.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.561" endtime="20201112 09:43:13.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.564" endtime="20201112 09:43:13.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.562" endtime="20201112 09:43:13.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.559" endtime="20201112 09:43:13.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.194" endtime="20201112 09:43:13.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.194" endtime="20201112 09:43:13.585"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.593" endtime="20201112 09:43:13.611"></status>
</kw>
<msg timestamp="20201112 09:43:13.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.592" endtime="20201112 09:43:13.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.612" endtime="20201112 09:43:13.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.615" endtime="20201112 09:43:13.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.589" endtime="20201112 09:43:13.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.587" endtime="20201112 09:43:13.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.625" endtime="20201112 09:43:13.910"></status>
</kw>
<msg timestamp="20201112 09:43:13.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.623" endtime="20201112 09:43:13.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019595944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.914" endtime="20201112 09:43:13.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.922" endtime="20201112 09:43:13.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.621" endtime="20201112 09:43:13.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.619" endtime="20201112 09:43:13.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.929" level="INFO">${RESULT} = [{'time': 0.019639736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.379200000000083e-05, 'source_diff': 4.379200000000083e-05}, {'time': 0.019689403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:13.926" endtime="20201112 09:43:13.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.944" level="INFO">${ACCURACY} = {'source_diff': [4.379200000000083e-05, 3.94720000000022e-05, 3.8958999999998134e-05, 3.948600000000177e-05, 3.9389000000000784e-05, 3.906999999999869e-05, 3.9097000000001825e-05, 3.9694999999999314e-...</msg>
<status status="PASS" starttime="20201112 09:43:13.930" endtime="20201112 09:43:13.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.948" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.947" endtime="20201112 09:43:13.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.950" level="INFO">VALUE: [4.379200000000083e-05, 3.94720000000022e-05, 3.8958999999998134e-05, 3.948600000000177e-05, 3.9389000000000784e-05, 3.906999999999869e-05, 3.9097000000001825e-05, 3.9694999999999314e-05, 3.9374999999997745e-05, 3.9194999999998814e-05, 3.9304999999999896e-05, 3.9166999999999674e-05, 3.9776999999997786e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.9361000000001645e-05, 3.894400000000256e-05, 3.966599999999723e-05, 3.9596999999998855e-05, 3.902799999999998e-05, 3.895799999999866e-05, 3.9054999999999646e-05, 3.902799999999998e-05, 3.898600000000127e-05, 3.926399999999719e-05, 3.9068999999999215e-05, 3.925000000000109e-05, 3.9444999999999064e-05, 3.9403000000000354e-05, 3.9195000000002284e-05, 3.9223000000001423e-05, 3.901400000000041e-05, 3.9624999999997995e-05, 4.0902999999998385e-05, 3.974999999999812e-05, 3.9596999999998855e-05, 3.955600000000309e-05, 3.951399999999744e-05, 3.926400000000066e-05, 4.088799999999934e-05, 3.9068999999999215e-05, 3.9347000000002075e-05, 3.9125000000000965e-05, 3.976400000000116e-05, 3.9625000000001465e-05, 3.9403000000000354e-05, 3.975000000000159e-05, 3.898600000000127e-05, 3.970799999999941e-05, 3.9791000000000826e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.949" endtime="20201112 09:43:13.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.944" endtime="20201112 09:43:13.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.954" endtime="20201112 09:43:13.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.957" endtime="20201112 09:43:13.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.956" endtime="20201112 09:43:13.977"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.952" endtime="20201112 09:43:13.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.586" endtime="20201112 09:43:13.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.585" endtime="20201112 09:43:13.978"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.987" endtime="20201112 09:43:14.005"></status>
</kw>
<msg timestamp="20201112 09:43:14.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.985" endtime="20201112 09:43:14.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.007" endtime="20201112 09:43:14.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.009" endtime="20201112 09:43:14.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.983" endtime="20201112 09:43:14.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.981" endtime="20201112 09:43:14.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.019" endtime="20201112 09:43:14.305"></status>
</kw>
<msg timestamp="20201112 09:43:14.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019505625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.017" endtime="20201112 09:43:14.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019461014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019505625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.309" endtime="20201112 09:43:14.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.318" endtime="20201112 09:43:14.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.015" endtime="20201112 09:43:14.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.013" endtime="20201112 09:43:14.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.324" level="INFO">${RESULT} = [{'time': 0.019505625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4610999999999956e-05, 'source_diff': 4.4610999999999956e-05}, {'time': 0.01955925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:14.321" endtime="20201112 09:43:14.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.338" level="INFO">${ACCURACY} = {'source_diff': [4.4610999999999956e-05, 4.0653000000001605e-05, 3.9903000000000854e-05, 4.1902999999999385e-05, 4.057000000000019e-05, 4.0819000000000966e-05, 4.001399999999794e-05, 4.024999999999862...</msg>
<status status="PASS" starttime="20201112 09:43:14.325" endtime="20201112 09:43:14.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.342" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.341" endtime="20201112 09:43:14.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.345" level="INFO">VALUE: [4.4610999999999956e-05, 4.0653000000001605e-05, 3.9903000000000854e-05, 4.1902999999999385e-05, 4.057000000000019e-05, 4.0819000000000966e-05, 4.001399999999794e-05, 4.024999999999862e-05, 4.0082999999999785e-05, 4.0596999999999855e-05, 4.000000000000184e-05, 4.0082999999999785e-05, 4.184799999999711e-05, 4.1832999999998066e-05, 4.1861000000000675e-05, 4.0639000000002035e-05, 4.0375000000002215e-05, 4.020799999999991e-05, 4.08059999999974e-05, 3.994400000000009e-05, 4.1888999999999815e-05, 3.997199999999923e-05, 4.068000000000127e-05, 4.019400000000034e-05, 4.0319000000000466e-05, 4.027800000000123e-05, 4.1888999999999815e-05, 4.0458999999999634e-05, 4.0124999999998495e-05, 4.183400000000101e-05, 4.0708999999999884e-05, 4.0445000000000064e-05, 3.9930999999999994e-05, 4.051399999999844e-05, 4.184799999999711e-05, 4.0375000000002215e-05, 4.191599999999948e-05, 4.0596999999999855e-05, 4.1875000000000245e-05, 4.040200000000188e-05, 4.1818999999998496e-05, 4.1875000000000245e-05, 4.077800000000173e-05, 4.052800000000148e-05, 4.0583000000000286e-05, 4.052799999999801e-05, 4.0569000000000716e-05, 4.019400000000034e-05, 4.069400000000084e-05, 4.076400000000216e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.343" endtime="20201112 09:43:14.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.339" endtime="20201112 09:43:14.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.348" endtime="20201112 09:43:14.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.352" endtime="20201112 09:43:14.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.350" endtime="20201112 09:43:14.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.347" endtime="20201112 09:43:14.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.979" endtime="20201112 09:43:14.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.979" endtime="20201112 09:43:14.372"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.381" endtime="20201112 09:43:14.400"></status>
</kw>
<msg timestamp="20201112 09:43:14.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.379" endtime="20201112 09:43:14.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.402" endtime="20201112 09:43:14.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.404" endtime="20201112 09:43:14.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.377" endtime="20201112 09:43:14.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.375" endtime="20201112 09:43:14.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.414" endtime="20201112 09:43:14.699"></status>
</kw>
<msg timestamp="20201112 09:43:14.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019566139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.413" endtime="20201112 09:43:14.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019566139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.703" endtime="20201112 09:43:14.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.711" endtime="20201112 09:43:14.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.410" endtime="20201112 09:43:14.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.408" endtime="20201112 09:43:14.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.718" level="INFO">${RESULT} = [{'time': 0.019566139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.723599999999911e-05, 'source_diff': 4.723599999999911e-05}, {'time': 0.019620792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:14.715" endtime="20201112 09:43:14.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.731" level="INFO">${ACCURACY} = {'source_diff': [4.723599999999911e-05, 4.2889000000000815e-05, 4.1445000000001064e-05, 4.152799999999901e-05, 4.176399999999969e-05, 4.108400000000026e-05, 4.132000000000094e-05, 4.16119999999999e-05...</msg>
<status status="PASS" starttime="20201112 09:43:14.719" endtime="20201112 09:43:14.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.736" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.735" endtime="20201112 09:43:14.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.738" level="INFO">VALUE: [4.723599999999911e-05, 4.2889000000000815e-05, 4.1445000000001064e-05, 4.152799999999901e-05, 4.176399999999969e-05, 4.108400000000026e-05, 4.132000000000094e-05, 4.16119999999999e-05, 4.288799999999787e-05, 4.2846999999998636e-05, 4.102799999999851e-05, 4.1054999999998176e-05, 4.2875000000001245e-05, 4.102799999999851e-05, 4.1568999999998246e-05, 4.151399999999944e-05, 4.1068999999997746e-05, 4.1166999999998205e-05, 4.1638999999999565e-05, 4.175000000000012e-05, 4.176300000000022e-05, 4.1708999999997415e-05, 4.101399999999894e-05, 4.0930999999997525e-05, 4.1667000000002175e-05, 4.099999999999937e-05, 4.143000000000202e-05, 4.1347000000000605e-05, 4.0959000000000134e-05, 4.124999999999962e-05, 4.1402999999998885e-05, 4.281999999999897e-05, 4.1180999999997775e-05, 4.163800000000009e-05, 4.120799999999744e-05, 4.145800000000116e-05, 4.165199999999966e-05, 4.1026999999999036e-05, 4.1041000000002076e-05, 4.120800000000091e-05, 4.1638999999999565e-05, 4.1402999999998885e-05, 4.1624999999999995e-05, 4.1152999999998635e-05, 4.123600000000005e-05, 4.1333000000001036e-05, 4.145800000000116e-05, 4.126399999999919e-05, 4.105600000000112e-05, 4.1666999999998705e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.737" endtime="20201112 09:43:14.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.732" endtime="20201112 09:43:14.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.742" endtime="20201112 09:43:14.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.745" endtime="20201112 09:43:14.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.744" endtime="20201112 09:43:14.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.740" endtime="20201112 09:43:14.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.373" endtime="20201112 09:43:14.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.373" endtime="20201112 09:43:14.766"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.774" endtime="20201112 09:43:14.793"></status>
</kw>
<msg timestamp="20201112 09:43:14.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.773" endtime="20201112 09:43:14.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.794" endtime="20201112 09:43:14.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.797" endtime="20201112 09:43:14.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.770" endtime="20201112 09:43:14.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.768" endtime="20201112 09:43:14.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.807" endtime="20201112 09:43:15.092"></status>
</kw>
<msg timestamp="20201112 09:43:15.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.805" endtime="20201112 09:43:15.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.097" endtime="20201112 09:43:15.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.105" endtime="20201112 09:43:15.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.803" endtime="20201112 09:43:15.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.801" endtime="20201112 09:43:15.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.112" level="INFO">${RESULT} = [{'time': 0.019585389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6333000000002567e-05, 'source_diff': 4.6333000000002567e-05}, {'time': 0.019640014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:15.108" endtime="20201112 09:43:15.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.125" level="INFO">${ACCURACY} = {'source_diff': [4.6333000000002567e-05, 4.3889000000001815e-05, 4.2152999999999635e-05, 4.248599999999783e-05, 4.1944999999998095e-05, 4.381999999999997e-05, 4.2444999999998595e-05, 4.268099999999927...</msg>
<status status="PASS" starttime="20201112 09:43:15.113" endtime="20201112 09:43:15.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.130" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.128" endtime="20201112 09:43:15.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.132" level="INFO">VALUE: [4.6333000000002567e-05, 4.3889000000001815e-05, 4.2152999999999635e-05, 4.248599999999783e-05, 4.1944999999998095e-05, 4.381999999999997e-05, 4.2444999999998595e-05, 4.2680999999999275e-05, 4.2195000000001814e-05, 4.2223000000000954e-05, 4.277800000000026e-05, 4.397199999999976e-05, 4.250000000000087e-05, 4.2125000000000495e-05, 4.201300000000047e-05, 4.3861000000002676e-05, 4.238800000000084e-05, 4.197200000000123e-05, 4.192999999999905e-05, 4.2583000000002286e-05, 4.2597000000001856e-05, 4.2804999999999926e-05, 4.23059999999989e-05, 4.255599999999915e-05, 4.244399999999912e-05, 4.3833000000000066e-05, 4.2096999999997886e-05, 4.1931000000001994e-05, 4.2167000000002675e-05, 4.2610999999997956e-05, 4.251400000000044e-05, 4.276400000000069e-05, 4.19860000000008e-05, 4.256999999999872e-05, 4.2389000000000315e-05, 4.259800000000133e-05, 4.2277000000000287e-05, 4.3875000000002246e-05, 4.222200000000148e-05, 4.225000000000062e-05, 4.2040999999999606e-05, 4.19860000000008e-05, 4.219400000000234e-05, 4.247200000000173e-05, 4.2152999999999635e-05, 4.2583000000002286e-05, 4.2111000000000925e-05, 4.192999999999905e-05, 4.2361000000001175e-05, 4.201399999999994e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.131" endtime="20201112 09:43:15.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.126" endtime="20201112 09:43:15.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.136" endtime="20201112 09:43:15.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.139" endtime="20201112 09:43:15.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.137" endtime="20201112 09:43:15.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.134" endtime="20201112 09:43:15.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.767" endtime="20201112 09:43:15.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.766" endtime="20201112 09:43:15.160"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.168" endtime="20201112 09:43:15.188"></status>
</kw>
<msg timestamp="20201112 09:43:15.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.167" endtime="20201112 09:43:15.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.190" endtime="20201112 09:43:15.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.192" endtime="20201112 09:43:15.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.164" endtime="20201112 09:43:15.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.162" endtime="20201112 09:43:15.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.202" endtime="20201112 09:43:15.488"></status>
</kw>
<msg timestamp="20201112 09:43:15.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019570597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.201" endtime="20201112 09:43:15.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019570597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.493" endtime="20201112 09:43:15.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.501" endtime="20201112 09:43:15.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.198" endtime="20201112 09:43:15.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.196" endtime="20201112 09:43:15.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.507" level="INFO">${RESULT} = [{'time': 0.019570597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.738899999999838e-05, 'source_diff': 4.738899999999838e-05}, {'time': 0.019625264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:15.504" endtime="20201112 09:43:15.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.522" level="INFO">${ACCURACY} = {'source_diff': [4.738899999999838e-05, 4.300000000000137e-05, 4.354200000000058e-05, 4.3596999999999386e-05, 4.372199999999951e-05, 4.327799999999729e-05, 4.3360999999998706e-05, 4.3625000000001996e-...</msg>
<status status="PASS" starttime="20201112 09:43:15.508" endtime="20201112 09:43:15.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.526" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.525" endtime="20201112 09:43:15.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.529" level="INFO">VALUE: [4.738899999999838e-05, 4.300000000000137e-05, 4.354200000000058e-05, 4.3596999999999386e-05, 4.372199999999951e-05, 4.327799999999729e-05, 4.3360999999998706e-05, 4.3625000000001996e-05, 4.3388999999997846e-05, 4.300000000000137e-05, 4.3388999999997846e-05, 4.4874999999999776e-05, 4.348599999999883e-05, 4.327799999999729e-05, 4.351300000000197e-05, 4.291600000000048e-05, 4.294399999999962e-05, 4.3305000000000426e-05, 4.341600000000098e-05, 4.4847000000000636e-05, 4.372199999999951e-05, 4.373600000000255e-05, 4.3582999999999816e-05, 4.376399999999822e-05, 4.326399999999772e-05, 4.3068999999999746e-05, 4.306999999999922e-05, 4.370799999999994e-05, 4.302799999999704e-05, 4.482000000000097e-05, 4.3360999999998706e-05, 4.3458999999999165e-05, 4.326400000000119e-05, 4.480599999999793e-05, 4.484800000000011e-05, 4.359800000000233e-05, 4.302800000000051e-05, 4.3694999999999845e-05, 4.313799999999812e-05, 4.3139000000001065e-05, 4.490200000000291e-05, 4.3611000000002426e-05, 4.48329999999976e-05, 4.3318999999999996e-05, 4.4833000000001066e-05, 4.369400000000037e-05, 4.4861000000000206e-05, 4.300000000000137e-05, 4.379199999999736e-05, 4.307000000000269e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.527" endtime="20201112 09:43:15.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.523" endtime="20201112 09:43:15.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.532" endtime="20201112 09:43:15.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.536" endtime="20201112 09:43:15.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.534" endtime="20201112 09:43:15.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.531" endtime="20201112 09:43:15.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.161" endtime="20201112 09:43:15.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.160" endtime="20201112 09:43:15.556"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.565" endtime="20201112 09:43:15.585"></status>
</kw>
<msg timestamp="20201112 09:43:15.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.563" endtime="20201112 09:43:15.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.586" endtime="20201112 09:43:15.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.589" endtime="20201112 09:43:15.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.561" endtime="20201112 09:43:15.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.559" endtime="20201112 09:43:15.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.599" endtime="20201112 09:43:15.884"></status>
</kw>
<msg timestamp="20201112 09:43:15.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019469931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019519069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.597" endtime="20201112 09:43:15.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019469931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019519069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.888" endtime="20201112 09:43:15.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.897" endtime="20201112 09:43:15.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.595" endtime="20201112 09:43:15.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.593" endtime="20201112 09:43:15.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.904" level="INFO">${RESULT} = [{'time': 0.019519069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.913800000000065e-05, 'source_diff': 4.913800000000065e-05}, {'time': 0.019575708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:15.900" endtime="20201112 09:43:15.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.917" level="INFO">${ACCURACY} = {'source_diff': [4.913800000000065e-05, 4.472200000000051e-05, 4.4333000000000566e-05, 4.420800000000044e-05, 4.4374999999999276e-05, 4.440199999999894e-05, 4.401399999999847e-05, 4.429199999999786e-0...</msg>
<status status="PASS" starttime="20201112 09:43:15.905" endtime="20201112 09:43:15.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.921" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.920" endtime="20201112 09:43:15.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.924" level="INFO">VALUE: [4.913800000000065e-05, 4.472200000000051e-05, 4.4333000000000566e-05, 4.420800000000044e-05, 4.4374999999999276e-05, 4.440199999999894e-05, 4.401399999999847e-05, 4.429199999999786e-05, 4.4652999999998666e-05, 4.456899999999778e-05, 4.5847000000001636e-05, 4.4138999999998596e-05, 4.404200000000108e-05, 4.4208999999999915e-05, 4.4125000000002496e-05, 4.474999999999965e-05, 4.4847000000000636e-05, 4.457000000000072e-05, 4.3931000000000525e-05, 4.4667000000001705e-05, 4.420800000000044e-05, 4.4403000000001885e-05, 4.4208999999999915e-05, 4.450000000000287e-05, 4.404200000000108e-05, 4.476299999999975e-05, 4.4139000000002065e-05, 4.39999999999989e-05, 4.5833000000002067e-05, 4.4583000000000816e-05, 4.429200000000133e-05, 4.4569000000001247e-05, 4.474999999999965e-05, 4.470800000000094e-05, 4.46800000000018e-05, 4.4681000000001275e-05, 4.58060000000024e-05, 4.426399999999872e-05, 4.5931000000002525e-05, 4.426400000000219e-05, 4.4445000000000595e-05, 4.4722999999999985e-05, 4.429199999999786e-05, 4.452800000000201e-05, 4.4124999999999026e-05, 4.469400000000137e-05, 4.5861000000001206e-05, 4.477699999999932e-05, 4.467999999999833e-05, 4.590200000000044e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.923" endtime="20201112 09:43:15.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.918" endtime="20201112 09:43:15.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.931" endtime="20201112 09:43:15.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.935" endtime="20201112 09:43:15.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.933" endtime="20201112 09:43:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.930" endtime="20201112 09:43:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.557" endtime="20201112 09:43:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.557" endtime="20201112 09:43:15.956"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.964" endtime="20201112 09:43:15.983"></status>
</kw>
<msg timestamp="20201112 09:43:15.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.963" endtime="20201112 09:43:15.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.984" endtime="20201112 09:43:15.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.987" endtime="20201112 09:43:15.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.960" endtime="20201112 09:43:15.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.958" endtime="20201112 09:43:15.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.996" endtime="20201112 09:43:16.282"></status>
</kw>
<msg timestamp="20201112 09:43:16.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.995" endtime="20201112 09:43:16.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.286" endtime="20201112 09:43:16.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.294" endtime="20201112 09:43:16.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.992" endtime="20201112 09:43:16.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.991" endtime="20201112 09:43:16.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.301" level="INFO">${RESULT} = [{'time': 0.019574625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.933299999999863e-05, 'source_diff': 4.933299999999863e-05}, {'time': 0.019632264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.298" endtime="20201112 09:43:16.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.314" level="INFO">${ACCURACY} = {'source_diff': [4.933299999999863e-05, 4.5195000000001345e-05, 4.684699999999917e-05, 4.501399999999947e-05, 4.6903000000000916e-05, 4.4945000000001095e-05, 4.5223000000000485e-05, 4.533400000000104e...</msg>
<status status="PASS" starttime="20201112 09:43:16.302" endtime="20201112 09:43:16.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.319" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.318" endtime="20201112 09:43:16.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.321" level="INFO">VALUE: [4.933299999999863e-05, 4.5195000000001345e-05, 4.684699999999917e-05, 4.501399999999947e-05, 4.6903000000000916e-05, 4.4945000000001095e-05, 4.5223000000000485e-05, 4.533400000000104e-05, 4.530599999999843e-05, 4.556999999999825e-05, 4.681900000000003e-05, 4.555599999999868e-05, 4.502699999999957e-05, 4.551399999999997e-05, 4.49999999999999e-05, 4.540199999999994e-05, 4.6903000000000916e-05, 4.5347000000001136e-05, 4.4917000000001955e-05, 4.516599999999926e-05, 4.5069000000001747e-05, 4.494399999999815e-05, 4.5375000000000276e-05, 4.5138999999999596e-05, 4.693000000000058e-05, 4.5195000000001345e-05, 4.5138999999999596e-05, 4.5444999999998126e-05, 4.5375000000000276e-05, 4.6903000000000916e-05, 4.5459000000001165e-05, 4.5722999999997516e-05, 4.5209000000000915e-05, 4.5013e-05, 4.5195000000001345e-05, 4.51939999999984e-05, 4.515199999999969e-05, 4.565200000000019e-05, 4.545800000000169e-05, 4.68329999999996e-05, 4.555499999999921e-05, 4.49999999999999e-05, 4.525000000000015e-05, 4.494400000000162e-05, 4.495800000000119e-05, 4.545800000000169e-05, 4.5652999999999666e-05, 4.577799999999979e-05, 4.5861000000001206e-05, 4.683400000000254e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.320" endtime="20201112 09:43:16.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.315" endtime="20201112 09:43:16.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.325" endtime="20201112 09:43:16.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.328" endtime="20201112 09:43:16.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.327" endtime="20201112 09:43:16.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.323" endtime="20201112 09:43:16.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.956" endtime="20201112 09:43:16.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.956" endtime="20201112 09:43:16.349"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.357" endtime="20201112 09:43:16.377"></status>
</kw>
<msg timestamp="20201112 09:43:16.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.356" endtime="20201112 09:43:16.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.378" endtime="20201112 09:43:16.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.381" endtime="20201112 09:43:16.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.353" endtime="20201112 09:43:16.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.351" endtime="20201112 09:43:16.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.391" endtime="20201112 09:43:16.676"></status>
</kw>
<msg timestamp="20201112 09:43:16.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.389" endtime="20201112 09:43:16.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.680" endtime="20201112 09:43:16.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.688" endtime="20201112 09:43:16.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.387" endtime="20201112 09:43:16.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.385" endtime="20201112 09:43:16.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.695" level="INFO">${RESULT} = [{'time': 0.019589458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.058299999999988e-05, 'source_diff': 5.058299999999988e-05}, {'time': 0.019649181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:16.692" endtime="20201112 09:43:16.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.708" level="INFO">${ACCURACY} = {'source_diff': [5.058299999999988e-05, 4.629200000000333e-05, 4.6139000000000596e-05, 4.656899999999978e-05, 4.5930999999999056e-05, 4.6347000000002136e-05, 4.780600000000093e-05, 4.654200000000011e-...</msg>
<status status="PASS" starttime="20201112 09:43:16.696" endtime="20201112 09:43:16.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.713" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.712" endtime="20201112 09:43:16.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.715" level="INFO">VALUE: [5.058299999999988e-05, 4.629200000000333e-05, 4.6139000000000596e-05, 4.656899999999978e-05, 4.5930999999999056e-05, 4.6347000000002136e-05, 4.780600000000093e-05, 4.654200000000011e-05, 4.624999999999768e-05, 4.608400000000179e-05, 4.676399999999775e-05, 4.6180999999999306e-05, 4.787499999999931e-05, 4.612499999999756e-05, 4.6403000000000416e-05, 4.652700000000107e-05, 4.61939999999994e-05, 4.626400000000072e-05, 4.601400000000047e-05, 4.7889000000002346e-05, 4.66529999999972e-05, 4.637499999999781e-05, 4.784700000000017e-05, 4.608299999999885e-05, 4.656899999999978e-05, 4.60000000000009e-05, 4.662499999999806e-05, 4.6416999999999986e-05, 4.617999999999983e-05, 4.657000000000272e-05, 4.786099999999974e-05, 4.6680999999999806e-05, 4.6459000000002165e-05, 4.6611000000001956e-05, 4.612499999999756e-05, 4.5930999999999056e-05, 4.662499999999806e-05, 4.6319999999999e-05, 4.6153000000000166e-05, 4.78200000000005e-05, 4.627700000000082e-05, 4.6139000000000596e-05, 4.676399999999775e-05, 4.661099999999849e-05, 4.672199999999904e-05, 4.656899999999978e-05, 4.656899999999978e-05, 4.649999999999793e-05, 4.6125000000001026e-05, 4.6653000000000666e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.714" endtime="20201112 09:43:16.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.709" endtime="20201112 09:43:16.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.719" endtime="20201112 09:43:16.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.722" endtime="20201112 09:43:16.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.721" endtime="20201112 09:43:16.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.717" endtime="20201112 09:43:16.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.350" endtime="20201112 09:43:16.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.349" endtime="20201112 09:43:16.743"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.751" endtime="20201112 09:43:16.771"></status>
</kw>
<msg timestamp="20201112 09:43:16.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.750" endtime="20201112 09:43:16.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.772" endtime="20201112 09:43:16.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.775" endtime="20201112 09:43:16.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.747" endtime="20201112 09:43:16.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.745" endtime="20201112 09:43:16.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.785" endtime="20201112 09:43:17.071"></status>
</kw>
<msg timestamp="20201112 09:43:17.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.783" endtime="20201112 09:43:17.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.075" endtime="20201112 09:43:17.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.084" endtime="20201112 09:43:17.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.781" endtime="20201112 09:43:17.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.779" endtime="20201112 09:43:17.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.090" level="INFO">${RESULT} = [{'time': 0.019601583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.181899999999809e-05, 'source_diff': 5.181899999999809e-05}, {'time': 0.019662236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.087" endtime="20201112 09:43:17.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.104" level="INFO">${ACCURACY} = {'source_diff': [5.181899999999809e-05, 4.720799999999997e-05, 4.88330000000016e-05, 4.883299999999813e-05, 4.694400000000015e-05, 4.757000000000025e-05, 4.736099999999924e-05, 4.883400000000107e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:17.091" endtime="20201112 09:43:17.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.109" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.108" endtime="20201112 09:43:17.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.111" level="INFO">VALUE: [5.181899999999809e-05, 4.720799999999997e-05, 4.88330000000016e-05, 4.883299999999813e-05, 4.694400000000015e-05, 4.757000000000025e-05, 4.736099999999924e-05, 4.883400000000107e-05, 4.706999999999975e-05, 4.6931000000000056e-05, 4.730600000000043e-05, 4.741599999999804e-05, 4.7431000000000556e-05, 4.702800000000104e-05, 4.7625000000002526e-05, 4.722199999999954e-05, 4.734799999999914e-05, 4.745800000000022e-05, 4.886100000000074e-05, 4.7013999999998e-05, 4.887500000000031e-05, 4.772200000000004e-05, 4.708299999999985e-05, 4.770800000000047e-05, 4.770800000000047e-05, 4.888899999999988e-05, 4.754200000000111e-05, 4.7153000000001166e-05, 4.756900000000078e-05, 4.698599999999886e-05, 4.7375000000002276e-05, 4.712499999999856e-05, 4.7139000000001596e-05, 4.725000000000215e-05, 4.733399999999957e-05, 4.7708999999999946e-05, 4.886100000000074e-05, 4.7389000000001846e-05, 4.713799999999865e-05, 4.88880000000004e-05, 4.738899999999838e-05, 4.738899999999838e-05, 4.756900000000078e-05, 4.706900000000028e-05, 4.70000000000019e-05, 4.769399999999743e-05, 4.887500000000031e-05, 4.7013999999998e-05, 4.738899999999838e-05, 4.887500000000031e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.110" endtime="20201112 09:43:17.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.105" endtime="20201112 09:43:17.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.115" endtime="20201112 09:43:17.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.118" endtime="20201112 09:43:17.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.117" endtime="20201112 09:43:17.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.113" endtime="20201112 09:43:17.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.744" endtime="20201112 09:43:17.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.743" endtime="20201112 09:43:17.139"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.148" endtime="20201112 09:43:17.166"></status>
</kw>
<msg timestamp="20201112 09:43:17.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.146" endtime="20201112 09:43:17.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.168" endtime="20201112 09:43:17.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.170" endtime="20201112 09:43:17.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.144" endtime="20201112 09:43:17.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.142" endtime="20201112 09:43:17.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.180" endtime="20201112 09:43:17.465"></status>
</kw>
<msg timestamp="20201112 09:43:17.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019727278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:17.179" endtime="20201112 09:43:17.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019727278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:17.469" endtime="20201112 09:43:17.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.477" endtime="20201112 09:43:17.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.176" endtime="20201112 09:43:17.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.174" endtime="20201112 09:43:17.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.484" level="INFO">${RESULT} = [{'time': 0.019727278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.30280000000001e-05, 'source_diff': 5.30280000000001e-05}, {'time': 0.019785944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:17.481" endtime="20201112 09:43:17.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.497" level="INFO">${ACCURACY} = {'source_diff': [5.30280000000001e-05, 4.816599999999879e-05, 4.986099999999827e-05, 4.80269999999991e-05, 4.866599999999929e-05, 4.81940000000014e-05, 4.854099999999917e-05, 4.805499999999824e-05, 4....</msg>
<status status="PASS" starttime="20201112 09:43:17.485" endtime="20201112 09:43:17.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.502" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.501" endtime="20201112 09:43:17.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.504" level="INFO">VALUE: [5.30280000000001e-05, 4.816599999999879e-05, 4.986099999999827e-05, 4.80269999999991e-05, 4.866599999999929e-05, 4.81940000000014e-05, 4.854099999999917e-05, 4.805499999999824e-05, 4.845799999999775e-05, 4.851400000000297e-05, 4.808300000000085e-05, 4.855499999999874e-05, 4.867999999999886e-05, 4.827799999999882e-05, 4.861100000000049e-05, 4.858299999999788e-05, 4.990299999999698e-05, 4.807000000000075e-05, 4.8375000000003276e-05, 4.855599999999821e-05, 4.833400000000057e-05, 4.858400000000082e-05, 4.980599999999946e-05, 4.824999999999968e-05, 4.813799999999965e-05, 4.857000000000125e-05, 4.837499999999981e-05, 4.804200000000161e-05, 4.840199999999947e-05, 4.808300000000085e-05, 4.812499999999956e-05, 4.811099999999999e-05, 4.858300000000135e-05, 4.805499999999824e-05, 4.840299999999895e-05, 4.848600000000036e-05, 4.88200000000015e-05, 4.824999999999968e-05, 4.86529999999992e-05, 4.795800000000072e-05, 4.8013999999999e-05, 4.877799999999932e-05, 4.830500000000196e-05, 4.858399999999735e-05, 4.7945000000000626e-05, 4.7959000000000196e-05, 4.8695000000001376e-05, 4.988899999999741e-05, 4.8707999999998e-05, 4.809700000000042e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.503" endtime="20201112 09:43:17.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.498" endtime="20201112 09:43:17.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.508" endtime="20201112 09:43:17.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.511" endtime="20201112 09:43:17.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.510" endtime="20201112 09:43:17.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.506" endtime="20201112 09:43:17.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.140" endtime="20201112 09:43:17.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.140" endtime="20201112 09:43:17.532"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.541" endtime="20201112 09:43:17.560"></status>
</kw>
<msg timestamp="20201112 09:43:17.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.539" endtime="20201112 09:43:17.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.562" endtime="20201112 09:43:17.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.564" endtime="20201112 09:43:17.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.536" endtime="20201112 09:43:17.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.534" endtime="20201112 09:43:17.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.574" endtime="20201112 09:43:17.861"></status>
</kw>
<msg timestamp="20201112 09:43:17.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:17.573" endtime="20201112 09:43:17.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:17.865" endtime="20201112 09:43:17.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.873" endtime="20201112 09:43:17.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.570" endtime="20201112 09:43:17.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.568" endtime="20201112 09:43:17.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.880" level="INFO">${RESULT} = [{'time': 0.019780944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3944000000000214e-05, 'source_diff': 5.3944000000000214e-05}, {'time': 0.019841583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:17.877" endtime="20201112 09:43:17.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.893" level="INFO">${ACCURACY} = {'source_diff': [5.3944000000000214e-05, 4.95140000000005e-05, 4.909700000000142e-05, 4.937499999999734e-05, 4.955499999999974e-05, 4.909699999999795e-05, 5.087500000000231e-05, 5.08469999999997e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:17.881" endtime="20201112 09:43:17.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.898" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.897" endtime="20201112 09:43:17.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.901" level="INFO">VALUE: [5.3944000000000214e-05, 4.95140000000005e-05, 4.909700000000142e-05, 4.937499999999734e-05, 4.955499999999974e-05, 4.909699999999795e-05, 5.087500000000231e-05, 5.08469999999997e-05, 4.933299999999863e-05, 4.933299999999863e-05, 4.8945000000001626e-05, 4.916699999999927e-05, 5.079200000000089e-05, 4.936100000000124e-05, 4.907000000000175e-05, 5.08339999999996e-05, 4.930600000000243e-05, 4.938900000000038e-05, 5.088900000000188e-05, 4.925000000000068e-05, 4.9195000000001876e-05, 4.937500000000081e-05, 4.931899999999906e-05, 4.905599999999871e-05, 4.929099999999992e-05, 4.933299999999863e-05, 4.962500000000106e-05, 4.916699999999927e-05, 4.918099999999884e-05, 4.91529999999997e-05, 4.902800000000304e-05, 4.906899999999881e-05, 4.926400000000025e-05, 5.088900000000188e-05, 4.970800000000247e-05, 4.938900000000038e-05, 4.937500000000081e-05, 4.912499999999709e-05, 4.898600000000086e-05, 4.973599999999814e-05, 4.923600000000111e-05, 4.900000000000043e-05, 4.977700000000085e-05, 4.9707999999999e-05, 4.9388000000000903e-05, 4.919399999999893e-05, 4.904199999999914e-05, 4.977800000000032e-05, 4.941600000000004e-05, 4.934700000000167e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.899" endtime="20201112 09:43:17.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.894" endtime="20201112 09:43:17.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.904" endtime="20201112 09:43:17.905"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.907" endtime="20201112 09:43:17.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.906" endtime="20201112 09:43:17.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.902" endtime="20201112 09:43:17.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.533" endtime="20201112 09:43:17.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.532" endtime="20201112 09:43:17.928"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.937" endtime="20201112 09:43:17.957"></status>
</kw>
<msg timestamp="20201112 09:43:17.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.935" endtime="20201112 09:43:17.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.958" endtime="20201112 09:43:17.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.961" endtime="20201112 09:43:17.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.933" endtime="20201112 09:43:17.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.931" endtime="20201112 09:43:17.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.971" endtime="20201112 09:43:18.255"></status>
</kw>
<msg timestamp="20201112 09:43:18.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019757389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01981175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:17.969" endtime="20201112 09:43:18.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019757389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01981175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:18.259" endtime="20201112 09:43:18.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.267" endtime="20201112 09:43:18.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.967" endtime="20201112 09:43:18.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.965" endtime="20201112 09:43:18.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.274" level="INFO">${RESULT} = [{'time': 0.01981175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.43609999999993e-05, 'source_diff': 5.43609999999993e-05}, {'time': 0.019872389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:18.271" endtime="20201112 09:43:18.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.287" level="INFO">${ACCURACY} = {'source_diff': [5.43609999999993e-05, 4.997200000000229e-05, 4.997199999999882e-05, 5.061099999999902e-05, 5.031999999999953e-05, 5.077800000000132e-05, 5.009799999999842e-05, 5.052800000000107e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:18.275" endtime="20201112 09:43:18.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.292" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.291" endtime="20201112 09:43:18.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.294" level="INFO">VALUE: [5.43609999999993e-05, 4.997200000000229e-05, 4.997199999999882e-05, 5.061099999999902e-05, 5.031999999999953e-05, 5.077800000000132e-05, 5.009799999999842e-05, 5.052800000000107e-05, 5.045799999999975e-05, 5.0014000000001e-05, 5.031900000000006e-05, 5.00270000000011e-05, 5.013900000000113e-05, 5.187499999999984e-05, 4.993000000000011e-05, 5.036099999999877e-05, 5.059699999999945e-05, 5.000000000000143e-05, 5.072199999999957e-05, 5.02079999999995e-05, 5.000000000000143e-05, 5.073599999999914e-05, 5.038900000000138e-05, 4.993099999999959e-05, 5.05279999999976e-05, 4.993099999999959e-05, 5.016700000000027e-05, 5.0165999999997324e-05, 5.038899999999791e-05, 5.188900000000288e-05, 5.181899999999809e-05, 5.076400000000175e-05, 5.050000000000193e-05, 5.044400000000018e-05, 5.013900000000113e-05, 5.038899999999791e-05, 5.181899999999809e-05, 5.065299999999773e-05, 4.993000000000011e-05, 5.029200000000039e-05, 5.074999999999871e-05, 5.031999999999953e-05, 5.183300000000113e-05, 5.052800000000107e-05, 5.191700000000202e-05, 5.076399999999828e-05, 5.188899999999941e-05, 5.020899999999898e-05, 5.019499999999941e-05, 5.012500000000156e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.293" endtime="20201112 09:43:18.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.288" endtime="20201112 09:43:18.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.298" endtime="20201112 09:43:18.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.301" endtime="20201112 09:43:18.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.299" endtime="20201112 09:43:18.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.296" endtime="20201112 09:43:18.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.929" endtime="20201112 09:43:18.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.929" endtime="20201112 09:43:18.322"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.330" endtime="20201112 09:43:18.350"></status>
</kw>
<msg timestamp="20201112 09:43:18.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.329" endtime="20201112 09:43:18.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.351" endtime="20201112 09:43:18.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.354" endtime="20201112 09:43:18.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.326" endtime="20201112 09:43:18.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.324" endtime="20201112 09:43:18.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.364" endtime="20201112 09:43:18.650"></status>
</kw>
<msg timestamp="20201112 09:43:18.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019570972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:18.362" endtime="20201112 09:43:18.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019570972, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:18.654" endtime="20201112 09:43:18.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.662" endtime="20201112 09:43:18.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.360" endtime="20201112 09:43:18.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.358" endtime="20201112 09:43:18.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.669" level="INFO">${RESULT} = [{'time': 0.019570972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5971999999997885e-05, 'source_diff': 5.5971999999997885e-05}, {'time': 0.019633597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:18.666" endtime="20201112 09:43:18.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.683" level="INFO">${ACCURACY} = {'source_diff': [5.5971999999997885e-05, 5.129099999999845e-05, 5.10279999999981e-05, 5.112499999999909e-05, 5.109699999999995e-05, 5.131900000000106e-05, 5.157000000000078e-05, 5.123599999999964e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:18.670" endtime="20201112 09:43:18.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.688" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.687" endtime="20201112 09:43:18.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.690" level="INFO">VALUE: [5.5971999999997885e-05, 5.129099999999845e-05, 5.10279999999981e-05, 5.112499999999909e-05, 5.109699999999995e-05, 5.131900000000106e-05, 5.157000000000078e-05, 5.123599999999964e-05, 5.100000000000243e-05, 5.137499999999934e-05, 5.28340000000016e-05, 5.111199999999899e-05, 5.158400000000035e-05, 5.143100000000109e-05, 5.12080000000005e-05, 5.097199999999982e-05, 5.145800000000075e-05, 5.172200000000057e-05, 5.1429999999998144e-05, 5.1666000000002293e-05, 5.144400000000118e-05, 5.111099999999952e-05, 5.144400000000118e-05, 5.123599999999964e-05, 5.151399999999903e-05, 5.132000000000053e-05, 5.108299999999691e-05, 5.11530000000017e-05, 5.290299999999998e-05, 5.179100000000242e-05, 5.107000000000028e-05, 5.120899999999998e-05, 5.151399999999903e-05, 5.137499999999934e-05, 5.138900000000238e-05, 5.138900000000238e-05, 5.155599999999774e-05, 5.124999999999921e-05, 5.122200000000007e-05, 5.165299999999873e-05, 5.127799999999835e-05, 5.125000000000268e-05, 5.143000000000161e-05, 5.172200000000057e-05, 5.165299999999873e-05, 5.116700000000127e-05, 5.288900000000041e-05, 5.113900000000213e-05, 5.28470000000017e-05, 5.149999999999946e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.689" endtime="20201112 09:43:18.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.684" endtime="20201112 09:43:18.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.694" endtime="20201112 09:43:18.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.697" endtime="20201112 09:43:18.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.696" endtime="20201112 09:43:18.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.692" endtime="20201112 09:43:18.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.323" endtime="20201112 09:43:18.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.322" endtime="20201112 09:43:18.718"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.726" endtime="20201112 09:43:18.746"></status>
</kw>
<msg timestamp="20201112 09:43:18.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.725" endtime="20201112 09:43:18.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.748" endtime="20201112 09:43:18.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.750" endtime="20201112 09:43:18.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.722" endtime="20201112 09:43:18.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.720" endtime="20201112 09:43:18.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.760" endtime="20201112 09:43:19.046"></status>
</kw>
<msg timestamp="20201112 09:43:19.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019424319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.759" endtime="20201112 09:43:19.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019424319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.051" endtime="20201112 09:43:19.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.059" endtime="20201112 09:43:19.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.756" endtime="20201112 09:43:19.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.754" endtime="20201112 09:43:19.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.065" level="INFO">${RESULT} = [{'time': 0.019481236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.691700000000008e-05, 'source_diff': 5.691700000000008e-05}, {'time': 0.019545889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:19.062" endtime="20201112 09:43:19.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.079" level="INFO">${ACCURACY} = {'source_diff': [5.691700000000008e-05, 5.251400000000003e-05, 5.197200000000082e-05, 5.276400000000028e-05, 5.201399999999953e-05, 5.272300000000105e-05, 5.262499999999712e-05, 5.209699999999748e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:19.066" endtime="20201112 09:43:19.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.083" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.082" endtime="20201112 09:43:19.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.086" level="INFO">VALUE: [5.691700000000008e-05, 5.251400000000003e-05, 5.197200000000082e-05, 5.276400000000028e-05, 5.201399999999953e-05, 5.272300000000105e-05, 5.262499999999712e-05, 5.209699999999748e-05, 5.23479999999972e-05, 5.241700000000252e-05, 5.255499999999927e-05, 5.211099999999705e-05, 5.2693999999998964e-05, 5.198600000000039e-05, 5.2679999999999394e-05, 5.2763999999996813e-05, 5.2430000000002613e-05, 5.276400000000028e-05, 5.2680000000002863e-05, 5.255499999999927e-05, 5.387499999999837e-05, 5.218099999999837e-05, 5.387499999999837e-05, 5.381999999999956e-05, 5.390300000000098e-05, 5.269499999999844e-05, 5.3971999999999354e-05, 5.208400000000085e-05, 5.257000000000178e-05, 5.281999999999856e-05, 5.2708000000002e-05, 5.2207999999998034e-05, 5.22080000000015e-05, 5.258300000000188e-05, 5.233300000000163e-05, 5.1957999999997784e-05, 5.222200000000107e-05, 5.258299999999841e-05, 5.390300000000098e-05, 5.212500000000009e-05, 5.240299999999948e-05, 5.20279999999991e-05, 5.195800000000125e-05, 5.243100000000209e-05, 5.219400000000193e-05, 5.390300000000098e-05, 5.202800000000257e-05, 5.283299999999866e-05, 5.208400000000085e-05, 5.193099999999812e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.084" endtime="20201112 09:43:19.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.080" endtime="20201112 09:43:19.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.089" endtime="20201112 09:43:19.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.093" endtime="20201112 09:43:19.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.091" endtime="20201112 09:43:19.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.088" endtime="20201112 09:43:19.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.719" endtime="20201112 09:43:19.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.718" endtime="20201112 09:43:19.113"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.122" endtime="20201112 09:43:19.140"></status>
</kw>
<msg timestamp="20201112 09:43:19.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.120" endtime="20201112 09:43:19.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.142" endtime="20201112 09:43:19.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.144" endtime="20201112 09:43:19.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.118" endtime="20201112 09:43:19.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.116" endtime="20201112 09:43:19.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.154" endtime="20201112 09:43:19.441"></status>
</kw>
<msg timestamp="20201112 09:43:19.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019488014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.153" endtime="20201112 09:43:19.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019488014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.445" endtime="20201112 09:43:19.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.453" endtime="20201112 09:43:19.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.150" endtime="20201112 09:43:19.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.149" endtime="20201112 09:43:19.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.460" level="INFO">${RESULT} = [{'time': 0.019545583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.75689999999969e-05, 'source_diff': 5.75689999999969e-05}, {'time': 0.019612236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:19.457" endtime="20201112 09:43:19.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.473" level="INFO">${ACCURACY} = {'source_diff': [5.75689999999969e-05, 5.336100000000177e-05, 5.377800000000085e-05, 5.381900000000009e-05, 5.4791999999997953e-05, 5.375000000000171e-05, 5.300000000000096e-05, 5.336100000000177e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:19.461" endtime="20201112 09:43:19.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.478" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.477" endtime="20201112 09:43:19.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.480" level="INFO">VALUE: [5.75689999999969e-05, 5.336100000000177e-05, 5.377800000000085e-05, 5.381900000000009e-05, 5.4791999999997953e-05, 5.375000000000171e-05, 5.300000000000096e-05, 5.336100000000177e-05, 5.312500000000109e-05, 5.293100000000259e-05, 5.300000000000096e-05, 5.359799999999845e-05, 5.3735999999998674e-05, 5.344500000000266e-05, 5.369499999999944e-05, 5.306999999999881e-05, 5.307000000000228e-05, 5.31669999999998e-05, 5.3179999999999894e-05, 5.356999999999931e-05, 5.2957999999998784e-05, 5.3249999999997744e-05, 5.355599999999974e-05, 5.3680000000000394e-05, 5.363899999999769e-05, 5.3457999999999284e-05, 5.3249999999997744e-05, 5.337499999999787e-05, 5.319499999999894e-05, 5.363900000000116e-05, 5.309700000000195e-05, 5.308399999999838e-05, 5.361099999999855e-05, 5.305499999999977e-05, 5.487500000000284e-05, 5.48609999999998e-05, 5.2957999999998784e-05, 5.363899999999769e-05, 5.481899999999762e-05, 5.3763999999997814e-05, 5.3443999999999714e-05, 5.3430000000000144e-05, 5.484700000000023e-05, 5.337499999999787e-05, 5.3443999999999714e-05, 5.336100000000177e-05, 5.488900000000241e-05, 5.338900000000091e-05, 5.295900000000173e-05, 5.368099999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.479" endtime="20201112 09:43:19.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.474" endtime="20201112 09:43:19.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.484" endtime="20201112 09:43:19.485"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.487" endtime="20201112 09:43:19.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.486" endtime="20201112 09:43:19.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.482" endtime="20201112 09:43:19.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.114" endtime="20201112 09:43:19.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.114" endtime="20201112 09:43:19.508"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.516" endtime="20201112 09:43:19.536"></status>
</kw>
<msg timestamp="20201112 09:43:19.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.515" endtime="20201112 09:43:19.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.537" endtime="20201112 09:43:19.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.540" endtime="20201112 09:43:19.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.512" endtime="20201112 09:43:19.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.510" endtime="20201112 09:43:19.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.550" endtime="20201112 09:43:19.835"></status>
</kw>
<msg timestamp="20201112 09:43:19.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.548" endtime="20201112 09:43:19.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019542667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019601292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.840" endtime="20201112 09:43:19.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.848" endtime="20201112 09:43:19.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.545" endtime="20201112 09:43:19.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.544" endtime="20201112 09:43:19.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.854" level="INFO">${RESULT} = [{'time': 0.019601292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.862499999999965e-05, 'source_diff': 5.862499999999965e-05}, {'time': 0.019667931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:19.851" endtime="20201112 09:43:19.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.868" level="INFO">${ACCURACY} = {'source_diff': [5.862499999999965e-05, 5.4013999999998064e-05, 5.477699999999891e-05, 5.39869999999984e-05, 5.434699999999973e-05, 5.3916000000001074e-05, 5.465300000000173e-05, 5.3999999999998494e-0...</msg>
<status status="PASS" starttime="20201112 09:43:19.855" endtime="20201112 09:43:19.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.872" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.871" endtime="20201112 09:43:19.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.875" level="INFO">VALUE: [5.862499999999965e-05, 5.4013999999998064e-05, 5.477699999999891e-05, 5.39869999999984e-05, 5.434699999999973e-05, 5.3916000000001074e-05, 5.465300000000173e-05, 5.3999999999998494e-05, 5.412499999999862e-05, 5.46670000000013e-05, 5.463899999999869e-05, 5.400000000000196e-05, 5.418100000000037e-05, 5.391700000000055e-05, 5.4541999999997703e-05, 5.401400000000153e-05, 5.451400000000203e-05, 5.4263999999998314e-05, 5.4763999999998814e-05, 5.463899999999869e-05, 5.391700000000055e-05, 5.408399999999938e-05, 5.4443999999997245e-05, 5.437499999999887e-05, 5.427800000000135e-05, 5.408299999999991e-05, 5.4277999999997883e-05, 5.456900000000084e-05, 5.4665999999998355e-05, 5.4485999999999424e-05, 5.427800000000135e-05, 5.3930000000000644e-05, 5.3957999999999784e-05, 5.475000000000271e-05, 5.429200000000092e-05, 5.587500000000037e-05, 5.393100000000012e-05, 5.4444000000000714e-05, 5.588899999999994e-05, 5.432000000000006e-05, 5.412499999999862e-05, 5.395899999999926e-05, 5.4651999999998785e-05, 5.425000000000221e-05, 5.461100000000302e-05, 5.434699999999973e-05, 5.4499999999998994e-05, 5.4458000000000284e-05, 5.427800000000135e-05, 5.4235999999999174e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.873" endtime="20201112 09:43:19.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.869" endtime="20201112 09:43:19.876"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.878" endtime="20201112 09:43:19.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.882" endtime="20201112 09:43:19.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.880" endtime="20201112 09:43:19.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.876" endtime="20201112 09:43:19.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.509" endtime="20201112 09:43:19.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.508" endtime="20201112 09:43:19.902"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.911" endtime="20201112 09:43:19.930"></status>
</kw>
<msg timestamp="20201112 09:43:19.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.909" endtime="20201112 09:43:19.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.931" endtime="20201112 09:43:19.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.934" endtime="20201112 09:43:19.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.907" endtime="20201112 09:43:19.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.905" endtime="20201112 09:43:19.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.944" endtime="20201112 09:43:20.228"></status>
</kw>
<msg timestamp="20201112 09:43:20.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.942" endtime="20201112 09:43:20.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019614375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.233" endtime="20201112 09:43:20.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.241" endtime="20201112 09:43:20.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.939" endtime="20201112 09:43:20.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.938" endtime="20201112 09:43:20.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.247" level="INFO">${RESULT} = [{'time': 0.019674028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.965299999999979e-05, 'source_diff': 5.965299999999979e-05}, {'time': 0.019742708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:20.244" endtime="20201112 09:43:20.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.262" level="INFO">${ACCURACY} = {'source_diff': [5.965299999999979e-05, 5.501400000000253e-05, 5.566699999999883e-05, 5.53480000000002e-05, 5.505600000000124e-05, 5.51809999999979e-05, 5.551300000000009e-05, 5.538899999999944e-05, 5...</msg>
<status status="PASS" starttime="20201112 09:43:20.249" endtime="20201112 09:43:20.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.266" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.265" endtime="20201112 09:43:20.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.269" level="INFO">VALUE: [5.965299999999979e-05, 5.501400000000253e-05, 5.566699999999883e-05, 5.53480000000002e-05, 5.505600000000124e-05, 5.51809999999979e-05, 5.551300000000009e-05, 5.538899999999944e-05, 5.4958000000000784e-05, 5.5499999999999994e-05, 5.508300000000091e-05, 5.5194000000001464e-05, 5.5277999999998884e-05, 5.5499999999999994e-05, 5.68749999999979e-05, 5.494500000000069e-05, 5.531999999999759e-05, 5.563899999999969e-05, 5.5708000000001534e-05, 5.5763999999999814e-05, 5.568100000000187e-05, 5.6805999999999524e-05, 5.5513999999999564e-05, 5.500000000000296e-05, 5.5137999999999715e-05, 5.501299999999959e-05, 5.4999999999999494e-05, 5.5194000000001464e-05, 5.563899999999969e-05, 5.5486000000000424e-05, 5.679099999999701e-05, 5.5193999999997995e-05, 5.508299999999744e-05, 5.5457999999997815e-05, 5.5693999999998495e-05, 5.6902000000001035e-05, 5.569500000000144e-05, 5.5041999999998203e-05, 5.543100000000162e-05, 5.688899999999747e-05, 5.497299999999983e-05, 5.561100000000055e-05, 5.570900000000101e-05, 5.683299999999919e-05, 5.68749999999979e-05, 5.523699999999965e-05, 5.5222000000000604e-05, 5.5137999999999715e-05, 5.5527999999999134e-05, 5.5722000000001104e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.267" endtime="20201112 09:43:20.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.263" endtime="20201112 09:43:20.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.272" endtime="20201112 09:43:20.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.276" endtime="20201112 09:43:20.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.274" endtime="20201112 09:43:20.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.271" endtime="20201112 09:43:20.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.903" endtime="20201112 09:43:20.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.903" endtime="20201112 09:43:20.296"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.305" endtime="20201112 09:43:20.325"></status>
</kw>
<msg timestamp="20201112 09:43:20.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.303" endtime="20201112 09:43:20.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.326" endtime="20201112 09:43:20.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.329" endtime="20201112 09:43:20.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.301" endtime="20201112 09:43:20.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.299" endtime="20201112 09:43:20.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.339" endtime="20201112 09:43:20.625"></status>
</kw>
<msg timestamp="20201112 09:43:20.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019499972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.337" endtime="20201112 09:43:20.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019499972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019561167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.629" endtime="20201112 09:43:20.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.637" endtime="20201112 09:43:20.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.335" endtime="20201112 09:43:20.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.333" endtime="20201112 09:43:20.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.644" level="INFO">${RESULT} = [{'time': 0.019561167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1195e-05, 'source_diff': 6.1195e-05}, {'time': 0.019631778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.691700000000008e-...</msg>
<status status="PASS" starttime="20201112 09:43:20.640" endtime="20201112 09:43:20.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.657" level="INFO">${ACCURACY} = {'source_diff': [6.1195e-05, 5.691700000000008e-05, 5.661100000000155e-05, 5.640300000000001e-05, 5.647300000000133e-05, 5.6555999999999274e-05, 5.6250000000000744e-05, 5.6749999999997774e-05, 5.67640...</msg>
<status status="PASS" starttime="20201112 09:43:20.645" endtime="20201112 09:43:20.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.661" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.660" endtime="20201112 09:43:20.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.664" level="INFO">VALUE: [6.1195e-05, 5.691700000000008e-05, 5.661100000000155e-05, 5.640300000000001e-05, 5.647300000000133e-05, 5.6555999999999274e-05, 5.6250000000000744e-05, 5.6749999999997774e-05, 5.6764000000000814e-05, 5.6778000000000384e-05, 5.6763999999997344e-05, 5.634699999999826e-05, 5.6430000000003144e-05, 5.637500000000087e-05, 5.619500000000194e-05, 5.662500000000112e-05, 5.608299999999844e-05, 5.6027999999999634e-05, 5.609700000000148e-05, 5.7833999999999663e-05, 5.666699999999983e-05, 5.6819999999999093e-05, 5.64870000000009e-05, 5.6236000000001174e-05, 5.790300000000151e-05, 5.595900000000126e-05, 5.6193999999998995e-05, 5.626300000000084e-05, 5.6235999999997704e-05, 5.654100000000023e-05, 5.6778000000000384e-05, 5.6041999999999204e-05, 5.6193999999998995e-05, 5.6000000000000494e-05, 5.6014000000000064e-05, 5.6778000000000384e-05, 5.6000000000000494e-05, 5.6193999999998995e-05, 5.615299999999976e-05, 5.6055999999998773e-05, 5.6764000000000814e-05, 5.670900000000201e-05, 5.6236000000001174e-05, 5.6778000000000384e-05, 5.6027999999999634e-05, 5.78749999999989e-05, 5.594500000000169e-05, 5.5971999999997885e-05, 5.6791999999999954e-05, 5.606899999999887e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.663" endtime="20201112 09:43:20.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.658" endtime="20201112 09:43:20.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.667" endtime="20201112 09:43:20.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.671" endtime="20201112 09:43:20.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.669" endtime="20201112 09:43:20.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.666" endtime="20201112 09:43:20.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.297" endtime="20201112 09:43:20.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.297" endtime="20201112 09:43:20.692"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.700" endtime="20201112 09:43:20.719"></status>
</kw>
<msg timestamp="20201112 09:43:20.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.699" endtime="20201112 09:43:20.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.720" endtime="20201112 09:43:20.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.723" endtime="20201112 09:43:20.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.696" endtime="20201112 09:43:20.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.694" endtime="20201112 09:43:20.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.733" endtime="20201112 09:43:21.019"></status>
</kw>
<msg timestamp="20201112 09:43:21.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019562944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019624458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.731" endtime="20201112 09:43:21.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019562944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019624458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.023" endtime="20201112 09:43:21.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.032" endtime="20201112 09:43:21.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.729" endtime="20201112 09:43:21.034"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.727" endtime="20201112 09:43:21.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.038" level="INFO">${RESULT} = [{'time': 0.019624458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.15140000000021e-05, 'source_diff': 6.15140000000021e-05}, {'time': 0.019696111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:21.035" endtime="20201112 09:43:21.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.052" level="INFO">${ACCURACY} = {'source_diff': [6.15140000000021e-05, 5.7735999999999205e-05, 5.706899999999987e-05, 5.734699999999926e-05, 5.765300000000126e-05, 5.708299999999944e-05, 5.711099999999858e-05, 5.7778000000001384e-05...</msg>
<status status="PASS" starttime="20201112 09:43:21.039" endtime="20201112 09:43:21.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.056" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.055" endtime="20201112 09:43:21.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.059" level="INFO">VALUE: [6.15140000000021e-05, 5.7735999999999205e-05, 5.706899999999987e-05, 5.734699999999926e-05, 5.765300000000126e-05, 5.708299999999944e-05, 5.711099999999858e-05, 5.7778000000001384e-05, 5.741700000000058e-05, 5.7028000000000634e-05, 5.694499999999922e-05, 5.7235999999998705e-05, 5.6971999999998885e-05, 5.691700000000008e-05, 5.7583999999999413e-05, 5.763899999999822e-05, 5.781899999999715e-05, 5.702699999999769e-05, 5.7457999999999815e-05, 5.711100000000205e-05, 5.709700000000248e-05, 5.6943999999999745e-05, 5.7708000000000065e-05, 5.738900000000144e-05, 5.6957999999999315e-05, 5.693099999999965e-05, 5.738900000000144e-05, 5.738900000000144e-05, 5.8833999999997194e-05, 5.7749999999998775e-05, 5.88749999999999e-05, 5.7250000000001744e-05, 5.780499999999758e-05, 5.8834000000000664e-05, 5.752700000000166e-05, 5.881900000000162e-05, 5.7042000000000204e-05, 5.7180000000000425e-05, 5.777699999999844e-05, 5.781900000000062e-05, 5.7513999999998094e-05, 5.7708000000000065e-05, 5.7499999999998525e-05, 5.890300000000251e-05, 5.713899999999772e-05, 5.708299999999944e-05, 5.7806000000000524e-05, 5.7014000000001064e-05, 5.8833999999997194e-05, 5.741700000000058e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.057" endtime="20201112 09:43:21.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.052" endtime="20201112 09:43:21.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.066" endtime="20201112 09:43:21.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.069" endtime="20201112 09:43:21.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.068" endtime="20201112 09:43:21.089"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.064" endtime="20201112 09:43:21.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.693" endtime="20201112 09:43:21.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.692" endtime="20201112 09:43:21.090"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.099" endtime="20201112 09:43:21.117"></status>
</kw>
<msg timestamp="20201112 09:43:21.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.097" endtime="20201112 09:43:21.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.118" endtime="20201112 09:43:21.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.121" endtime="20201112 09:43:21.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.094" endtime="20201112 09:43:21.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.092" endtime="20201112 09:43:21.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.131" endtime="20201112 09:43:21.415"></status>
</kw>
<msg timestamp="20201112 09:43:21.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.129" endtime="20201112 09:43:21.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.420" endtime="20201112 09:43:21.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.428" endtime="20201112 09:43:21.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.127" endtime="20201112 09:43:21.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.125" endtime="20201112 09:43:21.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.435" level="INFO">${RESULT} = [{'time': 0.019740028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.418099999999996e-05, 'source_diff': 6.418099999999996e-05}, {'time': 0.019808681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:21.431" endtime="20201112 09:43:21.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.448" level="INFO">${ACCURACY} = {'source_diff': [6.418099999999996e-05, 5.809800000000295e-05, 5.820900000000004e-05, 5.8444000000001245e-05, 5.85550000000018e-05, 5.805499999999783e-05, 5.862500000000312e-05, 5.83749999999994e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:21.435" endtime="20201112 09:43:21.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.452" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.451" endtime="20201112 09:43:21.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.455" level="INFO">VALUE: [6.418099999999996e-05, 5.809800000000295e-05, 5.820900000000004e-05, 5.8444000000001245e-05, 5.85550000000018e-05, 5.805499999999783e-05, 5.862500000000312e-05, 5.83749999999994e-05, 5.993099999999918e-05, 5.8708000000001065e-05, 5.843099999999768e-05, 5.986100000000133e-05, 5.838899999999897e-05, 5.8485999999999955e-05, 5.8528000000002134e-05, 5.9819999999998624e-05, 5.8499999999999525e-05, 5.8291999999997984e-05, 5.8693999999998026e-05, 5.8500000000002994e-05, 5.8166000000001855e-05, 5.8806000000001524e-05, 5.9888000000000996e-05, 5.9902000000000566e-05, 5.8320000000000594e-05, 5.879099999999901e-05, 5.858300000000094e-05, 5.841699999999811e-05, 5.843100000000115e-05, 5.8542000000001704e-05, 5.98750000000009e-05, 5.863899999999922e-05, 5.8320000000000594e-05, 5.858300000000094e-05, 5.990300000000004e-05, 5.8499999999999525e-05, 5.820900000000004e-05, 5.8278000000001884e-05, 5.8292000000001454e-05, 5.8014000000002064e-05, 5.841700000000158e-05, 5.8472000000000385e-05, 5.811099999999958e-05, 5.8764000000002814e-05, 5.852699999999919e-05, 5.8694000000001495e-05, 5.856900000000137e-05, 5.8444000000001245e-05, 5.8694000000001495e-05, 5.8222000000000135e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.453" endtime="20201112 09:43:21.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.449" endtime="20201112 09:43:21.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.458" endtime="20201112 09:43:21.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.462" endtime="20201112 09:43:21.481"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.460" endtime="20201112 09:43:21.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.457" endtime="20201112 09:43:21.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.091" endtime="20201112 09:43:21.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.090" endtime="20201112 09:43:21.483"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.491" endtime="20201112 09:43:21.509"></status>
</kw>
<msg timestamp="20201112 09:43:21.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.490" endtime="20201112 09:43:21.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.511" endtime="20201112 09:43:21.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.513" endtime="20201112 09:43:21.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.487" endtime="20201112 09:43:21.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.485" endtime="20201112 09:43:21.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.523" endtime="20201112 09:43:21.809"></status>
</kw>
<msg timestamp="20201112 09:43:21.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.522" endtime="20201112 09:43:21.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.813" endtime="20201112 09:43:21.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.822" endtime="20201112 09:43:21.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.519" endtime="20201112 09:43:21.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.518" endtime="20201112 09:43:21.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.828" level="INFO">${RESULT} = [{'time': 0.019670903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.362500000000118e-05, 'source_diff': 6.362500000000118e-05}, {'time': 0.019742528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:21.825" endtime="20201112 09:43:21.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.842" level="INFO">${ACCURACY} = {'source_diff': [6.362500000000118e-05, 5.9013999999999595e-05, 5.9083999999997444e-05, 5.9319999999998124e-05, 5.9750000000000775e-05, 6.0819999999999624e-05, 5.926300000000037e-05, 5.925000000000027...</msg>
<status status="PASS" starttime="20201112 09:43:21.829" endtime="20201112 09:43:21.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.847" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.846" endtime="20201112 09:43:21.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.849" level="INFO">VALUE: [6.362500000000118e-05, 5.9013999999999595e-05, 5.9083999999997444e-05, 5.9319999999998124e-05, 5.9750000000000775e-05, 6.0819999999999624e-05, 5.926300000000037e-05, 5.9250000000000275e-05, 5.9305999999998554e-05, 5.933300000000169e-05, 5.9500000000000525e-05, 5.9514000000000095e-05, 5.933299999999822e-05, 6.084699999999929e-05, 5.938899999999997e-05, 5.9749999999997305e-05, 5.9277999999999414e-05, 6.083299999999972e-05, 5.973700000000068e-05, 5.897300000000036e-05, 5.9541999999999234e-05, 5.962500000000065e-05, 5.9027999999999164e-05, 5.9514000000000095e-05, 5.912500000000015e-05, 5.9749999999997305e-05, 5.9666000000003355e-05, 5.911100000000058e-05, 5.912499999999668e-05, 5.936100000000083e-05, 5.9514000000000095e-05, 6.083299999999972e-05, 5.90689999999984e-05, 5.931900000000212e-05, 5.9750000000000775e-05, 5.9028000000002634e-05, 5.9263999999999845e-05, 5.9334000000001164e-05, 5.9277999999999414e-05, 5.9028000000002634e-05, 5.947300000000086e-05, 5.9570000000001844e-05, 5.913899999999972e-05, 5.952700000000019e-05, 5.962500000000065e-05, 5.9320000000001594e-05, 5.958299999999847e-05, 5.963899999999675e-05, 5.9527999999999665e-05, 5.9014000000003064e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.848" endtime="20201112 09:43:21.850"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.843" endtime="20201112 09:43:21.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.853" endtime="20201112 09:43:21.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.856" endtime="20201112 09:43:21.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.855" endtime="20201112 09:43:21.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.851" endtime="20201112 09:43:21.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.483" endtime="20201112 09:43:21.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.483" endtime="20201112 09:43:21.877"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.886" endtime="20201112 09:43:21.905"></status>
</kw>
<msg timestamp="20201112 09:43:21.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.884" endtime="20201112 09:43:21.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.906" endtime="20201112 09:43:21.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.909" endtime="20201112 09:43:21.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.882" endtime="20201112 09:43:21.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.879" endtime="20201112 09:43:21.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.919" endtime="20201112 09:43:22.205"></status>
</kw>
<msg timestamp="20201112 09:43:22.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.917" endtime="20201112 09:43:22.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.209" endtime="20201112 09:43:22.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.217" endtime="20201112 09:43:22.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.915" endtime="20201112 09:43:22.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.913" endtime="20201112 09:43:22.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.224" level="INFO">${RESULT} = [{'time': 0.019535153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.502799999999823e-05, 'source_diff': 6.502799999999823e-05}, {'time': 0.019608833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:22.221" endtime="20201112 09:43:22.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.237" level="INFO">${ACCURACY} = {'source_diff': [6.502799999999823e-05, 6.080500000000058e-05, 6.0387999999998027e-05, 5.9943999999999276e-05, 6.037499999999793e-05, 6.015300000000029e-05, 6.037499999999793e-05, 6.184700000000029e-0...</msg>
<status status="PASS" starttime="20201112 09:43:22.225" endtime="20201112 09:43:22.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.242" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.241" endtime="20201112 09:43:22.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.244" level="INFO">VALUE: [6.502799999999823e-05, 6.080500000000058e-05, 6.0387999999998027e-05, 5.9943999999999276e-05, 6.037499999999793e-05, 6.015300000000029e-05, 6.037499999999793e-05, 6.184700000000029e-05, 6.0750000000001775e-05, 6.191700000000161e-05, 5.990300000000004e-05, 6.043099999999968e-05, 6.012500000000115e-05, 5.994500000000222e-05, 6.038900000000097e-05, 6.06949999999995e-05, 6.0319999999999124e-05, 6.036099999999836e-05, 6.047299999999839e-05, 6.043099999999968e-05, 6.020899999999857e-05, 6.180499999999811e-05, 5.9971999999998415e-05, 6.0749999999998305e-05, 6.041700000000011e-05, 6.011100000000158e-05, 6.038900000000097e-05, 6.0694000000000026e-05, 6.0291999999999984e-05, 6.0000000000001025e-05, 6.0388000000001496e-05, 6.0249999999997805e-05, 6.0055999999999304e-05, 6.1888999999999e-05, 6.0333999999998694e-05, 6.0569999999999374e-05, 6.038900000000097e-05, 6.0320000000002594e-05, 6.0458000000002815e-05, 6.012499999999768e-05, 6.043099999999968e-05, 6.012499999999768e-05, 6.0736000000002205e-05, 6.044499999999925e-05, 6.0236000000001705e-05, 6.0764000000001345e-05, 6.0443999999999776e-05, 6.0542000000000235e-05, 6.190299999999857e-05, 6.180600000000105e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.243" endtime="20201112 09:43:22.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.238" endtime="20201112 09:43:22.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.248" endtime="20201112 09:43:22.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.251" endtime="20201112 09:43:22.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.250" endtime="20201112 09:43:22.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.246" endtime="20201112 09:43:22.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.878" endtime="20201112 09:43:22.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.877" endtime="20201112 09:43:22.272"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.281" endtime="20201112 09:43:22.300"></status>
</kw>
<msg timestamp="20201112 09:43:22.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.279" endtime="20201112 09:43:22.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.302" endtime="20201112 09:43:22.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.304" endtime="20201112 09:43:22.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.277" endtime="20201112 09:43:22.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.274" endtime="20201112 09:43:22.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.314" endtime="20201112 09:43:22.600"></status>
</kw>
<msg timestamp="20201112 09:43:22.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.312" endtime="20201112 09:43:22.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.604" endtime="20201112 09:43:22.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.613" endtime="20201112 09:43:22.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.310" endtime="20201112 09:43:22.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.308" endtime="20201112 09:43:22.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.619" level="INFO">${RESULT} = [{'time': 0.019691139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.718099999999949e-05, 'source_diff': 6.718099999999949e-05}, {'time': 0.019764792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:22.616" endtime="20201112 09:43:22.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.633" level="INFO">${ACCURACY} = {'source_diff': [6.718099999999949e-05, 6.134799999999926e-05, 6.116700000000086e-05, 6.1014000000001595e-05, 6.165199999999885e-05, 6.145800000000035e-05, 6.283299999999825e-05, 6.105499999999736e-05...</msg>
<status status="PASS" starttime="20201112 09:43:22.620" endtime="20201112 09:43:22.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.637" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.636" endtime="20201112 09:43:22.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.640" level="INFO">VALUE: [6.718099999999949e-05, 6.134799999999926e-05, 6.116700000000086e-05, 6.1014000000001595e-05, 6.165199999999885e-05, 6.145800000000035e-05, 6.283299999999825e-05, 6.105499999999736e-05, 6.287500000000043e-05, 6.283299999999825e-05, 6.149999999999906e-05, 6.115299999999782e-05, 6.284699999999782e-05, 6.15140000000021e-05, 6.2889e-05, 6.091699999999714e-05, 6.106999999999987e-05, 6.136100000000283e-05, 6.108399999999944e-05, 6.162499999999918e-05, 6.165300000000179e-05, 6.163900000000222e-05, 6.113899999999825e-05, 6.138799999999903e-05, 6.133300000000022e-05, 6.175000000000277e-05, 6.291699999999914e-05, 6.138900000000197e-05, 6.284700000000129e-05, 6.12499999999988e-05, 6.113900000000172e-05, 6.281900000000215e-05, 6.1013999999998125e-05, 6.163899999999875e-05, 6.290299999999957e-05, 6.111200000000205e-05, 6.108399999999944e-05, 6.170900000000007e-05, 6.165299999999832e-05, 6.281899999999868e-05, 6.106999999999987e-05, 6.162499999999918e-05, 6.0957999999999846e-05, 6.170799999999713e-05, 6.287500000000043e-05, 6.17219999999967e-05, 6.2889e-05, 6.105499999999736e-05, 6.116700000000086e-05, 6.133300000000022e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.638" endtime="20201112 09:43:22.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.634" endtime="20201112 09:43:22.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.643" endtime="20201112 09:43:22.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.647" endtime="20201112 09:43:22.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.645" endtime="20201112 09:43:22.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.642" endtime="20201112 09:43:22.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.273" endtime="20201112 09:43:22.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.272" endtime="20201112 09:43:22.667"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.676" endtime="20201112 09:43:22.695"></status>
</kw>
<msg timestamp="20201112 09:43:22.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.674" endtime="20201112 09:43:22.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.697" endtime="20201112 09:43:22.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.699" endtime="20201112 09:43:22.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.672" endtime="20201112 09:43:22.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.670" endtime="20201112 09:43:22.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.709" endtime="20201112 09:43:22.996"></status>
</kw>
<msg timestamp="20201112 09:43:23.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.708" endtime="20201112 09:43:23.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019644528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.001" endtime="20201112 09:43:23.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.009" endtime="20201112 09:43:23.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.705" endtime="20201112 09:43:23.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.704" endtime="20201112 09:43:23.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.016" level="INFO">${RESULT} = [{'time': 0.019644528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.712500000000121e-05, 'source_diff': 6.712500000000121e-05}, {'time': 0.019721167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:23.013" endtime="20201112 09:43:23.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.029" level="INFO">${ACCURACY} = {'source_diff': [6.712500000000121e-05, 6.263899999999975e-05, 6.388899999999753e-05, 6.202699999999922e-05, 6.388899999999753e-05, 6.213799999999978e-05, 6.198599999999999e-05, 6.199999999999956e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:23.017" endtime="20201112 09:43:23.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.034" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.033" endtime="20201112 09:43:23.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.036" level="INFO">VALUE: [6.712500000000121e-05, 6.263899999999975e-05, 6.388899999999753e-05, 6.202699999999922e-05, 6.388899999999753e-05, 6.213799999999978e-05, 6.198599999999999e-05, 6.199999999999956e-05, 6.20690000000014e-05, 6.25690000000019e-05, 6.201399999999913e-05, 6.234700000000079e-05, 6.208300000000097e-05, 6.280599999999859e-05, 6.265299999999932e-05, 6.222200000000067e-05, 6.265299999999932e-05, 6.244499999999778e-05, 6.3889000000001e-05, 6.258399999999747e-05, 6.199999999999956e-05, 6.234699999999732e-05, 6.245800000000135e-05, 6.241700000000211e-05, 6.383300000000272e-05, 6.216599999999892e-05, 6.237499999999993e-05, 6.270799999999813e-05, 6.386100000000186e-05, 6.380500000000011e-05, 6.209700000000054e-05, 6.251399999999963e-05, 6.22219999999972e-05, 6.215299999999882e-05, 6.256899999999843e-05, 6.201399999999913e-05, 6.247300000000039e-05, 6.386100000000186e-05, 6.381999999999916e-05, 6.23889999999995e-05, 6.2195000000001e-05, 6.252699999999972e-05, 6.391700000000014e-05, 6.388899999999753e-05, 6.277800000000291e-05, 6.230499999999861e-05, 6.279200000000248e-05, 6.269399999999856e-05, 6.213899999999925e-05, 6.233299999999775e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.035" endtime="20201112 09:43:23.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.030" endtime="20201112 09:43:23.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.040" endtime="20201112 09:43:23.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.043" endtime="20201112 09:43:23.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.042" endtime="20201112 09:43:23.063"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.038" endtime="20201112 09:43:23.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.668" endtime="20201112 09:43:23.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.668" endtime="20201112 09:43:23.064"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.073" endtime="20201112 09:43:23.092"></status>
</kw>
<msg timestamp="20201112 09:43:23.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.071" endtime="20201112 09:43:23.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.094" endtime="20201112 09:43:23.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.096" endtime="20201112 09:43:23.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.069" endtime="20201112 09:43:23.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.066" endtime="20201112 09:43:23.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.106" endtime="20201112 09:43:23.391"></status>
</kw>
<msg timestamp="20201112 09:43:23.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.104" endtime="20201112 09:43:23.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.395" endtime="20201112 09:43:23.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.404" endtime="20201112 09:43:23.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.102" endtime="20201112 09:43:23.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.100" endtime="20201112 09:43:23.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.410" level="INFO">${RESULT} = [{'time': 0.019681097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.745800000000288e-05, 'source_diff': 6.745800000000288e-05}, {'time': 0.019757764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:23.407" endtime="20201112 09:43:23.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.425" level="INFO">${ACCURACY} = {'source_diff': [6.745800000000288e-05, 6.361100000000161e-05, 6.356899999999943e-05, 6.362499999999771e-05, 6.312500000000068e-05, 6.359699999999857e-05, 6.319499999999853e-05, 6.48479999999993e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:23.411" endtime="20201112 09:43:23.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.429" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.428" endtime="20201112 09:43:23.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.432" level="INFO">VALUE: [6.745800000000288e-05, 6.361100000000161e-05, 6.356899999999943e-05, 6.362499999999771e-05, 6.312500000000068e-05, 6.359699999999857e-05, 6.319499999999853e-05, 6.48479999999993e-05, 6.35699999999989e-05, 6.333399999999823e-05, 6.344500000000225e-05, 6.333399999999823e-05, 6.294500000000175e-05, 6.295799999999838e-05, 6.387500000000143e-05, 6.295799999999838e-05, 6.381899999999968e-05, 6.37500000000013e-05, 6.487500000000243e-05, 6.35280000000002e-05, 6.319399999999906e-05, 6.491700000000114e-05, 6.341699999999964e-05, 6.327799999999995e-05, 6.37500000000013e-05, 6.294500000000175e-05, 6.337500000000093e-05, 6.365300000000032e-05, 6.368099999999946e-05, 6.311200000000058e-05, 6.365199999999738e-05, 6.32630000000009e-05, 6.305499999999936e-05, 6.479099999999807e-05, 6.297200000000142e-05, 6.347200000000192e-05, 6.37500000000013e-05, 6.369499999999903e-05, 6.306899999999893e-05, 6.351399999999716e-05, 6.312500000000068e-05, 6.298599999999752e-05, 6.3195000000002e-05, 6.35280000000002e-05, 6.295899999999785e-05, 6.304099999999979e-05, 6.337500000000093e-05, 6.481899999999721e-05, 6.30699999999984e-05, 6.483300000000025e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.430" endtime="20201112 09:43:23.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.426" endtime="20201112 09:43:23.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.435" endtime="20201112 09:43:23.437"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.439" endtime="20201112 09:43:23.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.437" endtime="20201112 09:43:23.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.434" endtime="20201112 09:43:23.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.065" endtime="20201112 09:43:23.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.064" endtime="20201112 09:43:23.460"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.468" endtime="20201112 09:43:23.487"></status>
</kw>
<msg timestamp="20201112 09:43:23.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.467" endtime="20201112 09:43:23.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.489" endtime="20201112 09:43:23.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.491" endtime="20201112 09:43:23.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.464" endtime="20201112 09:43:23.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.462" endtime="20201112 09:43:23.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.501" endtime="20201112 09:43:23.787"></status>
</kw>
<msg timestamp="20201112 09:43:23.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.500" endtime="20201112 09:43:23.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.791" endtime="20201112 09:43:23.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.799" endtime="20201112 09:43:23.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.497" endtime="20201112 09:43:23.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.495" endtime="20201112 09:43:23.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.806" level="INFO">${RESULT} = [{'time': 0.019692278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.911100000000017e-05, 'source_diff': 6.911100000000017e-05}, {'time': 0.019767931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:23.802" endtime="20201112 09:43:23.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.819" level="INFO">${ACCURACY} = {'source_diff': [6.911100000000017e-05, 6.42639999999979e-05, 6.468000000000099e-05, 6.436100000000236e-05, 6.449999999999859e-05, 6.594399999999834e-05, 6.595899999999738e-05, 6.465300000000132e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:23.807" endtime="20201112 09:43:23.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.824" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.823" endtime="20201112 09:43:23.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.826" level="INFO">VALUE: [6.911100000000017e-05, 6.42639999999979e-05, 6.468000000000099e-05, 6.436100000000236e-05, 6.449999999999859e-05, 6.594399999999834e-05, 6.595899999999738e-05, 6.465300000000132e-05, 6.587499999999996e-05, 6.452799999999773e-05, 6.434699999999932e-05, 6.479199999999755e-05, 6.416700000000039e-05, 6.408399999999898e-05, 6.398599999999852e-05, 6.450000000000206e-05, 6.587499999999996e-05, 6.470800000000013e-05, 6.487499999999896e-05, 6.583400000000073e-05, 6.588800000000006e-05, 6.581900000000168e-05, 6.4583e-05, 6.4583e-05, 6.43890000000015e-05, 6.462500000000218e-05, 6.423599999999877e-05, 6.480499999999764e-05, 6.47219999999997e-05, 6.451399999999816e-05, 6.482000000000016e-05, 6.474999999999884e-05, 6.42089999999991e-05, 6.465300000000132e-05, 6.398600000000199e-05, 6.58480000000003e-05, 6.454099999999782e-05, 6.394499999999928e-05, 6.465200000000185e-05, 6.469399999999709e-05, 6.47639999999984e-05, 6.469400000000056e-05, 6.586100000000039e-05, 6.419400000000006e-05, 6.39439999999998e-05, 6.434700000000279e-05, 6.393000000000024e-05, 6.581900000000168e-05, 6.433299999999975e-05, 6.469500000000003e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.825" endtime="20201112 09:43:23.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.820" endtime="20201112 09:43:23.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.830" endtime="20201112 09:43:23.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.833" endtime="20201112 09:43:23.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.831" endtime="20201112 09:43:23.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.828" endtime="20201112 09:43:23.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.461" endtime="20201112 09:43:23.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.460" endtime="20201112 09:43:23.854"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.862" endtime="20201112 09:43:23.881"></status>
</kw>
<msg timestamp="20201112 09:43:23.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.861" endtime="20201112 09:43:23.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.883" endtime="20201112 09:43:23.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.885" endtime="20201112 09:43:23.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.858" endtime="20201112 09:43:23.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.856" endtime="20201112 09:43:23.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.895" endtime="20201112 09:43:24.181"></status>
</kw>
<msg timestamp="20201112 09:43:24.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019624208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.894" endtime="20201112 09:43:24.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019624208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.185" endtime="20201112 09:43:24.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.193" endtime="20201112 09:43:24.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.891" endtime="20201112 09:43:24.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.889" endtime="20201112 09:43:24.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.200" level="INFO">${RESULT} = [{'time': 0.019624208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.991599999999973e-05, 'source_diff': 6.991599999999973e-05}, {'time': 0.019700833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.196" endtime="20201112 09:43:24.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.213" level="INFO">${ACCURACY} = {'source_diff': [6.991599999999973e-05, 6.573600000000027e-05, 6.520800000000063e-05, 6.495800000000038e-05, 6.555500000000186e-05, 6.520800000000063e-05, 6.545800000000088e-05, 6.573600000000027e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:24.201" endtime="20201112 09:43:24.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.218" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.217" endtime="20201112 09:43:24.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.220" level="INFO">VALUE: [6.991599999999973e-05, 6.573600000000027e-05, 6.520800000000063e-05, 6.495800000000038e-05, 6.555500000000186e-05, 6.520800000000063e-05, 6.545800000000088e-05, 6.573600000000027e-05, 6.688900000000053e-05, 6.544500000000078e-05, 6.69030000000001e-05, 6.498599999999952e-05, 6.50700000000004e-05, 6.529200000000152e-05, 6.573600000000027e-05, 6.499999999999909e-05, 6.580499999999864e-05, 6.551299999999968e-05, 6.501399999999866e-05, 6.517999999999802e-05, 6.542999999999827e-05, 6.524999999999934e-05, 6.543000000000174e-05, 6.536099999999989e-05, 6.574999999999984e-05, 6.537499999999946e-05, 6.515300000000182e-05, 6.555600000000134e-05, 6.576400000000288e-05, 6.682000000000216e-05, 6.519500000000053e-05, 6.559700000000057e-05, 6.512499999999921e-05, 6.515200000000235e-05, 6.687499999999749e-05, 6.53890000000025e-05, 6.5583000000001e-05, 6.683299999999878e-05, 6.505500000000136e-05, 6.531900000000118e-05, 6.50830000000005e-05, 6.504200000000127e-05, 6.519400000000106e-05, 6.509700000000007e-05, 6.577799999999898e-05, 6.532000000000066e-05, 6.537499999999946e-05, 6.519499999999706e-05, 6.543100000000121e-05, 6.556900000000143e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.219" endtime="20201112 09:43:24.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.214" endtime="20201112 09:43:24.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.224" endtime="20201112 09:43:24.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.227" endtime="20201112 09:43:24.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.225" endtime="20201112 09:43:24.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.222" endtime="20201112 09:43:24.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.855" endtime="20201112 09:43:24.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.854" endtime="20201112 09:43:24.248"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.256" endtime="20201112 09:43:24.275"></status>
</kw>
<msg timestamp="20201112 09:43:24.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.255" endtime="20201112 09:43:24.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.277" endtime="20201112 09:43:24.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.279" endtime="20201112 09:43:24.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.252" endtime="20201112 09:43:24.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.250" endtime="20201112 09:43:24.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.289" endtime="20201112 09:43:24.575"></status>
</kw>
<msg timestamp="20201112 09:43:24.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.288" endtime="20201112 09:43:24.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.579" endtime="20201112 09:43:24.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.587" endtime="20201112 09:43:24.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.285" endtime="20201112 09:43:24.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.283" endtime="20201112 09:43:24.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.594" level="INFO">${RESULT} = [{'time': 0.019551819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.101300000000171e-05, 'source_diff': 7.101300000000171e-05}, {'time': 0.019628458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.590" endtime="20201112 09:43:24.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.607" level="INFO">${ACCURACY} = {'source_diff': [7.101300000000171e-05, 6.60830000000015e-05, 6.620799999999816e-05, 6.788899999999806e-05, 6.627799999999948e-05, 6.658299999999853e-05, 6.623600000000077e-05, 6.634699999999785e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:24.595" endtime="20201112 09:43:24.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.611" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.610" endtime="20201112 09:43:24.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.614" level="INFO">VALUE: [7.101300000000171e-05, 6.60830000000015e-05, 6.620799999999816e-05, 6.788899999999806e-05, 6.627799999999948e-05, 6.658299999999853e-05, 6.623600000000077e-05, 6.634699999999785e-05, 6.601399999999966e-05, 6.609700000000107e-05, 6.686100000000139e-05, 6.6583999999998e-05, 6.615299999999935e-05, 6.650000000000059e-05, 6.60280000000027e-05, 6.612500000000021e-05, 6.631899999999871e-05, 6.606899999999846e-05, 6.613899999999978e-05, 6.668000000000299e-05, 6.636099999999742e-05, 6.627799999999948e-05, 6.593000000000224e-05, 6.668100000000246e-05, 6.600000000000009e-05, 6.608400000000098e-05, 6.611099999999717e-05, 6.645900000000135e-05, 6.649999999999712e-05, 6.601399999999966e-05, 6.601399999999966e-05, 6.655600000000234e-05, 6.62090000000011e-05, 6.658299999999853e-05, 6.675000000000084e-05, 6.681899999999921e-05, 6.665200000000038e-05, 6.630499999999914e-05, 6.650000000000059e-05, 6.67640000000004e-05, 6.600000000000009e-05, 6.638900000000003e-05, 6.665299999999985e-05, 6.679100000000007e-05, 6.638900000000003e-05, 6.605600000000184e-05, 6.67640000000004e-05, 6.674999999999737e-05, 6.673600000000127e-05, 6.622300000000067e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.613" endtime="20201112 09:43:24.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.608" endtime="20201112 09:43:24.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.617" endtime="20201112 09:43:24.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.621" endtime="20201112 09:43:24.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.619" endtime="20201112 09:43:24.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.616" endtime="20201112 09:43:24.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.249" endtime="20201112 09:43:24.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.248" endtime="20201112 09:43:24.642"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.650" endtime="20201112 09:43:24.669"></status>
</kw>
<msg timestamp="20201112 09:43:24.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.649" endtime="20201112 09:43:24.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.671" endtime="20201112 09:43:24.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.673" endtime="20201112 09:43:24.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.646" endtime="20201112 09:43:24.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.644" endtime="20201112 09:43:24.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.683" endtime="20201112 09:43:24.968"></status>
</kw>
<msg timestamp="20201112 09:43:24.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.682" endtime="20201112 09:43:24.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.972" endtime="20201112 09:43:24.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.981" endtime="20201112 09:43:24.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.679" endtime="20201112 09:43:24.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.677" endtime="20201112 09:43:24.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.987" level="INFO">${RESULT} = [{'time': 0.019725833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.190200000000216e-05, 'source_diff': 7.190200000000216e-05}, {'time': 0.019803486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.984" endtime="20201112 09:43:24.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.002" level="INFO">${ACCURACY} = {'source_diff': [7.190200000000216e-05, 6.705499999999989e-05, 6.708299999999903e-05, 6.75420000000003e-05, 6.725000000000134e-05, 6.702800000000023e-05, 6.720799999999916e-05, 6.731999999999919e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:24.988" endtime="20201112 09:43:25.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.006" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.005" endtime="20201112 09:43:25.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.008" level="INFO">VALUE: [7.190200000000216e-05, 6.705499999999989e-05, 6.708299999999903e-05, 6.75420000000003e-05, 6.725000000000134e-05, 6.702800000000023e-05, 6.720799999999916e-05, 6.731999999999919e-05, 6.702800000000023e-05, 6.708400000000198e-05, 6.77229999999987e-05, 6.693099999999924e-05, 6.75700000000029e-05, 6.733299999999928e-05, 6.751299999999821e-05, 6.733299999999928e-05, 6.731899999999971e-05, 6.734700000000232e-05, 6.706899999999946e-05, 6.770799999999966e-05, 6.755500000000039e-05, 6.762499999999824e-05, 6.733299999999928e-05, 6.70419999999998e-05, 6.702799999999676e-05, 6.718099999999949e-05, 6.745899999999888e-05, 6.697299999999795e-05, 6.755599999999987e-05, 6.737499999999799e-05, 6.755500000000039e-05, 6.743000000000027e-05, 6.740200000000113e-05, 6.722199999999873e-05, 6.883300000000078e-05, 6.700000000000109e-05, 6.887499999999949e-05, 6.763899999999781e-05, 6.743099999999974e-05, 6.705599999999937e-05, 6.699999999999762e-05, 6.70419999999998e-05, 6.709799999999808e-05, 6.705600000000284e-05, 6.700000000000109e-05, 6.763899999999781e-05, 6.890299999999863e-05, 6.888900000000253e-05, 6.77229999999987e-05, 6.758299999999953e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.007" endtime="20201112 09:43:25.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.002" endtime="20201112 09:43:25.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.012" endtime="20201112 09:43:25.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.015" endtime="20201112 09:43:25.035"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.014" endtime="20201112 09:43:25.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.010" endtime="20201112 09:43:25.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.642" endtime="20201112 09:43:25.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.642" endtime="20201112 09:43:25.036"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.045" endtime="20201112 09:43:25.065"></status>
</kw>
<msg timestamp="20201112 09:43:25.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.044" endtime="20201112 09:43:25.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.066" endtime="20201112 09:43:25.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.069" endtime="20201112 09:43:25.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.041" endtime="20201112 09:43:25.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.039" endtime="20201112 09:43:25.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.078" endtime="20201112 09:43:25.364"></status>
</kw>
<msg timestamp="20201112 09:43:25.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019770486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.077" endtime="20201112 09:43:25.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019770486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.368" endtime="20201112 09:43:25.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.377" endtime="20201112 09:43:25.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.074" endtime="20201112 09:43:25.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.073" endtime="20201112 09:43:25.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.383" level="INFO">${RESULT} = [{'time': 0.019770486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.326399999999997e-05, 'source_diff': 7.326399999999997e-05}, {'time': 0.019849125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:25.380" endtime="20201112 09:43:25.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.397" level="INFO">${ACCURACY} = {'source_diff': [7.326399999999997e-05, 6.833300000000028e-05, 6.806999999999994e-05, 6.798599999999905e-05, 6.863899999999881e-05, 6.801400000000166e-05, 6.838899999999856e-05, 6.798599999999905e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:25.384" endtime="20201112 09:43:25.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.401" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.400" endtime="20201112 09:43:25.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.404" level="INFO">VALUE: [7.326399999999997e-05, 6.833300000000028e-05, 6.806999999999994e-05, 6.798599999999905e-05, 6.863899999999881e-05, 6.801400000000166e-05, 6.838899999999856e-05, 6.798599999999905e-05, 6.841700000000117e-05, 6.815199999999841e-05, 6.806900000000046e-05, 6.815200000000188e-05, 6.802700000000175e-05, 6.876399999999894e-05, 6.987500000000049e-05, 6.815299999999788e-05, 6.844400000000084e-05, 6.851399999999869e-05, 6.865300000000185e-05, 6.862499999999924e-05, 6.851399999999869e-05, 6.850000000000259e-05, 6.99030000000031e-05, 6.834799999999933e-05, 6.877799999999851e-05, 6.812499999999874e-05, 6.822199999999973e-05, 6.865199999999891e-05, 6.819400000000059e-05, 6.84030000000016e-05, 6.793000000000077e-05, 6.869400000000109e-05, 6.824999999999887e-05, 6.852799999999826e-05, 6.793000000000077e-05, 6.87640000000024e-05, 6.837500000000246e-05, 6.877800000000198e-05, 6.85970000000001e-05, 6.870900000000013e-05, 6.827799999999801e-05, 6.843100000000074e-05, 6.813900000000178e-05, 6.850000000000259e-05, 6.883400000000026e-05, 6.843000000000127e-05, 6.867999999999805e-05, 6.880499999999817e-05, 6.981900000000221e-05, 6.801399999999819e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.402" endtime="20201112 09:43:25.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.397" endtime="20201112 09:43:25.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.407" endtime="20201112 09:43:25.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.411" endtime="20201112 09:43:25.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.409" endtime="20201112 09:43:25.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.406" endtime="20201112 09:43:25.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.037" endtime="20201112 09:43:25.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.037" endtime="20201112 09:43:25.431"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.440" endtime="20201112 09:43:25.460"></status>
</kw>
<msg timestamp="20201112 09:43:25.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.438" endtime="20201112 09:43:25.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.462" endtime="20201112 09:43:25.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.464" endtime="20201112 09:43:25.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.436" endtime="20201112 09:43:25.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.434" endtime="20201112 09:43:25.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.474" endtime="20201112 09:43:25.760"></status>
</kw>
<msg timestamp="20201112 09:43:25.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.472" endtime="20201112 09:43:25.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.764" endtime="20201112 09:43:25.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.772" endtime="20201112 09:43:25.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.470" endtime="20201112 09:43:25.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.468" endtime="20201112 09:43:25.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.779" level="INFO">${RESULT} = [{'time': 0.019579431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.408400000000204e-05, 'source_diff': 7.408400000000204e-05}, {'time': 0.019660097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:25.775" endtime="20201112 09:43:25.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.792" level="INFO">${ACCURACY} = {'source_diff': [7.408400000000204e-05, 6.993000000000277e-05, 6.926299999999996e-05, 6.951399999999969e-05, 6.913900000000278e-05, 6.906900000000146e-05, 6.970800000000166e-05, 6.906900000000146e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:25.780" endtime="20201112 09:43:25.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.796" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.795" endtime="20201112 09:43:25.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.799" level="INFO">VALUE: [7.408400000000204e-05, 6.993000000000277e-05, 6.926299999999996e-05, 6.951399999999969e-05, 6.913900000000278e-05, 6.906900000000146e-05, 6.970800000000166e-05, 6.906900000000146e-05, 6.937499999999999e-05, 7.090299999999716e-05, 6.912499999999974e-05, 6.912499999999974e-05, 6.954199999999883e-05, 6.962500000000024e-05, 6.961200000000015e-05, 7.090300000000063e-05, 6.927699999999953e-05, 6.943100000000174e-05, 7.09170000000002e-05, 6.952800000000273e-05, 6.962500000000024e-05, 6.951399999999969e-05, 7.095899999999891e-05, 6.897200000000048e-05, 6.983299999999831e-05, 6.919399999999812e-05, 6.915299999999888e-05, 6.920800000000116e-05, 6.92230000000002e-05, 6.90840000000005e-05, 6.901399999999919e-05, 7.088900000000106e-05, 6.940199999999966e-05, 7.083299999999931e-05, 6.906900000000146e-05, 6.966699999999895e-05, 6.90970000000006e-05, 6.919399999999812e-05, 6.940299999999913e-05, 6.919399999999812e-05, 6.945800000000141e-05, 6.97360000000008e-05, 6.95970000000011e-05, 6.912499999999974e-05, 6.965299999999938e-05, 6.931999999999772e-05, 6.915199999999941e-05, 6.94030000000026e-05, 6.951399999999969e-05, 7.091600000000073e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.797" endtime="20201112 09:43:25.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.793" endtime="20201112 09:43:25.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.803" endtime="20201112 09:43:25.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.806" endtime="20201112 09:43:25.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.804" endtime="20201112 09:43:25.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.801" endtime="20201112 09:43:25.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.432" endtime="20201112 09:43:25.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.432" endtime="20201112 09:43:25.827"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.835" endtime="20201112 09:43:25.855"></status>
</kw>
<msg timestamp="20201112 09:43:25.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.834" endtime="20201112 09:43:25.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.857" endtime="20201112 09:43:25.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.859" endtime="20201112 09:43:25.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.831" endtime="20201112 09:43:25.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.829" endtime="20201112 09:43:25.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.869" endtime="20201112 09:43:26.155"></status>
</kw>
<msg timestamp="20201112 09:43:26.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019624236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.868" endtime="20201112 09:43:26.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019549375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019624236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.159" endtime="20201112 09:43:26.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.167" endtime="20201112 09:43:26.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.865" endtime="20201112 09:43:26.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.863" endtime="20201112 09:43:26.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.174" level="INFO">${RESULT} = [{'time': 0.019624236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.486099999999898e-05, 'source_diff': 7.486099999999898e-05}, {'time': 0.019706944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:26.171" endtime="20201112 09:43:26.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.187" level="INFO">${ACCURACY} = {'source_diff': [7.486099999999898e-05, 7.052700000000078e-05, 7.045799999999894e-05, 7.038900000000056e-05, 7.002799999999976e-05, 7.072199999999876e-05, 7.063799999999787e-05, 7.031999999999872e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:26.175" endtime="20201112 09:43:26.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.192" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.191" endtime="20201112 09:43:26.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.194" level="INFO">VALUE: [7.486099999999898e-05, 7.052700000000078e-05, 7.045799999999894e-05, 7.038900000000056e-05, 7.002799999999976e-05, 7.072199999999876e-05, 7.063799999999787e-05, 7.031999999999872e-05, 7.076300000000146e-05, 7.051400000000069e-05, 6.994399999999887e-05, 7.033300000000228e-05, 7.070799999999919e-05, 7.038899999999709e-05, 6.995799999999844e-05, 7.018099999999902e-05, 7.049999999999765e-05, 7.006999999999847e-05, 7.065300000000038e-05, 7.068099999999952e-05, 7.065300000000038e-05, 7.02499999999974e-05, 7.052799999999679e-05, 7.081899999999974e-05, 7.069399999999962e-05, 7.038900000000056e-05, 6.987500000000049e-05, 7.068099999999952e-05, 7.044399999999937e-05, 7.012500000000074e-05, 6.997199999999801e-05, 7.015299999999988e-05, 7.04169999999997e-05, 7.020799999999869e-05, 7.027800000000001e-05, 7.062500000000124e-05, 7.001400000000019e-05, 7.076400000000094e-05, 7.182000000000022e-05, 6.994499999999834e-05, 7.075000000000137e-05, 7.00559999999989e-05, 7.181900000000074e-05, 7.066699999999995e-05, 7.023599999999783e-05, 7.002799999999976e-05, 7.06109999999982e-05, 7.076400000000094e-05, 7.000000000000062e-05, 7.058300000000253e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.193" endtime="20201112 09:43:26.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.188" endtime="20201112 09:43:26.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.202" endtime="20201112 09:43:26.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.205" endtime="20201112 09:43:26.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.204" endtime="20201112 09:43:26.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.200" endtime="20201112 09:43:26.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.828" endtime="20201112 09:43:26.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.827" endtime="20201112 09:43:26.226"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.234" endtime="20201112 09:43:26.253"></status>
</kw>
<msg timestamp="20201112 09:43:26.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.233" endtime="20201112 09:43:26.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.255" endtime="20201112 09:43:26.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.257" endtime="20201112 09:43:26.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.230" endtime="20201112 09:43:26.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.228" endtime="20201112 09:43:26.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.267" endtime="20201112 09:43:26.553"></status>
</kw>
<msg timestamp="20201112 09:43:26.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.265" endtime="20201112 09:43:26.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.557" endtime="20201112 09:43:26.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.565" endtime="20201112 09:43:26.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.263" endtime="20201112 09:43:26.568"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.261" endtime="20201112 09:43:26.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.572" level="INFO">${RESULT} = [{'time': 0.019605889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.548599999999961e-05, 'source_diff': 7.548599999999961e-05}, {'time': 0.019689514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:26.569" endtime="20201112 09:43:26.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.586" level="INFO">${ACCURACY} = {'source_diff': [7.548599999999961e-05, 7.284700000000088e-05, 7.120899999999916e-05, 7.144499999999984e-05, 7.115300000000088e-05, 7.126400000000144e-05, 7.101299999999824e-05, 7.163799999999887e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:26.573" endtime="20201112 09:43:26.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.591" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.590" endtime="20201112 09:43:26.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.593" level="INFO">VALUE: [7.548599999999961e-05, 7.284700000000088e-05, 7.120899999999916e-05, 7.144499999999984e-05, 7.115300000000088e-05, 7.126400000000144e-05, 7.101299999999824e-05, 7.163799999999887e-05, 7.138900000000156e-05, 7.141600000000123e-05, 7.100000000000162e-05, 7.105500000000042e-05, 7.14300000000008e-05, 7.293100000000177e-05, 7.151400000000169e-05, 7.15690000000005e-05, 7.162500000000224e-05, 7.133299999999981e-05, 7.131999999999972e-05, 7.12369999999983e-05, 7.144400000000037e-05, 7.287500000000002e-05, 7.151400000000169e-05, 7.095799999999944e-05, 7.165200000000191e-05, 7.147200000000298e-05, 7.095799999999944e-05, 7.165199999999844e-05, 7.145799999999994e-05, 7.119400000000012e-05, 7.144400000000037e-05, 7.130600000000015e-05, 7.280600000000165e-05, 7.163899999999834e-05, 7.101400000000119e-05, 7.170899999999966e-05, 7.126399999999797e-05, 7.176400000000194e-05, 7.120799999999969e-05, 7.165200000000191e-05, 7.180500000000117e-05, 7.287500000000002e-05, 7.12360000000023e-05, 7.144400000000037e-05, 7.158300000000006e-05, 7.113900000000131e-05, 7.170800000000019e-05, 7.134699999999938e-05, 7.125000000000187e-05, 7.104199999999686e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.592" endtime="20201112 09:43:26.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.587" endtime="20201112 09:43:26.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.597" endtime="20201112 09:43:26.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.600" endtime="20201112 09:43:26.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.599" endtime="20201112 09:43:26.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.595" endtime="20201112 09:43:26.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.227" endtime="20201112 09:43:26.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.226" endtime="20201112 09:43:26.621"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.630" endtime="20201112 09:43:26.650"></status>
</kw>
<msg timestamp="20201112 09:43:26.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.628" endtime="20201112 09:43:26.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.651" endtime="20201112 09:43:26.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.654" endtime="20201112 09:43:26.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.625" endtime="20201112 09:43:26.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.623" endtime="20201112 09:43:26.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.663" endtime="20201112 09:43:26.948"></status>
</kw>
<msg timestamp="20201112 09:43:26.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.662" endtime="20201112 09:43:26.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019704208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.953" endtime="20201112 09:43:26.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.961" endtime="20201112 09:43:26.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.659" endtime="20201112 09:43:26.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.658" endtime="20201112 09:43:26.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.967" level="INFO">${RESULT} = [{'time': 0.019704208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.669400000000215e-05, 'source_diff': 7.669400000000215e-05}, {'time': 0.019791833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:26.964" endtime="20201112 09:43:26.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.981" level="INFO">${ACCURACY} = {'source_diff': [7.669400000000215e-05, 7.388900000000059e-05, 7.209700000000013e-05, 7.245900000000041e-05, 7.200000000000262e-05, 7.259700000000063e-05, 7.273599999999686e-05, 7.219500000000059e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:26.968" endtime="20201112 09:43:26.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.985" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.984" endtime="20201112 09:43:26.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.988" level="INFO">VALUE: [7.669400000000215e-05, 7.388900000000059e-05, 7.209700000000013e-05, 7.245900000000041e-05, 7.200000000000262e-05, 7.259700000000063e-05, 7.273599999999686e-05, 7.219500000000059e-05, 7.247299999999998e-05, 7.387499999999755e-05, 7.383399999999832e-05, 7.197299999999948e-05, 7.280600000000165e-05, 7.269400000000162e-05, 7.263899999999934e-05, 7.226399999999897e-05, 7.384700000000188e-05, 7.277799999999904e-05, 7.220800000000069e-05, 7.381899999999927e-05, 7.227800000000201e-05, 7.231899999999777e-05, 7.199999999999915e-05, 7.213899999999884e-05, 7.259800000000011e-05, 7.241699999999823e-05, 7.252800000000226e-05, 7.270800000000119e-05, 7.388900000000059e-05, 7.388800000000112e-05, 7.2069000000001e-05, 7.242999999999833e-05, 7.26110000000002e-05, 7.222200000000026e-05, 7.233300000000081e-05, 7.24439999999979e-05, 7.213900000000231e-05, 7.262499999999977e-05, 7.269400000000162e-05, 7.268100000000152e-05, 7.220899999999669e-05, 7.391699999999973e-05, 7.383400000000179e-05, 7.258399999999707e-05, 7.212499999999927e-05, 7.227699999999906e-05, 7.255500000000192e-05, 7.192999999999783e-05, 7.208300000000056e-05, 7.190199999999869e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.986" endtime="20201112 09:43:26.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.982" endtime="20201112 09:43:26.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.991" endtime="20201112 09:43:26.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.995" endtime="20201112 09:43:27.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.993" endtime="20201112 09:43:27.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.990" endtime="20201112 09:43:27.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.622" endtime="20201112 09:43:27.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.621" endtime="20201112 09:43:27.016"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.024" endtime="20201112 09:43:27.044"></status>
</kw>
<msg timestamp="20201112 09:43:27.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.023" endtime="20201112 09:43:27.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.045" endtime="20201112 09:43:27.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.048" endtime="20201112 09:43:27.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.020" endtime="20201112 09:43:27.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.018" endtime="20201112 09:43:27.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.059" endtime="20201112 09:43:27.345"></status>
</kw>
<msg timestamp="20201112 09:43:27.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.057" endtime="20201112 09:43:27.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.349" endtime="20201112 09:43:27.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.357" endtime="20201112 09:43:27.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.054" endtime="20201112 09:43:27.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.052" endtime="20201112 09:43:27.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.364" level="INFO">${RESULT} = [{'time': 0.019683097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.761100000000173e-05, 'source_diff': 7.761100000000173e-05}, {'time': 0.019769736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:27.361" endtime="20201112 09:43:27.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.377" level="INFO">${ACCURACY} = {'source_diff': [7.761100000000173e-05, 7.30829999999981e-05, 7.369500000000209e-05, 7.308300000000156e-05, 7.326399999999997e-05, 7.370899999999819e-05, 7.320900000000116e-05, 7.379199999999961e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:27.365" endtime="20201112 09:43:27.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.382" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.381" endtime="20201112 09:43:27.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.384" level="INFO">VALUE: [7.761100000000173e-05, 7.30829999999981e-05, 7.369500000000209e-05, 7.308300000000156e-05, 7.326399999999997e-05, 7.370899999999819e-05, 7.320900000000116e-05, 7.379199999999961e-05, 7.380599999999918e-05, 7.332000000000172e-05, 7.349999999999718e-05, 7.333299999999834e-05, 7.333300000000181e-05, 7.488899999999812e-05, 7.36249999999973e-05, 7.351400000000022e-05, 7.340299999999966e-05, 7.372200000000176e-05, 7.347199999999804e-05, 7.327799999999954e-05, 7.315199999999994e-05, 7.302799999999929e-05, 7.488900000000159e-05, 7.374999999999743e-05, 7.488899999999812e-05, 7.333399999999782e-05, 7.307000000000147e-05, 7.347199999999804e-05, 7.355499999999945e-05, 7.341599999999976e-05, 7.309699999999766e-05, 7.331899999999877e-05, 7.31110000000007e-05, 7.379199999999961e-05, 7.290299999999916e-05, 7.356899999999902e-05, 7.312500000000027e-05, 7.336200000000043e-05, 7.351400000000022e-05, 7.312500000000027e-05, 7.319499999999812e-05, 7.483399999999932e-05, 7.487499999999855e-05, 7.316599999999951e-05, 7.336100000000095e-05, 7.326299999999702e-05, 7.305500000000242e-05, 7.363900000000034e-05, 7.315299999999941e-05, 7.34439999999989e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.383" endtime="20201112 09:43:27.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.378" endtime="20201112 09:43:27.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.388" endtime="20201112 09:43:27.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.391" endtime="20201112 09:43:27.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.390" endtime="20201112 09:43:27.411"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.386" endtime="20201112 09:43:27.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.016" endtime="20201112 09:43:27.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.016" endtime="20201112 09:43:27.412"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.421" endtime="20201112 09:43:27.440"></status>
</kw>
<msg timestamp="20201112 09:43:27.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.419" endtime="20201112 09:43:27.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.442" endtime="20201112 09:43:27.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.444" endtime="20201112 09:43:27.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.417" endtime="20201112 09:43:27.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.415" endtime="20201112 09:43:27.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.454" endtime="20201112 09:43:27.739"></status>
</kw>
<msg timestamp="20201112 09:43:27.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.453" endtime="20201112 09:43:27.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.743" endtime="20201112 09:43:27.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.751" endtime="20201112 09:43:27.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.450" endtime="20201112 09:43:27.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.448" endtime="20201112 09:43:27.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.758" level="INFO">${RESULT} = [{'time': 0.019681056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.831999999999978e-05, 'source_diff': 7.831999999999978e-05}, {'time': 0.019769694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:27.755" endtime="20201112 09:43:27.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.771" level="INFO">${ACCURACY} = {'source_diff': [7.831999999999978e-05, 7.583300000000084e-05, 7.401400000000072e-05, 7.477800000000104e-05, 7.46249999999983e-05, 7.424999999999793e-05, 7.443000000000033e-05, 7.454200000000036e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:27.759" endtime="20201112 09:43:27.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.776" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.775" endtime="20201112 09:43:27.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.778" level="INFO">VALUE: [7.831999999999978e-05, 7.583300000000084e-05, 7.401400000000072e-05, 7.477800000000104e-05, 7.46249999999983e-05, 7.424999999999793e-05, 7.443000000000033e-05, 7.454200000000036e-05, 7.41249999999978e-05, 7.395899999999844e-05, 7.39309999999993e-05, 7.434799999999839e-05, 7.450000000000165e-05, 7.419499999999912e-05, 7.452700000000131e-05, 7.420799999999922e-05, 7.58189999999978e-05, 7.4763000000002e-05, 7.420799999999922e-05, 7.409699999999866e-05, 7.441600000000076e-05, 7.472199999999929e-05, 7.39439999999994e-05, 7.590300000000216e-05, 7.409700000000213e-05, 7.420899999999869e-05, 7.438899999999762e-05, 7.430599999999968e-05, 7.455599999999993e-05, 7.47500000000019e-05, 7.448599999999861e-05, 7.42500000000014e-05, 7.438900000000109e-05, 7.402800000000029e-05, 7.581900000000127e-05, 7.404199999999986e-05, 7.465300000000091e-05, 7.443000000000033e-05, 7.472199999999929e-05, 7.45699999999995e-05, 7.593000000000183e-05, 7.4069999999999e-05, 7.426400000000097e-05, 7.465300000000091e-05, 7.479199999999714e-05, 7.434799999999839e-05, 7.438800000000162e-05, 7.416600000000051e-05, 7.422199999999879e-05, 7.449999999999818e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.777" endtime="20201112 09:43:27.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.772" endtime="20201112 09:43:27.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.782" endtime="20201112 09:43:27.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.785" endtime="20201112 09:43:27.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.784" endtime="20201112 09:43:27.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.780" endtime="20201112 09:43:27.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.413" endtime="20201112 09:43:27.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.413" endtime="20201112 09:43:27.806"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.815" endtime="20201112 09:43:27.834"></status>
</kw>
<msg timestamp="20201112 09:43:27.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.813" endtime="20201112 09:43:27.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.836" endtime="20201112 09:43:27.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.838" endtime="20201112 09:43:27.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.811" endtime="20201112 09:43:27.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.808" endtime="20201112 09:43:27.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.848" endtime="20201112 09:43:28.134"></status>
</kw>
<msg timestamp="20201112 09:43:28.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.846" endtime="20201112 09:43:28.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.139" endtime="20201112 09:43:28.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.147" endtime="20201112 09:43:28.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.844" endtime="20201112 09:43:28.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.842" endtime="20201112 09:43:28.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.154" level="INFO">${RESULT} = [{'time': 0.019605347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958299999999766e-05, 'source_diff': 7.958299999999766e-05}, {'time': 0.019693, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:28.151" endtime="20201112 09:43:28.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.169" level="INFO">${ACCURACY} = {'source_diff': [7.958299999999766e-05, 7.556899999999755e-05, 7.509699999999966e-05, 7.507e-05, 7.684800000000089e-05, 7.684800000000089e-05, 7.69029999999997e-05, 7.49310000000003e-05, 7.50690000000...</msg>
<status status="PASS" starttime="20201112 09:43:28.155" endtime="20201112 09:43:28.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.175" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.174" endtime="20201112 09:43:28.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.178" level="INFO">VALUE: [7.958299999999766e-05, 7.556899999999755e-05, 7.509699999999966e-05, 7.507e-05, 7.684800000000089e-05, 7.684800000000089e-05, 7.69029999999997e-05, 7.49310000000003e-05, 7.506900000000052e-05, 7.505499999999748e-05, 7.551400000000222e-05, 7.520800000000022e-05, 7.544500000000037e-05, 7.502800000000129e-05, 7.577799999999857e-05, 7.551400000000222e-05, 7.551399999999875e-05, 7.572200000000029e-05, 7.502799999999782e-05, 7.494499999999987e-05, 7.505600000000043e-05, 7.518100000000055e-05, 7.549999999999918e-05, 7.57769999999991e-05, 7.526299999999903e-05, 7.581900000000127e-05, 7.536099999999948e-05, 7.569400000000115e-05, 7.574999999999943e-05, 7.569500000000062e-05, 7.680599999999871e-05, 7.509699999999966e-05, 7.681900000000227e-05, 7.523599999999936e-05, 7.515300000000141e-05, 7.569500000000062e-05, 7.534799999999939e-05, 7.683399999999785e-05, 7.512500000000227e-05, 7.551399999999875e-05, 7.537499999999905e-05, 7.681900000000227e-05, 7.516600000000151e-05, 7.559700000000016e-05, 7.55700000000005e-05, 7.570799999999725e-05, 7.506900000000052e-05, 7.55830000000006e-05, 7.504200000000086e-05, 7.518100000000055e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.176" endtime="20201112 09:43:28.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.171" endtime="20201112 09:43:28.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.181" endtime="20201112 09:43:28.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.185" endtime="20201112 09:43:28.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.183" endtime="20201112 09:43:28.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.180" endtime="20201112 09:43:28.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.807" endtime="20201112 09:43:28.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.806" endtime="20201112 09:43:28.206"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.216" endtime="20201112 09:43:28.236"></status>
</kw>
<msg timestamp="20201112 09:43:28.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.214" endtime="20201112 09:43:28.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.237" endtime="20201112 09:43:28.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.240" endtime="20201112 09:43:28.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.211" endtime="20201112 09:43:28.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.209" endtime="20201112 09:43:28.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.250" endtime="20201112 09:43:28.552"></status>
</kw>
<msg timestamp="20201112 09:43:28.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.249" endtime="20201112 09:43:28.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.562" endtime="20201112 09:43:28.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.581" endtime="20201112 09:43:28.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.246" endtime="20201112 09:43:28.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.244" endtime="20201112 09:43:28.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.592" level="INFO">${RESULT} = [{'time': 0.020402264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.105599999999949e-05, 'source_diff': 8.105599999999949e-05}, {'time': 0.020489917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:28.588" endtime="20201112 09:43:28.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.605" level="INFO">${ACCURACY} = {'source_diff': [8.105599999999949e-05, 7.622300000000026e-05, 7.661099999999726e-05, 7.786099999999851e-05, 7.65830000000016e-05, 7.677799999999957e-05, 7.638899999999962e-05, 7.675000000000043e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:28.593" endtime="20201112 09:43:28.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.610" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.609" endtime="20201112 09:43:28.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.613" level="INFO">VALUE: [8.105599999999949e-05, 7.622300000000026e-05, 7.661099999999726e-05, 7.786099999999851e-05, 7.65830000000016e-05, 7.677799999999957e-05, 7.638899999999962e-05, 7.675000000000043e-05, 7.605499999999848e-05, 7.78189999999998e-05, 7.659700000000116e-05, 7.60969999999972e-05, 7.605600000000143e-05, 7.655600000000193e-05, 7.598600000000011e-05, 7.602799999999882e-05, 7.672300000000076e-05, 7.620900000000069e-05, 7.65700000000015e-05, 7.6764e-05, 7.593000000000183e-05, 7.673599999999739e-05, 7.641700000000223e-05, 7.661100000000073e-05, 7.663899999999987e-05, 7.616700000000198e-05, 7.630600000000168e-05, 7.604199999999839e-05, 7.59029999999987e-05, 7.787499999999808e-05, 7.683300000000184e-05, 7.622200000000079e-05, 7.79030000000007e-05, 7.622200000000079e-05, 7.613899999999937e-05, 7.595800000000097e-05, 7.619400000000165e-05, 7.78189999999998e-05, 7.636100000000048e-05, 7.663899999999987e-05, 7.663900000000334e-05, 7.61249999999998e-05, 7.670800000000172e-05, 7.781999999999928e-05, 7.651399999999975e-05, 7.594500000000087e-05, 7.652799999999932e-05, 7.632000000000125e-05, 7.637500000000005e-05, 7.776299999999806e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.611" endtime="20201112 09:43:28.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.606" endtime="20201112 09:43:28.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.617" endtime="20201112 09:43:28.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.620" endtime="20201112 09:43:28.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.619" endtime="20201112 09:43:28.640"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.615" endtime="20201112 09:43:28.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.207" endtime="20201112 09:43:28.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.207" endtime="20201112 09:43:28.641"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.650" endtime="20201112 09:43:28.670"></status>
</kw>
<msg timestamp="20201112 09:43:28.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.649" endtime="20201112 09:43:28.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.671" endtime="20201112 09:43:28.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.674" endtime="20201112 09:43:28.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.646" endtime="20201112 09:43:28.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.644" endtime="20201112 09:43:28.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.684" endtime="20201112 09:43:28.971"></status>
</kw>
<msg timestamp="20201112 09:43:28.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020304111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.683" endtime="20201112 09:43:28.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020304111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.975" endtime="20201112 09:43:28.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.984" endtime="20201112 09:43:28.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.680" endtime="20201112 09:43:28.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.678" endtime="20201112 09:43:28.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.991" level="INFO">${RESULT} = [{'time': 0.020304111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.320800000000128e-05, 'source_diff': 8.320800000000128e-05}, {'time': 0.020394792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:28.987" endtime="20201112 09:43:28.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.005" level="INFO">${ACCURACY} = {'source_diff': [8.320800000000128e-05, 7.74449999999989e-05, 7.770799999999925e-05, 7.69579999999985e-05, 7.768100000000305e-05, 7.751400000000075e-05, 7.756899999999955e-05, 7.702799999999982e-05, 7...</msg>
<status status="PASS" starttime="20201112 09:43:28.992" endtime="20201112 09:43:29.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.010" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.008" endtime="20201112 09:43:29.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.012" level="INFO">VALUE: [8.320800000000128e-05, 7.74449999999989e-05, 7.770799999999925e-05, 7.69579999999985e-05, 7.768100000000305e-05, 7.751400000000075e-05, 7.756899999999955e-05, 7.702799999999982e-05, 7.697200000000154e-05, 7.742999999999986e-05, 7.768000000000011e-05, 7.711099999999776e-05, 7.769399999999968e-05, 7.719399999999918e-05, 7.69579999999985e-05, 7.779200000000014e-05, 7.747199999999857e-05, 7.719399999999918e-05, 7.73189999999993e-05, 7.883399999999985e-05, 7.743099999999933e-05, 7.713900000000037e-05, 7.731999999999878e-05, 7.736099999999801e-05, 7.704099999999992e-05, 7.76250000000013e-05, 7.702799999999982e-05, 7.775000000000143e-05, 7.762499999999783e-05, 7.745900000000194e-05, 7.762499999999783e-05, 7.762499999999783e-05, 7.887500000000255e-05, 7.736100000000148e-05, 7.734699999999844e-05, 7.706999999999853e-05, 7.715299999999994e-05, 7.705599999999896e-05, 7.763900000000087e-05, 7.726399999999703e-05, 7.733299999999887e-05, 7.759700000000216e-05, 7.744399999999943e-05, 7.713900000000037e-05, 7.769399999999968e-05, 7.694399999999893e-05, 7.697199999999807e-05, 7.890299999999822e-05, 7.730599999999921e-05, 7.709700000000166e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.011" endtime="20201112 09:43:29.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.006" endtime="20201112 09:43:29.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.016" endtime="20201112 09:43:29.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.019" endtime="20201112 09:43:29.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.018" endtime="20201112 09:43:29.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.014" endtime="20201112 09:43:29.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.642" endtime="20201112 09:43:29.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.642" endtime="20201112 09:43:29.040"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.049" endtime="20201112 09:43:29.069"></status>
</kw>
<msg timestamp="20201112 09:43:29.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.048" endtime="20201112 09:43:29.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.070" endtime="20201112 09:43:29.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.073" endtime="20201112 09:43:29.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.045" endtime="20201112 09:43:29.076"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.043" endtime="20201112 09:43:29.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.085" endtime="20201112 09:43:29.387"></status>
</kw>
<msg timestamp="20201112 09:43:29.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020200194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.083" endtime="20201112 09:43:29.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020200194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.396" endtime="20201112 09:43:29.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.408" endtime="20201112 09:43:29.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.080" endtime="20201112 09:43:29.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.079" endtime="20201112 09:43:29.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.415" level="INFO">${RESULT} = [{'time': 0.020200194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.252700000000238e-05, 'source_diff': 8.252700000000238e-05}, {'time': 0.020289875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:29.411" endtime="20201112 09:43:29.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.428" level="INFO">${ACCURACY} = {'source_diff': [8.252700000000238e-05, 7.83190000000003e-05, 7.86389999999984e-05, 7.812499999999833e-05, 7.844400000000043e-05, 7.826399999999803e-05, 7.837499999999858e-05, 7.99169999999988e-05, 7....</msg>
<status status="PASS" starttime="20201112 09:43:29.416" endtime="20201112 09:43:29.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.433" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.431" endtime="20201112 09:43:29.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.435" level="INFO">VALUE: [8.252700000000238e-05, 7.83190000000003e-05, 7.86389999999984e-05, 7.812499999999833e-05, 7.844400000000043e-05, 7.826399999999803e-05, 7.837499999999858e-05, 7.99169999999988e-05, 7.854200000000089e-05, 7.798599999999864e-05, 7.820899999999922e-05, 7.820900000000269e-05, 7.870899999999972e-05, 7.801399999999778e-05, 7.80969999999992e-05, 7.8764000000002e-05, 7.841600000000129e-05, 7.837500000000205e-05, 7.870800000000025e-05, 7.877800000000157e-05, 7.984700000000094e-05, 7.869500000000015e-05, 7.80969999999992e-05, 7.988899999999965e-05, 7.838900000000162e-05, 7.811099999999876e-05, 7.801400000000125e-05, 7.824999999999846e-05, 7.830500000000074e-05, 7.798699999999811e-05, 7.988800000000018e-05, 7.990199999999975e-05, 7.844400000000043e-05, 7.820799999999975e-05, 7.870800000000025e-05, 7.866700000000101e-05, 7.987500000000008e-05, 7.82640000000015e-05, 7.825000000000193e-05, 7.84030000000012e-05, 7.797299999999854e-05, 7.793099999999983e-05, 7.869500000000015e-05, 7.988899999999965e-05, 7.870899999999972e-05, 7.837500000000205e-05, 7.852799999999785e-05, 7.8458e-05, 7.876399999999853e-05, 7.870800000000025e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.434" endtime="20201112 09:43:29.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.429" endtime="20201112 09:43:29.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.439" endtime="20201112 09:43:29.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.442" endtime="20201112 09:43:29.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.441" endtime="20201112 09:43:29.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.437" endtime="20201112 09:43:29.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.041" endtime="20201112 09:43:29.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.041" endtime="20201112 09:43:29.463"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.472" endtime="20201112 09:43:29.491"></status>
</kw>
<msg timestamp="20201112 09:43:29.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.470" endtime="20201112 09:43:29.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.493" endtime="20201112 09:43:29.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.495" endtime="20201112 09:43:29.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.467" endtime="20201112 09:43:29.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.465" endtime="20201112 09:43:29.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.505" endtime="20201112 09:43:29.793"></status>
</kw>
<msg timestamp="20201112 09:43:29.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:29.504" endtime="20201112 09:43:29.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:29.797" endtime="20201112 09:43:29.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.806" endtime="20201112 09:43:29.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.501" endtime="20201112 09:43:29.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.500" endtime="20201112 09:43:29.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.813" level="INFO">${RESULT} = [{'time': 0.019812, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.405599999999902e-05, 'source_diff': 8.405599999999902e-05}, {'time': 0.019905639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:29.810" endtime="20201112 09:43:29.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.827" level="INFO">${ACCURACY} = {'source_diff': [8.405599999999902e-05, 7.969499999999768e-05, 7.933400000000035e-05, 7.90840000000001e-05, 7.902799999999835e-05, 8.087500000000108e-05, 7.9151999999999e-05, 7.955600000000146e-05, 7....</msg>
<status status="PASS" starttime="20201112 09:43:29.814" endtime="20201112 09:43:29.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.832" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.831" endtime="20201112 09:43:29.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.835" level="INFO">VALUE: [8.405599999999902e-05, 7.969499999999768e-05, 7.933400000000035e-05, 7.90840000000001e-05, 7.902799999999835e-05, 8.087500000000108e-05, 7.9151999999999e-05, 7.955600000000146e-05, 7.937499999999958e-05, 8.093099999999936e-05, 7.944400000000143e-05, 7.945799999999753e-05, 7.920799999999728e-05, 7.94450000000009e-05, 7.958300000000113e-05, 7.961100000000026e-05, 7.976399999999953e-05, 7.974999999999996e-05, 7.952800000000232e-05, 7.915300000000194e-05, 7.938899999999915e-05, 7.970800000000125e-05, 7.919399999999771e-05, 8.088900000000065e-05, 7.915299999999847e-05, 7.973600000000039e-05, 7.94030000000022e-05, 7.947200000000057e-05, 7.962499999999983e-05, 7.926399999999903e-05, 7.956900000000156e-05, 7.944499999999743e-05, 7.930600000000121e-05, 7.963900000000287e-05, 7.951400000000275e-05, 8.091600000000032e-05, 7.89580000000005e-05, 7.968000000000211e-05, 7.91389999999989e-05, 7.923599999999989e-05, 7.908300000000063e-05, 7.92640000000025e-05, 7.934700000000044e-05, 7.957000000000103e-05, 7.904200000000139e-05, 7.974999999999996e-05, 7.94450000000009e-05, 8.09169999999998e-05, 7.907000000000053e-05, 7.920900000000022e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.833" endtime="20201112 09:43:29.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.828" endtime="20201112 09:43:29.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.838" endtime="20201112 09:43:29.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.842" endtime="20201112 09:43:29.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.840" endtime="20201112 09:43:29.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.836" endtime="20201112 09:43:29.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.464" endtime="20201112 09:43:29.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.463" endtime="20201112 09:43:29.862"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.871" endtime="20201112 09:43:29.890"></status>
</kw>
<msg timestamp="20201112 09:43:29.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.870" endtime="20201112 09:43:29.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.892" endtime="20201112 09:43:29.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.895" endtime="20201112 09:43:29.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.867" endtime="20201112 09:43:29.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.865" endtime="20201112 09:43:29.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.904" endtime="20201112 09:43:30.190"></status>
</kw>
<msg timestamp="20201112 09:43:30.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.903" endtime="20201112 09:43:30.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.194" endtime="20201112 09:43:30.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.204" endtime="20201112 09:43:30.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.900" endtime="20201112 09:43:30.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.899" endtime="20201112 09:43:30.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.210" level="INFO">${RESULT} = [{'time': 0.019744944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.48050000000003e-05, 'source_diff': 8.48050000000003e-05}, {'time': 0.019836542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:30.207" endtime="20201112 09:43:30.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.224" level="INFO">${ACCURACY} = {'source_diff': [8.48050000000003e-05, 8.052799999999985e-05, 7.995900000000097e-05, 7.997200000000107e-05, 8.023600000000089e-05, 8.06520000000005e-05, 8.054199999999942e-05, 8.075000000000096e-05, 8...</msg>
<status status="PASS" starttime="20201112 09:43:30.211" endtime="20201112 09:43:30.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.228" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.227" endtime="20201112 09:43:30.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.231" level="INFO">VALUE: [8.48050000000003e-05, 8.052799999999985e-05, 7.995900000000097e-05, 7.997200000000107e-05, 8.023600000000089e-05, 8.06520000000005e-05, 8.054199999999942e-05, 8.075000000000096e-05, 8.073600000000139e-05, 8.055499999999952e-05, 8.005600000000196e-05, 8.04169999999993e-05, 8.029199999999917e-05, 8.055599999999899e-05, 8.023599999999742e-05, 8.051400000000028e-05, 8.002799999999935e-05, 8.055499999999952e-05, 8.076300000000106e-05, 8.006899999999859e-05, 8.008299999999816e-05, 8.023600000000089e-05, 8.18329999999999e-05, 8.029199999999917e-05, 8.070900000000172e-05, 8.01389999999999e-05, 8.18329999999999e-05, 8.018099999999861e-05, 8.043099999999886e-05, 8.079199999999967e-05, 8.032000000000178e-05, 8.02909999999997e-05, 8.184800000000242e-05, 8.038900000000015e-05, 7.994400000000193e-05, 7.998600000000064e-05, 8.051400000000028e-05, 8.186099999999905e-05, 8.076400000000053e-05, 8.032000000000178e-05, 8.04450000000019e-05, 8.04719999999981e-05, 8.073600000000139e-05, 8.023600000000089e-05, 8.054099999999995e-05, 7.998599999999717e-05, 8.01389999999999e-05, 8.00970000000012e-05, 8.038800000000068e-05, 7.994399999999846e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.229" endtime="20201112 09:43:30.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.225" endtime="20201112 09:43:30.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.234" endtime="20201112 09:43:30.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.238" endtime="20201112 09:43:30.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.236" endtime="20201112 09:43:30.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.233" endtime="20201112 09:43:30.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.863" endtime="20201112 09:43:30.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.863" endtime="20201112 09:43:30.259"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.267" endtime="20201112 09:43:30.287"></status>
</kw>
<msg timestamp="20201112 09:43:30.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.266" endtime="20201112 09:43:30.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.289" endtime="20201112 09:43:30.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.291" endtime="20201112 09:43:30.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.263" endtime="20201112 09:43:30.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.261" endtime="20201112 09:43:30.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.301" endtime="20201112 09:43:30.586"></status>
</kw>
<msg timestamp="20201112 09:43:30.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.300" endtime="20201112 09:43:30.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019700444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.591" endtime="20201112 09:43:30.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.599" endtime="20201112 09:43:30.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.297" endtime="20201112 09:43:30.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.295" endtime="20201112 09:43:30.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.606" level="INFO">${RESULT} = [{'time': 0.019786278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.583399999999991e-05, 'source_diff': 8.583399999999991e-05}, {'time': 0.019878931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:30.602" endtime="20201112 09:43:30.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.619" level="INFO">${ACCURACY} = {'source_diff': [8.583399999999991e-05, 8.162499999999837e-05, 8.162500000000183e-05, 8.150000000000171e-05, 8.155500000000052e-05, 8.133399999999888e-05, 8.120799999999928e-05, 8.140199999999778e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:30.607" endtime="20201112 09:43:30.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.624" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.623" endtime="20201112 09:43:30.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.626" level="INFO">VALUE: [8.583399999999991e-05, 8.162499999999837e-05, 8.162500000000183e-05, 8.150000000000171e-05, 8.155500000000052e-05, 8.133399999999888e-05, 8.120799999999928e-05, 8.140199999999778e-05, 8.15130000000018e-05, 8.130500000000027e-05, 8.095799999999903e-05, 8.105500000000002e-05, 8.162500000000183e-05, 8.140300000000072e-05, 8.106899999999959e-05, 8.136100000000202e-05, 8.148599999999867e-05, 8.095900000000197e-05, 8.11390000000009e-05, 8.131999999999931e-05, 8.169499999999968e-05, 8.101400000000078e-05, 8.28330000000009e-05, 8.11390000000009e-05, 8.137500000000158e-05, 8.166700000000054e-05, 8.120800000000275e-05, 8.134699999999898e-05, 8.169400000000021e-05, 8.133300000000288e-05, 8.105599999999949e-05, 8.162499999999837e-05, 8.126400000000103e-05, 8.143099999999986e-05, 8.104199999999992e-05, 8.159699999999923e-05, 8.137500000000158e-05, 8.162500000000183e-05, 8.127700000000113e-05, 8.159800000000217e-05, 8.119399999999971e-05, 8.106899999999959e-05, 8.175000000000196e-05, 8.123599999999842e-05, 8.10130000000013e-05, 8.16109999999988e-05, 8.134699999999898e-05, 8.151400000000128e-05, 8.13329999999994e-05, 8.150000000000171e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.625" endtime="20201112 09:43:30.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.620" endtime="20201112 09:43:30.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.630" endtime="20201112 09:43:30.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.633" endtime="20201112 09:43:30.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.631" endtime="20201112 09:43:30.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.628" endtime="20201112 09:43:30.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.260" endtime="20201112 09:43:30.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.259" endtime="20201112 09:43:30.654"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.662" endtime="20201112 09:43:30.682"></status>
</kw>
<msg timestamp="20201112 09:43:30.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.661" endtime="20201112 09:43:30.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.684" endtime="20201112 09:43:30.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.686" endtime="20201112 09:43:30.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.658" endtime="20201112 09:43:30.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.656" endtime="20201112 09:43:30.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.696" endtime="20201112 09:43:30.998"></status>
</kw>
<msg timestamp="20201112 09:43:31.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019807028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.695" endtime="20201112 09:43:31.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019807028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019893778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.002" endtime="20201112 09:43:31.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.011" endtime="20201112 09:43:31.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.692" endtime="20201112 09:43:31.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.690" endtime="20201112 09:43:31.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.017" level="INFO">${RESULT} = [{'time': 0.019893778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.675000000000002e-05, 'source_diff': 8.675000000000002e-05}, {'time': 0.019988417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:31.014" endtime="20201112 09:43:31.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.031" level="INFO">${ACCURACY} = {'source_diff': [8.675000000000002e-05, 8.26390000000024e-05, 8.199999999999874e-05, 8.19719999999996e-05, 8.244400000000096e-05, 8.212499999999887e-05, 8.38049999999993e-05, 8.258300000000066e-05, 8....</msg>
<status status="PASS" starttime="20201112 09:43:31.018" endtime="20201112 09:43:31.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.035" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.034" endtime="20201112 09:43:31.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.037" level="INFO">VALUE: [8.675000000000002e-05, 8.26390000000024e-05, 8.199999999999874e-05, 8.19719999999996e-05, 8.244400000000096e-05, 8.212499999999887e-05, 8.38049999999993e-05, 8.258300000000066e-05, 8.23330000000004e-05, 8.22780000000016e-05, 8.269400000000121e-05, 8.248600000000314e-05, 8.198600000000264e-05, 8.24309999999974e-05, 8.215300000000147e-05, 8.21390000000019e-05, 8.243100000000086e-05, 8.257000000000056e-05, 8.261199999999927e-05, 8.220800000000028e-05, 8.2152000000002e-05, 8.269400000000121e-05, 8.258299999999719e-05, 8.27780000000021e-05, 8.2152999999998e-05, 8.388900000000019e-05, 8.265300000000197e-05, 8.382000000000181e-05, 8.274999999999949e-05, 8.286100000000005e-05, 8.237500000000259e-05, 8.25979999999997e-05, 8.197200000000307e-05, 8.261200000000274e-05, 8.20130000000023e-05, 8.255500000000152e-05, 8.23330000000004e-05, 8.216700000000104e-05, 8.222200000000332e-05, 8.380500000000277e-05, 8.26529999999985e-05, 8.194499999999993e-05, 8.391699999999933e-05, 8.270900000000025e-05, 8.207000000000006e-05, 8.240300000000172e-05, 8.258400000000013e-05, 8.388800000000071e-05, 8.204099999999798e-05, 8.255500000000152e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.036" endtime="20201112 09:43:31.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.032" endtime="20201112 09:43:31.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.041" endtime="20201112 09:43:31.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.044" endtime="20201112 09:43:31.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.043" endtime="20201112 09:43:31.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.039" endtime="20201112 09:43:31.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.655" endtime="20201112 09:43:31.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.654" endtime="20201112 09:43:31.065"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.074" endtime="20201112 09:43:31.094"></status>
</kw>
<msg timestamp="20201112 09:43:31.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.072" endtime="20201112 09:43:31.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.095" endtime="20201112 09:43:31.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.098" endtime="20201112 09:43:31.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.070" endtime="20201112 09:43:31.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.068" endtime="20201112 09:43:31.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.108" endtime="20201112 09:43:31.394"></status>
</kw>
<msg timestamp="20201112 09:43:31.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.106" endtime="20201112 09:43:31.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019774097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.398" endtime="20201112 09:43:31.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.406" endtime="20201112 09:43:31.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.104" endtime="20201112 09:43:31.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.102" endtime="20201112 09:43:31.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.413" level="INFO">${RESULT} = [{'time': 0.019774097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.766600000000013e-05, 'source_diff': 8.766600000000013e-05}, {'time': 0.019869667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:31.410" endtime="20201112 09:43:31.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.427" level="INFO">${ACCURACY} = {'source_diff': [8.766600000000013e-05, 8.29590000000005e-05, 8.312499999999987e-05, 8.333400000000088e-05, 8.483299999999944e-05, 8.357000000000156e-05, 8.488800000000171e-05, 8.295800000000103e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:31.414" endtime="20201112 09:43:31.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.432" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.431" endtime="20201112 09:43:31.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.434" level="INFO">VALUE: [8.766600000000013e-05, 8.29590000000005e-05, 8.312499999999987e-05, 8.333400000000088e-05, 8.483299999999944e-05, 8.357000000000156e-05, 8.488800000000171e-05, 8.295800000000103e-05, 8.319399999999824e-05, 8.486099999999858e-05, 8.363899999999994e-05, 8.345800000000153e-05, 8.370799999999831e-05, 8.486099999999858e-05, 8.301399999999931e-05, 8.297300000000007e-05, 8.294499999999747e-05, 8.483299999999944e-05, 8.313899999999944e-05, 8.324999999999999e-05, 8.338800000000021e-05, 8.306900000000159e-05, 8.344399999999849e-05, 8.370799999999831e-05, 8.376400000000006e-05, 8.31110000000003e-05, 8.32919999999987e-05, 8.312499999999987e-05, 8.3152999999999e-05, 8.488900000000119e-05, 8.294500000000093e-05, 8.355599999999852e-05, 8.486100000000205e-05, 8.305600000000149e-05, 8.481899999999987e-05, 8.36110000000008e-05, 8.333299999999794e-05, 8.370800000000178e-05, 8.307000000000106e-05, 8.299999999999974e-05, 8.487500000000162e-05, 8.333299999999794e-05, 8.326399999999956e-05, 8.359700000000123e-05, 8.320800000000128e-05, 8.363899999999994e-05, 8.377799999999963e-05, 8.490200000000128e-05, 8.294400000000146e-05, 8.369400000000221e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.433" endtime="20201112 09:43:31.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.428" endtime="20201112 09:43:31.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.444" endtime="20201112 09:43:31.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.447" endtime="20201112 09:43:31.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.446" endtime="20201112 09:43:31.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.442" endtime="20201112 09:43:31.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.066" endtime="20201112 09:43:31.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.066" endtime="20201112 09:43:31.468"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.476" endtime="20201112 09:43:31.496"></status>
</kw>
<msg timestamp="20201112 09:43:31.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.475" endtime="20201112 09:43:31.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.498" endtime="20201112 09:43:31.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.500" endtime="20201112 09:43:31.503"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.472" endtime="20201112 09:43:31.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.470" endtime="20201112 09:43:31.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.510" endtime="20201112 09:43:31.796"></status>
</kw>
<msg timestamp="20201112 09:43:31.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019547069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.509" endtime="20201112 09:43:31.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019547069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.800" endtime="20201112 09:43:31.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.808" endtime="20201112 09:43:31.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.506" endtime="20201112 09:43:31.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.505" endtime="20201112 09:43:31.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.815" level="INFO">${RESULT} = [{'time': 0.019547069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.850000000000177e-05, 'source_diff': 8.850000000000177e-05}, {'time': 0.019642764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:31.812" endtime="20201112 09:43:31.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.828" level="INFO">${ACCURACY} = {'source_diff': [8.850000000000177e-05, 8.452800000000038e-05, 8.459699999999876e-05, 8.46110000000018e-05, 8.434700000000198e-05, 8.449999999999777e-05, 8.437500000000112e-05, 8.419400000000271e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:31.816" endtime="20201112 09:43:31.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.833" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.832" endtime="20201112 09:43:31.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.835" level="INFO">VALUE: [8.850000000000177e-05, 8.452800000000038e-05, 8.459699999999876e-05, 8.46110000000018e-05, 8.434700000000198e-05, 8.449999999999777e-05, 8.437500000000112e-05, 8.419400000000271e-05, 8.441699999999983e-05, 8.4153e-05, 8.393100000000236e-05, 8.401400000000031e-05, 8.584799999999948e-05, 8.409699999999826e-05, 8.465200000000103e-05, 8.408299999999869e-05, 8.422200000000185e-05, 8.440300000000026e-05, 8.458399999999866e-05, 8.397199999999813e-05, 8.468099999999965e-05, 8.44309999999994e-05, 8.450000000000124e-05, 8.419500000000218e-05, 8.411099999999783e-05, 8.434800000000145e-05, 8.582000000000034e-05, 8.402799999999988e-05, 8.5847e-05, 8.588799999999924e-05, 8.41660000000001e-05, 8.587500000000262e-05, 8.427800000000013e-05, 8.436100000000155e-05, 8.458299999999919e-05, 8.416699999999958e-05, 8.472200000000235e-05, 8.432000000000231e-05, 8.418099999999915e-05, 8.40980000000012e-05, 8.46660000000006e-05, 8.452699999999744e-05, 8.401299999999737e-05, 8.429100000000023e-05, 8.423599999999795e-05, 8.408299999999869e-05, 8.477800000000063e-05, 8.470800000000278e-05, 8.408299999999869e-05, 8.433299999999894e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.834" endtime="20201112 09:43:31.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.829" endtime="20201112 09:43:31.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.839" endtime="20201112 09:43:31.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.842" endtime="20201112 09:43:31.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.841" endtime="20201112 09:43:31.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.837" endtime="20201112 09:43:31.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.469" endtime="20201112 09:43:31.863"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.468" endtime="20201112 09:43:31.863"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.872" endtime="20201112 09:43:31.892"></status>
</kw>
<msg timestamp="20201112 09:43:31.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.870" endtime="20201112 09:43:31.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.893" endtime="20201112 09:43:31.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.896" endtime="20201112 09:43:31.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.867" endtime="20201112 09:43:31.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.865" endtime="20201112 09:43:31.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.905" endtime="20201112 09:43:32.192"></status>
</kw>
<msg timestamp="20201112 09:43:32.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.904" endtime="20201112 09:43:32.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019691944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.196" endtime="20201112 09:43:32.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.204" endtime="20201112 09:43:32.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.902" endtime="20201112 09:43:32.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.900" endtime="20201112 09:43:32.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.211" level="INFO">${RESULT} = [{'time': 0.019691944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.95129999999994e-05, 'source_diff': 8.95129999999994e-05}, {'time': 0.019791597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:32.207" endtime="20201112 09:43:32.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.224" level="INFO">${ACCURACY} = {'source_diff': [8.95129999999994e-05, 8.6847000000001e-05, 8.524999999999852e-05, 8.501399999999784e-05, 8.538900000000169e-05, 8.559699999999976e-05, 8.494499999999947e-05, 8.551400000000181e-05, 8....</msg>
<status status="PASS" starttime="20201112 09:43:32.212" endtime="20201112 09:43:32.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.229" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.228" endtime="20201112 09:43:32.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.231" level="INFO">VALUE: [8.95129999999994e-05, 8.6847000000001e-05, 8.524999999999852e-05, 8.501399999999784e-05, 8.538900000000169e-05, 8.559699999999976e-05, 8.494499999999947e-05, 8.551400000000181e-05, 8.683400000000091e-05, 8.502699999999794e-05, 8.506999999999959e-05, 8.506999999999959e-05, 8.51660000000011e-05, 8.51249999999984e-05, 8.5153000000001e-05, 8.575000000000249e-05, 8.522199999999938e-05, 8.537499999999865e-05, 8.513799999999849e-05, 8.506900000000012e-05, 8.509699999999926e-05, 8.557000000000009e-05, 8.576400000000206e-05, 8.690299999999929e-05, 8.505600000000002e-05, 8.526400000000156e-05, 8.541700000000083e-05, 8.549999999999877e-05, 8.565199999999856e-05, 8.513899999999797e-05, 8.508299999999969e-05, 8.574999999999902e-05, 8.562500000000237e-05, 8.691599999999938e-05, 8.557000000000009e-05, 8.688899999999972e-05, 8.519499999999972e-05, 8.554200000000095e-05, 8.513900000000144e-05, 8.56530000000015e-05, 8.49309999999999e-05, 8.49859999999987e-05, 8.526399999999809e-05, 8.524999999999852e-05, 8.537499999999865e-05, 8.554199999999748e-05, 8.551399999999834e-05, 8.544399999999702e-05, 8.569500000000022e-05, 8.56530000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.230" endtime="20201112 09:43:32.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.225" endtime="20201112 09:43:32.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.235" endtime="20201112 09:43:32.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.238" endtime="20201112 09:43:32.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.236" endtime="20201112 09:43:32.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.233" endtime="20201112 09:43:32.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.864" endtime="20201112 09:43:32.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.863" endtime="20201112 09:43:32.259"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.267" endtime="20201112 09:43:32.287"></status>
</kw>
<msg timestamp="20201112 09:43:32.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.266" endtime="20201112 09:43:32.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.289" endtime="20201112 09:43:32.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.291" endtime="20201112 09:43:32.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.263" endtime="20201112 09:43:32.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.261" endtime="20201112 09:43:32.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.301" endtime="20201112 09:43:32.587"></status>
</kw>
<msg timestamp="20201112 09:43:32.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.300" endtime="20201112 09:43:32.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019582611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.591" endtime="20201112 09:43:32.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.599" endtime="20201112 09:43:32.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.297" endtime="20201112 09:43:32.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.295" endtime="20201112 09:43:32.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.606" level="INFO">${RESULT} = [{'time': 0.019672986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.037500000000018e-05, 'source_diff': 9.037500000000018e-05}, {'time': 0.019771708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.602" endtime="20201112 09:43:32.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.619" level="INFO">${ACCURACY} = {'source_diff': [9.037500000000018e-05, 8.679099999999926e-05, 8.632000000000084e-05, 8.6153000000002e-05, 8.680499999999883e-05, 8.61249999999994e-05, 8.676300000000012e-05, 8.681900000000187e-05, 8....</msg>
<status status="PASS" starttime="20201112 09:43:32.607" endtime="20201112 09:43:32.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.624" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.623" endtime="20201112 09:43:32.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.626" level="INFO">VALUE: [9.037500000000018e-05, 8.679099999999926e-05, 8.632000000000084e-05, 8.6153000000002e-05, 8.680499999999883e-05, 8.61249999999994e-05, 8.676300000000012e-05, 8.681900000000187e-05, 8.638899999999922e-05, 8.638899999999922e-05, 8.647199999999716e-05, 8.623599999999995e-05, 8.595799999999709e-05, 8.59859999999997e-05, 8.786200000000105e-05, 8.777800000000016e-05, 8.634799999999998e-05, 8.607000000000059e-05, 8.649999999999977e-05, 8.604099999999851e-05, 8.647200000000063e-05, 8.654200000000195e-05, 8.606900000000112e-05, 8.594400000000099e-05, 8.672200000000088e-05, 8.78189999999994e-05, 8.788800000000124e-05, 8.6153000000002e-05, 8.659700000000076e-05, 8.68059999999983e-05, 8.613899999999897e-05, 8.66249999999999e-05, 8.609799999999973e-05, 8.640200000000278e-05, 8.602799999999841e-05, 8.606900000000112e-05, 8.665299999999904e-05, 8.786100000000158e-05, 8.651399999999934e-05, 8.658300000000119e-05, 8.633300000000094e-05, 8.783299999999897e-05, 8.638899999999922e-05, 8.626399999999909e-05, 8.633400000000041e-05, 8.66660000000026e-05, 8.658400000000066e-05, 8.786199999999758e-05, 8.783299999999897e-05, 8.64860000000002e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.625" endtime="20201112 09:43:32.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.620" endtime="20201112 09:43:32.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.630" endtime="20201112 09:43:32.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.633" endtime="20201112 09:43:32.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.632" endtime="20201112 09:43:32.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.628" endtime="20201112 09:43:32.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.260" endtime="20201112 09:43:32.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.259" endtime="20201112 09:43:32.654"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.663" endtime="20201112 09:43:32.682"></status>
</kw>
<msg timestamp="20201112 09:43:32.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.661" endtime="20201112 09:43:32.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.684" endtime="20201112 09:43:32.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.686" endtime="20201112 09:43:32.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.659" endtime="20201112 09:43:32.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.656" endtime="20201112 09:43:32.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.696" endtime="20201112 09:43:32.981"></status>
</kw>
<msg timestamp="20201112 09:43:32.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019790792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.695" endtime="20201112 09:43:32.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019790792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.985" endtime="20201112 09:43:32.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.993" endtime="20201112 09:43:32.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.692" endtime="20201112 09:43:32.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.690" endtime="20201112 09:43:32.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.000" level="INFO">${RESULT} = [{'time': 0.019790792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.134800000000151e-05, 'source_diff': 9.134800000000151e-05}, {'time': 0.019891458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.997" endtime="20201112 09:43:33.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.014" level="INFO">${ACCURACY} = {'source_diff': [9.134800000000151e-05, 8.754100000000001e-05, 8.716599999999963e-05, 8.88190000000004e-05, 8.744399999999902e-05, 8.747199999999816e-05, 8.697199999999766e-05, 8.716700000000258e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:33.001" endtime="20201112 09:43:33.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.019" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.018" endtime="20201112 09:43:33.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.021" level="INFO">VALUE: [9.134800000000151e-05, 8.754100000000001e-05, 8.716599999999963e-05, 8.88190000000004e-05, 8.744399999999902e-05, 8.747199999999816e-05, 8.697199999999766e-05, 8.716700000000258e-05, 8.744500000000197e-05, 8.883399999999944e-05, 8.888900000000172e-05, 8.705600000000202e-05, 8.733400000000141e-05, 8.707000000000159e-05, 8.756900000000262e-05, 8.758299999999872e-05, 8.740299999999979e-05, 8.888900000000172e-05, 8.772200000000188e-05, 8.726400000000009e-05, 8.745799999999859e-05, 8.777800000000016e-05, 8.71250000000004e-05, 8.704200000000245e-05, 8.725000000000052e-05, 8.727799999999966e-05, 8.775000000000102e-05, 8.73470000000015e-05, 8.720800000000181e-05, 8.744400000000249e-05, 8.737499999999718e-05, 8.694399999999852e-05, 8.722199999999791e-05, 8.701399999999984e-05, 8.736099999999761e-05, 8.770900000000179e-05, 8.71250000000004e-05, 8.701399999999984e-05, 8.707000000000159e-05, 8.708299999999822e-05, 8.765200000000056e-05, 8.74860000000012e-05, 8.773600000000145e-05, 8.750000000000077e-05, 8.719399999999877e-05, 8.73189999999989e-05, 8.777800000000016e-05, 8.737500000000065e-05, 8.752700000000044e-05, 8.770799999999884e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.020" endtime="20201112 09:43:33.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.015" endtime="20201112 09:43:33.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.025" endtime="20201112 09:43:33.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.028" endtime="20201112 09:43:33.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.027" endtime="20201112 09:43:33.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.023" endtime="20201112 09:43:33.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.655" endtime="20201112 09:43:33.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.654" endtime="20201112 09:43:33.049"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.058" endtime="20201112 09:43:33.078"></status>
</kw>
<msg timestamp="20201112 09:43:33.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.056" endtime="20201112 09:43:33.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.079" endtime="20201112 09:43:33.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.082" endtime="20201112 09:43:33.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.054" endtime="20201112 09:43:33.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.052" endtime="20201112 09:43:33.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.092" endtime="20201112 09:43:33.377"></status>
</kw>
<msg timestamp="20201112 09:43:33.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019631306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.090" endtime="20201112 09:43:33.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019631306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.381" endtime="20201112 09:43:33.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.389" endtime="20201112 09:43:33.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.087" endtime="20201112 09:43:33.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.086" endtime="20201112 09:43:33.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.396" level="INFO">${RESULT} = [{'time': 0.019631306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.308400000000022e-05, 'source_diff': 9.308400000000022e-05}, {'time': 0.019731986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:33.393" endtime="20201112 09:43:33.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.409" level="INFO">${ACCURACY} = {'source_diff': [9.308400000000022e-05, 8.848599999999873e-05, 8.837500000000165e-05, 8.86800000000007e-05, 8.827800000000066e-05, 8.798599999999823e-05, 8.833299999999947e-05, 8.877800000000116e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:33.397" endtime="20201112 09:43:33.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.414" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.413" endtime="20201112 09:43:33.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.416" level="INFO">VALUE: [9.308400000000022e-05, 8.848599999999873e-05, 8.837500000000165e-05, 8.86800000000007e-05, 8.827800000000066e-05, 8.798599999999823e-05, 8.833299999999947e-05, 8.877800000000116e-05, 8.98329999999975e-05, 8.825000000000152e-05, 8.856999999999962e-05, 8.832000000000284e-05, 8.819399999999977e-05, 8.982000000000087e-05, 8.834699999999904e-05, 8.838900000000122e-05, 8.869400000000027e-05, 8.834699999999904e-05, 8.833299999999947e-05, 8.84449999999995e-05, 8.815200000000106e-05, 8.88060000000003e-05, 8.81670000000001e-05, 8.7944999999999e-05, 8.834800000000198e-05, 8.863900000000147e-05, 8.822199999999891e-05, 8.879200000000073e-05, 8.827700000000119e-05, 8.986100000000011e-05, 8.869400000000027e-05, 8.873599999999898e-05, 8.8638999999998e-05, 8.813900000000097e-05, 8.870799999999984e-05, 8.848599999999873e-05, 8.868100000000018e-05, 8.813900000000097e-05, 8.982000000000087e-05, 8.802800000000041e-05, 8.880500000000083e-05, 8.850000000000177e-05, 8.808300000000269e-05, 8.852799999999744e-05, 8.819399999999977e-05, 8.987499999999968e-05, 8.990299999999882e-05, 8.826399999999762e-05, 8.805599999999955e-05, 8.7944999999999e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.415" endtime="20201112 09:43:33.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.410" endtime="20201112 09:43:33.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.420" endtime="20201112 09:43:33.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.423" endtime="20201112 09:43:33.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.422" endtime="20201112 09:43:33.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.418" endtime="20201112 09:43:33.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.050" endtime="20201112 09:43:33.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.050" endtime="20201112 09:43:33.444"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.453" endtime="20201112 09:43:33.473"></status>
</kw>
<msg timestamp="20201112 09:43:33.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.451" endtime="20201112 09:43:33.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.474" endtime="20201112 09:43:33.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.477" endtime="20201112 09:43:33.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.448" endtime="20201112 09:43:33.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.446" endtime="20201112 09:43:33.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.487" endtime="20201112 09:43:33.773"></status>
</kw>
<msg timestamp="20201112 09:43:33.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.485" endtime="20201112 09:43:33.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.777" endtime="20201112 09:43:33.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.785" endtime="20201112 09:43:33.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.483" endtime="20201112 09:43:33.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.481" endtime="20201112 09:43:33.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.792" level="INFO">${RESULT} = [{'time': 0.019780889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.358299999999778e-05, 'source_diff': 9.358299999999778e-05}, {'time': 0.019883556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:33.789" endtime="20201112 09:43:33.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.805" level="INFO">${ACCURACY} = {'source_diff': [9.358299999999778e-05, 8.905600000000055e-05, 8.91389999999985e-05, 8.902799999999794e-05, 8.970900000000032e-05, 8.958400000000019e-05, 8.923599999999948e-05, 8.923599999999948e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:33.793" endtime="20201112 09:43:33.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.810" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.809" endtime="20201112 09:43:33.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.812" level="INFO">VALUE: [9.358299999999778e-05, 8.905600000000055e-05, 8.91389999999985e-05, 8.902799999999794e-05, 8.970900000000032e-05, 8.958400000000019e-05, 8.923599999999948e-05, 8.923599999999948e-05, 8.915300000000154e-05, 9.091699999999939e-05, 8.9638999999999e-05, 9.091699999999939e-05, 8.938799999999927e-05, 8.976399999999912e-05, 8.94450000000005e-05, 8.926400000000209e-05, 8.943100000000093e-05, 8.926399999999862e-05, 8.977699999999922e-05, 8.915299999999807e-05, 8.900000000000227e-05, 8.958300000000072e-05, 8.952799999999844e-05, 8.9638999999999e-05, 8.901399999999837e-05, 8.943099999999746e-05, 8.927800000000166e-05, 8.958400000000019e-05, 9.090299999999982e-05, 8.901400000000184e-05, 8.962499999999943e-05, 8.908300000000022e-05, 8.902700000000194e-05, 8.933300000000047e-05, 8.955600000000105e-05, 9.081899999999893e-05, 8.944399999999755e-05, 9.088900000000025e-05, 8.974999999999955e-05, 8.943000000000145e-05, 8.963900000000247e-05, 9.090299999999982e-05, 8.902799999999794e-05, 8.959700000000029e-05, 8.974999999999955e-05, 8.907000000000012e-05, 8.91389999999985e-05, 8.952800000000191e-05, 8.96800000000017e-05, 8.943000000000145e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.811" endtime="20201112 09:43:33.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.806" endtime="20201112 09:43:33.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.816" endtime="20201112 09:43:33.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.819" endtime="20201112 09:43:33.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.818" endtime="20201112 09:43:33.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.814" endtime="20201112 09:43:33.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.445" endtime="20201112 09:43:33.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.444" endtime="20201112 09:43:33.840"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.849" endtime="20201112 09:43:33.869"></status>
</kw>
<msg timestamp="20201112 09:43:33.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.847" endtime="20201112 09:43:33.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.871" endtime="20201112 09:43:33.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.873" endtime="20201112 09:43:33.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.844" endtime="20201112 09:43:33.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.842" endtime="20201112 09:43:33.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.883" endtime="20201112 09:43:34.169"></status>
</kw>
<msg timestamp="20201112 09:43:34.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.882" endtime="20201112 09:43:34.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019664708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.174" endtime="20201112 09:43:34.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.182" endtime="20201112 09:43:34.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.879" endtime="20201112 09:43:34.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.878" endtime="20201112 09:43:34.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.188" level="INFO">${RESULT} = [{'time': 0.019664708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.463900000000053e-05, 'source_diff': 9.463900000000053e-05}, {'time': 0.019768375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.185" endtime="20201112 09:43:34.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.202" level="INFO">${ACCURACY} = {'source_diff': [9.463900000000053e-05, 9.01670000000021e-05, 9.025000000000005e-05, 9.016699999999864e-05, 9.026399999999962e-05, 9.084700000000154e-05, 9.069499999999828e-05, 9.019500000000125e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:34.189" endtime="20201112 09:43:34.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.206" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.205" endtime="20201112 09:43:34.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.209" level="INFO">VALUE: [9.463900000000053e-05, 9.01670000000021e-05, 9.025000000000005e-05, 9.016699999999864e-05, 9.026399999999962e-05, 9.084700000000154e-05, 9.069499999999828e-05, 9.019500000000125e-05, 9.038899999999975e-05, 9.076400000000012e-05, 9.061100000000086e-05, 9.06939999999988e-05, 9.027799999999919e-05, 9.034800000000051e-05, 9.013900000000297e-05, 9.03190000000019e-05, 9.068099999999871e-05, 9.019500000000125e-05, 9.029200000000223e-05, 9.044399999999855e-05, 9.019499999999778e-05, 8.995900000000057e-05, 9.062500000000043e-05, 8.99999999999998e-05, 9.06939999999988e-05, 9.059699999999782e-05, 9.040299999999932e-05, 9.012499999999993e-05, 9.188899999999778e-05, 9.001399999999937e-05, 9.047199999999769e-05, 8.993099999999796e-05, 9.043099999999846e-05, 9.070899999999785e-05, 9.056999999999815e-05, 9.043099999999846e-05, 9.016599999999916e-05, 9.042999999999898e-05, 9.057000000000162e-05, 9.051399999999987e-05, 9.048600000000073e-05, 9.077799999999969e-05, 9.032000000000137e-05, 9.041699999999889e-05, 9.186099999999864e-05, 9.055599999999858e-05, 9.076400000000012e-05, 9.031899999999843e-05, 9.077799999999969e-05, 9.076300000000065e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.207" endtime="20201112 09:43:34.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.203" endtime="20201112 09:43:34.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.212" endtime="20201112 09:43:34.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.216" endtime="20201112 09:43:34.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.214" endtime="20201112 09:43:34.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.211" endtime="20201112 09:43:34.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.841" endtime="20201112 09:43:34.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.840" endtime="20201112 09:43:34.237"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.245" endtime="20201112 09:43:34.266"></status>
</kw>
<msg timestamp="20201112 09:43:34.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.244" endtime="20201112 09:43:34.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.267" endtime="20201112 09:43:34.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.270" endtime="20201112 09:43:34.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.241" endtime="20201112 09:43:34.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.239" endtime="20201112 09:43:34.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.280" endtime="20201112 09:43:34.565"></status>
</kw>
<msg timestamp="20201112 09:43:34.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019738194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.278" endtime="20201112 09:43:34.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019738194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019833694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.569" endtime="20201112 09:43:34.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.577" endtime="20201112 09:43:34.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.276" endtime="20201112 09:43:34.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.274" endtime="20201112 09:43:34.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.584" level="INFO">${RESULT} = [{'time': 0.019833694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.549999999999836e-05, 'source_diff': 9.549999999999836e-05}, {'time': 0.019937333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.581" endtime="20201112 09:43:34.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.598" level="INFO">${ACCURACY} = {'source_diff': [9.549999999999836e-05, 9.122200000000191e-05, 9.1639000000001e-05, 9.126399999999715e-05, 9.137500000000118e-05, 9.144399999999955e-05, 9.133300000000247e-05, 9.294500000000053e-05, 9...</msg>
<status status="PASS" starttime="20201112 09:43:34.585" endtime="20201112 09:43:34.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.603" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.602" endtime="20201112 09:43:34.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.605" level="INFO">VALUE: [9.549999999999836e-05, 9.122200000000191e-05, 9.1639000000001e-05, 9.126399999999715e-05, 9.137500000000118e-05, 9.144399999999955e-05, 9.133300000000247e-05, 9.294500000000053e-05, 9.0945000000002e-05, 9.13060000000028e-05, 9.133400000000194e-05, 9.170899999999885e-05, 9.15139999999974e-05, 9.287499999999921e-05, 9.133300000000247e-05, 9.156900000000315e-05, 9.18199999999994e-05, 9.131899999999943e-05, 9.133300000000247e-05, 9.288899999999878e-05, 9.115300000000007e-05, 9.1639000000001e-05, 9.170799999999937e-05, 9.161200000000133e-05, 9.170899999999885e-05, 9.093099999999896e-05, 9.138800000000127e-05, 9.102700000000047e-05, 9.152800000000044e-05, 9.144399999999955e-05, 9.088900000000025e-05, 9.113899999999703e-05, 9.101400000000037e-05, 9.11939999999993e-05, 9.145800000000259e-05, 9.134799999999804e-05, 9.152800000000044e-05, 9.127800000000019e-05, 9.112499999999746e-05, 9.108299999999875e-05, 9.140199999999737e-05, 9.108399999999822e-05, 9.16939999999998e-05, 9.152800000000044e-05, 9.158299999999925e-05, 9.280600000000083e-05, 9.162500000000143e-05, 9.130599999999933e-05, 9.129199999999976e-05, 9.097299999999767e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.604" endtime="20201112 09:43:34.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.599" endtime="20201112 09:43:34.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.609" endtime="20201112 09:43:34.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.612" endtime="20201112 09:43:34.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.611" endtime="20201112 09:43:34.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.607" endtime="20201112 09:43:34.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.238" endtime="20201112 09:43:34.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.237" endtime="20201112 09:43:34.633"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.642" endtime="20201112 09:43:34.662"></status>
</kw>
<msg timestamp="20201112 09:43:34.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.640" endtime="20201112 09:43:34.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.664" endtime="20201112 09:43:34.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.666" endtime="20201112 09:43:34.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.637" endtime="20201112 09:43:34.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.635" endtime="20201112 09:43:34.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.676" endtime="20201112 09:43:34.962"></status>
</kw>
<msg timestamp="20201112 09:43:34.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.675" endtime="20201112 09:43:34.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019657292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.966" endtime="20201112 09:43:34.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.974" endtime="20201112 09:43:34.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.672" endtime="20201112 09:43:34.976"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.670" endtime="20201112 09:43:34.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.981" level="INFO">${RESULT} = [{'time': 0.019754236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694400000000158e-05, 'source_diff': 9.694400000000158e-05}, {'time': 0.019857903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.977" endtime="20201112 09:43:34.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.994" level="INFO">${ACCURACY} = {'source_diff': [9.694400000000158e-05, 9.274999999999908e-05, 9.272299999999942e-05, 9.19719999999992e-05, 9.218100000000021e-05, 9.233399999999947e-05, 9.222199999999944e-05, 9.240300000000132e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:34.982" endtime="20201112 09:43:34.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.998" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.997" endtime="20201112 09:43:34.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.001" level="INFO">VALUE: [9.694400000000158e-05, 9.274999999999908e-05, 9.272299999999942e-05, 9.19719999999992e-05, 9.218100000000021e-05, 9.233399999999947e-05, 9.222199999999944e-05, 9.240300000000132e-05, 9.277800000000169e-05, 9.19719999999992e-05, 9.252799999999797e-05, 9.237500000000218e-05, 9.390299999999935e-05, 9.258300000000025e-05, 9.230600000000033e-05, 9.26529999999981e-05, 9.280600000000083e-05, 9.199999999999833e-05, 9.197299999999867e-05, 9.206999999999965e-05, 9.248600000000273e-05, 9.276400000000212e-05, 9.262499999999896e-05, 9.206900000000018e-05, 9.227800000000119e-05, 9.263899999999853e-05, 9.226399999999815e-05, 9.219499999999978e-05, 9.265300000000157e-05, 9.238900000000175e-05, 9.199999999999833e-05, 9.26529999999981e-05, 9.198699999999824e-05, 9.249999999999883e-05, 9.218000000000073e-05, 9.237499999999871e-05, 9.281900000000093e-05, 9.256900000000068e-05, 9.276399999999865e-05, 9.244400000000055e-05, 9.272199999999994e-05, 9.38200000000014e-05, 9.220799999999987e-05, 9.387500000000021e-05, 9.216699999999717e-05, 9.263899999999853e-05, 9.251299999999893e-05, 9.223599999999901e-05, 9.274999999999908e-05, 9.28330000000005e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.999" endtime="20201112 09:43:35.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.995" endtime="20201112 09:43:35.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.005" endtime="20201112 09:43:35.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.008" endtime="20201112 09:43:35.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.006" endtime="20201112 09:43:35.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.003" endtime="20201112 09:43:35.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.634" endtime="20201112 09:43:35.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.633" endtime="20201112 09:43:35.029"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.037" endtime="20201112 09:43:35.058"></status>
</kw>
<msg timestamp="20201112 09:43:35.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.036" endtime="20201112 09:43:35.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.059" endtime="20201112 09:43:35.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.062" endtime="20201112 09:43:35.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.033" endtime="20201112 09:43:35.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.031" endtime="20201112 09:43:35.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.072" endtime="20201112 09:43:35.356"></status>
</kw>
<msg timestamp="20201112 09:43:35.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01973025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:35.070" endtime="20201112 09:43:35.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01973025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:35.360" endtime="20201112 09:43:35.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.368" endtime="20201112 09:43:35.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.068" endtime="20201112 09:43:35.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.066" endtime="20201112 09:43:35.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.375" level="INFO">${RESULT} = [{'time': 0.01973025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.926400000000168e-05, 'source_diff': 9.926400000000168e-05}, {'time': 0.019833889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:35.372" endtime="20201112 09:43:35.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.389" level="INFO">${ACCURACY} = {'source_diff': [9.926400000000168e-05, 9.327799999999872e-05, 9.376399999999965e-05, 9.29590000000001e-05, 9.307000000000065e-05, 9.366699999999867e-05, 9.484700000000207e-05, 9.358300000000125e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:35.376" endtime="20201112 09:43:35.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.393" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.392" endtime="20201112 09:43:35.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.395" level="INFO">VALUE: [9.926400000000168e-05, 9.327799999999872e-05, 9.376399999999965e-05, 9.29590000000001e-05, 9.307000000000065e-05, 9.366699999999867e-05, 9.484700000000207e-05, 9.358300000000125e-05, 9.363899999999953e-05, 9.359700000000082e-05, 9.349999999999983e-05, 9.341699999999842e-05, 9.369399999999833e-05, 9.377699999999975e-05, 9.375000000000008e-05, 9.320900000000035e-05, 9.365300000000257e-05, 9.326400000000262e-05, 9.319500000000078e-05, 9.479100000000032e-05, 9.334700000000057e-05, 9.354199999999854e-05, 9.373600000000051e-05, 9.336100000000014e-05, 9.326399999999915e-05, 9.35139999999994e-05, 9.379199999999879e-05, 9.358400000000072e-05, 9.342999999999851e-05, 9.369500000000128e-05, 9.372200000000094e-05, 9.295800000000062e-05, 9.375000000000008e-05, 9.344399999999808e-05, 9.322200000000044e-05, 9.306900000000118e-05, 9.348600000000026e-05, 9.31529999999986e-05, 9.288900000000225e-05, 9.38200000000014e-05, 9.318099999999774e-05, 9.29590000000001e-05, 9.363899999999953e-05, 9.302799999999847e-05, 9.3026999999999e-05, 9.334700000000057e-05, 9.37079999999979e-05, 9.36940000000018e-05, 9.488899999999731e-05, 9.376399999999965e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.394" endtime="20201112 09:43:35.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.389" endtime="20201112 09:43:35.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.399" endtime="20201112 09:43:35.400"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.403" endtime="20201112 09:43:35.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.401" endtime="20201112 09:43:35.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.397" endtime="20201112 09:43:35.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.030" endtime="20201112 09:43:35.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.029" endtime="20201112 09:43:35.423"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.432" endtime="20201112 09:43:35.453"></status>
</kw>
<msg timestamp="20201112 09:43:35.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.431" endtime="20201112 09:43:35.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.454" endtime="20201112 09:43:35.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.457" endtime="20201112 09:43:35.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.428" endtime="20201112 09:43:35.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.426" endtime="20201112 09:43:35.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.467" endtime="20201112 09:43:35.753"></status>
</kw>
<msg timestamp="20201112 09:43:35.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:35.465" endtime="20201112 09:43:35.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:35.757" endtime="20201112 09:43:35.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.765" endtime="20201112 09:43:35.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.463" endtime="20201112 09:43:35.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.461" endtime="20201112 09:43:35.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.772" level="INFO">${RESULT} = [{'time': 0.019762, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.893100000000002e-05, 'source_diff': 9.893100000000002e-05}, {'time': 0.019867611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:35.768" endtime="20201112 09:43:35.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.785" level="INFO">${ACCURACY} = {'source_diff': [9.893100000000002e-05, 9.41529999999996e-05, 9.405499999999914e-05, 9.47079999999989e-05, 9.427799999999972e-05, 9.458400000000172e-05, 9.41529999999996e-05, 9.470900000000185e-05, 9....</msg>
<status status="PASS" starttime="20201112 09:43:35.773" endtime="20201112 09:43:35.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.790" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.789" endtime="20201112 09:43:35.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.792" level="INFO">VALUE: [9.893100000000002e-05, 9.41529999999996e-05, 9.405499999999914e-05, 9.47079999999989e-05, 9.427799999999972e-05, 9.458400000000172e-05, 9.41529999999996e-05, 9.470900000000185e-05, 9.46660000000002e-05, 9.587500000000221e-05, 9.408299999999828e-05, 9.469399999999933e-05, 9.473700000000099e-05, 9.394400000000205e-05, 9.44720000000017e-05, 9.475000000000108e-05, 9.466699999999967e-05, 9.481999999999893e-05, 9.420800000000187e-05, 9.397300000000067e-05, 9.443100000000246e-05, 9.588899999999831e-05, 9.477800000000022e-05, 9.463799999999759e-05, 9.469399999999933e-05, 9.458299999999878e-05, 9.429199999999929e-05, 9.431900000000243e-05, 9.394399999999858e-05, 9.583300000000003e-05, 9.43469999999981e-05, 9.584799999999907e-05, 9.452799999999997e-05, 9.404199999999904e-05, 9.444399999999908e-05, 9.412499999999699e-05, 9.411099999999742e-05, 9.581900000000046e-05, 9.40139999999999e-05, 9.476400000000065e-05, 9.452799999999997e-05, 9.455599999999911e-05, 9.463900000000053e-05, 9.462500000000096e-05, 9.393100000000196e-05, 9.58339999999995e-05, 9.4333000000002e-05, 9.458300000000225e-05, 9.458299999999878e-05, 9.480499999999989e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.791" endtime="20201112 09:43:35.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.786" endtime="20201112 09:43:35.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.796" endtime="20201112 09:43:35.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.799" endtime="20201112 09:43:35.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.797" endtime="20201112 09:43:35.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.794" endtime="20201112 09:43:35.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.424" endtime="20201112 09:43:35.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.424" endtime="20201112 09:43:35.820"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.828" endtime="20201112 09:43:35.849"></status>
</kw>
<msg timestamp="20201112 09:43:35.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.827" endtime="20201112 09:43:35.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.851" endtime="20201112 09:43:35.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.853" endtime="20201112 09:43:35.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.824" endtime="20201112 09:43:35.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.822" endtime="20201112 09:43:35.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.864" endtime="20201112 09:43:36.149"></status>
</kw>
<msg timestamp="20201112 09:43:36.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.862" endtime="20201112 09:43:36.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019653681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.153" endtime="20201112 09:43:36.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.161" endtime="20201112 09:43:36.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.860" endtime="20201112 09:43:36.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.858" endtime="20201112 09:43:36.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.168" level="INFO">${RESULT} = [{'time': 0.019653681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.990299999999841e-05, 'source_diff': 9.990299999999841e-05}, {'time': 0.019761333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:36.165" endtime="20201112 09:43:36.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.182" level="INFO">${ACCURACY} = {'source_diff': [9.990299999999841e-05, 9.573599999999904e-05, 9.544400000000008e-05, 9.569400000000033e-05, 9.526400000000115e-05, 9.556900000000021e-05, 9.541700000000042e-05, 9.537499999999824e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:36.169" endtime="20201112 09:43:36.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.187" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.186" endtime="20201112 09:43:36.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.190" level="INFO">VALUE: [9.990299999999841e-05, 9.573599999999904e-05, 9.544400000000008e-05, 9.569400000000033e-05, 9.526400000000115e-05, 9.556900000000021e-05, 9.541700000000042e-05, 9.537499999999824e-05, 9.570899999999938e-05, 9.520899999999888e-05, 9.494499999999906e-05, 9.534800000000204e-05, 9.544499999999956e-05, 9.50409999999971e-05, 9.554100000000107e-05, 9.550000000000183e-05, 9.549999999999836e-05, 9.543000000000051e-05, 9.559699999999935e-05, 9.569400000000033e-05, 9.50140000000009e-05, 9.562499999999849e-05, 9.570899999999938e-05, 9.568100000000024e-05, 9.537499999999824e-05, 9.522199999999897e-05, 9.563799999999859e-05, 9.522199999999897e-05, 9.541700000000042e-05, 9.504200000000004e-05, 9.572199999999947e-05, 9.533299999999953e-05, 9.569499999999981e-05, 9.519399999999983e-05, 9.559699999999935e-05, 9.563900000000153e-05, 9.691700000000192e-05, 9.508399999999875e-05, 9.558299999999978e-05, 9.559699999999935e-05, 9.552699999999803e-05, 9.531899999999996e-05, 9.569400000000033e-05, 9.531899999999996e-05, 9.508299999999928e-05, 9.518000000000026e-05, 9.549999999999836e-05, 9.690300000000235e-05, 9.687499999999974e-05, 9.558400000000272e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.188" endtime="20201112 09:43:36.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.183" endtime="20201112 09:43:36.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.194" endtime="20201112 09:43:36.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.198" endtime="20201112 09:43:36.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.196" endtime="20201112 09:43:36.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.192" endtime="20201112 09:43:36.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.821" endtime="20201112 09:43:36.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.820" endtime="20201112 09:43:36.219"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.227" endtime="20201112 09:43:36.248"></status>
</kw>
<msg timestamp="20201112 09:43:36.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.226" endtime="20201112 09:43:36.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.250" endtime="20201112 09:43:36.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.252" endtime="20201112 09:43:36.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.223" endtime="20201112 09:43:36.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.221" endtime="20201112 09:43:36.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.262" endtime="20201112 09:43:36.548"></status>
</kw>
<msg timestamp="20201112 09:43:36.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019635222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.261" endtime="20201112 09:43:36.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019635222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.552" endtime="20201112 09:43:36.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.561" endtime="20201112 09:43:36.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.258" endtime="20201112 09:43:36.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.256" endtime="20201112 09:43:36.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.567" level="INFO">${RESULT} = [{'time': 0.019736222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001010000000000004, 'source_diff': 0.0001010000000000004}, {'time': 0.019843861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:36.564" endtime="20201112 09:43:36.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.580" level="INFO">${ACCURACY} = {'source_diff': [0.0001010000000000004, 9.59859999999993e-05, 9.679199999999832e-05, 9.593100000000049e-05, 9.78470000000016e-05, 9.787500000000074e-05, 9.615299999999813e-05, 9.637500000000271e-05, 9...</msg>
<status status="PASS" starttime="20201112 09:43:36.568" endtime="20201112 09:43:36.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.585" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.584" endtime="20201112 09:43:36.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.587" level="INFO">VALUE: [0.0001010000000000004, 9.59859999999993e-05, 9.679199999999832e-05, 9.593100000000049e-05, 9.78470000000016e-05, 9.787500000000074e-05, 9.615299999999813e-05, 9.637500000000271e-05, 9.648699999999927e-05, 9.665200000000262e-05, 9.615199999999866e-05, 9.676400000000265e-05, 9.777700000000028e-05, 9.62920000000013e-05, 9.594400000000058e-05, 9.63470000000001e-05, 9.657000000000068e-05, 9.641599999999848e-05, 9.668100000000124e-05, 9.658400000000025e-05, 9.593100000000049e-05, 9.654100000000207e-05, 9.649999999999936e-05, 9.647200000000022e-05, 9.593000000000101e-05, 9.63470000000001e-05, 9.658300000000078e-05, 9.652800000000197e-05, 9.62080000000004e-05, 9.64859999999998e-05, 9.605600000000061e-05, 9.672299999999995e-05, 9.783399999999803e-05, 9.65279999999985e-05, 9.619400000000083e-05, 9.606900000000071e-05, 9.781899999999899e-05, 9.615299999999813e-05, 9.626399999999868e-05, 9.612499999999899e-05, 9.619400000000083e-05, 9.659700000000035e-05, 9.63059999999974e-05, 9.593100000000049e-05, 9.620899999999988e-05, 9.619500000000031e-05, 9.788900000000031e-05, 9.622199999999997e-05, 9.79020000000004e-05, 9.626399999999868e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.586" endtime="20201112 09:43:36.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.581" endtime="20201112 09:43:36.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.595" endtime="20201112 09:43:36.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.598" endtime="20201112 09:43:36.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.597" endtime="20201112 09:43:36.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.593" endtime="20201112 09:43:36.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.220" endtime="20201112 09:43:36.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.219" endtime="20201112 09:43:36.619"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.628" endtime="20201112 09:43:36.649"></status>
</kw>
<msg timestamp="20201112 09:43:36.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.626" endtime="20201112 09:43:36.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.650" endtime="20201112 09:43:36.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.653" endtime="20201112 09:43:36.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.624" endtime="20201112 09:43:36.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.621" endtime="20201112 09:43:36.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.663" endtime="20201112 09:43:36.948"></status>
</kw>
<msg timestamp="20201112 09:43:36.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:36.661" endtime="20201112 09:43:36.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019737, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019839181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:36.952" endtime="20201112 09:43:36.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.960" endtime="20201112 09:43:36.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.659" endtime="20201112 09:43:36.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.657" endtime="20201112 09:43:36.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.967" level="INFO">${RESULT} = [{'time': 0.019839181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001021809999999998, 'source_diff': 0.0001021809999999998}, {'time': 0.019948833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:36.964" endtime="20201112 09:43:36.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.980" level="INFO">${ACCURACY} = {'source_diff': [0.0001021809999999998, 9.723600000000054e-05, 9.701299999999996e-05, 9.89020000000014e-05, 9.75279999999995e-05, 9.712499999999999e-05, 9.694399999999812e-05, 9.888900000000131e-05, 9...</msg>
<status status="PASS" starttime="20201112 09:43:36.968" endtime="20201112 09:43:36.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.985" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.984" endtime="20201112 09:43:36.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.987" level="INFO">VALUE: [0.0001021809999999998, 9.723600000000054e-05, 9.701299999999996e-05, 9.89020000000014e-05, 9.75279999999995e-05, 9.712499999999999e-05, 9.694399999999812e-05, 9.888900000000131e-05, 9.718100000000174e-05, 9.770799999999843e-05, 9.7027999999999e-05, 9.751399999999993e-05, 9.750000000000036e-05, 9.884699999999913e-05, 9.702699999999953e-05, 9.7721999999998e-05, 9.699999999999986e-05, 9.772200000000147e-05, 9.883299999999956e-05, 9.751399999999993e-05, 9.886100000000217e-05, 9.755600000000211e-05, 9.69730000000002e-05, 9.726399999999968e-05, 9.725000000000011e-05, 9.709800000000032e-05, 9.743099999999852e-05, 9.770799999999843e-05, 9.726399999999968e-05, 9.750000000000036e-05, 9.756899999999874e-05, 9.762500000000049e-05, 9.713899999999956e-05, 9.884699999999913e-05, 9.70409999999991e-05, 9.73609999999972e-05, 9.702800000000247e-05, 9.89020000000014e-05, 9.701399999999943e-05, 9.880500000000042e-05, 9.713899999999956e-05, 9.722200000000097e-05, 9.733300000000153e-05, 9.706899999999824e-05, 9.726399999999968e-05, 9.708299999999781e-05, 9.706900000000171e-05, 9.755599999999864e-05, 9.740299999999938e-05, 9.891700000000045e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.986" endtime="20201112 09:43:36.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.981" endtime="20201112 09:43:36.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.991" endtime="20201112 09:43:36.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.994" endtime="20201112 09:43:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.993" endtime="20201112 09:43:37.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.989" endtime="20201112 09:43:37.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.620" endtime="20201112 09:43:37.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.619" endtime="20201112 09:43:37.015"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.024" endtime="20201112 09:43:37.045"></status>
</kw>
<msg timestamp="20201112 09:43:37.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.023" endtime="20201112 09:43:37.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.047" endtime="20201112 09:43:37.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.050" endtime="20201112 09:43:37.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.020" endtime="20201112 09:43:37.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.018" endtime="20201112 09:43:37.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.060" endtime="20201112 09:43:37.365"></status>
</kw>
<msg timestamp="20201112 09:43:37.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020316194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020420458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.059" endtime="20201112 09:43:37.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020316194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020420458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.371" endtime="20201112 09:43:37.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.380" endtime="20201112 09:43:37.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.056" endtime="20201112 09:43:37.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.054" endtime="20201112 09:43:37.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.386" level="INFO">${RESULT} = [{'time': 0.020420458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010426399999999975, 'source_diff': 0.00010426399999999975}, {'time': 0.020532083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:37.383" endtime="20201112 09:43:37.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.400" level="INFO">${ACCURACY} = {'source_diff': [0.00010426399999999975, 9.816600000000023e-05, 9.813899999999709e-05, 9.856899999999974e-05, 9.831900000000296e-05, 9.850000000000136e-05, 9.791699999999945e-05, 9.844499999999909e-05...</msg>
<status status="PASS" starttime="20201112 09:43:37.387" endtime="20201112 09:43:37.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.404" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.403" endtime="20201112 09:43:37.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.407" level="INFO">VALUE: [0.00010426399999999975, 9.816600000000023e-05, 9.813899999999709e-05, 9.856899999999974e-05, 9.831900000000296e-05, 9.850000000000136e-05, 9.791699999999945e-05, 9.844499999999909e-05, 9.859699999999888e-05, 9.865300000000063e-05, 9.838900000000081e-05, 9.863900000000106e-05, 9.85280000000005e-05, 9.851300000000146e-05, 9.841600000000048e-05, 9.802700000000053e-05, 9.8028e-05, 9.854200000000007e-05, 9.863900000000106e-05, 9.827800000000025e-05, 9.831999999999896e-05, 9.813899999999709e-05, 9.836100000000167e-05, 9.98479999999996e-05, 9.983400000000003e-05, 9.820900000000188e-05, 9.85280000000005e-05, 9.845799999999919e-05, 9.837499999999777e-05, 9.823599999999807e-05, 9.983299999999709e-05, 9.851400000000093e-05, 9.844499999999909e-05, 9.813900000000056e-05, 9.837499999999777e-05, 9.819500000000231e-05, 9.83609999999982e-05, 9.830499999999992e-05, 9.820899999999841e-05, 9.861100000000192e-05, 9.808299999999881e-05, 9.879100000000085e-05, 9.791699999999945e-05, 9.851400000000093e-05, 9.851399999999746e-05, 9.877800000000075e-05, 9.838900000000081e-05, 9.887500000000174e-05, 9.865300000000063e-05, 9.873599999999857e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.405" endtime="20201112 09:43:37.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.401" endtime="20201112 09:43:37.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.410" endtime="20201112 09:43:37.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.414" endtime="20201112 09:43:37.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.412" endtime="20201112 09:43:37.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.409" endtime="20201112 09:43:37.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.016" endtime="20201112 09:43:37.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.016" endtime="20201112 09:43:37.435"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.443" endtime="20201112 09:43:37.464"></status>
</kw>
<msg timestamp="20201112 09:43:37.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.442" endtime="20201112 09:43:37.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.466" endtime="20201112 09:43:37.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.468" endtime="20201112 09:43:37.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.439" endtime="20201112 09:43:37.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.437" endtime="20201112 09:43:37.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.478" endtime="20201112 09:43:37.764"></status>
</kw>
<msg timestamp="20201112 09:43:37.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019727042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.477" endtime="20201112 09:43:37.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019623417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019727042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.768" endtime="20201112 09:43:37.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.776" endtime="20201112 09:43:37.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.474" endtime="20201112 09:43:37.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.472" endtime="20201112 09:43:37.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.783" level="INFO">${RESULT} = [{'time': 0.019727042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010362499999999955, 'source_diff': 0.00010362499999999955}, {'time': 0.019837708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:37.780" endtime="20201112 09:43:37.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.797" level="INFO">${ACCURACY} = {'source_diff': [0.00010362499999999955, 9.898599999999882e-05, 9.901400000000143e-05, 9.908299999999981e-05, 9.937500000000224e-05, 9.92219999999995e-05, 0.000100819999999998, 9.955600000000064e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:37.784" endtime="20201112 09:43:37.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.802" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.801" endtime="20201112 09:43:37.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.804" level="INFO">VALUE: [0.00010362499999999955, 9.898599999999882e-05, 9.901400000000143e-05, 9.908299999999981e-05, 9.937500000000224e-05, 9.92219999999995e-05, 0.000100819999999998, 9.955600000000064e-05, 9.966699999999773e-05, 0.00010082000000000146, 9.974999999999914e-05, 9.956899999999727e-05, 9.931900000000049e-05, 9.954099999999813e-05, 9.919400000000037e-05, 0.00010090300000000288, 9.936100000000267e-05, 9.970800000000044e-05, 9.931900000000049e-05, 9.940299999999791e-05, 9.894499999999959e-05, 9.915300000000113e-05, 9.94730000000027e-05, 9.913900000000156e-05, 9.933300000000006e-05, 9.901300000000196e-05, 0.00010088900000000331, 9.965300000000163e-05, 9.95280000000015e-05, 0.00010090299999999941, 9.966699999999773e-05, 9.945799999999672e-05, 9.970899999999991e-05, 9.905600000000014e-05, 9.901399999999796e-05, 9.937500000000224e-05, 9.963899999999859e-05, 9.930500000000092e-05, 0.0001008610000000007, 0.0001008610000000007, 9.970800000000044e-05, 9.895799999999969e-05, 9.970800000000044e-05, 9.970799999999697e-05, 9.962499999999902e-05, 9.898599999999882e-05, 9.933399999999953e-05, 9.901400000000143e-05, 9.969500000000034e-05, 9.950000000000236e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.803" endtime="20201112 09:43:37.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.798" endtime="20201112 09:43:37.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.808" endtime="20201112 09:43:37.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.811" endtime="20201112 09:43:37.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.810" endtime="20201112 09:43:37.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.806" endtime="20201112 09:43:37.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.435" endtime="20201112 09:43:37.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.435" endtime="20201112 09:43:37.832"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.841" endtime="20201112 09:43:37.862"></status>
</kw>
<msg timestamp="20201112 09:43:37.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.839" endtime="20201112 09:43:37.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.864" endtime="20201112 09:43:37.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.866" endtime="20201112 09:43:37.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.836" endtime="20201112 09:43:37.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.834" endtime="20201112 09:43:37.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.876" endtime="20201112 09:43:38.161"></status>
</kw>
<msg timestamp="20201112 09:43:38.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.874" endtime="20201112 09:43:38.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.165" endtime="20201112 09:43:38.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.173" endtime="20201112 09:43:38.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.872" endtime="20201112 09:43:38.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.870" endtime="20201112 09:43:38.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.180" level="INFO">${RESULT} = [{'time': 0.019610097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001045689999999988, 'source_diff': 0.0001045689999999988}, {'time': 0.019723806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:38.176" endtime="20201112 09:43:38.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.193" level="INFO">${ACCURACY} = {'source_diff': [0.0001045689999999988, 0.00010082000000000146, 0.00010029199999999835, 9.988899999999884e-05, 0.00010001299999999949, 0.00010045800000000119, 0.00010013799999999962, 0.000100458000000...</msg>
<status status="PASS" starttime="20201112 09:43:38.181" endtime="20201112 09:43:38.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.197" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.196" endtime="20201112 09:43:38.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.200" level="INFO">VALUE: [0.0001045689999999988, 0.00010082000000000146, 0.00010029199999999835, 9.988899999999884e-05, 0.00010001299999999949, 0.00010045800000000119, 0.00010013799999999962, 0.00010045800000000119, 0.0001000549999999982, 0.00010038900000000281, 0.00010180499999999995, 0.00010177800000000028, 0.00010065299999999916, 0.00010038899999999934, 0.00010047300000000023, 0.00010184699999999866, 0.0001003480000000001, 0.00010030499999999845, 0.00010072199999999754, 9.993100000000102e-05, 9.99999999999994e-05, 0.00010054099999999913, 0.00010015300000000213, 0.00010040299999999891, 0.00010034700000000063, 0.00010076399999999971, 0.00010072299999999701, 0.00010190300000000041, 0.00010038899999999934, 0.00010027800000000225, 0.00010013799999999962, 0.00010070799999999797, 0.00010007000000000071, 0.00010040199999999944, 0.00010034700000000063, 0.00010181899999999952, 0.00010011099999999995, 0.00010033399999999706, 0.0001006809999999983, 0.00010077800000000275, 9.99860000000033e-05, 0.00010034700000000063, 0.00010019500000000084, 0.00010188800000000137, 0.00010020800000000094, 0.00010077800000000275, 0.00010081900000000199, 0.00010188900000000084, 0.00010076399999999971, 9.994400000000112e-05]</msg>
<status status="PASS" starttime="20201112 09:43:38.198" endtime="20201112 09:43:38.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.194" endtime="20201112 09:43:38.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.203" endtime="20201112 09:43:38.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.207" endtime="20201112 09:43:38.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.205" endtime="20201112 09:43:38.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.202" endtime="20201112 09:43:38.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.833" endtime="20201112 09:43:38.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.832" endtime="20201112 09:43:38.228"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.237" endtime="20201112 09:43:38.257"></status>
</kw>
<msg timestamp="20201112 09:43:38.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.235" endtime="20201112 09:43:38.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.259" endtime="20201112 09:43:38.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.261" endtime="20201112 09:43:38.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.233" endtime="20201112 09:43:38.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.231" endtime="20201112 09:43:38.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.271" endtime="20201112 09:43:38.558"></status>
</kw>
<msg timestamp="20201112 09:43:38.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.270" endtime="20201112 09:43:38.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.562" endtime="20201112 09:43:38.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.570" endtime="20201112 09:43:38.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.267" endtime="20201112 09:43:38.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.266" endtime="20201112 09:43:38.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.577" level="INFO">${RESULT} = [{'time': 0.020436472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010594400000000018, 'source_diff': 0.00010594400000000018}, {'time': 0.020548111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:38.573" endtime="20201112 09:43:38.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.590" level="INFO">${ACCURACY} = {'source_diff': [0.00010594400000000018, 0.00010145800000000219, 0.00010097200000000126, 0.00010138900000000034, 0.00010138900000000034, 0.00010095900000000116, 0.00010113900000000009, 0.0001028890000...</msg>
<status status="PASS" starttime="20201112 09:43:38.578" endtime="20201112 09:43:38.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.594" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.593" endtime="20201112 09:43:38.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.596" level="INFO">VALUE: [0.00010594400000000018, 0.00010145800000000219, 0.00010097200000000126, 0.00010138900000000034, 0.00010138900000000034, 0.00010095900000000116, 0.00010113900000000009, 0.00010288900000000184, 0.00010113900000000009, 0.00010279200000000085, 0.00010144400000000262, 0.00010156899999999927, 0.00010113900000000009, 0.00010088899999999984, 0.00010126400000000021, 0.00010106999999999824, 0.0001011809999999988, 0.00010152800000000003, 0.00010105600000000214, 0.00010158400000000178, 0.00010174999999999768, 0.00010119499999999837, 0.00010133299999999859, 0.00010108299999999834, 0.00010288899999999837, 0.00010119400000000237, 0.00010175000000000115, 0.00010138900000000034, 0.00010283300000000009, 0.00010176400000000071, 0.00010122300000000098, 0.00010102799999999953, 0.00010108400000000128, 0.00010115299999999966, 0.00010120899999999794, 0.00010106899999999877, 0.00010138900000000034, 0.00010151400000000046, 0.00010137500000000077, 0.00010120799999999847, 0.00010147200000000176, 0.000101513999999997, 0.00010161099999999798, 0.00010105500000000267, 0.00010104099999999963, 0.00010109700000000138, 0.00010170799999999897, 0.00010138899999999687, 0.0001010419999999991, 0.0001028749999999988]</msg>
<status status="PASS" starttime="20201112 09:43:38.595" endtime="20201112 09:43:38.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.591" endtime="20201112 09:43:38.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.600" endtime="20201112 09:43:38.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.604" endtime="20201112 09:43:38.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.602" endtime="20201112 09:43:38.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.599" endtime="20201112 09:43:38.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.229" endtime="20201112 09:43:38.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.228" endtime="20201112 09:43:38.624"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.633" endtime="20201112 09:43:38.654"></status>
</kw>
<msg timestamp="20201112 09:43:38.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.632" endtime="20201112 09:43:38.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.655" endtime="20201112 09:43:38.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.658" endtime="20201112 09:43:38.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.629" endtime="20201112 09:43:38.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.627" endtime="20201112 09:43:38.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.668" endtime="20201112 09:43:38.953"></status>
</kw>
<msg timestamp="20201112 09:43:38.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.666" endtime="20201112 09:43:38.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019650583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.958" endtime="20201112 09:43:38.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.966" endtime="20201112 09:43:38.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.664" endtime="20201112 09:43:38.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.662" endtime="20201112 09:43:38.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.972" level="INFO">${RESULT} = [{'time': 0.019757181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010659799999999942, 'source_diff': 0.00010659799999999942}, {'time': 0.019872847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:38.969" endtime="20201112 09:43:38.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.985" level="INFO">${ACCURACY} = {'source_diff': [0.00010659799999999942, 0.00010261099999999898, 0.0001023199999999995, 0.00010259700000000288, 0.00010388900000000284, 0.00010277800000000128, 0.00010261099999999898, 0.00010249999999...</msg>
<status status="PASS" starttime="20201112 09:43:38.973" endtime="20201112 09:43:38.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.990" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.989" endtime="20201112 09:43:38.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.992" level="INFO">VALUE: [0.00010659799999999942, 0.00010261099999999898, 0.0001023199999999995, 0.00010259700000000288, 0.00010388900000000284, 0.00010277800000000128, 0.00010261099999999898, 0.00010249999999999843, 0.00010272299999999901, 0.00010265300000000116, 0.00010261099999999898, 0.00010230500000000045, 0.00010208299999999934, 0.00010238899999999787, 0.00010227800000000078, 0.00010281900000000052, 0.00010195800000000269, 0.00010244499999999962, 0.00010391699999999851, 0.00010213799999999815, 0.00010208399999999881, 0.00010230599999999992, 0.00010245799999999972, 0.00010276400000000172, 0.00010244400000000015, 0.00010195800000000269, 0.00010234699999999916, 0.00010265300000000116, 0.00010205599999999967, 0.00010383299999999762, 0.00010390299999999894, 0.00010252800000000103, 0.00010277800000000128, 0.00010272199999999954, 0.00010276300000000224, 0.00010280499999999748, 0.00010209699999999891, 0.00010201400000000097, 0.00010230500000000045, 0.00010208300000000281, 0.00010193000000000008, 0.00010230599999999992, 0.00010277800000000128, 0.00010197299999999826, 0.00010231900000000002, 0.00010275000000000215, 0.00010280500000000095, 0.00010252799999999757, 0.00010193000000000008, 0.00010229200000000035]</msg>
<status status="PASS" starttime="20201112 09:43:38.991" endtime="20201112 09:43:38.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.986" endtime="20201112 09:43:38.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.996" endtime="20201112 09:43:38.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.999" endtime="20201112 09:43:39.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.998" endtime="20201112 09:43:39.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.994" endtime="20201112 09:43:39.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.625" endtime="20201112 09:43:39.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.625" endtime="20201112 09:43:39.020"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.029" endtime="20201112 09:43:39.049"></status>
</kw>
<msg timestamp="20201112 09:43:39.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.027" endtime="20201112 09:43:39.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.051" endtime="20201112 09:43:39.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.053" endtime="20201112 09:43:39.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.025" endtime="20201112 09:43:39.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.023" endtime="20201112 09:43:39.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.063" endtime="20201112 09:43:39.349"></status>
</kw>
<msg timestamp="20201112 09:43:39.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.062" endtime="20201112 09:43:39.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.353" endtime="20201112 09:43:39.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.361" endtime="20201112 09:43:39.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.059" endtime="20201112 09:43:39.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.057" endtime="20201112 09:43:39.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.367" level="INFO">${RESULT} = [{'time': 0.019640694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010791599999999957, 'source_diff': 0.00010791599999999957}, {'time': 0.019757319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:39.364" endtime="20201112 09:43:39.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.382" level="INFO">${ACCURACY} = {'source_diff': [0.00010791599999999957, 0.0001030689999999973, 0.00010326399999999875, 0.0001031940000000009, 0.00010367999999999836, 0.0001032359999999996, 0.00010294500000000012, 0.0001048890000000...</msg>
<status status="PASS" starttime="20201112 09:43:39.369" endtime="20201112 09:43:39.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.386" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.385" endtime="20201112 09:43:39.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.388" level="INFO">VALUE: [0.00010791599999999957, 0.0001030689999999973, 0.00010326399999999875, 0.0001031940000000009, 0.00010367999999999836, 0.0001032359999999996, 0.00010294500000000012, 0.00010488900000000037, 0.0001031810000000008, 0.00010326399999999875, 0.00010370900000000044, 0.00010309699999999991, 0.00010357000000000074, 0.00010340199999999897, 0.00010301400000000197, 0.00010333300000000059, 0.00010325000000000265, 0.00010344399999999768, 0.00010327799999999832, 0.00010295899999999969, 0.0001033200000000005, 0.00010308399999999981, 0.0001035559999999977, 0.00010354100000000213, 0.00010309699999999991, 0.00010483299999999862, 0.0001030689999999973, 0.00010481900000000252, 0.00010320800000000047, 0.00010370800000000097, 0.00010313899999999862, 0.00010294500000000012, 0.00010320899999999994, 0.00010384700000000066, 0.000103820000000001, 0.00010365199999999922, 0.00010322200000000004, 0.00010293000000000108, 0.00010331900000000102, 0.00010338899999999887, 0.00010356900000000127, 0.00010320800000000047, 0.00010326400000000222, 0.00010345900000000019, 0.0001033619999999992, 0.00010376399999999925, 0.0001033610000000032, 0.00010352699999999909, 0.00010491600000000004, 0.00010294399999999718]</msg>
<status status="PASS" starttime="20201112 09:43:39.387" endtime="20201112 09:43:39.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.382" endtime="20201112 09:43:39.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.392" endtime="20201112 09:43:39.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.395" endtime="20201112 09:43:39.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.394" endtime="20201112 09:43:39.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.390" endtime="20201112 09:43:39.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.021" endtime="20201112 09:43:39.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.021" endtime="20201112 09:43:39.416"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.425" endtime="20201112 09:43:39.446"></status>
</kw>
<msg timestamp="20201112 09:43:39.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.423" endtime="20201112 09:43:39.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.447" endtime="20201112 09:43:39.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.450" endtime="20201112 09:43:39.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.421" endtime="20201112 09:43:39.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.419" endtime="20201112 09:43:39.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.460" endtime="20201112 09:43:39.745"></status>
</kw>
<msg timestamp="20201112 09:43:39.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.458" endtime="20201112 09:43:39.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019663792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019772556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.749" endtime="20201112 09:43:39.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.757" endtime="20201112 09:43:39.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.456" endtime="20201112 09:43:39.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.454" endtime="20201112 09:43:39.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.764" level="INFO">${RESULT} = [{'time': 0.019772556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010876400000000078, 'source_diff': 0.00010876400000000078}, {'time': 0.019890167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:39.760" endtime="20201112 09:43:39.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.776" level="INFO">${ACCURACY} = {'source_diff': [0.00010876400000000078, 0.00010447300000000076, 0.00010475000000000068, 0.00010438899999999987, 0.00010451300000000052, 0.00010430600000000192, 0.00010397199999999732, 0.0001058609999...</msg>
<status status="PASS" starttime="20201112 09:43:39.764" endtime="20201112 09:43:39.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.781" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.780" endtime="20201112 09:43:39.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.783" level="INFO">VALUE: [0.00010876400000000078, 0.00010447300000000076, 0.00010475000000000068, 0.00010438899999999987, 0.00010451300000000052, 0.00010430600000000192, 0.00010397199999999732, 0.00010586099999999876, 0.000104207999999998, 0.000104207999999998, 0.00010394399999999818, 0.00010588900000000137, 0.00010466699999999926, 0.00010458399999999785, 0.00010461100000000098, 0.00010584800000000213, 0.00010438899999999987, 0.00010583299999999962, 0.00010584699999999919, 0.00010586099999999876, 0.00010397200000000079, 0.00010443099999999858, 0.00010445800000000172, 0.00010476300000000077, 0.00010408400000000081, 0.00010443099999999858, 0.00010422200000000104, 0.00010438899999999987, 0.00010420900000000094, 0.00010480599999999896, 0.00010590299999999747, 0.0001040689999999983, 0.000104514, 0.00010445800000000172, 0.00010458399999999785, 0.00010399999999999993, 0.00010397200000000079, 0.00010581999999999953, 0.00010441700000000248, 0.000105901999999998, 0.00010397200000000079, 0.00010587499999999833, 0.0001046940000000024, 0.00010465299999999969, 0.00010476400000000025, 0.00010459700000000141, 0.00010413899999999962, 0.00010458400000000131, 0.00010420899999999747, 0.00010449999999999696]</msg>
<status status="PASS" starttime="20201112 09:43:39.782" endtime="20201112 09:43:39.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.777" endtime="20201112 09:43:39.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.787" endtime="20201112 09:43:39.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.790" endtime="20201112 09:43:39.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.789" endtime="20201112 09:43:39.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.785" endtime="20201112 09:43:39.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.417" endtime="20201112 09:43:39.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.417" endtime="20201112 09:43:39.811"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.820" endtime="20201112 09:43:39.840"></status>
</kw>
<msg timestamp="20201112 09:43:39.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.818" endtime="20201112 09:43:39.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.841" endtime="20201112 09:43:39.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.844" endtime="20201112 09:43:39.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.816" endtime="20201112 09:43:39.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.814" endtime="20201112 09:43:39.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.854" endtime="20201112 09:43:40.139"></status>
</kw>
<msg timestamp="20201112 09:43:40.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:39.852" endtime="20201112 09:43:40.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019702056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019812, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:40.143" endtime="20201112 09:43:40.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.151" endtime="20201112 09:43:40.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.850" endtime="20201112 09:43:40.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.848" endtime="20201112 09:43:40.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.157" level="INFO">${RESULT} = [{'time': 0.019812, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010994400000000071, 'source_diff': 0.00010994400000000071}, {'time': 0.019931639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:40.154" endtime="20201112 09:43:40.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.171" level="INFO">${ACCURACY} = {'source_diff': [0.00010994400000000071, 0.00010565300000000069, 0.00010690300000000194, 0.00010502800000000007, 0.00010526400000000075, 0.00010554100000000066, 0.0001052499999999977, 0.00010540200000...</msg>
<status status="PASS" starttime="20201112 09:43:40.158" endtime="20201112 09:43:40.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.175" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.174" endtime="20201112 09:43:40.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.177" level="INFO">VALUE: [0.00010994400000000071, 0.00010565300000000069, 0.00010690300000000194, 0.00010502800000000007, 0.00010526400000000075, 0.00010554100000000066, 0.0001052499999999977, 0.00010540200000000097, 0.00010513900000000062, 0.00010552800000000057, 0.00010498600000000136, 0.00010687499999999933, 0.00010580599999999996, 0.00010526400000000075, 0.00010687499999999933, 0.00010502800000000007, 0.00010583299999999962, 0.00010683300000000062, 0.00010554099999999719, 0.00010513899999999715, 0.00010533299999999912, 0.00010563899999999765, 0.0001057079999999995, 0.00010507000000000224, 0.0001053750000000013, 0.00010561099999999851, 0.00010563900000000112, 0.00010579100000000091, 0.00010580500000000048, 0.00010529199999999989, 0.00010554100000000066, 0.00010569399999999993, 0.00010497199999999832, 0.00010572199999999907, 0.00010551399999999753, 0.00010522199999999857, 0.00010575000000000168, 0.00010549999999999796, 0.0001050140000000005, 0.00010494400000000265, 0.00010549999999999796, 0.0001068889999999989, 0.00010555500000000023, 0.00010683299999999715, 0.00010513900000000062, 0.00010691699999999804, 0.00010687499999999933, 0.00010502800000000007, 0.00010497299999999779, 0.00010554200000000014]</msg>
<status status="PASS" starttime="20201112 09:43:40.176" endtime="20201112 09:43:40.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.171" endtime="20201112 09:43:40.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.181" endtime="20201112 09:43:40.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.184" endtime="20201112 09:43:40.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.183" endtime="20201112 09:43:40.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.179" endtime="20201112 09:43:40.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.812" endtime="20201112 09:43:40.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.812" endtime="20201112 09:43:40.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.519" endtime="20201112 09:43:40.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.210" endtime="20201112 09:43:40.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.208" endtime="20201112 09:43:40.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.207" endtime="20201112 09:43:40.230"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:00.402" endtime="20201112 09:43:40.231" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.238" endtime="20201112 09:43:40.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.236" endtime="20201112 09:43:40.258"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.272" endtime="20201112 09:43:40.294"></status>
</kw>
<msg timestamp="20201112 09:43:40.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.271" endtime="20201112 09:43:40.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.296" endtime="20201112 09:43:40.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.300" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:40.298" endtime="20201112 09:43:40.301"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:40.268" endtime="20201112 09:43:40.301"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:40.266" endtime="20201112 09:43:40.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.265" endtime="20201112 09:43:40.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:40.306" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:40.305" endtime="20201112 09:43:40.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.303" endtime="20201112 09:43:40.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.264" endtime="20201112 09:43:40.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.262" endtime="20201112 09:43:40.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.307" endtime="20201112 09:43:40.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.261" endtime="20201112 09:43:40.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.259" endtime="20201112 09:43:40.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.235" endtime="20201112 09:43:40.310"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.320" endtime="20201112 09:43:40.336"></status>
</kw>
<msg timestamp="20201112 09:43:40.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.319" endtime="20201112 09:43:40.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.338" endtime="20201112 09:43:40.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.340" endtime="20201112 09:43:40.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.316" endtime="20201112 09:43:40.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.314" endtime="20201112 09:43:40.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.350" endtime="20201112 09:43:40.635"></status>
</kw>
<msg timestamp="20201112 09:43:40.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072950139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072973181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.347" endtime="20201112 09:43:40.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072950139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072973181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.639" endtime="20201112 09:43:40.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.647" endtime="20201112 09:43:40.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.345" endtime="20201112 09:43:40.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.343" endtime="20201112 09:43:40.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.654" level="INFO">${RESULT} = [{'time': 0.072973181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3042000000000895e-05, 'source_diff': 2.3042000000000895e-05}, {'time': 0.072982736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:40.651" endtime="20201112 09:43:40.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.667" level="INFO">${ACCURACY} = {'source_diff': [2.3042000000000895e-05, 5.0550000000038064e-06, 5.583999999989042e-06, 5.08400000000242e-06, 5.096999999995577e-06, 5.610999999988708e-06, 5.11200000000156e-06, 5.097999999995051e-06,...</msg>
<status status="PASS" starttime="20201112 09:43:40.655" endtime="20201112 09:43:40.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.672" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.671" endtime="20201112 09:43:40.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.674" level="INFO">VALUE: [2.3042000000000895e-05, 5.0550000000038064e-06, 5.583999999989042e-06, 5.08400000000242e-06, 5.096999999995577e-06, 5.610999999988708e-06, 5.11200000000156e-06, 5.097999999995051e-06, 5.097000000009455e-06, 6.111000000003086e-06, 5.596999999996077e-06, 5.583000000003446e-06, 5.069000000010315e-06, 5.597000000009955e-06, 5.097000000009455e-06, 5.611000000002586e-06, 5.58400000000292e-06, 5.097999999995051e-06, 5.11200000000156e-06, 5.111000000002086e-06, 5.596999999996077e-06, 5.069999999995911e-06, 5.111000000002086e-06, 5.08400000000242e-06, 5.583000000003446e-06, 5.596999999996077e-06, 5.596999999996077e-06, 5.596999999996077e-06, 5.096999999995577e-06, 5.097000000009455e-06, 5.596999999996077e-06, 5.111000000002086e-06, 5.596999999996077e-06, 5.598000000009429e-06, 5.0829999999890685e-06, 5.097000000009455e-06, 6.096999999996577e-06, 5.611000000002586e-06, 5.597999999995551e-06, 5.58400000000292e-06, 5.611000000002586e-06, 5.083000000002946e-06, 5.096999999995577e-06, 5.569999999996411e-06, 5.125000000008595e-06, 5.58400000000292e-06, 5.111000000002086e-06, 5.596999999996077e-06, 5.098000000008929e-06, 5.11200000000156e-06]</msg>
<status status="PASS" starttime="20201112 09:43:40.673" endtime="20201112 09:43:40.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.668" endtime="20201112 09:43:40.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.677" endtime="20201112 09:43:40.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.681" endtime="20201112 09:43:40.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.679" endtime="20201112 09:43:40.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.676" endtime="20201112 09:43:40.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.312" endtime="20201112 09:43:40.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.311" endtime="20201112 09:43:40.702"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.711" endtime="20201112 09:43:40.726"></status>
</kw>
<msg timestamp="20201112 09:43:40.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.709" endtime="20201112 09:43:40.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.728" endtime="20201112 09:43:40.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.730" endtime="20201112 09:43:40.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.706" endtime="20201112 09:43:40.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.704" endtime="20201112 09:43:40.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.739" endtime="20201112 09:43:41.026"></status>
</kw>
<msg timestamp="20201112 09:43:41.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.738" endtime="20201112 09:43:41.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020083528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.030" endtime="20201112 09:43:41.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.038" endtime="20201112 09:43:41.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.735" endtime="20201112 09:43:41.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.734" endtime="20201112 09:43:41.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.045" level="INFO">${RESULT} = [{'time': 0.020089611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.020099875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.041" endtime="20201112 09:43:41.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.058" level="INFO">${ACCURACY} = {'source_diff': [6.083000000000477e-06, 6.124999999999187e-06, 6.610999999996647e-06, 6.597000000000547e-06, 6.554999999998368e-06, 6.611000000000117e-06, 6.554999999998368e-06, 7.097000000001047e-06,...</msg>
<status status="PASS" starttime="20201112 09:43:41.046" endtime="20201112 09:43:41.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.062" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.061" endtime="20201112 09:43:41.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.065" level="INFO">VALUE: [6.083000000000477e-06, 6.124999999999187e-06, 6.610999999996647e-06, 6.597000000000547e-06, 6.554999999998368e-06, 6.611000000000117e-06, 6.554999999998368e-06, 7.097000000001047e-06, 6.597000000000547e-06, 6.570000000000881e-06, 6.124999999999187e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.09800000000299e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.110999999999617e-06, 6.0979999999995205e-06, 6.0839999999999506e-06, 6.096999999996577e-06, 6.583000000000977e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.583000000000977e-06, 6.610999999996647e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.5980000000000205e-06, 6.5980000000000205e-06, 6.611000000000117e-06, 7.026999999999728e-06, 6.597000000000547e-06, 6.584000000000451e-06, 6.0979999999995205e-06, 6.5829999999975075e-06, 6.611000000000117e-06, 6.110999999999617e-06, 6.5969999999970774e-06, 6.0979999999995205e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.5969999999970774e-06, 6.568999999997938e-06, 6.0839999999999506e-06, 6.110999999999617e-06, 6.097000000000047e-06, 6.597000000000547e-06, 6.097000000000047e-06, 6.5969999999970774e-06, 6.166999999997896e-06]</msg>
<status status="PASS" starttime="20201112 09:43:41.064" endtime="20201112 09:43:41.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.059" endtime="20201112 09:43:41.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.069" endtime="20201112 09:43:41.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.072" endtime="20201112 09:43:41.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.070" endtime="20201112 09:43:41.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.067" endtime="20201112 09:43:41.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.703" endtime="20201112 09:43:41.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.702" endtime="20201112 09:43:41.093"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.101" endtime="20201112 09:43:41.119"></status>
</kw>
<msg timestamp="20201112 09:43:41.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.100" endtime="20201112 09:43:41.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.120" endtime="20201112 09:43:41.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.123" endtime="20201112 09:43:41.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.097" endtime="20201112 09:43:41.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.095" endtime="20201112 09:43:41.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.132" endtime="20201112 09:43:41.417"></status>
</kw>
<msg timestamp="20201112 09:43:41.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019763153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01977025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:41.130" endtime="20201112 09:43:41.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019763153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01977025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:41.421" endtime="20201112 09:43:41.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.429" endtime="20201112 09:43:41.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.128" endtime="20201112 09:43:41.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.126" endtime="20201112 09:43:41.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.436" level="INFO">${RESULT} = [{'time': 0.01977025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.097000000001047e-06, 'source_diff': 7.097000000001047e-06}, {'time': 0.019781319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:41.432" endtime="20201112 09:43:41.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.449" level="INFO">${ACCURACY} = {'source_diff': [7.097000000001047e-06, 7.6109999999976474e-06, 7.110999999997147e-06, 7.110999999997147e-06, 7.054999999998868e-06, 7.083000000001477e-06, 7.0969999999975775e-06, 7.597000000001547e-0...</msg>
<status status="PASS" starttime="20201112 09:43:41.437" endtime="20201112 09:43:41.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.453" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.452" endtime="20201112 09:43:41.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.456" level="INFO">VALUE: [7.097000000001047e-06, 7.6109999999976474e-06, 7.110999999997147e-06, 7.110999999997147e-06, 7.054999999998868e-06, 7.083000000001477e-06, 7.0969999999975775e-06, 7.597000000001547e-06, 7.611000000001117e-06, 7.084000000000951e-06, 7.5969999999980775e-06, 7.652999999999827e-06, 8.111000000001617e-06, 7.611000000001117e-06, 7.097000000001047e-06, 7.555999999998841e-06, 7.5969999999980775e-06, 7.097000000001047e-06, 8.165999999996953e-06, 8.097000000002047e-06, 7.5969999999980775e-06, 7.570000000001881e-06, 7.582999999998508e-06, 7.111000000000617e-06, 7.083999999997481e-06, 7.583000000001977e-06, 7.111000000000617e-06, 7.611000000001117e-06, 7.0829999999980076e-06, 7.5419999999992715e-06, 7.0969999999975775e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 7.0829999999980076e-06, 7.0829999999980076e-06, 7.083000000001477e-06, 7.570000000001881e-06, 7.666999999999397e-06, 7.583000000001977e-06, 7.6109999999976474e-06, 7.0829999999980076e-06, 7.111000000000617e-06, 7.083999999997481e-06, 7.111000000000617e-06, 7.0829999999980076e-06, 7.110999999997147e-06, 7.0969999999975775e-06, 7.597000000001547e-06, 7.597000000001547e-06, 7.625000000000687e-06]</msg>
<status status="PASS" starttime="20201112 09:43:41.454" endtime="20201112 09:43:41.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.450" endtime="20201112 09:43:41.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.460" endtime="20201112 09:43:41.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.463" endtime="20201112 09:43:41.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.461" endtime="20201112 09:43:41.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.458" endtime="20201112 09:43:41.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.094" endtime="20201112 09:43:41.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.093" endtime="20201112 09:43:41.484"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.492" endtime="20201112 09:43:41.510"></status>
</kw>
<msg timestamp="20201112 09:43:41.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.491" endtime="20201112 09:43:41.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.512" endtime="20201112 09:43:41.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.514" endtime="20201112 09:43:41.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.488" endtime="20201112 09:43:41.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.486" endtime="20201112 09:43:41.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.524" endtime="20201112 09:43:41.811"></status>
</kw>
<msg timestamp="20201112 09:43:41.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:41.522" endtime="20201112 09:43:41.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019599111, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:41.815" endtime="20201112 09:43:41.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.823" endtime="20201112 09:43:41.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.520" endtime="20201112 09:43:41.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.518" endtime="20201112 09:43:41.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.830" level="INFO">${RESULT} = [{'time': 0.019599111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.019610042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.827" endtime="20201112 09:43:41.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.843" level="INFO">${ACCURACY} = {'source_diff': [8.610999999998648e-06, 8.111000000001617e-06, 8.555000000000368e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.110999999998147e-06,...</msg>
<status status="PASS" starttime="20201112 09:43:41.831" endtime="20201112 09:43:41.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.848" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.847" endtime="20201112 09:43:41.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.850" level="INFO">VALUE: [8.610999999998648e-06, 8.111000000001617e-06, 8.555000000000368e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.110999999998147e-06, 9.165999999997954e-06, 8.597000000002547e-06, 8.097999999998051e-06, 8.596999999999078e-06, 9.096999999999578e-06, 8.582999999999508e-06, 8.611000000002117e-06, 8.582999999999508e-06, 8.097999999998051e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.596999999999078e-06, 8.583999999998981e-06, 8.111999999997621e-06, 8.583999999998981e-06, 8.096999999998578e-06, 8.583000000002977e-06, 8.596999999999078e-06, 8.07000000000238e-06, 8.610999999998648e-06, 8.096999999998578e-06, 9.139000000001757e-06, 8.054999999999868e-06, 8.555999999999842e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.61200000000159e-06, 8.596999999999078e-06, 8.582999999999508e-06, 8.596999999999078e-06, 8.625000000001687e-06, 8.653000000000827e-06, 8.096999999998578e-06, 8.596999999999078e-06, 8.110999999998147e-06, 8.11200000000109e-06, 8.097999999998051e-06, 8.596999999999078e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.610999999998648e-06, 8.611000000002117e-06]</msg>
<status status="PASS" starttime="20201112 09:43:41.849" endtime="20201112 09:43:41.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.844" endtime="20201112 09:43:41.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.857" endtime="20201112 09:43:41.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.861" endtime="20201112 09:43:41.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.859" endtime="20201112 09:43:41.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.856" endtime="20201112 09:43:41.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.485" endtime="20201112 09:43:41.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.484" endtime="20201112 09:43:41.882"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.890" endtime="20201112 09:43:41.908"></status>
</kw>
<msg timestamp="20201112 09:43:41.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.889" endtime="20201112 09:43:41.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.910" endtime="20201112 09:43:41.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.912" endtime="20201112 09:43:41.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.886" endtime="20201112 09:43:41.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.884" endtime="20201112 09:43:41.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.921" endtime="20201112 09:43:42.206"></status>
</kw>
<msg timestamp="20201112 09:43:42.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.920" endtime="20201112 09:43:42.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.210" endtime="20201112 09:43:42.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.218" endtime="20201112 09:43:42.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.917" endtime="20201112 09:43:42.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.915" endtime="20201112 09:43:42.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.225" level="INFO">${RESULT} = [{'time': 0.019763347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0055000000001868e-05, 'source_diff': 1.0055000000001868e-05}, {'time': 0.019776333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:42.222" endtime="20201112 09:43:42.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.238" level="INFO">${ACCURACY} = {'source_diff': [1.0055000000001868e-05, 1.0069000000001438e-05, 9.096999999999578e-06, 9.624999999999218e-06, 9.167000000000897e-06, 9.152999999997857e-06, 9.110999999999148e-06, 9.111000000002617e-0...</msg>
<status status="PASS" starttime="20201112 09:43:42.226" endtime="20201112 09:43:42.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.243" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.242" endtime="20201112 09:43:42.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.245" level="INFO">VALUE: [1.0055000000001868e-05, 1.0069000000001438e-05, 9.096999999999578e-06, 9.624999999999218e-06, 9.167000000000897e-06, 9.152999999997857e-06, 9.110999999999148e-06, 9.111000000002617e-06, 9.110999999999148e-06, 9.61200000000259e-06, 9.638999999998787e-06, 9.096999999999578e-06, 9.083000000000008e-06, 1.0097000000000578e-05, 9.597000000000078e-06, 1.0097000000000578e-05, 9.610999999999648e-06, 9.624999999999218e-06, 9.597000000000078e-06, 9.124999999998717e-06, 9.027999999997732e-06, 9.096999999999578e-06, 9.083999999999481e-06, 9.096999999999578e-06, 9.013000000002158e-06, 9.096999999999578e-06, 9.527999999998232e-06, 9.610999999999648e-06, 9.611000000003117e-06, 9.597000000000078e-06, 9.110999999999148e-06, 9.596999999996608e-06, 9.083999999999481e-06, 9.110999999999148e-06, 9.110999999999148e-06, 9.138999999998287e-06, 9.083999999999481e-06, 9.083999999999481e-06, 9.610999999999648e-06, 9.540999999998329e-06, 1.0097000000000578e-05, 9.069000000000438e-06, 9.597000000000078e-06, 9.08400000000295e-06, 9.096999999999578e-06, 9.583000000000508e-06, 9.624999999999218e-06, 9.096999999999578e-06, 9.09800000000252e-06, 9.597000000000078e-06]</msg>
<status status="PASS" starttime="20201112 09:43:42.244" endtime="20201112 09:43:42.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.239" endtime="20201112 09:43:42.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.249" endtime="20201112 09:43:42.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.252" endtime="20201112 09:43:42.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.251" endtime="20201112 09:43:42.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.247" endtime="20201112 09:43:42.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.883" endtime="20201112 09:43:42.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.882" endtime="20201112 09:43:42.273"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.282" endtime="20201112 09:43:42.300"></status>
</kw>
<msg timestamp="20201112 09:43:42.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.281" endtime="20201112 09:43:42.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.301" endtime="20201112 09:43:42.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.304" endtime="20201112 09:43:42.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.278" endtime="20201112 09:43:42.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.275" endtime="20201112 09:43:42.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.313" endtime="20201112 09:43:42.599"></status>
</kw>
<msg timestamp="20201112 09:43:42.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:42.311" endtime="20201112 09:43:42.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205945, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:42.603" endtime="20201112 09:43:42.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.611" endtime="20201112 09:43:42.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.309" endtime="20201112 09:43:42.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.307" endtime="20201112 09:43:42.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.618" level="INFO">${RESULT} = [{'time': 0.0205945, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.020608361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:42.614" endtime="20201112 09:43:42.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.675" level="INFO">${ACCURACY} = {'source_diff': [1.0611000000000648e-05, 1.0596999999997608e-05, 1.0583000000001508e-05, 1.0554999999998899e-05, 1.0083000000001008e-05, 1.0583000000001508e-05, 1.0625000000000218e-05, 1.0584000000000...</msg>
<status status="PASS" starttime="20201112 09:43:42.619" endtime="20201112 09:43:42.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.680" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.679" endtime="20201112 09:43:42.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.682" level="INFO">VALUE: [1.0611000000000648e-05, 1.0596999999997608e-05, 1.0583000000001508e-05, 1.0554999999998899e-05, 1.0083000000001008e-05, 1.0583000000001508e-05, 1.0625000000000218e-05, 1.0584000000000982e-05, 1.0097000000000578e-05, 1.0597000000001078e-05, 1.0097000000000578e-05, 1.0096999999997108e-05, 1.0598000000000551e-05, 1.0597999999997082e-05, 1.0625000000000218e-05, 1.0666999999998927e-05, 1.0597000000001078e-05, 1.0098000000000051e-05, 1.0513999999999663e-05, 1.0097000000000578e-05, 1.0097000000000578e-05, 1.0597000000001078e-05, 1.0583000000001508e-05, 1.1068999999998969e-05, 1.0084000000000481e-05, 1.0084000000000481e-05, 1.0611000000000648e-05, 1.0096999999997108e-05, 1.0598000000000551e-05, 1.0082999999997538e-05, 1.0583999999997512e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.0570000000001412e-05, 1.0152999999998857e-05, 1.0596999999997608e-05, 1.0096999999997108e-05, 1.0111000000000148e-05, 1.0597000000001078e-05, 1.0611000000000648e-05, 1.0570000000001412e-05, 1.0625000000000218e-05, 1.0111000000000148e-05, 1.0596999999997608e-05, 1.0541999999998802e-05, 1.0598000000000551e-05, 1.0111999999999621e-05, 1.0596999999997608e-05, 1.0097000000000578e-05, 1.0583000000001508e-05]</msg>
<status status="PASS" starttime="20201112 09:43:42.681" endtime="20201112 09:43:42.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.676" endtime="20201112 09:43:42.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.686" endtime="20201112 09:43:42.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.689" endtime="20201112 09:43:42.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.688" endtime="20201112 09:43:42.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.684" endtime="20201112 09:43:42.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.274" endtime="20201112 09:43:42.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.273" endtime="20201112 09:43:42.710"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.719" endtime="20201112 09:43:42.735"></status>
</kw>
<msg timestamp="20201112 09:43:42.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.718" endtime="20201112 09:43:42.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.737" endtime="20201112 09:43:42.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.739" endtime="20201112 09:43:42.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.715" endtime="20201112 09:43:42.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.713" endtime="20201112 09:43:42.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.748" endtime="20201112 09:43:43.034"></status>
</kw>
<msg timestamp="20201112 09:43:43.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020434722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.747" endtime="20201112 09:43:43.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020434722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.038" endtime="20201112 09:43:43.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.046" endtime="20201112 09:43:43.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.744" endtime="20201112 09:43:43.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.742" endtime="20201112 09:43:43.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.053" level="INFO">${RESULT} = [{'time': 0.020445819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1097000000001578e-05, 'source_diff': 1.1097000000001578e-05}, {'time': 0.020461972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:43.049" endtime="20201112 09:43:43.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.066" level="INFO">${ACCURACY} = {'source_diff': [1.1097000000001578e-05, 1.1596999999998608e-05, 1.1111000000001148e-05, 1.1125000000000718e-05, 1.1125000000000718e-05, 1.1610999999998178e-05, 1.1097000000001578e-05, 1.1583999999998...</msg>
<status status="PASS" starttime="20201112 09:43:43.054" endtime="20201112 09:43:43.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.071" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.070" endtime="20201112 09:43:43.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.073" level="INFO">VALUE: [1.1097000000001578e-05, 1.1596999999998608e-05, 1.1111000000001148e-05, 1.1125000000000718e-05, 1.1125000000000718e-05, 1.1610999999998178e-05, 1.1097000000001578e-05, 1.1583999999998512e-05, 1.1097000000001578e-05, 1.1596999999998608e-05, 1.2097000000002578e-05, 1.1596999999998608e-05, 1.1541999999999802e-05, 1.1027999999999732e-05, 1.1152000000000384e-05, 1.1597000000002078e-05, 1.1583000000002508e-05, 1.1596999999998608e-05, 1.1611000000001648e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1096999999998108e-05, 1.1097999999997582e-05, 1.1583999999998512e-05, 1.1097999999997582e-05, 1.1111000000001148e-05, 1.1124999999997248e-05, 1.1165999999999954e-05, 1.1139000000000288e-05, 1.2096999999999108e-05, 1.1596999999998608e-05, 1.1568999999999469e-05, 1.1110999999997678e-05, 1.1082999999998538e-05, 1.1625000000001218e-05, 1.1098000000001051e-05, 1.1610999999998178e-05, 1.1083000000002008e-05, 1.1097000000001578e-05, 1.1111000000001148e-05, 1.1097000000001578e-05, 1.2096999999999108e-05, 1.1097000000001578e-05, 1.1596999999998608e-05, 1.1610999999998178e-05, 1.1666999999999927e-05, 1.1597999999998082e-05, 1.1582999999999039e-05, 1.2082999999999539e-05, 1.1096999999998108e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.072" endtime="20201112 09:43:43.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.067" endtime="20201112 09:43:43.074"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.077" endtime="20201112 09:43:43.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.080" endtime="20201112 09:43:43.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.078" endtime="20201112 09:43:43.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.075" endtime="20201112 09:43:43.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.711" endtime="20201112 09:43:43.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.711" endtime="20201112 09:43:43.101"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.110" endtime="20201112 09:43:43.126"></status>
</kw>
<msg timestamp="20201112 09:43:43.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.109" endtime="20201112 09:43:43.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.127" endtime="20201112 09:43:43.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.130" endtime="20201112 09:43:43.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.105" endtime="20201112 09:43:43.132"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.103" endtime="20201112 09:43:43.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.139" endtime="20201112 09:43:43.424"></status>
</kw>
<msg timestamp="20201112 09:43:43.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020483139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.137" endtime="20201112 09:43:43.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020483139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.428" endtime="20201112 09:43:43.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.436" endtime="20201112 09:43:43.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.135" endtime="20201112 09:43:43.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.133" endtime="20201112 09:43:43.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.443" level="INFO">${RESULT} = [{'time': 0.020483139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2596999999999609e-05, 'source_diff': 1.2596999999999609e-05}, {'time': 0.020500194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:43.439" endtime="20201112 09:43:43.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.456" level="INFO">${ACCURACY} = {'source_diff': [1.2596999999999609e-05, 1.2041000000000829e-05, 1.2597999999999082e-05, 1.2597999999999082e-05, 1.2611000000002648e-05, 1.2096999999999108e-05, 1.2583000000000039e-05, 1.2625000000002...</msg>
<status status="PASS" starttime="20201112 09:43:43.444" endtime="20201112 09:43:43.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.460" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.459" endtime="20201112 09:43:43.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.463" level="INFO">VALUE: [1.2596999999999609e-05, 1.2041000000000829e-05, 1.2597999999999082e-05, 1.2597999999999082e-05, 1.2611000000002648e-05, 1.2096999999999108e-05, 1.2583000000000039e-05, 1.2625000000002218e-05, 1.2096999999999108e-05, 1.2097999999998582e-05, 1.2110999999998678e-05, 1.2096999999999108e-05, 1.2624999999998748e-05, 1.2097000000002578e-05, 1.2097999999998582e-05, 1.2610999999999178e-05, 1.2583999999999512e-05, 1.2055999999999872e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2111000000002148e-05, 1.2125000000001718e-05, 1.2137999999998345e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2083999999999012e-05, 1.2097000000002578e-05, 1.205499999999693e-05, 1.2596999999999609e-05, 1.2098000000002052e-05, 1.2596999999999609e-05, 1.2611999999998652e-05, 1.2596999999999609e-05, 1.2612000000002122e-05, 1.2611000000002648e-05, 1.2598000000002552e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2639000000001788e-05, 1.2125000000001718e-05, 1.2583999999999512e-05, 1.2610999999999178e-05, 1.2096999999999108e-05, 1.2097000000002578e-05, 1.2596999999999609e-05, 1.2151999999997914e-05, 1.2596999999999609e-05, 1.2082999999999539e-05, 1.2597999999999082e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.461" endtime="20201112 09:43:43.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.457" endtime="20201112 09:43:43.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.466" endtime="20201112 09:43:43.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.470" endtime="20201112 09:43:43.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.468" endtime="20201112 09:43:43.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.465" endtime="20201112 09:43:43.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.102" endtime="20201112 09:43:43.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.101" endtime="20201112 09:43:43.491"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.499" endtime="20201112 09:43:43.516"></status>
</kw>
<msg timestamp="20201112 09:43:43.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.498" endtime="20201112 09:43:43.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.518" endtime="20201112 09:43:43.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.520" endtime="20201112 09:43:43.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.495" endtime="20201112 09:43:43.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.493" endtime="20201112 09:43:43.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.529" endtime="20201112 09:43:43.814"></status>
</kw>
<msg timestamp="20201112 09:43:43.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020353708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.528" endtime="20201112 09:43:43.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020353708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.819" endtime="20201112 09:43:43.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.827" endtime="20201112 09:43:43.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.525" endtime="20201112 09:43:43.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.523" endtime="20201112 09:43:43.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.834" level="INFO">${RESULT} = [{'time': 0.020366792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3084000000000012e-05, 'source_diff': 1.3084000000000012e-05}, {'time': 0.020382847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:43.830" endtime="20201112 09:43:43.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.847" level="INFO">${ACCURACY} = {'source_diff': [1.3084000000000012e-05, 1.358299999999757e-05, 1.3611000000000179e-05, 1.3083000000000539e-05, 1.409699999999764e-05, 1.3624999999999748e-05, 1.3097000000000109e-05, 1.309700000000010...</msg>
<status status="PASS" starttime="20201112 09:43:43.835" endtime="20201112 09:43:43.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.851" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.850" endtime="20201112 09:43:43.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.854" level="INFO">VALUE: [1.3084000000000012e-05, 1.358299999999757e-05, 1.3611000000000179e-05, 1.3083000000000539e-05, 1.409699999999764e-05, 1.3624999999999748e-05, 1.3097000000000109e-05, 1.3097000000000109e-05, 1.3596999999997139e-05, 1.3069000000000969e-05, 1.3624999999999748e-05, 1.3611000000000179e-05, 1.3611999999999652e-05, 1.3597000000000609e-05, 1.3097000000000109e-05, 1.3110999999999678e-05, 1.3610999999996709e-05, 1.3611000000000179e-05, 1.3583999999997043e-05, 1.3625000000003218e-05, 1.3124999999999248e-05, 1.3667000000001928e-05, 1.3097999999999582e-05, 1.3153000000001858e-05, 1.354099999999886e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3110999999999678e-05, 1.358299999999757e-05, 1.3598000000000082e-05, 1.3624999999999748e-05, 1.3680000000002024e-05, 1.4083000000001539e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3624999999999748e-05, 1.3110999999999678e-05, 1.4097000000001109e-05, 1.3583000000001039e-05, 1.3598000000000082e-05, 1.4112000000000152e-05, 1.3153000000001858e-05, 1.3584000000000512e-05, 1.3110999999999678e-05, 1.3583000000001039e-05, 1.3597000000000609e-05, 1.3598000000000082e-05, 1.3111999999999152e-05, 1.3611000000000179e-05, 1.3597000000000609e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.852" endtime="20201112 09:43:43.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.848" endtime="20201112 09:43:43.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.857" endtime="20201112 09:43:43.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.861" endtime="20201112 09:43:43.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.859" endtime="20201112 09:43:43.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.856" endtime="20201112 09:43:43.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.492" endtime="20201112 09:43:43.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.491" endtime="20201112 09:43:43.882"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.890" endtime="20201112 09:43:43.908"></status>
</kw>
<msg timestamp="20201112 09:43:43.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.889" endtime="20201112 09:43:43.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.909" endtime="20201112 09:43:43.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.912" endtime="20201112 09:43:43.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.886" endtime="20201112 09:43:43.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.884" endtime="20201112 09:43:43.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.921" endtime="20201112 09:43:44.206"></status>
</kw>
<msg timestamp="20201112 09:43:44.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.919" endtime="20201112 09:43:44.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019705542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.210" endtime="20201112 09:43:44.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.218" endtime="20201112 09:43:44.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.916" endtime="20201112 09:43:44.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.915" endtime="20201112 09:43:44.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.225" level="INFO">${RESULT} = [{'time': 0.019720125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4583000000002039e-05, 'source_diff': 1.4583000000002039e-05}, {'time': 0.019739014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:44.221" endtime="20201112 09:43:44.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.239" level="INFO">${ACCURACY} = {'source_diff': [1.4583000000002039e-05, 1.4625000000000749e-05, 1.461099999999771e-05, 1.4125000000000248e-05, 1.4611000000001179e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.46110000000011...</msg>
<status status="PASS" starttime="20201112 09:43:44.225" endtime="20201112 09:43:44.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.243" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.242" endtime="20201112 09:43:44.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.246" level="INFO">VALUE: [1.4583000000002039e-05, 1.4625000000000749e-05, 1.461099999999771e-05, 1.4125000000000248e-05, 1.4611000000001179e-05, 1.4611000000001179e-05, 1.4639000000000318e-05, 1.4611000000001179e-05, 1.4514000000000193e-05, 1.4084000000001012e-05, 1.4598000000001082e-05, 1.4597000000001609e-05, 1.459699999999814e-05, 1.4638999999996849e-05, 1.4084000000001012e-05, 1.4111000000000679e-05, 1.4097000000001109e-05, 1.4097000000001109e-05, 1.4598000000001082e-05, 1.4597000000001609e-05, 1.4611000000001179e-05, 1.4555999999998903e-05, 1.4597000000001609e-05, 1.4611000000001179e-05, 1.409699999999764e-05, 1.4541999999999333e-05, 1.409699999999764e-05, 1.4111000000000679e-05, 1.408299999999807e-05, 1.4097000000001109e-05, 1.4097000000001109e-05, 1.4598000000001082e-05, 1.4625000000000749e-05, 1.4583999999998043e-05, 1.4152999999999388e-05, 1.461099999999771e-05, 1.4597999999997613e-05, 1.4083999999997543e-05, 1.4611000000001179e-05, 1.4097000000001109e-05, 1.459699999999814e-05, 1.4111000000000679e-05, 1.4638999999996849e-05, 1.4027999999999263e-05, 1.4110999999997209e-05, 1.4111000000000679e-05, 1.4111000000000679e-05, 1.4111000000000679e-05, 1.4597000000001609e-05, 1.5069999999998973e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.244" endtime="20201112 09:43:44.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.240" endtime="20201112 09:43:44.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.249" endtime="20201112 09:43:44.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.253" endtime="20201112 09:43:44.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.251" endtime="20201112 09:43:44.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.247" endtime="20201112 09:43:44.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.882" endtime="20201112 09:43:44.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.882" endtime="20201112 09:43:44.273"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.282" endtime="20201112 09:43:44.299"></status>
</kw>
<msg timestamp="20201112 09:43:44.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.280" endtime="20201112 09:43:44.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.300" endtime="20201112 09:43:44.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.303" endtime="20201112 09:43:44.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.278" endtime="20201112 09:43:44.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.276" endtime="20201112 09:43:44.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.313" endtime="20201112 09:43:44.599"></status>
</kw>
<msg timestamp="20201112 09:43:44.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.312" endtime="20201112 09:43:44.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019708278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019723889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.604" endtime="20201112 09:43:44.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.612" endtime="20201112 09:43:44.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.309" endtime="20201112 09:43:44.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.307" endtime="20201112 09:43:44.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.618" level="INFO">${RESULT} = [{'time': 0.019723889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.561100000000218e-05, 'source_diff': 1.561100000000218e-05}, {'time': 0.019742056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:44.615" endtime="20201112 09:43:44.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.632" level="INFO">${ACCURACY} = {'source_diff': [1.561100000000218e-05, 1.5569999999999473e-05, 1.611099999999921e-05, 1.5098000000001582e-05, 1.561100000000218e-05, 1.558299999999957e-05, 1.5124999999997779e-05, 1.562499999999828e-...</msg>
<status status="PASS" starttime="20201112 09:43:44.619" endtime="20201112 09:43:44.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.636" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.635" endtime="20201112 09:43:44.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.639" level="INFO">VALUE: [1.561100000000218e-05, 1.5569999999999473e-05, 1.611099999999921e-05, 1.5098000000001582e-05, 1.561100000000218e-05, 1.558299999999957e-05, 1.5124999999997779e-05, 1.562499999999828e-05, 1.5084000000002012e-05, 1.562500000000175e-05, 1.559699999999914e-05, 1.5153000000000388e-05, 1.561099999999871e-05, 1.5083000000002539e-05, 1.6084000000003013e-05, 1.561100000000218e-05, 1.508299999999907e-05, 1.562499999999828e-05, 1.559700000000261e-05, 1.5680000000000555e-05, 1.5097999999998113e-05, 1.559699999999914e-05, 1.558299999999957e-05, 1.508299999999907e-05, 1.5111000000001679e-05, 1.5612000000001652e-05, 1.508299999999907e-05, 1.5111000000001679e-05, 1.508299999999907e-05, 1.5097000000002109e-05, 1.5097999999998113e-05, 1.5583999999999043e-05, 1.561100000000218e-05, 1.509699999999864e-05, 1.511099999999821e-05, 1.5124999999997779e-05, 1.558299999999957e-05, 1.5028000000000263e-05, 1.5180000000000055e-05, 1.5569e-05, 1.509699999999864e-05, 1.561100000000218e-05, 1.5598000000002082e-05, 1.562499999999828e-05, 1.611099999999921e-05, 1.559699999999914e-05, 1.562499999999828e-05, 1.509699999999864e-05, 1.561099999999871e-05, 1.5124999999997779e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.637" endtime="20201112 09:43:44.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.633" endtime="20201112 09:43:44.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.642" endtime="20201112 09:43:44.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.645" endtime="20201112 09:43:44.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.644" endtime="20201112 09:43:44.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.641" endtime="20201112 09:43:44.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.274" endtime="20201112 09:43:44.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.274" endtime="20201112 09:43:44.666"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.675" endtime="20201112 09:43:44.691"></status>
</kw>
<msg timestamp="20201112 09:43:44.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.673" endtime="20201112 09:43:44.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.692" endtime="20201112 09:43:44.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.695" endtime="20201112 09:43:44.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.671" endtime="20201112 09:43:44.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.669" endtime="20201112 09:43:44.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.705" endtime="20201112 09:43:44.990"></status>
</kw>
<msg timestamp="20201112 09:43:44.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.703" endtime="20201112 09:43:44.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019806347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.994" endtime="20201112 09:43:45.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.003" endtime="20201112 09:43:45.004"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.701" endtime="20201112 09:43:45.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.699" endtime="20201112 09:43:45.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.009" level="INFO">${RESULT} = [{'time': 0.019822444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.609700000000311e-05, 'source_diff': 1.609700000000311e-05}, {'time': 0.019842875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.006" endtime="20201112 09:43:45.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.023" level="INFO">${ACCURACY} = {'source_diff': [1.609700000000311e-05, 1.608300000000007e-05, 1.658300000000057e-05, 1.612499999999878e-05, 1.6097999999999113e-05, 1.659700000000014e-05, 1.6555999999997434e-05, 1.6597999999999613e-...</msg>
<status status="PASS" starttime="20201112 09:43:45.010" endtime="20201112 09:43:45.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.027" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.026" endtime="20201112 09:43:45.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.029" level="INFO">VALUE: [1.609700000000311e-05, 1.608300000000007e-05, 1.658300000000057e-05, 1.612499999999878e-05, 1.6097999999999113e-05, 1.659700000000014e-05, 1.6555999999997434e-05, 1.6597999999999613e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.7084000000000543e-05, 1.6695000000000598e-05, 1.611100000000268e-05, 1.6041999999997364e-05, 1.611099999999921e-05, 1.612500000000225e-05, 1.609699999999964e-05, 1.611099999999921e-05, 1.712499999999978e-05, 1.611099999999921e-05, 1.6597999999999613e-05, 1.658300000000057e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.6069999999999973e-05, 1.6097999999999113e-05, 1.6098000000002582e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.7027999999998794e-05, 1.6611999999999183e-05, 1.658300000000057e-05, 1.612499999999878e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.6597999999999613e-05, 1.611100000000268e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.709700000000064e-05, 1.6097999999999113e-05, 1.6097999999999113e-05, 1.6083999999999543e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.609699999999964e-05, 1.659700000000014e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.028" endtime="20201112 09:43:45.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.023" endtime="20201112 09:43:45.031"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.033" endtime="20201112 09:43:45.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.036" endtime="20201112 09:43:45.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.035" endtime="20201112 09:43:45.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.031" endtime="20201112 09:43:45.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.667" endtime="20201112 09:43:45.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.667" endtime="20201112 09:43:45.057"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.066" endtime="20201112 09:43:45.083"></status>
</kw>
<msg timestamp="20201112 09:43:45.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.064" endtime="20201112 09:43:45.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.085" endtime="20201112 09:43:45.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.087" endtime="20201112 09:43:45.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.062" endtime="20201112 09:43:45.090"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.060" endtime="20201112 09:43:45.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.097" endtime="20201112 09:43:45.384"></status>
</kw>
<msg timestamp="20201112 09:43:45.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.096" endtime="20201112 09:43:45.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.389" endtime="20201112 09:43:45.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.397" endtime="20201112 09:43:45.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.093" endtime="20201112 09:43:45.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.092" endtime="20201112 09:43:45.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.403" level="INFO">${RESULT} = [{'time': 0.019630903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7070000000000973e-05, 'source_diff': 1.7070000000000973e-05}, {'time': 0.019654014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:45.400" endtime="20201112 09:43:45.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.417" level="INFO">${ACCURACY} = {'source_diff': [1.7070000000000973e-05, 1.708300000000107e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.712500000000325e-05, 1.759699999999767e-05, 1.709700000000064e-05, 1.759699999999767e-05...</msg>
<status status="PASS" starttime="20201112 09:43:45.404" endtime="20201112 09:43:45.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.421" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.420" endtime="20201112 09:43:45.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.424" level="INFO">VALUE: [1.7070000000000973e-05, 1.708300000000107e-05, 1.712499999999978e-05, 1.713899999999935e-05, 1.712500000000325e-05, 1.759699999999767e-05, 1.709700000000064e-05, 1.759699999999767e-05, 1.709700000000064e-05, 1.761100000000071e-05, 1.7111999999999683e-05, 1.759699999999767e-05, 1.759700000000114e-05, 1.70829999999976e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.761100000000071e-05, 1.709700000000064e-05, 1.762500000000028e-05, 1.7084000000000543e-05, 1.70690000000015e-05, 1.766699999999899e-05, 1.7583999999997574e-05, 1.759700000000114e-05, 1.809699999999817e-05, 1.759700000000114e-05, 1.752699999999982e-05, 1.7070000000000973e-05, 1.7597999999997144e-05, 1.759700000000114e-05, 1.762500000000028e-05, 1.759699999999767e-05, 1.709700000000064e-05, 1.762500000000028e-05, 1.7098000000000113e-05, 1.711100000000021e-05, 1.709700000000064e-05, 1.809700000000164e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.7598000000000613e-05, 1.709700000000064e-05, 1.761100000000071e-05, 1.713899999999935e-05, 1.759700000000114e-05, 1.7112000000003152e-05, 1.7098000000000113e-05, 1.761100000000071e-05, 1.8069999999998504e-05, 1.759700000000114e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.422" endtime="20201112 09:43:45.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.418" endtime="20201112 09:43:45.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.427" endtime="20201112 09:43:45.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.431" endtime="20201112 09:43:45.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.429" endtime="20201112 09:43:45.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.426" endtime="20201112 09:43:45.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.058" endtime="20201112 09:43:45.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.057" endtime="20201112 09:43:45.451"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.460" endtime="20201112 09:43:45.477"></status>
</kw>
<msg timestamp="20201112 09:43:45.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.458" endtime="20201112 09:43:45.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.478" endtime="20201112 09:43:45.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.481" endtime="20201112 09:43:45.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.456" endtime="20201112 09:43:45.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.454" endtime="20201112 09:43:45.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.490" endtime="20201112 09:43:45.775"></status>
</kw>
<msg timestamp="20201112 09:43:45.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.489" endtime="20201112 09:43:45.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019692431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.779" endtime="20201112 09:43:45.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.787" endtime="20201112 09:43:45.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.486" endtime="20201112 09:43:45.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.485" endtime="20201112 09:43:45.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.794" level="INFO">${RESULT} = [{'time': 0.019692431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.862500000000128e-05, 'source_diff': 1.862500000000128e-05}, {'time': 0.019715222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:45.791" endtime="20201112 09:43:45.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.808" level="INFO">${ACCURACY} = {'source_diff': [1.862500000000128e-05, 1.861100000000171e-05, 1.861099999999824e-05, 1.859699999999867e-05, 1.811099999999774e-05, 1.809699999999817e-05, 1.809699999999817e-05, 1.8598000000001613e-05...</msg>
<status status="PASS" starttime="20201112 09:43:45.795" endtime="20201112 09:43:45.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.813" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.812" endtime="20201112 09:43:45.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.815" level="INFO">VALUE: [1.862500000000128e-05, 1.861100000000171e-05, 1.861099999999824e-05, 1.859699999999867e-05, 1.811099999999774e-05, 1.809699999999817e-05, 1.809699999999817e-05, 1.8598000000001613e-05, 1.805499999999946e-05, 1.809699999999817e-05, 1.8598000000001613e-05, 1.8597999999998144e-05, 1.85829999999991e-05, 1.811099999999774e-05, 1.859700000000214e-05, 1.85829999999991e-05, 1.8569999999999004e-05, 1.8555999999999434e-05, 1.809699999999817e-05, 1.8083999999998074e-05, 1.85829999999991e-05, 1.811100000000121e-05, 1.861100000000171e-05, 1.8597999999998144e-05, 1.811099999999774e-05, 1.859699999999867e-05, 1.811099999999774e-05, 1.8055999999998934e-05, 1.909699999999917e-05, 1.8112000000000683e-05, 1.909699999999917e-05, 1.809700000000164e-05, 1.811100000000121e-05, 1.859700000000214e-05, 1.859700000000214e-05, 1.8098000000001113e-05, 1.8098000000001113e-05, 1.861099999999824e-05, 1.8138000000000876e-05, 1.859699999999867e-05, 1.8598000000001613e-05, 1.8098000000001113e-05, 1.861099999999824e-05, 1.859700000000214e-05, 1.811099999999774e-05, 1.858300000000257e-05, 1.812500000000078e-05, 1.8598000000001613e-05, 1.806899999999903e-05, 1.8598000000001613e-05]</msg>
<status status="PASS" starttime="20201112 09:43:45.814" endtime="20201112 09:43:45.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.809" endtime="20201112 09:43:45.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.819" endtime="20201112 09:43:45.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.822" endtime="20201112 09:43:45.841"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.820" endtime="20201112 09:43:45.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.817" endtime="20201112 09:43:45.842"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.452" endtime="20201112 09:43:45.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.452" endtime="20201112 09:43:45.843"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.851" endtime="20201112 09:43:45.869"></status>
</kw>
<msg timestamp="20201112 09:43:45.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.850" endtime="20201112 09:43:45.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.871" endtime="20201112 09:43:45.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.873" endtime="20201112 09:43:45.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.847" endtime="20201112 09:43:45.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.845" endtime="20201112 09:43:45.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.883" endtime="20201112 09:43:46.170"></status>
</kw>
<msg timestamp="20201112 09:43:46.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019718639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.881" endtime="20201112 09:43:46.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019718639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.174" endtime="20201112 09:43:46.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.182" endtime="20201112 09:43:46.183"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.879" endtime="20201112 09:43:46.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.877" endtime="20201112 09:43:46.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.188" level="INFO">${RESULT} = [{'time': 0.019718639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.909699999999917e-05, 'source_diff': 1.909699999999917e-05}, {'time': 0.019740708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.185" endtime="20201112 09:43:46.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.202" level="INFO">${ACCURACY} = {'source_diff': [1.909699999999917e-05, 1.961099999999924e-05, 1.959699999999967e-05, 1.909699999999917e-05, 1.961099999999924e-05, 1.959700000000314e-05, 1.95830000000001e-05, 1.90829999999996e-05, 1...</msg>
<status status="PASS" starttime="20201112 09:43:46.189" endtime="20201112 09:43:46.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.206" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.205" endtime="20201112 09:43:46.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.209" level="INFO">VALUE: [1.909699999999917e-05, 1.961099999999924e-05, 1.959699999999967e-05, 1.909699999999917e-05, 1.961099999999924e-05, 1.959700000000314e-05, 1.95830000000001e-05, 1.90829999999996e-05, 1.915299999999745e-05, 1.912499999999831e-05, 1.959699999999967e-05, 1.959700000000314e-05, 1.909700000000264e-05, 1.909699999999917e-05, 1.95830000000001e-05, 1.961099999999924e-05, 1.961099999999924e-05, 1.961100000000271e-05, 1.909699999999917e-05, 1.909699999999917e-05, 1.909699999999917e-05, 1.9097999999998644e-05, 1.915299999999745e-05, 1.9070000000002973e-05, 1.961099999999924e-05, 1.913900000000135e-05, 1.908300000000307e-05, 1.9611999999998714e-05, 1.9556000000000434e-05, 1.961099999999924e-05, 1.909699999999917e-05, 1.912500000000178e-05, 1.913900000000135e-05, 1.906900000000003e-05, 1.961099999999924e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.963900000000185e-05, 1.968100000000056e-05, 1.913899999999788e-05, 1.913900000000135e-05, 1.909699999999917e-05, 1.911100000000221e-05, 1.961099999999924e-05, 1.911099999999874e-05, 1.912499999999831e-05, 1.911099999999874e-05, 1.956900000000053e-05, 1.959699999999967e-05, 1.959699999999967e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.207" endtime="20201112 09:43:46.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.203" endtime="20201112 09:43:46.210"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.212" endtime="20201112 09:43:46.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.215" endtime="20201112 09:43:46.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.214" endtime="20201112 09:43:46.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.211" endtime="20201112 09:43:46.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.844" endtime="20201112 09:43:46.236"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.843" endtime="20201112 09:43:46.236"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.245" endtime="20201112 09:43:46.261"></status>
</kw>
<msg timestamp="20201112 09:43:46.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.243" endtime="20201112 09:43:46.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.263" endtime="20201112 09:43:46.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.265" endtime="20201112 09:43:46.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.241" endtime="20201112 09:43:46.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.239" endtime="20201112 09:43:46.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.275" endtime="20201112 09:43:46.561"></status>
</kw>
<msg timestamp="20201112 09:43:46.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:46.273" endtime="20201112 09:43:46.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196515, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:46.566" endtime="20201112 09:43:46.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.574" endtime="20201112 09:43:46.575"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.271" endtime="20201112 09:43:46.576"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.269" endtime="20201112 09:43:46.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.580" level="INFO">${RESULT} = [{'time': 0.0196515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.006899999999756e-05, 'source_diff': 2.006899999999756e-05}, {'time': 0.019677361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:46.577" endtime="20201112 09:43:46.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.594" level="INFO">${ACCURACY} = {'source_diff': [2.006899999999756e-05, 2.05830000000011e-05, 2.0028000000001794e-05, 2.012500000000278e-05, 2.0666000000002516e-05, 2.059700000000067e-05, 2.059700000000067e-05, 2.011099999999974e-05...</msg>
<status status="PASS" starttime="20201112 09:43:46.581" endtime="20201112 09:43:46.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.598" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.597" endtime="20201112 09:43:46.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.601" level="INFO">VALUE: [2.006899999999756e-05, 2.05830000000011e-05, 2.0028000000001794e-05, 2.012500000000278e-05, 2.0666000000002516e-05, 2.059700000000067e-05, 2.059700000000067e-05, 2.011099999999974e-05, 2.0583999999997105e-05, 2.011099999999974e-05, 2.062499999999981e-05, 2.10969999999977e-05, 2.059700000000067e-05, 2.011099999999974e-05, 2.1193999999998686e-05, 2.0637999999999906e-05, 2.011099999999974e-05, 2.015300000000192e-05, 2.011099999999974e-05, 2.062499999999981e-05, 2.061100000000024e-05, 2.0598000000000144e-05, 2.00830000000006e-05, 2.065300000000242e-05, 2.063899999999938e-05, 2.062499999999981e-05, 2.0584000000000574e-05, 2.0637999999999906e-05, 2.005500000000146e-05, 2.0570000000001004e-05, 2.0680000000002086e-05, 2.0097999999999644e-05, 2.059700000000067e-05, 2.059700000000067e-05, 2.0584000000000574e-05, 2.009700000000017e-05, 2.011099999999974e-05, 2.0084000000000074e-05, 2.009700000000017e-05, 2.011099999999974e-05, 2.0041999999997895e-05, 2.059700000000067e-05, 2.011099999999974e-05, 2.061100000000024e-05, 2.1111999999996744e-05, 2.0528000000002294e-05, 2.011099999999974e-05, 2.011099999999974e-05, 2.009700000000017e-05, 2.0097999999999644e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.599" endtime="20201112 09:43:46.601"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.594" endtime="20201112 09:43:46.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.604" endtime="20201112 09:43:46.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.607" endtime="20201112 09:43:46.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.606" endtime="20201112 09:43:46.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.602" endtime="20201112 09:43:46.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.237" endtime="20201112 09:43:46.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.237" endtime="20201112 09:43:46.628"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.637" endtime="20201112 09:43:46.655"></status>
</kw>
<msg timestamp="20201112 09:43:46.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.635" endtime="20201112 09:43:46.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.656" endtime="20201112 09:43:46.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.659" endtime="20201112 09:43:46.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.633" endtime="20201112 09:43:46.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.631" endtime="20201112 09:43:46.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.669" endtime="20201112 09:43:46.954"></status>
</kw>
<msg timestamp="20201112 09:43:46.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.667" endtime="20201112 09:43:46.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019728917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.958" endtime="20201112 09:43:46.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.966" endtime="20201112 09:43:46.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.665" endtime="20201112 09:43:46.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.663" endtime="20201112 09:43:46.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.973" level="INFO">${RESULT} = [{'time': 0.019728917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1097999999997175e-05, 'source_diff': 2.1097999999997175e-05}, {'time': 0.019753903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:46.970" endtime="20201112 09:43:46.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.986" level="INFO">${ACCURACY} = {'source_diff': [2.1097999999997175e-05, 2.1069999999998035e-05, 2.10969999999977e-05, 2.20830000000026e-05, 2.158299999999863e-05, 2.159700000000167e-05, 2.109700000000117e-05, 2.1597999999997675e-05...</msg>
<status status="PASS" starttime="20201112 09:43:46.974" endtime="20201112 09:43:46.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.991" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.990" endtime="20201112 09:43:46.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.993" level="INFO">VALUE: [2.1097999999997175e-05, 2.1069999999998035e-05, 2.10969999999977e-05, 2.20830000000026e-05, 2.158299999999863e-05, 2.159700000000167e-05, 2.109700000000117e-05, 2.1597999999997675e-05, 2.163900000000038e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.1584000000001574e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.158299999999863e-05, 2.10830000000016e-05, 2.15969999999982e-05, 2.2112000000001214e-05, 2.159700000000167e-05, 2.161100000000124e-05, 2.15969999999982e-05, 2.109700000000117e-05, 2.158299999999863e-05, 2.1598000000001144e-05, 2.163900000000038e-05, 2.109700000000117e-05, 2.10830000000016e-05, 2.111100000000074e-05, 2.15830000000021e-05, 2.111100000000074e-05, 2.15830000000021e-05, 2.161099999999777e-05, 2.109700000000117e-05, 2.116699999999902e-05, 2.162500000000081e-05, 2.109700000000117e-05, 2.159700000000167e-05, 2.109700000000117e-05, 2.111099999999727e-05, 2.156899999999906e-05, 2.159700000000167e-05, 2.111100000000074e-05, 2.1597999999997675e-05, 2.155499999999949e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.111100000000074e-05, 2.15969999999982e-05, 2.111100000000074e-05]</msg>
<status status="PASS" starttime="20201112 09:43:46.992" endtime="20201112 09:43:46.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.987" endtime="20201112 09:43:46.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.001" endtime="20201112 09:43:47.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.005" endtime="20201112 09:43:47.024"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.003" endtime="20201112 09:43:47.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.000" endtime="20201112 09:43:47.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.629" endtime="20201112 09:43:47.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.629" endtime="20201112 09:43:47.026"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.034" endtime="20201112 09:43:47.051"></status>
</kw>
<msg timestamp="20201112 09:43:47.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.033" endtime="20201112 09:43:47.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.053" endtime="20201112 09:43:47.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.055" endtime="20201112 09:43:47.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.030" endtime="20201112 09:43:47.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.028" endtime="20201112 09:43:47.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.065" endtime="20201112 09:43:47.351"></status>
</kw>
<msg timestamp="20201112 09:43:47.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.064" endtime="20201112 09:43:47.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.355" endtime="20201112 09:43:47.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.364" endtime="20201112 09:43:47.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.061" endtime="20201112 09:43:47.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.059" endtime="20201112 09:43:47.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.371" level="INFO">${RESULT} = [{'time': 0.019650861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.25969999999992e-05, 'source_diff': 2.25969999999992e-05}, {'time': 0.019677292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:47.368" endtime="20201112 09:43:47.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.385" level="INFO">${ACCURACY} = {'source_diff': [2.25969999999992e-05, 2.261099999999877e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.266700000000052e-05, 2.256900000000006e-05, 2.30969999999997e-05, 2.30...</msg>
<status status="PASS" starttime="20201112 09:43:47.372" endtime="20201112 09:43:47.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.390" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.389" endtime="20201112 09:43:47.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.393" level="INFO">VALUE: [2.25969999999992e-05, 2.261099999999877e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.266700000000052e-05, 2.256900000000006e-05, 2.30969999999997e-05, 2.308300000000013e-05, 2.25969999999992e-05, 2.262499999999834e-05, 2.2084000000002074e-05, 2.212499999999784e-05, 2.258299999999963e-05, 2.20969999999987e-05, 2.262499999999834e-05, 2.258299999999963e-05, 2.2180000000000116e-05, 2.265300000000095e-05, 2.2597999999998675e-05, 2.25830000000031e-05, 2.2151999999997507e-05, 2.208299999999913e-05, 2.312500000000231e-05, 2.261099999999877e-05, 2.261099999999877e-05, 2.208299999999913e-05, 2.212500000000131e-05, 2.25969999999992e-05, 2.311099999999927e-05, 2.2611999999998245e-05, 2.212500000000131e-05, 2.261099999999877e-05, 2.25969999999992e-05, 2.20969999999987e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.2597999999998675e-05, 2.25969999999992e-05, 2.20969999999987e-05, 2.20969999999987e-05, 2.30969999999997e-05, 2.262500000000181e-05, 2.262500000000181e-05, 2.209700000000217e-05, 2.211100000000174e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.2097999999998175e-05, 2.25969999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.391" endtime="20201112 09:43:47.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.386" endtime="20201112 09:43:47.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.396" endtime="20201112 09:43:47.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.400" endtime="20201112 09:43:47.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.398" endtime="20201112 09:43:47.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.395" endtime="20201112 09:43:47.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.027" endtime="20201112 09:43:47.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.026" endtime="20201112 09:43:47.420"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.429" endtime="20201112 09:43:47.447"></status>
</kw>
<msg timestamp="20201112 09:43:47.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.427" endtime="20201112 09:43:47.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.448" endtime="20201112 09:43:47.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.451" endtime="20201112 09:43:47.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.425" endtime="20201112 09:43:47.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.423" endtime="20201112 09:43:47.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.461" endtime="20201112 09:43:47.745"></status>
</kw>
<msg timestamp="20201112 09:43:47.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01985275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:47.459" endtime="20201112 09:43:47.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01985275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019876347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:47.749" endtime="20201112 09:43:47.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.757" endtime="20201112 09:43:47.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.456" endtime="20201112 09:43:47.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.455" endtime="20201112 09:43:47.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.764" level="INFO">${RESULT} = [{'time': 0.019876347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.35970000000002e-05, 'source_diff': 2.35970000000002e-05}, {'time': 0.019905153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:47.761" endtime="20201112 09:43:47.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.777" level="INFO">${ACCURACY} = {'source_diff': [2.35970000000002e-05, 2.3083999999999605e-05, 2.362499999999934e-05, 2.361100000000324e-05, 2.361099999999977e-05, 2.315300000000145e-05, 2.30969999999997e-05, 2.313900000000188e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:47.765" endtime="20201112 09:43:47.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.782" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.781" endtime="20201112 09:43:47.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.784" level="INFO">VALUE: [2.35970000000002e-05, 2.3083999999999605e-05, 2.362499999999934e-05, 2.361100000000324e-05, 2.361099999999977e-05, 2.315300000000145e-05, 2.30969999999997e-05, 2.313900000000188e-05, 2.30969999999997e-05, 2.35970000000002e-05, 2.3097999999999175e-05, 2.311099999999927e-05, 2.362500000000281e-05, 2.312500000000231e-05, 2.311099999999927e-05, 2.358300000000063e-05, 2.315299999999798e-05, 2.40970000000007e-05, 2.3611999999999245e-05, 2.30969999999997e-05, 2.40970000000007e-05, 2.4096999999997232e-05, 2.3596999999996732e-05, 2.362499999999934e-05, 2.361099999999977e-05, 2.35970000000002e-05, 2.311099999999927e-05, 2.35970000000002e-05, 2.35970000000002e-05, 2.30969999999997e-05, 2.40970000000007e-05, 2.3584000000000105e-05, 2.4084000000000605e-05, 2.363899999999891e-05, 2.308300000000013e-05, 2.361099999999977e-05, 2.358300000000063e-05, 2.4084000000000605e-05, 2.30969999999997e-05, 2.361099999999977e-05, 2.361099999999977e-05, 2.361099999999977e-05, 2.308300000000013e-05, 2.3584000000000105e-05, 2.3637999999999437e-05, 2.3582999999997162e-05, 2.361099999999977e-05, 2.361099999999977e-05, 2.35970000000002e-05, 2.3611999999999245e-05]</msg>
<status status="PASS" starttime="20201112 09:43:47.783" endtime="20201112 09:43:47.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.778" endtime="20201112 09:43:47.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.788" endtime="20201112 09:43:47.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.791" endtime="20201112 09:43:47.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.790" endtime="20201112 09:43:47.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.786" endtime="20201112 09:43:47.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.421" endtime="20201112 09:43:47.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.421" endtime="20201112 09:43:47.812"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.821" endtime="20201112 09:43:47.836"></status>
</kw>
<msg timestamp="20201112 09:43:47.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.819" endtime="20201112 09:43:47.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.838" endtime="20201112 09:43:47.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.840" endtime="20201112 09:43:47.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.816" endtime="20201112 09:43:47.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.814" endtime="20201112 09:43:47.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.850" endtime="20201112 09:43:48.135"></status>
</kw>
<msg timestamp="20201112 09:43:48.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.848" endtime="20201112 09:43:48.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019783306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.140" endtime="20201112 09:43:48.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.148" endtime="20201112 09:43:48.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.846" endtime="20201112 09:43:48.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.844" endtime="20201112 09:43:48.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.155" level="INFO">${RESULT} = [{'time': 0.019783306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4098000000000175e-05, 'source_diff': 2.4098000000000175e-05}, {'time': 0.019810167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:48.151" endtime="20201112 09:43:48.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.168" level="INFO">${ACCURACY} = {'source_diff': [2.4098000000000175e-05, 2.4598000000000675e-05, 2.40970000000007e-05, 2.461100000000077e-05, 2.511100000000127e-05, 2.461100000000077e-05, 2.461100000000077e-05, 2.50970000000017e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:48.156" endtime="20201112 09:43:48.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.173" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.172" endtime="20201112 09:43:48.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.175" level="INFO">VALUE: [2.4098000000000175e-05, 2.4598000000000675e-05, 2.40970000000007e-05, 2.461100000000077e-05, 2.511100000000127e-05, 2.461100000000077e-05, 2.461100000000077e-05, 2.50970000000017e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.412499999999984e-05, 2.4042000000001895e-05, 2.45970000000012e-05, 2.4111999999999745e-05, 2.4598000000000675e-05, 2.4582999999998162e-05, 2.412499999999984e-05, 2.50970000000017e-05, 2.4596999999997732e-05, 2.40970000000007e-05, 2.4598000000000675e-05, 2.416700000000202e-05, 2.458300000000163e-05, 2.45970000000012e-05, 2.41109999999968e-05, 2.4610999999997302e-05, 2.458300000000163e-05, 2.5111999999997275e-05, 2.4096999999997232e-05, 2.45970000000012e-05, 2.4082999999997662e-05, 2.408300000000113e-05, 2.4612000000000245e-05, 2.4598000000000675e-05, 2.461100000000077e-05, 2.411100000000027e-05, 2.45970000000012e-05, 2.461100000000077e-05, 2.411100000000027e-05, 2.4097999999996705e-05, 2.4582999999998162e-05, 2.45970000000012e-05, 2.513900000000041e-05, 2.50970000000017e-05, 2.4610999999997302e-05, 2.458300000000163e-05, 2.411100000000027e-05, 2.4084000000000605e-05, 2.40970000000007e-05, 2.45970000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.174" endtime="20201112 09:43:48.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.169" endtime="20201112 09:43:48.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.179" endtime="20201112 09:43:48.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.182" endtime="20201112 09:43:48.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.181" endtime="20201112 09:43:48.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.177" endtime="20201112 09:43:48.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.813" endtime="20201112 09:43:48.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.812" endtime="20201112 09:43:48.203"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.212" endtime="20201112 09:43:48.228"></status>
</kw>
<msg timestamp="20201112 09:43:48.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.210" endtime="20201112 09:43:48.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.229" endtime="20201112 09:43:48.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.232" endtime="20201112 09:43:48.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.208" endtime="20201112 09:43:48.235"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.206" endtime="20201112 09:43:48.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.242" endtime="20201112 09:43:48.527"></status>
</kw>
<msg timestamp="20201112 09:43:48.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.240" endtime="20201112 09:43:48.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019732375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019757444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.531" endtime="20201112 09:43:48.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.539" endtime="20201112 09:43:48.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.238" endtime="20201112 09:43:48.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.236" endtime="20201112 09:43:48.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.546" level="INFO">${RESULT} = [{'time': 0.019757444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5068999999999092e-05, 'source_diff': 2.5068999999999092e-05}, {'time': 0.019787486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:48.543" endtime="20201112 09:43:48.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.560" level="INFO">${ACCURACY} = {'source_diff': [2.5068999999999092e-05, 2.5041999999999426e-05, 2.5096999999998232e-05, 2.561100000000177e-05, 2.511100000000127e-05, 2.55970000000022e-05, 2.5597999999998206e-05, 2.5110999999997802e...</msg>
<status status="PASS" starttime="20201112 09:43:48.547" endtime="20201112 09:43:48.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.564" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.563" endtime="20201112 09:43:48.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.567" level="INFO">VALUE: [2.5068999999999092e-05, 2.5041999999999426e-05, 2.5096999999998232e-05, 2.561100000000177e-05, 2.511100000000127e-05, 2.55970000000022e-05, 2.5597999999998206e-05, 2.5110999999997802e-05, 2.561100000000177e-05, 2.562500000000134e-05, 2.5582999999999162e-05, 2.5096999999998232e-05, 2.561100000000177e-05, 2.5612000000001245e-05, 2.5612000000001245e-05, 2.565300000000048e-05, 2.565300000000048e-05, 2.5610999999998302e-05, 2.563900000000091e-05, 2.511100000000127e-05, 2.5084000000001605e-05, 2.5596999999998732e-05, 2.5583999999998636e-05, 2.50970000000017e-05, 2.511100000000127e-05, 2.5598000000001675e-05, 2.5569999999999066e-05, 2.5098000000001175e-05, 2.5584000000002105e-05, 2.5110999999997802e-05, 2.5110999999997802e-05, 2.55970000000022e-05, 2.562500000000134e-05, 2.5598000000001675e-05, 2.5084000000001605e-05, 2.561100000000177e-05, 2.5110999999997802e-05, 2.50970000000017e-05, 2.5097999999997705e-05, 2.5624999999997872e-05, 2.562500000000134e-05, 2.5582999999999162e-05, 2.508300000000213e-05, 2.5096999999998232e-05, 2.565300000000048e-05, 2.5068999999999092e-05, 2.5596999999998732e-05, 2.5555999999999496e-05, 2.55970000000022e-05, 2.512500000000084e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.565" endtime="20201112 09:43:48.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.561" endtime="20201112 09:43:48.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.570" endtime="20201112 09:43:48.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.574" endtime="20201112 09:43:48.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.572" endtime="20201112 09:43:48.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.569" endtime="20201112 09:43:48.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.204" endtime="20201112 09:43:48.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.203" endtime="20201112 09:43:48.594"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.603" endtime="20201112 09:43:48.620"></status>
</kw>
<msg timestamp="20201112 09:43:48.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.601" endtime="20201112 09:43:48.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.622" endtime="20201112 09:43:48.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.624" endtime="20201112 09:43:48.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.599" endtime="20201112 09:43:48.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.597" endtime="20201112 09:43:48.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.634" endtime="20201112 09:43:48.919"></status>
</kw>
<msg timestamp="20201112 09:43:48.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019813708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.633" endtime="20201112 09:43:48.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019813708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.923" endtime="20201112 09:43:48.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.932" endtime="20201112 09:43:48.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.630" endtime="20201112 09:43:48.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.629" endtime="20201112 09:43:48.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.938" level="INFO">${RESULT} = [{'time': 0.019840319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.019870167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:48.935" endtime="20201112 09:43:48.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.952" level="INFO">${ACCURACY} = {'source_diff': [2.6610999999999302e-05, 2.6598000000002675e-05, 2.6110999999998802e-05, 2.6082999999999662e-05, 2.6610999999999302e-05, 2.6082999999999662e-05, 2.6556000000000496e-05, 2.6111000000002...</msg>
<status status="PASS" starttime="20201112 09:43:48.939" endtime="20201112 09:43:48.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.957" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.956" endtime="20201112 09:43:48.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.960" level="INFO">VALUE: [2.6610999999999302e-05, 2.6598000000002675e-05, 2.6110999999998802e-05, 2.6082999999999662e-05, 2.6610999999999302e-05, 2.6082999999999662e-05, 2.6556000000000496e-05, 2.611100000000227e-05, 2.6610999999999302e-05, 2.6084000000002605e-05, 2.6151999999998038e-05, 2.6610999999999302e-05, 2.661100000000277e-05, 2.7097999999999706e-05, 2.6055999999999996e-05, 2.60970000000027e-05, 2.6610999999999302e-05, 2.6082999999999662e-05, 2.6097999999998706e-05, 2.6082999999999662e-05, 2.6069999999999566e-05, 2.6096999999999232e-05, 2.6096999999999232e-05, 2.7124999999999372e-05, 2.6596999999999732e-05, 2.6570000000000066e-05, 2.6097999999998706e-05, 2.6610999999999302e-05, 2.6596999999999732e-05, 2.6096999999999232e-05, 2.6610999999999302e-05, 2.6583000000000162e-05, 2.662500000000234e-05, 2.6597999999999206e-05, 2.6584000000003105e-05, 2.6610999999999302e-05, 2.6596999999999732e-05, 2.6096999999999232e-05, 2.6597999999999206e-05, 2.6082999999999662e-05, 2.6110999999998802e-05, 2.611100000000227e-05, 2.6596999999999732e-05, 2.6596999999999732e-05, 2.611100000000227e-05, 2.6096999999999232e-05, 2.6597999999999206e-05, 2.6096999999999232e-05, 2.611100000000227e-05, 2.7110999999999802e-05]</msg>
<status status="PASS" starttime="20201112 09:43:48.958" endtime="20201112 09:43:48.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.953" endtime="20201112 09:43:48.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.963" endtime="20201112 09:43:48.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.966" endtime="20201112 09:43:48.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.965" endtime="20201112 09:43:48.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.961" endtime="20201112 09:43:48.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.595" endtime="20201112 09:43:48.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.595" endtime="20201112 09:43:48.987"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.996" endtime="20201112 09:43:49.012"></status>
</kw>
<msg timestamp="20201112 09:43:49.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.994" endtime="20201112 09:43:49.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.014" endtime="20201112 09:43:49.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.016" endtime="20201112 09:43:49.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.992" endtime="20201112 09:43:49.019"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.990" endtime="20201112 09:43:49.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.026" endtime="20201112 09:43:49.311"></status>
</kw>
<msg timestamp="20201112 09:43:49.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019761139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.025" endtime="20201112 09:43:49.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019761139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.315" endtime="20201112 09:43:49.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.323" endtime="20201112 09:43:49.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.022" endtime="20201112 09:43:49.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.020" endtime="20201112 09:43:49.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.330" level="INFO">${RESULT} = [{'time': 0.019761139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7611000000000302e-05, 'source_diff': 2.7611000000000302e-05}, {'time': 0.019791375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:49.326" endtime="20201112 09:43:49.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.343" level="INFO">${ACCURACY} = {'source_diff': [2.7611000000000302e-05, 2.7652999999999012e-05, 2.7097999999999706e-05, 2.7097000000000232e-05, 2.7597000000000732e-05, 2.7611000000000302e-05, 2.7110999999999802e-05, 2.7097000000000...</msg>
<status status="PASS" starttime="20201112 09:43:49.331" endtime="20201112 09:43:49.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.347" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.346" endtime="20201112 09:43:49.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.350" level="INFO">VALUE: [2.7611000000000302e-05, 2.7652999999999012e-05, 2.7097999999999706e-05, 2.7097000000000232e-05, 2.7597000000000732e-05, 2.7611000000000302e-05, 2.7110999999999802e-05, 2.7097000000000232e-05, 2.7582999999997693e-05, 2.7624999999999872e-05, 2.7084000000000136e-05, 2.7166000000002077e-05, 2.7097000000000232e-05, 2.7083000000000662e-05, 2.7611000000000302e-05, 2.7612000000003245e-05, 2.7611000000000302e-05, 2.7097000000000232e-05, 2.7597000000000732e-05, 2.7097000000000232e-05, 2.7097000000000232e-05, 2.7111999999999276e-05, 2.7611000000000302e-05, 2.7652999999999012e-05, 2.8111000000000802e-05, 2.7097000000000232e-05, 2.7597000000000732e-05, 2.7597999999996736e-05, 2.7042000000001426e-05, 2.8098000000000706e-05, 2.7611000000000302e-05, 2.7597000000000732e-05, 2.7611000000000302e-05, 2.7652999999999012e-05, 2.7527999999998887e-05, 2.7110999999999802e-05, 2.7584000000000636e-05, 2.7110999999999802e-05, 2.8111000000000802e-05, 2.7097000000000232e-05, 2.7597000000000732e-05, 2.7584000000000636e-05, 2.7583000000001162e-05, 2.7124999999999372e-05, 2.7583000000001162e-05, 2.818100000000212e-05, 2.7610999999996833e-05, 2.7584000000000636e-05, 2.7111999999999276e-05, 2.7611999999999776e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.348" endtime="20201112 09:43:49.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.344" endtime="20201112 09:43:49.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.353" endtime="20201112 09:43:49.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.357" endtime="20201112 09:43:49.376"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.355" endtime="20201112 09:43:49.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.352" endtime="20201112 09:43:49.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.988" endtime="20201112 09:43:49.377"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.987" endtime="20201112 09:43:49.377"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.386" endtime="20201112 09:43:49.403"></status>
</kw>
<msg timestamp="20201112 09:43:49.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.385" endtime="20201112 09:43:49.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.404" endtime="20201112 09:43:49.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.407" endtime="20201112 09:43:49.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.382" endtime="20201112 09:43:49.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.380" endtime="20201112 09:43:49.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.417" endtime="20201112 09:43:49.703"></status>
</kw>
<msg timestamp="20201112 09:43:49.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02027175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:49.415" endtime="20201112 09:43:49.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02027175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:49.707" endtime="20201112 09:43:49.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.715" endtime="20201112 09:43:49.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.413" endtime="20201112 09:43:49.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.411" endtime="20201112 09:43:49.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.722" level="INFO">${RESULT} = [{'time': 0.020300375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8624999999997403e-05, 'source_diff': 2.8624999999997403e-05}, {'time': 0.020331528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:49.718" endtime="20201112 09:43:49.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.735" level="INFO">${ACCURACY} = {'source_diff': [2.8624999999997403e-05, 2.8611000000001302e-05, 2.8110999999997333e-05, 2.8582999999998693e-05, 2.8097000000001232e-05, 2.8598000000001206e-05, 2.9096999999998763e-05, 2.8598000000001...</msg>
<status status="PASS" starttime="20201112 09:43:49.723" endtime="20201112 09:43:49.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.740" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.739" endtime="20201112 09:43:49.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.742" level="INFO">VALUE: [2.8624999999997403e-05, 2.8611000000001302e-05, 2.8110999999997333e-05, 2.8582999999998693e-05, 2.8097000000001232e-05, 2.8598000000001206e-05, 2.9096999999998763e-05, 2.8598000000001206e-05, 2.8125000000000372e-05, 2.8597000000001732e-05, 2.8097000000001232e-05, 2.8597000000001732e-05, 2.8582999999998693e-05, 2.9110999999998333e-05, 2.8097000000001232e-05, 2.8597000000001732e-05, 2.8596999999998263e-05, 2.8111000000000802e-05, 2.8112000000000276e-05, 2.9068999999999623e-05, 2.8125000000000372e-05, 2.8165999999999608e-05, 2.8097000000001232e-05, 2.8111000000000802e-05, 2.8111000000000802e-05, 2.8598000000001206e-05, 2.8110999999997333e-05, 2.8096999999997763e-05, 2.8611000000001302e-05, 2.8611000000001302e-05, 2.8597999999997736e-05, 2.8610999999997833e-05, 2.8097000000001232e-05, 2.8069999999998096e-05, 2.8611000000001302e-05, 2.8639000000000442e-05, 2.8083000000001662e-05, 2.8124999999996902e-05, 2.9111999999997806e-05, 2.8625000000000872e-05, 2.8110999999997333e-05, 2.8026999999999913e-05, 2.8582999999998693e-05, 2.8083000000001662e-05, 2.8598000000001206e-05, 2.9097999999998236e-05, 2.818100000000212e-05, 2.8596999999998263e-05, 2.8096999999997763e-05, 2.8097000000001232e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.741" endtime="20201112 09:43:49.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.736" endtime="20201112 09:43:49.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.746" endtime="20201112 09:43:49.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.749" endtime="20201112 09:43:49.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.748" endtime="20201112 09:43:49.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.744" endtime="20201112 09:43:49.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.378" endtime="20201112 09:43:49.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.378" endtime="20201112 09:43:49.770"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.778" endtime="20201112 09:43:49.794"></status>
</kw>
<msg timestamp="20201112 09:43:49.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.777" endtime="20201112 09:43:49.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.796" endtime="20201112 09:43:49.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.798" endtime="20201112 09:43:49.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.774" endtime="20201112 09:43:49.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.772" endtime="20201112 09:43:49.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.808" endtime="20201112 09:43:50.093"></status>
</kw>
<msg timestamp="20201112 09:43:50.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.807" endtime="20201112 09:43:50.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019831264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.097" endtime="20201112 09:43:50.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.105" endtime="20201112 09:43:50.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.804" endtime="20201112 09:43:50.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.803" endtime="20201112 09:43:50.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.112" level="INFO">${RESULT} = [{'time': 0.019860375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9110999999998333e-05, 'source_diff': 2.9110999999998333e-05}, {'time': 0.019895472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:50.109" endtime="20201112 09:43:50.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.125" level="INFO">${ACCURACY} = {'source_diff': [2.9110999999998333e-05, 2.9068999999999623e-05, 2.9610999999998833e-05, 2.9096999999998763e-05, 2.9110999999998333e-05, 2.9610999999998833e-05, 2.9583999999999167e-05, 2.9597000000002...</msg>
<status status="PASS" starttime="20201112 09:43:50.113" endtime="20201112 09:43:50.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.130" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.129" endtime="20201112 09:43:50.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.132" level="INFO">VALUE: [2.9110999999998333e-05, 2.9068999999999623e-05, 2.9610999999998833e-05, 2.9096999999998763e-05, 2.9110999999998333e-05, 2.9610999999998833e-05, 2.9583999999999167e-05, 2.9597000000002732e-05, 2.9624999999998403e-05, 2.9596999999999263e-05, 3.0110999999999333e-05, 2.9596999999999263e-05, 2.9041999999999957e-05, 2.9111999999997806e-05, 2.9098000000001706e-05, 2.9582999999999693e-05, 3.0138999999998473e-05, 2.9596999999999263e-05, 2.9097000000002232e-05, 3.0110999999999333e-05, 2.9124999999997903e-05, 2.9611999999998306e-05, 2.9681000000000152e-05, 2.9097000000002232e-05, 2.9096999999998763e-05, 2.9582999999999693e-05, 2.9180000000000178e-05, 2.9098000000001706e-05, 3.0055000000001053e-05, 2.9083999999998666e-05, 2.9138999999997472e-05, 2.9611000000002302e-05, 2.9582999999999693e-05, 2.9596999999999263e-05, 3.0055000000001053e-05, 2.9138000000001468e-05, 2.9596999999999263e-05, 2.9582999999999693e-05, 2.9083000000002662e-05, 2.9610999999998833e-05, 2.9612000000001776e-05, 2.9110999999998333e-05, 2.9611000000002302e-05, 2.9596999999999263e-05, 2.9639000000001442e-05, 2.9110999999998333e-05, 2.9111000000001802e-05, 2.9096999999998763e-05, 2.9624999999998403e-05, 2.9111000000001802e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.131" endtime="20201112 09:43:50.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.126" endtime="20201112 09:43:50.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.136" endtime="20201112 09:43:50.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.139" endtime="20201112 09:43:50.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.138" endtime="20201112 09:43:50.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.134" endtime="20201112 09:43:50.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.771" endtime="20201112 09:43:50.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.770" endtime="20201112 09:43:50.160"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.169" endtime="20201112 09:43:50.186"></status>
</kw>
<msg timestamp="20201112 09:43:50.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.167" endtime="20201112 09:43:50.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.187" endtime="20201112 09:43:50.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.190" endtime="20201112 09:43:50.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.165" endtime="20201112 09:43:50.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.163" endtime="20201112 09:43:50.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.200" endtime="20201112 09:43:50.485"></status>
</kw>
<msg timestamp="20201112 09:43:50.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.198" endtime="20201112 09:43:50.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019667639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.490" endtime="20201112 09:43:50.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.498" endtime="20201112 09:43:50.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.196" endtime="20201112 09:43:50.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.194" endtime="20201112 09:43:50.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.504" level="INFO">${RESULT} = [{'time': 0.019667639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0110999999999333e-05, 'source_diff': 3.0110999999999333e-05}, {'time': 0.019703556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:50.501" endtime="20201112 09:43:50.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.519" level="INFO">${ACCURACY} = {'source_diff': [3.0110999999999333e-05, 3.0167000000001082e-05, 3.059700000000026e-05, 3.0083999999999667e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.05700000000006e-05, 3.0083000000000193e-...</msg>
<status status="PASS" starttime="20201112 09:43:50.505" endtime="20201112 09:43:50.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.523" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.522" endtime="20201112 09:43:50.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.525" level="INFO">VALUE: [3.0110999999999333e-05, 3.0167000000001082e-05, 3.059700000000026e-05, 3.0083999999999667e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.05700000000006e-05, 3.0083000000000193e-05, 3.068000000000168e-05, 3.0097999999999236e-05, 3.056900000000112e-05, 3.059700000000026e-05, 3.056900000000112e-05, 3.0096999999999763e-05, 3.104199999999849e-05, 3.0110999999999333e-05, 3.1068999999998154e-05, 3.0584000000000167e-05, 3.059700000000026e-05, 3.061099999999983e-05, 3.058300000000069e-05, 3.0110999999999333e-05, 3.0096999999999763e-05, 3.0083000000000193e-05, 3.0110999999999333e-05, 3.0096999999999763e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.0097999999999236e-05, 3.061099999999983e-05, 3.0124999999998903e-05, 3.059700000000026e-05, 3.0083000000000193e-05, 3.0055000000001053e-05, 3.059700000000026e-05, 3.06110000000033e-05, 3.061099999999983e-05, 3.0096999999999763e-05, 3.058300000000069e-05, 3.0611999999999306e-05, 3.0096999999999763e-05, 3.059700000000026e-05, 3.0096999999999763e-05, 3.0096999999999763e-05, 3.061099999999983e-05, 3.059700000000026e-05, 3.061099999999983e-05, 3.0110999999999333e-05, 3.0083999999999667e-05, 3.0083000000000193e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.524" endtime="20201112 09:43:50.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.519" endtime="20201112 09:43:50.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.529" endtime="20201112 09:43:50.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.532" endtime="20201112 09:43:50.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.531" endtime="20201112 09:43:50.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.527" endtime="20201112 09:43:50.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.161" endtime="20201112 09:43:50.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.160" endtime="20201112 09:43:50.553"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.562" endtime="20201112 09:43:50.580"></status>
</kw>
<msg timestamp="20201112 09:43:50.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.560" endtime="20201112 09:43:50.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.581" endtime="20201112 09:43:50.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.584" endtime="20201112 09:43:50.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.558" endtime="20201112 09:43:50.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.556" endtime="20201112 09:43:50.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.594" endtime="20201112 09:43:50.879"></status>
</kw>
<msg timestamp="20201112 09:43:50.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.592" endtime="20201112 09:43:50.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.883" endtime="20201112 09:43:50.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.891" endtime="20201112 09:43:50.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.590" endtime="20201112 09:43:50.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.588" endtime="20201112 09:43:50.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.898" level="INFO">${RESULT} = [{'time': 0.019765319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111100000000033e-05, 'source_diff': 3.111100000000033e-05}, {'time': 0.019801181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.895" endtime="20201112 09:43:50.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.911" level="INFO">${ACCURACY} = {'source_diff': [3.111100000000033e-05, 3.105600000000153e-05, 3.159700000000126e-05, 3.1096999999997293e-05, 3.1596999999997794e-05, 3.159700000000126e-05, 3.162499999999693e-05, 3.21250000000009e-05...</msg>
<status status="PASS" starttime="20201112 09:43:50.899" endtime="20201112 09:43:50.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.916" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.915" endtime="20201112 09:43:50.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.918" level="INFO">VALUE: [3.111100000000033e-05, 3.105600000000153e-05, 3.159700000000126e-05, 3.1096999999997293e-05, 3.1596999999997794e-05, 3.159700000000126e-05, 3.162499999999693e-05, 3.21250000000009e-05, 3.11249999999999e-05, 3.111099999999686e-05, 3.1610999999997363e-05, 3.101399999999935e-05, 3.169499999999825e-05, 3.111100000000033e-05, 3.113899999999947e-05, 3.108300000000119e-05, 3.208400000000167e-05, 3.1596999999997794e-05, 3.206900000000262e-05, 3.1096999999997293e-05, 3.1596999999997794e-05, 3.108400000000067e-05, 3.11249999999999e-05, 3.163899999999997e-05, 3.10839999999972e-05, 3.161100000000083e-05, 3.111100000000033e-05, 3.111100000000033e-05, 3.111100000000033e-05, 3.1612000000000307e-05, 3.1082999999997724e-05, 3.111100000000033e-05, 3.106900000000162e-05, 3.109700000000076e-05, 3.158300000000169e-05, 3.1098000000000237e-05, 3.1098000000000237e-05, 3.109700000000076e-05, 3.102799999999892e-05, 3.165299999999954e-05, 3.21250000000009e-05, 3.111100000000033e-05, 3.1568999999998654e-05, 3.16250000000004e-05, 3.1582999999998224e-05, 3.11249999999999e-05, 3.111100000000033e-05, 3.11249999999999e-05, 3.1598000000000737e-05, 3.1111999999999806e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.917" endtime="20201112 09:43:50.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.912" endtime="20201112 09:43:50.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.922" endtime="20201112 09:43:50.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.925" endtime="20201112 09:43:50.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.924" endtime="20201112 09:43:50.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.920" endtime="20201112 09:43:50.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.554" endtime="20201112 09:43:50.946"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.554" endtime="20201112 09:43:50.946"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.954" endtime="20201112 09:43:50.971"></status>
</kw>
<msg timestamp="20201112 09:43:50.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.953" endtime="20201112 09:43:50.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.973" endtime="20201112 09:43:50.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.975" endtime="20201112 09:43:50.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.950" endtime="20201112 09:43:50.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.948" endtime="20201112 09:43:50.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.985" endtime="20201112 09:43:51.270"></status>
</kw>
<msg timestamp="20201112 09:43:51.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019706444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.984" endtime="20201112 09:43:51.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019706444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.274" endtime="20201112 09:43:51.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.283" endtime="20201112 09:43:51.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.981" endtime="20201112 09:43:51.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.980" endtime="20201112 09:43:51.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.289" level="INFO">${RESULT} = [{'time': 0.019706444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.26250000000014e-05, 'source_diff': 3.26250000000014e-05}, {'time': 0.019743889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:51.286" endtime="20201112 09:43:51.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.303" level="INFO">${ACCURACY} = {'source_diff': [3.26250000000014e-05, 3.313900000000147e-05, 3.2541000000000514e-05, 3.261100000000183e-05, 3.2096999999998294e-05, 3.259700000000226e-05, 3.2610999999998364e-05, 3.2596999999998794e-...</msg>
<status status="PASS" starttime="20201112 09:43:51.290" endtime="20201112 09:43:51.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.307" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.306" endtime="20201112 09:43:51.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.310" level="INFO">VALUE: [3.26250000000014e-05, 3.313900000000147e-05, 3.2541000000000514e-05, 3.261100000000183e-05, 3.2096999999998294e-05, 3.259700000000226e-05, 3.2610999999998364e-05, 3.2596999999998794e-05, 3.211100000000133e-05, 3.2610999999998364e-05, 3.2068999999999154e-05, 3.2596999999998794e-05, 3.211100000000133e-05, 3.25839999999987e-05, 3.209799999999777e-05, 3.209800000000124e-05, 3.209700000000176e-05, 3.26250000000014e-05, 3.2610999999998364e-05, 3.2568999999999654e-05, 3.2096999999998294e-05, 3.215300000000004e-05, 3.259700000000226e-05, 3.2596999999998794e-05, 3.261100000000183e-05, 3.26250000000014e-05, 3.2610999999998364e-05, 3.2582999999999224e-05, 3.261100000000183e-05, 3.3096999999999294e-05, 3.213900000000047e-05, 3.2596999999998794e-05, 3.2054999999999584e-05, 3.2610999999998364e-05, 3.204199999999949e-05, 3.2096999999998294e-05, 3.2096999999998294e-05, 3.259700000000226e-05, 3.261100000000183e-05, 3.265300000000054e-05, 3.209799999999777e-05, 3.2096999999998294e-05, 3.2612000000001307e-05, 3.2596999999998794e-05, 3.2610999999998364e-05, 3.26389999999975e-05, 3.3082999999999724e-05, 3.26250000000014e-05, 3.259700000000226e-05, 3.259799999999827e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.308" endtime="20201112 09:43:51.310"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.303" endtime="20201112 09:43:51.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.313" endtime="20201112 09:43:51.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.316" endtime="20201112 09:43:51.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.315" endtime="20201112 09:43:51.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.311" endtime="20201112 09:43:51.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.947" endtime="20201112 09:43:51.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.946" endtime="20201112 09:43:51.337"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.346" endtime="20201112 09:43:51.363"></status>
</kw>
<msg timestamp="20201112 09:43:51.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.344" endtime="20201112 09:43:51.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.364" endtime="20201112 09:43:51.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.367" endtime="20201112 09:43:51.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.342" endtime="20201112 09:43:51.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.340" endtime="20201112 09:43:51.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.377" endtime="20201112 09:43:51.662"></status>
</kw>
<msg timestamp="20201112 09:43:51.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.375" endtime="20201112 09:43:51.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.666" endtime="20201112 09:43:51.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.675" endtime="20201112 09:43:51.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.373" endtime="20201112 09:43:51.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.371" endtime="20201112 09:43:51.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.681" level="INFO">${RESULT} = [{'time': 0.019724069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3624999999998934e-05, 'source_diff': 3.3624999999998934e-05}, {'time': 0.019760458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:51.678" endtime="20201112 09:43:51.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.694" level="INFO">${ACCURACY} = {'source_diff': [3.3624999999998934e-05, 3.365200000000207e-05, 3.311100000000233e-05, 3.3596999999999794e-05, 3.3096999999999294e-05, 3.3110999999998864e-05, 3.3583000000000224e-05, 3.36250000000024e...</msg>
<status status="PASS" starttime="20201112 09:43:51.682" endtime="20201112 09:43:51.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.699" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.698" endtime="20201112 09:43:51.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.701" level="INFO">VALUE: [3.3624999999998934e-05, 3.365200000000207e-05, 3.311100000000233e-05, 3.3596999999999794e-05, 3.3096999999999294e-05, 3.3110999999998864e-05, 3.3583000000000224e-05, 3.36250000000024e-05, 3.413799999999953e-05, 3.305600000000006e-05, 3.3610999999999364e-05, 3.309700000000276e-05, 3.4110999999999864e-05, 3.359799999999927e-05, 3.3110999999998864e-05, 3.3596999999999794e-05, 3.3096999999999294e-05, 3.3596999999999794e-05, 3.36519999999986e-05, 3.40840000000002e-05, 3.3596999999999794e-05, 3.30839999999992e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.3110999999998864e-05, 3.3596999999999794e-05, 3.355600000000056e-05, 3.3124999999998433e-05, 3.3610999999999364e-05, 3.315300000000104e-05, 3.31250000000019e-05, 3.3110999999998864e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.361200000000231e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.309700000000276e-05, 3.366600000000164e-05, 3.311100000000233e-05, 3.309800000000224e-05, 3.316700000000061e-05, 3.3596999999999794e-05, 3.309700000000276e-05, 3.3110999999998864e-05, 3.311100000000233e-05, 3.3610999999999364e-05, 3.361199999999884e-05, 3.3583000000000224e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.700" endtime="20201112 09:43:51.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.695" endtime="20201112 09:43:51.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.705" endtime="20201112 09:43:51.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.708" endtime="20201112 09:43:51.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.707" endtime="20201112 09:43:51.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.703" endtime="20201112 09:43:51.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.338" endtime="20201112 09:43:51.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.337" endtime="20201112 09:43:51.729"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.738" endtime="20201112 09:43:51.756"></status>
</kw>
<msg timestamp="20201112 09:43:51.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.736" endtime="20201112 09:43:51.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.757" endtime="20201112 09:43:51.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.760" endtime="20201112 09:43:51.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.734" endtime="20201112 09:43:51.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.732" endtime="20201112 09:43:51.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.770" endtime="20201112 09:43:52.055"></status>
</kw>
<msg timestamp="20201112 09:43:52.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.768" endtime="20201112 09:43:52.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019784639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.059" endtime="20201112 09:43:52.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.067" endtime="20201112 09:43:52.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.765" endtime="20201112 09:43:52.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.764" endtime="20201112 09:43:52.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.074" level="INFO">${RESULT} = [{'time': 0.019834528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.988900000000088e-05, 'source_diff': 4.988900000000088e-05}, {'time': 0.019889514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.071" endtime="20201112 09:43:52.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.088" level="INFO">${ACCURACY} = {'source_diff': [4.988900000000088e-05, 5.005599999999971e-05, 5.024999999999821e-05, 5.004200000000014e-05, 5.044499999999966e-05, 5.029100000000092e-05, 5.013900000000113e-05, 4.980599999999946e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:52.075" endtime="20201112 09:43:52.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.093" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.092" endtime="20201112 09:43:52.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.095" level="INFO">VALUE: [4.988900000000088e-05, 5.005599999999971e-05, 5.024999999999821e-05, 5.004200000000014e-05, 5.044499999999966e-05, 5.029100000000092e-05, 5.013900000000113e-05, 4.980599999999946e-05, 5.029200000000039e-05, 5.0237000000001586e-05, 5.179200000000189e-05, 5.013900000000113e-05, 5.177799999999885e-05, 5.019499999999941e-05, 5.008299999999938e-05, 4.987499999999784e-05, 5.180499999999852e-05, 4.986100000000174e-05, 5.073599999999914e-05, 5.013900000000113e-05, 5.018000000000036e-05, 5.011100000000199e-05, 4.988899999999741e-05, 5.069499999999991e-05, 5.176399999999928e-05, 5.018099999999984e-05, 5.045799999999975e-05, 5.018099999999984e-05, 5.063900000000163e-05, 4.991700000000002e-05, 5.037499999999834e-05, 5.01669999999968e-05, 5.023599999999864e-05, 5.019399999999993e-05, 5.020899999999898e-05, 5.048599999999889e-05, 5.174999999999971e-05, 5.068000000000086e-05, 5.027700000000135e-05, 5.048599999999889e-05, 5.025000000000168e-05, 5.013900000000113e-05, 5.066600000000129e-05, 5.025000000000168e-05, 5.048600000000236e-05, 5.023599999999864e-05, 5.054200000000064e-05, 5.037500000000181e-05, 5.019399999999993e-05, 5.05279999999976e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.094" endtime="20201112 09:43:52.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.089" endtime="20201112 09:43:52.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.103" endtime="20201112 09:43:52.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.106" endtime="20201112 09:43:52.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.105" endtime="20201112 09:43:52.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.101" endtime="20201112 09:43:52.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.730" endtime="20201112 09:43:52.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.730" endtime="20201112 09:43:52.127"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.135" endtime="20201112 09:43:52.153"></status>
</kw>
<msg timestamp="20201112 09:43:52.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.134" endtime="20201112 09:43:52.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.155" endtime="20201112 09:43:52.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.157" endtime="20201112 09:43:52.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.131" endtime="20201112 09:43:52.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.129" endtime="20201112 09:43:52.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.167" endtime="20201112 09:43:52.453"></status>
</kw>
<msg timestamp="20201112 09:43:52.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:52.166" endtime="20201112 09:43:52.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732306, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:52.457" endtime="20201112 09:43:52.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.466" endtime="20201112 09:43:52.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.163" endtime="20201112 09:43:52.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.161" endtime="20201112 09:43:52.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.472" level="INFO">${RESULT} = [{'time': 0.019732306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.130600000000096e-05, 'source_diff': 5.130600000000096e-05}, {'time': 0.019788319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.469" endtime="20201112 09:43:52.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.485" level="INFO">${ACCURACY} = {'source_diff': [5.130600000000096e-05, 5.130499999999802e-05, 5.1416000000002043e-05, 5.148599999999989e-05, 5.1429999999998144e-05, 5.137499999999934e-05, 5.0929999999997644e-05, 5.281899999999909e-...</msg>
<status status="PASS" starttime="20201112 09:43:52.473" endtime="20201112 09:43:52.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.490" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.489" endtime="20201112 09:43:52.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.492" level="INFO">VALUE: [5.130600000000096e-05, 5.130499999999802e-05, 5.1416000000002043e-05, 5.148599999999989e-05, 5.1429999999998144e-05, 5.137499999999934e-05, 5.0929999999997644e-05, 5.281899999999909e-05, 5.130499999999802e-05, 5.159700000000045e-05, 5.115299999999823e-05, 5.087500000000231e-05, 5.165299999999873e-05, 5.163899999999916e-05, 5.105600000000071e-05, 5.148599999999989e-05, 5.143100000000109e-05, 5.11530000000017e-05, 5.102800000000157e-05, 5.118100000000084e-05, 5.155599999999774e-05, 5.163899999999916e-05, 5.154199999999817e-05, 5.098599999999939e-05, 5.14729999999998e-05, 5.112499999999909e-05, 5.105599999999724e-05, 5.169400000000143e-05, 5.15279999999986e-05, 5.113899999999866e-05, 5.152699999999913e-05, 5.137499999999934e-05, 5.118000000000136e-05, 5.137499999999934e-05, 5.1165999999998324e-05, 5.2749999999997244e-05, 5.1429999999998144e-05, 5.127799999999835e-05, 5.137500000000281e-05, 5.126399999999878e-05, 5.079200000000089e-05, 5.087499999999884e-05, 5.132000000000053e-05, 5.138900000000238e-05, 5.13470000000002e-05, 5.168100000000134e-05, 5.172200000000057e-05, 5.094500000000016e-05, 5.118099999999737e-05, 5.279199999999942e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.491" endtime="20201112 09:43:52.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.486" endtime="20201112 09:43:52.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.496" endtime="20201112 09:43:52.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.500" endtime="20201112 09:43:52.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.498" endtime="20201112 09:43:52.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.494" endtime="20201112 09:43:52.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.128" endtime="20201112 09:43:52.520"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.127" endtime="20201112 09:43:52.520"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.529" endtime="20201112 09:43:52.547"></status>
</kw>
<msg timestamp="20201112 09:43:52.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.527" endtime="20201112 09:43:52.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.549" endtime="20201112 09:43:52.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.551" endtime="20201112 09:43:52.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.525" endtime="20201112 09:43:52.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.523" endtime="20201112 09:43:52.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.561" endtime="20201112 09:43:52.846"></status>
</kw>
<msg timestamp="20201112 09:43:52.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.560" endtime="20201112 09:43:52.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.850" endtime="20201112 09:43:52.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.858" endtime="20201112 09:43:52.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.557" endtime="20201112 09:43:52.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.555" endtime="20201112 09:43:52.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.865" level="INFO">${RESULT} = [{'time': 0.019742292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.263900000000016e-05, 'source_diff': 5.263900000000016e-05}, {'time': 0.019798306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.862" endtime="20201112 09:43:52.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.878" level="INFO">${ACCURACY} = {'source_diff': [5.263900000000016e-05, 5.262500000000059e-05, 5.248700000000037e-05, 5.2680000000002863e-05, 5.375000000000171e-05, 5.204200000000214e-05, 5.248600000000089e-05, 5.2679999999999394e-0...</msg>
<status status="PASS" starttime="20201112 09:43:52.866" endtime="20201112 09:43:52.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.883" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.882" endtime="20201112 09:43:52.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.885" level="INFO">VALUE: [5.263900000000016e-05, 5.262500000000059e-05, 5.248700000000037e-05, 5.2680000000002863e-05, 5.375000000000171e-05, 5.204200000000214e-05, 5.248600000000089e-05, 5.2679999999999394e-05, 5.2179999999998894e-05, 5.198600000000039e-05, 5.2166000000002793e-05, 5.2679999999999394e-05, 5.236100000000077e-05, 5.223600000000064e-05, 5.191699999999855e-05, 5.232000000000153e-05, 5.268099999999887e-05, 5.375000000000171e-05, 5.229200000000239e-05, 5.216700000000227e-05, 5.262500000000059e-05, 5.270900000000148e-05, 5.275000000000071e-05, 5.2235999999997174e-05, 5.257000000000178e-05, 5.207000000000128e-05, 5.229199999999892e-05, 5.2679999999999394e-05, 5.3749999999998244e-05, 5.2679999999999394e-05, 5.2693999999998964e-05, 5.194400000000168e-05, 5.211100000000052e-05, 5.1985999999996924e-05, 5.2735999999997674e-05, 5.208300000000138e-05, 5.381900000000009e-05, 5.272200000000157e-05, 5.191699999999855e-05, 5.2443999999998714e-05, 5.204199999999867e-05, 5.248600000000089e-05, 5.381999999999956e-05, 5.199999999999996e-05, 5.187499999999984e-05, 5.236100000000077e-05, 5.241699999999905e-05, 5.225000000000021e-05, 5.223700000000012e-05, 5.212500000000009e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.884" endtime="20201112 09:43:52.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.879" endtime="20201112 09:43:52.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.889" endtime="20201112 09:43:52.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.892" endtime="20201112 09:43:52.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.891" endtime="20201112 09:43:52.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.887" endtime="20201112 09:43:52.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.521" endtime="20201112 09:43:52.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.521" endtime="20201112 09:43:52.913"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.921" endtime="20201112 09:43:52.940"></status>
</kw>
<msg timestamp="20201112 09:43:52.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.920" endtime="20201112 09:43:52.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.942" endtime="20201112 09:43:52.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.944" endtime="20201112 09:43:52.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.917" endtime="20201112 09:43:52.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.915" endtime="20201112 09:43:52.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.954" endtime="20201112 09:43:53.239"></status>
</kw>
<msg timestamp="20201112 09:43:53.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.952" endtime="20201112 09:43:53.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.243" endtime="20201112 09:43:53.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.252" endtime="20201112 09:43:53.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.950" endtime="20201112 09:43:53.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.948" endtime="20201112 09:43:53.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.258" level="INFO">${RESULT} = [{'time': 0.019745181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305599999999924e-05, 'source_diff': 5.305599999999924e-05}, {'time': 0.019800167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.255" endtime="20201112 09:43:53.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.272" level="INFO">${ACCURACY} = {'source_diff': [5.305599999999924e-05, 5.284800000000117e-05, 5.3193999999999464e-05, 5.2971999999998354e-05, 5.337499999999787e-05, 5.362499999999812e-05, 5.331899999999959e-05, 5.294400000000268e-0...</msg>
<status status="PASS" starttime="20201112 09:43:53.259" endtime="20201112 09:43:53.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.276" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.275" endtime="20201112 09:43:53.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.279" level="INFO">VALUE: [5.305599999999924e-05, 5.284800000000117e-05, 5.3193999999999464e-05, 5.2971999999998354e-05, 5.337499999999787e-05, 5.362499999999812e-05, 5.331899999999959e-05, 5.294400000000268e-05, 5.3735999999998674e-05, 5.300000000000096e-05, 5.362499999999812e-05, 5.3235999999998174e-05, 5.479200000000142e-05, 5.315300000000023e-05, 5.315300000000023e-05, 5.344499999999919e-05, 5.482000000000056e-05, 5.286100000000127e-05, 5.483400000000013e-05, 5.323600000000164e-05, 5.305599999999924e-05, 5.297200000000182e-05, 5.293099999999912e-05, 5.4763999999998814e-05, 5.3707999999999534e-05, 5.3249999999997744e-05, 5.355500000000027e-05, 5.325000000000121e-05, 5.28470000000017e-05, 5.3193999999999464e-05, 5.3735999999998674e-05, 5.312500000000109e-05, 5.283300000000213e-05, 5.481899999999762e-05, 5.366699999999683e-05, 5.479099999999848e-05, 5.3457999999999284e-05, 5.2929999999999644e-05, 5.4735999999999674e-05, 5.477800000000185e-05, 5.3499999999997994e-05, 5.2999999999997494e-05, 5.4749999999999244e-05, 5.295899999999826e-05, 5.3707999999999534e-05, 5.318099999999937e-05, 5.313899999999719e-05, 5.350000000000146e-05, 5.305599999999924e-05, 5.286100000000127e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.277" endtime="20201112 09:43:53.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.272" endtime="20201112 09:43:53.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.282" endtime="20201112 09:43:53.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.286" endtime="20201112 09:43:53.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.284" endtime="20201112 09:43:53.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.280" endtime="20201112 09:43:53.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.914" endtime="20201112 09:43:53.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.913" endtime="20201112 09:43:53.306"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.315" endtime="20201112 09:43:53.333"></status>
</kw>
<msg timestamp="20201112 09:43:53.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.313" endtime="20201112 09:43:53.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.334" endtime="20201112 09:43:53.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.337" endtime="20201112 09:43:53.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.311" endtime="20201112 09:43:53.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.309" endtime="20201112 09:43:53.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.347" endtime="20201112 09:43:53.632"></status>
</kw>
<msg timestamp="20201112 09:43:53.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.345" endtime="20201112 09:43:53.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019742514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.636" endtime="20201112 09:43:53.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.645" endtime="20201112 09:43:53.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.343" endtime="20201112 09:43:53.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.341" endtime="20201112 09:43:53.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.651" level="INFO">${RESULT} = [{'time': 0.019742514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.459699999999998e-05, 'source_diff': 5.459699999999998e-05}, {'time': 0.019799514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:53.648" endtime="20201112 09:43:53.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.665" level="INFO">${ACCURACY} = {'source_diff': [5.459699999999998e-05, 5.398600000000239e-05, 5.393100000000012e-05, 5.423600000000264e-05, 5.418100000000037e-05, 5.437499999999887e-05, 5.473699999999915e-05, 5.580500000000252e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:53.652" endtime="20201112 09:43:53.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.670" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.669" endtime="20201112 09:43:53.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.672" level="INFO">VALUE: [5.459699999999998e-05, 5.398600000000239e-05, 5.393100000000012e-05, 5.423600000000264e-05, 5.418100000000037e-05, 5.437499999999887e-05, 5.473699999999915e-05, 5.580500000000252e-05, 5.452699999999866e-05, 5.476400000000228e-05, 5.411100000000252e-05, 5.580499999999905e-05, 5.405500000000077e-05, 5.3971999999999354e-05, 5.406900000000034e-05, 5.404099999999773e-05, 5.3957999999999784e-05, 5.433300000000016e-05, 5.4180000000000894e-05, 5.5791999999998954e-05, 5.5736000000000674e-05, 5.430599999999702e-05, 5.430600000000049e-05, 5.393100000000012e-05, 5.461099999999955e-05, 5.4485999999999424e-05, 5.405600000000024e-05, 5.43479999999992e-05, 5.400000000000196e-05, 5.405500000000077e-05, 5.454200000000117e-05, 5.448700000000237e-05, 5.5763999999999814e-05, 5.384800000000217e-05, 5.4680000000001394e-05, 5.580499999999905e-05, 5.463899999999869e-05, 5.405500000000077e-05, 5.4499999999998994e-05, 5.5763999999999814e-05, 5.43609999999993e-05, 5.400000000000196e-05, 5.576400000000328e-05, 5.38470000000027e-05, 5.583400000000113e-05, 5.426400000000178e-05, 5.411099999999905e-05, 5.4735999999999674e-05, 5.5763999999999814e-05, 5.455600000000074e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.671" endtime="20201112 09:43:53.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.666" endtime="20201112 09:43:53.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.676" endtime="20201112 09:43:53.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.679" endtime="20201112 09:43:53.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.678" endtime="20201112 09:43:53.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.674" endtime="20201112 09:43:53.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.307" endtime="20201112 09:43:53.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.307" endtime="20201112 09:43:53.700"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.709" endtime="20201112 09:43:53.727"></status>
</kw>
<msg timestamp="20201112 09:43:53.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.707" endtime="20201112 09:43:53.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.728" endtime="20201112 09:43:53.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.731" endtime="20201112 09:43:53.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.704" endtime="20201112 09:43:53.734"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.702" endtime="20201112 09:43:53.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.741" endtime="20201112 09:43:54.025"></status>
</kw>
<msg timestamp="20201112 09:43:54.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.739" endtime="20201112 09:43:54.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019713653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.029" endtime="20201112 09:43:54.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.038" endtime="20201112 09:43:54.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.737" endtime="20201112 09:43:54.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.735" endtime="20201112 09:43:54.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.044" level="INFO">${RESULT} = [{'time': 0.019713653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.518100000000137e-05, 'source_diff': 5.518100000000137e-05}, {'time': 0.019771694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.041" endtime="20201112 09:43:54.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.058" level="INFO">${ACCURACY} = {'source_diff': [5.518100000000137e-05, 5.534700000000073e-05, 5.6791999999999954e-05, 5.544500000000119e-05, 5.4999999999999494e-05, 5.537499999999987e-05, 5.493100000000112e-05, 5.506900000000134e-0...</msg>
<status status="PASS" starttime="20201112 09:43:54.045" endtime="20201112 09:43:54.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.062" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.061" endtime="20201112 09:43:54.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.064" level="INFO">VALUE: [5.518100000000137e-05, 5.534700000000073e-05, 5.6791999999999954e-05, 5.544500000000119e-05, 5.4999999999999494e-05, 5.537499999999987e-05, 5.493100000000112e-05, 5.506900000000134e-05, 5.540300000000248e-05, 5.5027999999998634e-05, 5.561100000000055e-05, 5.487499999999937e-05, 5.6805999999999524e-05, 5.5693999999998495e-05, 5.5249999999999744e-05, 5.555600000000174e-05, 5.540300000000248e-05, 5.4985999999999924e-05, 5.495900000000026e-05, 5.526400000000278e-05, 5.518100000000137e-05, 5.6791999999999954e-05, 5.532000000000106e-05, 5.484700000000023e-05, 5.684700000000223e-05, 5.5208000000001034e-05, 5.537499999999987e-05, 5.5499999999999994e-05, 5.512499999999962e-05, 5.5651999999999785e-05, 5.5722000000001104e-05, 5.5429999999998675e-05, 5.6721999999998635e-05, 5.4916000000002074e-05, 5.6736000000001674e-05, 5.540299999999901e-05, 5.4930000000001644e-05, 5.5263999999999314e-05, 5.5513999999999564e-05, 5.568100000000187e-05, 5.5555999999998273e-05, 5.4999999999999494e-05, 5.5722000000001104e-05, 5.5555999999998273e-05, 5.561100000000055e-05, 5.5249999999999744e-05, 5.54869999999999e-05, 5.493099999999765e-05, 5.5541999999998704e-05, 5.5235999999996704e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.063" endtime="20201112 09:43:54.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.058" endtime="20201112 09:43:54.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.068" endtime="20201112 09:43:54.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.071" endtime="20201112 09:43:54.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.070" endtime="20201112 09:43:54.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.066" endtime="20201112 09:43:54.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.701" endtime="20201112 09:43:54.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.700" endtime="20201112 09:43:54.092"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.101" endtime="20201112 09:43:54.120"></status>
</kw>
<msg timestamp="20201112 09:43:54.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.099" endtime="20201112 09:43:54.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.121" endtime="20201112 09:43:54.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.124" endtime="20201112 09:43:54.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.097" endtime="20201112 09:43:54.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.095" endtime="20201112 09:43:54.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.133" endtime="20201112 09:43:54.418"></status>
</kw>
<msg timestamp="20201112 09:43:54.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019750694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.132" endtime="20201112 09:43:54.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019750694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.422" endtime="20201112 09:43:54.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.430" endtime="20201112 09:43:54.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.129" endtime="20201112 09:43:54.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.128" endtime="20201112 09:43:54.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.437" level="INFO">${RESULT} = [{'time': 0.019807222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6528000000000134e-05, 'source_diff': 5.6528000000000134e-05}, {'time': 0.019869222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:54.433" endtime="20201112 09:43:54.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.450" level="INFO">${ACCURACY} = {'source_diff': [5.6528000000000134e-05, 5.636099999999783e-05, 5.658299999999894e-05, 5.594499999999822e-05, 5.60549999999993e-05, 5.666699999999983e-05, 5.6041999999999204e-05, 5.643099999999915e-05...</msg>
<status status="PASS" starttime="20201112 09:43:54.438" endtime="20201112 09:43:54.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.455" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.454" endtime="20201112 09:43:54.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.457" level="INFO">VALUE: [5.6528000000000134e-05, 5.636099999999783e-05, 5.658299999999894e-05, 5.594499999999822e-05, 5.60549999999993e-05, 5.666699999999983e-05, 5.6041999999999204e-05, 5.643099999999915e-05, 5.6055999999998773e-05, 5.630600000000249e-05, 5.608300000000191e-05, 5.6569999999998843e-05, 5.655600000000274e-05, 5.7778000000001384e-05, 5.5986000000000924e-05, 5.631899999999912e-05, 5.608299999999844e-05, 5.666699999999983e-05, 5.612500000000062e-05, 5.6193999999998995e-05, 5.65549999999998e-05, 5.5985999999997454e-05, 5.6193999999998995e-05, 5.661100000000155e-05, 5.629099999999998e-05, 5.7764000000001814e-05, 5.604099999999973e-05, 5.7735999999999205e-05, 5.637500000000087e-05, 5.608300000000191e-05, 5.6264000000000314e-05, 5.7792000000000954e-05, 5.6472000000001854e-05, 5.6485999999997955e-05, 5.663900000000069e-05, 5.66809999999994e-05, 5.652700000000066e-05, 5.619499999999847e-05, 5.7750000000002244e-05, 5.647300000000133e-05, 5.776300000000234e-05, 5.611099999999758e-05, 5.6249999999997274e-05, 5.58610000000008e-05, 5.627700000000041e-05, 5.611099999999758e-05, 5.6193999999998995e-05, 5.5943999999998745e-05, 5.6694000000002964e-05, 5.587500000000037e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.456" endtime="20201112 09:43:54.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.451" endtime="20201112 09:43:54.458"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.461" endtime="20201112 09:43:54.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.464" endtime="20201112 09:43:54.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.463" endtime="20201112 09:43:54.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.459" endtime="20201112 09:43:54.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.093" endtime="20201112 09:43:54.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.093" endtime="20201112 09:43:54.485"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.494" endtime="20201112 09:43:54.512"></status>
</kw>
<msg timestamp="20201112 09:43:54.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.493" endtime="20201112 09:43:54.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.514" endtime="20201112 09:43:54.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.516" endtime="20201112 09:43:54.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.490" endtime="20201112 09:43:54.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.488" endtime="20201112 09:43:54.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.526" endtime="20201112 09:43:54.811"></status>
</kw>
<msg timestamp="20201112 09:43:54.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019921792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.525" endtime="20201112 09:43:54.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019921792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019979181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.815" endtime="20201112 09:43:54.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.823" endtime="20201112 09:43:54.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.522" endtime="20201112 09:43:54.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.521" endtime="20201112 09:43:54.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.830" level="INFO">${RESULT} = [{'time': 0.019979181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.738899999999797e-05, 'source_diff': 5.738899999999797e-05}, {'time': 0.020039167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.827" endtime="20201112 09:43:54.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.843" level="INFO">${ACCURACY} = {'source_diff': [5.738899999999797e-05, 5.68610000000018e-05, 5.6943999999999745e-05, 5.713900000000119e-05, 5.7013999999997594e-05, 5.7152000000001285e-05, 5.712499999999815e-05, 5.7207999999999565e-...</msg>
<status status="PASS" starttime="20201112 09:43:54.831" endtime="20201112 09:43:54.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.848" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.847" endtime="20201112 09:43:54.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.850" level="INFO">VALUE: [5.738899999999797e-05, 5.68610000000018e-05, 5.6943999999999745e-05, 5.713900000000119e-05, 5.7013999999997594e-05, 5.7152000000001285e-05, 5.712499999999815e-05, 5.7207999999999565e-05, 5.754099999999776e-05, 5.7485999999998955e-05, 5.7028000000000634e-05, 5.7680000000000925e-05, 5.747300000000233e-05, 5.76810000000004e-05, 5.71809999999999e-05, 5.7499999999998525e-05, 5.73610000000023e-05, 5.8792000000001954e-05, 5.769499999999997e-05, 5.7556000000000274e-05, 5.7583999999999413e-05, 5.7528000000001134e-05, 5.6957999999999315e-05, 5.8749999999999775e-05, 5.731900000000012e-05, 5.7638000000002215e-05, 5.6999999999998024e-05, 5.733299999999969e-05, 5.6916000000000605e-05, 5.7680000000000925e-05, 5.6957999999999315e-05, 5.6999999999998024e-05, 5.7193999999999995e-05, 5.7444000000000245e-05, 5.7721999999999635e-05, 5.769499999999997e-05, 5.7319999999999593e-05, 5.708300000000291e-05, 5.8791999999998484e-05, 5.706899999999987e-05, 5.716700000000033e-05, 5.7042000000000204e-05, 5.7069999999999343e-05, 5.737500000000187e-05, 5.6985999999998455e-05, 5.759699999999951e-05, 5.687500000000137e-05, 5.881899999999815e-05, 5.7527999999997664e-05, 5.7680000000000925e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.849" endtime="20201112 09:43:54.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.844" endtime="20201112 09:43:54.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.854" endtime="20201112 09:43:54.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.857" endtime="20201112 09:43:54.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.856" endtime="20201112 09:43:54.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.852" endtime="20201112 09:43:54.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.486" endtime="20201112 09:43:54.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.486" endtime="20201112 09:43:54.878"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.886" endtime="20201112 09:43:54.905"></status>
</kw>
<msg timestamp="20201112 09:43:54.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.885" endtime="20201112 09:43:54.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.907" endtime="20201112 09:43:54.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.909" endtime="20201112 09:43:54.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.882" endtime="20201112 09:43:54.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.880" endtime="20201112 09:43:54.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.919" endtime="20201112 09:43:55.206"></status>
</kw>
<msg timestamp="20201112 09:43:55.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.918" endtime="20201112 09:43:55.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019593986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.210" endtime="20201112 09:43:55.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.218" endtime="20201112 09:43:55.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.915" endtime="20201112 09:43:55.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.913" endtime="20201112 09:43:55.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.225" level="INFO">${RESULT} = [{'time': 0.019651958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7971999999999885e-05, 'source_diff': 5.7971999999999885e-05}, {'time': 0.019711958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:55.221" endtime="20201112 09:43:55.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.239" level="INFO">${ACCURACY} = {'source_diff': [5.7971999999999885e-05, 5.780500000000105e-05, 5.9791999999999484e-05, 5.8665999999998886e-05, 5.9764000000000345e-05, 5.8222000000000135e-05, 5.8693999999998026e-05, 5.81389999999987...</msg>
<status status="PASS" starttime="20201112 09:43:55.226" endtime="20201112 09:43:55.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.243" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.242" endtime="20201112 09:43:55.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.246" level="INFO">VALUE: [5.7971999999999885e-05, 5.780500000000105e-05, 5.9791999999999484e-05, 5.8665999999998886e-05, 5.9764000000000345e-05, 5.8222000000000135e-05, 5.8693999999998026e-05, 5.813899999999872e-05, 5.7944000000000745e-05, 5.793099999999718e-05, 5.8249999999999275e-05, 5.83749999999994e-05, 5.863899999999922e-05, 5.859700000000051e-05, 5.8055999999997304e-05, 5.813899999999872e-05, 5.8264000000002314e-05, 5.8042000000001204e-05, 5.7985999999999455e-05, 5.8305999999997554e-05, 5.815300000000176e-05, 5.85689999999979e-05, 5.861100000000008e-05, 5.8208000000000565e-05, 5.8500000000002994e-05, 5.8457999999997345e-05, 5.829100000000198e-05, 5.836099999999983e-05, 5.8472000000000385e-05, 5.790300000000151e-05, 5.8707999999997595e-05, 5.791700000000108e-05, 5.811099999999958e-05, 5.786099999999933e-05, 5.865300000000226e-05, 5.8249999999999275e-05, 5.8736000000000205e-05, 5.8472000000000385e-05, 5.86810000000014e-05, 5.9708000000002065e-05, 5.861199999999955e-05, 5.8138000000002715e-05, 5.806900000000087e-05, 5.784699999999976e-05, 5.8401999999999066e-05, 5.9736000000001205e-05, 5.8249999999999275e-05, 5.788899999999847e-05, 5.8179999999997956e-05, 5.8415999999998636e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.244" endtime="20201112 09:43:55.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.240" endtime="20201112 09:43:55.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.249" endtime="20201112 09:43:55.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.253" endtime="20201112 09:43:55.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.251" endtime="20201112 09:43:55.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.248" endtime="20201112 09:43:55.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.879" endtime="20201112 09:43:55.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.878" endtime="20201112 09:43:55.274"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.282" endtime="20201112 09:43:55.300"></status>
</kw>
<msg timestamp="20201112 09:43:55.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.281" endtime="20201112 09:43:55.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.302" endtime="20201112 09:43:55.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.304" endtime="20201112 09:43:55.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.278" endtime="20201112 09:43:55.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.276" endtime="20201112 09:43:55.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.314" endtime="20201112 09:43:55.600"></status>
</kw>
<msg timestamp="20201112 09:43:55.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.313" endtime="20201112 09:43:55.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019701458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.604" endtime="20201112 09:43:55.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.613" endtime="20201112 09:43:55.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.310" endtime="20201112 09:43:55.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.308" endtime="20201112 09:43:55.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.620" level="INFO">${RESULT} = [{'time': 0.019701458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.959700000000151e-05, 'source_diff': 5.959700000000151e-05}, {'time': 0.019766486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:55.616" endtime="20201112 09:43:55.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.633" level="INFO">${ACCURACY} = {'source_diff': [5.959700000000151e-05, 5.9500000000000525e-05, 5.9707999999998596e-05, 5.9707999999998596e-05, 5.944500000000172e-05, 6.0778000000000915e-05, 5.9320000000001594e-05, 5.886100000000033...</msg>
<status status="PASS" starttime="20201112 09:43:55.621" endtime="20201112 09:43:55.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.637" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.636" endtime="20201112 09:43:55.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.640" level="INFO">VALUE: [5.959700000000151e-05, 5.9500000000000525e-05, 5.9707999999998596e-05, 5.9707999999998596e-05, 5.944500000000172e-05, 6.0778000000000915e-05, 5.9320000000001594e-05, 5.886100000000033e-05, 5.962500000000065e-05, 5.9514000000000095e-05, 5.968099999999893e-05, 5.9485999999997485e-05, 5.934700000000126e-05, 5.962500000000065e-05, 5.8901999999999566e-05, 6.077699999999797e-05, 6.080499999999711e-05, 5.8916000000002605e-05, 5.911099999999711e-05, 5.9443999999998776e-05, 5.929100000000298e-05, 5.931899999999865e-05, 6.079099999999754e-05, 5.9514000000000095e-05, 5.938899999999997e-05, 5.9514000000000095e-05, 5.915299999999929e-05, 5.891699999999861e-05, 5.886100000000033e-05, 5.9305999999998554e-05, 5.895900000000079e-05, 5.916700000000233e-05, 5.919500000000147e-05, 5.916700000000233e-05, 5.938899999999997e-05, 5.9500000000000525e-05, 5.9415999999999636e-05, 5.916700000000233e-05, 6.0666000000000886e-05, 5.904099999999926e-05, 6.0708000000003065e-05, 5.931899999999865e-05, 5.941699999999911e-05, 5.954099999999976e-05, 5.884700000000076e-05, 5.9499999999997055e-05, 5.891700000000208e-05, 6.081900000000015e-05, 5.9305999999998554e-05, 5.894500000000122e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.638" endtime="20201112 09:43:55.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.634" endtime="20201112 09:43:55.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.643" endtime="20201112 09:43:55.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.647" endtime="20201112 09:43:55.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.645" endtime="20201112 09:43:55.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.642" endtime="20201112 09:43:55.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.274" endtime="20201112 09:43:55.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.274" endtime="20201112 09:43:55.667"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.676" endtime="20201112 09:43:55.694"></status>
</kw>
<msg timestamp="20201112 09:43:55.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.674" endtime="20201112 09:43:55.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.696" endtime="20201112 09:43:55.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.698" endtime="20201112 09:43:55.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.672" endtime="20201112 09:43:55.701"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.670" endtime="20201112 09:43:55.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.708" endtime="20201112 09:43:55.993"></status>
</kw>
<msg timestamp="20201112 09:43:55.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:55.707" endtime="20201112 09:43:55.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:55.997" endtime="20201112 09:43:56.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.005" endtime="20201112 09:43:56.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.704" endtime="20201112 09:43:56.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.702" endtime="20201112 09:43:56.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.012" level="INFO">${RESULT} = [{'time': 0.019671583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.183300000000072e-05, 'source_diff': 6.183300000000072e-05}, {'time': 0.019737569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.009" endtime="20201112 09:43:56.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.025" level="INFO">${ACCURACY} = {'source_diff': [6.183300000000072e-05, 6.027700000000094e-05, 6.034699999999879e-05, 6.005499999999983e-05, 6.002700000000069e-05, 5.987499999999743e-05, 6.061099999999861e-05, 6.0179999999999956e-05...</msg>
<status status="PASS" starttime="20201112 09:43:56.013" endtime="20201112 09:43:56.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.030" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.029" endtime="20201112 09:43:56.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.032" level="INFO">VALUE: [6.183300000000072e-05, 6.027700000000094e-05, 6.034699999999879e-05, 6.005499999999983e-05, 6.002700000000069e-05, 5.987499999999743e-05, 6.061099999999861e-05, 6.0179999999999956e-05, 6.062499999999818e-05, 6.180600000000105e-05, 6.0542000000000235e-05, 5.993100000000265e-05, 6.0249999999997805e-05, 6.0555999999999804e-05, 6.009699999999854e-05, 6.013900000000072e-05, 6.065300000000079e-05, 5.991699999999961e-05, 6.179200000000148e-05, 6.0291999999999984e-05, 6.055500000000033e-05, 6.036100000000183e-05, 6.03750000000014e-05, 5.986100000000133e-05, 6.0778000000000915e-05, 6.0513999999997625e-05, 6.0193999999999526e-05, 6.0472000000002385e-05, 6.0735999999998735e-05, 6.068099999999993e-05, 6.17499999999993e-05, 5.9985999999997985e-05, 6.03750000000014e-05, 6.0194999999999e-05, 6.065300000000079e-05, 6.013900000000072e-05, 6.06949999999995e-05, 6.0555999999999804e-05, 6.0305999999999554e-05, 6.176399999999888e-05, 6.073699999999821e-05, 6.012500000000115e-05, 6.013900000000072e-05, 6.0707999999999596e-05, 5.9986000000001455e-05, 6.029100000000051e-05, 6.176399999999888e-05, 6.018099999999943e-05, 5.98750000000009e-05, 6.061099999999861e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.031" endtime="20201112 09:43:56.033"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.026" endtime="20201112 09:43:56.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.036" endtime="20201112 09:43:56.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.039" endtime="20201112 09:43:56.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.038" endtime="20201112 09:43:56.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.034" endtime="20201112 09:43:56.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.668" endtime="20201112 09:43:56.060"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.668" endtime="20201112 09:43:56.060"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.069" endtime="20201112 09:43:56.087"></status>
</kw>
<msg timestamp="20201112 09:43:56.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.067" endtime="20201112 09:43:56.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.089" endtime="20201112 09:43:56.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.091" endtime="20201112 09:43:56.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.064" endtime="20201112 09:43:56.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.062" endtime="20201112 09:43:56.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.101" endtime="20201112 09:43:56.385"></status>
</kw>
<msg timestamp="20201112 09:43:56.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.100" endtime="20201112 09:43:56.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.389" endtime="20201112 09:43:56.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.397" endtime="20201112 09:43:56.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.097" endtime="20201112 09:43:56.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.095" endtime="20201112 09:43:56.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.404" level="INFO">${RESULT} = [{'time': 0.019804486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.122199999999967e-05, 'source_diff': 6.122199999999967e-05}, {'time': 0.019871458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.401" endtime="20201112 09:43:56.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.417" level="INFO">${ACCURACY} = {'source_diff': [6.122199999999967e-05, 6.13750000000024e-05, 6.141600000000164e-05, 6.105500000000083e-05, 6.172200000000017e-05, 6.0929999999997236e-05, 6.104100000000126e-05, 6.15690000000009e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:56.405" endtime="20201112 09:43:56.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.422" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.421" endtime="20201112 09:43:56.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.424" level="INFO">VALUE: [6.122199999999967e-05, 6.13750000000024e-05, 6.141600000000164e-05, 6.105500000000083e-05, 6.172200000000017e-05, 6.0929999999997236e-05, 6.104100000000126e-05, 6.15690000000009e-05, 6.0985999999998985e-05, 6.143099999999721e-05, 6.136099999999936e-05, 6.086099999999886e-05, 6.143100000000068e-05, 6.148599999999949e-05, 6.165199999999885e-05, 6.0985999999998985e-05, 6.155599999999734e-05, 6.093100000000018e-05, 6.136199999999883e-05, 6.170900000000007e-05, 6.0862000000001804e-05, 6.1013999999998125e-05, 6.111100000000258e-05, 6.10690000000004e-05, 6.279099999999954e-05, 6.105500000000083e-05, 6.169400000000103e-05, 6.116700000000086e-05, 6.12499999999988e-05, 6.12360000000027e-05, 6.162499999999918e-05, 6.136099999999936e-05, 6.149999999999906e-05, 6.116699999999739e-05, 6.084699999999929e-05, 6.116600000000139e-05, 6.109799999999901e-05, 6.086100000000233e-05, 6.0999999999998555e-05, 6.111099999999911e-05, 6.084699999999929e-05, 6.1028000000001165e-05, 6.17499999999993e-05, 6.280500000000258e-05, 6.169400000000103e-05, 6.161099999999961e-05, 6.0930000000000706e-05, 6.134699999999979e-05, 6.112499999999868e-05, 6.130600000000055e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.423" endtime="20201112 09:43:56.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.418" endtime="20201112 09:43:56.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.428" endtime="20201112 09:43:56.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.431" endtime="20201112 09:43:56.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.430" endtime="20201112 09:43:56.451"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.426" endtime="20201112 09:43:56.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.061" endtime="20201112 09:43:56.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.060" endtime="20201112 09:43:56.452"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.461" endtime="20201112 09:43:56.480"></status>
</kw>
<msg timestamp="20201112 09:43:56.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.459" endtime="20201112 09:43:56.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.481" endtime="20201112 09:43:56.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.484" endtime="20201112 09:43:56.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.457" endtime="20201112 09:43:56.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.455" endtime="20201112 09:43:56.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.494" endtime="20201112 09:43:56.779"></status>
</kw>
<msg timestamp="20201112 09:43:56.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019726514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.492" endtime="20201112 09:43:56.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019726514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.783" endtime="20201112 09:43:56.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.792" endtime="20201112 09:43:56.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.490" endtime="20201112 09:43:56.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.488" endtime="20201112 09:43:56.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.798" level="INFO">${RESULT} = [{'time': 0.019726514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.245800000000135e-05, 'source_diff': 6.245800000000135e-05}, {'time': 0.019791542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.795" endtime="20201112 09:43:56.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.812" level="INFO">${ACCURACY} = {'source_diff': [6.245800000000135e-05, 6.1888999999999e-05, 6.205599999999784e-05, 6.24439999999983e-05, 6.227799999999895e-05, 6.266699999999889e-05, 6.222300000000014e-05, 6.248699999999996e-05, 6....</msg>
<status status="PASS" starttime="20201112 09:43:56.799" endtime="20201112 09:43:56.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.817" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.816" endtime="20201112 09:43:56.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.819" level="INFO">VALUE: [6.245800000000135e-05, 6.1888999999999e-05, 6.205599999999784e-05, 6.24439999999983e-05, 6.227799999999895e-05, 6.266699999999889e-05, 6.222300000000014e-05, 6.248699999999996e-05, 6.255499999999886e-05, 6.194400000000128e-05, 6.241599999999917e-05, 6.219400000000153e-05, 6.181899999999768e-05, 6.223600000000024e-05, 6.263899999999975e-05, 6.217999999999849e-05, 6.251399999999963e-05, 6.198699999999946e-05, 6.218100000000143e-05, 6.254199999999877e-05, 6.237499999999993e-05, 6.374999999999784e-05, 6.240299999999907e-05, 6.27500000000003e-05, 6.223600000000024e-05, 6.218100000000143e-05, 6.237499999999993e-05, 6.194499999999728e-05, 6.186199999999933e-05, 6.223699999999971e-05, 6.197299999999989e-05, 6.263899999999975e-05, 6.204099999999879e-05, 6.376400000000088e-05, 6.208300000000097e-05, 6.261100000000061e-05, 6.230500000000208e-05, 6.247200000000092e-05, 6.1888999999999e-05, 6.252800000000266e-05, 6.20560000000013e-05, 6.190299999999857e-05, 6.23340000000007e-05, 6.276399999999988e-05, 6.258300000000147e-05, 6.227799999999895e-05, 6.186099999999986e-05, 6.27500000000003e-05, 6.22629999999999e-05, 6.266699999999889e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.818" endtime="20201112 09:43:56.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.813" endtime="20201112 09:43:56.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.823" endtime="20201112 09:43:56.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.826" endtime="20201112 09:43:56.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.825" endtime="20201112 09:43:56.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.821" endtime="20201112 09:43:56.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.453" endtime="20201112 09:43:56.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.453" endtime="20201112 09:43:56.847"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.856" endtime="20201112 09:43:56.874"></status>
</kw>
<msg timestamp="20201112 09:43:56.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.854" endtime="20201112 09:43:56.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.875" endtime="20201112 09:43:56.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.878" endtime="20201112 09:43:56.880"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.852" endtime="20201112 09:43:56.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.850" endtime="20201112 09:43:56.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.888" endtime="20201112 09:43:57.173"></status>
</kw>
<msg timestamp="20201112 09:43:57.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.886" endtime="20201112 09:43:57.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.177" endtime="20201112 09:43:57.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.186" endtime="20201112 09:43:57.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.884" endtime="20201112 09:43:57.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.882" endtime="20201112 09:43:57.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.192" level="INFO">${RESULT} = [{'time': 0.019750653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.311100000000111e-05, 'source_diff': 6.311100000000111e-05}, {'time': 0.019815653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:57.189" endtime="20201112 09:43:57.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.206" level="INFO">${ACCURACY} = {'source_diff': [6.311100000000111e-05, 6.283399999999773e-05, 6.355499999999986e-05, 6.373600000000174e-05, 6.305599999999884e-05, 6.361100000000161e-05, 6.481900000000068e-05, 6.292999999999924e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:57.193" endtime="20201112 09:43:57.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.210" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.209" endtime="20201112 09:43:57.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.213" level="INFO">VALUE: [6.311100000000111e-05, 6.283399999999773e-05, 6.355499999999986e-05, 6.373600000000174e-05, 6.305599999999884e-05, 6.361100000000161e-05, 6.481900000000068e-05, 6.292999999999924e-05, 6.313900000000025e-05, 6.330499999999961e-05, 6.480500000000111e-05, 6.369399999999956e-05, 6.480499999999764e-05, 6.342999999999974e-05, 6.312500000000068e-05, 6.362500000000118e-05, 6.35280000000002e-05, 6.351400000000063e-05, 6.369399999999956e-05, 6.323600000000124e-05, 6.334699999999832e-05, 6.313900000000025e-05, 6.323600000000124e-05, 6.30560000000023e-05, 6.323600000000124e-05, 6.34439999999993e-05, 6.349999999999759e-05, 6.481900000000068e-05, 6.359699999999857e-05, 6.473599999999927e-05, 6.320799999999863e-05, 6.342999999999974e-05, 6.33890000000005e-05, 6.30279999999997e-05, 6.312500000000068e-05, 6.479200000000102e-05, 6.363899999999728e-05, 6.302800000000316e-05, 6.361099999999814e-05, 6.350000000000106e-05, 6.334700000000179e-05, 6.344499999999878e-05, 6.287499999999696e-05, 6.368099999999946e-05, 6.34439999999993e-05, 6.350000000000106e-05, 6.298700000000046e-05, 6.481900000000068e-05, 6.331900000000265e-05, 6.355599999999934e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.211" endtime="20201112 09:43:57.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.206" endtime="20201112 09:43:57.217"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.220" endtime="20201112 09:43:57.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.223" endtime="20201112 09:43:57.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.222" endtime="20201112 09:43:57.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.218" endtime="20201112 09:43:57.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.848" endtime="20201112 09:43:57.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.847" endtime="20201112 09:43:57.244"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.253" endtime="20201112 09:43:57.272"></status>
</kw>
<msg timestamp="20201112 09:43:57.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.251" endtime="20201112 09:43:57.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.273" endtime="20201112 09:43:57.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.276" endtime="20201112 09:43:57.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.249" endtime="20201112 09:43:57.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.246" endtime="20201112 09:43:57.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.285" endtime="20201112 09:43:57.571"></status>
</kw>
<msg timestamp="20201112 09:43:57.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.284" endtime="20201112 09:43:57.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019707194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.575" endtime="20201112 09:43:57.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.584" endtime="20201112 09:43:57.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.281" endtime="20201112 09:43:57.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.280" endtime="20201112 09:43:57.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.590" level="INFO">${RESULT} = [{'time': 0.019773014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.581999999999769e-05, 'source_diff': 6.581999999999769e-05}, {'time': 0.019841056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:57.587" endtime="20201112 09:43:57.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.604" level="INFO">${ACCURACY} = {'source_diff': [6.581999999999769e-05, 6.469500000000003e-05, 6.399999999999809e-05, 6.437499999999846e-05, 6.443100000000021e-05, 6.420799999999963e-05, 6.468100000000046e-05, 6.580599999999812e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:57.591" endtime="20201112 09:43:57.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.608" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.607" endtime="20201112 09:43:57.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.611" level="INFO">VALUE: [6.581999999999769e-05, 6.469500000000003e-05, 6.399999999999809e-05, 6.437499999999846e-05, 6.443100000000021e-05, 6.420799999999963e-05, 6.468100000000046e-05, 6.580599999999812e-05, 6.580600000000159e-05, 6.573600000000027e-05, 6.466600000000142e-05, 6.395799999999938e-05, 6.473599999999927e-05, 6.397199999999895e-05, 6.468000000000099e-05, 6.406899999999993e-05, 6.427800000000095e-05, 6.448600000000249e-05, 6.466699999999742e-05, 6.401399999999766e-05, 6.449999999999859e-05, 6.454200000000077e-05, 6.391700000000014e-05, 6.448599999999902e-05, 6.451399999999816e-05, 6.420799999999963e-05, 6.579200000000202e-05, 6.400000000000156e-05, 6.422299999999867e-05, 6.443000000000074e-05, 6.420799999999963e-05, 6.581899999999821e-05, 6.406899999999993e-05, 6.415300000000082e-05, 6.42219999999992e-05, 6.424999999999834e-05, 6.480600000000059e-05, 6.386100000000186e-05, 6.393100000000318e-05, 6.463899999999828e-05, 6.400000000000156e-05, 6.445899999999935e-05, 6.419499999999953e-05, 6.454200000000077e-05, 6.580599999999812e-05, 6.449999999999859e-05, 6.580600000000159e-05, 6.399999999999809e-05, 6.442999999999727e-05, 6.42219999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.609" endtime="20201112 09:43:57.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.605" endtime="20201112 09:43:57.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.614" endtime="20201112 09:43:57.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.617" endtime="20201112 09:43:57.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.616" endtime="20201112 09:43:57.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.612" endtime="20201112 09:43:57.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.245" endtime="20201112 09:43:57.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.244" endtime="20201112 09:43:57.638"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.647" endtime="20201112 09:43:57.666"></status>
</kw>
<msg timestamp="20201112 09:43:57.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.645" endtime="20201112 09:43:57.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.667" endtime="20201112 09:43:57.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.670" endtime="20201112 09:43:57.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.643" endtime="20201112 09:43:57.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.641" endtime="20201112 09:43:57.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.680" endtime="20201112 09:43:57.965"></status>
</kw>
<msg timestamp="20201112 09:43:57.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.678" endtime="20201112 09:43:57.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019730194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019795083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.969" endtime="20201112 09:43:57.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.977" endtime="20201112 09:43:57.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.675" endtime="20201112 09:43:57.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.674" endtime="20201112 09:43:57.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.984" level="INFO">${RESULT} = [{'time': 0.019795083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.4889000000002e-05, 'source_diff': 6.4889000000002e-05}, {'time': 0.019867069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 09:43:57.980" endtime="20201112 09:43:57.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.997" level="INFO">${ACCURACY} = {'source_diff': [6.4889000000002e-05, 6.676300000000093e-05, 6.559800000000005e-05, 6.487499999999896e-05, 6.681899999999921e-05, 6.530500000000161e-05, 6.505500000000136e-05, 6.49440000000008e-05, 6....</msg>
<status status="PASS" starttime="20201112 09:43:57.985" endtime="20201112 09:43:57.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.002" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.001" endtime="20201112 09:43:58.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.004" level="INFO">VALUE: [6.4889000000002e-05, 6.676300000000093e-05, 6.559800000000005e-05, 6.487499999999896e-05, 6.681899999999921e-05, 6.530500000000161e-05, 6.505500000000136e-05, 6.49440000000008e-05, 6.530500000000161e-05, 6.54440000000013e-05, 6.536099999999989e-05, 6.477800000000145e-05, 6.681999999999869e-05, 6.483300000000025e-05, 6.530600000000109e-05, 6.554200000000177e-05, 6.543099999999774e-05, 6.486099999999939e-05, 6.566700000000189e-05, 6.505600000000084e-05, 6.572300000000017e-05, 6.493000000000124e-05, 6.499999999999909e-05, 6.501399999999866e-05, 6.495799999999691e-05, 6.542999999999827e-05, 6.523599999999977e-05, 6.681899999999921e-05, 6.52220000000002e-05, 6.529200000000152e-05, 6.552799999999873e-05, 6.524999999999934e-05, 6.509700000000007e-05, 6.573600000000027e-05, 6.513899999999878e-05, 6.561100000000014e-05, 6.518100000000096e-05, 6.67220000000017e-05, 6.515199999999888e-05, 6.554200000000177e-05, 6.537500000000293e-05, 6.516699999999792e-05, 6.550000000000306e-05, 6.566600000000242e-05, 6.484699999999982e-05, 6.4889000000002e-05, 6.520800000000063e-05, 6.573600000000027e-05, 6.511100000000311e-05, 6.493100000000071e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.003" endtime="20201112 09:43:58.005"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.998" endtime="20201112 09:43:58.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.008" endtime="20201112 09:43:58.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.011" endtime="20201112 09:43:58.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.010" endtime="20201112 09:43:58.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.006" endtime="20201112 09:43:58.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.639" endtime="20201112 09:43:58.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.639" endtime="20201112 09:43:58.032"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.040" endtime="20201112 09:43:58.060"></status>
</kw>
<msg timestamp="20201112 09:43:58.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.039" endtime="20201112 09:43:58.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.061" endtime="20201112 09:43:58.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.064" endtime="20201112 09:43:58.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.036" endtime="20201112 09:43:58.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.034" endtime="20201112 09:43:58.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.074" endtime="20201112 09:43:58.358"></status>
</kw>
<msg timestamp="20201112 09:43:58.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.072" endtime="20201112 09:43:58.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019619333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019685778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.362" endtime="20201112 09:43:58.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.370" endtime="20201112 09:43:58.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.070" endtime="20201112 09:43:58.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.068" endtime="20201112 09:43:58.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.377" level="INFO">${RESULT} = [{'time': 0.019685778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.644500000000178e-05, 'source_diff': 6.644500000000178e-05}, {'time': 0.019756764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.374" endtime="20201112 09:43:58.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.391" level="INFO">${ACCURACY} = {'source_diff': [6.644500000000178e-05, 6.630599999999862e-05, 6.662500000000071e-05, 6.67229999999977e-05, 6.587499999999996e-05, 6.643099999999874e-05, 6.633300000000175e-05, 6.590300000000257e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:58.378" endtime="20201112 09:43:58.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.396" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.395" endtime="20201112 09:43:58.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.398" level="INFO">VALUE: [6.644500000000178e-05, 6.630599999999862e-05, 6.662500000000071e-05, 6.67229999999977e-05, 6.587499999999996e-05, 6.643099999999874e-05, 6.633300000000175e-05, 6.590300000000257e-05, 6.648599999999755e-05, 6.630499999999914e-05, 6.775000000000184e-05, 6.77909999999976e-05, 6.65969999999981e-05, 6.634700000000132e-05, 6.586100000000039e-05, 6.620800000000163e-05, 6.669400000000256e-05, 6.601399999999966e-05, 6.662499999999724e-05, 6.668099999999899e-05, 6.59029999999991e-05, 6.593099999999824e-05, 6.65700000000019e-05, 6.593099999999824e-05, 6.600000000000009e-05, 6.638900000000003e-05, 6.637500000000046e-05, 6.611200000000012e-05, 6.64159999999997e-05, 6.636100000000089e-05, 6.59159999999992e-05, 6.637500000000046e-05, 6.644399999999884e-05, 6.591600000000267e-05, 6.781900000000021e-05, 6.600000000000009e-05, 6.776399999999794e-05, 6.629200000000252e-05, 6.663900000000028e-05, 6.594399999999834e-05, 6.618100000000196e-05, 6.618099999999849e-05, 6.634700000000132e-05, 6.594499999999781e-05, 6.668099999999899e-05, 6.588800000000006e-05, 6.609800000000055e-05, 6.650000000000059e-05, 6.588899999999953e-05, 6.675000000000084e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.397" endtime="20201112 09:43:58.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.392" endtime="20201112 09:43:58.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.402" endtime="20201112 09:43:58.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.405" endtime="20201112 09:43:58.424"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.404" endtime="20201112 09:43:58.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.400" endtime="20201112 09:43:58.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.033" endtime="20201112 09:43:58.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.032" endtime="20201112 09:43:58.426"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.434" endtime="20201112 09:43:58.454"></status>
</kw>
<msg timestamp="20201112 09:43:58.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.433" endtime="20201112 09:43:58.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.455" endtime="20201112 09:43:58.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.458" endtime="20201112 09:43:58.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.430" endtime="20201112 09:43:58.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.428" endtime="20201112 09:43:58.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.467" endtime="20201112 09:43:58.753"></status>
</kw>
<msg timestamp="20201112 09:43:58.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.466" endtime="20201112 09:43:58.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019721514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.757" endtime="20201112 09:43:58.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.765" endtime="20201112 09:43:58.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.463" endtime="20201112 09:43:58.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.462" endtime="20201112 09:43:58.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.772" level="INFO">${RESULT} = [{'time': 0.019721514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.699999999999762e-05, 'source_diff': 6.699999999999762e-05}, {'time': 0.019794472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.768" endtime="20201112 09:43:58.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.785" level="INFO">${ACCURACY} = {'source_diff': [6.699999999999762e-05, 6.706899999999946e-05, 6.770799999999966e-05, 6.727800000000048e-05, 6.70419999999998e-05, 6.716699999999992e-05, 6.698599999999805e-05, 6.693099999999924e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:58.773" endtime="20201112 09:43:58.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.790" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.789" endtime="20201112 09:43:58.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.792" level="INFO">VALUE: [6.699999999999762e-05, 6.706899999999946e-05, 6.770799999999966e-05, 6.727800000000048e-05, 6.70419999999998e-05, 6.716699999999992e-05, 6.698599999999805e-05, 6.693099999999924e-05, 6.727800000000048e-05, 6.880599999999765e-05, 6.720899999999863e-05, 6.736099999999842e-05, 6.734699999999885e-05, 6.752799999999726e-05, 6.700000000000109e-05, 6.705599999999937e-05, 6.73480000000018e-05, 6.680599999999912e-05, 6.881900000000121e-05, 6.734699999999885e-05, 6.720800000000263e-05, 6.706899999999946e-05, 6.731899999999971e-05, 6.677799999999998e-05, 6.712500000000121e-05, 6.717999999999655e-05, 6.759700000000257e-05, 6.766700000000042e-05, 6.77359999999988e-05, 6.716699999999992e-05, 6.736099999999842e-05, 6.733399999999876e-05, 6.761099999999867e-05, 6.774999999999837e-05, 6.736100000000189e-05, 6.755500000000039e-05, 6.722300000000167e-05, 6.70419999999998e-05, 6.723600000000177e-05, 6.754100000000082e-05, 6.690200000000063e-05, 6.756899999999996e-05, 6.706899999999946e-05, 6.72640000000009e-05, 6.743099999999974e-05, 6.686100000000139e-05, 6.770899999999913e-05, 6.695900000000185e-05, 6.768099999999999e-05, 6.880600000000112e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.791" endtime="20201112 09:43:58.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.786" endtime="20201112 09:43:58.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.796" endtime="20201112 09:43:58.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.799" endtime="20201112 09:43:58.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.797" endtime="20201112 09:43:58.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.794" endtime="20201112 09:43:58.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.427" endtime="20201112 09:43:58.820"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.426" endtime="20201112 09:43:58.820"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.828" endtime="20201112 09:43:58.848"></status>
</kw>
<msg timestamp="20201112 09:43:58.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.827" endtime="20201112 09:43:58.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.849" endtime="20201112 09:43:58.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.852" endtime="20201112 09:43:58.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.824" endtime="20201112 09:43:58.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.822" endtime="20201112 09:43:58.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.862" endtime="20201112 09:43:59.147"></status>
</kw>
<msg timestamp="20201112 09:43:59.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.860" endtime="20201112 09:43:59.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019756972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.152" endtime="20201112 09:43:59.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.160" endtime="20201112 09:43:59.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.858" endtime="20201112 09:43:59.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.856" endtime="20201112 09:43:59.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.166" level="INFO">${RESULT} = [{'time': 0.019825597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.862499999999924e-05, 'source_diff': 6.862499999999924e-05}, {'time': 0.019899597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:59.163" endtime="20201112 09:43:59.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.180" level="INFO">${ACCURACY} = {'source_diff': [6.862499999999924e-05, 6.812500000000221e-05, 6.82640000000019e-05, 6.833300000000028e-05, 6.979199999999908e-05, 6.863899999999881e-05, 6.811099999999917e-05, 6.811099999999917e-05, ...</msg>
<status status="PASS" starttime="20201112 09:43:59.167" endtime="20201112 09:43:59.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.184" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.183" endtime="20201112 09:43:59.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.187" level="INFO">VALUE: [6.862499999999924e-05, 6.812500000000221e-05, 6.82640000000019e-05, 6.833300000000028e-05, 6.979199999999908e-05, 6.863899999999881e-05, 6.811099999999917e-05, 6.811099999999917e-05, 6.822199999999973e-05, 6.790200000000163e-05, 6.825000000000234e-05, 6.818100000000049e-05, 6.820800000000016e-05, 6.975000000000037e-05, 6.874999999999937e-05, 6.836099999999942e-05, 6.84160000000017e-05, 6.834699999999985e-05, 6.851400000000216e-05, 6.791700000000067e-05, 6.819399999999712e-05, 6.986100000000092e-05, 6.79169999999972e-05, 6.798599999999905e-05, 6.783299999999978e-05, 6.848599999999955e-05, 6.82359999999993e-05, 6.823600000000277e-05, 6.798600000000252e-05, 6.818100000000049e-05, 6.844500000000031e-05, 6.824999999999887e-05, 6.802800000000123e-05, 6.852699999999878e-05, 6.872200000000023e-05, 6.790200000000163e-05, 6.863900000000228e-05, 6.851399999999869e-05, 6.855500000000139e-05, 6.849999999999912e-05, 6.831900000000071e-05, 6.793100000000024e-05, 6.982000000000169e-05, 6.862500000000271e-05, 6.857000000000044e-05, 6.837499999999899e-05, 6.829200000000105e-05, 6.980600000000212e-05, 6.868099999999752e-05, 6.812499999999874e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.185" endtime="20201112 09:43:59.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.181" endtime="20201112 09:43:59.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.190" endtime="20201112 09:43:59.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.194" endtime="20201112 09:43:59.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.192" endtime="20201112 09:43:59.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.189" endtime="20201112 09:43:59.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.821" endtime="20201112 09:43:59.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.820" endtime="20201112 09:43:59.214"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.223" endtime="20201112 09:43:59.242"></status>
</kw>
<msg timestamp="20201112 09:43:59.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.221" endtime="20201112 09:43:59.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.243" endtime="20201112 09:43:59.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.246" endtime="20201112 09:43:59.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.219" endtime="20201112 09:43:59.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.217" endtime="20201112 09:43:59.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.256" endtime="20201112 09:43:59.541"></status>
</kw>
<msg timestamp="20201112 09:43:59.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.254" endtime="20201112 09:43:59.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019724389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019793861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.545" endtime="20201112 09:43:59.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.554" endtime="20201112 09:43:59.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.252" endtime="20201112 09:43:59.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.250" endtime="20201112 09:43:59.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.560" level="INFO">${RESULT} = [{'time': 0.019793861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.947200000000098e-05, 'source_diff': 6.947200000000098e-05}, {'time': 0.019867875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:59.557" endtime="20201112 09:43:59.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.574" level="INFO">${ACCURACY} = {'source_diff': [6.947200000000098e-05, 6.924999999999987e-05, 6.961100000000067e-05, 6.950000000000012e-05, 6.934700000000085e-05, 6.883400000000026e-05, 6.954199999999883e-05, 6.893100000000124e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:59.561" endtime="20201112 09:43:59.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.578" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.577" endtime="20201112 09:43:59.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.581" level="INFO">VALUE: [6.947200000000098e-05, 6.924999999999987e-05, 6.961100000000067e-05, 6.950000000000012e-05, 6.934700000000085e-05, 6.883400000000026e-05, 6.954199999999883e-05, 6.893100000000124e-05, 6.977800000000298e-05, 7.075000000000137e-05, 6.934800000000033e-05, 6.97360000000008e-05, 7.080500000000017e-05, 6.936100000000042e-05, 6.947200000000098e-05, 6.888799999999959e-05, 6.90970000000006e-05, 6.952799999999926e-05, 6.936100000000042e-05, 6.941700000000217e-05, 6.901399999999919e-05, 6.920800000000116e-05, 6.94169999999987e-05, 6.936100000000042e-05, 6.913899999999931e-05, 6.948600000000055e-05, 6.950000000000012e-05, 6.915299999999888e-05, 7.07499999999979e-05, 6.959800000000058e-05, 6.952699999999978e-05, 6.938800000000009e-05, 6.941599999999923e-05, 6.883300000000078e-05, 7.081899999999974e-05, 6.950000000000012e-05, 6.92640000000029e-05, 6.886099999999992e-05, 6.94169999999987e-05, 6.943000000000227e-05, 6.924999999999987e-05, 6.959699999999763e-05, 6.930600000000162e-05, 6.922199999999726e-05, 6.966700000000242e-05, 7.079200000000008e-05, 7.079200000000008e-05, 6.898600000000005e-05, 7.080599999999965e-05, 6.912499999999974e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.579" endtime="20201112 09:43:59.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.575" endtime="20201112 09:43:59.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.584" endtime="20201112 09:43:59.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.588" endtime="20201112 09:43:59.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.586" endtime="20201112 09:43:59.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.583" endtime="20201112 09:43:59.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.215" endtime="20201112 09:43:59.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.215" endtime="20201112 09:43:59.608"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.617" endtime="20201112 09:43:59.636"></status>
</kw>
<msg timestamp="20201112 09:43:59.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.615" endtime="20201112 09:43:59.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.637" endtime="20201112 09:43:59.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.640" endtime="20201112 09:43:59.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.613" endtime="20201112 09:43:59.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.611" endtime="20201112 09:43:59.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.650" endtime="20201112 09:43:59.934"></status>
</kw>
<msg timestamp="20201112 09:43:59.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.648" endtime="20201112 09:43:59.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019800014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.939" endtime="20201112 09:43:59.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.947" endtime="20201112 09:43:59.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.646" endtime="20201112 09:43:59.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.644" endtime="20201112 09:43:59.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.953" level="INFO">${RESULT} = [{'time': 0.019800014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.038900000000056e-05, 'source_diff': 7.038900000000056e-05}, {'time': 0.019874972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:59.950" endtime="20201112 09:43:59.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.968" level="INFO">${ACCURACY} = {'source_diff': [7.038900000000056e-05, 6.987500000000049e-05, 7.037499999999752e-05, 7.059699999999863e-05, 7.052800000000026e-05, 6.997199999999801e-05, 6.994500000000181e-05, 7.055600000000287e-05,...</msg>
<status status="PASS" starttime="20201112 09:43:59.954" endtime="20201112 09:43:59.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.972" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.971" endtime="20201112 09:43:59.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.975" level="INFO">VALUE: [7.038900000000056e-05, 6.987500000000049e-05, 7.037499999999752e-05, 7.059699999999863e-05, 7.052800000000026e-05, 6.997199999999801e-05, 6.994500000000181e-05, 7.055600000000287e-05, 6.997200000000148e-05, 7.007000000000194e-05, 7.177800000000151e-05, 7.040300000000013e-05, 7.02230000000012e-05, 7.0584000000002e-05, 7.038800000000109e-05, 6.994400000000234e-05, 7.011100000000117e-05, 6.984700000000135e-05, 7.183300000000031e-05, 7.000000000000062e-05, 7.048600000000155e-05, 7.031899999999924e-05, 7.044400000000284e-05, 7.038900000000056e-05, 7.018099999999902e-05, 7.05559999999994e-05, 7.001400000000019e-05, 7.179199999999761e-05, 6.991599999999973e-05, 6.994499999999834e-05, 7.062499999999777e-05, 7.068099999999952e-05, 7.027700000000053e-05, 7.040300000000013e-05, 7.17499999999989e-05, 7.176399999999847e-05, 6.994400000000234e-05, 7.062500000000124e-05, 7.080599999999965e-05, 7.02910000000001e-05, 7.049999999999765e-05, 6.987500000000049e-05, 7.012499999999727e-05, 6.980599999999865e-05, 7.066699999999995e-05, 7.047199999999851e-05, 7.029199999999958e-05, 6.994499999999834e-05, 6.987500000000049e-05, 7.011100000000117e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.973" endtime="20201112 09:43:59.975"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.969" endtime="20201112 09:43:59.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.978" endtime="20201112 09:43:59.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.982" endtime="20201112 09:44:00.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.980" endtime="20201112 09:44:00.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.977" endtime="20201112 09:44:00.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.609" endtime="20201112 09:44:00.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.609" endtime="20201112 09:44:00.003"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.011" endtime="20201112 09:44:00.030"></status>
</kw>
<msg timestamp="20201112 09:44:00.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.010" endtime="20201112 09:44:00.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.031" endtime="20201112 09:44:00.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.034" endtime="20201112 09:44:00.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.007" endtime="20201112 09:44:00.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.005" endtime="20201112 09:44:00.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.044" endtime="20201112 09:44:00.329"></status>
</kw>
<msg timestamp="20201112 09:44:00.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.042" endtime="20201112 09:44:00.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019811694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.333" endtime="20201112 09:44:00.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.342" endtime="20201112 09:44:00.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.040" endtime="20201112 09:44:00.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.038" endtime="20201112 09:44:00.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.348" level="INFO">${RESULT} = [{'time': 0.019882625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.093099999999977e-05, 'source_diff': 7.093099999999977e-05}, {'time': 0.019957625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:00.345" endtime="20201112 09:44:00.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.362" level="INFO">${ACCURACY} = {'source_diff': [7.093099999999977e-05, 7.116700000000045e-05, 7.101399999999772e-05, 7.11109999999987e-05, 7.279200000000208e-05, 7.093099999999977e-05, 7.138900000000156e-05, 7.086099999999845e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:00.349" endtime="20201112 09:44:00.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.366" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.365" endtime="20201112 09:44:00.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.368" level="INFO">VALUE: [7.093099999999977e-05, 7.116700000000045e-05, 7.101399999999772e-05, 7.11109999999987e-05, 7.279200000000208e-05, 7.093099999999977e-05, 7.138900000000156e-05, 7.086099999999845e-05, 7.151399999999822e-05, 7.130599999999668e-05, 7.168000000000105e-05, 7.102699999999781e-05, 7.138899999999809e-05, 7.113900000000131e-05, 7.277699999999956e-05, 7.111100000000217e-05, 7.086100000000192e-05, 7.123599999999883e-05, 7.282000000000122e-05, 7.134800000000233e-05, 7.086100000000192e-05, 7.086100000000192e-05, 7.118100000000002e-05, 7.122199999999926e-05, 7.276399999999947e-05, 7.137499999999852e-05, 7.279199999999861e-05, 7.14170000000007e-05, 7.169399999999715e-05, 7.097299999999848e-05, 7.113900000000131e-05, 7.098599999999858e-05, 7.138899999999809e-05, 7.12499999999984e-05, 7.098599999999858e-05, 7.276399999999947e-05, 7.140299999999766e-05, 7.144499999999984e-05, 7.101400000000119e-05, 7.133399999999929e-05, 7.11109999999987e-05, 7.134699999999938e-05, 7.133399999999929e-05, 7.123599999999883e-05, 7.167999999999758e-05, 7.151399999999822e-05, 7.141699999999723e-05, 7.094399999999987e-05, 7.105500000000042e-05, 7.119400000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.367" endtime="20201112 09:44:00.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.362" endtime="20201112 09:44:00.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.372" endtime="20201112 09:44:00.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.375" endtime="20201112 09:44:00.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.374" endtime="20201112 09:44:00.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.370" endtime="20201112 09:44:00.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.003" endtime="20201112 09:44:00.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.003" endtime="20201112 09:44:00.396"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.405" endtime="20201112 09:44:00.424"></status>
</kw>
<msg timestamp="20201112 09:44:00.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.403" endtime="20201112 09:44:00.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.425" endtime="20201112 09:44:00.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.428" endtime="20201112 09:44:00.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.401" endtime="20201112 09:44:00.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.399" endtime="20201112 09:44:00.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.438" endtime="20201112 09:44:00.724"></status>
</kw>
<msg timestamp="20201112 09:44:00.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.436" endtime="20201112 09:44:00.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.728" endtime="20201112 09:44:00.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.736" endtime="20201112 09:44:00.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.434" endtime="20201112 09:44:00.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.432" endtime="20201112 09:44:00.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.743" level="INFO">${RESULT} = [{'time': 0.019901361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.212499999999927e-05, 'source_diff': 7.212499999999927e-05}, {'time': 0.019978361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:00.740" endtime="20201112 09:44:00.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.756" level="INFO">${ACCURACY} = {'source_diff': [7.212499999999927e-05, 7.248600000000008e-05, 7.219399999999765e-05, 7.208400000000004e-05, 7.202799999999829e-05, 7.226400000000244e-05, 7.222200000000026e-05, 7.251399999999922e-05,...</msg>
<status status="PASS" starttime="20201112 09:44:00.744" endtime="20201112 09:44:00.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.761" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.760" endtime="20201112 09:44:00.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.763" level="INFO">VALUE: [7.212499999999927e-05, 7.248600000000008e-05, 7.219399999999765e-05, 7.208400000000004e-05, 7.202799999999829e-05, 7.226400000000244e-05, 7.222200000000026e-05, 7.251399999999922e-05, 7.262499999999977e-05, 7.229200000000158e-05, 7.236099999999995e-05, 7.194400000000087e-05, 7.222299999999973e-05, 7.381900000000274e-05, 7.263899999999934e-05, 7.201400000000219e-05, 7.236099999999995e-05, 7.2069000000001e-05, 7.190299999999816e-05, 7.269399999999815e-05, 7.219500000000059e-05, 7.240299999999866e-05, 7.25560000000014e-05, 7.212499999999927e-05, 7.380599999999918e-05, 7.226399999999897e-05, 7.218099999999755e-05, 7.24170000000017e-05, 7.198599999999958e-05, 7.381899999999927e-05, 7.373599999999786e-05, 7.267999999999858e-05, 7.208300000000056e-05, 7.38049999999997e-05, 7.270800000000119e-05, 7.380600000000265e-05, 7.187499999999902e-05, 7.381899999999927e-05, 7.19439999999974e-05, 7.192999999999783e-05, 7.379199999999961e-05, 7.216700000000145e-05, 7.266699999999848e-05, 7.237499999999952e-05, 7.244500000000084e-05, 7.227800000000201e-05, 7.218100000000102e-05, 7.384699999999841e-05, 7.25560000000014e-05, 7.242999999999833e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.762" endtime="20201112 09:44:00.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.757" endtime="20201112 09:44:00.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.767" endtime="20201112 09:44:00.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.770" endtime="20201112 09:44:00.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.769" endtime="20201112 09:44:00.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.765" endtime="20201112 09:44:00.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.397" endtime="20201112 09:44:00.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.396" endtime="20201112 09:44:00.791"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.800" endtime="20201112 09:44:00.819"></status>
</kw>
<msg timestamp="20201112 09:44:00.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.798" endtime="20201112 09:44:00.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.821" endtime="20201112 09:44:00.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.823" endtime="20201112 09:44:00.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.795" endtime="20201112 09:44:00.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.793" endtime="20201112 09:44:00.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.833" endtime="20201112 09:44:01.119"></status>
</kw>
<msg timestamp="20201112 09:44:01.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.831" endtime="20201112 09:44:01.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019752833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019826389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.123" endtime="20201112 09:44:01.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.131" endtime="20201112 09:44:01.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.829" endtime="20201112 09:44:01.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.827" endtime="20201112 09:44:01.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.138" level="INFO">${RESULT} = [{'time': 0.019826389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.355599999999893e-05, 'source_diff': 7.355599999999893e-05}, {'time': 0.019903417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.134" endtime="20201112 09:44:01.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.151" level="INFO">${ACCURACY} = {'source_diff': [7.355599999999893e-05, 7.370899999999819e-05, 7.334700000000138e-05, 7.362500000000077e-05, 7.308400000000104e-05, 7.351300000000074e-05, 7.32370000000003e-05, 7.331899999999877e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:01.139" endtime="20201112 09:44:01.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.156" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.155" endtime="20201112 09:44:01.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.158" level="INFO">VALUE: [7.355599999999893e-05, 7.370899999999819e-05, 7.334700000000138e-05, 7.362500000000077e-05, 7.308400000000104e-05, 7.351300000000074e-05, 7.32370000000003e-05, 7.331899999999877e-05, 7.311099999999723e-05, 7.363899999999687e-05, 7.305499999999895e-05, 7.373600000000133e-05, 7.333299999999834e-05, 7.312500000000027e-05, 7.286100000000045e-05, 7.362500000000077e-05, 7.372200000000176e-05, 7.482000000000322e-05, 7.331999999999825e-05, 7.363899999999687e-05, 7.344499999999837e-05, 7.372200000000176e-05, 7.300000000000015e-05, 7.309800000000061e-05, 7.318099999999855e-05, 7.479200000000061e-05, 7.320799999999822e-05, 7.34300000000028e-05, 7.29300000000023e-05, 7.342999999999933e-05, 7.313899999999984e-05, 7.366699999999948e-05, 7.284700000000088e-05, 7.372300000000123e-05, 7.359699999999816e-05, 7.287500000000002e-05, 7.362500000000077e-05, 7.474999999999843e-05, 7.337500000000052e-05, 7.348600000000108e-05, 7.331999999999825e-05, 7.287500000000002e-05, 7.305599999999843e-05, 7.336100000000095e-05, 7.362500000000077e-05, 7.298600000000058e-05, 7.305499999999895e-05, 7.35690000000025e-05, 7.362500000000077e-05, 7.334700000000138e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.157" endtime="20201112 09:44:01.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.152" endtime="20201112 09:44:01.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.162" endtime="20201112 09:44:01.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.165" endtime="20201112 09:44:01.184"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.163" endtime="20201112 09:44:01.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.160" endtime="20201112 09:44:01.185"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.792" endtime="20201112 09:44:01.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.791" endtime="20201112 09:44:01.186"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.194" endtime="20201112 09:44:01.213"></status>
</kw>
<msg timestamp="20201112 09:44:01.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.193" endtime="20201112 09:44:01.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.214" endtime="20201112 09:44:01.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.217" endtime="20201112 09:44:01.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.190" endtime="20201112 09:44:01.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.188" endtime="20201112 09:44:01.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.227" endtime="20201112 09:44:01.511"></status>
</kw>
<msg timestamp="20201112 09:44:01.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.225" endtime="20201112 09:44:01.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.516" endtime="20201112 09:44:01.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.524" endtime="20201112 09:44:01.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.223" endtime="20201112 09:44:01.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.221" endtime="20201112 09:44:01.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.530" level="INFO">${RESULT} = [{'time': 0.019700611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.466700000000048e-05, 'source_diff': 7.466700000000048e-05}, {'time': 0.019779653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.527" endtime="20201112 09:44:01.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.546" level="INFO">${ACCURACY} = {'source_diff': [7.466700000000048e-05, 7.418099999999955e-05, 7.58050000000017e-05, 7.436100000000195e-05, 7.580600000000118e-05, 7.437499999999805e-05, 7.468100000000005e-05, 7.40829999999991e-05, 7...</msg>
<status status="PASS" starttime="20201112 09:44:01.531" endtime="20201112 09:44:01.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.552" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.550" endtime="20201112 09:44:01.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.555" level="INFO">VALUE: [7.466700000000048e-05, 7.418099999999955e-05, 7.58050000000017e-05, 7.436100000000195e-05, 7.580600000000118e-05, 7.437499999999805e-05, 7.468100000000005e-05, 7.40829999999991e-05, 7.445899999999894e-05, 7.430599999999968e-05, 7.429200000000011e-05, 7.447299999999851e-05, 7.443000000000033e-05, 7.39439999999994e-05, 7.45699999999995e-05, 7.455500000000045e-05, 7.429100000000063e-05, 7.388900000000059e-05, 7.41110000000017e-05, 7.426400000000097e-05, 7.437499999999805e-05, 7.399999999999768e-05, 7.405599999999943e-05, 7.42500000000014e-05, 7.459699999999916e-05, 7.388900000000059e-05, 7.447199999999904e-05, 7.469499999999962e-05, 7.580600000000118e-05, 7.469499999999962e-05, 7.392999999999983e-05, 7.419399999999965e-05, 7.448599999999861e-05, 7.394400000000287e-05, 7.476400000000147e-05, 7.387500000000102e-05, 7.459699999999916e-05, 7.387499999999755e-05, 7.580499999999823e-05, 7.452800000000079e-05, 7.426400000000097e-05, 7.41249999999978e-05, 7.455599999999993e-05, 7.461099999999873e-05, 7.404199999999986e-05, 7.455599999999993e-05, 7.583300000000084e-05, 7.394499999999887e-05, 7.411199999999771e-05, 7.434799999999839e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.553" endtime="20201112 09:44:01.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.547" endtime="20201112 09:44:01.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.559" endtime="20201112 09:44:01.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.564" endtime="20201112 09:44:01.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.562" endtime="20201112 09:44:01.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.557" endtime="20201112 09:44:01.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.187" endtime="20201112 09:44:01.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.186" endtime="20201112 09:44:01.588"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.600" endtime="20201112 09:44:01.620"></status>
</kw>
<msg timestamp="20201112 09:44:01.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.599" endtime="20201112 09:44:01.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.622" endtime="20201112 09:44:01.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.624" endtime="20201112 09:44:01.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.595" endtime="20201112 09:44:01.627"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.592" endtime="20201112 09:44:01.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.634" endtime="20201112 09:44:01.919"></status>
</kw>
<msg timestamp="20201112 09:44:01.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026425681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026500917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.633" endtime="20201112 09:44:01.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026425681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026500917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.923" endtime="20201112 09:44:01.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.931" endtime="20201112 09:44:01.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.630" endtime="20201112 09:44:01.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.629" endtime="20201112 09:44:01.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.938" level="INFO">${RESULT} = [{'time': 0.026500917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.523599999999936e-05, 'source_diff': 7.523599999999936e-05}, {'time': 0.026581931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.935" endtime="20201112 09:44:01.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.951" level="INFO">${ACCURACY} = {'source_diff': [7.523599999999936e-05, 7.523699999999883e-05, 7.679199999999914e-05, 7.54310000000008e-05, 7.519400000000065e-05, 7.493000000000083e-05, 7.498599999999911e-05, 7.49440000000004e-05, 7...</msg>
<status status="PASS" starttime="20201112 09:44:01.939" endtime="20201112 09:44:01.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.956" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.955" endtime="20201112 09:44:01.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.958" level="INFO">VALUE: [7.523599999999936e-05, 7.523699999999883e-05, 7.679199999999914e-05, 7.54310000000008e-05, 7.519400000000065e-05, 7.493000000000083e-05, 7.498599999999911e-05, 7.49440000000004e-05, 7.55830000000006e-05, 7.559700000000016e-05, 7.549999999999918e-05, 7.534699999999991e-05, 7.551399999999875e-05, 7.54310000000008e-05, 7.544500000000037e-05, 7.679200000000261e-05, 7.54029999999982e-05, 7.486199999999846e-05, 7.52370000000023e-05, 7.516700000000098e-05, 7.519400000000065e-05, 7.537499999999905e-05, 7.488800000000212e-05, 7.531900000000077e-05, 7.518000000000108e-05, 7.499999999999868e-05, 7.519400000000065e-05, 7.524999999999893e-05, 7.509700000000313e-05, 7.518100000000055e-05, 7.486099999999898e-05, 7.56249999999993e-05, 7.52639999999985e-05, 7.544500000000037e-05, 7.537499999999905e-05, 7.52630000000025e-05, 7.495799999999997e-05, 7.516600000000151e-05, 7.537499999999905e-05, 7.534699999999991e-05, 7.507e-05, 7.554099999999841e-05, 7.563899999999887e-05, 7.548599999999961e-05, 7.543000000000133e-05, 7.68189999999988e-05, 7.548599999999961e-05, 7.548599999999961e-05, 7.512500000000227e-05, 7.566700000000148e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.957" endtime="20201112 09:44:01.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.952" endtime="20201112 09:44:01.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.962" endtime="20201112 09:44:01.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.965" endtime="20201112 09:44:01.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.964" endtime="20201112 09:44:01.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.960" endtime="20201112 09:44:01.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.590" endtime="20201112 09:44:01.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.589" endtime="20201112 09:44:01.986"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.994" endtime="20201112 09:44:02.014"></status>
</kw>
<msg timestamp="20201112 09:44:02.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.993" endtime="20201112 09:44:02.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.015" endtime="20201112 09:44:02.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.018" endtime="20201112 09:44:02.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.990" endtime="20201112 09:44:02.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.988" endtime="20201112 09:44:02.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.028" endtime="20201112 09:44:02.312"></status>
</kw>
<msg timestamp="20201112 09:44:02.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.026" endtime="20201112 09:44:02.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.316" endtime="20201112 09:44:02.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.325" endtime="20201112 09:44:02.326"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.024" endtime="20201112 09:44:02.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.022" endtime="20201112 09:44:02.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.331" level="INFO">${RESULT} = [{'time': 0.019702708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.7764000000001e-05, 'source_diff': 7.7764000000001e-05}, {'time': 0.01978475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201112 09:44:02.328" endtime="20201112 09:44:02.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.345" level="INFO">${ACCURACY} = {'source_diff': [7.7764000000001e-05, 7.601399999999925e-05, 7.592999999999836e-05, 7.598600000000011e-05, 7.650000000000018e-05, 7.666700000000248e-05, 7.611100000000023e-05, 7.587499999999955e-05, 7...</msg>
<status status="PASS" starttime="20201112 09:44:02.332" endtime="20201112 09:44:02.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.349" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.348" endtime="20201112 09:44:02.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.352" level="INFO">VALUE: [7.7764000000001e-05, 7.601399999999925e-05, 7.592999999999836e-05, 7.598600000000011e-05, 7.650000000000018e-05, 7.666700000000248e-05, 7.611100000000023e-05, 7.587499999999955e-05, 7.655599999999846e-05, 7.643099999999833e-05, 7.591599999999879e-05, 7.784700000000241e-05, 7.604200000000186e-05, 7.7764000000001e-05, 7.598600000000011e-05, 7.636100000000048e-05, 7.606900000000152e-05, 7.661100000000073e-05, 7.62639999999995e-05, 7.655600000000193e-05, 7.654199999999889e-05, 7.65969999999977e-05, 7.61249999999998e-05, 7.591699999999826e-05, 7.648600000000061e-05, 7.609700000000066e-05, 7.61249999999998e-05, 7.609700000000066e-05, 7.648600000000061e-05, 7.604200000000186e-05, 7.595800000000097e-05, 7.652799999999932e-05, 7.62639999999995e-05, 7.654199999999889e-05, 7.642999999999886e-05, 7.6764e-05, 7.675000000000043e-05, 7.64029999999992e-05, 7.598600000000011e-05, 7.783399999999885e-05, 7.616699999999851e-05, 7.599999999999968e-05, 7.77770000000011e-05, 7.627799999999907e-05, 7.611100000000023e-05, 7.613900000000284e-05, 7.624999999999993e-05, 7.604199999999839e-05, 7.636100000000048e-05, 7.62769999999996e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.350" endtime="20201112 09:44:02.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.345" endtime="20201112 09:44:02.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.362" endtime="20201112 09:44:02.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.365" endtime="20201112 09:44:02.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.364" endtime="20201112 09:44:02.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.360" endtime="20201112 09:44:02.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.987" endtime="20201112 09:44:02.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.986" endtime="20201112 09:44:02.386"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.395" endtime="20201112 09:44:02.414"></status>
</kw>
<msg timestamp="20201112 09:44:02.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.393" endtime="20201112 09:44:02.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.415" endtime="20201112 09:44:02.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.418" endtime="20201112 09:44:02.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.391" endtime="20201112 09:44:02.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.389" endtime="20201112 09:44:02.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.428" endtime="20201112 09:44:02.713"></status>
</kw>
<msg timestamp="20201112 09:44:02.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01980675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:02.426" endtime="20201112 09:44:02.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01980675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019884306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:02.717" endtime="20201112 09:44:02.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.726" endtime="20201112 09:44:02.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.424" endtime="20201112 09:44:02.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.422" endtime="20201112 09:44:02.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.732" level="INFO">${RESULT} = [{'time': 0.019884306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.755599999999946e-05, 'source_diff': 7.755599999999946e-05}, {'time': 0.019966319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.729" endtime="20201112 09:44:02.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.746" level="INFO">${ACCURACY} = {'source_diff': [7.755599999999946e-05, 7.71250000000008e-05, 7.744399999999943e-05, 7.741600000000029e-05, 7.873599999999939e-05, 7.723600000000136e-05, 7.883300000000037e-05, 7.768099999999958e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:02.733" endtime="20201112 09:44:02.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.750" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.749" endtime="20201112 09:44:02.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.753" level="INFO">VALUE: [7.755599999999946e-05, 7.71250000000008e-05, 7.744399999999943e-05, 7.741600000000029e-05, 7.873599999999939e-05, 7.723600000000136e-05, 7.883300000000037e-05, 7.768099999999958e-05, 7.74449999999989e-05, 7.693099999999883e-05, 7.71250000000008e-05, 7.698599999999764e-05, 7.76389999999974e-05, 7.709799999999767e-05, 7.719499999999865e-05, 7.71250000000008e-05, 7.687500000000055e-05, 7.708299999999862e-05, 7.88190000000008e-05, 7.69579999999985e-05, 7.687500000000055e-05, 7.762499999999783e-05, 7.74030000000002e-05, 7.722200000000179e-05, 7.8764000000002e-05, 7.752800000000032e-05, 7.700000000000068e-05, 7.723600000000136e-05, 7.750000000000118e-05, 7.873600000000286e-05, 7.699999999999721e-05, 7.879199999999767e-05, 7.747300000000151e-05, 7.768099999999958e-05, 7.750000000000118e-05, 7.741600000000029e-05, 7.754100000000042e-05, 7.700000000000068e-05, 7.876399999999853e-05, 7.747199999999857e-05, 7.706900000000252e-05, 7.701400000000025e-05, 7.763900000000087e-05, 7.737500000000105e-05, 7.69310000000023e-05, 7.741699999999976e-05, 7.691699999999926e-05, 7.748600000000161e-05, 7.705599999999896e-05, 7.769399999999968e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.751" endtime="20201112 09:44:02.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.747" endtime="20201112 09:44:02.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.756" endtime="20201112 09:44:02.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.760" endtime="20201112 09:44:02.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.758" endtime="20201112 09:44:02.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.755" endtime="20201112 09:44:02.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.387" endtime="20201112 09:44:02.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.386" endtime="20201112 09:44:02.780"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.789" endtime="20201112 09:44:02.809"></status>
</kw>
<msg timestamp="20201112 09:44:02.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.787" endtime="20201112 09:44:02.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.811" endtime="20201112 09:44:02.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.813" endtime="20201112 09:44:02.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.785" endtime="20201112 09:44:02.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.783" endtime="20201112 09:44:02.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.823" endtime="20201112 09:44:03.109"></status>
</kw>
<msg timestamp="20201112 09:44:03.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.821" endtime="20201112 09:44:03.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019668014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019746111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.113" endtime="20201112 09:44:03.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.121" endtime="20201112 09:44:03.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.819" endtime="20201112 09:44:03.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.817" endtime="20201112 09:44:03.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.128" level="INFO">${RESULT} = [{'time': 0.019746111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.80969999999992e-05, 'source_diff': 7.80969999999992e-05}, {'time': 0.019827097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:03.124" endtime="20201112 09:44:03.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.142" level="INFO">${ACCURACY} = {'source_diff': [7.80969999999992e-05, 7.866599999999807e-05, 7.974999999999996e-05, 7.82779999999976e-05, 7.79449999999994e-05, 7.837500000000205e-05, 7.841700000000076e-05, 7.866600000000154e-05, 7....</msg>
<status status="PASS" starttime="20201112 09:44:03.129" endtime="20201112 09:44:03.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.146" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.145" endtime="20201112 09:44:03.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.149" level="INFO">VALUE: [7.80969999999992e-05, 7.866599999999807e-05, 7.974999999999996e-05, 7.82779999999976e-05, 7.79449999999994e-05, 7.837500000000205e-05, 7.841700000000076e-05, 7.866600000000154e-05, 7.861099999999926e-05, 7.808400000000257e-05, 7.827699999999813e-05, 7.805500000000049e-05, 7.806900000000006e-05, 7.859700000000316e-05, 7.798599999999864e-05, 7.848599999999914e-05, 7.873599999999939e-05, 7.818000000000061e-05, 7.791600000000079e-05, 7.981899999999834e-05, 7.834700000000291e-05, 7.795899999999897e-05, 7.841700000000076e-05, 7.80839999999991e-05, 7.805599999999996e-05, 7.784799999999842e-05, 7.841700000000076e-05, 7.837499999999858e-05, 7.980500000000224e-05, 7.980600000000171e-05, 7.799999999999821e-05, 7.861100000000273e-05, 7.790199999999775e-05, 7.795800000000297e-05, 7.812499999999833e-05, 7.97779999999991e-05, 7.838900000000162e-05, 7.805599999999996e-05, 7.84169999999973e-05, 7.822200000000279e-05, 7.797200000000254e-05, 7.844500000000337e-05, 7.840299999999772e-05, 7.980599999999824e-05, 7.981999999999781e-05, 7.976399999999953e-05, 7.804100000000092e-05, 7.786100000000198e-05, 7.866599999999807e-05, 7.840299999999772e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.147" endtime="20201112 09:44:03.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.143" endtime="20201112 09:44:03.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.152" endtime="20201112 09:44:03.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.156" endtime="20201112 09:44:03.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.154" endtime="20201112 09:44:03.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.151" endtime="20201112 09:44:03.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.781" endtime="20201112 09:44:03.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.781" endtime="20201112 09:44:03.177"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.185" endtime="20201112 09:44:03.204"></status>
</kw>
<msg timestamp="20201112 09:44:03.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.184" endtime="20201112 09:44:03.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.206" endtime="20201112 09:44:03.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.208" endtime="20201112 09:44:03.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.181" endtime="20201112 09:44:03.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.179" endtime="20201112 09:44:03.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.218" endtime="20201112 09:44:03.504"></status>
</kw>
<msg timestamp="20201112 09:44:03.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.217" endtime="20201112 09:44:03.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.508" endtime="20201112 09:44:03.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.516" endtime="20201112 09:44:03.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.214" endtime="20201112 09:44:03.519"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.212" endtime="20201112 09:44:03.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.523" level="INFO">${RESULT} = [{'time': 0.019711625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.940299999999872e-05, 'source_diff': 7.940299999999872e-05}, {'time': 0.019795597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:03.520" endtime="20201112 09:44:03.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.536" level="INFO">${ACCURACY} = {'source_diff': [7.940299999999872e-05, 8.07910000000002e-05, 8.073599999999792e-05, 7.92779999999986e-05, 7.956899999999809e-05, 7.962499999999983e-05, 7.966700000000201e-05, 7.916699999999804e-05, 7...</msg>
<status status="PASS" starttime="20201112 09:44:03.524" endtime="20201112 09:44:03.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.541" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.540" endtime="20201112 09:44:03.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.543" level="INFO">VALUE: [7.940299999999872e-05, 8.07910000000002e-05, 8.073599999999792e-05, 7.92779999999986e-05, 7.956899999999809e-05, 7.962499999999983e-05, 7.966700000000201e-05, 7.916699999999804e-05, 7.886099999999951e-05, 7.899999999999921e-05, 7.905600000000096e-05, 7.888899999999865e-05, 7.927800000000207e-05, 7.905599999999749e-05, 7.949999999999971e-05, 8.073600000000139e-05, 7.899999999999921e-05, 7.90970000000002e-05, 7.916600000000204e-05, 7.951399999999928e-05, 7.933300000000088e-05, 7.970800000000125e-05, 7.887499999999908e-05, 7.887499999999908e-05, 8.073600000000139e-05, 7.90840000000001e-05, 7.968100000000158e-05, 7.906900000000106e-05, 7.962499999999983e-05, 7.961199999999974e-05, 7.892999999999789e-05, 7.930500000000174e-05, 7.972200000000082e-05, 7.919399999999771e-05, 7.954100000000242e-05, 7.952799999999885e-05, 7.934700000000044e-05, 7.915299999999847e-05, 7.898599999999964e-05, 7.89030000000017e-05, 7.970900000000072e-05, 7.962499999999983e-05, 7.898599999999964e-05, 7.966699999999854e-05, 7.904200000000139e-05, 7.893100000000083e-05, 7.936199999999949e-05, 7.90970000000002e-05, 8.07910000000002e-05, 7.898599999999964e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.542" endtime="20201112 09:44:03.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.537" endtime="20201112 09:44:03.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.547" endtime="20201112 09:44:03.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.550" endtime="20201112 09:44:03.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.549" endtime="20201112 09:44:03.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.545" endtime="20201112 09:44:03.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.177" endtime="20201112 09:44:03.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.177" endtime="20201112 09:44:03.571"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.580" endtime="20201112 09:44:03.599"></status>
</kw>
<msg timestamp="20201112 09:44:03.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.578" endtime="20201112 09:44:03.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.601" endtime="20201112 09:44:03.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.604" endtime="20201112 09:44:03.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.575" endtime="20201112 09:44:03.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.573" endtime="20201112 09:44:03.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.615" endtime="20201112 09:44:03.900"></status>
</kw>
<msg timestamp="20201112 09:44:03.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.613" endtime="20201112 09:44:03.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.904" endtime="20201112 09:44:03.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.912" endtime="20201112 09:44:03.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.610" endtime="20201112 09:44:03.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.608" endtime="20201112 09:44:03.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.919" level="INFO">${RESULT} = [{'time': 0.019873931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.070900000000172e-05, 'source_diff': 8.070900000000172e-05}, {'time': 0.019958931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:03.915" endtime="20201112 09:44:03.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.932" level="INFO">${ACCURACY} = {'source_diff': [8.070900000000172e-05, 8.009800000000067e-05, 8.042999999999939e-05, 8.008299999999816e-05, 8.00970000000012e-05, 7.998600000000064e-05, 8.180500000000077e-05, 8.008300000000163e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:03.920" endtime="20201112 09:44:03.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.937" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.936" endtime="20201112 09:44:03.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.939" level="INFO">VALUE: [8.070900000000172e-05, 8.009800000000067e-05, 8.042999999999939e-05, 8.008299999999816e-05, 8.00970000000012e-05, 7.998600000000064e-05, 8.180500000000077e-05, 8.008300000000163e-05, 8.017999999999914e-05, 8.031899999999884e-05, 8.030600000000221e-05, 8.005599999999849e-05, 8.050000000000071e-05, 8.038900000000015e-05, 7.998599999999717e-05, 8.029199999999917e-05, 8.024999999999699e-05, 7.988899999999965e-05, 8.072199999999835e-05, 8.017999999999914e-05, 7.981899999999834e-05, 7.988899999999965e-05, 8.044400000000243e-05, 8.015300000000294e-05, 7.993099999999836e-05, 8.033300000000188e-05, 8.04719999999981e-05, 8.026400000000003e-05, 8.037499999999712e-05, 8.073600000000139e-05, 8.008399999999763e-05, 8.176400000000153e-05, 8.037499999999712e-05, 8.066699999999954e-05, 8.037500000000058e-05, 8.044399999999896e-05, 8.037500000000058e-05, 8.01389999999999e-05, 8.02779999999996e-05, 8.18049999999973e-05, 7.993099999999836e-05, 8.016700000000251e-05, 8.012500000000033e-05, 8.180599999999677e-05, 8.031999999999831e-05, 8.023600000000089e-05, 8.058299999999866e-05, 8.040200000000025e-05, 8.067999999999964e-05, 8.050000000000071e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.938" endtime="20201112 09:44:03.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.933" endtime="20201112 09:44:03.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.943" endtime="20201112 09:44:03.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.946" endtime="20201112 09:44:03.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.945" endtime="20201112 09:44:03.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.941" endtime="20201112 09:44:03.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.572" endtime="20201112 09:44:03.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.571" endtime="20201112 09:44:03.967"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.976" endtime="20201112 09:44:03.995"></status>
</kw>
<msg timestamp="20201112 09:44:03.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.974" endtime="20201112 09:44:03.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.996" endtime="20201112 09:44:03.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.999" endtime="20201112 09:44:04.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.972" endtime="20201112 09:44:04.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.969" endtime="20201112 09:44:04.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.009" endtime="20201112 09:44:04.294"></status>
</kw>
<msg timestamp="20201112 09:44:04.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.007" endtime="20201112 09:44:04.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019846861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.298" endtime="20201112 09:44:04.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.306" endtime="20201112 09:44:04.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.005" endtime="20201112 09:44:04.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.003" endtime="20201112 09:44:04.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.313" level="INFO">${RESULT} = [{'time': 0.019846861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.156900000000009e-05, 'source_diff': 8.156900000000009e-05}, {'time': 0.019930875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:04.310" endtime="20201112 09:44:04.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.326" level="INFO">${ACCURACY} = {'source_diff': [8.156900000000009e-05, 8.105599999999949e-05, 8.280600000000124e-05, 8.273599999999992e-05, 8.159699999999923e-05, 8.097200000000207e-05, 8.141600000000082e-05, 8.155599999999999e-05,...</msg>
<status status="PASS" starttime="20201112 09:44:04.314" endtime="20201112 09:44:04.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.331" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.330" endtime="20201112 09:44:04.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.333" level="INFO">VALUE: [8.156900000000009e-05, 8.105599999999949e-05, 8.280600000000124e-05, 8.273599999999992e-05, 8.159699999999923e-05, 8.097200000000207e-05, 8.141600000000082e-05, 8.155599999999999e-05, 8.155499999999705e-05, 8.172299999999882e-05, 8.099999999999774e-05, 8.115199999999753e-05, 8.273599999999992e-05, 8.170799999999978e-05, 8.111100000000177e-05, 8.283299999999744e-05, 8.131899999999984e-05, 8.149999999999824e-05, 8.281999999999734e-05, 8.13329999999994e-05, 8.112500000000133e-05, 8.173600000000239e-05, 8.117999999999667e-05, 8.11109999999983e-05, 8.086100000000151e-05, 8.1152000000001e-05, 8.149999999999824e-05, 8.162499999999837e-05, 8.279200000000167e-05, 8.144399999999996e-05, 8.130500000000027e-05, 8.154100000000095e-05, 8.112500000000133e-05, 8.151399999999781e-05, 8.173600000000239e-05, 8.105599999999949e-05, 8.143099999999986e-05, 8.111100000000177e-05, 8.169499999999968e-05, 8.173599999999892e-05, 8.141699999999683e-05, 8.138899999999769e-05, 8.092999999999989e-05, 8.092999999999989e-05, 8.123600000000189e-05, 8.27910000000022e-05, 8.119399999999971e-05, 8.134700000000245e-05, 8.136099999999855e-05, 8.104199999999992e-05]</msg>
<status status="PASS" starttime="20201112 09:44:04.332" endtime="20201112 09:44:04.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.327" endtime="20201112 09:44:04.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.337" endtime="20201112 09:44:04.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.340" endtime="20201112 09:44:04.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.339" endtime="20201112 09:44:04.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.335" endtime="20201112 09:44:04.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.968" endtime="20201112 09:44:04.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.967" endtime="20201112 09:44:04.361"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.370" endtime="20201112 09:44:04.389"></status>
</kw>
<msg timestamp="20201112 09:44:04.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.368" endtime="20201112 09:44:04.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.390" endtime="20201112 09:44:04.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.393" endtime="20201112 09:44:04.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.365" endtime="20201112 09:44:04.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.363" endtime="20201112 09:44:04.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.403" endtime="20201112 09:44:04.689"></status>
</kw>
<msg timestamp="20201112 09:44:04.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019727819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.401" endtime="20201112 09:44:04.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019645319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019727819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.693" endtime="20201112 09:44:04.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.701" endtime="20201112 09:44:04.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.398" endtime="20201112 09:44:04.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.397" endtime="20201112 09:44:04.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.708" level="INFO">${RESULT} = [{'time': 0.019727819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.249999999999924e-05, 'source_diff': 8.249999999999924e-05}, {'time': 0.019812861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:04.704" endtime="20201112 09:44:04.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.722" level="INFO">${ACCURACY} = {'source_diff': [8.249999999999924e-05, 8.279200000000167e-05, 8.184799999999895e-05, 8.258299999999719e-05, 8.230500000000127e-05, 8.251399999999881e-05, 8.208300000000016e-05, 8.218100000000061e-05,...</msg>
<status status="PASS" starttime="20201112 09:44:04.709" endtime="20201112 09:44:04.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.727" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.726" endtime="20201112 09:44:04.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.729" level="INFO">VALUE: [8.249999999999924e-05, 8.279200000000167e-05, 8.184799999999895e-05, 8.258299999999719e-05, 8.230500000000127e-05, 8.251399999999881e-05, 8.208300000000016e-05, 8.218100000000061e-05, 8.266600000000207e-05, 8.226299999999909e-05, 8.194400000000046e-05, 8.258400000000013e-05, 8.204099999999798e-05, 8.188900000000165e-05, 8.199999999999874e-05, 8.230600000000074e-05, 8.230600000000074e-05, 8.250000000000271e-05, 8.249999999999924e-05, 8.225000000000246e-05, 8.188900000000165e-05, 8.204099999999798e-05, 8.236099999999955e-05, 8.230500000000127e-05, 8.252799999999838e-05, 8.215300000000147e-05, 8.193100000000036e-05, 8.226399999999856e-05, 8.230600000000074e-05, 8.244500000000043e-05, 8.259700000000023e-05, 8.268100000000111e-05, 8.262499999999937e-05, 8.184800000000242e-05, 8.220899999999975e-05, 8.244399999999749e-05, 8.234699999999998e-05, 8.236099999999955e-05, 8.234699999999998e-05, 8.223600000000289e-05, 8.190299999999776e-05, 8.238899999999869e-05, 8.26109999999998e-05, 8.195800000000003e-05, 8.257000000000056e-05, 8.380599999999877e-05, 8.224999999999899e-05, 8.24170000000013e-05, 8.26390000000024e-05, 8.223700000000236e-05]</msg>
<status status="PASS" starttime="20201112 09:44:04.728" endtime="20201112 09:44:04.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.723" endtime="20201112 09:44:04.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.733" endtime="20201112 09:44:04.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.736" endtime="20201112 09:44:04.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.734" endtime="20201112 09:44:04.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.731" endtime="20201112 09:44:04.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.362" endtime="20201112 09:44:04.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.361" endtime="20201112 09:44:04.757"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.765" endtime="20201112 09:44:04.785"></status>
</kw>
<msg timestamp="20201112 09:44:04.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.764" endtime="20201112 09:44:04.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.787" endtime="20201112 09:44:04.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.789" endtime="20201112 09:44:04.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.761" endtime="20201112 09:44:04.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.759" endtime="20201112 09:44:04.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.799" endtime="20201112 09:44:05.084"></status>
</kw>
<msg timestamp="20201112 09:44:05.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019680042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.798" endtime="20201112 09:44:05.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019680042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019763028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.088" endtime="20201112 09:44:05.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.096" endtime="20201112 09:44:05.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.795" endtime="20201112 09:44:05.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.793" endtime="20201112 09:44:05.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.103" level="INFO">${RESULT} = [{'time': 0.019763028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.298600000000017e-05, 'source_diff': 8.298600000000017e-05}, {'time': 0.019849097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.100" endtime="20201112 09:44:05.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.116" level="INFO">${ACCURACY} = {'source_diff': [8.298600000000017e-05, 8.337500000000012e-05, 8.330600000000174e-05, 8.294499999999747e-05, 8.482000000000281e-05, 8.355499999999905e-05, 8.291599999999885e-05, 8.293000000000189e-05,...</msg>
<status status="PASS" starttime="20201112 09:44:05.104" endtime="20201112 09:44:05.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.121" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.120" endtime="20201112 09:44:05.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.123" level="INFO">VALUE: [8.298600000000017e-05, 8.337500000000012e-05, 8.330600000000174e-05, 8.294499999999747e-05, 8.482000000000281e-05, 8.355499999999905e-05, 8.291599999999885e-05, 8.293000000000189e-05, 8.324999999999999e-05, 8.331900000000184e-05, 8.294399999999799e-05, 8.375000000000049e-05, 8.3152999999999e-05, 8.369499999999822e-05, 8.372200000000135e-05, 8.319500000000118e-05, 8.308300000000116e-05, 8.298600000000017e-05, 8.313899999999944e-05, 8.29720000000006e-05, 8.294500000000093e-05, 8.319499999999772e-05, 8.337500000000012e-05, 8.324999999999999e-05, 8.308300000000116e-05, 8.340299999999926e-05, 8.334700000000098e-05, 8.33049999999988e-05, 8.331899999999837e-05, 8.350000000000024e-05, 8.36249999999969e-05, 8.362500000000037e-05, 8.354200000000242e-05, 8.343100000000186e-05, 8.323600000000042e-05, 8.338800000000021e-05, 8.3152999999999e-05, 8.370799999999831e-05, 8.29720000000006e-05, 8.306899999999812e-05, 8.305499999999855e-05, 8.33469999999975e-05, 8.358299999999819e-05, 8.481899999999987e-05, 8.306899999999812e-05, 8.350000000000024e-05, 8.298600000000017e-05, 8.284700000000048e-05, 8.288900000000265e-05, 8.299999999999974e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.122" endtime="20201112 09:44:05.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.117" endtime="20201112 09:44:05.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.127" endtime="20201112 09:44:05.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.130" endtime="20201112 09:44:05.149"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.129" endtime="20201112 09:44:05.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.125" endtime="20201112 09:44:05.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.758" endtime="20201112 09:44:05.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.757" endtime="20201112 09:44:05.151"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.160" endtime="20201112 09:44:05.179"></status>
</kw>
<msg timestamp="20201112 09:44:05.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.158" endtime="20201112 09:44:05.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.181" endtime="20201112 09:44:05.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.183" endtime="20201112 09:44:05.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.155" endtime="20201112 09:44:05.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.153" endtime="20201112 09:44:05.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.193" endtime="20201112 09:44:05.478"></status>
</kw>
<msg timestamp="20201112 09:44:05.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.192" endtime="20201112 09:44:05.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019776972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.482" endtime="20201112 09:44:05.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.490" endtime="20201112 09:44:05.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.189" endtime="20201112 09:44:05.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.187" endtime="20201112 09:44:05.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.497" level="INFO">${RESULT} = [{'time': 0.019860917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.394499999999847e-05, 'source_diff': 8.394499999999847e-05}, {'time': 0.019948958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.494" endtime="20201112 09:44:05.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.510" level="INFO">${ACCURACY} = {'source_diff': [8.394499999999847e-05, 8.445799999999906e-05, 8.46660000000006e-05, 8.445799999999906e-05, 8.462500000000137e-05, 8.462500000000137e-05, 8.395799999999856e-05, 8.444400000000296e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:05.498" endtime="20201112 09:44:05.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.515" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.514" endtime="20201112 09:44:05.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.517" level="INFO">VALUE: [8.394499999999847e-05, 8.445799999999906e-05, 8.46660000000006e-05, 8.445799999999906e-05, 8.462500000000137e-05, 8.462500000000137e-05, 8.395799999999856e-05, 8.444400000000296e-05, 8.57920000000012e-05, 8.419499999999872e-05, 8.580600000000077e-05, 8.425000000000099e-05, 8.476400000000106e-05, 8.443100000000286e-05, 8.437499999999765e-05, 8.455599999999952e-05, 8.418099999999915e-05, 8.441699999999983e-05, 8.579100000000173e-05, 8.474999999999802e-05, 8.425000000000099e-05, 8.408299999999869e-05, 8.46660000000006e-05, 8.43049999999998e-05, 8.431999999999884e-05, 8.394499999999847e-05, 8.447199999999863e-05, 8.412500000000087e-05, 8.409699999999826e-05, 8.473599999999845e-05, 8.466700000000008e-05, 8.440300000000026e-05, 8.440300000000026e-05, 8.46110000000018e-05, 8.398600000000117e-05, 8.402799999999988e-05, 8.417999999999967e-05, 8.427800000000013e-05, 8.426400000000056e-05, 8.418099999999915e-05, 8.466700000000008e-05, 8.397199999999813e-05, 8.454199999999995e-05, 8.412500000000087e-05, 8.456999999999909e-05, 8.427700000000066e-05, 8.436200000000102e-05, 8.466700000000008e-05, 8.574999999999902e-05, 8.461099999999833e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.516" endtime="20201112 09:44:05.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.511" endtime="20201112 09:44:05.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.521" endtime="20201112 09:44:05.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.524" endtime="20201112 09:44:05.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.523" endtime="20201112 09:44:05.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.519" endtime="20201112 09:44:05.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.152" endtime="20201112 09:44:05.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.151" endtime="20201112 09:44:05.545"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.553" endtime="20201112 09:44:05.573"></status>
</kw>
<msg timestamp="20201112 09:44:05.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.552" endtime="20201112 09:44:05.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.575" endtime="20201112 09:44:05.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.577" endtime="20201112 09:44:05.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.549" endtime="20201112 09:44:05.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.547" endtime="20201112 09:44:05.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.587" endtime="20201112 09:44:05.871"></status>
</kw>
<msg timestamp="20201112 09:44:05.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019703236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.586" endtime="20201112 09:44:05.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019703236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019788667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.875" endtime="20201112 09:44:05.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.884" endtime="20201112 09:44:05.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.583" endtime="20201112 09:44:05.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.581" endtime="20201112 09:44:05.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.890" level="INFO">${RESULT} = [{'time': 0.019788667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.54310000000004e-05, 'source_diff': 8.54310000000004e-05}, {'time': 0.019877653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:05.887" endtime="20201112 09:44:05.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.903" level="INFO">${ACCURACY} = {'source_diff': [8.54310000000004e-05, 8.515299999999754e-05, 8.490200000000128e-05, 8.523599999999895e-05, 8.538900000000169e-05, 8.51110000000023e-05, 8.566599999999813e-05, 8.509699999999926e-05, 8...</msg>
<status status="PASS" starttime="20201112 09:44:05.891" endtime="20201112 09:44:05.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.908" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.907" endtime="20201112 09:44:05.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.911" level="INFO">VALUE: [8.54310000000004e-05, 8.515299999999754e-05, 8.490200000000128e-05, 8.523599999999895e-05, 8.538900000000169e-05, 8.51110000000023e-05, 8.566599999999813e-05, 8.509699999999926e-05, 8.543000000000092e-05, 8.494499999999947e-05, 8.544400000000049e-05, 8.536099999999908e-05, 8.500000000000174e-05, 8.505600000000002e-05, 8.68059999999983e-05, 8.536100000000255e-05, 8.538900000000169e-05, 8.573699999999893e-05, 8.499999999999827e-05, 8.677799999999916e-05, 8.511099999999883e-05, 8.558300000000019e-05, 8.498600000000217e-05, 8.522199999999938e-05, 8.492999999999695e-05, 8.51799999999972e-05, 8.576399999999859e-05, 8.536099999999908e-05, 8.568100000000065e-05, 8.573599999999945e-05, 8.523599999999895e-05, 8.56249999999989e-05, 8.488900000000119e-05, 8.531999999999984e-05, 8.543000000000092e-05, 8.569399999999727e-05, 8.540299999999779e-05, 8.526400000000156e-05, 8.537499999999865e-05, 8.506900000000012e-05, 8.530499999999733e-05, 8.530600000000027e-05, 8.565299999999804e-05, 8.530600000000027e-05, 8.523599999999895e-05, 8.54310000000004e-05, 8.53469999999995e-05, 8.522199999999938e-05, 8.54310000000004e-05, 8.54310000000004e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.909" endtime="20201112 09:44:05.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.904" endtime="20201112 09:44:05.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.914" endtime="20201112 09:44:05.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.917" endtime="20201112 09:44:05.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.916" endtime="20201112 09:44:05.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.913" endtime="20201112 09:44:05.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.546" endtime="20201112 09:44:05.938"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.545" endtime="20201112 09:44:05.938"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.947" endtime="20201112 09:44:05.967"></status>
</kw>
<msg timestamp="20201112 09:44:05.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.945" endtime="20201112 09:44:05.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.969" endtime="20201112 09:44:05.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.971" endtime="20201112 09:44:05.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.943" endtime="20201112 09:44:05.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.941" endtime="20201112 09:44:05.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.981" endtime="20201112 09:44:06.265"></status>
</kw>
<msg timestamp="20201112 09:44:06.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019761889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.980" endtime="20201112 09:44:06.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019675389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019761889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.270" endtime="20201112 09:44:06.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.278" endtime="20201112 09:44:06.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.977" endtime="20201112 09:44:06.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.975" endtime="20201112 09:44:06.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.284" level="INFO">${RESULT} = [{'time': 0.019761889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.649999999999977e-05, 'source_diff': 8.649999999999977e-05}, {'time': 0.019853889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.281" endtime="20201112 09:44:06.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.299" level="INFO">${ACCURACY} = {'source_diff': [8.649999999999977e-05, 8.618100000000115e-05, 8.630600000000127e-05, 8.66249999999999e-05, 8.64730000000001e-05, 8.61119999999993e-05, 8.599999999999927e-05, 8.63050000000018e-05, 8.5...</msg>
<status status="PASS" starttime="20201112 09:44:06.285" endtime="20201112 09:44:06.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.303" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.302" endtime="20201112 09:44:06.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.306" level="INFO">VALUE: [8.649999999999977e-05, 8.618100000000115e-05, 8.630600000000127e-05, 8.66249999999999e-05, 8.64730000000001e-05, 8.61119999999993e-05, 8.599999999999927e-05, 8.63050000000018e-05, 8.594399999999752e-05, 8.666599999999913e-05, 8.61249999999994e-05, 8.780499999999983e-05, 8.61799999999982e-05, 8.638899999999922e-05, 8.66249999999999e-05, 8.618099999999768e-05, 8.620800000000081e-05, 8.619500000000072e-05, 8.663799999999999e-05, 8.588900000000219e-05, 8.618000000000167e-05, 8.6153000000002e-05, 8.600000000000274e-05, 8.619399999999777e-05, 8.609700000000026e-05, 8.627800000000213e-05, 8.776400000000059e-05, 8.624999999999952e-05, 8.649999999999977e-05, 8.668100000000165e-05, 8.783399999999844e-05, 8.777700000000069e-05, 8.649999999999977e-05, 8.669499999999775e-05, 8.618100000000115e-05, 8.594399999999752e-05, 8.592999999999795e-05, 8.61110000000033e-05, 8.774999999999755e-05, 8.590199999999881e-05, 8.597200000000013e-05, 8.602799999999841e-05, 8.623699999999943e-05, 8.637499999999965e-05, 8.655600000000152e-05, 8.604200000000145e-05, 8.605600000000102e-05, 8.595900000000004e-05, 8.607000000000059e-05, 8.590199999999881e-05]</msg>
<status status="PASS" starttime="20201112 09:44:06.304" endtime="20201112 09:44:06.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.300" endtime="20201112 09:44:06.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.309" endtime="20201112 09:44:06.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.313" endtime="20201112 09:44:06.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.311" endtime="20201112 09:44:06.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.308" endtime="20201112 09:44:06.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.939" endtime="20201112 09:44:06.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.939" endtime="20201112 09:44:06.333"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.342" endtime="20201112 09:44:06.362"></status>
</kw>
<msg timestamp="20201112 09:44:06.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.341" endtime="20201112 09:44:06.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.364" endtime="20201112 09:44:06.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.366" endtime="20201112 09:44:06.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.338" endtime="20201112 09:44:06.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.336" endtime="20201112 09:44:06.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.376" endtime="20201112 09:44:06.662"></status>
</kw>
<msg timestamp="20201112 09:44:06.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019738347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.375" endtime="20201112 09:44:06.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019738347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019825403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.667" endtime="20201112 09:44:06.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.675" endtime="20201112 09:44:06.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.372" endtime="20201112 09:44:06.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.371" endtime="20201112 09:44:06.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.682" level="INFO">${RESULT} = [{'time': 0.019825403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.705599999999855e-05, 'source_diff': 8.705599999999855e-05}, {'time': 0.019917389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.678" endtime="20201112 09:44:06.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.695" level="INFO">${ACCURACY} = {'source_diff': [8.705599999999855e-05, 8.730600000000227e-05, 8.705599999999855e-05, 8.694500000000147e-05, 8.74730000000011e-05, 8.773700000000093e-05, 8.755499999999958e-05, 8.875000000000202e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:06.683" endtime="20201112 09:44:06.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.699" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.698" endtime="20201112 09:44:06.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.702" level="INFO">VALUE: [8.705599999999855e-05, 8.730600000000227e-05, 8.705599999999855e-05, 8.694500000000147e-05, 8.74730000000011e-05, 8.773700000000093e-05, 8.755499999999958e-05, 8.875000000000202e-05, 8.713899999999997e-05, 8.770800000000231e-05, 8.877800000000116e-05, 8.772199999999841e-05, 8.720900000000129e-05, 8.704199999999898e-05, 8.706900000000212e-05, 8.725000000000052e-05, 8.754100000000001e-05, 8.71250000000004e-05, 8.729099999999976e-05, 8.761100000000133e-05, 8.69860000000007e-05, 8.74449999999985e-05, 8.701399999999984e-05, 8.719399999999877e-05, 8.874999999999855e-05, 8.738900000000022e-05, 8.71799999999992e-05, 8.722199999999791e-05, 8.719499999999825e-05, 8.761100000000133e-05, 8.693099999999843e-05, 8.738900000000022e-05, 8.697200000000113e-05, 8.883399999999944e-05, 8.705600000000202e-05, 8.705599999999855e-05, 8.744399999999902e-05, 8.686100000000058e-05, 8.706900000000212e-05, 8.701399999999984e-05, 8.693000000000242e-05, 8.705499999999908e-05, 8.733300000000194e-05, 8.7638999999997e-05, 8.773599999999798e-05, 8.719499999999825e-05, 8.708400000000116e-05, 8.770799999999884e-05, 8.733399999999794e-05, 8.759800000000123e-05]</msg>
<status status="PASS" starttime="20201112 09:44:06.700" endtime="20201112 09:44:06.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.696" endtime="20201112 09:44:06.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.705" endtime="20201112 09:44:06.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.709" endtime="20201112 09:44:06.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.707" endtime="20201112 09:44:06.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.704" endtime="20201112 09:44:06.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.334" endtime="20201112 09:44:06.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.334" endtime="20201112 09:44:06.730"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.738" endtime="20201112 09:44:06.758"></status>
</kw>
<msg timestamp="20201112 09:44:06.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.737" endtime="20201112 09:44:06.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.759" endtime="20201112 09:44:06.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.762" endtime="20201112 09:44:06.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.734" endtime="20201112 09:44:06.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.732" endtime="20201112 09:44:06.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.772" endtime="20201112 09:44:07.057"></status>
</kw>
<msg timestamp="20201112 09:44:07.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.770" endtime="20201112 09:44:07.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019734986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019823625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.062" endtime="20201112 09:44:07.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.070" endtime="20201112 09:44:07.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.768" endtime="20201112 09:44:07.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.766" endtime="20201112 09:44:07.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.076" level="INFO">${RESULT} = [{'time': 0.019823625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.863900000000147e-05, 'source_diff': 8.863900000000147e-05}, {'time': 0.019916625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:07.073" endtime="20201112 09:44:07.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.090" level="INFO">${ACCURACY} = {'source_diff': [8.863900000000147e-05, 8.797199999999866e-05, 8.868100000000018e-05, 8.83059999999998e-05, 8.983400000000044e-05, 8.798599999999823e-05, 8.862499999999843e-05, 8.855500000000058e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:07.077" endtime="20201112 09:44:07.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.094" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.093" endtime="20201112 09:44:07.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.097" level="INFO">VALUE: [8.863900000000147e-05, 8.797199999999866e-05, 8.868100000000018e-05, 8.83059999999998e-05, 8.983400000000044e-05, 8.798599999999823e-05, 8.862499999999843e-05, 8.855500000000058e-05, 8.792999999999995e-05, 8.797199999999866e-05, 8.829100000000076e-05, 8.986099999999664e-05, 8.806899999999965e-05, 8.836100000000208e-05, 8.822300000000186e-05, 8.979200000000173e-05, 8.804199999999998e-05, 8.855600000000005e-05, 8.806999999999912e-05, 8.837499999999818e-05, 8.861099999999886e-05, 8.836200000000155e-05, 8.975000000000302e-05, 8.866600000000113e-05, 8.813900000000097e-05, 8.837499999999818e-05, 8.787499999999768e-05, 8.79999999999978e-05, 8.862499999999843e-05, 8.862499999999843e-05, 8.823600000000195e-05, 8.807000000000259e-05, 8.874999999999855e-05, 8.875000000000202e-05, 8.98060000000013e-05, 8.809799999999826e-05, 8.854099999999754e-05, 8.825000000000152e-05, 8.822199999999891e-05, 8.836100000000208e-05, 8.83189999999999e-05, 8.866600000000113e-05, 8.98190000000014e-05, 8.850000000000177e-05, 8.83189999999999e-05, 8.848599999999873e-05, 8.829100000000076e-05, 8.791699999999986e-05, 8.812499999999793e-05, 8.831999999999937e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.095" endtime="20201112 09:44:07.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.091" endtime="20201112 09:44:07.098"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.100" endtime="20201112 09:44:07.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.103" endtime="20201112 09:44:07.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.102" endtime="20201112 09:44:07.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.099" endtime="20201112 09:44:07.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.731" endtime="20201112 09:44:07.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.730" endtime="20201112 09:44:07.124"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.133" endtime="20201112 09:44:07.153"></status>
</kw>
<msg timestamp="20201112 09:44:07.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.131" endtime="20201112 09:44:07.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.155" endtime="20201112 09:44:07.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.157" endtime="20201112 09:44:07.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.129" endtime="20201112 09:44:07.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.127" endtime="20201112 09:44:07.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.167" endtime="20201112 09:44:07.452"></status>
</kw>
<msg timestamp="20201112 09:44:07.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.166" endtime="20201112 09:44:07.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019749903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.456" endtime="20201112 09:44:07.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.465" endtime="20201112 09:44:07.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.163" endtime="20201112 09:44:07.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.161" endtime="20201112 09:44:07.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.471" level="INFO">${RESULT} = [{'time': 0.019749903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89999999999988e-05, 'source_diff': 8.89999999999988e-05}, {'time': 0.019844889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:07.468" endtime="20201112 09:44:07.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.484" level="INFO">${ACCURACY} = {'source_diff': [8.89999999999988e-05, 8.937500000000265e-05, 8.929199999999776e-05, 8.972200000000041e-05, 8.891700000000086e-05, 9.082000000000187e-05, 8.893099999999696e-05, 8.94450000000005e-05, 8...</msg>
<status status="PASS" starttime="20201112 09:44:07.472" endtime="20201112 09:44:07.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.489" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.488" endtime="20201112 09:44:07.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.491" level="INFO">VALUE: [8.89999999999988e-05, 8.937500000000265e-05, 8.929199999999776e-05, 8.972200000000041e-05, 8.891700000000086e-05, 9.082000000000187e-05, 8.893099999999696e-05, 8.94450000000005e-05, 8.943100000000093e-05, 8.954200000000148e-05, 8.891699999999739e-05, 8.941699999999789e-05, 8.96800000000017e-05, 9.079099999999979e-05, 8.94999999999993e-05, 8.94999999999993e-05, 8.969400000000127e-05, 8.916600000000163e-05, 8.925000000000252e-05, 8.906900000000065e-05, 8.943100000000093e-05, 8.952799999999844e-05, 8.936099999999961e-05, 8.904200000000098e-05, 8.952700000000244e-05, 8.923699999999896e-05, 8.947200000000016e-05, 8.891600000000138e-05, 8.908299999999675e-05, 8.965299999999857e-05, 9.079099999999979e-05, 8.958300000000072e-05, 8.962499999999943e-05, 8.943099999999746e-05, 8.887499999999868e-05, 8.908300000000022e-05, 8.900000000000227e-05, 8.919500000000025e-05, 8.940199999999884e-05, 8.951399999999887e-05, 8.931899999999743e-05, 8.886199999999858e-05, 8.905500000000108e-05, 8.890299999999782e-05, 8.888899999999825e-05, 8.938900000000222e-05, 8.923599999999948e-05, 8.94999999999993e-05, 8.891700000000086e-05, 8.905599999999708e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.490" endtime="20201112 09:44:07.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.485" endtime="20201112 09:44:07.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.499" endtime="20201112 09:44:07.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.503" endtime="20201112 09:44:07.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.501" endtime="20201112 09:44:07.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.498" endtime="20201112 09:44:07.523"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.125" endtime="20201112 09:44:07.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.125" endtime="20201112 09:44:07.524"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.532" endtime="20201112 09:44:07.553"></status>
</kw>
<msg timestamp="20201112 09:44:07.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.531" endtime="20201112 09:44:07.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.554" endtime="20201112 09:44:07.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.557" endtime="20201112 09:44:07.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.528" endtime="20201112 09:44:07.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.526" endtime="20201112 09:44:07.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.567" endtime="20201112 09:44:07.852"></status>
</kw>
<msg timestamp="20201112 09:44:07.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.565" endtime="20201112 09:44:07.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019905542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019995931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.857" endtime="20201112 09:44:07.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.865" endtime="20201112 09:44:07.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.563" endtime="20201112 09:44:07.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.561" endtime="20201112 09:44:07.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.872" level="INFO">${RESULT} = [{'time': 0.019995931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.038900000000322e-05, 'source_diff': 9.038900000000322e-05}, {'time': 0.020091931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:07.868" endtime="20201112 09:44:07.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.886" level="INFO">${ACCURACY} = {'source_diff': [9.038900000000322e-05, 8.9945000000001e-05, 9.063800000000052e-05, 9.041599999999941e-05, 9.176400000000112e-05, 9.001399999999937e-05, 8.998600000000023e-05, 9.055600000000205e-05, 9...</msg>
<status status="PASS" starttime="20201112 09:44:07.873" endtime="20201112 09:44:07.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.890" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.889" endtime="20201112 09:44:07.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.893" level="INFO">VALUE: [9.038900000000322e-05, 8.9945000000001e-05, 9.063800000000052e-05, 9.041599999999941e-05, 9.176400000000112e-05, 9.001399999999937e-05, 8.998600000000023e-05, 9.055600000000205e-05, 9.012499999999993e-05, 9.061100000000086e-05, 9.026399999999962e-05, 8.98060000000013e-05, 9.004199999999851e-05, 9.052799999999944e-05, 9.03060000000018e-05, 9.180599999999983e-05, 9.04450000000015e-05, 9.065299999999957e-05, 9.006900000000165e-05, 9.008300000000122e-05, 9.179100000000079e-05, 9.043100000000193e-05, 8.987499999999968e-05, 9.011100000000036e-05, 9.019400000000177e-05, 9.179200000000026e-05, 9.176400000000112e-05, 9.03060000000018e-05, 9.047200000000116e-05, 8.99999999999998e-05, 8.994499999999753e-05, 9.005500000000208e-05, 9.019400000000177e-05, 9.01800000000022e-05, 8.988900000000272e-05, 9.066599999999966e-05, 9.026399999999962e-05, 8.988899999999925e-05, 9.045799999999812e-05, 8.998600000000023e-05, 9.037500000000018e-05, 9.062500000000043e-05, 9.045800000000159e-05, 9.034700000000104e-05, 9.027799999999919e-05, 9.037500000000018e-05, 8.986100000000011e-05, 9.055499999999911e-05, 9.056899999999868e-05, 9.009700000000079e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.892" endtime="20201112 09:44:07.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.887" endtime="20201112 09:44:07.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.896" endtime="20201112 09:44:07.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.900" endtime="20201112 09:44:07.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.898" endtime="20201112 09:44:07.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.895" endtime="20201112 09:44:07.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.525" endtime="20201112 09:44:07.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.524" endtime="20201112 09:44:07.921"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.929" endtime="20201112 09:44:07.950"></status>
</kw>
<msg timestamp="20201112 09:44:07.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.928" endtime="20201112 09:44:07.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.951" endtime="20201112 09:44:07.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.954" endtime="20201112 09:44:07.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.925" endtime="20201112 09:44:07.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.923" endtime="20201112 09:44:07.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.964" endtime="20201112 09:44:08.250"></status>
</kw>
<msg timestamp="20201112 09:44:08.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01975975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:07.962" endtime="20201112 09:44:08.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01975975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019850611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:08.254" endtime="20201112 09:44:08.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.262" endtime="20201112 09:44:08.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.960" endtime="20201112 09:44:08.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.958" endtime="20201112 09:44:08.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.270" level="INFO">${RESULT} = [{'time': 0.019850611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.086100000000111e-05, 'source_diff': 9.086100000000111e-05}, {'time': 0.019945583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.266" endtime="20201112 09:44:08.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.283" level="INFO">${ACCURACY} = {'source_diff': [9.086100000000111e-05, 9.142999999999998e-05, 9.140300000000032e-05, 9.104199999999951e-05, 9.283299999999703e-05, 9.098599999999776e-05, 9.137500000000118e-05, 9.095799999999862e-05,...</msg>
<status status="PASS" starttime="20201112 09:44:08.271" endtime="20201112 09:44:08.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.287" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.286" endtime="20201112 09:44:08.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.290" level="INFO">VALUE: [9.086100000000111e-05, 9.142999999999998e-05, 9.140300000000032e-05, 9.104199999999951e-05, 9.283299999999703e-05, 9.098599999999776e-05, 9.137500000000118e-05, 9.095799999999862e-05, 9.133400000000194e-05, 9.175000000000155e-05, 9.169499999999928e-05, 9.097299999999767e-05, 9.143099999999946e-05, 9.106899999999918e-05, 9.281900000000093e-05, 9.149999999999783e-05, 9.161100000000186e-05, 9.116699999999964e-05, 9.113899999999703e-05, 9.105599999999908e-05, 9.173600000000198e-05, 9.162499999999796e-05, 9.166700000000014e-05, 9.130599999999933e-05, 9.116699999999964e-05, 9.286099999999964e-05, 9.168000000000023e-05, 9.084800000000101e-05, 9.154099999999707e-05, 9.094399999999905e-05, 9.124999999999758e-05, 9.143000000000345e-05, 9.136100000000161e-05, 9.152800000000044e-05, 9.111100000000136e-05, 9.161100000000186e-05, 9.173599999999851e-05, 9.284700000000007e-05, 9.105599999999908e-05, 9.098600000000123e-05, 9.156899999999968e-05, 9.152700000000097e-05, 9.162500000000143e-05, 9.120799999999887e-05, 9.273599999999951e-05, 9.182000000000287e-05, 9.125000000000105e-05, 9.142999999999998e-05, 9.13199999999989e-05, 9.105599999999908e-05]</msg>
<status status="PASS" starttime="20201112 09:44:08.289" endtime="20201112 09:44:08.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.284" endtime="20201112 09:44:08.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.294" endtime="20201112 09:44:08.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.297" endtime="20201112 09:44:08.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.295" endtime="20201112 09:44:08.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.292" endtime="20201112 09:44:08.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.922" endtime="20201112 09:44:08.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.921" endtime="20201112 09:44:08.318"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.326" endtime="20201112 09:44:08.346"></status>
</kw>
<msg timestamp="20201112 09:44:08.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.325" endtime="20201112 09:44:08.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.348" endtime="20201112 09:44:08.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.351" endtime="20201112 09:44:08.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.322" endtime="20201112 09:44:08.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.320" endtime="20201112 09:44:08.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.360" endtime="20201112 09:44:08.647"></status>
</kw>
<msg timestamp="20201112 09:44:08.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.359" endtime="20201112 09:44:08.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020027944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.651" endtime="20201112 09:44:08.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.659" endtime="20201112 09:44:08.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.356" endtime="20201112 09:44:08.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.355" endtime="20201112 09:44:08.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.666" level="INFO">${RESULT} = [{'time': 0.020027944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.211099999999889e-05, 'source_diff': 9.211099999999889e-05}, {'time': 0.020125944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.663" endtime="20201112 09:44:08.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.679" level="INFO">${ACCURACY} = {'source_diff': [9.211099999999889e-05, 9.199999999999833e-05, 9.255500000000111e-05, 9.231900000000043e-05, 9.256900000000068e-05, 9.20000000000018e-05, 9.236100000000261e-05, 9.237500000000218e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:08.667" endtime="20201112 09:44:08.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.684" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.683" endtime="20201112 09:44:08.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.687" level="INFO">VALUE: [9.211099999999889e-05, 9.199999999999833e-05, 9.255500000000111e-05, 9.231900000000043e-05, 9.256900000000068e-05, 9.20000000000018e-05, 9.236100000000261e-05, 9.237500000000218e-05, 9.220799999999987e-05, 9.2639000000002e-05, 9.23199999999999e-05, 9.384800000000054e-05, 9.379200000000226e-05, 9.25269999999985e-05, 9.266700000000114e-05, 9.237500000000218e-05, 9.259699999999982e-05, 9.193099999999996e-05, 9.270800000000037e-05, 9.243000000000098e-05, 9.211099999999889e-05, 9.376399999999965e-05, 9.268100000000071e-05, 9.266699999999767e-05, 9.38339999999975e-05, 9.255599999999711e-05, 9.249999999999883e-05, 9.218100000000021e-05, 9.262500000000243e-05, 9.234699999999957e-05, 9.248599999999926e-05, 9.248599999999926e-05, 9.201400000000137e-05, 9.26529999999981e-05, 9.20000000000018e-05, 9.187500000000168e-05, 9.230600000000033e-05, 9.222199999999944e-05, 9.261099999999939e-05, 9.212500000000193e-05, 9.24589999999996e-05, 9.212500000000193e-05, 9.245800000000012e-05, 9.225000000000205e-05, 9.20000000000018e-05, 9.206900000000018e-05, 9.224999999999858e-05, 9.256900000000068e-05, 9.230500000000086e-05, 9.262499999999896e-05]</msg>
<status status="PASS" starttime="20201112 09:44:08.685" endtime="20201112 09:44:08.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.680" endtime="20201112 09:44:08.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.691" endtime="20201112 09:44:08.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.695" endtime="20201112 09:44:08.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.693" endtime="20201112 09:44:08.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.689" endtime="20201112 09:44:08.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.319" endtime="20201112 09:44:08.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.318" endtime="20201112 09:44:08.716"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.725" endtime="20201112 09:44:08.745"></status>
</kw>
<msg timestamp="20201112 09:44:08.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.723" endtime="20201112 09:44:08.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.747" endtime="20201112 09:44:08.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.750" endtime="20201112 09:44:08.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.721" endtime="20201112 09:44:08.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.718" endtime="20201112 09:44:08.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.759" endtime="20201112 09:44:09.045"></status>
</kw>
<msg timestamp="20201112 09:44:09.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.758" endtime="20201112 09:44:09.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020109986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.049" endtime="20201112 09:44:09.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.057" endtime="20201112 09:44:09.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.755" endtime="20201112 09:44:09.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.754" endtime="20201112 09:44:09.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.064" level="INFO">${RESULT} = [{'time': 0.020109986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.475000000000108e-05, 'source_diff': 9.475000000000108e-05}, {'time': 0.020207, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:44:09.061" endtime="20201112 09:44:09.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.077" level="INFO">${ACCURACY} = {'source_diff': [9.475000000000108e-05, 9.287499999999921e-05, 9.369500000000128e-05, 9.481999999999893e-05, 9.287500000000268e-05, 9.363899999999953e-05, 9.324999999999958e-05, 9.297299999999967e-05,...</msg>
<status status="PASS" starttime="20201112 09:44:09.065" endtime="20201112 09:44:09.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.082" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.081" endtime="20201112 09:44:09.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.084" level="INFO">VALUE: [9.475000000000108e-05, 9.287499999999921e-05, 9.369500000000128e-05, 9.481999999999893e-05, 9.287500000000268e-05, 9.363899999999953e-05, 9.324999999999958e-05, 9.297299999999967e-05, 9.306899999999771e-05, 9.347199999999722e-05, 9.298599999999976e-05, 9.319399999999783e-05, 9.284700000000007e-05, 9.313899999999903e-05, 9.286099999999964e-05, 9.37079999999979e-05, 9.330599999999786e-05, 9.29590000000001e-05, 9.295799999999715e-05, 9.320800000000087e-05, 9.363800000000005e-05, 9.368100000000171e-05, 9.344400000000155e-05, 9.311099999999989e-05, 9.369399999999833e-05, 9.286099999999964e-05, 9.36940000000018e-05, 9.358300000000125e-05, 9.362499999999996e-05, 9.323600000000001e-05, 9.352799999999897e-05, 9.369500000000128e-05, 9.358400000000072e-05, 9.288899999999878e-05, 9.324999999999958e-05, 9.319399999999783e-05, 9.480499999999989e-05, 9.284700000000007e-05, 9.35139999999994e-05, 9.35139999999994e-05, 9.367999999999876e-05, 9.481900000000293e-05, 9.31940000000013e-05, 9.294500000000053e-05, 9.372200000000094e-05, 9.286099999999964e-05, 9.322299999999992e-05, 9.336100000000014e-05, 9.305599999999761e-05, 9.336099999999667e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.083" endtime="20201112 09:44:09.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.078" endtime="20201112 09:44:09.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.088" endtime="20201112 09:44:09.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.091" endtime="20201112 09:44:09.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.090" endtime="20201112 09:44:09.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.086" endtime="20201112 09:44:09.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.717" endtime="20201112 09:44:09.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.716" endtime="20201112 09:44:09.112"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.121" endtime="20201112 09:44:09.141"></status>
</kw>
<msg timestamp="20201112 09:44:09.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.119" endtime="20201112 09:44:09.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.142" endtime="20201112 09:44:09.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.145" endtime="20201112 09:44:09.147"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.116" endtime="20201112 09:44:09.148"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.114" endtime="20201112 09:44:09.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.155" endtime="20201112 09:44:09.440"></status>
</kw>
<msg timestamp="20201112 09:44:09.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.153" endtime="20201112 09:44:09.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.444" endtime="20201112 09:44:09.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.453" endtime="20201112 09:44:09.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.151" endtime="20201112 09:44:09.455"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.149" endtime="20201112 09:44:09.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.459" level="INFO">${RESULT} = [{'time': 0.019881042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.470900000000185e-05, 'source_diff': 9.470900000000185e-05}, {'time': 0.019979028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.456" endtime="20201112 09:44:09.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.474" level="INFO">${ACCURACY} = {'source_diff': [9.470900000000185e-05, 9.391699999999892e-05, 9.392999999999901e-05, 9.411200000000036e-05, 9.395799999999815e-05, 9.411100000000089e-05, 9.581900000000046e-05, 9.408299999999828e-05,...</msg>
<status status="PASS" starttime="20201112 09:44:09.460" endtime="20201112 09:44:09.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.478" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.477" endtime="20201112 09:44:09.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.481" level="INFO">VALUE: [9.470900000000185e-05, 9.391699999999892e-05, 9.392999999999901e-05, 9.411200000000036e-05, 9.395799999999815e-05, 9.411100000000089e-05, 9.581900000000046e-05, 9.408299999999828e-05, 9.408299999999828e-05, 9.400000000000033e-05, 9.394499999999806e-05, 9.455599999999911e-05, 9.405599999999861e-05, 9.574999999999861e-05, 9.404200000000251e-05, 9.387500000000021e-05, 9.580600000000036e-05, 9.423700000000049e-05, 9.462500000000096e-05, 9.455499999999964e-05, 9.39720000000012e-05, 9.449999999999736e-05, 9.408300000000175e-05, 9.422200000000144e-05, 9.430499999999939e-05, 9.418100000000221e-05, 9.437500000000071e-05, 9.416700000000264e-05, 9.405499999999914e-05, 9.466699999999967e-05, 9.466699999999967e-05, 9.426300000000068e-05, 9.4333000000002e-05, 9.459700000000182e-05, 9.445799999999865e-05, 9.441599999999994e-05, 9.398600000000076e-05, 9.466699999999967e-05, 9.455599999999911e-05, 9.394499999999806e-05, 9.400000000000033e-05, 9.391699999999892e-05, 9.469500000000228e-05, 9.579199999999732e-05, 9.468099999999924e-05, 9.436100000000114e-05, 9.463900000000053e-05, 9.43469999999981e-05, 9.417999999999926e-05, 9.442999999999951e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.479" endtime="20201112 09:44:09.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.475" endtime="20201112 09:44:09.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.484" endtime="20201112 09:44:09.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.488" endtime="20201112 09:44:09.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.486" endtime="20201112 09:44:09.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.483" endtime="20201112 09:44:09.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.113" endtime="20201112 09:44:09.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.112" endtime="20201112 09:44:09.509"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.517" endtime="20201112 09:44:09.537"></status>
</kw>
<msg timestamp="20201112 09:44:09.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.516" endtime="20201112 09:44:09.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.539" endtime="20201112 09:44:09.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.541" endtime="20201112 09:44:09.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.513" endtime="20201112 09:44:09.544"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.511" endtime="20201112 09:44:09.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.551" endtime="20201112 09:44:09.837"></status>
</kw>
<msg timestamp="20201112 09:44:09.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.550" endtime="20201112 09:44:09.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.842" endtime="20201112 09:44:09.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.850" endtime="20201112 09:44:09.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.547" endtime="20201112 09:44:09.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.545" endtime="20201112 09:44:09.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.856" level="INFO">${RESULT} = [{'time': 0.019916139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.58469999999996e-05, 'source_diff': 9.58469999999996e-05}, {'time': 0.020014153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:09.853" endtime="20201112 09:44:09.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.870" level="INFO">${ACCURACY} = {'source_diff': [9.58469999999996e-05, 9.537499999999824e-05, 9.573599999999904e-05, 9.562499999999849e-05, 9.512500000000146e-05, 9.573600000000251e-05, 9.513899999999756e-05, 9.512500000000146e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:09.857" endtime="20201112 09:44:09.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.874" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.873" endtime="20201112 09:44:09.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.877" level="INFO">VALUE: [9.58469999999996e-05, 9.537499999999824e-05, 9.573599999999904e-05, 9.562499999999849e-05, 9.512500000000146e-05, 9.573600000000251e-05, 9.513899999999756e-05, 9.512500000000146e-05, 9.505500000000014e-05, 9.679099999999885e-05, 9.505500000000014e-05, 9.488900000000078e-05, 9.54720000000027e-05, 9.513899999999756e-05, 9.518099999999974e-05, 9.531999999999943e-05, 9.552800000000097e-05, 9.674999999999961e-05, 9.501300000000143e-05, 9.49729999999982e-05, 9.525000000000158e-05, 9.523600000000201e-05, 9.524999999999811e-05, 9.681900000000146e-05, 9.561100000000239e-05, 9.511099999999842e-05, 9.556999999999968e-05, 9.672200000000047e-05, 9.494500000000253e-05, 9.544499999999956e-05, 9.499999999999786e-05, 9.568100000000024e-05, 9.530599999999986e-05, 9.491699999999992e-05, 9.486099999999817e-05, 9.494399999999958e-05, 9.504100000000057e-05, 9.520800000000287e-05, 9.53469999999991e-05, 9.486099999999817e-05, 9.572300000000242e-05, 9.57079999999999e-05, 9.512500000000146e-05, 9.494499999999906e-05, 9.679199999999832e-05, 9.484800000000154e-05, 9.526300000000168e-05, 9.544400000000008e-05, 9.488900000000078e-05, 9.67920000000018e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.875" endtime="20201112 09:44:09.877"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.871" endtime="20201112 09:44:09.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.880" endtime="20201112 09:44:09.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.884" endtime="20201112 09:44:09.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.882" endtime="20201112 09:44:09.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.879" endtime="20201112 09:44:09.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.509" endtime="20201112 09:44:09.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.509" endtime="20201112 09:44:09.904"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.913" endtime="20201112 09:44:09.934"></status>
</kw>
<msg timestamp="20201112 09:44:09.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.911" endtime="20201112 09:44:09.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.935" endtime="20201112 09:44:09.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.938" endtime="20201112 09:44:09.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.909" endtime="20201112 09:44:09.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.907" endtime="20201112 09:44:09.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.947" endtime="20201112 09:44:10.233"></status>
</kw>
<msg timestamp="20201112 09:44:10.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.946" endtime="20201112 09:44:10.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.237" endtime="20201112 09:44:10.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.245" endtime="20201112 09:44:10.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.943" endtime="20201112 09:44:10.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.942" endtime="20201112 09:44:10.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.252" level="INFO">${RESULT} = [{'time': 0.019925181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651399999999893e-05, 'source_diff': 9.651399999999893e-05}, {'time': 0.020024181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.248" endtime="20201112 09:44:10.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.265" level="INFO">${ACCURACY} = {'source_diff': [9.651399999999893e-05, 9.594500000000006e-05, 9.657000000000068e-05, 9.618100000000074e-05, 9.777799999999975e-05, 9.784699999999813e-05, 9.673600000000004e-05, 9.62920000000013e-05, ...</msg>
<status status="PASS" starttime="20201112 09:44:10.253" endtime="20201112 09:44:10.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.270" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.269" endtime="20201112 09:44:10.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.272" level="INFO">VALUE: [9.651399999999893e-05, 9.594500000000006e-05, 9.657000000000068e-05, 9.618100000000074e-05, 9.777799999999975e-05, 9.784699999999813e-05, 9.673600000000004e-05, 9.62920000000013e-05, 9.647200000000022e-05, 9.640300000000185e-05, 9.63059999999974e-05, 9.777799999999975e-05, 9.609699999999985e-05, 9.623599999999954e-05, 9.616599999999823e-05, 9.602800000000147e-05, 9.601299999999896e-05, 9.59859999999993e-05, 9.781899999999899e-05, 9.662499999999949e-05, 9.605500000000114e-05, 9.611099999999942e-05, 9.613900000000203e-05, 9.600000000000233e-05, 9.637499999999924e-05, 9.630600000000086e-05, 9.777799999999975e-05, 9.645900000000013e-05, 9.666599999999873e-05, 9.648699999999927e-05, 9.634799999999957e-05, 9.649999999999936e-05, 9.588899999999831e-05, 9.655499999999817e-05, 9.61799999999978e-05, 9.647200000000022e-05, 9.623599999999954e-05, 9.6027999999998e-05, 9.666700000000167e-05, 9.63470000000001e-05, 9.608300000000028e-05, 9.599999999999886e-05, 9.644500000000056e-05, 9.661199999999939e-05, 9.599999999999886e-05, 9.642999999999805e-05, 9.783300000000203e-05, 9.58469999999996e-05, 9.674999999999961e-05, 9.623600000000301e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.271" endtime="20201112 09:44:10.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.266" endtime="20201112 09:44:10.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.276" endtime="20201112 09:44:10.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.279" endtime="20201112 09:44:10.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.277" endtime="20201112 09:44:10.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.274" endtime="20201112 09:44:10.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.905" endtime="20201112 09:44:10.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.905" endtime="20201112 09:44:10.300"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.308" endtime="20201112 09:44:10.329"></status>
</kw>
<msg timestamp="20201112 09:44:10.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.307" endtime="20201112 09:44:10.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.330" endtime="20201112 09:44:10.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.333" endtime="20201112 09:44:10.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.304" endtime="20201112 09:44:10.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.302" endtime="20201112 09:44:10.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.343" endtime="20201112 09:44:10.628"></status>
</kw>
<msg timestamp="20201112 09:44:10.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.341" endtime="20201112 09:44:10.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.632" endtime="20201112 09:44:10.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.640" endtime="20201112 09:44:10.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.339" endtime="20201112 09:44:10.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.337" endtime="20201112 09:44:10.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.647" level="INFO">${RESULT} = [{'time': 0.019760347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.75409999999996e-05, 'source_diff': 9.75409999999996e-05}, {'time': 0.019863361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:10.644" endtime="20201112 09:44:10.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.660" level="INFO">${ACCURACY} = {'source_diff': [9.75409999999996e-05, 9.879200000000032e-05, 9.692999999999855e-05, 9.769399999999887e-05, 9.699999999999986e-05, 9.72219999999975e-05, 9.70140000000029e-05, 9.750000000000036e-05, 9....</msg>
<status status="PASS" starttime="20201112 09:44:10.648" endtime="20201112 09:44:10.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.665" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.664" endtime="20201112 09:44:10.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.667" level="INFO">VALUE: [9.75409999999996e-05, 9.879200000000032e-05, 9.692999999999855e-05, 9.769399999999887e-05, 9.699999999999986e-05, 9.72219999999975e-05, 9.70140000000029e-05, 9.750000000000036e-05, 9.768100000000224e-05, 9.754199999999907e-05, 9.692999999999855e-05, 9.876299999999824e-05, 9.761099999999745e-05, 9.762500000000049e-05, 9.75279999999995e-05, 9.881899999999999e-05, 9.720900000000088e-05, 9.687499999999974e-05, 9.707000000000118e-05, 9.699999999999986e-05, 9.754200000000254e-05, 9.737500000000024e-05, 9.738899999999981e-05, 9.693000000000201e-05, 9.692999999999855e-05, 9.709700000000085e-05, 9.687499999999974e-05, 9.69860000000003e-05, 9.694399999999812e-05, 9.699999999999986e-05, 9.732000000000143e-05, 9.715299999999913e-05, 9.88609999999987e-05, 9.775000000000061e-05, 9.725000000000011e-05, 9.691699999999845e-05, 9.762500000000049e-05, 9.71660000000027e-05, 9.694399999999812e-05, 9.748599999999732e-05, 9.741599999999948e-05, 9.744399999999862e-05, 9.699999999999986e-05, 9.773700000000052e-05, 9.736100000000067e-05, 9.725000000000011e-05, 9.708400000000075e-05, 9.718100000000174e-05, 9.688899999999931e-05, 9.731999999999796e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.666" endtime="20201112 09:44:10.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.661" endtime="20201112 09:44:10.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.671" endtime="20201112 09:44:10.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.674" endtime="20201112 09:44:10.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.673" endtime="20201112 09:44:10.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.669" endtime="20201112 09:44:10.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.301" endtime="20201112 09:44:10.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.300" endtime="20201112 09:44:10.695"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.704" endtime="20201112 09:44:10.724"></status>
</kw>
<msg timestamp="20201112 09:44:10.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.702" endtime="20201112 09:44:10.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.726" endtime="20201112 09:44:10.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.728" endtime="20201112 09:44:10.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.700" endtime="20201112 09:44:10.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.697" endtime="20201112 09:44:10.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.738" endtime="20201112 09:44:11.024"></status>
</kw>
<msg timestamp="20201112 09:44:11.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.737" endtime="20201112 09:44:11.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019798361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.029" endtime="20201112 09:44:11.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.037" endtime="20201112 09:44:11.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.734" endtime="20201112 09:44:11.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.733" endtime="20201112 09:44:11.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.043" level="INFO">${RESULT} = [{'time': 0.019798361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.858299999999931e-05, 'source_diff': 9.858299999999931e-05}, {'time': 0.019899347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.040" endtime="20201112 09:44:11.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.058" level="INFO">${ACCURACY} = {'source_diff': [9.858299999999931e-05, 9.806900000000271e-05, 9.812500000000099e-05, 9.811100000000142e-05, 9.83059999999994e-05, 9.838899999999734e-05, 9.800000000000086e-05, 9.82219999999985e-05, 9...</msg>
<status status="PASS" starttime="20201112 09:44:11.044" endtime="20201112 09:44:11.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.062" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.061" endtime="20201112 09:44:11.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.065" level="INFO">VALUE: [9.858299999999931e-05, 9.806900000000271e-05, 9.812500000000099e-05, 9.811100000000142e-05, 9.83059999999994e-05, 9.838899999999734e-05, 9.800000000000086e-05, 9.82219999999985e-05, 9.808300000000228e-05, 9.84999999999979e-05, 9.818099999999927e-05, 9.867999999999683e-05, 9.980500000000142e-05, 9.86800000000003e-05, 9.855500000000017e-05, 9.976400000000218e-05, 9.838900000000081e-05, 9.875000000000161e-05, 9.788900000000031e-05, 9.98060000000009e-05, 9.861100000000192e-05, 9.976400000000218e-05, 9.852799999999703e-05, 9.85410000000006e-05, 9.862500000000149e-05, 9.798599999999782e-05, 9.823599999999807e-05, 9.830499999999992e-05, 9.981900000000099e-05, 9.831899999999949e-05, 9.982000000000046e-05, 9.794499999999859e-05, 9.787500000000074e-05, 9.83609999999982e-05, 9.84999999999979e-05, 9.831899999999949e-05, 9.86670000000002e-05, 9.831899999999949e-05, 9.974999999999914e-05, 9.977800000000175e-05, 9.792999999999955e-05, 9.845800000000265e-05, 9.86670000000002e-05, 9.795800000000215e-05, 9.805600000000261e-05, 9.794499999999859e-05, 9.865300000000063e-05, 9.797199999999825e-05, 9.819499999999884e-05, 9.868099999999977e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.063" endtime="20201112 09:44:11.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.059" endtime="20201112 09:44:11.066"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.068" endtime="20201112 09:44:11.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.072" endtime="20201112 09:44:11.091"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.070" endtime="20201112 09:44:11.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.067" endtime="20201112 09:44:11.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.696" endtime="20201112 09:44:11.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.695" endtime="20201112 09:44:11.092"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.101" endtime="20201112 09:44:11.122"></status>
</kw>
<msg timestamp="20201112 09:44:11.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.100" endtime="20201112 09:44:11.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.123" endtime="20201112 09:44:11.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.126" endtime="20201112 09:44:11.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.097" endtime="20201112 09:44:11.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.095" endtime="20201112 09:44:11.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.136" endtime="20201112 09:44:11.421"></status>
</kw>
<msg timestamp="20201112 09:44:11.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.134" endtime="20201112 09:44:11.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.425" endtime="20201112 09:44:11.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.433" endtime="20201112 09:44:11.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.132" endtime="20201112 09:44:11.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.130" endtime="20201112 09:44:11.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.440" level="INFO">${RESULT} = [{'time': 0.019737875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.915299999999766e-05, 'source_diff': 9.915299999999766e-05}, {'time': 0.019842889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.437" endtime="20201112 09:44:11.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.453" level="INFO">${ACCURACY} = {'source_diff': [9.915299999999766e-05, 9.913899999999809e-05, 9.958399999999978e-05, 9.957000000000021e-05, 9.913900000000156e-05, 9.931999999999996e-05, 9.943100000000052e-05, 9.918100000000027e-05,...</msg>
<status status="PASS" starttime="20201112 09:44:11.441" endtime="20201112 09:44:11.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.458" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.457" endtime="20201112 09:44:11.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.460" level="INFO">VALUE: [9.915299999999766e-05, 9.913899999999809e-05, 9.958399999999978e-05, 9.957000000000021e-05, 9.913900000000156e-05, 9.931999999999996e-05, 9.943100000000052e-05, 9.918100000000027e-05, 9.925000000000211e-05, 9.929099999999788e-05, 9.905500000000067e-05, 9.956900000000074e-05, 9.90549999999972e-05, 9.90410000000011e-05, 9.919400000000037e-05, 9.905600000000014e-05, 9.962499999999902e-05, 9.974999999999914e-05, 0.00010075000000000014, 9.95419999999976e-05, 9.886199999999817e-05, 0.00010076300000000024, 9.937499999999877e-05, 9.912499999999852e-05, 9.98060000000009e-05, 9.958300000000031e-05, 9.934699999999963e-05, 9.905500000000067e-05, 9.89999999999984e-05, 9.95280000000015e-05, 9.958399999999978e-05, 9.894499999999959e-05, 9.94999999999989e-05, 9.94999999999989e-05, 9.906999999999971e-05, 9.909699999999938e-05, 9.88609999999987e-05, 0.00010083299999999809, 9.915200000000166e-05, 9.898599999999882e-05, 9.961099999999945e-05, 9.961099999999945e-05, 9.943100000000052e-05, 9.904200000000057e-05, 9.934699999999963e-05, 9.893100000000002e-05, 9.940199999999844e-05, 9.973699999999905e-05, 9.944399999999715e-05, 9.905500000000067e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.459" endtime="20201112 09:44:11.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.454" endtime="20201112 09:44:11.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.464" endtime="20201112 09:44:11.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.467" endtime="20201112 09:44:11.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.466" endtime="20201112 09:44:11.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.462" endtime="20201112 09:44:11.487"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.093" endtime="20201112 09:44:11.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.093" endtime="20201112 09:44:11.488"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.496" endtime="20201112 09:44:11.517"></status>
</kw>
<msg timestamp="20201112 09:44:11.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.495" endtime="20201112 09:44:11.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.519" endtime="20201112 09:44:11.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.521" endtime="20201112 09:44:11.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.492" endtime="20201112 09:44:11.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.490" endtime="20201112 09:44:11.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.531" endtime="20201112 09:44:11.817"></status>
</kw>
<msg timestamp="20201112 09:44:11.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.530" endtime="20201112 09:44:11.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.821" endtime="20201112 09:44:11.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.829" endtime="20201112 09:44:11.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.527" endtime="20201112 09:44:11.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.525" endtime="20201112 09:44:11.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.836" level="INFO">${RESULT} = [{'time': 0.019748583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.990199999999894e-05, 'source_diff': 9.990199999999894e-05}, {'time': 0.019854583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.833" endtime="20201112 09:44:11.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.849" level="INFO">${ACCURACY} = {'source_diff': [9.990199999999894e-05, 0.00010004099999999863, 9.988899999999884e-05, 0.00010011099999999995, 0.00010017999999999833, 0.0001005419999999986, 0.0001003060000000014, 0.00010012499999999...</msg>
<status status="PASS" starttime="20201112 09:44:11.837" endtime="20201112 09:44:11.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.853" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.852" endtime="20201112 09:44:11.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.856" level="INFO">VALUE: [9.990199999999894e-05, 0.00010004099999999863, 9.988899999999884e-05, 0.00010011099999999995, 0.00010017999999999833, 0.0001005419999999986, 0.0001003060000000014, 0.00010012499999999952, 0.00010012499999999952, 0.00010005599999999767, 0.0001004869999999998, 0.00010009700000000038, 0.00010044400000000162, 0.00010045800000000119, 0.00010043099999999805, 0.00010045800000000119, 0.00010012499999999952, 0.00010030499999999845, 9.988899999999884e-05, 0.00010041699999999848, 0.00010006900000000124, 9.997200000000026e-05, 0.00010059700000000088, 0.00010026400000000268, 9.987500000000274e-05, 0.00010180499999999995, 0.00010180499999999995, 9.994400000000112e-05, 0.00010002799999999853, 0.00010024999999999964, 0.0001005280000000025, 0.00010019500000000084, 9.998599999999983e-05, 0.00010045900000000066, 0.00010024999999999964, 0.00010180599999999942, 9.993100000000102e-05, 0.00010065299999999916, 0.0001018610000000017, 0.00010012499999999952, 0.00010026399999999921, 0.00010048600000000033, 0.00010067999999999883, 0.0001004999999999999, 0.00010020800000000094, 0.00010180599999999942, 0.00010024999999999964, 0.00010174999999999768, 0.00010020900000000041, 0.00010016599999999876]</msg>
<status status="PASS" starttime="20201112 09:44:11.855" endtime="20201112 09:44:11.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.850" endtime="20201112 09:44:11.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.859" endtime="20201112 09:44:11.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.863" endtime="20201112 09:44:11.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.861" endtime="20201112 09:44:11.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.858" endtime="20201112 09:44:11.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.489" endtime="20201112 09:44:11.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.488" endtime="20201112 09:44:11.884"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.892" endtime="20201112 09:44:11.913"></status>
</kw>
<msg timestamp="20201112 09:44:11.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.891" endtime="20201112 09:44:11.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.914" endtime="20201112 09:44:11.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.916" endtime="20201112 09:44:11.919"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.888" endtime="20201112 09:44:11.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.886" endtime="20201112 09:44:11.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.926" endtime="20201112 09:44:12.212"></status>
</kw>
<msg timestamp="20201112 09:44:12.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.925" endtime="20201112 09:44:12.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019760833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.216" endtime="20201112 09:44:12.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.224" endtime="20201112 09:44:12.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.922" endtime="20201112 09:44:12.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.921" endtime="20201112 09:44:12.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.231" level="INFO">${RESULT} = [{'time': 0.019760833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010124999999999718, 'source_diff': 0.00010124999999999718}, {'time': 0.019865833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:12.227" endtime="20201112 09:44:12.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.244" level="INFO">${ACCURACY} = {'source_diff': [0.00010124999999999718, 0.00010130499999999945, 0.00010142999999999958, 0.00010116599999999976, 0.00010137500000000077, 0.00010147199999999829, 0.0001017359999999981, 0.00010133399999...</msg>
<status status="PASS" starttime="20201112 09:44:12.232" endtime="20201112 09:44:12.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.248" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.247" endtime="20201112 09:44:12.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.251" level="INFO">VALUE: [0.00010124999999999718, 0.00010130499999999945, 0.00010142999999999958, 0.00010116599999999976, 0.00010137500000000077, 0.00010147199999999829, 0.0001017359999999981, 0.00010133399999999806, 0.0001011809999999988, 0.00010137500000000077, 0.00010091700000000245, 0.00010155599999999917, 0.0001010000000000004, 0.00010167999999999983, 0.00010112500000000052, 0.0001012359999999976, 0.00010277800000000128, 0.00010137500000000077, 0.00010130599999999892, 0.00010112500000000052, 0.00010162499999999755, 0.00010098600000000083, 0.00010163900000000059, 0.00010166699999999973, 0.0001016809999999993, 0.00010126300000000074, 0.00010144400000000262, 0.00010094400000000212, 0.00010138900000000034, 0.00010281899999999705, 0.00010095800000000169, 0.00010173600000000158, 0.0001016809999999993, 0.00010162499999999755, 0.00010130599999999892, 0.00010161099999999798, 0.0001010549999999992, 0.00010125000000000065, 0.0001010549999999992, 0.00010156899999999927, 0.00010120799999999847, 0.00010151400000000046, 0.00010137500000000077, 0.00010102799999999953, 0.00010280599999999696, 0.00010088899999999984, 0.00010105599999999867, 0.00010159699999999841, 0.00010113900000000009, 0.00010161199999999745]</msg>
<status status="PASS" starttime="20201112 09:44:12.249" endtime="20201112 09:44:12.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.245" endtime="20201112 09:44:12.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.254" endtime="20201112 09:44:12.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.257" endtime="20201112 09:44:12.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.256" endtime="20201112 09:44:12.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.253" endtime="20201112 09:44:12.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.884" endtime="20201112 09:44:12.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.884" endtime="20201112 09:44:12.278"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.287" endtime="20201112 09:44:12.308"></status>
</kw>
<msg timestamp="20201112 09:44:12.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.285" endtime="20201112 09:44:12.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.309" endtime="20201112 09:44:12.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.312" endtime="20201112 09:44:12.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.283" endtime="20201112 09:44:12.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.281" endtime="20201112 09:44:12.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.322" endtime="20201112 09:44:12.608"></status>
</kw>
<msg timestamp="20201112 09:44:12.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.320" endtime="20201112 09:44:12.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019704792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019807403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.612" endtime="20201112 09:44:12.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.620" endtime="20201112 09:44:12.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.318" endtime="20201112 09:44:12.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.316" endtime="20201112 09:44:12.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.627" level="INFO">${RESULT} = [{'time': 0.019807403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010261100000000245, 'source_diff': 0.00010261100000000245}, {'time': 0.019914389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:12.623" endtime="20201112 09:44:12.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.641" level="INFO">${ACCURACY} = {'source_diff': [0.00010261100000000245, 0.00010244499999999962, 0.0001021809999999998, 0.00010237500000000177, 0.00010243100000000005, 0.0001019870000000013, 0.00010206899999999977, 0.000102389000000...</msg>
<status status="PASS" starttime="20201112 09:44:12.628" endtime="20201112 09:44:12.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.645" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.644" endtime="20201112 09:44:12.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.648" level="INFO">VALUE: [0.00010261100000000245, 0.00010244499999999962, 0.0001021809999999998, 0.00010237500000000177, 0.00010243100000000005, 0.0001019870000000013, 0.00010206899999999977, 0.00010238900000000134, 0.00010381900000000152, 0.00010248600000000233, 0.0001025000000000019, 0.00010262500000000202, 0.00010207000000000271, 0.00010244499999999962, 0.00010255600000000017, 0.00010381999999999753, 0.00010206899999999977, 0.0001021809999999998, 0.0001027359999999991, 0.00010206899999999977, 0.00010204100000000063, 0.00010218000000000033, 0.0001023610000000022, 0.00010265299999999769, 0.00010198600000000183, 0.00010218100000000327, 0.00010269499999999987, 0.00010380600000000142, 0.00010252800000000103, 0.00010237500000000177, 0.00010224999999999818, 0.0001020550000000002, 0.00010238900000000134, 0.00010193000000000008, 0.00010230499999999698, 0.00010262500000000202, 0.00010259699999999941, 0.00010230500000000045, 0.0001020000000000014, 0.00010270900000000291, 0.00010255499999999723, 0.00010256999999999974, 0.00010240200000000144, 0.00010209799999999838, 0.00010231900000000002, 0.0001021939999999999, 0.00010208300000000281, 0.00010227700000000131, 0.00010231900000000002, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201112 09:44:12.646" endtime="20201112 09:44:12.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.642" endtime="20201112 09:44:12.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.655" endtime="20201112 09:44:12.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.659" endtime="20201112 09:44:12.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.657" endtime="20201112 09:44:12.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.654" endtime="20201112 09:44:12.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.279" endtime="20201112 09:44:12.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.279" endtime="20201112 09:44:12.680"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.688" endtime="20201112 09:44:12.709"></status>
</kw>
<msg timestamp="20201112 09:44:12.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.687" endtime="20201112 09:44:12.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.711" endtime="20201112 09:44:12.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.713" endtime="20201112 09:44:12.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.684" endtime="20201112 09:44:12.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.682" endtime="20201112 09:44:12.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.723" endtime="20201112 09:44:13.009"></status>
</kw>
<msg timestamp="20201112 09:44:13.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.722" endtime="20201112 09:44:13.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.013" endtime="20201112 09:44:13.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.021" endtime="20201112 09:44:13.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.719" endtime="20201112 09:44:13.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.717" endtime="20201112 09:44:13.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.028" level="INFO">${RESULT} = [{'time': 0.019792694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010333300000000059, 'source_diff': 0.00010333300000000059}, {'time': 0.019898694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:13.025" endtime="20201112 09:44:13.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.041" level="INFO">${ACCURACY} = {'source_diff': [0.00010333300000000059, 0.00010295800000000022, 0.00010313899999999862, 0.000103513999999999, 0.00010345800000000072, 0.00010313900000000209, 0.00010352800000000204, 0.000103222000000...</msg>
<status status="PASS" starttime="20201112 09:44:13.029" endtime="20201112 09:44:13.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.045" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.044" endtime="20201112 09:44:13.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.048" level="INFO">VALUE: [0.00010333300000000059, 0.00010295800000000022, 0.00010313899999999862, 0.000103513999999999, 0.00010345800000000072, 0.00010313900000000209, 0.00010352800000000204, 0.00010322200000000004, 0.00010320899999999994, 0.00010316700000000123, 0.00010299999999999893, 0.0001031810000000008, 0.00010293099999999708, 0.00010333300000000059, 0.00010294400000000065, 0.00010347200000000029, 0.00010333300000000059, 0.00010295800000000022, 0.00010342999999999811, 0.00010301400000000197, 0.00010345900000000019, 0.0001047360000000011, 0.00010358400000000031, 0.00010329100000000188, 0.00010323699999999908, 0.00010334799999999963, 0.00010481899999999905, 0.00010298600000000283, 0.00010318000000000133, 0.0001035420000000016, 0.00010290300000000141, 0.00010361099999999998, 0.0001048339999999981, 0.00010374999999999968, 0.00010363899999999912, 0.00010343099999999758, 0.00010362499999999955, 0.00010363899999999912, 0.00010318000000000133, 0.00010304100000000163, 0.0001030139999999985, 0.0001030689999999973, 0.00010330500000000145, 0.00010298599999999936, 0.00010305600000000067, 0.00010359700000000041, 0.00010318099999999733, 0.00010293100000000055, 0.00010355600000000117, 0.00010472300000000101]</msg>
<status status="PASS" starttime="20201112 09:44:13.046" endtime="20201112 09:44:13.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.042" endtime="20201112 09:44:13.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.051" endtime="20201112 09:44:13.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.055" endtime="20201112 09:44:13.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.053" endtime="20201112 09:44:13.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.050" endtime="20201112 09:44:13.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.681" endtime="20201112 09:44:13.075"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.680" endtime="20201112 09:44:13.076"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.084" endtime="20201112 09:44:13.105"></status>
</kw>
<msg timestamp="20201112 09:44:13.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.083" endtime="20201112 09:44:13.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.106" endtime="20201112 09:44:13.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.109" endtime="20201112 09:44:13.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.080" endtime="20201112 09:44:13.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.078" endtime="20201112 09:44:13.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.119" endtime="20201112 09:44:13.404"></status>
</kw>
<msg timestamp="20201112 09:44:13.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.117" endtime="20201112 09:44:13.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019740264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.408" endtime="20201112 09:44:13.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.416" endtime="20201112 09:44:13.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.115" endtime="20201112 09:44:13.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.113" endtime="20201112 09:44:13.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.423" level="INFO">${RESULT} = [{'time': 0.019844792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010452799999999957, 'source_diff': 0.00010452799999999957}, {'time': 0.019952819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:13.420" endtime="20201112 09:44:13.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.436" level="INFO">${ACCURACY} = {'source_diff': [0.00010452799999999957, 0.00010405499999999873, 0.00010476400000000025, 0.00010402699999999959, 0.00010580500000000048, 0.00010426399999999975, 0.00010388899999999937, 0.0001041810000...</msg>
<status status="PASS" starttime="20201112 09:44:13.424" endtime="20201112 09:44:13.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.441" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.440" endtime="20201112 09:44:13.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.443" level="INFO">VALUE: [0.00010452799999999957, 0.00010405499999999873, 0.00010476400000000025, 0.00010402699999999959, 0.00010580500000000048, 0.00010426399999999975, 0.00010388899999999937, 0.0001041810000000018, 0.00010436100000000073, 0.00010463900000000012, 0.0001045559999999987, 0.00010579200000000039, 0.00010472199999999807, 0.00010444500000000162, 0.0001038749999999998, 0.00010448600000000086, 0.00010422200000000104, 0.00010447199999999782, 0.00010398600000000036, 0.00010412500000000005, 0.00010397200000000079, 0.00010465299999999969, 0.00010580599999999996, 0.00010448600000000086, 0.00010462500000000055, 0.00010476300000000077, 0.0001038749999999998, 0.00010461099999999751, 0.00010455499999999923, 0.00010462500000000055, 0.0001047360000000011, 0.00010580499999999701, 0.00010399999999999993, 0.00010476400000000025, 0.00010408400000000081, 0.00010404099999999916, 0.00010577800000000082, 0.00010393099999999808, 0.0001038749999999998, 0.00010392999999999861, 0.00010426399999999975, 0.00010386099999999676, 0.00010386100000000023, 0.00010579200000000039, 0.00010458299999999837, 0.00010411100000000048, 0.00010444499999999815, 0.00010429199999999889, 0.00010408400000000081, 0.00010407000000000124]</msg>
<status status="PASS" starttime="20201112 09:44:13.442" endtime="20201112 09:44:13.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.437" endtime="20201112 09:44:13.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.447" endtime="20201112 09:44:13.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.450" endtime="20201112 09:44:13.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.449" endtime="20201112 09:44:13.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.445" endtime="20201112 09:44:13.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.076" endtime="20201112 09:44:13.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.076" endtime="20201112 09:44:13.471"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.479" endtime="20201112 09:44:13.500"></status>
</kw>
<msg timestamp="20201112 09:44:13.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.478" endtime="20201112 09:44:13.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.502" endtime="20201112 09:44:13.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.504" endtime="20201112 09:44:13.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.475" endtime="20201112 09:44:13.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.473" endtime="20201112 09:44:13.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.514" endtime="20201112 09:44:13.800"></status>
</kw>
<msg timestamp="20201112 09:44:13.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.512" endtime="20201112 09:44:13.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.804" endtime="20201112 09:44:13.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.812" endtime="20201112 09:44:13.813"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.510" endtime="20201112 09:44:13.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.508" endtime="20201112 09:44:13.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.818" level="INFO">${RESULT} = [{'time': 0.019821014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010554200000000014, 'source_diff': 0.00010554200000000014}, {'time': 0.01993, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:13.815" endtime="20201112 09:44:13.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.831" level="INFO">${ACCURACY} = {'source_diff': [0.00010554200000000014, 0.00010529199999999989, 0.0001050559999999992, 0.00010498599999999789, 0.00010540300000000044, 0.0001050559999999992, 0.00010554200000000014, 0.000105000000000...</msg>
<status status="PASS" starttime="20201112 09:44:13.819" endtime="20201112 09:44:13.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.836" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.835" endtime="20201112 09:44:13.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.838" level="INFO">VALUE: [0.00010554200000000014, 0.00010529199999999989, 0.0001050559999999992, 0.00010498599999999789, 0.00010540300000000044, 0.0001050559999999992, 0.00010554200000000014, 0.00010500000000000093, 0.00010568000000000036, 0.00010530499999999998, 0.00010677800000000182, 0.0001048750000000008, 0.00010500000000000093, 0.00010554200000000014, 0.0001052360000000016, 0.00010550000000000143, 0.0001050559999999992, 0.00010513800000000115, 0.00010508299999999887, 0.00010497300000000126, 0.0001067499999999992, 0.00010499999999999746, 0.00010526400000000075, 0.0001057079999999995, 0.00010494399999999918, 0.00010538900000000087, 0.00010515300000000019, 0.0001053339999999986, 0.00010516699999999976, 0.00010493099999999908, 0.00010512500000000105, 0.00010677799999999835, 0.00010547200000000229, 0.00010512499999999758, 0.00010569399999999993, 0.00010676400000000225, 0.0001050140000000005, 0.00010677799999999835, 0.00010531999999999903, 0.00010526400000000075, 0.00010529199999999989, 0.00010572200000000254, 0.0001050140000000005, 0.0001056949999999994, 0.0001057079999999995, 0.00010494399999999918, 0.00010492999999999961, 0.00010486099999999776, 0.00010486099999999776, 0.00010498600000000136]</msg>
<status status="PASS" starttime="20201112 09:44:13.837" endtime="20201112 09:44:13.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.832" endtime="20201112 09:44:13.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.842" endtime="20201112 09:44:13.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.845" endtime="20201112 09:44:13.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.844" endtime="20201112 09:44:13.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.840" endtime="20201112 09:44:13.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.472" endtime="20201112 09:44:13.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.471" endtime="20201112 09:44:13.866"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.875" endtime="20201112 09:44:13.895"></status>
</kw>
<msg timestamp="20201112 09:44:13.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.873" endtime="20201112 09:44:13.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.897" endtime="20201112 09:44:13.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.899" endtime="20201112 09:44:13.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.871" endtime="20201112 09:44:13.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.869" endtime="20201112 09:44:13.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.909" endtime="20201112 09:44:14.193"></status>
</kw>
<msg timestamp="20201112 09:44:14.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.908" endtime="20201112 09:44:14.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.198" endtime="20201112 09:44:14.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.206" endtime="20201112 09:44:14.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.905" endtime="20201112 09:44:14.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.903" endtime="20201112 09:44:14.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.212" level="INFO">${RESULT} = [{'time': 0.019906861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010618000000000086, 'source_diff': 0.00010618000000000086}, {'time': 0.020019875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:14.209" endtime="20201112 09:44:14.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.226" level="INFO">${ACCURACY} = {'source_diff': [0.00010618000000000086, 0.0001077500000000002, 0.00010611099999999901, 0.00010594499999999965, 0.0001058889999999979, 0.00010666699999999779, 0.00010608399999999935, 0.000106431000000...</msg>
<status status="PASS" starttime="20201112 09:44:14.213" endtime="20201112 09:44:14.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.231" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.230" endtime="20201112 09:44:14.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.233" level="INFO">VALUE: [0.00010618000000000086, 0.0001077500000000002, 0.00010611099999999901, 0.00010594499999999965, 0.0001058889999999979, 0.00010666699999999779, 0.00010608399999999935, 0.00010643100000000058, 0.00010666599999999832, 0.00010648599999999939, 0.00010662499999999908, 0.00010636099999999926, 0.00010591700000000051, 0.00010634699999999969, 0.00010666700000000126, 0.00010637499999999883, 0.0001060560000000002, 0.0001065699999999968, 0.0001062360000000026, 0.00010641700000000101, 0.00010637499999999883, 0.00010627799999999785, 0.00010591600000000104, 0.00010616600000000129, 0.00010633300000000012, 0.00010587499999999833, 0.00010615299999999772, 0.00010597299999999879, 0.00010595899999999922, 0.00010636099999999926, 0.00010606999999999978, 0.00010611100000000248, 0.00010609700000000291, 0.00010599999999999846, 0.00010662499999999908, 0.00010594400000000018, 0.00010634699999999969, 0.00010780499999999901, 0.00010591700000000051, 0.00010781999999999806, 0.00010663900000000212, 0.00010780599999999849, 0.00010643100000000058, 0.00010593100000000008, 0.0001062629999999988, 0.00010649999999999896, 0.00010588900000000137, 0.00010782000000000153, 0.00010779199999999892, 0.00010661099999999951]</msg>
<status status="PASS" starttime="20201112 09:44:14.232" endtime="20201112 09:44:14.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.227" endtime="20201112 09:44:14.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.237" endtime="20201112 09:44:14.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.240" endtime="20201112 09:44:14.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.239" endtime="20201112 09:44:14.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.235" endtime="20201112 09:44:14.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.867" endtime="20201112 09:44:14.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.866" endtime="20201112 09:44:14.261"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.269" endtime="20201112 09:44:14.291"></status>
</kw>
<msg timestamp="20201112 09:44:14.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.268" endtime="20201112 09:44:14.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.292" endtime="20201112 09:44:14.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.295" endtime="20201112 09:44:14.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.265" endtime="20201112 09:44:14.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.263" endtime="20201112 09:44:14.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.305" endtime="20201112 09:44:14.590"></status>
</kw>
<msg timestamp="20201112 09:44:14.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.303" endtime="20201112 09:44:14.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.594" endtime="20201112 09:44:14.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.602" endtime="20201112 09:44:14.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.301" endtime="20201112 09:44:14.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.299" endtime="20201112 09:44:14.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.609" level="INFO">${RESULT} = [{'time': 0.019773917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010708399999999688, 'source_diff': 0.00010708399999999688}, {'time': 0.019884917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:14.605" endtime="20201112 09:44:14.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.622" level="INFO">${ACCURACY} = {'source_diff': [0.00010708399999999688, 0.00010716699999999829, 0.00010687499999999933, 0.00010737499999999983, 0.00010698599999999989, 0.00010705499999999826, 0.00010708300000000087, 0.0001075689999...</msg>
<status status="PASS" starttime="20201112 09:44:14.610" endtime="20201112 09:44:14.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.626" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.625" endtime="20201112 09:44:14.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.629" level="INFO">VALUE: [0.00010708399999999688, 0.00010716699999999829, 0.00010687499999999933, 0.00010737499999999983, 0.00010698599999999989, 0.00010705499999999826, 0.00010708300000000087, 0.00010756899999999833, 0.00010875000000000121, 0.00010881999999999906, 0.00010723600000000014, 0.00010736100000000026, 0.0001068889999999989, 0.0001073889999999994, 0.00010716699999999829, 0.00010702800000000207, 0.00010881899999999958, 0.00010877700000000087, 0.00010762500000000008, 0.00010712499999999958, 0.00010773599999999717, 0.00010737499999999983, 0.00010754199999999867, 0.00010876399999999731, 0.00010713899999999915, 0.00010751300000000005, 0.00010772300000000054, 0.0001072629999999998, 0.0001070279999999986, 0.0001072499999999997, 0.00010736100000000026, 0.00010699999999999946, 0.00010881899999999958, 0.00010695800000000075, 0.00010757000000000128, 0.00010709700000000044, 0.00010776399999999978, 0.00010758400000000085, 0.00010715299999999872, 0.00010693000000000161, 0.00010747199999999735, 0.00010758300000000137, 0.00010737499999999983, 0.00010693000000000161, 0.00010731999999999756, 0.00010737499999999983, 0.00010758400000000085, 0.0001072499999999997, 0.00010715199999999925, 0.00010695800000000075]</msg>
<status status="PASS" starttime="20201112 09:44:14.627" endtime="20201112 09:44:14.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.623" endtime="20201112 09:44:14.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.632" endtime="20201112 09:44:14.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.636" endtime="20201112 09:44:14.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.634" endtime="20201112 09:44:14.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.631" endtime="20201112 09:44:14.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.262" endtime="20201112 09:44:14.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.261" endtime="20201112 09:44:14.656"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.665" endtime="20201112 09:44:14.686"></status>
</kw>
<msg timestamp="20201112 09:44:14.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.664" endtime="20201112 09:44:14.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.688" endtime="20201112 09:44:14.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.690" endtime="20201112 09:44:14.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.661" endtime="20201112 09:44:14.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.659" endtime="20201112 09:44:14.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.700" endtime="20201112 09:44:14.985"></status>
</kw>
<msg timestamp="20201112 09:44:14.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.698" endtime="20201112 09:44:14.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.989" endtime="20201112 09:44:14.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.997" endtime="20201112 09:44:14.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.696" endtime="20201112 09:44:14.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.694" endtime="20201112 09:44:15.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.004" level="INFO">${RESULT} = [{'time': 0.019822667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010826400000000028, 'source_diff': 0.00010826400000000028}, {'time': 0.019933694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:15.001" endtime="20201112 09:44:15.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.017" level="INFO">${ACCURACY} = {'source_diff': [0.00010826400000000028, 0.00010851299999999758, 0.00010982000000000006, 0.00010869399999999946, 0.00010813900000000015, 0.00010811100000000101, 0.00010794400000000218, 0.0001098330000...</msg>
<status status="PASS" starttime="20201112 09:44:15.005" endtime="20201112 09:44:15.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.022" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.021" endtime="20201112 09:44:15.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.024" level="INFO">VALUE: [0.00010826400000000028, 0.00010851299999999758, 0.00010982000000000006, 0.00010869399999999946, 0.00010813900000000015, 0.00010811100000000101, 0.00010794400000000218, 0.00010983300000000015, 0.00010841699999999954, 0.00010812500000000058, 0.00010794500000000165, 0.00010800000000000046, 0.00010837500000000083, 0.00010829099999999994, 0.0001085699999999988, 0.00010837500000000083, 0.00010981900000000058, 0.00010969400000000046, 0.00010980499999999754, 0.00010837500000000083, 0.00010855499999999976, 0.00010848600000000139, 0.00010859799999999795, 0.00010798600000000089, 0.00010845899999999825, 0.00010837499999999736, 0.00010811100000000101, 0.00010788799999999696, 0.00010867999999999989, 0.00010816599999999982, 0.0001083890000000004, 0.00010869399999999946, 0.00010974999999999874, 0.0001078889999999999, 0.00010800000000000046, 0.00010854100000000019, 0.00010809700000000144, 0.00010849999999999749, 0.00010829099999999994, 0.00010856899999999933, 0.00010855499999999976, 0.00010827700000000037, 0.00010830499999999951, 0.00010797200000000132, 0.00010881899999999958, 0.00010865300000000022, 0.00010980600000000049, 0.00010863800000000118, 0.00010830600000000246, 0.00010826400000000028]</msg>
<status status="PASS" starttime="20201112 09:44:15.023" endtime="20201112 09:44:15.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.018" endtime="20201112 09:44:15.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.027" endtime="20201112 09:44:15.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.031" endtime="20201112 09:44:15.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.029" endtime="20201112 09:44:15.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.026" endtime="20201112 09:44:15.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.657" endtime="20201112 09:44:15.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.657" endtime="20201112 09:44:15.052"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.060" endtime="20201112 09:44:15.081"></status>
</kw>
<msg timestamp="20201112 09:44:15.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.059" endtime="20201112 09:44:15.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.083" endtime="20201112 09:44:15.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.085" endtime="20201112 09:44:15.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.056" endtime="20201112 09:44:15.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.054" endtime="20201112 09:44:15.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.095" endtime="20201112 09:44:15.381"></status>
</kw>
<msg timestamp="20201112 09:44:15.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.094" endtime="20201112 09:44:15.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019762944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.385" endtime="20201112 09:44:15.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.393" endtime="20201112 09:44:15.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.091" endtime="20201112 09:44:15.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.089" endtime="20201112 09:44:15.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.399" level="INFO">${RESULT} = [{'time': 0.019762944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010943000000000064, 'source_diff': 0.00010943000000000064}, {'time': 0.019877972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:15.396" endtime="20201112 09:44:15.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.412" level="INFO">${ACCURACY} = {'source_diff': [0.00010943000000000064, 0.00011074999999999974, 0.00010925000000000171, 0.00010931899999999661, 0.00010913900000000115, 0.00010925000000000171, 0.00010908399999999888, 0.0001095420000...</msg>
<status status="PASS" starttime="20201112 09:44:15.400" endtime="20201112 09:44:15.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.417" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.416" endtime="20201112 09:44:15.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.419" level="INFO">VALUE: [0.00010943000000000064, 0.00011074999999999974, 0.00010925000000000171, 0.00010931899999999661, 0.00010913900000000115, 0.00010925000000000171, 0.00010908399999999888, 0.00010954200000000067, 0.00010901400000000103, 0.00010931900000000008, 0.00010944400000000021, 0.00011079100000000244, 0.00010956900000000033, 0.00010954100000000119, 0.00010944400000000021, 0.00010959699999999947, 0.00010888899999999743, 0.00010918099999999986, 0.00010912499999999811, 0.00010975000000000221, 0.00010962499999999861, 0.00010887499999999786, 0.0001095829999999999, 0.00010941600000000107, 0.00010915300000000072, 0.00010918000000000039, 0.00010901400000000103, 0.00010916600000000082, 0.00010956900000000033, 0.00010927800000000085, 0.00010884699999999872, 0.00010937500000000183, 0.00010948600000000239, 0.00010911099999999854, 0.00011072300000000007, 0.00010900000000000146, 0.00010968000000000089, 0.0001094159999999976, 0.00011080500000000201, 0.0001095419999999972, 0.00010963900000000165, 0.00010897200000000232, 0.00010901400000000103, 0.00010894499999999918, 0.00010934699999999922, 0.00010905599999999974, 0.00010934699999999922, 0.00010944400000000021, 0.00010918000000000039, 0.00011082000000000106]</msg>
<status status="PASS" starttime="20201112 09:44:15.418" endtime="20201112 09:44:15.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.413" endtime="20201112 09:44:15.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.423" endtime="20201112 09:44:15.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.426" endtime="20201112 09:44:15.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.425" endtime="20201112 09:44:15.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.421" endtime="20201112 09:44:15.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.053" endtime="20201112 09:44:15.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.052" endtime="20201112 09:44:15.447"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.456" endtime="20201112 09:44:15.477"></status>
</kw>
<msg timestamp="20201112 09:44:15.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.454" endtime="20201112 09:44:15.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.478" endtime="20201112 09:44:15.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.481" endtime="20201112 09:44:15.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.452" endtime="20201112 09:44:15.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.450" endtime="20201112 09:44:15.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.491" endtime="20201112 09:44:15.776"></status>
</kw>
<msg timestamp="20201112 09:44:15.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.489" endtime="20201112 09:44:15.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019748694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.780" endtime="20201112 09:44:15.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.788" endtime="20201112 09:44:15.790"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.486" endtime="20201112 09:44:15.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.485" endtime="20201112 09:44:15.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.795" level="INFO">${RESULT} = [{'time': 0.019748694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010991600000000157, 'source_diff': 0.00010991600000000157}, {'time': 0.019862708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:15.792" endtime="20201112 09:44:15.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.810" level="INFO">${ACCURACY} = {'source_diff': [0.00010991600000000157, 0.00011056900000000133, 0.00011002699999999865, 0.00011026399999999881, 0.00010986099999999929, 0.00011181899999999911, 0.00011022299999999957, 0.0001107360000...</msg>
<status status="PASS" starttime="20201112 09:44:15.796" endtime="20201112 09:44:15.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.814" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.813" endtime="20201112 09:44:15.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.817" level="INFO">VALUE: [0.00010991600000000157, 0.00011056900000000133, 0.00011002699999999865, 0.00011026399999999881, 0.00010986099999999929, 0.00011181899999999911, 0.00011022299999999957, 0.00011073600000000017, 0.00011019500000000043, 0.0001105700000000008, 0.00010997199999999985, 0.00011055599999999777, 0.000110596999999997, 0.00010986099999999929, 0.00011073600000000017, 0.00011042999999999817, 0.00011177799999999988, 0.00011019400000000096, 0.00011029200000000142, 0.00011031900000000108, 0.0001100700000000003, 0.00011044500000000068, 0.00010991700000000104, 0.00011070799999999756, 0.00011000000000000246, 0.0001105830000000009, 0.00011018000000000139, 0.00011176400000000031, 0.00011074999999999974, 0.00011076399999999931, 0.0001100280000000016, 0.00010994500000000018, 0.00010986099999999929, 0.00011011099999999954, 0.00011009699999999997, 0.00011011099999999954, 0.00011045800000000078, 0.00011059700000000047, 0.00011179099999999997, 0.00011055500000000176, 0.00011181900000000258, 0.00010987499999999886, 0.00011011099999999954, 0.00010999999999999899, 0.00011048599999999992, 0.00011024999999999924, 0.00010998599999999942, 0.00011180600000000249, 0.00011045800000000078, 0.00011005500000000126]</msg>
<status status="PASS" starttime="20201112 09:44:15.815" endtime="20201112 09:44:15.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.811" endtime="20201112 09:44:15.818"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.820" endtime="20201112 09:44:15.822"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.824" endtime="20201112 09:44:15.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.822" endtime="20201112 09:44:15.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.819" endtime="20201112 09:44:15.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.448" endtime="20201112 09:44:15.844"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.447" endtime="20201112 09:44:15.844"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.853" endtime="20201112 09:44:15.874"></status>
</kw>
<msg timestamp="20201112 09:44:15.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.852" endtime="20201112 09:44:15.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.876" endtime="20201112 09:44:15.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.878" endtime="20201112 09:44:15.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.849" endtime="20201112 09:44:15.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.847" endtime="20201112 09:44:15.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.888" endtime="20201112 09:44:16.174"></status>
</kw>
<msg timestamp="20201112 09:44:16.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.887" endtime="20201112 09:44:16.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019879431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.178" endtime="20201112 09:44:16.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.186" endtime="20201112 09:44:16.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.884" endtime="20201112 09:44:16.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.883" endtime="20201112 09:44:16.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.192" level="INFO">${RESULT} = [{'time': 0.019879431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011166699999999932, 'source_diff': 0.00011166699999999932}, {'time': 0.019993444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:16.189" endtime="20201112 09:44:16.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.205" level="INFO">${ACCURACY} = {'source_diff': [0.00011166699999999932, 0.00011150000000000049, 0.00011129100000000294, 0.00011106899999999836, 0.00011111099999999707, 0.00011165299999999975, 0.00011168100000000236, 0.0001127499999...</msg>
<status status="PASS" starttime="20201112 09:44:16.193" endtime="20201112 09:44:16.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.210" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.209" endtime="20201112 09:44:16.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.212" level="INFO">VALUE: [0.00011166699999999932, 0.00011150000000000049, 0.00011129100000000294, 0.00011106899999999836, 0.00011111099999999707, 0.00011165299999999975, 0.00011168100000000236, 0.00011274999999999827, 0.00011138899999999993, 0.00011109700000000097, 0.00011162499999999714, 0.00011129199999999895, 0.00011123700000000014, 0.00011154200000000267, 0.00011129199999999895, 0.00011169400000000246, 0.00011156899999999886, 0.00011099999999999999, 0.00011123600000000067, 0.00011279200000000045, 0.00011149999999999702, 0.00011125000000000024, 0.00011166599999999985, 0.00011137499999999689, 0.00011129199999999895, 0.00011169399999999899, 0.00011123600000000067, 0.00011129100000000294, 0.00011136099999999732, 0.00011161099999999757, 0.00011116699999999882, 0.00011168100000000236, 0.00011145899999999778, 0.0001115700000000018, 0.00011273600000000217, 0.00011099999999999999, 0.00011130499999999904, 0.00011150000000000049, 0.00011083300000000115, 0.00011112500000000011, 0.0001127909999999975, 0.00011144399999999874, 0.00011123600000000067, 0.00011272199999999913, 0.00011158400000000138, 0.00011106999999999784, 0.00011283299999999968, 0.00011138899999999993, 0.0001115419999999992, 0.00011270799999999956]</msg>
<status status="PASS" starttime="20201112 09:44:16.211" endtime="20201112 09:44:16.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.206" endtime="20201112 09:44:16.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.216" endtime="20201112 09:44:16.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.219" endtime="20201112 09:44:16.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.218" endtime="20201112 09:44:16.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.214" endtime="20201112 09:44:16.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.845" endtime="20201112 09:44:16.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.845" endtime="20201112 09:44:16.240"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.249" endtime="20201112 09:44:16.270"></status>
</kw>
<msg timestamp="20201112 09:44:16.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.247" endtime="20201112 09:44:16.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.271" endtime="20201112 09:44:16.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.274" endtime="20201112 09:44:16.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.245" endtime="20201112 09:44:16.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.243" endtime="20201112 09:44:16.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.284" endtime="20201112 09:44:16.569"></status>
</kw>
<msg timestamp="20201112 09:44:16.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.282" endtime="20201112 09:44:16.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019801917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.573" endtime="20201112 09:44:16.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.582" endtime="20201112 09:44:16.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.280" endtime="20201112 09:44:16.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.278" endtime="20201112 09:44:16.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.588" level="INFO">${RESULT} = [{'time': 0.019801917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011231999999999909, 'source_diff': 0.00011231999999999909}, {'time': 0.019917875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:16.585" endtime="20201112 09:44:16.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.601" level="INFO">${ACCURACY} = {'source_diff': [0.00011231999999999909, 0.0001127220000000026, 0.00011244399999999974, 0.00011263900000000118, 0.00011205599999999927, 0.00011237500000000136, 0.00011262499999999814, 0.00011250000000...</msg>
<status status="PASS" starttime="20201112 09:44:16.589" endtime="20201112 09:44:16.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.606" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.605" endtime="20201112 09:44:16.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.608" level="INFO">VALUE: [0.00011231999999999909, 0.0001127220000000026, 0.00011244399999999974, 0.00011263900000000118, 0.00011205599999999927, 0.00011237500000000136, 0.00011262499999999814, 0.00011250000000000149, 0.00011237500000000136, 0.00011268099999999989, 0.00011236099999999832, 0.00011238900000000093, 0.0001120549999999998, 0.00011226400000000081, 0.00011232000000000256, 0.00011248599999999845, 0.00011198599999999795, 0.0001120700000000023, 0.00011211100000000154, 0.00011250000000000149, 0.00011238800000000146, 0.00011236099999999832, 0.00011244399999999974, 0.00011222199999999863, 0.00011200000000000099, 0.00011201400000000056, 0.00011218099999999939, 0.00011212499999999764, 0.00011213899999999721, 0.00011193099999999914, 0.0001123749999999979, 0.00011279200000000045, 0.00011263900000000118, 0.00011377800000000188, 0.00011230500000000004, 0.00011208299999999893, 0.00011380499999999807, 0.00011212499999999764, 0.00011227800000000038, 0.00011205599999999927, 0.00011245899999999878, 0.00011229199999999995, 0.00011212500000000111, 0.00011238799999999799, 0.0001125550000000003, 0.0001123749999999979, 0.00011188900000000043, 0.0001120969999999985, 0.00011188900000000043, 0.00011218099999999939]</msg>
<status status="PASS" starttime="20201112 09:44:16.607" endtime="20201112 09:44:16.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.602" endtime="20201112 09:44:16.609"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.612" endtime="20201112 09:44:16.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.615" endtime="20201112 09:44:16.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.614" endtime="20201112 09:44:16.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.610" endtime="20201112 09:44:16.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.241" endtime="20201112 09:44:16.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.241" endtime="20201112 09:44:16.636"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.644" endtime="20201112 09:44:16.666"></status>
</kw>
<msg timestamp="20201112 09:44:16.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.643" endtime="20201112 09:44:16.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.668" endtime="20201112 09:44:16.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.670" endtime="20201112 09:44:16.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.640" endtime="20201112 09:44:16.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.638" endtime="20201112 09:44:16.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.680" endtime="20201112 09:44:16.966"></status>
</kw>
<msg timestamp="20201112 09:44:16.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019843083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.679" endtime="20201112 09:44:16.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019843083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.970" endtime="20201112 09:44:16.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.978" endtime="20201112 09:44:16.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.676" endtime="20201112 09:44:16.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.674" endtime="20201112 09:44:16.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.985" level="INFO">${RESULT} = [{'time': 0.019843083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011347199999999988, 'source_diff': 0.00011347199999999988}, {'time': 0.019960069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:16.981" endtime="20201112 09:44:16.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.998" level="INFO">${ACCURACY} = {'source_diff': [0.00011347199999999988, 0.00011302700000000165, 0.00011481899999999864, 0.00011326400000000181, 0.000113597, 0.00011354199999999773, 0.0001135559999999973, 0.00011479200000000245, 0.0...</msg>
<status status="PASS" starttime="20201112 09:44:16.986" endtime="20201112 09:44:16.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.002" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.001" endtime="20201112 09:44:17.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.005" level="INFO">VALUE: [0.00011347199999999988, 0.00011302700000000165, 0.00011481899999999864, 0.00011326400000000181, 0.000113597, 0.00011354199999999773, 0.0001135559999999973, 0.00011479200000000245, 0.00011362500000000261, 0.00011340299999999803, 0.00011305600000000027, 0.00011287500000000186, 0.00011319399999999702, 0.00011324999999999877, 0.00011355499999999782, 0.00011483299999999821, 0.00011316700000000082, 0.00011286099999999882, 0.00011308400000000288, 0.00011349999999999902, 0.00011483299999999821, 0.00011354100000000172, 0.00011286200000000177, 0.0001135420000000012, 0.00011344400000000074, 0.00011299999999999852, 0.00011362499999999914, 0.00011351399999999859, 0.00011479200000000245, 0.00011287500000000186, 0.00011363899999999871, 0.00011319499999999996, 0.00011330600000000052, 0.00011315300000000125, 0.00011343000000000117, 0.00011345800000000031, 0.00011324999999999877, 0.00011295799999999981, 0.00011313900000000168, 0.00011318100000000039, 0.00011357000000000034, 0.00011305600000000027, 0.00011344500000000021, 0.00011316700000000082, 0.00011301399999999809, 0.00011331900000000061, 0.00011344400000000074, 0.00011347199999999988, 0.00011311099999999907, 0.0001135550000000013]</msg>
<status status="PASS" starttime="20201112 09:44:17.003" endtime="20201112 09:44:17.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.999" endtime="20201112 09:44:17.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.008" endtime="20201112 09:44:17.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.012" endtime="20201112 09:44:17.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.010" endtime="20201112 09:44:17.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.007" endtime="20201112 09:44:17.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.637" endtime="20201112 09:44:17.032"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.636" endtime="20201112 09:44:17.033"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.041" endtime="20201112 09:44:17.063"></status>
</kw>
<msg timestamp="20201112 09:44:17.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.040" endtime="20201112 09:44:17.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.064" endtime="20201112 09:44:17.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.067" endtime="20201112 09:44:17.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.037" endtime="20201112 09:44:17.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.035" endtime="20201112 09:44:17.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.076" endtime="20201112 09:44:17.361"></status>
</kw>
<msg timestamp="20201112 09:44:17.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.075" endtime="20201112 09:44:17.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.365" endtime="20201112 09:44:17.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.373" endtime="20201112 09:44:17.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.072" endtime="20201112 09:44:17.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.071" endtime="20201112 09:44:17.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.380" level="INFO">${RESULT} = [{'time': 0.019824042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011408400000000041, 'source_diff': 0.00011408400000000041}, {'time': 0.019944056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:17.377" endtime="20201112 09:44:17.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.394" level="INFO">${ACCURACY} = {'source_diff': [0.00011408400000000041, 0.00011582000000000259, 0.00011412499999999964, 0.0001143749999999999, 0.00011420800000000106, 0.00011445800000000131, 0.00011393000000000167, 0.00011430499999...</msg>
<status status="PASS" starttime="20201112 09:44:17.381" endtime="20201112 09:44:17.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.398" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.397" endtime="20201112 09:44:17.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.401" level="INFO">VALUE: [0.00011408400000000041, 0.00011582000000000259, 0.00011412499999999964, 0.0001143749999999999, 0.00011420800000000106, 0.00011445800000000131, 0.00011393000000000167, 0.00011430499999999857, 0.00011419400000000149, 0.00011416699999999835, 0.00011407000000000084, 0.00011462500000000014, 0.00011577700000000093, 0.00011411200000000302, 0.00011398699999999942, 0.00011418000000000192, 0.00011463899999999971, 0.00011450000000000002, 0.00011402800000000213, 0.0001140970000000005, 0.00011579199999999998, 0.00011412499999999964, 0.00011475000000000027, 0.0001147230000000006, 0.00011476300000000036, 0.00011467999999999895, 0.00011569399999999952, 0.00011456900000000186, 0.0001145689999999984, 0.00011463899999999971, 0.0001140970000000005, 0.00011579199999999998, 0.00011408400000000041, 0.00011448600000000045, 0.00011458400000000091, 0.00011576399999999737, 0.00011463899999999971, 0.0001145689999999984, 0.00011451400000000306, 0.00011431900000000161, 0.00011416599999999888, 0.00011419400000000149, 0.00011581899999999964, 0.00011426399999999934, 0.00011427799999999891, 0.00011455600000000177, 0.0001143749999999999, 0.00011427699999999943, 0.00011401399999999909, 0.0001139160000000021]</msg>
<status status="PASS" starttime="20201112 09:44:17.400" endtime="20201112 09:44:17.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.395" endtime="20201112 09:44:17.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.404" endtime="20201112 09:44:17.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.408" endtime="20201112 09:44:17.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.406" endtime="20201112 09:44:17.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.403" endtime="20201112 09:44:17.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.033" endtime="20201112 09:44:17.429"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.033" endtime="20201112 09:44:17.429"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.437" endtime="20201112 09:44:17.459"></status>
</kw>
<msg timestamp="20201112 09:44:17.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.436" endtime="20201112 09:44:17.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.461" endtime="20201112 09:44:17.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.463" endtime="20201112 09:44:17.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.433" endtime="20201112 09:44:17.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.431" endtime="20201112 09:44:17.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.473" endtime="20201112 09:44:17.758"></status>
</kw>
<msg timestamp="20201112 09:44:17.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.472" endtime="20201112 09:44:17.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019758042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.762" endtime="20201112 09:44:17.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.770" endtime="20201112 09:44:17.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.469" endtime="20201112 09:44:17.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.467" endtime="20201112 09:44:17.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.777" level="INFO">${RESULT} = [{'time': 0.019873444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011540200000000056, 'source_diff': 0.00011540200000000056}, {'time': 0.019991458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:17.773" endtime="20201112 09:44:17.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.790" level="INFO">${ACCURACY} = {'source_diff': [0.00011540200000000056, 0.0001150689999999989, 0.00011545799999999884, 0.00011548600000000145, 0.00011548600000000145, 0.0001149299999999992, 0.00011486100000000082, 0.000115235999999...</msg>
<status status="PASS" starttime="20201112 09:44:17.778" endtime="20201112 09:44:17.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.794" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.793" endtime="20201112 09:44:17.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.797" level="INFO">VALUE: [0.00011540200000000056, 0.0001150689999999989, 0.00011545799999999884, 0.00011548600000000145, 0.00011548600000000145, 0.0001149299999999992, 0.00011486100000000082, 0.00011523599999999773, 0.00011538900000000046, 0.00011525000000000077, 0.00011573599999999823, 0.00011525000000000077, 0.00011502700000000018, 0.00011536199999999733, 0.00011544399999999927, 0.00011569399999999952, 0.00011494399999999877, 0.0001152230000000011, 0.00011523599999999773, 0.00011520900000000153, 0.00011551400000000059, 0.00011519499999999849, 0.00011513900000000021, 0.0001157360000000017, 0.00011519399999999902, 0.00011680500000000107, 0.00011570899999999856, 0.00011494400000000224, 0.00011544399999999927, 0.00011519399999999902, 0.00011512500000000064, 0.00011523599999999773, 0.0001148750000000004, 0.0001154169999999996, 0.0001152230000000011, 0.00011498600000000095, 0.00011554100000000025, 0.00011495799999999834, 0.00011550000000000102, 0.00011519399999999902, 0.00011495800000000181, 0.00011494500000000171, 0.00011483300000000168, 0.00011538900000000046, 0.00011488899999999996, 0.00011494499999999824, 0.00011669499999999999, 0.0001150559999999988, 0.00011540300000000003, 0.00011500000000000052]</msg>
<status status="PASS" starttime="20201112 09:44:17.795" endtime="20201112 09:44:17.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.791" endtime="20201112 09:44:17.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.806" endtime="20201112 09:44:17.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.809" endtime="20201112 09:44:17.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.808" endtime="20201112 09:44:17.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.804" endtime="20201112 09:44:17.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.430" endtime="20201112 09:44:17.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.429" endtime="20201112 09:44:17.830"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.839" endtime="20201112 09:44:17.861"></status>
</kw>
<msg timestamp="20201112 09:44:17.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.838" endtime="20201112 09:44:17.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.862" endtime="20201112 09:44:17.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.865" endtime="20201112 09:44:17.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.835" endtime="20201112 09:44:17.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.833" endtime="20201112 09:44:17.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.874" endtime="20201112 09:44:18.159"></status>
</kw>
<msg timestamp="20201112 09:44:18.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.873" endtime="20201112 09:44:18.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.163" endtime="20201112 09:44:18.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.171" endtime="20201112 09:44:18.173"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.870" endtime="20201112 09:44:18.174"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.869" endtime="20201112 09:44:18.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.178" level="INFO">${RESULT} = [{'time': 0.020366306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011627800000000091, 'source_diff': 0.00011627800000000091}, {'time': 0.020485319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:18.175" endtime="20201112 09:44:18.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.191" level="INFO">${ACCURACY} = {'source_diff': [0.00011627800000000091, 0.00011669399999999705, 0.0001165690000000004, 0.00011590200000000106, 0.00011619400000000002, 0.00011627800000000091, 0.00011590300000000053, 0.00011669499999...</msg>
<status status="PASS" starttime="20201112 09:44:18.179" endtime="20201112 09:44:18.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.195" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.194" endtime="20201112 09:44:18.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.198" level="INFO">VALUE: [0.00011627800000000091, 0.00011669399999999705, 0.0001165690000000004, 0.00011590200000000106, 0.00011619400000000002, 0.00011627800000000091, 0.00011590300000000053, 0.00011669499999999999, 0.00011663899999999824, 0.00011613900000000121, 0.0001178049999999986, 0.00011594400000000324, 0.0001163750000000019, 0.00011611100000000207, 0.00011618000000000045, 0.00011626400000000134, 0.00011602799999999719, 0.00011630500000000057, 0.00011616700000000035, 0.00011600000000000152, 0.0001177499999999998, 0.00011780600000000155, 0.00011780599999999808, 0.00011636099999999885, 0.00011616600000000088, 0.00011623599999999873, 0.00011599999999999805, 0.00011615299999999731, 0.00011631900000000014, 0.00011651400000000159, 0.00011638900000000146, 0.00011782000000000112, 0.0001162499999999983, 0.00011655500000000082, 0.00011594399999999977, 0.00011590200000000106, 0.00011650000000000202, 0.00011658299999999996, 0.00011776399999999937, 0.00011629200000000048, 0.00011598600000000195, 0.00011663900000000171, 0.00011612500000000164, 0.00011647200000000288, 0.0001161109999999986, 0.00011649999999999855, 0.00011612500000000164, 0.00011633299999999971, 0.00011662499999999867, 0.00011633299999999971]</msg>
<status status="PASS" starttime="20201112 09:44:18.196" endtime="20201112 09:44:18.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.192" endtime="20201112 09:44:18.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.201" endtime="20201112 09:44:18.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.205" endtime="20201112 09:44:18.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.203" endtime="20201112 09:44:18.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.200" endtime="20201112 09:44:18.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.831" endtime="20201112 09:44:18.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.831" endtime="20201112 09:44:18.226"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.234" endtime="20201112 09:44:18.256"></status>
</kw>
<msg timestamp="20201112 09:44:18.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.233" endtime="20201112 09:44:18.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.257" endtime="20201112 09:44:18.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.260" endtime="20201112 09:44:18.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.230" endtime="20201112 09:44:18.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.228" endtime="20201112 09:44:18.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.270" endtime="20201112 09:44:18.555"></status>
</kw>
<msg timestamp="20201112 09:44:18.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.268" endtime="20201112 09:44:18.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.559" endtime="20201112 09:44:18.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.567" endtime="20201112 09:44:18.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.266" endtime="20201112 09:44:18.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.264" endtime="20201112 09:44:18.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.574" level="INFO">${RESULT} = [{'time': 0.019853514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011732000000000062, 'source_diff': 0.00011732000000000062}, {'time': 0.019973556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:18.571" endtime="20201112 09:44:18.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.587" level="INFO">${ACCURACY} = {'source_diff': [0.00011732000000000062, 0.00011716700000000135, 0.0001172499999999993, 0.00011736099999999985, 0.00011887500000000092, 0.00011777699999999947, 0.00011688800000000249, 0.00011694399999...</msg>
<status status="PASS" starttime="20201112 09:44:18.575" endtime="20201112 09:44:18.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.591" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.590" endtime="20201112 09:44:18.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.594" level="INFO">VALUE: [0.00011732000000000062, 0.00011716700000000135, 0.0001172499999999993, 0.00011736099999999985, 0.00011887500000000092, 0.00011777699999999947, 0.00011688800000000249, 0.0001169439999999973, 0.00011702799999999819, 0.00011762499999999967, 0.00011691699999999763, 0.00011719500000000049, 0.00011732000000000062, 0.00011772200000000066, 0.00011751399999999912, 0.0001169309999999972, 0.00011740299999999856, 0.00011697199999999991, 0.00011770800000000109, 0.00011719400000000102, 0.00011749999999999955, 0.00011729200000000148, 0.00011686099999999935, 0.00011770800000000109, 0.00011698599999999948, 0.00011698599999999948, 0.00011740299999999856, 0.00011691600000000163, 0.0001170560000000008, 0.00011717999999999798, 0.00011709700000000003, 0.00011705500000000132, 0.00011737499999999942, 0.00011744400000000127, 0.00011734700000000028, 0.00011712499999999917, 0.00011729200000000148, 0.00011698599999999948, 0.00011702700000000218, 0.00011772300000000013, 0.00011741599999999866, 0.00011752699999999922, 0.0001174300000000017, 0.00011769400000000152, 0.00011730500000000157, 0.00011716699999999788, 0.00011770900000000056, 0.00011694500000000024, 0.00011708399999999994, 0.00011748699999999945]</msg>
<status status="PASS" starttime="20201112 09:44:18.592" endtime="20201112 09:44:18.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.588" endtime="20201112 09:44:18.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.597" endtime="20201112 09:44:18.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.601" endtime="20201112 09:44:18.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.599" endtime="20201112 09:44:18.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.596" endtime="20201112 09:44:18.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.226" endtime="20201112 09:44:18.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.226" endtime="20201112 09:44:18.622"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.630" endtime="20201112 09:44:18.651"></status>
</kw>
<msg timestamp="20201112 09:44:18.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.629" endtime="20201112 09:44:18.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.653" endtime="20201112 09:44:18.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.655" endtime="20201112 09:44:18.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.626" endtime="20201112 09:44:18.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.624" endtime="20201112 09:44:18.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.665" endtime="20201112 09:44:18.950"></status>
</kw>
<msg timestamp="20201112 09:44:18.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.664" endtime="20201112 09:44:18.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.954" endtime="20201112 09:44:18.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.962" endtime="20201112 09:44:18.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.661" endtime="20201112 09:44:18.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.659" endtime="20201112 09:44:18.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.968" level="INFO">${RESULT} = [{'time': 0.019814889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011797199999999744, 'source_diff': 0.00011797199999999744}, {'time': 0.019937847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:18.965" endtime="20201112 09:44:18.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.982" level="INFO">${ACCURACY} = {'source_diff': [0.00011797199999999744, 0.0001198050000000006, 0.00011850000000000055, 0.00011808400000000094, 0.00011837500000000042, 0.00011843100000000217, 0.00011982000000000312, 0.00011862500000...</msg>
<status status="PASS" starttime="20201112 09:44:18.969" endtime="20201112 09:44:18.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.987" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.986" endtime="20201112 09:44:18.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.989" level="INFO">VALUE: [0.00011797199999999744, 0.0001198050000000006, 0.00011850000000000055, 0.00011808400000000094, 0.00011837500000000042, 0.00011843100000000217, 0.00011982000000000312, 0.00011862500000000067, 0.0001179170000000021, 0.00011855499999999936, 0.00011818000000000245, 0.00011856899999999893, 0.00011870800000000209, 0.00011813899999999974, 0.00011813900000000321, 0.00011979199999999704, 0.00011980600000000008, 0.00011800000000000005, 0.0001181110000000006, 0.00011867999999999948, 0.00011981900000000018, 0.0001185690000000024, 0.0001180690000000019, 0.00011866599999999991, 0.0001182500000000003, 0.00011829199999999901, 0.00011837500000000042, 0.00011851400000000012, 0.00011787499999999992, 0.00011859799999999754, 0.00011850000000000055, 0.00011854099999999979, 0.00011795800000000134, 0.00011867999999999948, 0.0001198050000000006, 0.00011800000000000005, 0.00011833400000000119, 0.0001187089999999981, 0.00011980600000000008, 0.00011847199999999794, 0.00011862500000000067, 0.00011837500000000042, 0.00011823600000000073, 0.0001182500000000003, 0.00011787499999999992, 0.00011979200000000051, 0.00011800000000000005, 0.00011873600000000123, 0.00011862500000000067, 0.00011797200000000091]</msg>
<status status="PASS" starttime="20201112 09:44:18.988" endtime="20201112 09:44:18.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.983" endtime="20201112 09:44:18.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.993" endtime="20201112 09:44:18.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.996" endtime="20201112 09:44:19.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.995" endtime="20201112 09:44:19.016"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.991" endtime="20201112 09:44:19.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.622" endtime="20201112 09:44:19.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.622" endtime="20201112 09:44:19.017"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.026" endtime="20201112 09:44:19.048"></status>
</kw>
<msg timestamp="20201112 09:44:19.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.024" endtime="20201112 09:44:19.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.049" endtime="20201112 09:44:19.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.052" endtime="20201112 09:44:19.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.022" endtime="20201112 09:44:19.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.020" endtime="20201112 09:44:19.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.062" endtime="20201112 09:44:19.347"></status>
</kw>
<msg timestamp="20201112 09:44:19.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019902222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.060" endtime="20201112 09:44:19.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019902222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.351" endtime="20201112 09:44:19.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.359" endtime="20201112 09:44:19.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.057" endtime="20201112 09:44:19.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.056" endtime="20201112 09:44:19.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.366" level="INFO">${RESULT} = [{'time': 0.019902222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011904100000000029, 'source_diff': 0.00011904100000000029}, {'time': 0.02002725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:44:19.362" endtime="20201112 09:44:19.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.379" level="INFO">${ACCURACY} = {'source_diff': [0.00011904100000000029, 0.00011900000000000105, 0.00011973599999999876, 0.00011887500000000092, 0.0001195699999999994, 0.00011890300000000006, 0.00011897300000000138, 0.00012080500000...</msg>
<status status="PASS" starttime="20201112 09:44:19.366" endtime="20201112 09:44:19.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.383" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.382" endtime="20201112 09:44:19.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.385" level="INFO">VALUE: [0.00011904100000000029, 0.00011900000000000105, 0.00011973599999999876, 0.00011887500000000092, 0.0001195699999999994, 0.00011890300000000006, 0.00011897300000000138, 0.0001208050000000016, 0.00011969499999999952, 0.0001196110000000021, 0.00011913899999999727, 0.00011905499999999986, 0.00011886100000000135, 0.00011919400000000302, 0.00011930599999999958, 0.00011911099999999814, 0.00011887500000000092, 0.00011901400000000062, 0.00011917999999999998, 0.00011897199999999844, 0.00011943000000000023, 0.00011968000000000048, 0.00011976400000000137, 0.00011945799999999937, 0.00011937499999999795, 0.0001195829999999995, 0.00011919499999999902, 0.00011894499999999877, 0.0001195829999999995, 0.00011931900000000314, 0.00012074999999999933, 0.00011963900000000124, 0.00011904100000000029, 0.00011901400000000062, 0.00011979200000000051, 0.00012074999999999933, 0.00011915200000000084, 0.0001195560000000033, 0.0001194309999999997, 0.00012086099999999989, 0.00011952799999999722, 0.0001207630000000029, 0.00011969400000000005, 0.00011969400000000005, 0.00011941700000000013, 0.00011954200000000026, 0.00011969499999999952, 0.00011918099999999945, 0.0001191950000000025, 0.00012079200000000151]</msg>
<status status="PASS" starttime="20201112 09:44:19.384" endtime="20201112 09:44:19.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.380" endtime="20201112 09:44:19.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.389" endtime="20201112 09:44:19.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.393" endtime="20201112 09:44:19.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.391" endtime="20201112 09:44:19.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.387" endtime="20201112 09:44:19.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.018" endtime="20201112 09:44:19.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.017" endtime="20201112 09:44:19.413"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.422" endtime="20201112 09:44:19.442"></status>
</kw>
<msg timestamp="20201112 09:44:19.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.420" endtime="20201112 09:44:19.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.443" endtime="20201112 09:44:19.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.446" endtime="20201112 09:44:19.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.418" endtime="20201112 09:44:19.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.416" endtime="20201112 09:44:19.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.456" endtime="20201112 09:44:19.740"></status>
</kw>
<msg timestamp="20201112 09:44:19.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.454" endtime="20201112 09:44:19.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019808875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019929556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.744" endtime="20201112 09:44:19.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.752" endtime="20201112 09:44:19.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.452" endtime="20201112 09:44:19.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.450" endtime="20201112 09:44:19.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.759" level="INFO">${RESULT} = [{'time': 0.019929556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012068100000000095, 'source_diff': 0.00012068100000000095}, {'time': 0.020054569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:19.756" endtime="20201112 09:44:19.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.772" level="INFO">${ACCURACY} = {'source_diff': [0.00012068100000000095, 0.00012050000000000255, 0.0001201249999999987, 0.00012076400000000237, 0.00012016699999999741, 0.0001217639999999999, 0.00012022199999999969, 0.000120124999999...</msg>
<status status="PASS" starttime="20201112 09:44:19.760" endtime="20201112 09:44:19.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.777" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.776" endtime="20201112 09:44:19.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.779" level="INFO">VALUE: [0.00012068100000000095, 0.00012050000000000255, 0.0001201249999999987, 0.00012076400000000237, 0.00012016699999999741, 0.0001217639999999999, 0.00012022199999999969, 0.0001201249999999987, 0.00012008399999999947, 0.00012016700000000088, 0.00012005600000000033, 0.00011993000000000073, 0.00012002700000000172, 0.00012179200000000251, 0.00012001400000000162, 0.00012054200000000126, 0.00012055600000000083, 0.00012004200000000076, 0.0001205700000000004, 0.00011995899999999934, 0.00011998599999999901, 0.00012184700000000132, 0.00012011199999999861, 0.00012036100000000285, 0.000120083, 0.00012061099999999964, 0.00012041700000000113, 0.00012177799999999947, 0.00011998599999999901, 0.00012065300000000181, 0.0001205700000000004, 0.0001201249999999987, 0.00011987499999999846, 0.0001201249999999987, 0.00011995799999999987, 0.00012019400000000055, 0.00011988899999999802, 0.00011991700000000063, 0.0001201249999999987, 0.00012179199999999904, 0.00012044500000000027, 0.00012036200000000233, 0.00012023599999999926, 0.00011987499999999846, 0.00012012500000000217, 0.00012009699999999957, 0.000120083, 0.00012048599999999951, 0.00011987499999999846, 0.00012027800000000144]</msg>
<status status="PASS" starttime="20201112 09:44:19.778" endtime="20201112 09:44:19.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.773" endtime="20201112 09:44:19.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.783" endtime="20201112 09:44:19.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.786" endtime="20201112 09:44:19.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.784" endtime="20201112 09:44:19.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.781" endtime="20201112 09:44:19.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.414" endtime="20201112 09:44:19.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.414" endtime="20201112 09:44:19.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.311" endtime="20201112 09:44:19.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.811" endtime="20201112 09:44:19.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.810" endtime="20201112 09:44:19.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.808" endtime="20201112 09:44:19.832"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:40.232" endtime="20201112 09:44:19.832" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:59.067" endtime="20201112 09:44:19.836"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.893" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:44:19.901" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:44:20.865" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:44:19.892" endtime="20201112 09:44:20.866"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.868" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:44:20.867" endtime="20201112 09:44:20.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.891" endtime="20201112 09:44:20.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.872" endtime="20201112 09:44:21.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.870" endtime="20201112 09:44:21.056"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.069" endtime="20201112 09:44:21.094"></status>
</kw>
<msg timestamp="20201112 09:44:21.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.067" endtime="20201112 09:44:21.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.097" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.095" endtime="20201112 09:44:21.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.100" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:21.098" endtime="20201112 09:44:21.100"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:21.065" endtime="20201112 09:44:21.101"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:21.063" endtime="20201112 09:44:21.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.061" endtime="20201112 09:44:21.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:21.107" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:21.106" endtime="20201112 09:44:21.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.103" endtime="20201112 09:44:21.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.061" endtime="20201112 09:44:21.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.060" endtime="20201112 09:44:21.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.108" endtime="20201112 09:44:21.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.059" endtime="20201112 09:44:21.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.112" endtime="20201112 09:44:21.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.057" endtime="20201112 09:44:21.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.889" endtime="20201112 09:44:21.114"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.120" endtime="20201112 09:44:21.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.119" endtime="20201112 09:44:21.140"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.153" endtime="20201112 09:44:21.177"></status>
</kw>
<msg timestamp="20201112 09:44:21.178" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.152" endtime="20201112 09:44:21.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.184" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.181" endtime="20201112 09:44:21.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.190" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:21.186" endtime="20201112 09:44:21.190"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:21.149" endtime="20201112 09:44:21.192"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:21.147" endtime="20201112 09:44:21.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.145" endtime="20201112 09:44:21.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:21.201" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:21.200" endtime="20201112 09:44:21.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.195" endtime="20201112 09:44:21.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.145" endtime="20201112 09:44:21.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.144" endtime="20201112 09:44:21.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.205" endtime="20201112 09:44:21.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.143" endtime="20201112 09:44:21.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.141" endtime="20201112 09:44:21.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.117" endtime="20201112 09:44:21.210"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:21.217" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.237" endtime="20201112 09:44:23.315"></status>
</kw>
<msg timestamp="20201112 09:44:23.316" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 295597, 'wakeups': [305684, 315624, 325605, 335605, 345605, 355605, 36...</msg>
<status status="PASS" starttime="20201112 09:44:21.233" endtime="20201112 09:44:23.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.322" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 295597, 'wakeups': [305684, 315624, 325605, 335605, 345605, 355605, 36...</msg>
<status status="PASS" starttime="20201112 09:44:23.319" endtime="20201112 09:44:23.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.331" endtime="20201112 09:44:23.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.228" endtime="20201112 09:44:23.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.222" endtime="20201112 09:44:23.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:23.342" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [305684, 315624, 325605, 335605, 345605, 355605, 365605, 375605, 385605, 395605, 405605, 415605, 425605, 435605, 445605, 455605, 465605, 475605, ...</msg>
<status status="PASS" starttime="20201112 09:44:23.338" endtime="20201112 09:44:23.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.351" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:23.349" endtime="20201112 09:44:23.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.355" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:23.353" endtime="20201112 09:44:23.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.344" endtime="20201112 09:44:23.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.365" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:23.363" endtime="20201112 09:44:23.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.369" level="INFO">VALUE: 295597</msg>
<status status="PASS" starttime="20201112 09:44:23.367" endtime="20201112 09:44:23.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.358" endtime="20201112 09:44:23.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.380" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:23.377" endtime="20201112 09:44:23.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.384" level="INFO">VALUE: [305684, 315624, 325605, 335605, 345605, 355605, 365605, 375605, 385605, 395605, 405605, 415605, 425605, 435605, 445605, 455605, 465605, 475605, 485605, 495605, 505605, 515605, 525605, 535605, 545605, 555605, 565605, 575605, 585605, 595605, 605605, 615605, 625605, 635605, 645605, 655605, 665605, 675605, 685605, 695605, 705605, 715605, 725605, 735605, 745605, 755605, 765605, 775605, 785605, 795605, 805605, 815605, 825605, 835605, 845605, 855605, 865605, 875605, 885605, 895605, 905605, 915605, 925605, 935605, 945605, 955605, 965605, 975605, 985605, 995605, 1005605, 1015605, 1025605, 1035605, 1045605, 1055605, 1065605, 1075605, 1085605, 1095605, 1105605, 1115605, 1125605, 1135605, 1145605, 1155605, 1165605, 1175605, 1185605, 1195605, 1205605, 1215605, 1225605, 1235605, 1245605, 1255605, 1265605, 1275605, 1285605, 1295605]</msg>
<status status="PASS" starttime="20201112 09:44:23.382" endtime="20201112 09:44:23.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.372" endtime="20201112 09:44:23.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.399" endtime="20201112 09:44:23.701"></status>
</kw>
<msg timestamp="20201112 09:44:23.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.107348125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.117444403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.396" endtime="20201112 09:44:23.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.107348125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.117444403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.705" endtime="20201112 09:44:23.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.712" endtime="20201112 09:44:23.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.391" endtime="20201112 09:44:23.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.387" endtime="20201112 09:44:23.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:23.739" level="INFO">${RESULT} = {'source_diff': [0, 0.010096278, 0.009927902999999988, 0.009981916000000007, 0.010000916999999998, 0.010001014000000003, 0.010000833000000015, 0.010000916999999998, 0.010000943999999984, 0.01000090300...</msg>
<status status="PASS" starttime="20201112 09:44:23.715" endtime="20201112 09:44:23.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.744" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:23.743" endtime="20201112 09:44:23.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.746" level="INFO">VALUE: 0.107348125</msg>
<status status="PASS" starttime="20201112 09:44:23.745" endtime="20201112 09:44:23.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.740" endtime="20201112 09:44:23.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.751" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:23.750" endtime="20201112 09:44:23.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.753" level="INFO">VALUE: [0.117444403, 0.127372306, 0.137354222, 0.147355139, 0.157356153, 0.167356986, 0.177357903, 0.187358847, 0.19735975, 0.207360708, 0.217361583, 0.227362486, 0.237363431, 0.247364333, 0.257365264, 0.267366167, 0.277367139, 0.287368014, 0.297368944, 0.307369847, 0.317370792, 0.327371694, 0.337372611, 0.347373528, 0.357374486, 0.367375375, 0.377376361, 0.387377236, 0.397378167, 0.407379042, 0.417379972, 0.427380889, 0.437381833, 0.447382722, 0.457383653, 0.467384597, 0.4773855, 0.487386403, 0.497387375, 0.50738825, 0.517389181, 0.527390125, 0.537391014, 0.547391931, 0.557392875, 0.567393764, 0.577394708, 0.587395611, 0.597396542, 0.607397472, 0.617398389, 0.627399306, 0.637400236, 0.647401139, 0.657402069, 0.667402972, 0.677403931, 0.687404819, 0.697405764, 0.707406681, 0.717407597, 0.7274085, 0.737409431, 0.747410347, 0.757411278, 0.767412194, 0.777413125, 0.787414028, 0.797414958, 0.807415875, 0.817416819, 0.827417736, 0.837418653, 0.847419556, 0.857420486, 0.867421389, 0.877422333, 0.88742325, 0.897424236, 0.907425083, 0.917426014, 0.927426931, 0.937427861, 0.947428778, 0.957429694, 0.967430611, 0.977431542, 0.987432458, 0.997433375, 1.007434292, 1.017435236, 1.027436139, 1.037437069, 1.047437986, 1.057438903, 1.067439833, 1.077440792, 1.087441667, 1.097442597, 1.1074435] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:23.752" endtime="20201112 09:44:23.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.747" endtime="20201112 09:44:23.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.756" endtime="20201112 09:44:23.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.760" endtime="20201112 09:44:23.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.758" endtime="20201112 09:44:23.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.755" endtime="20201112 09:44:23.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.219" endtime="20201112 09:44:23.781"></status>
</kw>
<msg timestamp="20201112 09:44:23.781" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.789" endtime="20201112 09:44:25.871"></status>
</kw>
<msg timestamp="20201112 09:44:25.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2845902, 'wakeups': [2855910, 2865910, 2875910, 2885910, 2895910, 2905...</msg>
<status status="PASS" starttime="20201112 09:44:23.787" endtime="20201112 09:44:25.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2845902, 'wakeups': [2855910, 2865910, 2875910, 2885910, 2895910, 2905...</msg>
<status status="PASS" starttime="20201112 09:44:25.874" endtime="20201112 09:44:25.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.880" endtime="20201112 09:44:25.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.785" endtime="20201112 09:44:25.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.783" endtime="20201112 09:44:25.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:25.891" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [2855910, 2865910, 2875910, 2885910, 2895910, 2905910, 2915910, 2925910, 2935910, 2945910, 2955910, 2965910, 2975910, 2985910, 2995910, 3005910, ...</msg>
<status status="PASS" starttime="20201112 09:44:25.887" endtime="20201112 09:44:25.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.901" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:25.897" endtime="20201112 09:44:25.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.906" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:25.904" endtime="20201112 09:44:25.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.893" endtime="20201112 09:44:25.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.916" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:25.914" endtime="20201112 09:44:25.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.921" level="INFO">VALUE: 2845902</msg>
<status status="PASS" starttime="20201112 09:44:25.919" endtime="20201112 09:44:25.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.909" endtime="20201112 09:44:25.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.931" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:25.929" endtime="20201112 09:44:25.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.935" level="INFO">VALUE: [2855910, 2865910, 2875910, 2885910, 2895910, 2905910, 2915910, 2925910, 2935910, 2945910, 2955910, 2965910, 2975910, 2985910, 2995910, 3005910, 3015910, 3025910, 3035910, 3045910, 3055910, 3065910, 3075910, 3085910, 3095910, 3105910, 3115910, 3125910, 3135910, 3145910, 3155910, 3165910, 3175910, 3185910, 3195910, 3205910, 3215910, 3225910, 3235910, 3245910, 3255910, 3265910, 3275910, 3285910, 3295910, 3305910, 3315910, 3325910, 3335910, 3345910, 3355910, 3365910, 3375910, 3385910, 3395910, 3405910, 3415910, 3425910, 3435910, 3445910, 3455910, 3465910, 3475910, 3485910, 3495910, 3505910, 3515910, 3525910, 3535910, 3545910, 3555910, 3565910, 3575910, 3585910, 3595910, 3605910, 3615910, 3625910, 3635910, 3645910, 3655910, 3665910, 3675910, 3685910, 3695910, 3705910, 3715910, 3725910, 3735910, 3745910, 3755910, 3765910, 3775910, 3785910, 3795910, 3805910, 3815910, 3825910, 3835910, 3845910]</msg>
<status status="PASS" starttime="20201112 09:44:25.933" endtime="20201112 09:44:25.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.924" endtime="20201112 09:44:25.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.952" endtime="20201112 09:44:26.250"></status>
</kw>
<msg timestamp="20201112 09:44:26.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018097236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028106181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.948" endtime="20201112 09:44:26.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018097236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028106181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:26.254" endtime="20201112 09:44:26.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.261" endtime="20201112 09:44:26.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.943" endtime="20201112 09:44:26.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.939" endtime="20201112 09:44:26.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:26.287" level="INFO">${RESULT} = {'source_diff': [0, 0.010008945000000002, 0.010000929999999998, 0.010000930999999998, 0.010000916000000006, 0.010000902999999992, 0.010000931000000005, 0.010000902000000006, 0.01000095899999999, 0.010...</msg>
<status status="PASS" starttime="20201112 09:44:26.265" endtime="20201112 09:44:26.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.292" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:26.291" endtime="20201112 09:44:26.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.294" level="INFO">VALUE: 0.018097236</msg>
<status status="PASS" starttime="20201112 09:44:26.293" endtime="20201112 09:44:26.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.288" endtime="20201112 09:44:26.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.300" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:26.299" endtime="20201112 09:44:26.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.302" level="INFO">VALUE: [0.028106181, 0.038107111, 0.048108042, 0.058108958, 0.068109861, 0.078110792, 0.088111694, 0.098112653, 0.108113542, 0.118114472, 0.128115403, 0.138116361, 0.148117222, 0.158118153, 0.168119056, 0.17812, 0.188120917, 0.198121847, 0.20812275, 0.218123667, 0.228124583, 0.238125514, 0.248126417, 0.258127347, 0.268128278, 0.278129208, 0.288130111, 0.298131056, 0.308131944, 0.318132875, 0.328133778, 0.338134722, 0.348135625, 0.358136556, 0.368137528, 0.378138403, 0.388139319, 0.398140236, 0.408141139, 0.418142083, 0.428143, 0.438143917, 0.448144847, 0.45814575, 0.468146667, 0.478147611, 0.4881485, 0.498149458, 0.508150347, 0.518151278, 0.528152194, 0.538153125, 0.548154028, 0.558154958, 0.568155875, 0.578156819, 0.588157708, 0.598158653, 0.608159569, 0.618160486, 0.628161403, 0.638162333, 0.648163264, 0.658164194, 0.668165083, 0.678166083, 0.688166931, 0.698167861, 0.708168778, 0.718169694, 0.728170639, 0.738171556, 0.748172444, 0.758173389, 0.768174292, 0.778175222, 0.788176167, 0.798177069, 0.808178028, 0.818178917, 0.828179819, 0.838180764, 0.848181667, 0.858182611, 0.868183556, 0.878184458, 0.888185347, 0.898186278, 0.908187194, 0.918188139, 0.928189056, 0.938189972, 0.948190875, 0.958191806, 0.968192722, 0.978193653, 0.988194556, 0.998195514, 1.008196403, 1.018197333] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:26.301" endtime="20201112 09:44:26.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.296" endtime="20201112 09:44:26.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.305" endtime="20201112 09:44:26.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.309" endtime="20201112 09:44:26.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.307" endtime="20201112 09:44:26.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.304" endtime="20201112 09:44:26.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.781" endtime="20201112 09:44:26.329"></status>
</kw>
<msg timestamp="20201112 09:44:26.330" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.337" endtime="20201112 09:44:28.419"></status>
</kw>
<msg timestamp="20201112 09:44:28.421" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5394707, 'wakeups': [5404715, 5414715, 5424715, 5434715, 5444715, 5454...</msg>
<status status="PASS" starttime="20201112 09:44:26.336" endtime="20201112 09:44:28.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.426" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5394707, 'wakeups': [5404715, 5414715, 5424715, 5434715, 5444715, 5454...</msg>
<status status="PASS" starttime="20201112 09:44:28.423" endtime="20201112 09:44:28.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.429" endtime="20201112 09:44:28.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.333" endtime="20201112 09:44:28.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.332" endtime="20201112 09:44:28.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.439" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [5404715, 5414715, 5424715, 5434715, 5444715, 5454715, 5464715, 5474715, 5484715, 5494715, 5504715, 5514715, 5524715, 5534715, 5544715, 5554715, ...</msg>
<status status="PASS" starttime="20201112 09:44:28.435" endtime="20201112 09:44:28.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.448" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:28.446" endtime="20201112 09:44:28.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.452" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:28.450" endtime="20201112 09:44:28.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.441" endtime="20201112 09:44:28.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.462" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:28.460" endtime="20201112 09:44:28.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.466" level="INFO">VALUE: 5394707</msg>
<status status="PASS" starttime="20201112 09:44:28.465" endtime="20201112 09:44:28.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.455" endtime="20201112 09:44:28.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.476" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:28.474" endtime="20201112 09:44:28.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.481" level="INFO">VALUE: [5404715, 5414715, 5424715, 5434715, 5444715, 5454715, 5464715, 5474715, 5484715, 5494715, 5504715, 5514715, 5524715, 5534715, 5544715, 5554715, 5564715, 5574715, 5584715, 5594715, 5604715, 5614715, 5624715, 5634715, 5644715, 5654715, 5664715, 5674715, 5684715, 5694715, 5704715, 5714715, 5724715, 5734715, 5744715, 5754715, 5764715, 5774715, 5784715, 5794715, 5804715, 5814715, 5824715, 5834715, 5844715, 5854715, 5864715, 5874715, 5884715, 5894715, 5904715, 5914715, 5924715, 5934715, 5944715, 5954715, 5964715, 5974715, 5984715, 5994715, 6004715, 6014715, 6024715, 6034715, 6044715, 6054715, 6064715, 6074715, 6084715, 6094715, 6104715, 6114715, 6124715, 6134715, 6144715, 6154715, 6164715, 6174715, 6184715, 6194715, 6204715, 6214715, 6224715, 6234715, 6244715, 6254715, 6264715, 6274715, 6284715, 6294715, 6304715, 6314715, 6324715, 6334715, 6344715, 6354715, 6364715, 6374715, 6384715, 6394715]</msg>
<status status="PASS" starttime="20201112 09:44:28.479" endtime="20201112 09:44:28.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.469" endtime="20201112 09:44:28.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.503" endtime="20201112 09:44:28.803"></status>
</kw>
<msg timestamp="20201112 09:44:28.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018057875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028067069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.500" endtime="20201112 09:44:28.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018057875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028067069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:28.807" endtime="20201112 09:44:28.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.814" endtime="20201112 09:44:28.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.493" endtime="20201112 09:44:28.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.484" endtime="20201112 09:44:28.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.840" level="INFO">${RESULT} = {'source_diff': [0, 0.010009193999999999, 0.010000944999999997, 0.010000944000000005, 0.010000916999999998, 0.010000875, 0.010000931000000005, 0.010000915999999999, 0.01000093099999999, 0.010000903000...</msg>
<status status="PASS" starttime="20201112 09:44:28.817" endtime="20201112 09:44:28.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.845" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:28.844" endtime="20201112 09:44:28.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.847" level="INFO">VALUE: 0.018057875</msg>
<status status="PASS" starttime="20201112 09:44:28.846" endtime="20201112 09:44:28.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.841" endtime="20201112 09:44:28.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.852" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:28.851" endtime="20201112 09:44:28.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.854" level="INFO">VALUE: [0.028067069, 0.038068014, 0.048068958, 0.058069875, 0.06807075, 0.078071681, 0.088072597, 0.098073528, 0.108074431, 0.118075361, 0.128076278, 0.138077208, 0.148078125, 0.158079042, 0.168079958, 0.178080889, 0.188081792, 0.198082736, 0.208083653, 0.218084569, 0.228085528, 0.238086417, 0.248087333, 0.25808825, 0.268089153, 0.278090083, 0.288090986, 0.298091931, 0.308092833, 0.318093764, 0.328094681, 0.338095625, 0.348096514, 0.358097444, 0.368098389, 0.378099306, 0.388100194, 0.398101125, 0.408102042, 0.418102972, 0.428103903, 0.438104819, 0.448105722, 0.458106694, 0.468107611, 0.4781085, 0.488109458, 0.498110347, 0.508111264, 0.518112236, 0.528113111, 0.538114069, 0.548114944, 0.558115875, 0.568116778, 0.578117708, 0.588118625, 0.598119569, 0.608120458, 0.618121403, 0.628122306, 0.63812325, 0.648124167, 0.658125083, 0.668125986, 0.678126931, 0.688127889, 0.698128764, 0.708129681, 0.718130653, 0.728131514, 0.738132472, 0.748133375, 0.758134306, 0.768135208, 0.778136208, 0.788137056, 0.798137986, 0.808138889, 0.818139875, 0.828140736, 0.838141667, 0.848142639, 0.858143514, 0.868144417, 0.878145347, 0.888146264, 0.898147208, 0.908148111, 0.918149042, 0.928149958, 0.938150889, 0.948151806, 0.958152722, 0.968153625, 0.978154569, 0.988155472, 0.998156417, 1.008157319, 1.01815825] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:28.853" endtime="20201112 09:44:28.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.848" endtime="20201112 09:44:28.856"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.858" endtime="20201112 09:44:28.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:28.861" endtime="20201112 09:44:28.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.860" endtime="20201112 09:44:28.881"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.856" endtime="20201112 09:44:28.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.330" endtime="20201112 09:44:28.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.215" endtime="20201112 09:44:28.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.213" endtime="20201112 09:44:28.883"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:28.885" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.894" endtime="20201112 09:44:30.977"></status>
</kw>
<msg timestamp="20201112 09:44:30.978" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7951695, 'wakeups': [7961724, 7971704, 7981703, 7991703, 8001703, 8011...</msg>
<status status="PASS" starttime="20201112 09:44:28.893" endtime="20201112 09:44:30.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:30.984" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 7951695, 'wakeups': [7961724, 7971704, 7981703, 7991703, 8001703, 8011...</msg>
<status status="PASS" starttime="20201112 09:44:30.981" endtime="20201112 09:44:30.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:30.987" endtime="20201112 09:44:30.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.890" endtime="20201112 09:44:30.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.887" endtime="20201112 09:44:30.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:30.997" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [7961724, 7971704, 7981703, 7991703, 8001703, 8011703, 8021703, 8031703, 8041703, 8051703, 8061703, 8071703, 8081703, 8091703, 8101703, 8111703, ...</msg>
<status status="PASS" starttime="20201112 09:44:30.994" endtime="20201112 09:44:30.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.006" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:31.004" endtime="20201112 09:44:31.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.010" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:31.008" endtime="20201112 09:44:31.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:30.999" endtime="20201112 09:44:31.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.020" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:31.018" endtime="20201112 09:44:31.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.025" level="INFO">VALUE: 7951695</msg>
<status status="PASS" starttime="20201112 09:44:31.023" endtime="20201112 09:44:31.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.013" endtime="20201112 09:44:31.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.035" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:31.033" endtime="20201112 09:44:31.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.039" level="INFO">VALUE: [7961724, 7971704, 7981703, 7991703, 8001703, 8011703, 8021703, 8031703, 8041703, 8051703, 8061703, 8071703, 8081703, 8091703, 8101703, 8111703, 8121703, 8131703, 8141703, 8151703, 8161703, 8171703, 8181703, 8191703, 8201703, 8211703, 8221703, 8231703, 8241703, 8251703, 8261703, 8271703, 8281703, 8291703, 8301703, 8311703, 8321703, 8331703, 8341703, 8351703, 8361703, 8371703, 8381703, 8391703, 8401703, 8411703, 8421703, 8431703, 8441703, 8451703, 8461703, 8471703, 8481703, 8491703, 8501703, 8511703, 8521703, 8531703, 8541703, 8551703, 8561703, 8571703, 8581703, 8591703, 8601703, 8611703, 8621703, 8631703, 8641703, 8651703, 8661703, 8671703, 8681703, 8691703, 8701703, 8711703, 8721703, 8731703, 8741703, 8751703, 8761703, 8771703, 8781703, 8791703, 8801703, 8811703, 8821703, 8831703, 8841703, 8851703, 8861703, 8871703, 8881703, 8891703, 8901703, 8911703, 8921703, 8931703, 8941703, 8951703]</msg>
<status status="PASS" starttime="20201112 09:44:31.037" endtime="20201112 09:44:31.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.028" endtime="20201112 09:44:31.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.055" endtime="20201112 09:44:31.353"></status>
</kw>
<msg timestamp="20201112 09:44:31.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032357069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.051" endtime="20201112 09:44:31.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022326333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032357069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.357" endtime="20201112 09:44:31.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.364" endtime="20201112 09:44:31.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.046" endtime="20201112 09:44:31.367"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.042" endtime="20201112 09:44:31.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.391" level="INFO">${RESULT} = {'source_diff': [0, 0.010030736000000002, 0.009980555999999995, 0.009999903000000004, 0.010000943999999998, 0.010000902999999998, 0.010000943999999998, 0.010000903000000005, 0.010000931000000005, 0.01...</msg>
<status status="PASS" starttime="20201112 09:44:31.368" endtime="20201112 09:44:31.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.396" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:31.395" endtime="20201112 09:44:31.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.398" level="INFO">VALUE: 0.022326333</msg>
<status status="PASS" starttime="20201112 09:44:31.397" endtime="20201112 09:44:31.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.392" endtime="20201112 09:44:31.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.403" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:31.402" endtime="20201112 09:44:31.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.405" level="INFO">VALUE: [0.032357069, 0.042337625, 0.052337528, 0.062338472, 0.072339375, 0.082340319, 0.092341222, 0.102342153, 0.112343056, 0.122343986, 0.132344958, 0.142345806, 0.152346736, 0.162347653, 0.172348569, 0.182349486, 0.192350458, 0.202351347, 0.212352264, 0.222353181, 0.232354097, 0.242355014, 0.252355931, 0.262356875, 0.272357819, 0.282358694, 0.292359625, 0.302360556, 0.312361458, 0.322362375, 0.332363306, 0.342364222, 0.352365153, 0.362366111, 0.372367, 0.382367903, 0.392368833, 0.40236975, 0.412370667, 0.422371583, 0.432372542, 0.442373431, 0.452374361, 0.462375264, 0.472376194, 0.482377125, 0.492378028, 0.502378972, 0.512379875, 0.522380792, 0.532381722, 0.542382667, 0.552383569, 0.562384486, 0.572385403, 0.582386319, 0.59238725, 0.602388181, 0.612389083, 0.622390014, 0.632390944, 0.642391847, 0.652392778, 0.662393694, 0.672394681, 0.682395542, 0.692396472, 0.702397389, 0.712398306, 0.722399236, 0.732400153, 0.742401069, 0.752401986, 0.762402903, 0.772403833, 0.78240475, 0.792405681, 0.802406597, 0.812407514, 0.822408444, 0.832409375, 0.842410278, 0.852411194, 0.862412139, 0.872413042, 0.882413986, 0.892414889, 0.902415819, 0.91241675, 0.922417653, 0.932418569, 0.9424195, 0.952420431, 0.962421375, 0.972422278, 0.982423236, 0.992424097, 1.002425028, 1.012425944, 1.022426875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:31.404" endtime="20201112 09:44:31.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.399" endtime="20201112 09:44:31.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.408" endtime="20201112 09:44:31.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.412" endtime="20201112 09:44:31.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.410" endtime="20201112 09:44:31.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.407" endtime="20201112 09:44:31.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.886" endtime="20201112 09:44:31.432"></status>
</kw>
<msg timestamp="20201112 09:44:31.433" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.441" endtime="20201112 09:44:33.534"></status>
</kw>
<msg timestamp="20201112 09:44:33.535" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10497748, 'wakeups': [10507769, 10517756, 10527756, 10537756, 10547756...</msg>
<status status="PASS" starttime="20201112 09:44:31.439" endtime="20201112 09:44:33.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.541" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10497748, 'wakeups': [10507769, 10517756, 10527756, 10537756, 10547756...</msg>
<status status="PASS" starttime="20201112 09:44:33.537" endtime="20201112 09:44:33.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.543" endtime="20201112 09:44:33.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.436" endtime="20201112 09:44:33.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.435" endtime="20201112 09:44:33.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.554" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [10507769, 10517756, 10527756, 10537756, 10547756, 10557756, 10567756, 10577756, 10587756, 10597756, 10607756, 10617756, 10627756, 10637756, 1064...</msg>
<status status="PASS" starttime="20201112 09:44:33.550" endtime="20201112 09:44:33.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.568" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:33.566" endtime="20201112 09:44:33.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.572" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:33.570" endtime="20201112 09:44:33.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.556" endtime="20201112 09:44:33.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.582" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:33.580" endtime="20201112 09:44:33.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.584" level="INFO">VALUE: 10497748</msg>
<status status="PASS" starttime="20201112 09:44:33.583" endtime="20201112 09:44:33.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.575" endtime="20201112 09:44:33.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.589" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:33.588" endtime="20201112 09:44:33.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.591" level="INFO">VALUE: [10507769, 10517756, 10527756, 10537756, 10547756, 10557756, 10567756, 10577756, 10587756, 10597756, 10607756, 10617756, 10627756, 10637756, 10647756, 10657756, 10667756, 10677756, 10687756, 10697756, 10707756, 10717756, 10727756, 10737756, 10747756, 10757756, 10767756, 10777756, 10787756, 10797756, 10807756, 10817756, 10827756, 10837756, 10847756, 10857756, 10867756, 10877756, 10887756, 10897756, 10907756, 10917756, 10927756, 10937756, 10947756, 10957756, 10967756, 10977756, 10987756, 10997756, 11007756, 11017756, 11027756, 11037756, 11047756, 11057756, 11067756, 11077756, 11087756, 11097756, 11107756, 11117756, 11127756, 11137756, 11147756, 11157756, 11167756, 11177756, 11187756, 11197756, 11207756, 11217756, 11227756, 11237756, 11247756, 11257756, 11267756, 11277756, 11287756, 11297756, 11307756, 11317756, 11327756, 11337756, 11347756, 11357756, 11367756, 11377756, 11387756, 11397756, 11407756, 11417756, 11427756, 11437756, 11447756, 11457756, 11467756, 11477756, 11487756, 11497756]</msg>
<status status="PASS" starttime="20201112 09:44:33.590" endtime="20201112 09:44:33.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.586" endtime="20201112 09:44:33.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.599" endtime="20201112 09:44:33.890"></status>
</kw>
<msg timestamp="20201112 09:44:33.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018101014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028122611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.597" endtime="20201112 09:44:33.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018101014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028122611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:33.894" endtime="20201112 09:44:33.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.902" endtime="20201112 09:44:33.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.595" endtime="20201112 09:44:33.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.593" endtime="20201112 09:44:33.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:33.928" level="INFO">${RESULT} = {'source_diff': [0, 0.010021597, 0.009988278000000003, 0.010000929999999998, 0.010000930999999998, 0.010000944000000005, 0.010000874999999992, 0.010000959000000004, 0.010000903000000005, 0.01000091599...</msg>
<status status="PASS" starttime="20201112 09:44:33.905" endtime="20201112 09:44:33.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.933" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:33.932" endtime="20201112 09:44:33.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.935" level="INFO">VALUE: 0.018101014</msg>
<status status="PASS" starttime="20201112 09:44:33.934" endtime="20201112 09:44:33.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.929" endtime="20201112 09:44:33.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.940" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:33.939" endtime="20201112 09:44:33.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:33.943" level="INFO">VALUE: [0.028122611, 0.038110889, 0.048111819, 0.05811275, 0.068113694, 0.078114569, 0.088115528, 0.098116431, 0.108117347, 0.11811825, 0.128119167, 0.138120097, 0.148121014, 0.158121931, 0.168122847, 0.178123764, 0.188124694, 0.198125611, 0.208126528, 0.218127444, 0.228128403, 0.238129292, 0.248130208, 0.258131139, 0.268132056, 0.278132972, 0.288133889, 0.298134806, 0.308135778, 0.318136653, 0.328137569, 0.3381385, 0.348139417, 0.358140333, 0.36814125, 0.378142194, 0.388143097, 0.398144028, 0.408144958, 0.418145861, 0.428146778, 0.438147764, 0.448148625, 0.458149556, 0.468150458, 0.478151403, 0.488152306, 0.498153236, 0.508154153, 0.518155069, 0.528156, 0.538156917, 0.548157833, 0.558158764, 0.568159694, 0.578160597, 0.588161514, 0.598162472, 0.608163361, 0.618164278, 0.628165194, 0.638166125, 0.648167042, 0.658167986, 0.668168903, 0.678169806, 0.688170736, 0.698171667, 0.708172569, 0.718173514, 0.728174417, 0.738175417, 0.748176264, 0.758177208, 0.768178111, 0.778179042, 0.788179958, 0.798180861, 0.808181792, 0.818182708, 0.828183681, 0.838184569, 0.848185472, 0.858186403, 0.868187333, 0.878188236, 0.888189153, 0.898190083, 0.908191, 0.918191917, 0.928192847, 0.938193764, 0.948194722, 0.958195611, 0.968196542, 0.978197458, 0.988198389, 0.998199319, 1.008200208, 1.018201139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:33.942" endtime="20201112 09:44:33.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.936" endtime="20201112 09:44:33.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.946" endtime="20201112 09:44:33.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:33.950" endtime="20201112 09:44:33.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.948" endtime="20201112 09:44:33.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.945" endtime="20201112 09:44:33.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.433" endtime="20201112 09:44:33.970"></status>
</kw>
<msg timestamp="20201112 09:44:33.971" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:33.979" endtime="20201112 09:44:36.072"></status>
</kw>
<msg timestamp="20201112 09:44:36.073" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13035677, 'wakeups': [13045698, 13055685, 13065685, 13075685, 13085685...</msg>
<status status="PASS" starttime="20201112 09:44:33.977" endtime="20201112 09:44:36.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.079" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13035677, 'wakeups': [13045698, 13055685, 13065685, 13075685, 13085685...</msg>
<status status="PASS" starttime="20201112 09:44:36.075" endtime="20201112 09:44:36.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.081" endtime="20201112 09:44:36.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.974" endtime="20201112 09:44:36.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.973" endtime="20201112 09:44:36.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.092" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [13045698, 13055685, 13065685, 13075685, 13085685, 13095685, 13105685, 13115685, 13125685, 13135685, 13145685, 13155685, 13165685, 13175685, 1318...</msg>
<status status="PASS" starttime="20201112 09:44:36.088" endtime="20201112 09:44:36.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.100" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:36.098" endtime="20201112 09:44:36.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.105" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:36.103" endtime="20201112 09:44:36.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.094" endtime="20201112 09:44:36.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.115" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:36.113" endtime="20201112 09:44:36.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.119" level="INFO">VALUE: 13035677</msg>
<status status="PASS" starttime="20201112 09:44:36.117" endtime="20201112 09:44:36.120"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.108" endtime="20201112 09:44:36.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.124" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:36.123" endtime="20201112 09:44:36.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.127" level="INFO">VALUE: [13045698, 13055685, 13065685, 13075685, 13085685, 13095685, 13105685, 13115685, 13125685, 13135685, 13145685, 13155685, 13165685, 13175685, 13185685, 13195685, 13205685, 13215685, 13225685, 13235685, 13245685, 13255685, 13265685, 13275685, 13285685, 13295685, 13305685, 13315685, 13325685, 13335685, 13345685, 13355685, 13365685, 13375685, 13385685, 13395685, 13405685, 13415685, 13425685, 13435685, 13445685, 13455685, 13465685, 13475685, 13485685, 13495685, 13505685, 13515685, 13525685, 13535685, 13545685, 13555685, 13565685, 13575685, 13585685, 13595685, 13605685, 13615685, 13625685, 13635685, 13645685, 13655685, 13665685, 13675685, 13685685, 13695685, 13705685, 13715685, 13725685, 13735685, 13745685, 13755685, 13765685, 13775685, 13785685, 13795685, 13805685, 13815685, 13825685, 13835685, 13845685, 13855685, 13865685, 13875685, 13885685, 13895685, 13905685, 13915685, 13925685, 13935685, 13945685, 13955685, 13965685, 13975685, 13985685, 13995685, 14005685, 14015685, 14025685, 14035685]</msg>
<status status="PASS" starttime="20201112 09:44:36.126" endtime="20201112 09:44:36.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.121" endtime="20201112 09:44:36.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.134" endtime="20201112 09:44:36.428"></status>
</kw>
<msg timestamp="20201112 09:44:36.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018019819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028041472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.133" endtime="20201112 09:44:36.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018019819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028041472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.431" endtime="20201112 09:44:36.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.439" endtime="20201112 09:44:36.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.130" endtime="20201112 09:44:36.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.129" endtime="20201112 09:44:36.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.465" level="INFO">${RESULT} = {'source_diff': [0, 0.010021653000000002, 0.009988292, 0.010000888999999999, 0.010000929999999998, 0.010000931000000005, 0.010000902999999992, 0.010000930000000005, 0.010000916999999998, 0.01000091699...</msg>
<status status="PASS" starttime="20201112 09:44:36.442" endtime="20201112 09:44:36.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.469" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:36.468" endtime="20201112 09:44:36.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.471" level="INFO">VALUE: 0.018019819</msg>
<status status="PASS" starttime="20201112 09:44:36.470" endtime="20201112 09:44:36.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.466" endtime="20201112 09:44:36.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.476" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:36.475" endtime="20201112 09:44:36.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.479" level="INFO">VALUE: [0.028041472, 0.038029764, 0.048030653, 0.058031583, 0.068032514, 0.078033417, 0.088034347, 0.098035264, 0.108036181, 0.118037097, 0.128038014, 0.138038986, 0.148039861, 0.158040847, 0.168041694, 0.178042625, 0.188043556, 0.198044458, 0.208045375, 0.218046319, 0.228047236, 0.238048139, 0.248049056, 0.258049986, 0.268050903, 0.278051833, 0.28805275, 0.298053667, 0.308054639, 0.3180555, 0.328056431, 0.338057347, 0.348058333, 0.358059208, 0.368060111, 0.378061028, 0.388061944, 0.398062889, 0.408063806, 0.418064736, 0.428065653, 0.438066597, 0.448067486, 0.458068417, 0.468069319, 0.478070236, 0.488071167, 0.498072125, 0.508073, 0.518073931, 0.528074847, 0.538075764, 0.548076694, 0.558077611, 0.568078528, 0.578079458, 0.588080375, 0.598081333, 0.608082278, 0.618083139, 0.628084083, 0.638084986, 0.648085903, 0.658086847, 0.66808775, 0.678088667, 0.688089597, 0.698090514, 0.708091431, 0.718092361, 0.728093278, 0.738094194, 0.748095125, 0.758096042, 0.768096972, 0.778097889, 0.788098806, 0.798099736, 0.808100653, 0.818101569, 0.8281025, 0.838103417, 0.848104333, 0.858105278, 0.868106236, 0.878107097, 0.888108028, 0.898108944, 0.908109861, 0.918110806, 0.928111722, 0.938112639, 0.948113556, 0.958114472, 0.968115417, 0.978116319, 0.988117236, 0.998118208, 1.008119083, 1.018120014] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:36.478" endtime="20201112 09:44:36.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.473" endtime="20201112 09:44:36.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.482" endtime="20201112 09:44:36.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:36.485" endtime="20201112 09:44:36.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.484" endtime="20201112 09:44:36.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.480" endtime="20201112 09:44:36.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:33.971" endtime="20201112 09:44:36.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.884" endtime="20201112 09:44:36.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.883" endtime="20201112 09:44:36.506"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:36.509" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.518" endtime="20201112 09:44:38.611"></status>
</kw>
<msg timestamp="20201112 09:44:38.612" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15575174, 'wakeups': [15585204, 15595191, 15605191, 15615191, 15625191...</msg>
<status status="PASS" starttime="20201112 09:44:36.516" endtime="20201112 09:44:38.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.618" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15575174, 'wakeups': [15585204, 15595191, 15605191, 15615191, 15625191...</msg>
<status status="PASS" starttime="20201112 09:44:38.615" endtime="20201112 09:44:38.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.621" endtime="20201112 09:44:38.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.513" endtime="20201112 09:44:38.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.511" endtime="20201112 09:44:38.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:38.631" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [15585204, 15595191, 15605191, 15615191, 15625191, 15635191, 15645191, 15655191, 15665191, 15675191, 15685191, 15695191, 15705191, 15715191, 1572...</msg>
<status status="PASS" starttime="20201112 09:44:38.627" endtime="20201112 09:44:38.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.640" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:38.637" endtime="20201112 09:44:38.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.644" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:38.642" endtime="20201112 09:44:38.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.633" endtime="20201112 09:44:38.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.654" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:38.652" endtime="20201112 09:44:38.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.658" level="INFO">VALUE: 15575174</msg>
<status status="PASS" starttime="20201112 09:44:38.656" endtime="20201112 09:44:38.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.647" endtime="20201112 09:44:38.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.668" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:38.666" endtime="20201112 09:44:38.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.673" level="INFO">VALUE: [15585204, 15595191, 15605191, 15615191, 15625191, 15635191, 15645191, 15655191, 15665191, 15675191, 15685191, 15695191, 15705191, 15715191, 15725191, 15735191, 15745191, 15755191, 15765191, 15775191, 15785191, 15795191, 15805191, 15815191, 15825191, 15835191, 15845191, 15855191, 15865191, 15875191, 15885191, 15895191, 15905191, 15915191, 15925191, 15935191, 15945191, 15955191, 15965191, 15975191, 15985191, 15995191, 16005191, 16015191, 16025191, 16035191, 16045191, 16055191, 16065191, 16075191, 16085191, 16095191, 16105191, 16115191, 16125191, 16135191, 16145191, 16155191, 16165191, 16175191, 16185191, 16195191, 16205191, 16215191, 16225191, 16235191, 16245191, 16255191, 16265191, 16275191, 16285191, 16295191, 16305191, 16315191, 16325191, 16335191, 16345191, 16355191, 16365191, 16375191, 16385191, 16395191, 16405191, 16415191, 16425191, 16435191, 16445191, 16455191, 16465191, 16475191, 16485191, 16495191, 16505191, 16515191, 16525191, 16535191, 16545191, 16555191, 16565191, 16575191]</msg>
<status status="PASS" starttime="20201112 09:44:38.671" endtime="20201112 09:44:38.674"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.661" endtime="20201112 09:44:38.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.692" endtime="20201112 09:44:38.983"></status>
</kw>
<msg timestamp="20201112 09:44:38.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032314611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.685" endtime="20201112 09:44:38.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:38.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032314611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:38.987" endtime="20201112 09:44:38.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:38.994" endtime="20201112 09:44:38.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.680" endtime="20201112 09:44:38.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:38.676" endtime="20201112 09:44:38.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.022" level="INFO">${RESULT} = {'source_diff': [0, 0.010030471999999999, 0.009987985999999997, 0.010000903000000005, 0.010000930999999998, 0.010000916000000006, 0.01000098599999999, 0.010000834, 0.010000915999999999, 0.010000931000...</msg>
<status status="PASS" starttime="20201112 09:44:38.997" endtime="20201112 09:44:39.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.026" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:39.025" endtime="20201112 09:44:39.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.028" level="INFO">VALUE: 0.022284139</msg>
<status status="PASS" starttime="20201112 09:44:39.027" endtime="20201112 09:44:39.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.022" endtime="20201112 09:44:39.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.033" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:39.032" endtime="20201112 09:44:39.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.035" level="INFO">VALUE: [0.032314611, 0.042302597, 0.0523035, 0.062304431, 0.072305347, 0.082306333, 0.092307167, 0.102308083, 0.112309014, 0.122309931, 0.132310847, 0.142311778, 0.152312694, 0.162313611, 0.172314528, 0.182315458, 0.192316431, 0.202317278, 0.212318222, 0.222319125, 0.232320056, 0.242321028, 0.252321903, 0.262322806, 0.272323736, 0.282324639, 0.292325569, 0.302326486, 0.312327403, 0.322328319, 0.332329236, 0.342330181, 0.352331083, 0.362332, 0.372332917, 0.382333861, 0.392334764, 0.402335722, 0.412336694, 0.422337528, 0.432338458, 0.442339403, 0.452340292, 0.462341208, 0.472342125, 0.482343069, 0.492343986, 0.502344889, 0.512345806, 0.522346736, 0.532347681, 0.542348569, 0.5523495, 0.562350444, 0.572351333, 0.582352278, 0.592353194, 0.602354097, 0.612355014, 0.622355944, 0.632356861, 0.642357778, 0.65235875, 0.662359625, 0.672360542, 0.682361472, 0.692362389, 0.702363306, 0.712364222, 0.722365153, 0.732366069, 0.742367014, 0.752367917, 0.762368847, 0.77236975, 0.782370694, 0.792371597, 0.802372514, 0.812373444, 0.822374361, 0.832375278, 0.842376208, 0.852377125, 0.862378042, 0.872378972, 0.882379889, 0.892380806, 0.902381722, 0.912382653, 0.922383569, 0.9323845, 0.942385417, 0.952386333, 0.96238725, 0.972388167, 0.982389111, 0.992390028, 1.002390944, 1.012391861, 1.022392778] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:39.034" endtime="20201112 09:44:39.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.029" endtime="20201112 09:44:39.036"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.039" endtime="20201112 09:44:39.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:39.042" endtime="20201112 09:44:39.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.040" endtime="20201112 09:44:39.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.037" endtime="20201112 09:44:39.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.510" endtime="20201112 09:44:39.063"></status>
</kw>
<msg timestamp="20201112 09:44:39.063" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.071" endtime="20201112 09:44:41.164"></status>
</kw>
<msg timestamp="20201112 09:44:41.165" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18127888, 'wakeups': [18137918, 18147905, 18157905, 18167905, 18177905...</msg>
<status status="PASS" starttime="20201112 09:44:39.069" endtime="20201112 09:44:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.172" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18127888, 'wakeups': [18137918, 18147905, 18157905, 18167905, 18177905...</msg>
<status status="PASS" starttime="20201112 09:44:41.168" endtime="20201112 09:44:41.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.174" endtime="20201112 09:44:41.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.067" endtime="20201112 09:44:41.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.065" endtime="20201112 09:44:41.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.185" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [18137918, 18147905, 18157905, 18167905, 18177905, 18187905, 18197905, 18207905, 18217905, 18227905, 18237905, 18247905, 18257905, 18267905, 1827...</msg>
<status status="PASS" starttime="20201112 09:44:41.181" endtime="20201112 09:44:41.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.193" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:41.191" endtime="20201112 09:44:41.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.198" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:41.196" endtime="20201112 09:44:41.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.187" endtime="20201112 09:44:41.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.210" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:41.208" endtime="20201112 09:44:41.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.214" level="INFO">VALUE: 18127888</msg>
<status status="PASS" starttime="20201112 09:44:41.212" endtime="20201112 09:44:41.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.201" endtime="20201112 09:44:41.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.224" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:41.222" endtime="20201112 09:44:41.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.229" level="INFO">VALUE: [18137918, 18147905, 18157905, 18167905, 18177905, 18187905, 18197905, 18207905, 18217905, 18227905, 18237905, 18247905, 18257905, 18267905, 18277905, 18287905, 18297905, 18307905, 18317905, 18327905, 18337905, 18347905, 18357905, 18367905, 18377905, 18387905, 18397905, 18407905, 18417905, 18427905, 18437905, 18447905, 18457905, 18467905, 18477905, 18487905, 18497905, 18507905, 18517905, 18527905, 18537905, 18547905, 18557905, 18567905, 18577905, 18587905, 18597905, 18607905, 18617905, 18627905, 18637905, 18647905, 18657905, 18667905, 18677905, 18687905, 18697905, 18707905, 18717905, 18727905, 18737905, 18747905, 18757905, 18767905, 18777905, 18787905, 18797905, 18807905, 18817905, 18827905, 18837905, 18847905, 18857905, 18867905, 18877905, 18887905, 18897905, 18907905, 18917905, 18927905, 18937905, 18947905, 18957905, 18967905, 18977905, 18987905, 18997905, 19007905, 19017905, 19027905, 19037905, 19047905, 19057905, 19067905, 19077905, 19087905, 19097905, 19107905, 19117905, 19127905]</msg>
<status status="PASS" starttime="20201112 09:44:41.226" endtime="20201112 09:44:41.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.217" endtime="20201112 09:44:41.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.242" endtime="20201112 09:44:41.534"></status>
</kw>
<msg timestamp="20201112 09:44:41.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028158181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.240" endtime="20201112 09:44:41.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028158181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.538" endtime="20201112 09:44:41.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.545" endtime="20201112 09:44:41.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.235" endtime="20201112 09:44:41.548"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.232" endtime="20201112 09:44:41.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.571" level="INFO">${RESULT} = {'source_diff': [0, 0.010030514, 0.009987944000000002, 0.010000943999999998, 0.010000888999999999, 0.010000916999999998, 0.010000931000000005, 0.010000929999999991, 0.010000917000000012, 0.01000091599...</msg>
<status status="PASS" starttime="20201112 09:44:41.549" endtime="20201112 09:44:41.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.576" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:41.575" endtime="20201112 09:44:41.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.578" level="INFO">VALUE: 0.018127667</msg>
<status status="PASS" starttime="20201112 09:44:41.577" endtime="20201112 09:44:41.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.573" endtime="20201112 09:44:41.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.584" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:41.583" endtime="20201112 09:44:41.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.586" level="INFO">VALUE: [0.028158181, 0.038146125, 0.048147069, 0.058147958, 0.068148875, 0.078149806, 0.088150736, 0.098151653, 0.108152569, 0.118153486, 0.128154403, 0.138155319, 0.14815625, 0.158157181, 0.168158083, 0.178159, 0.188159931, 0.198160847, 0.208161764, 0.218162681, 0.228163625, 0.238164528, 0.248165472, 0.258166361, 0.268167292, 0.278168264, 0.288169125, 0.298170056, 0.308170986, 0.318171889, 0.328172806, 0.338173722, 0.348174639, 0.358175583, 0.368176486, 0.378177403, 0.388178333, 0.398179319, 0.408180236, 0.418181097, 0.428182014, 0.438182944, 0.448183875, 0.458184778, 0.468185708, 0.478186625, 0.488187542, 0.498188472, 0.508189389, 0.518190319, 0.528191236, 0.538192153, 0.548193069, 0.558193986, 0.568194917, 0.578195847, 0.58819675, 0.598197694, 0.608198597, 0.618199528, 0.628200444, 0.638201361, 0.648202278, 0.658203208, 0.668204125, 0.678205056, 0.688205986, 0.698206944, 0.708207806, 0.718208778, 0.728209653, 0.738210597, 0.748211514, 0.758212431, 0.768213347, 0.778214264, 0.788215181, 0.798216125, 0.808217028, 0.818217958, 0.828218889, 0.838219792, 0.848220708, 0.858221653, 0.868222556, 0.878223486, 0.888224403, 0.898225375, 0.90822625, 0.918227181, 0.928228097, 0.938229014, 0.948229986, 0.958230875, 0.968231778, 0.978232708, 0.988233639, 0.998234556, 1.008235458, 1.018236403] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:41.585" endtime="20201112 09:44:41.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.580" endtime="20201112 09:44:41.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.590" endtime="20201112 09:44:41.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:41.593" endtime="20201112 09:44:41.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.592" endtime="20201112 09:44:41.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.588" endtime="20201112 09:44:41.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.063" endtime="20201112 09:44:41.614"></status>
</kw>
<msg timestamp="20201112 09:44:41.614" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.622" endtime="20201112 09:44:43.715"></status>
</kw>
<msg timestamp="20201112 09:44:43.716" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20679073, 'wakeups': [20689103, 20699090, 20709090, 20719090, 20729090...</msg>
<status status="PASS" starttime="20201112 09:44:41.620" endtime="20201112 09:44:43.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.722" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20679073, 'wakeups': [20689103, 20699090, 20709090, 20719090, 20729090...</msg>
<status status="PASS" starttime="20201112 09:44:43.718" endtime="20201112 09:44:43.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.724" endtime="20201112 09:44:43.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.618" endtime="20201112 09:44:43.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.616" endtime="20201112 09:44:43.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:43.735" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [20689103, 20699090, 20709090, 20719090, 20729090, 20739090, 20749090, 20759090, 20769090, 20779090, 20789090, 20799090, 20809090, 20819090, 2082...</msg>
<status status="PASS" starttime="20201112 09:44:43.731" endtime="20201112 09:44:43.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.743" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:43.741" endtime="20201112 09:44:43.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.747" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:43.745" endtime="20201112 09:44:43.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.736" endtime="20201112 09:44:43.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.762" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:43.760" endtime="20201112 09:44:43.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.766" level="INFO">VALUE: 20679073</msg>
<status status="PASS" starttime="20201112 09:44:43.765" endtime="20201112 09:44:43.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.755" endtime="20201112 09:44:43.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.776" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:43.774" endtime="20201112 09:44:43.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:43.781" level="INFO">VALUE: [20689103, 20699090, 20709090, 20719090, 20729090, 20739090, 20749090, 20759090, 20769090, 20779090, 20789090, 20799090, 20809090, 20819090, 20829090, 20839090, 20849090, 20859090, 20869090, 20879090, 20889090, 20899090, 20909090, 20919090, 20929090, 20939090, 20949090, 20959090, 20969090, 20979090, 20989090, 20999090, 21009090, 21019090, 21029090, 21039090, 21049090, 21059090, 21069090, 21079090, 21089090, 21099090, 21109090, 21119090, 21129090, 21139090, 21149090, 21159090, 21169090, 21179090, 21189090, 21199090, 21209090, 21219090, 21229090, 21239090, 21249090, 21259090, 21269090, 21279090, 21289090, 21299090, 21309090, 21319090, 21329090, 21339090, 21349090, 21359090, 21369090, 21379090, 21389090, 21399090, 21409090, 21419090, 21429090, 21439090, 21449090, 21459090, 21469090, 21479090, 21489090, 21499090, 21509090, 21519090, 21529090, 21539090, 21549090, 21559090, 21569090, 21579090, 21589090, 21599090, 21609090, 21619090, 21629090, 21639090, 21649090, 21659090, 21669090, 21679090]</msg>
<status status="PASS" starttime="20201112 09:44:43.779" endtime="20201112 09:44:43.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.769" endtime="20201112 09:44:43.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:43.790" endtime="20201112 09:44:44.082"></status>
</kw>
<msg timestamp="20201112 09:44:44.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028179931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:43.788" endtime="20201112 09:44:44.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028179931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.085" endtime="20201112 09:44:44.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.093" endtime="20201112 09:44:44.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.785" endtime="20201112 09:44:44.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:43.784" endtime="20201112 09:44:44.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.119" level="INFO">${RESULT} = {'source_diff': [0, 0.010030417, 0.009987958000000005, 0.010000943999999998, 0.010000902999999998, 0.010000931000000005, 0.010000943999999998, 0.010000861, 0.010000944999999997, 0.010000986000000003, ...</msg>
<status status="PASS" starttime="20201112 09:44:44.096" endtime="20201112 09:44:44.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.124" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:44.123" endtime="20201112 09:44:44.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.126" level="INFO">VALUE: 0.018149514</msg>
<status status="PASS" starttime="20201112 09:44:44.125" endtime="20201112 09:44:44.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.120" endtime="20201112 09:44:44.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.131" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:44.130" endtime="20201112 09:44:44.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.133" level="INFO">VALUE: [0.028179931, 0.038167889, 0.048168833, 0.058169736, 0.068170667, 0.078171611, 0.088172472, 0.098173417, 0.108174403, 0.118175236, 0.128176153, 0.138177097, 0.148178014, 0.158178917, 0.168179833, 0.178180792, 0.188181681, 0.198182597, 0.208183514, 0.218184444, 0.228185375, 0.238186278, 0.248187208, 0.258188125, 0.268189042, 0.278189958, 0.288190903, 0.298191819, 0.308192722, 0.318193653, 0.328194569, 0.338195514, 0.348196403, 0.358197347, 0.36819825, 0.378199167, 0.388200097, 0.398201069, 0.408201944, 0.418202861, 0.428203778, 0.438204694, 0.448205639, 0.458206597, 0.468207458, 0.478208403, 0.488209306, 0.498210222, 0.508211139, 0.518212083, 0.528213056, 0.538213917, 0.548214833, 0.55821575, 0.568216681, 0.578217597, 0.588218528, 0.598219458, 0.608220361, 0.618221306, 0.628222208, 0.638223125, 0.648224042, 0.658224972, 0.668225889, 0.678226806, 0.688227736, 0.698228667, 0.708229569, 0.7182305, 0.728231417, 0.738232361, 0.748233264, 0.758234181, 0.768235111, 0.778236042, 0.788236944, 0.798237917, 0.808238792, 0.818239708, 0.828240639, 0.838241556, 0.848242472, 0.858243417, 0.868244361, 0.87824525, 0.888246167, 0.898247097, 0.908248, 0.918248944, 0.928249847, 0.938250792, 0.948251694, 0.958252625, 0.968253583, 0.978254458, 0.988255389, 0.998256306, 1.008257222, 1.018258139] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:44.132" endtime="20201112 09:44:44.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.127" endtime="20201112 09:44:44.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.137" endtime="20201112 09:44:44.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.140" endtime="20201112 09:44:44.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.139" endtime="20201112 09:44:44.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.135" endtime="20201112 09:44:44.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.615" endtime="20201112 09:44:44.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.508" endtime="20201112 09:44:44.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.507" endtime="20201112 09:44:44.161"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:44.164" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.173" endtime="20201112 09:44:46.265"></status>
</kw>
<msg timestamp="20201112 09:44:46.267" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23229947, 'wakeups': [23239987, 23249973, 23259983, 23269982, 23279982...</msg>
<status status="PASS" starttime="20201112 09:44:44.170" endtime="20201112 09:44:46.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.272" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23229947, 'wakeups': [23239987, 23249973, 23259983, 23269982, 23279982...</msg>
<status status="PASS" starttime="20201112 09:44:46.269" endtime="20201112 09:44:46.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.275" endtime="20201112 09:44:46.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.168" endtime="20201112 09:44:46.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.166" endtime="20201112 09:44:46.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.286" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [23239987, 23249973, 23259983, 23269982, 23279982, 23289982, 23299982, 23309982, 23319982, 23329982, 23339982, 23349982, 23359982, 23369982, 2337...</msg>
<status status="PASS" starttime="20201112 09:44:46.282" endtime="20201112 09:44:46.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.294" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:46.292" endtime="20201112 09:44:46.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.298" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:46.296" endtime="20201112 09:44:46.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.287" endtime="20201112 09:44:46.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.308" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:46.306" endtime="20201112 09:44:46.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.312" level="INFO">VALUE: 23229947</msg>
<status status="PASS" starttime="20201112 09:44:46.311" endtime="20201112 09:44:46.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.301" endtime="20201112 09:44:46.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.322" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:46.320" endtime="20201112 09:44:46.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.327" level="INFO">VALUE: [23239987, 23249973, 23259983, 23269982, 23279982, 23289982, 23299982, 23309982, 23319982, 23329982, 23339982, 23349982, 23359982, 23369982, 23379982, 23389982, 23399982, 23409982, 23419982, 23429982, 23439982, 23449982, 23459982, 23469982, 23479982, 23489982, 23499982, 23509982, 23519982, 23529982, 23539982, 23549982, 23559982, 23569982, 23579982, 23589982, 23599982, 23609982, 23619982, 23629982, 23639982, 23649982, 23659982, 23669982, 23679982, 23689982, 23699982, 23709982, 23719982, 23729982, 23739982, 23749982, 23759982, 23769982, 23779982, 23789982, 23799982, 23809982, 23819982, 23829982, 23839982, 23849982, 23859982, 23869982, 23879982, 23889982, 23899982, 23909982, 23919982, 23929982, 23939982, 23949982, 23959982, 23969982, 23979982, 23989982, 23999982, 24009982, 24019982, 24029982, 24039982, 24049982, 24059982, 24069982, 24079982, 24089982, 24099982, 24109982, 24119982, 24129982, 24139982, 24149982, 24159982, 24169982, 24179982, 24189982, 24199982, 24209982, 24219982, 24229982]</msg>
<status status="PASS" starttime="20201112 09:44:46.325" endtime="20201112 09:44:46.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.315" endtime="20201112 09:44:46.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.343" endtime="20201112 09:44:46.636"></status>
</kw>
<msg timestamp="20201112 09:44:46.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031899958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.340" endtime="20201112 09:44:46.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021858903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031899958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.640" endtime="20201112 09:44:46.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.647" endtime="20201112 09:44:46.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.334" endtime="20201112 09:44:46.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.331" endtime="20201112 09:44:46.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.674" level="INFO">${RESULT} = {'source_diff': [0, 0.010041055, 0.009986652999999998, 0.010011139000000002, 0.009999902999999997, 0.010000943999999998, 0.010000903000000005, 0.010000916999999998, 0.010000930000000005, 0.01000091699...</msg>
<status status="PASS" starttime="20201112 09:44:46.650" endtime="20201112 09:44:46.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.678" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:46.677" endtime="20201112 09:44:46.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.680" level="INFO">VALUE: 0.021858903</msg>
<status status="PASS" starttime="20201112 09:44:46.679" endtime="20201112 09:44:46.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.675" endtime="20201112 09:44:46.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.685" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:46.684" endtime="20201112 09:44:46.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.687" level="INFO">VALUE: [0.031899958, 0.041886611, 0.05189775, 0.061897653, 0.071898597, 0.0818995, 0.091900417, 0.101901347, 0.111902264, 0.121903181, 0.131904097, 0.141905042, 0.151905958, 0.161906861, 0.171907792, 0.181908708, 0.191909625, 0.201910542, 0.211911458, 0.221912431, 0.231913319, 0.241914222, 0.251915167, 0.261916083, 0.271916986, 0.281917903, 0.291918847, 0.30191975, 0.311920667, 0.321921653, 0.331922528, 0.341923431, 0.351924361, 0.361925278, 0.371926208, 0.381927125, 0.391928042, 0.401928958, 0.411929903, 0.421930806, 0.431931736, 0.441932639, 0.451933569, 0.461934486, 0.471935403, 0.481936333, 0.49193725, 0.501938167, 0.511939097, 0.521940056, 0.531940944, 0.541941875, 0.551942792, 0.561943694, 0.571944625, 0.581945542, 0.591946458, 0.601947389, 0.611948306, 0.621949236, 0.631950167, 0.641951069, 0.651951986, 0.661952931, 0.671953833, 0.68195475, 0.691955681, 0.701956597, 0.711957528, 0.721958458, 0.731959375, 0.741960292, 0.751961208, 0.761962125, 0.771963056, 0.781963972, 0.791964889, 0.801965861, 0.81196675, 0.821967667, 0.831968597, 0.841969542, 0.851970431, 0.861971347, 0.871972278, 0.881973181, 0.891974111, 0.901975042, 0.911975958, 0.921976875, 0.931977806, 0.941978722, 0.951979667, 0.961980556, 0.971981486, 0.981982403, 0.991983319, 1.00198425, 1.011985167, 1.021986097] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:46.687" endtime="20201112 09:44:46.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.682" endtime="20201112 09:44:46.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.691" endtime="20201112 09:44:46.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:46.694" endtime="20201112 09:44:46.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.692" endtime="20201112 09:44:46.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.689" endtime="20201112 09:44:46.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.164" endtime="20201112 09:44:46.715"></status>
</kw>
<msg timestamp="20201112 09:44:46.715" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.724" endtime="20201112 09:44:48.819"></status>
</kw>
<msg timestamp="20201112 09:44:48.820" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25781115, 'wakeups': [25791154, 25801141, 25811151, 25821150, 25831150...</msg>
<status status="PASS" starttime="20201112 09:44:46.722" endtime="20201112 09:44:48.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.826" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25781115, 'wakeups': [25791154, 25801141, 25811151, 25821150, 25831150...</msg>
<status status="PASS" starttime="20201112 09:44:48.822" endtime="20201112 09:44:48.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.829" endtime="20201112 09:44:48.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.719" endtime="20201112 09:44:48.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.717" endtime="20201112 09:44:48.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:48.840" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [25791154, 25801141, 25811151, 25821150, 25831150, 25841150, 25851150, 25861150, 25871150, 25881150, 25891150, 25901150, 25911150, 25921150, 2593...</msg>
<status status="PASS" starttime="20201112 09:44:48.836" endtime="20201112 09:44:48.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.849" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:48.847" endtime="20201112 09:44:48.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.854" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:48.852" endtime="20201112 09:44:48.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.842" endtime="20201112 09:44:48.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.865" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:48.862" endtime="20201112 09:44:48.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.872" level="INFO">VALUE: 25781115</msg>
<status status="PASS" starttime="20201112 09:44:48.870" endtime="20201112 09:44:48.873"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.857" endtime="20201112 09:44:48.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.883" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:48.881" endtime="20201112 09:44:48.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:48.888" level="INFO">VALUE: [25791154, 25801141, 25811151, 25821150, 25831150, 25841150, 25851150, 25861150, 25871150, 25881150, 25891150, 25901150, 25911150, 25921150, 25931150, 25941150, 25951150, 25961150, 25971150, 25981150, 25991150, 26001150, 26011150, 26021150, 26031150, 26041150, 26051150, 26061150, 26071150, 26081150, 26091150, 26101150, 26111150, 26121150, 26131150, 26141150, 26151150, 26161150, 26171150, 26181150, 26191150, 26201150, 26211150, 26221150, 26231150, 26241150, 26251150, 26261150, 26271150, 26281150, 26291150, 26301150, 26311150, 26321150, 26331150, 26341150, 26351150, 26361150, 26371150, 26381150, 26391150, 26401150, 26411150, 26421150, 26431150, 26441150, 26451150, 26461150, 26471150, 26481150, 26491150, 26501150, 26511150, 26521150, 26531150, 26541150, 26551150, 26561150, 26571150, 26581150, 26591150, 26601150, 26611150, 26621150, 26631150, 26641150, 26651150, 26661150, 26671150, 26681150, 26691150, 26701150, 26711150, 26721150, 26731150, 26741150, 26751150, 26761150, 26771150, 26781150]</msg>
<status status="PASS" starttime="20201112 09:44:48.885" endtime="20201112 09:44:48.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.875" endtime="20201112 09:44:48.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:48.900" endtime="20201112 09:44:49.189"></status>
</kw>
<msg timestamp="20201112 09:44:49.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029370222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:48.898" endtime="20201112 09:44:49.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019329639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029370222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.193" endtime="20201112 09:44:49.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.201" endtime="20201112 09:44:49.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.895" endtime="20201112 09:44:49.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:48.891" endtime="20201112 09:44:49.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.233" level="INFO">${RESULT} = {'source_diff': [0, 0.010040583000000002, 0.009987666999999999, 0.010011153000000002, 0.009999874999999998, 0.010000929999999998, 0.010000916999999998, 0.010000971999999997, 0.010000875000000006, 0.01...</msg>
<status status="PASS" starttime="20201112 09:44:49.209" endtime="20201112 09:44:49.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.238" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:49.237" endtime="20201112 09:44:49.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.240" level="INFO">VALUE: 0.019329639</msg>
<status status="PASS" starttime="20201112 09:44:49.239" endtime="20201112 09:44:49.241"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.234" endtime="20201112 09:44:49.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.246" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:49.245" endtime="20201112 09:44:49.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.249" level="INFO">VALUE: [0.029370222, 0.039357889, 0.049369042, 0.059368917, 0.069369847, 0.079370764, 0.089371736, 0.099372611, 0.109373528, 0.119374444, 0.129375361, 0.139376306, 0.149377208, 0.159378139, 0.169379042, 0.179379972, 0.189380889, 0.199381806, 0.209382722, 0.219383667, 0.229384583, 0.239385486, 0.249386403, 0.259387333, 0.269388264, 0.279389181, 0.289390097, 0.299391028, 0.309391986, 0.319392847, 0.329393778, 0.339394694, 0.349395625, 0.359396528, 0.369397458, 0.379398389, 0.389399292, 0.399400222, 0.409401139, 0.419402056, 0.429403, 0.439403917, 0.449404833, 0.45940575, 0.469406667, 0.479407583, 0.489408514, 0.499409444, 0.509410375, 0.519411264, 0.529412194, 0.539413111, 0.549414042, 0.559414958, 0.569415889, 0.579416806, 0.589417736, 0.599418639, 0.609419556, 0.619420486, 0.629421431, 0.639422319, 0.64942325, 0.659424194, 0.669425083, 0.679426056, 0.689426944, 0.699427847, 0.709428778, 0.719429694, 0.729430611, 0.739431556, 0.749432458, 0.759433389, 0.769434319, 0.779435236, 0.789436139, 0.799437069, 0.809438, 0.819438931, 0.829439833, 0.83944075, 0.849441667, 0.859442611, 0.869443514, 0.879444444, 0.889445375, 0.899446292, 0.909447222, 0.919448125, 0.929449042, 0.939449986, 0.949450903, 0.959451806, 0.969452736, 0.979453653, 0.989454569, 0.9994555, 1.009456417, 1.019457333] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:49.248" endtime="20201112 09:44:49.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.242" endtime="20201112 09:44:49.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.252" endtime="20201112 09:44:49.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.256" endtime="20201112 09:44:49.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.254" endtime="20201112 09:44:49.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.250" endtime="20201112 09:44:49.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.716" endtime="20201112 09:44:49.276"></status>
</kw>
<msg timestamp="20201112 09:44:49.277" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.285" endtime="20201112 09:44:51.379"></status>
</kw>
<msg timestamp="20201112 09:44:51.380" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28342265, 'wakeups': [28352304, 28362291, 28372301, 28382300, 28392300...</msg>
<status status="PASS" starttime="20201112 09:44:49.284" endtime="20201112 09:44:51.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28342265, 'wakeups': [28352304, 28362291, 28372301, 28382300, 28392300...</msg>
<status status="PASS" starttime="20201112 09:44:51.383" endtime="20201112 09:44:51.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.389" endtime="20201112 09:44:51.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.281" endtime="20201112 09:44:51.394"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.279" endtime="20201112 09:44:51.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.401" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [28352304, 28362291, 28372301, 28382300, 28392300, 28402300, 28412300, 28422300, 28432300, 28442300, 28452300, 28462300, 28472300, 28482300, 2849...</msg>
<status status="PASS" starttime="20201112 09:44:51.396" endtime="20201112 09:44:51.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.410" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:51.408" endtime="20201112 09:44:51.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.415" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:51.413" endtime="20201112 09:44:51.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.402" endtime="20201112 09:44:51.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.426" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:51.423" endtime="20201112 09:44:51.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.430" level="INFO">VALUE: 28342265</msg>
<status status="PASS" starttime="20201112 09:44:51.428" endtime="20201112 09:44:51.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.418" endtime="20201112 09:44:51.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.441" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:51.439" endtime="20201112 09:44:51.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.446" level="INFO">VALUE: [28352304, 28362291, 28372301, 28382300, 28392300, 28402300, 28412300, 28422300, 28432300, 28442300, 28452300, 28462300, 28472300, 28482300, 28492300, 28502300, 28512300, 28522300, 28532300, 28542300, 28552300, 28562300, 28572300, 28582300, 28592300, 28602300, 28612300, 28622300, 28632300, 28642300, 28652300, 28662300, 28672300, 28682300, 28692300, 28702300, 28712300, 28722300, 28732300, 28742300, 28752300, 28762300, 28772300, 28782300, 28792300, 28802300, 28812300, 28822300, 28832300, 28842300, 28852300, 28862300, 28872300, 28882300, 28892300, 28902300, 28912300, 28922300, 28932300, 28942300, 28952300, 28962300, 28972300, 28982300, 28992300, 29002300, 29012300, 29022300, 29032300, 29042300, 29052300, 29062300, 29072300, 29082300, 29092300, 29102300, 29112300, 29122300, 29132300, 29142300, 29152300, 29162300, 29172300, 29182300, 29192300, 29202300, 29212300, 29222300, 29232300, 29242300, 29252300, 29262300, 29272300, 29282300, 29292300, 29302300, 29312300, 29322300, 29332300, 29342300]</msg>
<status status="PASS" starttime="20201112 09:44:51.444" endtime="20201112 09:44:51.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.434" endtime="20201112 09:44:51.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.459" endtime="20201112 09:44:51.751"></status>
</kw>
<msg timestamp="20201112 09:44:51.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018696208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028736458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.454" endtime="20201112 09:44:51.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018696208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028736458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:51.755" endtime="20201112 09:44:51.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.762" endtime="20201112 09:44:51.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.451" endtime="20201112 09:44:51.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.449" endtime="20201112 09:44:51.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:51.788" level="INFO">${RESULT} = {'source_diff': [0, 0.01004025, 0.009987666999999999, 0.010011111000000003, 0.009999916999999997, 0.010000930000000005, 0.010000916999999998, 0.010000916999999998, 0.010000943999999998, 0.010000944999...</msg>
<status status="PASS" starttime="20201112 09:44:51.766" endtime="20201112 09:44:51.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.793" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:51.792" endtime="20201112 09:44:51.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.795" level="INFO">VALUE: 0.018696208</msg>
<status status="PASS" starttime="20201112 09:44:51.794" endtime="20201112 09:44:51.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.789" endtime="20201112 09:44:51.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.800" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:51.799" endtime="20201112 09:44:51.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:51.803" level="INFO">VALUE: [0.028736458, 0.038724125, 0.048735236, 0.058735153, 0.068736083, 0.078737, 0.088737917, 0.098738861, 0.108739806, 0.118740681, 0.128741597, 0.138742583, 0.148743472, 0.158744431, 0.168745278, 0.178746194, 0.188747125, 0.198748056, 0.208748958, 0.218749889, 0.228750806, 0.238751722, 0.248752667, 0.258753583, 0.268754486, 0.278755417, 0.288756333, 0.29875725, 0.308758167, 0.318759083, 0.328760014, 0.338760931, 0.348761847, 0.358762764, 0.368763708, 0.378764611, 0.388765528, 0.3987665, 0.408767389, 0.418768292, 0.428769236, 0.438770139, 0.448771056, 0.458772056, 0.468772903, 0.478773833, 0.48877475, 0.498775708, 0.508776583, 0.518777514, 0.528778444, 0.538779361, 0.548780278, 0.558781194, 0.568782111, 0.578783056, 0.588783958, 0.598784889, 0.608785819, 0.618786736, 0.628787639, 0.638788625, 0.6487895, 0.658790403, 0.668791333, 0.67879225, 0.688793167, 0.698794097, 0.708795042, 0.718795931, 0.728796861, 0.738797792, 0.748798708, 0.758799625, 0.768800542, 0.778801486, 0.788802431, 0.798803319, 0.80880425, 0.818805153, 0.828806083, 0.838807014, 0.848807986, 0.858808847, 0.868809764, 0.878810681, 0.888811597, 0.898812583, 0.908813458, 0.918814403, 0.928815306, 0.938816208, 0.948817125, 0.958818069, 0.968819, 0.978819931, 0.988820833, 0.99882175, 1.008822708, 1.018823583] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:51.801" endtime="20201112 09:44:51.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.796" endtime="20201112 09:44:51.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.806" endtime="20201112 09:44:51.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:51.809" endtime="20201112 09:44:51.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.808" endtime="20201112 09:44:51.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.804" endtime="20201112 09:44:51.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.277" endtime="20201112 09:44:51.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.162" endtime="20201112 09:44:51.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.162" endtime="20201112 09:44:51.830"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:51.833" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:51.842" endtime="20201112 09:44:53.934"></status>
</kw>
<msg timestamp="20201112 09:44:53.936" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30898850, 'wakeups': [30908900, 30918887, 30928896, 30938896, 30948896...</msg>
<status status="PASS" starttime="20201112 09:44:51.840" endtime="20201112 09:44:53.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.941" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 30898850, 'wakeups': [30908900, 30918887, 30928896, 30938896, 30948896...</msg>
<status status="PASS" starttime="20201112 09:44:53.938" endtime="20201112 09:44:53.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:53.944" endtime="20201112 09:44:53.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.837" endtime="20201112 09:44:53.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.835" endtime="20201112 09:44:53.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:53.954" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [30908900, 30918887, 30928896, 30938896, 30948896, 30958896, 30968896, 30978896, 30988896, 30998896, 31008896, 31018896, 31028896, 31038896, 3104...</msg>
<status status="PASS" starttime="20201112 09:44:53.950" endtime="20201112 09:44:53.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.963" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:53.961" endtime="20201112 09:44:53.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.967" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:53.965" endtime="20201112 09:44:53.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.956" endtime="20201112 09:44:53.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.977" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:53.975" endtime="20201112 09:44:53.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.981" level="INFO">VALUE: 30898850</msg>
<status status="PASS" starttime="20201112 09:44:53.979" endtime="20201112 09:44:53.982"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.970" endtime="20201112 09:44:53.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.992" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:53.990" endtime="20201112 09:44:53.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:53.997" level="INFO">VALUE: [30908900, 30918887, 30928896, 30938896, 30948896, 30958896, 30968896, 30978896, 30988896, 30998896, 31008896, 31018896, 31028896, 31038896, 31048896, 31058896, 31068896, 31078896, 31088896, 31098896, 31108896, 31118896, 31128896, 31138896, 31148896, 31158896, 31168896, 31178896, 31188896, 31198896, 31208896, 31218896, 31228896, 31238896, 31248896, 31258896, 31268896, 31278896, 31288896, 31298896, 31308896, 31318896, 31328896, 31338896, 31348896, 31358896, 31368896, 31378896, 31388896, 31398896, 31408896, 31418896, 31428896, 31438896, 31448896, 31458896, 31468896, 31478896, 31488896, 31498896, 31508896, 31518896, 31528896, 31538896, 31548896, 31558896, 31568896, 31578896, 31588896, 31598896, 31608896, 31618896, 31628896, 31638896, 31648896, 31658896, 31668896, 31678896, 31688896, 31698896, 31708896, 31718896, 31728896, 31738896, 31748896, 31758896, 31768896, 31778896, 31788896, 31798896, 31808896, 31818896, 31828896, 31838896, 31848896, 31858896, 31868896, 31878896, 31888896, 31898896]</msg>
<status status="PASS" starttime="20201112 09:44:53.994" endtime="20201112 09:44:53.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:53.984" endtime="20201112 09:44:53.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.012" endtime="20201112 09:44:54.305"></status>
</kw>
<msg timestamp="20201112 09:44:54.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031849653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:54.009" endtime="20201112 09:44:54.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031849653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:54.309" endtime="20201112 09:44:54.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.316" endtime="20201112 09:44:54.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.004" endtime="20201112 09:44:54.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.000" endtime="20201112 09:44:54.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.344" level="INFO">${RESULT} = {'source_diff': [0, 0.010051402999999997, 0.009987319000000001, 0.010010403000000001, 0.010000943999999998, 0.010000903000000005, 0.01000095899999999, 0.010000902000000006, 0.010000916999999998, 0.010...</msg>
<status status="PASS" starttime="20201112 09:44:54.320" endtime="20201112 09:44:54.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.348" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:54.347" endtime="20201112 09:44:54.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.350" level="INFO">VALUE: 0.02179825</msg>
<status status="PASS" starttime="20201112 09:44:54.349" endtime="20201112 09:44:54.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.345" endtime="20201112 09:44:54.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.356" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:54.355" endtime="20201112 09:44:54.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.358" level="INFO">VALUE: [0.031849653, 0.041836972, 0.051847375, 0.061848319, 0.071849222, 0.081850181, 0.091851083, 0.101852, 0.111852903, 0.121853819, 0.131854792, 0.141855694, 0.151856583, 0.1618575, 0.171858431, 0.181859361, 0.191860264, 0.201861222, 0.211862125, 0.221863028, 0.231864028, 0.241864861, 0.251865792, 0.261866708, 0.271867639, 0.281868542, 0.291869472, 0.301870389, 0.311871375, 0.321872222, 0.331873167, 0.341874083, 0.351874986, 0.361875931, 0.371876847, 0.381877764, 0.391878667, 0.401879611, 0.411880514, 0.421881458, 0.431882347, 0.441883278, 0.451884194, 0.461885111, 0.471886056, 0.481886958, 0.491887875, 0.501888806, 0.511889722, 0.521890639, 0.531891569, 0.541892514, 0.551893431, 0.561894333, 0.57189525, 0.581896194, 0.591897111, 0.601898028, 0.611898944, 0.621899861, 0.631900778, 0.641901722, 0.651902625, 0.661903556, 0.671904472, 0.681905403, 0.691906319, 0.701907236, 0.711908167, 0.721909097, 0.73191, 0.741910972, 0.751911861, 0.761912764, 0.771913681, 0.781914625, 0.791915542, 0.801916458, 0.811917375, 0.821918292, 0.831919208, 0.841920139, 0.851921042, 0.861921958, 0.871922875, 0.881923806, 0.891924722, 0.901925639, 0.911926569, 0.921927486, 0.931928403, 0.941929319, 0.951930236, 0.961931153, 0.971932097, 0.981933014, 0.991933917, 1.001934847, 1.011935764, 1.021936736] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:54.357" endtime="20201112 09:44:54.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.352" endtime="20201112 09:44:54.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.361" endtime="20201112 09:44:54.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:54.370" endtime="20201112 09:44:54.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.368" endtime="20201112 09:44:54.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.359" endtime="20201112 09:44:54.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.833" endtime="20201112 09:44:54.390"></status>
</kw>
<msg timestamp="20201112 09:44:54.390" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.398" endtime="20201112 09:44:56.491"></status>
</kw>
<msg timestamp="20201112 09:44:56.492" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33455456, 'wakeups': [33465506, 33475493, 33485502, 33495502, 33505502...</msg>
<status status="PASS" starttime="20201112 09:44:54.397" endtime="20201112 09:44:56.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.498" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33455456, 'wakeups': [33465506, 33475493, 33485502, 33495502, 33505502...</msg>
<status status="PASS" starttime="20201112 09:44:56.495" endtime="20201112 09:44:56.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.500" endtime="20201112 09:44:56.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.394" endtime="20201112 09:44:56.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.392" endtime="20201112 09:44:56.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.511" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [33465506, 33475493, 33485502, 33495502, 33505502, 33515502, 33525502, 33535502, 33545502, 33555502, 33565502, 33575502, 33585502, 33595502, 3360...</msg>
<status status="PASS" starttime="20201112 09:44:56.507" endtime="20201112 09:44:56.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.520" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:56.517" endtime="20201112 09:44:56.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.524" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:56.522" endtime="20201112 09:44:56.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.513" endtime="20201112 09:44:56.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.536" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:56.534" endtime="20201112 09:44:56.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.540" level="INFO">VALUE: 33455456</msg>
<status status="PASS" starttime="20201112 09:44:56.538" endtime="20201112 09:44:56.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.527" endtime="20201112 09:44:56.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.550" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:56.548" endtime="20201112 09:44:56.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.555" level="INFO">VALUE: [33465506, 33475493, 33485502, 33495502, 33505502, 33515502, 33525502, 33535502, 33545502, 33555502, 33565502, 33575502, 33585502, 33595502, 33605502, 33615502, 33625502, 33635502, 33645502, 33655502, 33665502, 33675502, 33685502, 33695502, 33705502, 33715502, 33725502, 33735502, 33745502, 33755502, 33765502, 33775502, 33785502, 33795502, 33805502, 33815502, 33825502, 33835502, 33845502, 33855502, 33865502, 33875502, 33885502, 33895502, 33905502, 33915502, 33925502, 33935502, 33945502, 33955502, 33965502, 33975502, 33985502, 33995502, 34005502, 34015502, 34025502, 34035502, 34045502, 34055502, 34065502, 34075502, 34085502, 34095502, 34105502, 34115502, 34125502, 34135502, 34145502, 34155502, 34165502, 34175502, 34185502, 34195502, 34205502, 34215502, 34225502, 34235502, 34245502, 34255502, 34265502, 34275502, 34285502, 34295502, 34305502, 34315502, 34325502, 34335502, 34345502, 34355502, 34365502, 34375502, 34385502, 34395502, 34405502, 34415502, 34425502, 34435502, 34445502, 34455502]</msg>
<status status="PASS" starttime="20201112 09:44:56.553" endtime="20201112 09:44:56.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.543" endtime="20201112 09:44:56.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.564" endtime="20201112 09:44:56.857"></status>
</kw>
<msg timestamp="20201112 09:44:56.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018085486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028136708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.562" endtime="20201112 09:44:56.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018085486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028136708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:56.861" endtime="20201112 09:44:56.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.868" endtime="20201112 09:44:56.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.560" endtime="20201112 09:44:56.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.558" endtime="20201112 09:44:56.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:56.894" level="INFO">${RESULT} = {'source_diff': [0, 0.010051221999999999, 0.009987348000000004, 0.010010429999999994, 0.010000903000000005, 0.01000094399999999, 0.010000917000000012, 0.010000902999999992, 0.010000930000000005, 0.010...</msg>
<status status="PASS" starttime="20201112 09:44:56.871" endtime="20201112 09:44:56.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.898" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:56.897" endtime="20201112 09:44:56.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.900" level="INFO">VALUE: 0.018085486</msg>
<status status="PASS" starttime="20201112 09:44:56.900" endtime="20201112 09:44:56.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.895" endtime="20201112 09:44:56.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.907" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:56.905" endtime="20201112 09:44:56.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:56.909" level="INFO">VALUE: [0.028136708, 0.038124056, 0.048134486, 0.058135389, 0.068136333, 0.07813725, 0.088138153, 0.098139083, 0.10814, 0.118140931, 0.128141847, 0.138142819, 0.148143667, 0.158144625, 0.168145528, 0.178146444, 0.188147361, 0.198148292, 0.208149208, 0.218150111, 0.228151042, 0.238151972, 0.248152875, 0.258153792, 0.268154736, 0.278155625, 0.288156556, 0.298157486, 0.308158389, 0.318159319, 0.328160264, 0.338161153, 0.348162069, 0.358163056, 0.368163917, 0.378164833, 0.38816575, 0.398166722, 0.408167597, 0.418168514, 0.428169458, 0.438170361, 0.448171292, 0.458172222, 0.468173139, 0.478174056, 0.488174986, 0.498175903, 0.508176806, 0.518177736, 0.528178722, 0.538179583, 0.548180528, 0.558181444, 0.568182333, 0.57818325, 0.588184181, 0.598185125, 0.608186014, 0.618186944, 0.628187875, 0.638188778, 0.648189708, 0.658190625, 0.668191542, 0.678192486, 0.688193403, 0.698194319, 0.708195222, 0.718196167, 0.728197069, 0.738197986, 0.748198917, 0.758199847, 0.76820075, 0.778201681, 0.788202597, 0.798203528, 0.808204444, 0.818205361, 0.828206361, 0.838207278, 0.848208125, 0.858209042, 0.868209958, 0.878210889, 0.888211806, 0.898212736, 0.908213681, 0.918214611, 0.928215486, 0.938216431, 0.948217347, 0.958218278, 0.968219222, 0.978220111, 0.988221028, 0.998221944, 1.008222875, 1.018223778] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:56.908" endtime="20201112 09:44:56.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.902" endtime="20201112 09:44:56.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.912" endtime="20201112 09:44:56.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:56.915" endtime="20201112 09:44:56.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.914" endtime="20201112 09:44:56.935"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.910" endtime="20201112 09:44:56.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.391" endtime="20201112 09:44:56.936"></status>
</kw>
<msg timestamp="20201112 09:44:56.936" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:56.944" endtime="20201112 09:44:59.037"></status>
</kw>
<msg timestamp="20201112 09:44:59.038" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36001072, 'wakeups': [36011122, 36021109, 36031118, 36041118, 36051118...</msg>
<status status="PASS" starttime="20201112 09:44:56.943" endtime="20201112 09:44:59.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.044" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36001072, 'wakeups': [36011122, 36021109, 36031118, 36041118, 36051118...</msg>
<status status="PASS" starttime="20201112 09:44:59.040" endtime="20201112 09:44:59.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.047" endtime="20201112 09:44:59.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.940" endtime="20201112 09:44:59.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.938" endtime="20201112 09:44:59.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.057" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [36011122, 36021109, 36031118, 36041118, 36051118, 36061118, 36071118, 36081118, 36091118, 36101118, 36111118, 36121118, 36131118, 36141118, 3615...</msg>
<status status="PASS" starttime="20201112 09:44:59.053" endtime="20201112 09:44:59.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.066" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:59.064" endtime="20201112 09:44:59.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.070" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:59.068" endtime="20201112 09:44:59.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.059" endtime="20201112 09:44:59.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.080" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:59.078" endtime="20201112 09:44:59.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.084" level="INFO">VALUE: 36001072</msg>
<status status="PASS" starttime="20201112 09:44:59.083" endtime="20201112 09:44:59.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.073" endtime="20201112 09:44:59.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.094" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:59.092" endtime="20201112 09:44:59.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.099" level="INFO">VALUE: [36011122, 36021109, 36031118, 36041118, 36051118, 36061118, 36071118, 36081118, 36091118, 36101118, 36111118, 36121118, 36131118, 36141118, 36151118, 36161118, 36171118, 36181118, 36191118, 36201118, 36211118, 36221118, 36231118, 36241118, 36251118, 36261118, 36271118, 36281118, 36291118, 36301118, 36311118, 36321118, 36331118, 36341118, 36351118, 36361118, 36371118, 36381118, 36391118, 36401118, 36411118, 36421118, 36431118, 36441118, 36451118, 36461118, 36471118, 36481118, 36491118, 36501118, 36511118, 36521118, 36531118, 36541118, 36551118, 36561118, 36571118, 36581118, 36591118, 36601118, 36611118, 36621118, 36631118, 36641118, 36651118, 36661118, 36671118, 36681118, 36691118, 36701118, 36711118, 36721118, 36731118, 36741118, 36751118, 36761118, 36771118, 36781118, 36791118, 36801118, 36811118, 36821118, 36831118, 36841118, 36851118, 36861118, 36871118, 36881118, 36891118, 36901118, 36911118, 36921118, 36931118, 36941118, 36951118, 36961118, 36971118, 36981118, 36991118, 37001118]</msg>
<status status="PASS" starttime="20201112 09:44:59.097" endtime="20201112 09:44:59.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.087" endtime="20201112 09:44:59.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.114" endtime="20201112 09:44:59.412"></status>
</kw>
<msg timestamp="20201112 09:44:59.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018092361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028143889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.111" endtime="20201112 09:44:59.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018092361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028143889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.416" endtime="20201112 09:44:59.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.423" endtime="20201112 09:44:59.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.106" endtime="20201112 09:44:59.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.102" endtime="20201112 09:44:59.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.449" level="INFO">${RESULT} = {'source_diff': [0, 0.010051527999999997, 0.009987319000000001, 0.010010445, 0.010000902999999998, 0.010000971999999997, 0.010000888999999999, 0.010000916000000012, 0.010000902999999992, 0.01000093100...</msg>
<status status="PASS" starttime="20201112 09:44:59.427" endtime="20201112 09:44:59.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.454" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:59.453" endtime="20201112 09:44:59.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.456" level="INFO">VALUE: 0.018092361</msg>
<status status="PASS" starttime="20201112 09:44:59.455" endtime="20201112 09:44:59.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.450" endtime="20201112 09:44:59.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.462" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:59.461" endtime="20201112 09:44:59.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.464" level="INFO">VALUE: [0.028143889, 0.038131208, 0.048141653, 0.058142556, 0.068143528, 0.078144417, 0.088145333, 0.098146236, 0.108147167, 0.118148111, 0.128149, 0.138149986, 0.148150861, 0.158151778, 0.16815275, 0.178153597, 0.188154514, 0.198155444, 0.208156444, 0.218157278, 0.228158208, 0.238159139, 0.248160042, 0.258160972, 0.268161889, 0.278162833, 0.288163736, 0.298164667, 0.308165569, 0.318166486, 0.328167403, 0.338168347, 0.34816925, 0.358170167, 0.368171097, 0.378172028, 0.388172958, 0.398173861, 0.408174792, 0.418175722, 0.428176611, 0.438177542, 0.448178458, 0.458179375, 0.468180306, 0.478181236, 0.488182139, 0.498183111, 0.508184, 0.518184903, 0.528185847, 0.538186764, 0.548187667, 0.558188597, 0.568189528, 0.578190444, 0.588191361, 0.598192278, 0.608193208, 0.618194125, 0.628195042, 0.638195972, 0.648196889, 0.658197806, 0.66819875, 0.678199653, 0.688200569, 0.698201514, 0.708202417, 0.718203333, 0.728204347, 0.738205181, 0.748206097, 0.758207028, 0.768207944, 0.778208875, 0.788209792, 0.79821075, 0.808211625, 0.818212639, 0.828213472, 0.838214403, 0.848215319, 0.858216236, 0.868217167, 0.878218083, 0.888219, 0.898219944, 0.908220847, 0.918221819, 0.928222694, 0.938223611, 0.948224528, 0.958225458, 0.968226375, 0.978227306, 0.988228236, 0.998229139, 1.008230069, 1.018230986] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:59.463" endtime="20201112 09:44:59.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.458" endtime="20201112 09:44:59.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.467" endtime="20201112 09:44:59.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:59.470" endtime="20201112 09:44:59.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.469" endtime="20201112 09:44:59.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.465" endtime="20201112 09:44:59.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:56.937" endtime="20201112 09:44:59.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.831" endtime="20201112 09:44:59.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:51.831" endtime="20201112 09:44:59.491"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:59.494" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.503" endtime="20201112 09:45:01.596"></status>
</kw>
<msg timestamp="20201112 09:45:01.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38560484, 'wakeups': [38570546, 38580532, 38590532, 38600532, 38610532...</msg>
<status status="PASS" starttime="20201112 09:44:59.502" endtime="20201112 09:45:01.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38560484, 'wakeups': [38570546, 38580532, 38590532, 38600532, 38610532...</msg>
<status status="PASS" starttime="20201112 09:45:01.599" endtime="20201112 09:45:01.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.605" endtime="20201112 09:45:01.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.498" endtime="20201112 09:45:01.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.496" endtime="20201112 09:45:01.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:01.616" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [38570546, 38580532, 38590532, 38600532, 38610532, 38620532, 38630532, 38640532, 38650532, 38660532, 38670532, 38680532, 38690532, 38700532, 3871...</msg>
<status status="PASS" starttime="20201112 09:45:01.612" endtime="20201112 09:45:01.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.627" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:01.624" endtime="20201112 09:45:01.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.633" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:01.630" endtime="20201112 09:45:01.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.618" endtime="20201112 09:45:01.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.645" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:01.642" endtime="20201112 09:45:01.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.650" level="INFO">VALUE: 38560484</msg>
<status status="PASS" starttime="20201112 09:45:01.648" endtime="20201112 09:45:01.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.637" endtime="20201112 09:45:01.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.662" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:01.660" endtime="20201112 09:45:01.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.668" level="INFO">VALUE: [38570546, 38580532, 38590532, 38600532, 38610532, 38620532, 38630532, 38640532, 38650532, 38660532, 38670532, 38680532, 38690532, 38700532, 38710532, 38720532, 38730532, 38740532, 38750532, 38760532, 38770532, 38780532, 38790532, 38800532, 38810532, 38820532, 38830532, 38840532, 38850532, 38860532, 38870532, 38880532, 38890532, 38900532, 38910532, 38920532, 38930532, 38940532, 38950532, 38960532, 38970532, 38980532, 38990532, 39000532, 39010532, 39020532, 39030532, 39040532, 39050532, 39060532, 39070532, 39080532, 39090532, 39100532, 39110532, 39120532, 39130532, 39140532, 39150532, 39160532, 39170532, 39180532, 39190532, 39200532, 39210532, 39220532, 39230532, 39240532, 39250532, 39260532, 39270532, 39280532, 39290532, 39300532, 39310532, 39320532, 39330532, 39340532, 39350532, 39360532, 39370532, 39380532, 39390532, 39400532, 39410532, 39420532, 39430532, 39440532, 39450532, 39460532, 39470532, 39480532, 39490532, 39500532, 39510532, 39520532, 39530532, 39540532, 39550532, 39560532]</msg>
<status status="PASS" starttime="20201112 09:45:01.665" endtime="20201112 09:45:01.669"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.654" endtime="20201112 09:45:01.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.687" endtime="20201112 09:45:01.986"></status>
</kw>
<msg timestamp="20201112 09:45:01.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032498528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.683" endtime="20201112 09:45:01.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:01.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032498528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:01.990" endtime="20201112 09:45:01.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:01.997" endtime="20201112 09:45:01.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.676" endtime="20201112 09:45:01.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:01.672" endtime="20201112 09:45:02.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:02.024" level="INFO">${RESULT} = {'source_diff': [0, 0.010063097, 0.009987000000000003, 0.010000902999999998, 0.010000943999999998, 0.010000903000000005, 0.010000902999999992, 0.010000930000000005, 0.010000916999999998, 0.01000091599...</msg>
<status status="PASS" starttime="20201112 09:45:02.001" endtime="20201112 09:45:02.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.029" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:02.027" endtime="20201112 09:45:02.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.031" level="INFO">VALUE: 0.022435431</msg>
<status status="PASS" starttime="20201112 09:45:02.030" endtime="20201112 09:45:02.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.025" endtime="20201112 09:45:02.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.036" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:02.035" endtime="20201112 09:45:02.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.038" level="INFO">VALUE: [0.032498528, 0.042485528, 0.052486431, 0.062487375, 0.072488278, 0.082489181, 0.092490111, 0.102491028, 0.112491944, 0.122492861, 0.132493778, 0.142494708, 0.152495625, 0.162496542, 0.172497486, 0.182498375, 0.192499292, 0.202500236, 0.212501139, 0.222502056, 0.232502986, 0.242503903, 0.252504833, 0.262505736, 0.272506681, 0.282507583, 0.2925085, 0.302509431, 0.312510347, 0.322511264, 0.332512181, 0.342513097, 0.352514028, 0.362514931, 0.372515875, 0.382516778, 0.392517694, 0.402518611, 0.412519542, 0.422520472, 0.432521375, 0.442522306, 0.452523222, 0.462524139, 0.472525056, 0.482526014, 0.492526903, 0.502527819, 0.512528764, 0.522529681, 0.532530597, 0.542531514, 0.5525325, 0.562533347, 0.572534264, 0.582535194, 0.592536153, 0.602537028, 0.612537944, 0.622538875, 0.632539806, 0.642540708, 0.652541639, 0.662542556, 0.672543472, 0.682544403, 0.692545319, 0.702546236, 0.712547153, 0.722548083, 0.732549, 0.742549931, 0.752550847, 0.762551764, 0.772552681, 0.782553597, 0.792554528, 0.802555444, 0.812556361, 0.822557292, 0.832558208, 0.842559139, 0.852560111, 0.862560972, 0.872561889, 0.882562819, 0.89256375, 0.902564667, 0.912565569, 0.9225665, 0.932567431, 0.942568333, 0.952569264, 0.962570181, 0.972571097, 0.982572028, 0.992572958, 1.002573861, 1.012574778, 1.022575708] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:02.037" endtime="20201112 09:45:02.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.032" endtime="20201112 09:45:02.039"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.041" endtime="20201112 09:45:02.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:02.045" endtime="20201112 09:45:02.064"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.043" endtime="20201112 09:45:02.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.040" endtime="20201112 09:45:02.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.494" endtime="20201112 09:45:02.065"></status>
</kw>
<msg timestamp="20201112 09:45:02.066" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.074" endtime="20201112 09:45:04.166"></status>
</kw>
<msg timestamp="20201112 09:45:04.168" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41130730, 'wakeups': [41140792, 41150778, 41160788, 41170788, 41180788...</msg>
<status status="PASS" starttime="20201112 09:45:02.072" endtime="20201112 09:45:04.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41130730, 'wakeups': [41140792, 41150778, 41160788, 41170788, 41180788...</msg>
<status status="PASS" starttime="20201112 09:45:04.170" endtime="20201112 09:45:04.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.176" endtime="20201112 09:45:04.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.070" endtime="20201112 09:45:04.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.068" endtime="20201112 09:45:04.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.186" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [41140792, 41150778, 41160788, 41170788, 41180788, 41190788, 41200788, 41210788, 41220788, 41230788, 41240788, 41250788, 41260788, 41270788, 4128...</msg>
<status status="PASS" starttime="20201112 09:45:04.182" endtime="20201112 09:45:04.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.195" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:04.193" endtime="20201112 09:45:04.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.199" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:04.197" endtime="20201112 09:45:04.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.188" endtime="20201112 09:45:04.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.209" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:04.207" endtime="20201112 09:45:04.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.216" level="INFO">VALUE: 41130730</msg>
<status status="PASS" starttime="20201112 09:45:04.214" endtime="20201112 09:45:04.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.202" endtime="20201112 09:45:04.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.226" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:04.224" endtime="20201112 09:45:04.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.230" level="INFO">VALUE: [41140792, 41150778, 41160788, 41170788, 41180788, 41190788, 41200788, 41210788, 41220788, 41230788, 41240788, 41250788, 41260788, 41270788, 41280788, 41290788, 41300788, 41310788, 41320788, 41330788, 41340788, 41350788, 41360788, 41370788, 41380788, 41390788, 41400788, 41410788, 41420788, 41430788, 41440788, 41450788, 41460788, 41470788, 41480788, 41490788, 41500788, 41510788, 41520788, 41530788, 41540788, 41550788, 41560788, 41570788, 41580788, 41590788, 41600788, 41610788, 41620788, 41630788, 41640788, 41650788, 41660788, 41670788, 41680788, 41690788, 41700788, 41710788, 41720788, 41730788, 41740788, 41750788, 41760788, 41770788, 41780788, 41790788, 41800788, 41810788, 41820788, 41830788, 41840788, 41850788, 41860788, 41870788, 41880788, 41890788, 41900788, 41910788, 41920788, 41930788, 41940788, 41950788, 41960788, 41970788, 41980788, 41990788, 42000788, 42010788, 42020788, 42030788, 42040788, 42050788, 42060788, 42070788, 42080788, 42090788, 42100788, 42110788, 42120788, 42130788]</msg>
<status status="PASS" starttime="20201112 09:45:04.228" endtime="20201112 09:45:04.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.219" endtime="20201112 09:45:04.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.246" endtime="20201112 09:45:04.545"></status>
</kw>
<msg timestamp="20201112 09:45:04.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018141333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028204194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.243" endtime="20201112 09:45:04.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018141333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028204194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.549" endtime="20201112 09:45:04.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.556" endtime="20201112 09:45:04.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.238" endtime="20201112 09:45:04.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.234" endtime="20201112 09:45:04.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.582" level="INFO">${RESULT} = {'source_diff': [0, 0.010062861, 0.009986959, 0.010011040999999998, 0.010000987000000003, 0.010000847, 0.010000930000000005, 0.010000916999999998, 0.010000916999999998, 0.010000930000000005, 0.0100009...</msg>
<status status="PASS" starttime="20201112 09:45:04.559" endtime="20201112 09:45:04.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.586" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:04.585" endtime="20201112 09:45:04.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.588" level="INFO">VALUE: 0.018141333</msg>
<status status="PASS" starttime="20201112 09:45:04.587" endtime="20201112 09:45:04.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.583" endtime="20201112 09:45:04.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.594" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:04.593" endtime="20201112 09:45:04.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.597" level="INFO">VALUE: [0.028204194, 0.038191153, 0.048202194, 0.058203181, 0.068204028, 0.078204958, 0.088205875, 0.098206792, 0.108207722, 0.118208639, 0.128209625, 0.138210472, 0.148211444, 0.158212319, 0.16821325, 0.178214208, 0.188215083, 0.198215986, 0.208216917, 0.218217833, 0.228218764, 0.238219681, 0.248220625, 0.258221542, 0.268222444, 0.278223361, 0.288224278, 0.298225194, 0.308226153, 0.318227042, 0.328227958, 0.338228931, 0.348229806, 0.358230722, 0.368231639, 0.378232556, 0.388233472, 0.398234458, 0.408235319, 0.418236236, 0.428237167, 0.438238083, 0.448239, 0.458239931, 0.468240847, 0.478241778, 0.488242708, 0.498243611, 0.508244528, 0.518245458, 0.528246375, 0.538247292, 0.548248208, 0.558249139, 0.568250056, 0.578250972, 0.588251972, 0.598252833, 0.608253736, 0.618254694, 0.628255583, 0.638256514, 0.648257431, 0.658258361, 0.668259278, 0.678260194, 0.688261111, 0.698262069, 0.708262958, 0.718263875, 0.728264792, 0.738265736, 0.748266653, 0.758267556, 0.768268514, 0.778269417, 0.788270333, 0.79827125, 0.808272167, 0.818273125, 0.828274056, 0.838274931, 0.848275847, 0.858276778, 0.868277708, 0.878278611, 0.888279556, 0.8982805, 0.908281417, 0.918282319, 0.928283222, 0.938284139, 0.948285069, 0.958285986, 0.968286917, 0.978287917, 0.98828875, 0.998289667, 1.008290611, 1.018291514] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:04.596" endtime="20201112 09:45:04.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.590" endtime="20201112 09:45:04.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.600" endtime="20201112 09:45:04.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:04.603" endtime="20201112 09:45:04.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.602" endtime="20201112 09:45:04.623"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.598" endtime="20201112 09:45:04.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.066" endtime="20201112 09:45:04.624"></status>
</kw>
<msg timestamp="20201112 09:45:04.624" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.632" endtime="20201112 09:45:06.724"></status>
</kw>
<msg timestamp="20201112 09:45:06.725" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43689066, 'wakeups': [43699128, 43709114, 43719114, 43729114, 43739114...</msg>
<status status="PASS" starttime="20201112 09:45:04.631" endtime="20201112 09:45:06.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.732" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43689066, 'wakeups': [43699128, 43709114, 43719114, 43729114, 43739114...</msg>
<status status="PASS" starttime="20201112 09:45:06.728" endtime="20201112 09:45:06.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.734" endtime="20201112 09:45:06.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.628" endtime="20201112 09:45:06.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.626" endtime="20201112 09:45:06.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:06.745" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [43699128, 43709114, 43719114, 43729114, 43739114, 43749114, 43759114, 43769114, 43779114, 43789114, 43799114, 43809114, 43819114, 43829114, 4383...</msg>
<status status="PASS" starttime="20201112 09:45:06.741" endtime="20201112 09:45:06.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.754" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:06.751" endtime="20201112 09:45:06.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.758" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:06.756" endtime="20201112 09:45:06.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.747" endtime="20201112 09:45:06.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.768" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:06.766" endtime="20201112 09:45:06.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.771" level="INFO">VALUE: 43689066</msg>
<status status="PASS" starttime="20201112 09:45:06.770" endtime="20201112 09:45:06.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.761" endtime="20201112 09:45:06.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.776" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:06.775" endtime="20201112 09:45:06.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:06.778" level="INFO">VALUE: [43699128, 43709114, 43719114, 43729114, 43739114, 43749114, 43759114, 43769114, 43779114, 43789114, 43799114, 43809114, 43819114, 43829114, 43839114, 43849114, 43859114, 43869114, 43879114, 43889114, 43899114, 43909114, 43919114, 43929114, 43939114, 43949114, 43959114, 43969114, 43979114, 43989114, 43999114, 44009114, 44019114, 44029114, 44039114, 44049114, 44059114, 44069114, 44079114, 44089114, 44099114, 44109114, 44119114, 44129114, 44139114, 44149114, 44159114, 44169114, 44179114, 44189114, 44199114, 44209114, 44219114, 44229114, 44239114, 44249114, 44259114, 44269114, 44279114, 44289114, 44299114, 44309114, 44319114, 44329114, 44339114, 44349114, 44359114, 44369114, 44379114, 44389114, 44399114, 44409114, 44419114, 44429114, 44439114, 44449114, 44459114, 44469114, 44479114, 44489114, 44499114, 44509114, 44519114, 44529114, 44539114, 44549114, 44559114, 44569114, 44579114, 44589114, 44599114, 44609114, 44619114, 44629114, 44639114, 44649114, 44659114, 44669114, 44679114, 44689114]</msg>
<status status="PASS" starttime="20201112 09:45:06.777" endtime="20201112 09:45:06.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.773" endtime="20201112 09:45:06.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:06.785" endtime="20201112 09:45:07.079"></status>
</kw>
<msg timestamp="20201112 09:45:07.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018080778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028143986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:06.784" endtime="20201112 09:45:07.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018080778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028143986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:07.083" endtime="20201112 09:45:07.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.090" endtime="20201112 09:45:07.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.781" endtime="20201112 09:45:07.092"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:06.780" endtime="20201112 09:45:07.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:07.116" level="INFO">${RESULT} = {'source_diff': [0, 0.010063208, 0.009987, 0.010000931000000005, 0.010000901999999999, 0.010000931000000005, 0.010000916999999998, 0.010000915999999999, 0.010000916999999998, 0.010000916999999998, 0.0...</msg>
<status status="PASS" starttime="20201112 09:45:07.093" endtime="20201112 09:45:07.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.121" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:07.120" endtime="20201112 09:45:07.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.123" level="INFO">VALUE: 0.018080778</msg>
<status status="PASS" starttime="20201112 09:45:07.122" endtime="20201112 09:45:07.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.117" endtime="20201112 09:45:07.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.128" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:07.127" endtime="20201112 09:45:07.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.130" level="INFO">VALUE: [0.028143986, 0.038130986, 0.048131917, 0.058132819, 0.06813375, 0.078134667, 0.088135583, 0.0981365, 0.108137417, 0.118138347, 0.128139264, 0.138140181, 0.148141111, 0.158142028, 0.168142944, 0.178143861, 0.188144847, 0.198145708, 0.208146625, 0.218147569, 0.228148458, 0.238149403, 0.248150319, 0.258151222, 0.268152139, 0.278153083, 0.288154028, 0.298154931, 0.308155833, 0.318156806, 0.328157694, 0.338158597, 0.348159514, 0.358160431, 0.368161347, 0.378162278, 0.388163194, 0.398164125, 0.408165028, 0.418165958, 0.428166875, 0.438167792, 0.44816875, 0.458169639, 0.468170556, 0.4781715, 0.488172403, 0.498173319, 0.508174319, 0.518175181, 0.528176083, 0.538177097, 0.548177944, 0.558178861, 0.568179778, 0.578180694, 0.588181611, 0.598182542, 0.608183458, 0.618184375, 0.628185292, 0.638186222, 0.648187139, 0.658188056, 0.668188986, 0.678189903, 0.688190819, 0.698191764, 0.708192681, 0.718193597, 0.728194514, 0.738195431, 0.748196347, 0.758197292, 0.768198194, 0.778199153, 0.788200042, 0.798200972, 0.808201875, 0.818202819, 0.828203736, 0.838204694, 0.848205569, 0.858206486, 0.868207417, 0.878208333, 0.88820925, 0.898210181, 0.908211097, 0.918212028, 0.928212972, 0.938213861, 0.948214778, 0.958215708, 0.968216625, 0.978217542, 0.988218486, 0.998219403, 1.008220319, 1.018221236] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:07.129" endtime="20201112 09:45:07.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.124" endtime="20201112 09:45:07.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.133" endtime="20201112 09:45:07.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:07.137" endtime="20201112 09:45:07.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.135" endtime="20201112 09:45:07.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.132" endtime="20201112 09:45:07.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.625" endtime="20201112 09:45:07.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.492" endtime="20201112 09:45:07.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.492" endtime="20201112 09:45:07.158"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:07.160" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.169" endtime="20201112 09:45:09.263"></status>
</kw>
<msg timestamp="20201112 09:45:09.264" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46226250, 'wakeups': [46236323, 46246310, 46256310, 46266310, 46276310...</msg>
<status status="PASS" starttime="20201112 09:45:07.168" endtime="20201112 09:45:09.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.270" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46226250, 'wakeups': [46236323, 46246310, 46256310, 46266310, 46276310...</msg>
<status status="PASS" starttime="20201112 09:45:09.266" endtime="20201112 09:45:09.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.272" endtime="20201112 09:45:09.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.164" endtime="20201112 09:45:09.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.162" endtime="20201112 09:45:09.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:09.283" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [46236323, 46246310, 46256310, 46266310, 46276310, 46286310, 46296310, 46306310, 46316310, 46326310, 46336310, 46346310, 46356310, 46366310, 4637...</msg>
<status status="PASS" starttime="20201112 09:45:09.279" endtime="20201112 09:45:09.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.292" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:09.290" endtime="20201112 09:45:09.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.296" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:09.294" endtime="20201112 09:45:09.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.285" endtime="20201112 09:45:09.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.306" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:09.304" endtime="20201112 09:45:09.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.310" level="INFO">VALUE: 46226250</msg>
<status status="PASS" starttime="20201112 09:45:09.308" endtime="20201112 09:45:09.311"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.299" endtime="20201112 09:45:09.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.320" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:09.318" endtime="20201112 09:45:09.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.322" level="INFO">VALUE: [46236323, 46246310, 46256310, 46266310, 46276310, 46286310, 46296310, 46306310, 46316310, 46326310, 46336310, 46346310, 46356310, 46366310, 46376310, 46386310, 46396310, 46406310, 46416310, 46426310, 46436310, 46446310, 46456310, 46466310, 46476310, 46486310, 46496310, 46506310, 46516310, 46526310, 46536310, 46546310, 46556310, 46566310, 46576310, 46586310, 46596310, 46606310, 46616310, 46626310, 46636310, 46646310, 46656310, 46666310, 46676310, 46686310, 46696310, 46706310, 46716310, 46726310, 46736310, 46746310, 46756310, 46766310, 46776310, 46786310, 46796310, 46806310, 46816310, 46826310, 46836310, 46846310, 46856310, 46866310, 46876310, 46886310, 46896310, 46906310, 46916310, 46926310, 46936310, 46946310, 46956310, 46966310, 46976310, 46986310, 46996310, 47006310, 47016310, 47026310, 47036310, 47046310, 47056310, 47066310, 47076310, 47086310, 47096310, 47106310, 47116310, 47126310, 47136310, 47146310, 47156310, 47166310, 47176310, 47186310, 47196310, 47206310, 47216310, 47226310]</msg>
<status status="PASS" starttime="20201112 09:45:09.321" endtime="20201112 09:45:09.323"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.313" endtime="20201112 09:45:09.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.329" endtime="20201112 09:45:09.621"></status>
</kw>
<msg timestamp="20201112 09:45:09.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031815236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:09.328" endtime="20201112 09:45:09.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031815236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:09.624" endtime="20201112 09:45:09.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.632" endtime="20201112 09:45:09.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.325" endtime="20201112 09:45:09.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.324" endtime="20201112 09:45:09.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:09.658" level="INFO">${RESULT} = {'source_diff': [0, 0.010074110999999997, 0.009987403000000006, 0.010000902999999998, 0.010000957999999997, 0.010000888999999999, 0.010000930000000005, 0.010000902999999992, 0.010000931000000005, 0.01...</msg>
<status status="PASS" starttime="20201112 09:45:09.635" endtime="20201112 09:45:09.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.663" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:09.662" endtime="20201112 09:45:09.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.665" level="INFO">VALUE: 0.021741125</msg>
<status status="PASS" starttime="20201112 09:45:09.664" endtime="20201112 09:45:09.665"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.659" endtime="20201112 09:45:09.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.670" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:09.669" endtime="20201112 09:45:09.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:09.673" level="INFO">VALUE: [0.031815236, 0.041802639, 0.051803542, 0.0618045, 0.071805389, 0.081806319, 0.091807222, 0.101808153, 0.111809083, 0.121809986, 0.131810903, 0.141811833, 0.15181275, 0.161813681, 0.171814597, 0.1818155, 0.191816444, 0.201817361, 0.211818278, 0.221819194, 0.231820111, 0.241821042, 0.251821944, 0.261822889, 0.271823806, 0.281824708, 0.291825625, 0.301826583, 0.311827472, 0.321828389, 0.331829319, 0.341830236, 0.351831153, 0.361832097, 0.371832986, 0.381833917, 0.391834833, 0.40183575, 0.411836708, 0.421837597, 0.431838514, 0.441839444, 0.451840375, 0.461841278, 0.471842194, 0.481843125, 0.491844083, 0.501845, 0.511845903, 0.521846806, 0.531847736, 0.541848681, 0.551849569, 0.5618505, 0.571851417, 0.581852347, 0.59185325, 0.601854181, 0.611855097, 0.621856056, 0.631856958, 0.641857889, 0.651858778, 0.661859764, 0.671860639, 0.681861569, 0.691862472, 0.701863403, 0.711864319, 0.721865236, 0.731866222, 0.741867083, 0.751868, 0.761868917, 0.771869847, 0.781870764, 0.791871694, 0.801872611, 0.811873528, 0.821874444, 0.831875361, 0.841876306, 0.851877208, 0.861878125, 0.871879056, 0.881879958, 0.891880875, 0.901881819, 0.911882722, 0.921883639, 0.931884569, 0.9418855, 0.951886417, 0.961887319, 0.971888236, 0.981889181, 0.991890097, 1.001891, 1.011891917, 1.021892861] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:09.672" endtime="20201112 09:45:09.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.666" endtime="20201112 09:45:09.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.676" endtime="20201112 09:45:09.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:09.679" endtime="20201112 09:45:09.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.678" endtime="20201112 09:45:09.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.674" endtime="20201112 09:45:09.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.161" endtime="20201112 09:45:09.700"></status>
</kw>
<msg timestamp="20201112 09:45:09.700" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:09.708" endtime="20201112 09:45:11.802"></status>
</kw>
<msg timestamp="20201112 09:45:11.803" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48765213, 'wakeups': [48775288, 48785273, 48795273, 48805273, 48815273...</msg>
<status status="PASS" starttime="20201112 09:45:09.707" endtime="20201112 09:45:11.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.809" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48765213, 'wakeups': [48775288, 48785273, 48795273, 48805273, 48815273...</msg>
<status status="PASS" starttime="20201112 09:45:11.805" endtime="20201112 09:45:11.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.811" endtime="20201112 09:45:11.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.704" endtime="20201112 09:45:11.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.702" endtime="20201112 09:45:11.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:11.822" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [48775288, 48785273, 48795273, 48805273, 48815273, 48825273, 48835273, 48845273, 48855273, 48865273, 48875273, 48885273, 48895273, 48905273, 4891...</msg>
<status status="PASS" starttime="20201112 09:45:11.818" endtime="20201112 09:45:11.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.830" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:11.828" endtime="20201112 09:45:11.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.834" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:11.832" endtime="20201112 09:45:11.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.823" endtime="20201112 09:45:11.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.846" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:11.844" endtime="20201112 09:45:11.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.851" level="INFO">VALUE: 48765213</msg>
<status status="PASS" starttime="20201112 09:45:11.849" endtime="20201112 09:45:11.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.837" endtime="20201112 09:45:11.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.861" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:11.859" endtime="20201112 09:45:11.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:11.867" level="INFO">VALUE: [48775288, 48785273, 48795273, 48805273, 48815273, 48825273, 48835273, 48845273, 48855273, 48865273, 48875273, 48885273, 48895273, 48905273, 48915273, 48925273, 48935273, 48945273, 48955273, 48965273, 48975273, 48985273, 48995273, 49005273, 49015273, 49025273, 49035273, 49045273, 49055273, 49065273, 49075273, 49085273, 49095273, 49105273, 49115273, 49125273, 49135273, 49145273, 49155273, 49165273, 49175273, 49185273, 49195273, 49205273, 49215273, 49225273, 49235273, 49245273, 49255273, 49265273, 49275273, 49285273, 49295273, 49305273, 49315273, 49325273, 49335273, 49345273, 49355273, 49365273, 49375273, 49385273, 49395273, 49405273, 49415273, 49425273, 49435273, 49445273, 49455273, 49465273, 49475273, 49485273, 49495273, 49505273, 49515273, 49525273, 49535273, 49545273, 49555273, 49565273, 49575273, 49585273, 49595273, 49605273, 49615273, 49625273, 49635273, 49645273, 49655273, 49665273, 49675273, 49685273, 49695273, 49705273, 49715273, 49725273, 49735273, 49745273, 49755273, 49765273]</msg>
<status status="PASS" starttime="20201112 09:45:11.866" endtime="20201112 09:45:11.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.854" endtime="20201112 09:45:11.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:11.875" endtime="20201112 09:45:12.166"></status>
</kw>
<msg timestamp="20201112 09:45:12.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018055167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028131306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:11.873" endtime="20201112 09:45:12.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018055167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028131306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:12.170" endtime="20201112 09:45:12.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.178" endtime="20201112 09:45:12.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.871" endtime="20201112 09:45:12.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:11.869" endtime="20201112 09:45:12.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:12.204" level="INFO">${RESULT} = {'source_diff': [0, 0.010076138999999998, 0.009985069000000003, 0.010000930999999998, 0.010000915999999999, 0.010000916999999998, 0.010000916999999998, 0.010000930000000005, 0.010000931000000005, 0.01...</msg>
<status status="PASS" starttime="20201112 09:45:12.181" endtime="20201112 09:45:12.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.208" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:12.207" endtime="20201112 09:45:12.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.211" level="INFO">VALUE: 0.018055167</msg>
<status status="PASS" starttime="20201112 09:45:12.210" endtime="20201112 09:45:12.212"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.205" endtime="20201112 09:45:12.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.216" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:12.215" endtime="20201112 09:45:12.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.219" level="INFO">VALUE: [0.028131306, 0.038116375, 0.048117306, 0.058118222, 0.068119139, 0.078120056, 0.088120986, 0.098121917, 0.108122819, 0.118123736, 0.128124653, 0.138125597, 0.148126542, 0.158127417, 0.168128347, 0.178129264, 0.188130181, 0.198131125, 0.208132014, 0.218132944, 0.228133861, 0.238134792, 0.248135708, 0.258136639, 0.268137542, 0.278138514, 0.288139375, 0.298140333, 0.308141222, 0.318142139, 0.328143056, 0.338144, 0.348144958, 0.358145819, 0.36814675, 0.378147694, 0.388148625, 0.398149542, 0.408150417, 0.418151333, 0.428152264, 0.438153181, 0.448154097, 0.458155028, 0.468155931, 0.478156875, 0.488157792, 0.498158708, 0.508159625, 0.518160597, 0.528161458, 0.538162389, 0.548163292, 0.558164222, 0.568165153, 0.578166056, 0.588166986, 0.598167917, 0.608168819, 0.61816975, 0.628170681, 0.638171583, 0.6481725, 0.658173431, 0.668174361, 0.678175264, 0.688176181, 0.698177111, 0.708178028, 0.718178958, 0.728179875, 0.738180792, 0.748181736, 0.758182653, 0.768183556, 0.778184486, 0.788185417, 0.798186319, 0.808187292, 0.818188153, 0.828189083, 0.838190014, 0.848190944, 0.858191861, 0.868192833, 0.878193681, 0.888194611, 0.898195528, 0.908196444, 0.918197375, 0.928198319, 0.938199222, 0.948200139, 0.958201069, 0.968201972, 0.978202903, 0.988203819, 0.998204819, 1.008205667, 1.018206583] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:12.218" endtime="20201112 09:45:12.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.213" endtime="20201112 09:45:12.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.222" endtime="20201112 09:45:12.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:12.225" endtime="20201112 09:45:12.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.224" endtime="20201112 09:45:12.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.220" endtime="20201112 09:45:12.246"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:09.701" endtime="20201112 09:45:12.246"></status>
</kw>
<msg timestamp="20201112 09:45:12.246" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.254" endtime="20201112 09:45:14.347"></status>
</kw>
<msg timestamp="20201112 09:45:14.348" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51311411, 'wakeups': [51321484, 51331471, 51341471, 51351471, 51361471...</msg>
<status status="PASS" starttime="20201112 09:45:12.253" endtime="20201112 09:45:14.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51311411, 'wakeups': [51321484, 51331471, 51341471, 51351471, 51361471...</msg>
<status status="PASS" starttime="20201112 09:45:14.351" endtime="20201112 09:45:14.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.356" endtime="20201112 09:45:14.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.250" endtime="20201112 09:45:14.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.248" endtime="20201112 09:45:14.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:14.367" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [51321484, 51331471, 51341471, 51351471, 51361471, 51371471, 51381471, 51391471, 51401471, 51411471, 51421471, 51431471, 51441471, 51451471, 5146...</msg>
<status status="PASS" starttime="20201112 09:45:14.363" endtime="20201112 09:45:14.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.376" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:14.374" endtime="20201112 09:45:14.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.380" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:14.378" endtime="20201112 09:45:14.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.369" endtime="20201112 09:45:14.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.390" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:14.388" endtime="20201112 09:45:14.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.394" level="INFO">VALUE: 51311411</msg>
<status status="PASS" starttime="20201112 09:45:14.392" endtime="20201112 09:45:14.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.383" endtime="20201112 09:45:14.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.404" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:14.402" endtime="20201112 09:45:14.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.409" level="INFO">VALUE: [51321484, 51331471, 51341471, 51351471, 51361471, 51371471, 51381471, 51391471, 51401471, 51411471, 51421471, 51431471, 51441471, 51451471, 51461471, 51471471, 51481471, 51491471, 51501471, 51511471, 51521471, 51531471, 51541471, 51551471, 51561471, 51571471, 51581471, 51591471, 51601471, 51611471, 51621471, 51631471, 51641471, 51651471, 51661471, 51671471, 51681471, 51691471, 51701471, 51711471, 51721471, 51731471, 51741471, 51751471, 51761471, 51771471, 51781471, 51791471, 51801471, 51811471, 51821471, 51831471, 51841471, 51851471, 51861471, 51871471, 51881471, 51891471, 51901471, 51911471, 51921471, 51931471, 51941471, 51951471, 51961471, 51971471, 51981471, 51991471, 52001471, 52011471, 52021471, 52031471, 52041471, 52051471, 52061471, 52071471, 52081471, 52091471, 52101471, 52111471, 52121471, 52131471, 52141471, 52151471, 52161471, 52171471, 52181471, 52191471, 52201471, 52211471, 52221471, 52231471, 52241471, 52251471, 52261471, 52271471, 52281471, 52291471, 52301471, 52311471]</msg>
<status status="PASS" starttime="20201112 09:45:14.406" endtime="20201112 09:45:14.410"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.397" endtime="20201112 09:45:14.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.423" endtime="20201112 09:45:14.714"></status>
</kw>
<msg timestamp="20201112 09:45:14.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028687944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:14.422" endtime="20201112 09:45:14.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018613611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028687944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:14.718" endtime="20201112 09:45:14.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.726" endtime="20201112 09:45:14.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.415" endtime="20201112 09:45:14.728"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.412" endtime="20201112 09:45:14.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:14.751" level="INFO">${RESULT} = {'source_diff': [0, 0.010074333000000001, 0.009987028000000002, 0.010000985999999996, 0.010000875, 0.010000903000000005, 0.010000916999999998, 0.010000915999999999, 0.010000916999999998, 0.01000093100...</msg>
<status status="PASS" starttime="20201112 09:45:14.729" endtime="20201112 09:45:14.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.756" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:14.755" endtime="20201112 09:45:14.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.758" level="INFO">VALUE: 0.018613611</msg>
<status status="PASS" starttime="20201112 09:45:14.757" endtime="20201112 09:45:14.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.752" endtime="20201112 09:45:14.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.763" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:14.762" endtime="20201112 09:45:14.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:14.765" level="INFO">VALUE: [0.028687944, 0.038674972, 0.048675958, 0.058676833, 0.068677736, 0.078678653, 0.088679569, 0.098680486, 0.108681417, 0.118682389, 0.128683264, 0.138684167, 0.148685083, 0.158686014, 0.168686931, 0.178687847, 0.188688764, 0.198689708, 0.208690625, 0.218691528, 0.228692444, 0.238693375, 0.248694306, 0.25869525, 0.268696125, 0.278697056, 0.288697972, 0.298698889, 0.308699819, 0.31870075, 0.328701667, 0.338702597, 0.3487035, 0.358704417, 0.368705375, 0.378706278, 0.388707181, 0.398708111, 0.408709028, 0.418709972, 0.428710875, 0.438711792, 0.448712722, 0.458713653, 0.468714556, 0.4787155, 0.488716403, 0.498717333, 0.508718264, 0.518719167, 0.528720097, 0.538721028, 0.548721958, 0.558722875, 0.568723792, 0.578724764, 0.588725597, 0.598726528, 0.608727444, 0.618728361, 0.628729278, 0.638730208, 0.648731153, 0.658732056, 0.668732958, 0.678733875, 0.688734806, 0.698735736, 0.708736681, 0.718737556, 0.728738486, 0.738739403, 0.748740319, 0.758741236, 0.768742167, 0.778743083, 0.788744, 0.798744931, 0.808745833, 0.818746778, 0.828747681, 0.838748597, 0.848749528, 0.858750444, 0.868751361, 0.878752278, 0.888753208, 0.898754125, 0.908755042, 0.918755958, 0.928756917, 0.938757819, 0.948758736, 0.958759681, 0.968760569, 0.9787615, 0.988762403, 0.998763333, 1.00876425, 1.018765167] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:14.764" endtime="20201112 09:45:14.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.759" endtime="20201112 09:45:14.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.768" endtime="20201112 09:45:14.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:14.772" endtime="20201112 09:45:14.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.770" endtime="20201112 09:45:14.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.767" endtime="20201112 09:45:14.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.247" endtime="20201112 09:45:14.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.159" endtime="20201112 09:45:14.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.158" endtime="20201112 09:45:14.793"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:14.795" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:14.804" endtime="20201112 09:45:16.898"></status>
</kw>
<msg timestamp="20201112 09:45:16.899" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53861222, 'wakeups': [53871309, 53881296, 53891308, 53901308, 53911308...</msg>
<status status="PASS" starttime="20201112 09:45:14.803" endtime="20201112 09:45:16.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.910" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 53861222, 'wakeups': [53871309, 53881296, 53891308, 53901308, 53911308...</msg>
<status status="PASS" starttime="20201112 09:45:16.901" endtime="20201112 09:45:16.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.912" endtime="20201112 09:45:16.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.800" endtime="20201112 09:45:16.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.797" endtime="20201112 09:45:16.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:16.923" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [53871309, 53881296, 53891308, 53901308, 53911308, 53921308, 53931308, 53941308, 53951308, 53961308, 53971308, 53981308, 53991308, 54001308, 5401...</msg>
<status status="PASS" starttime="20201112 09:45:16.919" endtime="20201112 09:45:16.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.932" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:16.930" endtime="20201112 09:45:16.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.936" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:16.934" endtime="20201112 09:45:16.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.925" endtime="20201112 09:45:16.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.946" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:16.944" endtime="20201112 09:45:16.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.950" level="INFO">VALUE: 53861222</msg>
<status status="PASS" starttime="20201112 09:45:16.948" endtime="20201112 09:45:16.951"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.939" endtime="20201112 09:45:16.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.960" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:16.958" endtime="20201112 09:45:16.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:16.965" level="INFO">VALUE: [53871309, 53881296, 53891308, 53901308, 53911308, 53921308, 53931308, 53941308, 53951308, 53961308, 53971308, 53981308, 53991308, 54001308, 54011308, 54021308, 54031308, 54041308, 54051308, 54061308, 54071308, 54081308, 54091308, 54101308, 54111308, 54121308, 54131308, 54141308, 54151308, 54161308, 54171308, 54181308, 54191308, 54201308, 54211308, 54221308, 54231308, 54241308, 54251308, 54261308, 54271308, 54281308, 54291308, 54301308, 54311308, 54321308, 54331308, 54341308, 54351308, 54361308, 54371308, 54381308, 54391308, 54401308, 54411308, 54421308, 54431308, 54441308, 54451308, 54461308, 54471308, 54481308, 54491308, 54501308, 54511308, 54521308, 54531308, 54541308, 54551308, 54561308, 54571308, 54581308, 54591308, 54601308, 54611308, 54621308, 54631308, 54641308, 54651308, 54661308, 54671308, 54681308, 54691308, 54701308, 54711308, 54721308, 54731308, 54741308, 54751308, 54761308, 54771308, 54781308, 54791308, 54801308, 54811308, 54821308, 54831308, 54841308, 54851308, 54861308]</msg>
<status status="PASS" starttime="20201112 09:45:16.962" endtime="20201112 09:45:16.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.953" endtime="20201112 09:45:16.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:16.972" endtime="20201112 09:45:17.264"></status>
</kw>
<msg timestamp="20201112 09:45:17.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031866417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:16.971" endtime="20201112 09:45:17.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031866417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:17.268" endtime="20201112 09:45:17.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.275" endtime="20201112 09:45:17.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.968" endtime="20201112 09:45:17.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:16.966" endtime="20201112 09:45:17.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:17.302" level="INFO">${RESULT} = {'source_diff': [0, 0.010088084, 0.009987499999999996, 0.010013014, 0.010000888, 0.010000902999999998, 0.010000931000000005, 0.010000915999999999, 0.010000972999999996, 0.010000861, 0.0100009300000000...</msg>
<status status="PASS" starttime="20201112 09:45:17.278" endtime="20201112 09:45:17.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.307" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:17.306" endtime="20201112 09:45:17.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.309" level="INFO">VALUE: 0.021778333</msg>
<status status="PASS" starttime="20201112 09:45:17.308" endtime="20201112 09:45:17.309"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.303" endtime="20201112 09:45:17.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.314" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:17.313" endtime="20201112 09:45:17.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.316" level="INFO">VALUE: [0.031866417, 0.041853917, 0.051866931, 0.061867819, 0.071868722, 0.081869653, 0.091870569, 0.101871542, 0.111872403, 0.121873333, 0.13187425, 0.141875181, 0.151876083, 0.161877014, 0.171877931, 0.181878861, 0.191879764, 0.201880708, 0.211881611, 0.221882542, 0.231883472, 0.241884361, 0.251885292, 0.261886222, 0.271887181, 0.281888056, 0.291888972, 0.301889903, 0.311890889, 0.321891736, 0.331892667, 0.341893569, 0.351894486, 0.361895431, 0.371896333, 0.38189725, 0.391898181, 0.401899097, 0.411900014, 0.421900931, 0.431901861, 0.441902778, 0.451903722, 0.461904625, 0.471905583, 0.481906458, 0.491907389, 0.501908306, 0.511909222, 0.521910153, 0.531911097, 0.541911986, 0.551912903, 0.561913833, 0.571914764, 0.581915681, 0.591916597, 0.601917514, 0.611918444, 0.621919375, 0.631920278, 0.641921236, 0.651922194, 0.661923056, 0.671923972, 0.681924889, 0.691925806, 0.701926736, 0.711927653, 0.721928583, 0.731929486, 0.741930472, 0.751931333, 0.761932264, 0.771933194, 0.781934097, 0.791935028, 0.801935944, 0.811936875, 0.821937792, 0.831938764, 0.841939639, 0.851940597, 0.861941458, 0.871942375, 0.881943306, 0.891944236, 0.901945139, 0.911946069, 0.921946972, 0.931947917, 0.941948861, 0.951949736, 0.961950681, 0.971951583, 0.9819525, 0.991953417, 1.001954333, 1.011955264, 1.021956181] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:17.315" endtime="20201112 09:45:17.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.310" endtime="20201112 09:45:17.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.320" endtime="20201112 09:45:17.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:17.323" endtime="20201112 09:45:17.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.321" endtime="20201112 09:45:17.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.318" endtime="20201112 09:45:17.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.796" endtime="20201112 09:45:17.344"></status>
</kw>
<msg timestamp="20201112 09:45:17.344" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.352" endtime="20201112 09:45:19.444"></status>
</kw>
<msg timestamp="20201112 09:45:19.446" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56408750, 'wakeups': [56418837, 56428824, 56438836, 56448836, 56458836...</msg>
<status status="PASS" starttime="20201112 09:45:17.350" endtime="20201112 09:45:19.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.451" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56408750, 'wakeups': [56418837, 56428824, 56438836, 56448836, 56458836...</msg>
<status status="PASS" starttime="20201112 09:45:19.448" endtime="20201112 09:45:19.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.454" endtime="20201112 09:45:19.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.348" endtime="20201112 09:45:19.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.346" endtime="20201112 09:45:19.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:19.464" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [56418837, 56428824, 56438836, 56448836, 56458836, 56468836, 56478836, 56488836, 56498836, 56508836, 56518836, 56528836, 56538836, 56548836, 5655...</msg>
<status status="PASS" starttime="20201112 09:45:19.461" endtime="20201112 09:45:19.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.475" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:19.473" endtime="20201112 09:45:19.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.479" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:19.477" endtime="20201112 09:45:19.480"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.466" endtime="20201112 09:45:19.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.490" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:19.488" endtime="20201112 09:45:19.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.494" level="INFO">VALUE: 56408750</msg>
<status status="PASS" starttime="20201112 09:45:19.492" endtime="20201112 09:45:19.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.483" endtime="20201112 09:45:19.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.504" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:19.502" endtime="20201112 09:45:19.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.509" level="INFO">VALUE: [56418837, 56428824, 56438836, 56448836, 56458836, 56468836, 56478836, 56488836, 56498836, 56508836, 56518836, 56528836, 56538836, 56548836, 56558836, 56568836, 56578836, 56588836, 56598836, 56608836, 56618836, 56628836, 56638836, 56648836, 56658836, 56668836, 56678836, 56688836, 56698836, 56708836, 56718836, 56728836, 56738836, 56748836, 56758836, 56768836, 56778836, 56788836, 56798836, 56808836, 56818836, 56828836, 56838836, 56848836, 56858836, 56868836, 56878836, 56888836, 56898836, 56908836, 56918836, 56928836, 56938836, 56948836, 56958836, 56968836, 56978836, 56988836, 56998836, 57008836, 57018836, 57028836, 57038836, 57048836, 57058836, 57068836, 57078836, 57088836, 57098836, 57108836, 57118836, 57128836, 57138836, 57148836, 57158836, 57168836, 57178836, 57188836, 57198836, 57208836, 57218836, 57228836, 57238836, 57248836, 57258836, 57268836, 57278836, 57288836, 57298836, 57308836, 57318836, 57328836, 57338836, 57348836, 57358836, 57368836, 57378836, 57388836, 57398836, 57408836]</msg>
<status status="PASS" starttime="20201112 09:45:19.506" endtime="20201112 09:45:19.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.497" endtime="20201112 09:45:19.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.524" endtime="20201112 09:45:19.816"></status>
</kw>
<msg timestamp="20201112 09:45:19.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028230639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:19.521" endtime="20201112 09:45:19.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018142139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028230639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:19.820" endtime="20201112 09:45:19.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.827" endtime="20201112 09:45:19.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.515" endtime="20201112 09:45:19.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.512" endtime="20201112 09:45:19.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:19.854" level="INFO">${RESULT} = {'source_diff': [0, 0.010088499999999997, 0.009987514, 0.010012986000000001, 0.010000929999999998, 0.010000944999999997, 0.010000861, 0.010000917000000012, 0.010000943999999998, 0.010000888999999999, ...</msg>
<status status="PASS" starttime="20201112 09:45:19.831" endtime="20201112 09:45:19.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.858" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:19.857" endtime="20201112 09:45:19.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.860" level="INFO">VALUE: 0.018142139</msg>
<status status="PASS" starttime="20201112 09:45:19.859" endtime="20201112 09:45:19.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.855" endtime="20201112 09:45:19.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.866" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:19.865" endtime="20201112 09:45:19.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:19.868" level="INFO">VALUE: [0.028230639, 0.038218153, 0.048231139, 0.058232069, 0.068233014, 0.078233875, 0.088234792, 0.098235736, 0.108236625, 0.118237556, 0.128238514, 0.138239389, 0.148240306, 0.158241222, 0.168242208, 0.178243083, 0.188244014, 0.198244903, 0.208245819, 0.21824675, 0.228247667, 0.238248597, 0.248249514, 0.258250444, 0.268251361, 0.278252278, 0.288253208, 0.298254181, 0.308255056, 0.318256014, 0.328256889, 0.338257806, 0.348258792, 0.358259653, 0.368260597, 0.3782615, 0.388262417, 0.398263347, 0.408264319, 0.418265181, 0.428266111, 0.438267028, 0.448267944, 0.458268861, 0.468269792, 0.478270708, 0.488271625, 0.498272542, 0.508273458, 0.518274375, 0.528275319, 0.538276236, 0.548277153, 0.558278056, 0.568278986, 0.578279944, 0.588280847, 0.598281792, 0.608282722, 0.618283583, 0.6282845, 0.638285417, 0.648286361, 0.658287264, 0.668288181, 0.678289111, 0.688290042, 0.698290944, 0.708291861, 0.718292792, 0.72829375, 0.738294681, 0.748295569, 0.758296472, 0.768297389, 0.778298319, 0.788299236, 0.798300181, 0.808301069, 0.818302, 0.828302917, 0.838303833, 0.848304764, 0.858305681, 0.868306597, 0.878307528, 0.888308444, 0.898309361, 0.908310306, 0.918311222, 0.928312139, 0.938313056, 0.948314, 0.958314889, 0.968315875, 0.978316736, 0.988317681, 0.998318583, 1.008319528, 1.018320431] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:19.867" endtime="20201112 09:45:19.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.862" endtime="20201112 09:45:19.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.871" endtime="20201112 09:45:19.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:19.875" endtime="20201112 09:45:19.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.873" endtime="20201112 09:45:19.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.870" endtime="20201112 09:45:19.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.344" endtime="20201112 09:45:19.895"></status>
</kw>
<msg timestamp="20201112 09:45:19.896" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:19.904" endtime="20201112 09:45:21.996"></status>
</kw>
<msg timestamp="20201112 09:45:21.997" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58960545, 'wakeups': [58970632, 58980619, 58990630, 59000631, 59010631...</msg>
<status status="PASS" starttime="20201112 09:45:19.902" endtime="20201112 09:45:21.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.003" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58960545, 'wakeups': [58970632, 58980619, 58990630, 59000631, 59010631...</msg>
<status status="PASS" starttime="20201112 09:45:22.000" endtime="20201112 09:45:22.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.006" endtime="20201112 09:45:22.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.900" endtime="20201112 09:45:22.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.898" endtime="20201112 09:45:22.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:22.017" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [58970632, 58980619, 58990630, 59000631, 59010631, 59020631, 59030631, 59040631, 59050631, 59060631, 59070631, 59080631, 59090631, 59100631, 5911...</msg>
<status status="PASS" starttime="20201112 09:45:22.013" endtime="20201112 09:45:22.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.025" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:22.023" endtime="20201112 09:45:22.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.030" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:22.027" endtime="20201112 09:45:22.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.019" endtime="20201112 09:45:22.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.040" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:22.037" endtime="20201112 09:45:22.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.044" level="INFO">VALUE: 58960545</msg>
<status status="PASS" starttime="20201112 09:45:22.042" endtime="20201112 09:45:22.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.032" endtime="20201112 09:45:22.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.054" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:22.052" endtime="20201112 09:45:22.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.061" level="INFO">VALUE: [58970632, 58980619, 58990630, 59000631, 59010631, 59020631, 59030631, 59040631, 59050631, 59060631, 59070631, 59080631, 59090631, 59100631, 59110631, 59120631, 59130631, 59140631, 59150631, 59160631, 59170631, 59180631, 59190631, 59200631, 59210631, 59220631, 59230631, 59240631, 59250631, 59260631, 59270631, 59280631, 59290631, 59300631, 59310631, 59320631, 59330631, 59340631, 59350631, 59360631, 59370631, 59380631, 59390631, 59400631, 59410631, 59420631, 59430631, 59440631, 59450631, 59460631, 59470631, 59480631, 59490631, 59500631, 59510631, 59520631, 59530631, 59540631, 59550631, 59560631, 59570631, 59580631, 59590631, 59600631, 59610631, 59620631, 59630631, 59640631, 59650631, 59660631, 59670631, 59680631, 59690631, 59700631, 59710631, 59720631, 59730631, 59740631, 59750631, 59760631, 59770631, 59780631, 59790631, 59800631, 59810631, 59820631, 59830631, 59840631, 59850631, 59860631, 59870631, 59880631, 59890631, 59900631, 59910631, 59920631, 59930631, 59940631, 59950631, 59960631]</msg>
<status status="PASS" starttime="20201112 09:45:22.056" endtime="20201112 09:45:22.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.047" endtime="20201112 09:45:22.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.081" endtime="20201112 09:45:22.375"></status>
</kw>
<msg timestamp="20201112 09:45:22.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018102417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028190972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:22.078" endtime="20201112 09:45:22.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018102417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028190972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:22.378" endtime="20201112 09:45:22.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.386" endtime="20201112 09:45:22.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.072" endtime="20201112 09:45:22.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.064" endtime="20201112 09:45:22.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:22.412" level="INFO">${RESULT} = {'source_diff': [0, 0.010088555000000003, 0.009987499999999996, 0.010011972000000001, 0.010001916999999999, 0.010000931000000005, 0.010000915999999999, 0.010000903000000005, 0.01000093099999999, 0.010...</msg>
<status status="PASS" starttime="20201112 09:45:22.389" endtime="20201112 09:45:22.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.417" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:22.416" endtime="20201112 09:45:22.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.419" level="INFO">VALUE: 0.018102417</msg>
<status status="PASS" starttime="20201112 09:45:22.418" endtime="20201112 09:45:22.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.413" endtime="20201112 09:45:22.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.424" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:22.423" endtime="20201112 09:45:22.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.426" level="INFO">VALUE: [0.028190972, 0.038178472, 0.048190444, 0.058192361, 0.068193292, 0.078194208, 0.088195111, 0.098196042, 0.108196944, 0.118197903, 0.128198792, 0.138199708, 0.148200625, 0.158201556, 0.168202514, 0.178203389, 0.188204306, 0.198205236, 0.208206153, 0.218207069, 0.228207986, 0.238208917, 0.248209833, 0.258210806, 0.268211681, 0.278212597, 0.288213528, 0.298214444, 0.308215361, 0.318216278, 0.328217194, 0.338218111, 0.348219056, 0.358219972, 0.368220889, 0.378221806, 0.388222722, 0.398223639, 0.408224569, 0.4182255, 0.428226403, 0.438227319, 0.44822825, 0.458229167, 0.468230083, 0.478231014, 0.488231944, 0.498232847, 0.508233778, 0.518234694, 0.528235611, 0.538236542, 0.548237458, 0.558238417, 0.568239306, 0.57824025, 0.588241153, 0.598242097, 0.608243014, 0.618243917, 0.628244819, 0.638245764, 0.648246681, 0.658247611, 0.668248569, 0.678249431, 0.688250347, 0.698251319, 0.708252222, 0.718253139, 0.728254042, 0.738254958, 0.748255931, 0.758256819, 0.768257736, 0.778258653, 0.788259583, 0.7982605, 0.808261417, 0.818262333, 0.828263264, 0.838264181, 0.848265097, 0.858266028, 0.868266944, 0.878267875, 0.888268792, 0.898269708, 0.908270653, 0.918271556, 0.928272486, 0.938273417, 0.948274333, 0.958275264, 0.968276181, 0.978277083, 0.988278014, 0.998278931, 1.008279847, 1.018280764] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:22.425" endtime="20201112 09:45:22.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.420" endtime="20201112 09:45:22.427"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.429" endtime="20201112 09:45:22.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:22.433" endtime="20201112 09:45:22.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.431" endtime="20201112 09:45:22.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.428" endtime="20201112 09:45:22.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:19.896" endtime="20201112 09:45:22.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.794" endtime="20201112 09:45:22.454"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:14.793" endtime="20201112 09:45:22.454"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:22.457" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.465" endtime="20201112 09:45:24.558"></status>
</kw>
<msg timestamp="20201112 09:45:24.559" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61522363, 'wakeups': [61532465, 61542450, 61552450, 61562450, 61572450...</msg>
<status status="PASS" starttime="20201112 09:45:22.463" endtime="20201112 09:45:24.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.565" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61522363, 'wakeups': [61532465, 61542450, 61552450, 61562450, 61572450...</msg>
<status status="PASS" starttime="20201112 09:45:24.561" endtime="20201112 09:45:24.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.567" endtime="20201112 09:45:24.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.461" endtime="20201112 09:45:24.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.459" endtime="20201112 09:45:24.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:24.578" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [61532465, 61542450, 61552450, 61562450, 61572450, 61582450, 61592450, 61602450, 61612450, 61622450, 61632450, 61642450, 61652450, 61662450, 6167...</msg>
<status status="PASS" starttime="20201112 09:45:24.574" endtime="20201112 09:45:24.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.586" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:24.584" endtime="20201112 09:45:24.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.590" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:24.588" endtime="20201112 09:45:24.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.579" endtime="20201112 09:45:24.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.600" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:24.598" endtime="20201112 09:45:24.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.605" level="INFO">VALUE: 61522363</msg>
<status status="PASS" starttime="20201112 09:45:24.603" endtime="20201112 09:45:24.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.593" endtime="20201112 09:45:24.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.615" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:24.613" endtime="20201112 09:45:24.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.619" level="INFO">VALUE: [61532465, 61542450, 61552450, 61562450, 61572450, 61582450, 61592450, 61602450, 61612450, 61622450, 61632450, 61642450, 61652450, 61662450, 61672450, 61682450, 61692450, 61702450, 61712450, 61722450, 61732450, 61742450, 61752450, 61762450, 61772450, 61782450, 61792450, 61802450, 61812450, 61822450, 61832450, 61842450, 61852450, 61862450, 61872450, 61882450, 61892450, 61902450, 61912450, 61922450, 61932450, 61942450, 61952450, 61962450, 61972450, 61982450, 61992450, 62002450, 62012450, 62022450, 62032450, 62042450, 62052450, 62062450, 62072450, 62082450, 62092450, 62102450, 62112450, 62122450, 62132450, 62142450, 62152450, 62162450, 62172450, 62182450, 62192450, 62202450, 62212450, 62222450, 62232450, 62242450, 62252450, 62262450, 62272450, 62282450, 62292450, 62302450, 62312450, 62322450, 62332450, 62342450, 62352450, 62362450, 62372450, 62382450, 62392450, 62402450, 62412450, 62422450, 62432450, 62442450, 62452450, 62462450, 62472450, 62482450, 62492450, 62502450, 62512450, 62522450]</msg>
<status status="PASS" starttime="20201112 09:45:24.617" endtime="20201112 09:45:24.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.608" endtime="20201112 09:45:24.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.627" endtime="20201112 09:45:24.919"></status>
</kw>
<msg timestamp="20201112 09:45:24.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021281125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031384278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:24.625" endtime="20201112 09:45:24.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021281125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031384278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:24.922" endtime="20201112 09:45:24.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.930" endtime="20201112 09:45:24.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.623" endtime="20201112 09:45:24.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.621" endtime="20201112 09:45:24.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:24.956" level="INFO">${RESULT} = {'source_diff': [0, 0.010103153, 0.009985402999999997, 0.010000944000000005, 0.010000902999999998, 0.010000902999999998, 0.010000930000000005, 0.010000916999999998, 0.010000929999999991, 0.01000091700...</msg>
<status status="PASS" starttime="20201112 09:45:24.934" endtime="20201112 09:45:24.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.961" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:24.960" endtime="20201112 09:45:24.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.963" level="INFO">VALUE: 0.021281125</msg>
<status status="PASS" starttime="20201112 09:45:24.962" endtime="20201112 09:45:24.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.957" endtime="20201112 09:45:24.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.968" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:24.967" endtime="20201112 09:45:24.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:24.970" level="INFO">VALUE: [0.031384278, 0.041369681, 0.051370625, 0.061371528, 0.071372431, 0.081373361, 0.091374278, 0.101375208, 0.111376125, 0.121377056, 0.131377958, 0.141378889, 0.151379792, 0.161380736, 0.171381639, 0.181382583, 0.1913835, 0.201384417, 0.211385333, 0.221386264, 0.231387194, 0.241388125, 0.251389028, 0.261389958, 0.271390861, 0.281391792, 0.291392708, 0.301393639, 0.311394556, 0.321395486, 0.331396403, 0.341397319, 0.35139825, 0.361399181, 0.371400069, 0.381401, 0.391401986, 0.401402847, 0.41140375, 0.421404694, 0.431405597, 0.441406556, 0.451407431, 0.461408361, 0.471409264, 0.481410194, 0.491411111, 0.501412042, 0.511412944, 0.521413875, 0.531414792, 0.541415764, 0.551416639, 0.561417583, 0.5714185, 0.581419403, 0.591420319, 0.601421236, 0.611422167, 0.621423083, 0.631423986, 0.641424944, 0.651425861, 0.661426764, 0.671427667, 0.681428611, 0.691429542, 0.701430458, 0.711431361, 0.721432306, 0.731433208, 0.741434139, 0.751435042, 0.761435986, 0.771436875, 0.781437819, 0.791438722, 0.801439653, 0.811440583, 0.8214415, 0.831442403, 0.841443347, 0.851444264, 0.861445236, 0.871446167, 0.881447042, 0.891447931, 0.901448875, 0.911449778, 0.921450708, 0.931451625, 0.941452583, 0.951453528, 0.961454403, 0.971455333, 0.981456236, 0.991457153, 1.001458097, 1.011459, 1.021459931] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:24.969" endtime="20201112 09:45:24.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.964" endtime="20201112 09:45:24.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:24.973" endtime="20201112 09:45:24.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:24.976" endtime="20201112 09:45:24.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.975" endtime="20201112 09:45:24.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.972" endtime="20201112 09:45:24.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.458" endtime="20201112 09:45:24.997"></status>
</kw>
<msg timestamp="20201112 09:45:24.997" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.006" endtime="20201112 09:45:27.100"></status>
</kw>
<msg timestamp="20201112 09:45:27.101" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64063328, 'wakeups': [64073430, 64083416, 64093415, 64103415, 64113415...</msg>
<status status="PASS" starttime="20201112 09:45:25.004" endtime="20201112 09:45:27.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.107" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64063328, 'wakeups': [64073430, 64083416, 64093415, 64103415, 64113415...</msg>
<status status="PASS" starttime="20201112 09:45:27.103" endtime="20201112 09:45:27.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.109" endtime="20201112 09:45:27.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.001" endtime="20201112 09:45:27.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.999" endtime="20201112 09:45:27.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:27.120" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [64073430, 64083416, 64093415, 64103415, 64113415, 64123415, 64133415, 64143415, 64153415, 64163415, 64173415, 64183415, 64193415, 64203415, 6421...</msg>
<status status="PASS" starttime="20201112 09:45:27.116" endtime="20201112 09:45:27.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.133" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:27.131" endtime="20201112 09:45:27.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.138" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:27.136" endtime="20201112 09:45:27.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.126" endtime="20201112 09:45:27.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.148" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:27.146" endtime="20201112 09:45:27.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.152" level="INFO">VALUE: 64063328</msg>
<status status="PASS" starttime="20201112 09:45:27.150" endtime="20201112 09:45:27.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.141" endtime="20201112 09:45:27.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.162" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:27.160" endtime="20201112 09:45:27.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.164" level="INFO">VALUE: [64073430, 64083416, 64093415, 64103415, 64113415, 64123415, 64133415, 64143415, 64153415, 64163415, 64173415, 64183415, 64193415, 64203415, 64213415, 64223415, 64233415, 64243415, 64253415, 64263415, 64273415, 64283415, 64293415, 64303415, 64313415, 64323415, 64333415, 64343415, 64353415, 64363415, 64373415, 64383415, 64393415, 64403415, 64413415, 64423415, 64433415, 64443415, 64453415, 64463415, 64473415, 64483415, 64493415, 64503415, 64513415, 64523415, 64533415, 64543415, 64553415, 64563415, 64573415, 64583415, 64593415, 64603415, 64613415, 64623415, 64633415, 64643415, 64653415, 64663415, 64673415, 64683415, 64693415, 64703415, 64713415, 64723415, 64733415, 64743415, 64753415, 64763415, 64773415, 64783415, 64793415, 64803415, 64813415, 64823415, 64833415, 64843415, 64853415, 64863415, 64873415, 64883415, 64893415, 64903415, 64913415, 64923415, 64933415, 64943415, 64953415, 64963415, 64973415, 64983415, 64993415, 65003415, 65013415, 65023415, 65033415, 65043415, 65053415, 65063415]</msg>
<status status="PASS" starttime="20201112 09:45:27.163" endtime="20201112 09:45:27.164"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.155" endtime="20201112 09:45:27.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.171" endtime="20201112 09:45:27.461"></status>
</kw>
<msg timestamp="20201112 09:45:27.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019199972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029303625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:27.170" endtime="20201112 09:45:27.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019199972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029303625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:27.465" endtime="20201112 09:45:27.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.473" endtime="20201112 09:45:27.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.167" endtime="20201112 09:45:27.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.166" endtime="20201112 09:45:27.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:27.500" level="INFO">${RESULT} = {'source_diff': [0, 0.010103653, 0.009986416999999997, 0.009999916000000005, 0.010000930999999998, 0.010000930000000005, 0.010000888999999999, 0.010000944999999997, 0.010000903000000005, 0.01000091599...</msg>
<status status="PASS" starttime="20201112 09:45:27.476" endtime="20201112 09:45:27.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.505" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:27.504" endtime="20201112 09:45:27.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.507" level="INFO">VALUE: 0.019199972</msg>
<status status="PASS" starttime="20201112 09:45:27.506" endtime="20201112 09:45:27.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.501" endtime="20201112 09:45:27.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.512" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:27.511" endtime="20201112 09:45:27.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.515" level="INFO">VALUE: [0.029303625, 0.039290042, 0.049289958, 0.059290889, 0.069291819, 0.079292708, 0.089293653, 0.099294556, 0.109295472, 0.119296417, 0.129297319, 0.139298236, 0.149299167, 0.159300083, 0.169301, 0.179301903, 0.189302833, 0.19930375, 0.209304681, 0.219305583, 0.229306556, 0.239307431, 0.249308347, 0.259309347, 0.269310194, 0.279311097, 0.289312042, 0.299313014, 0.309313875, 0.319314778, 0.329315722, 0.339316625, 0.349317569, 0.359318472, 0.369319403, 0.379320319, 0.389321236, 0.399322153, 0.409323083, 0.419323986, 0.429324917, 0.439325847, 0.449326764, 0.459327667, 0.469328611, 0.479329514, 0.489330444, 0.499331417, 0.509332306, 0.519333208, 0.529334139, 0.539335042, 0.549335972, 0.559336875, 0.569337806, 0.579338722, 0.589339667, 0.599340611, 0.6093415, 0.619342417, 0.629343333, 0.63934425, 0.649345194, 0.659346097, 0.669347042, 0.679347944, 0.689348889, 0.699349778, 0.709350708, 0.719351611, 0.729352556, 0.739353458, 0.749354389, 0.759355306, 0.769356236, 0.779357139, 0.789358139, 0.799359, 0.809359917, 0.819360833, 0.829361764, 0.839362667, 0.849363625, 0.859364514, 0.869365444, 0.879366361, 0.889367306, 0.899368194, 0.909369153, 0.919370083, 0.929370972, 0.939371889, 0.949372833, 0.959373722, 0.969374694, 0.979375583, 0.9893765, 0.999377444, 1.009378347, 1.01937925] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:27.513" endtime="20201112 09:45:27.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.508" endtime="20201112 09:45:27.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.518" endtime="20201112 09:45:27.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:27.521" endtime="20201112 09:45:27.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.520" endtime="20201112 09:45:27.541"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.516" endtime="20201112 09:45:27.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:24.998" endtime="20201112 09:45:27.542"></status>
</kw>
<msg timestamp="20201112 09:45:27.542" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.550" endtime="20201112 09:45:29.643"></status>
</kw>
<msg timestamp="20201112 09:45:29.644" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66607089, 'wakeups': [66617191, 66627177, 66637176, 66647176, 66657176...</msg>
<status status="PASS" starttime="20201112 09:45:27.549" endtime="20201112 09:45:29.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.650" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66607089, 'wakeups': [66617191, 66627177, 66637176, 66647176, 66657176...</msg>
<status status="PASS" starttime="20201112 09:45:29.646" endtime="20201112 09:45:29.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.652" endtime="20201112 09:45:29.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.546" endtime="20201112 09:45:29.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.544" endtime="20201112 09:45:29.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:29.663" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [66617191, 66627177, 66637176, 66647176, 66657176, 66667176, 66677176, 66687176, 66697176, 66707176, 66717176, 66727176, 66737176, 66747176, 6675...</msg>
<status status="PASS" starttime="20201112 09:45:29.659" endtime="20201112 09:45:29.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.671" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:29.669" endtime="20201112 09:45:29.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.675" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:29.673" endtime="20201112 09:45:29.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.664" endtime="20201112 09:45:29.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.685" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:29.683" endtime="20201112 09:45:29.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.692" level="INFO">VALUE: 66607089</msg>
<status status="PASS" starttime="20201112 09:45:29.688" endtime="20201112 09:45:29.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.678" endtime="20201112 09:45:29.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.702" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:29.700" endtime="20201112 09:45:29.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:29.707" level="INFO">VALUE: [66617191, 66627177, 66637176, 66647176, 66657176, 66667176, 66677176, 66687176, 66697176, 66707176, 66717176, 66727176, 66737176, 66747176, 66757176, 66767176, 66777176, 66787176, 66797176, 66807176, 66817176, 66827176, 66837176, 66847176, 66857176, 66867176, 66877176, 66887176, 66897176, 66907176, 66917176, 66927176, 66937176, 66947176, 66957176, 66967176, 66977176, 66987176, 66997176, 67007176, 67017176, 67027176, 67037176, 67047176, 67057176, 67067176, 67077176, 67087176, 67097176, 67107176, 67117176, 67127176, 67137176, 67147176, 67157176, 67167176, 67177176, 67187176, 67197176, 67207176, 67217176, 67227176, 67237176, 67247176, 67257176, 67267176, 67277176, 67287176, 67297176, 67307176, 67317176, 67327176, 67337176, 67347176, 67357176, 67367176, 67377176, 67387176, 67397176, 67407176, 67417176, 67427176, 67437176, 67447176, 67457176, 67467176, 67477176, 67487176, 67497176, 67507176, 67517176, 67527176, 67537176, 67547176, 67557176, 67567176, 67577176, 67587176, 67597176, 67607176]</msg>
<status status="PASS" starttime="20201112 09:45:29.705" endtime="20201112 09:45:29.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.695" endtime="20201112 09:45:29.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:29.723" endtime="20201112 09:45:30.018"></status>
</kw>
<msg timestamp="20201112 09:45:30.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018145569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028249014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:29.719" endtime="20201112 09:45:30.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018145569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028249014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:30.021" endtime="20201112 09:45:30.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.029" endtime="20201112 09:45:30.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.714" endtime="20201112 09:45:30.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:29.711" endtime="20201112 09:45:30.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:30.055" level="INFO">${RESULT} = {'source_diff': [0, 0.010103444999999999, 0.009986430000000001, 0.009999888999999998, 0.010000902999999998, 0.010000944999999997, 0.010000902000000006, 0.010000944999999997, 0.010000958000000004, 0.01...</msg>
<status status="PASS" starttime="20201112 09:45:30.032" endtime="20201112 09:45:30.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.059" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:30.058" endtime="20201112 09:45:30.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.061" level="INFO">VALUE: 0.018145569</msg>
<status status="PASS" starttime="20201112 09:45:30.060" endtime="20201112 09:45:30.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.056" endtime="20201112 09:45:30.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.067" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:30.066" endtime="20201112 09:45:30.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.070" level="INFO">VALUE: [0.028249014, 0.038235444, 0.048235333, 0.058236236, 0.068237181, 0.078238083, 0.088239028, 0.098239986, 0.108240847, 0.118241764, 0.128242694, 0.138243597, 0.148244542, 0.158245458, 0.168246375, 0.178247278, 0.188248208, 0.198249194, 0.208250097, 0.218250958, 0.228251889, 0.238252806, 0.248253736, 0.258254639, 0.268255569, 0.278256486, 0.288257431, 0.298258333, 0.308259264, 0.318260181, 0.328261097, 0.338262014, 0.348262944, 0.358263875, 0.368264792, 0.378265694, 0.388266653, 0.398267542, 0.408268542, 0.418269431, 0.428270319, 0.438271222, 0.448272167, 0.458273083, 0.468274014, 0.478274917, 0.488275847, 0.498276778, 0.508277694, 0.518278597, 0.528279542, 0.538280514, 0.548281403, 0.558282292, 0.568283222, 0.578284125, 0.588285097, 0.598285972, 0.608286903, 0.618287819, 0.628288736, 0.638289667, 0.648290583, 0.658291486, 0.668292417, 0.678293347, 0.688294264, 0.698295167, 0.708296097, 0.718297042, 0.728297944, 0.738298847, 0.748299778, 0.758300681, 0.768301611, 0.778302528, 0.788303458, 0.798304389, 0.808305292, 0.818306236, 0.828307222, 0.838308042, 0.848308986, 0.858309889, 0.868310819, 0.878311722, 0.888312653, 0.898313569, 0.908314514, 0.918315403, 0.928316333, 0.938317264, 0.948318194, 0.958319083, 0.968320028, 0.978320931, 0.988321875, 0.998322778, 1.008323722, 1.018324611] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:30.068" endtime="20201112 09:45:30.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.063" endtime="20201112 09:45:30.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.073" endtime="20201112 09:45:30.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:30.076" endtime="20201112 09:45:30.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.074" endtime="20201112 09:45:30.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.071" endtime="20201112 09:45:30.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:27.543" endtime="20201112 09:45:30.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.456" endtime="20201112 09:45:30.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.455" endtime="20201112 09:45:30.097"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:30.100" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.108" endtime="20201112 09:45:32.201"></status>
</kw>
<msg timestamp="20201112 09:45:32.202" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69164962, 'wakeups': [69175080, 69185066, 69195078, 69205077, 692150...</msg>
<status status="PASS" starttime="20201112 09:45:30.106" endtime="20201112 09:45:32.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.208" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69164962, 'wakeups': [69175080, 69185066, 69195078, 69205077, 692150...</msg>
<status status="PASS" starttime="20201112 09:45:32.204" endtime="20201112 09:45:32.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.210" endtime="20201112 09:45:32.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.104" endtime="20201112 09:45:32.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.102" endtime="20201112 09:45:32.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:32.221" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [69175080, 69185066, 69195078, 69205077, 69215077, 69225078, 69235077, 69245077, 69255078, 69265077, 69275077, 69285078, 69295077, 69305077, 693...</msg>
<status status="PASS" starttime="20201112 09:45:32.217" endtime="20201112 09:45:32.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.229" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:32.227" endtime="20201112 09:45:32.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.233" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:32.231" endtime="20201112 09:45:32.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.222" endtime="20201112 09:45:32.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.243" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:32.241" endtime="20201112 09:45:32.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.248" level="INFO">VALUE: 69164962</msg>
<status status="PASS" starttime="20201112 09:45:32.246" endtime="20201112 09:45:32.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.236" endtime="20201112 09:45:32.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.258" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:32.256" endtime="20201112 09:45:32.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.262" level="INFO">VALUE: [69175080, 69185066, 69195078, 69205077, 69215077, 69225078, 69235077, 69245077, 69255078, 69265077, 69275077, 69285078, 69295077, 69305077, 69315078, 69325077, 69335077, 69345078, 69355077, 69365077, 69375078, 69385077, 69395077, 69405078, 69415077, 69425077, 69435078, 69445077, 69455077, 69465078, 69475077, 69485077, 69495078, 69505077, 69515077, 69525078, 69535077, 69545077, 69555078, 69565077, 69575077, 69585078, 69595077, 69605077, 69615078, 69625077, 69635077, 69645078, 69655077, 69665077, 69675078, 69685077, 69695077, 69705078, 69715077, 69725077, 69735078, 69745077, 69755077, 69765078, 69775077, 69785077, 69795078, 69805077, 69815077, 69825078, 69835077, 69845077, 69855078, 69865077, 69875077, 69885078, 69895077, 69905077, 69915078, 69925077, 69935077, 69945078, 69955077, 69965077, 69975078, 69985077, 69995077, 70005078, 70015077, 70025077, 70035078, 70045077, 70055077, 70065078, 70075077, 70085077, 70095078, 70105077, 70115077, 70125078, 70135077, 70145077, 70155078, 70165077]</msg>
<status status="PASS" starttime="20201112 09:45:32.260" endtime="20201112 09:45:32.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.251" endtime="20201112 09:45:32.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.280" endtime="20201112 09:45:32.572"></status>
</kw>
<msg timestamp="20201112 09:45:32.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021346028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031465458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:32.273" endtime="20201112 09:45:32.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021346028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031465458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:32.575" endtime="20201112 09:45:32.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.583" endtime="20201112 09:45:32.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.269" endtime="20201112 09:45:32.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.265" endtime="20201112 09:45:32.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:32.609" level="INFO">${RESULT} = {'source_diff': [0, 0.010119430000000002, 0.009986513999999995, 0.010012861000000005, 0.010000152999999998, 0.010000680999999997, 0.010001916, 0.010000180999999997, 0.010000653000000012, 0.01000192999...</msg>
<status status="PASS" starttime="20201112 09:45:32.586" endtime="20201112 09:45:32.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.614" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:32.613" endtime="20201112 09:45:32.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.616" level="INFO">VALUE: 0.021346028</msg>
<status status="PASS" starttime="20201112 09:45:32.615" endtime="20201112 09:45:32.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.610" endtime="20201112 09:45:32.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.621" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:32.620" endtime="20201112 09:45:32.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:32.623" level="INFO">VALUE: [0.031465458, 0.041451972, 0.051464833, 0.061464986, 0.071465667, 0.081467583, 0.091467764, 0.101468417, 0.111470347, 0.1214705, 0.131471181, 0.141473111, 0.15147325, 0.161473958, 0.171475861, 0.181476028, 0.191476708, 0.201478625, 0.211478792, 0.221479472, 0.231481389, 0.241481528, 0.251482222, 0.261484139, 0.271484306, 0.281484986, 0.291486917, 0.301487069, 0.31148775, 0.321489708, 0.331489819, 0.341490528, 0.351492431, 0.361492583, 0.371493278, 0.381495208, 0.391495333, 0.401496042, 0.411497972, 0.421498111, 0.431498806, 0.441500722, 0.451500861, 0.461501597, 0.471503486, 0.481503694, 0.491504319, 0.501506292, 0.511506417, 0.521507083, 0.531509014, 0.541509167, 0.551509847, 0.561511792, 0.571511917, 0.581512611, 0.591514625, 0.601514681, 0.611515375, 0.621517319, 0.631517444, 0.641518153, 0.651520083, 0.661520222, 0.671520903, 0.681522833, 0.691522972, 0.701523694, 0.711525639, 0.721525736, 0.731526444, 0.741528361, 0.7515285, 0.761529208, 0.771531139, 0.781531278, 0.791531972, 0.801533889, 0.811534042, 0.821534736, 0.831536653, 0.841536806, 0.8515375, 0.861539417, 0.871539569, 0.881540264, 0.891542194, 0.901542347, 0.911543028, 0.921544972, 0.931545097, 0.941545792, 0.951547708, 0.961547861, 0.971548556, 0.981550472, 0.991550625, 1.001551333, 1.011553306, 1.021553389] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:32.622" endtime="20201112 09:45:32.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.617" endtime="20201112 09:45:32.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.626" endtime="20201112 09:45:32.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:32.630" endtime="20201112 09:45:32.649"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.628" endtime="20201112 09:45:32.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.625" endtime="20201112 09:45:32.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.101" endtime="20201112 09:45:32.651"></status>
</kw>
<msg timestamp="20201112 09:45:32.651" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:32.660" endtime="20201112 09:45:34.752"></status>
</kw>
<msg timestamp="20201112 09:45:34.754" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71716671, 'wakeups': [71726791, 71736775, 71746787, 71756786, 717667...</msg>
<status status="PASS" starttime="20201112 09:45:32.657" endtime="20201112 09:45:34.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.760" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71716671, 'wakeups': [71726791, 71736775, 71746787, 71756786, 717667...</msg>
<status status="PASS" starttime="20201112 09:45:34.756" endtime="20201112 09:45:34.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.763" endtime="20201112 09:45:34.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.655" endtime="20201112 09:45:34.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.653" endtime="20201112 09:45:34.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:34.773" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [71726791, 71736775, 71746787, 71756786, 71766786, 71776787, 71786786, 71796786, 71806787, 71816786, 71826786, 71836787, 71846786, 71856786, 718...</msg>
<status status="PASS" starttime="20201112 09:45:34.770" endtime="20201112 09:45:34.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.782" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:34.780" endtime="20201112 09:45:34.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.786" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:34.784" endtime="20201112 09:45:34.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.775" endtime="20201112 09:45:34.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.796" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:34.794" endtime="20201112 09:45:34.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.800" level="INFO">VALUE: 71716671</msg>
<status status="PASS" starttime="20201112 09:45:34.798" endtime="20201112 09:45:34.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.789" endtime="20201112 09:45:34.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.810" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:34.808" endtime="20201112 09:45:34.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:34.815" level="INFO">VALUE: [71726791, 71736775, 71746787, 71756786, 71766786, 71776787, 71786786, 71796786, 71806787, 71816786, 71826786, 71836787, 71846786, 71856786, 71866787, 71876786, 71886786, 71896787, 71906786, 71916786, 71926787, 71936786, 71946786, 71956787, 71966786, 71976786, 71986787, 71996786, 72006786, 72016787, 72026786, 72036786, 72046787, 72056786, 72066786, 72076787, 72086786, 72096786, 72106787, 72116786, 72126786, 72136787, 72146786, 72156786, 72166787, 72176786, 72186786, 72196787, 72206786, 72216786, 72226787, 72236786, 72246786, 72256787, 72266786, 72276786, 72286787, 72296786, 72306786, 72316787, 72326786, 72336786, 72346787, 72356786, 72366786, 72376787, 72386786, 72396786, 72406787, 72416786, 72426786, 72436787, 72446786, 72456786, 72466787, 72476786, 72486786, 72496787, 72506786, 72516786, 72526787, 72536786, 72546786, 72556787, 72566786, 72576786, 72586787, 72596786, 72606786, 72616787, 72626786, 72636786, 72646787, 72656786, 72666786, 72676787, 72686786, 72696786, 72706787, 72716786]</msg>
<status status="PASS" starttime="20201112 09:45:34.813" endtime="20201112 09:45:34.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.803" endtime="20201112 09:45:34.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:34.830" endtime="20201112 09:45:35.125"></status>
</kw>
<msg timestamp="20201112 09:45:35.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019053889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029174778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:34.827" endtime="20201112 09:45:35.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019053889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029174778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:35.129" endtime="20201112 09:45:35.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.136" endtime="20201112 09:45:35.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.822" endtime="20201112 09:45:35.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:34.818" endtime="20201112 09:45:35.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:35.163" level="INFO">${RESULT} = {'source_diff': [0, 0.010120888999999997, 0.009984472000000001, 0.010012903000000004, 0.010000152999999998, 0.010000708000000004, 0.010001889, 0.010000152999999998, 0.010000679999999998, 0.01000195800...</msg>
<status status="PASS" starttime="20201112 09:45:35.140" endtime="20201112 09:45:35.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.168" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:35.167" endtime="20201112 09:45:35.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.170" level="INFO">VALUE: 0.019053889</msg>
<status status="PASS" starttime="20201112 09:45:35.169" endtime="20201112 09:45:35.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.164" endtime="20201112 09:45:35.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.175" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:35.174" endtime="20201112 09:45:35.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.177" level="INFO">VALUE: [0.029174778, 0.03915925, 0.049172153, 0.059172306, 0.069173014, 0.079174903, 0.089175056, 0.099175736, 0.109177694, 0.119177806, 0.1291785, 0.139180431, 0.149180569, 0.159181333, 0.169183181, 0.179183333, 0.189184042, 0.199185944, 0.209186083, 0.219186806, 0.229188708, 0.239188861, 0.249189556, 0.259191486, 0.269191681, 0.279192306, 0.289194222, 0.299194403, 0.309195125, 0.319196986, 0.329197139, 0.339197833, 0.34919975, 0.359199903, 0.369200597, 0.379202514, 0.389202667, 0.399203389, 0.409205292, 0.419205431, 0.429206139, 0.439208042, 0.449208194, 0.459208944, 0.469210806, 0.479210972, 0.489211653, 0.499213583, 0.509213722, 0.519214417, 0.529216361, 0.539216486, 0.549217222, 0.559219097, 0.56921925, 0.579219944, 0.589221861, 0.599222014, 0.609222708, 0.619224625, 0.629224792, 0.639225472, 0.649227403, 0.659227556, 0.669228292, 0.67923025, 0.689230306, 0.699231, 0.709232931, 0.719233069, 0.729233778, 0.739235694, 0.749235833, 0.759236542, 0.769238458, 0.779238625, 0.789239319, 0.799241236, 0.809241389, 0.819242069, 0.829243986, 0.839244139, 0.849244833, 0.85924675, 0.869246917, 0.879247597, 0.889249514, 0.899249667, 0.909250375, 0.919252306, 0.929252444, 0.939253125, 0.949255056, 0.959255208, 0.969255903, 0.979257819, 0.989258042, 0.999258653, 1.009260583, 1.019260722] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:35.176" endtime="20201112 09:45:35.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.171" endtime="20201112 09:45:35.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.180" endtime="20201112 09:45:35.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:35.184" endtime="20201112 09:45:35.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.182" endtime="20201112 09:45:35.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.179" endtime="20201112 09:45:35.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:32.651" endtime="20201112 09:45:35.204"></status>
</kw>
<msg timestamp="20201112 09:45:35.204" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.212" endtime="20201112 09:45:37.305"></status>
</kw>
<msg timestamp="20201112 09:45:37.307" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74269417, 'wakeups': [74279536, 74289520, 74299532, 74309533, 743195...</msg>
<status status="PASS" starttime="20201112 09:45:35.211" endtime="20201112 09:45:37.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.312" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74269417, 'wakeups': [74279536, 74289520, 74299532, 74309533, 743195...</msg>
<status status="PASS" starttime="20201112 09:45:37.309" endtime="20201112 09:45:37.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.315" endtime="20201112 09:45:37.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.208" endtime="20201112 09:45:37.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.206" endtime="20201112 09:45:37.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:37.325" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [74279536, 74289520, 74299532, 74309533, 74319532, 74329532, 74339533, 74349532, 74359532, 74369533, 74379532, 74389532, 74399533, 74409532, 744...</msg>
<status status="PASS" starttime="20201112 09:45:37.322" endtime="20201112 09:45:37.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.334" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:37.332" endtime="20201112 09:45:37.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.338" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:37.336" endtime="20201112 09:45:37.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.327" endtime="20201112 09:45:37.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.356" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:37.354" endtime="20201112 09:45:37.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.362" level="INFO">VALUE: 74269417</msg>
<status status="PASS" starttime="20201112 09:45:37.358" endtime="20201112 09:45:37.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.349" endtime="20201112 09:45:37.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.373" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:37.370" endtime="20201112 09:45:37.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.377" level="INFO">VALUE: [74279536, 74289520, 74299532, 74309533, 74319532, 74329532, 74339533, 74349532, 74359532, 74369533, 74379532, 74389532, 74399533, 74409532, 74419532, 74429533, 74439532, 74449532, 74459533, 74469532, 74479532, 74489533, 74499532, 74509532, 74519533, 74529532, 74539532, 74549533, 74559532, 74569532, 74579533, 74589532, 74599532, 74609533, 74619532, 74629532, 74639533, 74649532, 74659532, 74669533, 74679532, 74689532, 74699533, 74709532, 74719532, 74729533, 74739532, 74749532, 74759533, 74769532, 74779532, 74789533, 74799532, 74809532, 74819533, 74829532, 74839532, 74849533, 74859532, 74869532, 74879533, 74889532, 74899532, 74909533, 74919532, 74929532, 74939533, 74949532, 74959532, 74969533, 74979532, 74989532, 74999533, 75009532, 75019532, 75029533, 75039532, 75049532, 75059533, 75069532, 75079532, 75089533, 75099532, 75109532, 75119533, 75129532, 75139532, 75149533, 75159532, 75169532, 75179533, 75189532, 75199532, 75209533, 75219532, 75229532, 75239533, 75249532, 75259532, 75269533]</msg>
<status status="PASS" starttime="20201112 09:45:37.375" endtime="20201112 09:45:37.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.365" endtime="20201112 09:45:37.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.393" endtime="20201112 09:45:37.685"></status>
</kw>
<msg timestamp="20201112 09:45:37.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018195375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028315167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:37.389" endtime="20201112 09:45:37.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018195375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028315167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:37.689" endtime="20201112 09:45:37.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.696" endtime="20201112 09:45:37.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.384" endtime="20201112 09:45:37.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.380" endtime="20201112 09:45:37.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:37.722" level="INFO">${RESULT} = {'source_diff': [0, 0.010119791999999999, 0.009984721999999998, 0.010012653000000003, 0.010001916, 0.010000167000000004, 0.01000069399999999, 0.010001903000000006, 0.010000139000000005, 0.010000735999...</msg>
<status status="PASS" starttime="20201112 09:45:37.699" endtime="20201112 09:45:37.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.727" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:37.726" endtime="20201112 09:45:37.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.729" level="INFO">VALUE: 0.018195375</msg>
<status status="PASS" starttime="20201112 09:45:37.728" endtime="20201112 09:45:37.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.723" endtime="20201112 09:45:37.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.734" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:37.733" endtime="20201112 09:45:37.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:37.737" level="INFO">VALUE: [0.028315167, 0.038299889, 0.048312542, 0.058314458, 0.068314625, 0.078315319, 0.088317222, 0.098317361, 0.108318097, 0.118319986, 0.128320181, 0.138320861, 0.148322736, 0.158322903, 0.168323625, 0.178325514, 0.188325653, 0.198326361, 0.208328264, 0.218328403, 0.228329111, 0.238331028, 0.248331167, 0.258331875, 0.268333778, 0.278333931, 0.288334625, 0.298336569, 0.308336694, 0.318337389, 0.328339319, 0.338339458, 0.348340139, 0.358342069, 0.368342208, 0.378342903, 0.388344917, 0.398345, 0.408345681, 0.418347597, 0.428347736, 0.438348472, 0.448350347, 0.4583505, 0.468351222, 0.478353111, 0.488353264, 0.498353958, 0.508355875, 0.518356028, 0.528356722, 0.538358639, 0.548358806, 0.558359486, 0.568361403, 0.578361569, 0.58836225, 0.598364167, 0.608364319, 0.618365042, 0.628366931, 0.638367097, 0.648367778, 0.658369708, 0.668369861, 0.678370542, 0.688372472, 0.698372625, 0.708373306, 0.718375222, 0.728375375, 0.738376069, 0.748377986, 0.758378139, 0.768378833, 0.77838075, 0.788380903, 0.798381611, 0.808383514, 0.818383681, 0.828384361, 0.838386292, 0.848386431, 0.858387125, 0.868389056, 0.878389236, 0.888389958, 0.898391847, 0.908391958, 0.918392653, 0.928394597, 0.938394736, 0.948395417, 0.958397403, 0.968397486, 0.978398181, 0.988400097, 0.998400264, 1.008400944, 1.018402875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:37.736" endtime="20201112 09:45:37.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.730" endtime="20201112 09:45:37.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:37.741" endtime="20201112 09:45:37.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:37.744" endtime="20201112 09:45:37.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.743" endtime="20201112 09:45:37.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:37.739" endtime="20201112 09:45:37.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.205" endtime="20201112 09:45:37.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.099" endtime="20201112 09:45:37.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.098" endtime="20201112 09:45:37.765"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.212" endtime="20201112 09:45:37.765"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 09:44:21.115" endtime="20201112 09:45:37.766" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:44:19.846" endtime="20201112 09:45:37.769"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 09:42:36.564" endtime="20201112 09:45:37.786"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
