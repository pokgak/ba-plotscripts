<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:41:27.743" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:28.314" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:28.323" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:29.348" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:28.313" endtime="20201112 12:41:29.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.351" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:29.350" endtime="20201112 12:41:29.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:28.311" endtime="20201112 12:41:29.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:29.354" endtime="20201112 12:41:29.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.353" endtime="20201112 12:41:29.539"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:29.552" endtime="20201112 12:41:29.572"></status>
</kw>
<msg timestamp="20201112 12:41:29.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:29.551" endtime="20201112 12:41:29.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.575" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:29.574" endtime="20201112 12:41:29.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.579" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:29.577" endtime="20201112 12:41:29.579"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:29.548" endtime="20201112 12:41:29.580"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:29.545" endtime="20201112 12:41:29.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.544" endtime="20201112 12:41:29.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:29.584" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:29.584" endtime="20201112 12:41:29.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.582" endtime="20201112 12:41:29.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.543" endtime="20201112 12:41:29.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.543" endtime="20201112 12:41:29.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:29.586" endtime="20201112 12:41:29.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.541" endtime="20201112 12:41:29.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:29.589" endtime="20201112 12:41:29.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.540" endtime="20201112 12:41:29.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:28.310" endtime="20201112 12:41:29.591"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:29.598" endtime="20201112 12:41:29.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.596" endtime="20201112 12:41:29.618"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:29.632" endtime="20201112 12:41:29.648"></status>
</kw>
<msg timestamp="20201112 12:41:29.649" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:29.631" endtime="20201112 12:41:29.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.651" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:29.650" endtime="20201112 12:41:29.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.654" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:29.652" endtime="20201112 12:41:29.655"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:29.628" endtime="20201112 12:41:29.655"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:29.626" endtime="20201112 12:41:29.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.624" endtime="20201112 12:41:29.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:29.660" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:29.659" endtime="20201112 12:41:29.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.657" endtime="20201112 12:41:29.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.623" endtime="20201112 12:41:29.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.623" endtime="20201112 12:41:29.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:29.662" endtime="20201112 12:41:29.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.620" endtime="20201112 12:41:29.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.619" endtime="20201112 12:41:29.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.595" endtime="20201112 12:41:29.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:29.672" endtime="20201112 12:41:29.685"></status>
</kw>
<msg timestamp="20201112 12:41:29.685" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:29.670" endtime="20201112 12:41:29.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.688" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:29.686" endtime="20201112 12:41:29.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:29.689" endtime="20201112 12:41:29.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.667" endtime="20201112 12:41:29.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.665" endtime="20201112 12:41:29.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.696" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:41:29.695" endtime="20201112 12:41:29.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.698" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:41:29.697" endtime="20201112 12:41:29.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.692" endtime="20201112 12:41:29.699"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:29.592" endtime="20201112 12:41:29.700" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:27.856" endtime="20201112 12:41:29.702"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:29.756" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:29.764" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:30.792" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:29.754" endtime="20201112 12:41:30.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:30.796" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:30.794" endtime="20201112 12:41:30.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.753" endtime="20201112 12:41:30.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:30.799" endtime="20201112 12:41:31.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:30.797" endtime="20201112 12:41:31.079"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.092" endtime="20201112 12:41:31.113"></status>
</kw>
<msg timestamp="20201112 12:41:31.113" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.090" endtime="20201112 12:41:31.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.116" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.114" endtime="20201112 12:41:31.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.119" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:31.117" endtime="20201112 12:41:31.119"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:31.087" endtime="20201112 12:41:31.120"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:31.085" endtime="20201112 12:41:31.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.084" endtime="20201112 12:41:31.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:31.124" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:31.124" endtime="20201112 12:41:31.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.121" endtime="20201112 12:41:31.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.083" endtime="20201112 12:41:31.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.083" endtime="20201112 12:41:31.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.126" endtime="20201112 12:41:31.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.081" endtime="20201112 12:41:31.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.129" endtime="20201112 12:41:31.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.080" endtime="20201112 12:41:31.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:29.752" endtime="20201112 12:41:31.131"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:31.137" endtime="20201112 12:41:31.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.135" endtime="20201112 12:41:31.157"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.170" endtime="20201112 12:41:31.186"></status>
</kw>
<msg timestamp="20201112 12:41:31.187" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.168" endtime="20201112 12:41:31.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.188" endtime="20201112 12:41:31.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.193" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:31.191" endtime="20201112 12:41:31.193"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:31.166" endtime="20201112 12:41:31.194"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:31.163" endtime="20201112 12:41:31.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.162" endtime="20201112 12:41:31.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:31.198" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:31.197" endtime="20201112 12:41:31.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.195" endtime="20201112 12:41:31.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.161" endtime="20201112 12:41:31.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.161" endtime="20201112 12:41:31.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.200" endtime="20201112 12:41:31.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.159" endtime="20201112 12:41:31.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.158" endtime="20201112 12:41:31.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.134" endtime="20201112 12:41:31.203"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:41:31.205" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.213" endtime="20201112 12:41:31.227"></status>
</kw>
<msg timestamp="20201112 12:41:31.227" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.211" endtime="20201112 12:41:31.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.228" endtime="20201112 12:41:31.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.231" endtime="20201112 12:41:31.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.209" endtime="20201112 12:41:31.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.207" endtime="20201112 12:41:31.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.240" endtime="20201112 12:41:31.512"></status>
</kw>
<msg timestamp="20201112 12:41:31.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064889681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064895069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:31.238" endtime="20201112 12:41:31.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064889681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064895069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:31.515" endtime="20201112 12:41:31.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.521" endtime="20201112 12:41:31.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.236" endtime="20201112 12:41:31.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.234" endtime="20201112 12:41:31.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.527" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:31.526" endtime="20201112 12:41:31.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.531" level="INFO">VALUE: [{'time': 0.064889681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064895069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.387999999995063e-06, 'source_diff': 5.387999999995063e-06}, {'time': 0.064899042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.973000000004334e-06, 'source_diff': 3.973000000004334e-06}, {'time': 0.064903097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.055000000002806e-06, 'source_diff': 4.055000000002806e-06}, {'time': 0.064906625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999887623e-06, 'source_diff': 3.5279999999887623e-06}, {'time': 0.064909778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1530000000057345e-06, 'source_diff': 3.1530000000057345e-06}, {'time': 0.06491575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999992983e-06, 'source_diff': 5.971999999992983e-06}, {'time': 0.064920986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2360000000056806e-06, 'source_diff': 5.2360000000056806e-06}, {'time': 0.064923389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.064929611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.064934347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.064939375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0279999999902625e-06, 'source_diff': 5.0279999999902625e-06}, {'time': 0.064945292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000008055e-06, 'source_diff': 5.917000000008055e-06}, {'time': 0.064948458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.064952306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.064958347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.064964014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.064966639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000060947e-06, 'source_diff': 2.6250000000060947e-06}, {'time': 0.064969903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999889424e-06, 'source_diff': 3.2639999999889424e-06}, {'time': 0.064975875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.972000000006861e-06, 'source_diff': 5.972000000006861e-06}, {'time': 0.064980042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.064984819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.064987236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4170000000045544e-06, 'source_diff': 2.4170000000045544e-06}, {'time': 0.064992278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.064997014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.064999792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.777999999994951e-06, 'source_diff': 2.777999999994951e-06}, {'time': 0.065002194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.065006236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.041999999995771e-06, 'source_diff': 4.041999999995771e-06}, {'time': 0.065010458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.06501675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.29200000000496e-06, 'source_diff': 6.29200000000496e-06}, {'time': 0.065021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.065024819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.065030722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.065033153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.065039, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.065044347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.065050389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.065053931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}, {'time': 0.065059736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805000000011495e-06, 'source_diff': 5.805000000011495e-06}, {'time': 0.065062764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999882623e-06, 'source_diff': 3.0279999999882623e-06}, {'time': 0.065068111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.065072014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.065075514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5000000000035003e-06, 'source_diff': 3.5000000000035003e-06}, {'time': 0.065080417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.065086514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.065092264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.065096958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.065100833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.065104847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.013999999996631e-06, 'source_diff': 4.013999999996631e-06}, {'time': 0.065109139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:31.528" endtime="20201112 12:41:31.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.524" endtime="20201112 12:41:31.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:31.546" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:31.533" endtime="20201112 12:41:31.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.550" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:31.549" endtime="20201112 12:41:31.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.554" level="INFO">VALUE: {'sourcediff': [0, 5.387999999995063e-06, 3.973000000004334e-06, 4.055000000002806e-06, 3.5279999999887623e-06, 3.1530000000057345e-06, 5.971999999992983e-06, 5.2360000000056806e-06, 2.4029999999980456e-06, 6.222000000000172e-06, 4.7360000000051805e-06, 5.0279999999902625e-06, 5.917000000008055e-06, 3.165999999998892e-06, 3.84800000000074e-06, 6.040999999998298e-06, 5.667000000000866e-06, 2.6250000000060947e-06, 3.2639999999889424e-06, 5.972000000006861e-06, 4.166999999999366e-06, 4.776999999997478e-06, 2.4170000000045544e-06, 5.041999999996771e-06, 4.7360000000051805e-06, 2.777999999994951e-06, 2.401999999998572e-06, 4.041999999995771e-06, 4.221999999998172e-06, 6.29200000000496e-06, 5.221999999999172e-06, 2.847000000000266e-06, 5.903000000001546e-06, 2.4309999999971854e-06, 5.847000000003266e-06, 5.347000000002766e-06, 6.041999999997771e-06, 3.541999999995271e-06, 5.805000000011495e-06, 3.0279999999882623e-06, 5.347000000002766e-06, 3.902999999999546e-06, 3.5000000000035003e-06, 4.903000000000546e-06, 6.096999999996577e-06, 5.749999999998812e-06, 4.693999999999532e-06, 3.875000000000406e-06, 4.013999999996631e-06, 4.29200000000296e-06], 'source_diff': [0, 5.387999999995063e-06, 3.973000000004334e-06, 4.055000000002806e-06, 3.5279999999887623e-06, 3.1530000000057345e-06, 5.971999999992983e-06, 5.2360000000056806e-06, 2.4029999999980456e-06, 6.222000000000172e-06, 4.7360000000051805e-06, 5.0279999999902625e-06, 5.917000000008055e-06, 3.165999999998892e-06, 3.84800000000074e-06, 6.040999999998298e-06, 5.667000000000866e-06, 2.6250000000060947e-06, 3.2639999999889424e-06, 5.972000000006861e-06, 4.166999999999366e-06, 4.776999999997478e-06, 2.4170000000045544e-06, 5.041999999996771e-06, 4.7360000000051805e-06, 2.777999999994951e-06, 2.401999999998572e-06, 4.041999999995771e-06, 4.221999999998172e-06, 6.29200000000496e-06, 5.221999999999172e-06, 2.847000000000266e-06, 5.903000000001546e-06, 2.4309999999971854e-06, 5.847000000003266e-06, 5.347000000002766e-06, 6.041999999997771e-06, 3.541999999995271e-06, 5.805000000011495e-06, 3.0279999999882623e-06, 5.347000000002766e-06, 3.902999999999546e-06, 3.5000000000035003e-06, 4.903000000000546e-06, 6.096999999996577e-06, 5.749999999998812e-06, 4.693999999999532e-06, 3.875000000000406e-06, 4.013999999996631e-06, 4.29200000000296e-06], 'eventtime': [0.064889681, 0.064895069, 0.064899042, 0.064903097, 0.064906625, 0.064909778, 0.06491575, 0.064920986, 0.064923389, 0.064929611, 0.064934347, 0.064939375, 0.064945292, 0.064948458, 0.064952306, 0.064958347, 0.064964014, 0.064966639, 0.064969903, 0.064975875, 0.064980042, 0.064984819, 0.064987236, 0.064992278, 0.064997014, 0.064999792, 0.065002194, 0.065006236, 0.065010458, 0.06501675, 0.065021972, 0.065024819, 0.065030722, 0.065033153, 0.065039, 0.065044347, 0.065050389, 0.065053931, 0.065059736, 0.065062764, 0.065068111, 0.065072014, 0.065075514, 0.065080417, 0.065086514, 0.065092264, 0.065096958, 0.065100833, 0.065104847, 0.065109139]}</msg>
<status status="PASS" starttime="20201112 12:41:31.552" endtime="20201112 12:41:31.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.547" endtime="20201112 12:41:31.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:31.558" level="INFO">${RESULT} = [{'time': 0.064895069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.387999999995063e-06, 'source_diff': 5.387999999995063e-06}, {'time': 0.064903097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:31.556" endtime="20201112 12:41:31.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:31.566" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:31.559" endtime="20201112 12:41:31.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.571" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:31.570" endtime="20201112 12:41:31.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.573" level="INFO">VALUE: [5.387999999995063e-06, 4.055000000002806e-06, 3.1530000000057345e-06, 5.2360000000056806e-06, 6.222000000000172e-06, 5.0279999999902625e-06, 3.165999999998892e-06, 6.040999999998298e-06, 2.6250000000060947e-06, 5.972000000006861e-06, 4.776999999997478e-06, 5.041999999996771e-06, 2.777999999994951e-06, 4.041999999995771e-06, 6.29200000000496e-06, 2.847000000000266e-06, 2.4309999999971854e-06, 5.347000000002766e-06, 3.541999999995271e-06, 3.0279999999882623e-06, 3.902999999999546e-06, 4.903000000000546e-06, 5.749999999998812e-06, 3.875000000000406e-06, 4.29200000000296e-06]</msg>
<status status="PASS" starttime="20201112 12:41:31.572" endtime="20201112 12:41:31.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.567" endtime="20201112 12:41:31.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.576" endtime="20201112 12:41:31.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:31.579" endtime="20201112 12:41:31.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.578" endtime="20201112 12:41:31.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.574" endtime="20201112 12:41:31.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.205" endtime="20201112 12:41:31.600"></status>
</kw>
<msg timestamp="20201112 12:41:31.600" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.608" endtime="20201112 12:41:31.622"></status>
</kw>
<msg timestamp="20201112 12:41:31.623" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.606" endtime="20201112 12:41:31.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.624" endtime="20201112 12:41:31.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.626" endtime="20201112 12:41:31.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.604" endtime="20201112 12:41:31.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.602" endtime="20201112 12:41:31.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.635" endtime="20201112 12:41:31.902"></status>
</kw>
<msg timestamp="20201112 12:41:31.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017563486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:31.634" endtime="20201112 12:41:31.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017563486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:31.905" endtime="20201112 12:41:31.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.911" endtime="20201112 12:41:31.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.631" endtime="20201112 12:41:31.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.629" endtime="20201112 12:41:31.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.918" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:31.917" endtime="20201112 12:41:31.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.921" level="INFO">VALUE: [{'time': 0.017558278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017563486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.017569292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.01757175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017577236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.017580389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.017582806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.017586875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.068999999998907e-06, 'source_diff': 4.068999999998907e-06}, {'time': 0.017589514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.639000000002195e-06, 'source_diff': 2.639000000002195e-06}, {'time': 0.017593167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.017599361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.017602375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.017606972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017612264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.017618167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.017623583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.017626694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1109999999966165e-06, 'source_diff': 3.1109999999966165e-06}, {'time': 0.017631917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.223000000002115e-06, 'source_diff': 5.223000000002115e-06}, {'time': 0.017635639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.017638861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2219999999971716e-06, 'source_diff': 3.2219999999971716e-06}, {'time': 0.017643458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017648875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.017651542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.017657264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.017659736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.017666028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.017671319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.017673792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.017676514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017682736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017685347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.017688889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.017694556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.017699083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527000000000697e-06, 'source_diff': 4.527000000000697e-06}, {'time': 0.017701431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.017706903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.017709764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.017714861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.017721083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.017727125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.017732042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.017735944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.017738667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7229999999996146e-06, 'source_diff': 2.7229999999996146e-06}, {'time': 0.017743653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.017748514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017753792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.017756514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017762556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.017765333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7770000000024164e-06, 'source_diff': 2.7770000000024164e-06}, {'time': 0.017771319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:31.919" endtime="20201112 12:41:31.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.914" endtime="20201112 12:41:31.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:31.936" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:31.923" endtime="20201112 12:41:31.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.940" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:31.939" endtime="20201112 12:41:31.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.943" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.207999999999602e-06, 5.806000000000561e-06, 2.458000000000321e-06, 5.485999999998992e-06, 3.1529999999987957e-06, 2.417000000001085e-06, 4.068999999998907e-06, 2.639000000002195e-06, 3.6529999999992957e-06, 6.194000000001032e-06, 3.0139999999991007e-06, 4.596999999998547e-06, 5.292000000000491e-06, 5.903000000001546e-06, 5.416000000001142e-06, 3.1109999999966165e-06, 5.223000000002115e-06, 3.722000000001141e-06, 3.2219999999971716e-06, 4.597000000002016e-06, 5.417000000000616e-06, 2.6669999999978655e-06, 5.721999999999672e-06, 2.471999999999891e-06, 6.292000000001491e-06, 5.291000000001017e-06, 2.4729999999993646e-06, 2.722000000000141e-06, 6.222000000000172e-06, 2.610999999999586e-06, 3.5419999999987406e-06, 5.667000000000866e-06, 4.527000000000697e-06, 2.3479999999992396e-06, 5.471999999999422e-06, 2.860999999999836e-06, 5.096999999999047e-06, 6.222000000000172e-06, 6.042000000001241e-06, 4.917000000000116e-06, 3.902000000000072e-06, 2.7229999999996146e-06, 4.986000000001961e-06, 4.860999999998367e-06, 5.278000000000921e-06, 2.722000000000141e-06, 6.041999999997771e-06, 2.7770000000024164e-06, 5.985999999999492e-06], 'source_diff': [0, 5.207999999999602e-06, 5.806000000000561e-06, 2.458000000000321e-06, 5.485999999998992e-06, 3.1529999999987957e-06, 2.417000000001085e-06, 4.068999999998907e-06, 2.639000000002195e-06, 3.6529999999992957e-06, 6.194000000001032e-06, 3.0139999999991007e-06, 4.596999999998547e-06, 5.292000000000491e-06, 5.903000000001546e-06, 5.416000000001142e-06, 3.1109999999966165e-06, 5.223000000002115e-06, 3.722000000001141e-06, 3.2219999999971716e-06, 4.597000000002016e-06, 5.417000000000616e-06, 2.6669999999978655e-06, 5.721999999999672e-06, 2.471999999999891e-06, 6.292000000001491e-06, 5.291000000001017e-06, 2.4729999999993646e-06, 2.722000000000141e-06, 6.222000000000172e-06, 2.610999999999586e-06, 3.5419999999987406e-06, 5.667000000000866e-06, 4.527000000000697e-06, 2.3479999999992396e-06, 5.471999999999422e-06, 2.860999999999836e-06, 5.096999999999047e-06, 6.222000000000172e-06, 6.042000000001241e-06, 4.917000000000116e-06, 3.902000000000072e-06, 2.7229999999996146e-06, 4.986000000001961e-06, 4.860999999998367e-06, 5.278000000000921e-06, 2.722000000000141e-06, 6.041999999997771e-06, 2.7770000000024164e-06, 5.985999999999492e-06], 'eventtime': [0.017558278, 0.017563486, 0.017569292, 0.01757175, 0.017577236, 0.017580389, 0.017582806, 0.017586875, 0.017589514, 0.017593167, 0.017599361, 0.017602375, 0.017606972, 0.017612264, 0.017618167, 0.017623583, 0.017626694, 0.017631917, 0.017635639, 0.017638861, 0.017643458, 0.017648875, 0.017651542, 0.017657264, 0.017659736, 0.017666028, 0.017671319, 0.017673792, 0.017676514, 0.017682736, 0.017685347, 0.017688889, 0.017694556, 0.017699083, 0.017701431, 0.017706903, 0.017709764, 0.017714861, 0.017721083, 0.017727125, 0.017732042, 0.017735944, 0.017738667, 0.017743653, 0.017748514, 0.017753792, 0.017756514, 0.017762556, 0.017765333, 0.017771319]}</msg>
<status status="PASS" starttime="20201112 12:41:31.941" endtime="20201112 12:41:31.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.937" endtime="20201112 12:41:31.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:31.947" level="INFO">${RESULT} = [{'time': 0.017563486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.01757175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:41:31.945" endtime="20201112 12:41:31.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:31.957" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:31.949" endtime="20201112 12:41:31.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.961" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:31.960" endtime="20201112 12:41:31.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:31.964" level="INFO">VALUE: [5.207999999999602e-06, 2.458000000000321e-06, 3.1529999999987957e-06, 4.068999999998907e-06, 3.6529999999992957e-06, 3.0139999999991007e-06, 5.292000000000491e-06, 5.416000000001142e-06, 5.223000000002115e-06, 3.2219999999971716e-06, 5.417000000000616e-06, 5.721999999999672e-06, 6.292000000001491e-06, 2.4729999999993646e-06, 6.222000000000172e-06, 3.5419999999987406e-06, 4.527000000000697e-06, 5.471999999999422e-06, 5.096999999999047e-06, 6.042000000001241e-06, 3.902000000000072e-06, 4.986000000001961e-06, 5.278000000000921e-06, 6.041999999997771e-06, 5.985999999999492e-06]</msg>
<status status="PASS" starttime="20201112 12:41:31.962" endtime="20201112 12:41:31.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.958" endtime="20201112 12:41:31.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.967" endtime="20201112 12:41:31.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:31.970" endtime="20201112 12:41:31.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.969" endtime="20201112 12:41:31.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.965" endtime="20201112 12:41:31.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.601" endtime="20201112 12:41:31.991"></status>
</kw>
<msg timestamp="20201112 12:41:31.991" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:31.999" endtime="20201112 12:41:32.014"></status>
</kw>
<msg timestamp="20201112 12:41:32.014" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:31.997" endtime="20201112 12:41:32.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.017" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:32.015" endtime="20201112 12:41:32.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.018" endtime="20201112 12:41:32.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.995" endtime="20201112 12:41:32.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.993" endtime="20201112 12:41:32.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.028" endtime="20201112 12:41:32.295"></status>
</kw>
<msg timestamp="20201112 12:41:32.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017579486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017584528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:32.026" endtime="20201112 12:41:32.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017579486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017584528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:32.298" endtime="20201112 12:41:32.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.303" endtime="20201112 12:41:32.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.023" endtime="20201112 12:41:32.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.021" endtime="20201112 12:41:32.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.310" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:32.309" endtime="20201112 12:41:32.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.313" level="INFO">VALUE: [{'time': 0.017579486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017584528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017588556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.017592847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.017597569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.017603056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486999999998465e-06, 'source_diff': 5.486999999998465e-06}, {'time': 0.017606528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017611931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.017614278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.017620514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.017623639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.017627653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.017633431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017637611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.017640903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2919999999984906e-06, 'source_diff': 3.2919999999984906e-06}, {'time': 0.017646236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.017649403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.167000000001835e-06, 'source_diff': 3.167000000001835e-06}, {'time': 0.017654444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.040999999997298e-06, 'source_diff': 5.040999999997298e-06}, {'time': 0.017657222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.017662333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.110999999998617e-06, 'source_diff': 5.110999999998617e-06}, {'time': 0.017667556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.223000000002115e-06, 'source_diff': 5.223000000002115e-06}, {'time': 0.017672458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.901999999997603e-06, 'source_diff': 4.901999999997603e-06}, {'time': 0.017676819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.017682042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.017687708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.017693792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.017698236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.017704208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.017707986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017712708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.017716444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.017722361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916999999997646e-06, 'source_diff': 5.916999999997646e-06}, {'time': 0.017726944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.017729486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.017731889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.017735375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017740056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.017746264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.017751611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017755708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.017760389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.681000000002905e-06, 'source_diff': 4.681000000002905e-06}, {'time': 0.017765181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.017769403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.017775181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.778000000001421e-06, 'source_diff': 5.778000000001421e-06}, {'time': 0.017779458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.017782639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.017786097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.458000000001321e-06, 'source_diff': 3.458000000001321e-06}, {'time': 0.017788764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.017794931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017798958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:32.311" endtime="20201112 12:41:32.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.306" endtime="20201112 12:41:32.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:32.329" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:32.316" endtime="20201112 12:41:32.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.333" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:32.332" endtime="20201112 12:41:32.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.336" level="INFO">VALUE: {'sourcediff': [0, 5.042000000000241e-06, 4.02800000000314e-06, 4.291000000000017e-06, 4.721999999998672e-06, 5.486999999998465e-06, 3.472000000000891e-06, 5.403000000001046e-06, 2.346999999999766e-06, 6.235999999999742e-06, 3.124999999999656e-06, 4.014000000000101e-06, 5.778000000001421e-06, 4.179999999999462e-06, 3.2919999999984906e-06, 5.332999999999727e-06, 3.167000000001835e-06, 5.040999999997298e-06, 2.77800000000189e-06, 5.110999999998617e-06, 5.223000000002115e-06, 4.901999999997603e-06, 4.361000000001336e-06, 5.222999999998645e-06, 5.666000000001392e-06, 6.0839999999999506e-06, 4.443999999999282e-06, 5.971999999999922e-06, 3.7779999999994207e-06, 4.722000000002141e-06, 3.736000000000711e-06, 5.916999999997646e-06, 4.583000000002446e-06, 2.5419999999977405e-06, 2.403000000001515e-06, 3.486000000000461e-06, 4.680999999999436e-06, 6.208000000000602e-06, 5.346999999999297e-06, 4.096999999998047e-06, 4.681000000002905e-06, 4.791999999999991e-06, 4.221999999998172e-06, 5.778000000001421e-06, 4.277000000000447e-06, 3.1809999999979355e-06, 3.458000000001321e-06, 2.6669999999978655e-06, 6.167000000001366e-06, 4.027000000000197e-06], 'source_diff': [0, 5.042000000000241e-06, 4.02800000000314e-06, 4.291000000000017e-06, 4.721999999998672e-06, 5.486999999998465e-06, 3.472000000000891e-06, 5.403000000001046e-06, 2.346999999999766e-06, 6.235999999999742e-06, 3.124999999999656e-06, 4.014000000000101e-06, 5.778000000001421e-06, 4.179999999999462e-06, 3.2919999999984906e-06, 5.332999999999727e-06, 3.167000000001835e-06, 5.040999999997298e-06, 2.77800000000189e-06, 5.110999999998617e-06, 5.223000000002115e-06, 4.901999999997603e-06, 4.361000000001336e-06, 5.222999999998645e-06, 5.666000000001392e-06, 6.0839999999999506e-06, 4.443999999999282e-06, 5.971999999999922e-06, 3.7779999999994207e-06, 4.722000000002141e-06, 3.736000000000711e-06, 5.916999999997646e-06, 4.583000000002446e-06, 2.5419999999977405e-06, 2.403000000001515e-06, 3.486000000000461e-06, 4.680999999999436e-06, 6.208000000000602e-06, 5.346999999999297e-06, 4.096999999998047e-06, 4.681000000002905e-06, 4.791999999999991e-06, 4.221999999998172e-06, 5.778000000001421e-06, 4.277000000000447e-06, 3.1809999999979355e-06, 3.458000000001321e-06, 2.6669999999978655e-06, 6.167000000001366e-06, 4.027000000000197e-06], 'eventtime': [0.017579486, 0.017584528, 0.017588556, 0.017592847, 0.017597569, 0.017603056, 0.017606528, 0.017611931, 0.017614278, 0.017620514, 0.017623639, 0.017627653, 0.017633431, 0.017637611, 0.017640903, 0.017646236, 0.017649403, 0.017654444, 0.017657222, 0.017662333, 0.017667556, 0.017672458, 0.017676819, 0.017682042, 0.017687708, 0.017693792, 0.017698236, 0.017704208, 0.017707986, 0.017712708, 0.017716444, 0.017722361, 0.017726944, 0.017729486, 0.017731889, 0.017735375, 0.017740056, 0.017746264, 0.017751611, 0.017755708, 0.017760389, 0.017765181, 0.017769403, 0.017775181, 0.017779458, 0.017782639, 0.017786097, 0.017788764, 0.017794931, 0.017798958]}</msg>
<status status="PASS" starttime="20201112 12:41:32.334" endtime="20201112 12:41:32.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.330" endtime="20201112 12:41:32.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:32.341" level="INFO">${RESULT} = [{'time': 0.017584528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.017592847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:32.338" endtime="20201112 12:41:32.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:32.349" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:32.342" endtime="20201112 12:41:32.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.353" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:32.352" endtime="20201112 12:41:32.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.355" level="INFO">VALUE: [5.042000000000241e-06, 4.291000000000017e-06, 5.486999999998465e-06, 5.403000000001046e-06, 6.235999999999742e-06, 4.014000000000101e-06, 4.179999999999462e-06, 5.332999999999727e-06, 5.040999999997298e-06, 5.110999999998617e-06, 4.901999999997603e-06, 5.222999999998645e-06, 6.0839999999999506e-06, 5.971999999999922e-06, 4.722000000002141e-06, 5.916999999997646e-06, 2.5419999999977405e-06, 3.486000000000461e-06, 6.208000000000602e-06, 4.096999999998047e-06, 4.791999999999991e-06, 5.778000000001421e-06, 3.1809999999979355e-06, 2.6669999999978655e-06, 4.027000000000197e-06]</msg>
<status status="PASS" starttime="20201112 12:41:32.354" endtime="20201112 12:41:32.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.350" endtime="20201112 12:41:32.356"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.359" endtime="20201112 12:41:32.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:32.362" endtime="20201112 12:41:32.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.361" endtime="20201112 12:41:32.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.357" endtime="20201112 12:41:32.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.992" endtime="20201112 12:41:32.383"></status>
</kw>
<msg timestamp="20201112 12:41:32.383" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.391" endtime="20201112 12:41:32.405"></status>
</kw>
<msg timestamp="20201112 12:41:32.406" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:32.389" endtime="20201112 12:41:32.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:32.407" endtime="20201112 12:41:32.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.409" endtime="20201112 12:41:32.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.387" endtime="20201112 12:41:32.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.385" endtime="20201112 12:41:32.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.419" endtime="20201112 12:41:32.682"></status>
</kw>
<msg timestamp="20201112 12:41:32.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018305472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:32.417" endtime="20201112 12:41:32.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018305472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:32.685" endtime="20201112 12:41:32.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.691" endtime="20201112 12:41:32.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.414" endtime="20201112 12:41:32.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.413" endtime="20201112 12:41:32.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.697" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:32.696" endtime="20201112 12:41:32.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.701" level="INFO">VALUE: [{'time': 0.018305472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018309833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018313056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018319222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.165999999998423e-06, 'source_diff': 6.165999999998423e-06}, {'time': 0.018322708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018328222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.018334208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.0183385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018344722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018347958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.018352361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018355139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.018361431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.292000000001491e-06, 'source_diff': 6.292000000001491e-06}, {'time': 0.018366208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.018369028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8200000000006e-06, 'source_diff': 2.8200000000006e-06}, {'time': 0.018374056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018376958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.018382306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.018388528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018393389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018396417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.018402403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018407375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018413306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.018418639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018422806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018425528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018428, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018431986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018435653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.018439208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.554999999998837e-06, 'source_diff': 3.554999999998837e-06}, {'time': 0.018445292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018450194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.018452597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018455639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.018458736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018464403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018470319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.018474611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018477458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018482569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.018487236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.01849275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.018495736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018499833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018505431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018508389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.018513819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.018518417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.59799999999802e-06, 'source_diff': 4.59799999999802e-06}, {'time': 0.018520972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:32.698" endtime="20201112 12:41:32.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.694" endtime="20201112 12:41:32.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:32.716" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:32.703" endtime="20201112 12:41:32.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.720" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:32.719" endtime="20201112 12:41:32.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.723" level="INFO">VALUE: {'sourcediff': [0, 4.361000000001336e-06, 3.2230000000001147e-06, 6.165999999998423e-06, 3.486000000000461e-06, 5.514000000001601e-06, 5.985999999999492e-06, 4.291999999999491e-06, 6.222000000000172e-06, 3.236000000000211e-06, 4.403000000000046e-06, 2.7779999999984206e-06, 6.292000000001491e-06, 4.776999999997478e-06, 2.8200000000006e-06, 5.028000000000671e-06, 2.901999999999072e-06, 5.34800000000224e-06, 6.222000000000172e-06, 4.860999999998367e-06, 3.02800000000214e-06, 5.985999999999492e-06, 4.971999999998922e-06, 5.931000000000686e-06, 5.332999999999727e-06, 4.166999999999366e-06, 2.722000000000141e-06, 2.471999999999891e-06, 3.986000000000961e-06, 3.6669999999988656e-06, 3.554999999998837e-06, 6.0839999999999506e-06, 4.902000000001072e-06, 2.403000000001515e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 5.667000000000866e-06, 5.915999999998173e-06, 4.291999999999491e-06, 2.847000000000266e-06, 5.111000000002086e-06, 4.666999999999866e-06, 5.5139999999981315e-06, 2.985999999999961e-06, 4.097000000001516e-06, 5.5979999999990204e-06, 2.958000000000821e-06, 5.430000000000712e-06, 4.59799999999802e-06, 2.5550000000013062e-06], 'source_diff': [0, 4.361000000001336e-06, 3.2230000000001147e-06, 6.165999999998423e-06, 3.486000000000461e-06, 5.514000000001601e-06, 5.985999999999492e-06, 4.291999999999491e-06, 6.222000000000172e-06, 3.236000000000211e-06, 4.403000000000046e-06, 2.7779999999984206e-06, 6.292000000001491e-06, 4.776999999997478e-06, 2.8200000000006e-06, 5.028000000000671e-06, 2.901999999999072e-06, 5.34800000000224e-06, 6.222000000000172e-06, 4.860999999998367e-06, 3.02800000000214e-06, 5.985999999999492e-06, 4.971999999998922e-06, 5.931000000000686e-06, 5.332999999999727e-06, 4.166999999999366e-06, 2.722000000000141e-06, 2.471999999999891e-06, 3.986000000000961e-06, 3.6669999999988656e-06, 3.554999999998837e-06, 6.0839999999999506e-06, 4.902000000001072e-06, 2.403000000001515e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 5.667000000000866e-06, 5.915999999998173e-06, 4.291999999999491e-06, 2.847000000000266e-06, 5.111000000002086e-06, 4.666999999999866e-06, 5.5139999999981315e-06, 2.985999999999961e-06, 4.097000000001516e-06, 5.5979999999990204e-06, 2.958000000000821e-06, 5.430000000000712e-06, 4.59799999999802e-06, 2.5550000000013062e-06], 'eventtime': [0.018305472, 0.018309833, 0.018313056, 0.018319222, 0.018322708, 0.018328222, 0.018334208, 0.0183385, 0.018344722, 0.018347958, 0.018352361, 0.018355139, 0.018361431, 0.018366208, 0.018369028, 0.018374056, 0.018376958, 0.018382306, 0.018388528, 0.018393389, 0.018396417, 0.018402403, 0.018407375, 0.018413306, 0.018418639, 0.018422806, 0.018425528, 0.018428, 0.018431986, 0.018435653, 0.018439208, 0.018445292, 0.018450194, 0.018452597, 0.018455639, 0.018458736, 0.018464403, 0.018470319, 0.018474611, 0.018477458, 0.018482569, 0.018487236, 0.01849275, 0.018495736, 0.018499833, 0.018505431, 0.018508389, 0.018513819, 0.018518417, 0.018520972]}</msg>
<status status="PASS" starttime="20201112 12:41:32.721" endtime="20201112 12:41:32.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.717" endtime="20201112 12:41:32.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:32.727" level="INFO">${RESULT} = [{'time': 0.018309833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.018319222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:32.725" endtime="20201112 12:41:32.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:32.735" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:32.728" endtime="20201112 12:41:32.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.739" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:32.738" endtime="20201112 12:41:32.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.742" level="INFO">VALUE: [4.361000000001336e-06, 6.165999999998423e-06, 5.514000000001601e-06, 4.291999999999491e-06, 3.236000000000211e-06, 2.7779999999984206e-06, 4.776999999997478e-06, 5.028000000000671e-06, 5.34800000000224e-06, 4.860999999998367e-06, 5.985999999999492e-06, 5.931000000000686e-06, 4.166999999999366e-06, 2.471999999999891e-06, 3.6669999999988656e-06, 6.0839999999999506e-06, 2.403000000001515e-06, 3.097000000000516e-06, 5.915999999998173e-06, 2.847000000000266e-06, 4.666999999999866e-06, 2.985999999999961e-06, 5.5979999999990204e-06, 5.430000000000712e-06, 2.5550000000013062e-06]</msg>
<status status="PASS" starttime="20201112 12:41:32.741" endtime="20201112 12:41:32.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.736" endtime="20201112 12:41:32.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.745" endtime="20201112 12:41:32.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:32.749" endtime="20201112 12:41:32.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.747" endtime="20201112 12:41:32.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.744" endtime="20201112 12:41:32.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.384" endtime="20201112 12:41:32.769"></status>
</kw>
<msg timestamp="20201112 12:41:32.770" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.778" endtime="20201112 12:41:32.792"></status>
</kw>
<msg timestamp="20201112 12:41:32.792" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:32.777" endtime="20201112 12:41:32.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:32.795" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:32.793" endtime="20201112 12:41:32.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.796" endtime="20201112 12:41:32.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.773" endtime="20201112 12:41:32.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.771" endtime="20201112 12:41:32.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:32.805" endtime="20201112 12:41:33.071"></status>
</kw>
<msg timestamp="20201112 12:41:33.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018455194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018458542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:32.803" endtime="20201112 12:41:33.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018455194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018458542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:33.074" endtime="20201112 12:41:33.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.079" endtime="20201112 12:41:33.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.801" endtime="20201112 12:41:33.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.799" endtime="20201112 12:41:33.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.086" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:33.085" endtime="20201112 12:41:33.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.090" level="INFO">VALUE: [{'time': 0.018455194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018458542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018462583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.040999999999767e-06, 'source_diff': 4.040999999999767e-06}, {'time': 0.018467556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.018471653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018477625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018482472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018485528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.05600000000128e-06, 'source_diff': 3.05600000000128e-06}, {'time': 0.018487931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.018493403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018496125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018501556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.018506583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000001197e-06, 'source_diff': 5.027000000001197e-06}, {'time': 0.018511931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.018515722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.790999999999517e-06, 'source_diff': 3.790999999999517e-06}, {'time': 0.018519444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018522986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.018527708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018532181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472999999997895e-06, 'source_diff': 4.472999999997895e-06}, {'time': 0.018537847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.018540889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.018545986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018549208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018552931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7230000000006147e-06, 'source_diff': 3.7230000000006147e-06}, {'time': 0.018556347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018559014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.018564486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.018568778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018572931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018578417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018581639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018587361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018591778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018595139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018599917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018605639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018611875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018615403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018620194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.791000000000517e-06, 'source_diff': 4.791000000000517e-06}, {'time': 0.018622847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.018625833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018629, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.018632986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018638694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.018642375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6809999999984355e-06, 'source_diff': 3.6809999999984355e-06}, {'time': 0.018648208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018653056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.018655722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.018660153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.018664806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:33.087" endtime="20201112 12:41:33.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.083" endtime="20201112 12:41:33.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:33.105" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:33.092" endtime="20201112 12:41:33.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.109" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:33.108" endtime="20201112 12:41:33.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.112" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 3.3480000000002397e-06, 4.040999999999767e-06, 4.972999999998395e-06, 4.097000000001516e-06, 5.971999999999922e-06, 4.846999999998797e-06, 3.05600000000128e-06, 2.4029999999980456e-06, 5.471999999999422e-06, 2.722000000000141e-06, 5.431000000000186e-06, 5.027000000001197e-06, 5.34799999999877e-06, 3.790999999999517e-06, 3.722000000001141e-06, 3.54200000000221e-06, 4.721999999998672e-06, 4.472999999997895e-06, 5.666000000001392e-06, 3.04200000000171e-06, 5.096999999999047e-06, 3.222000000000641e-06, 3.7230000000006147e-06, 3.415999999999142e-06, 2.6669999999978655e-06, 5.472000000002891e-06, 4.291999999999491e-06, 4.152999999999796e-06, 5.485999999998992e-06, 3.222000000000641e-06, 5.721999999999672e-06, 4.416999999999616e-06, 3.361000000000336e-06, 4.778000000000421e-06, 5.721999999999672e-06, 6.235999999999742e-06, 3.5279999999991707e-06, 4.791000000000517e-06, 2.653000000001765e-06, 2.985999999999961e-06, 3.1669999999983656e-06, 3.986000000000961e-06, 5.708000000000102e-06, 3.6809999999984355e-06, 5.833000000000227e-06, 4.84800000000174e-06, 2.665999999998392e-06, 4.430999999999186e-06, 4.653000000000296e-06], 'source_diff': [0, 3.3480000000002397e-06, 4.040999999999767e-06, 4.972999999998395e-06, 4.097000000001516e-06, 5.971999999999922e-06, 4.846999999998797e-06, 3.05600000000128e-06, 2.4029999999980456e-06, 5.471999999999422e-06, 2.722000000000141e-06, 5.431000000000186e-06, 5.027000000001197e-06, 5.34799999999877e-06, 3.790999999999517e-06, 3.722000000001141e-06, 3.54200000000221e-06, 4.721999999998672e-06, 4.472999999997895e-06, 5.666000000001392e-06, 3.04200000000171e-06, 5.096999999999047e-06, 3.222000000000641e-06, 3.7230000000006147e-06, 3.415999999999142e-06, 2.6669999999978655e-06, 5.472000000002891e-06, 4.291999999999491e-06, 4.152999999999796e-06, 5.485999999998992e-06, 3.222000000000641e-06, 5.721999999999672e-06, 4.416999999999616e-06, 3.361000000000336e-06, 4.778000000000421e-06, 5.721999999999672e-06, 6.235999999999742e-06, 3.5279999999991707e-06, 4.791000000000517e-06, 2.653000000001765e-06, 2.985999999999961e-06, 3.1669999999983656e-06, 3.986000000000961e-06, 5.708000000000102e-06, 3.6809999999984355e-06, 5.833000000000227e-06, 4.84800000000174e-06, 2.665999999998392e-06, 4.430999999999186e-06, 4.653000000000296e-06], 'eventtime': [0.018455194, 0.018458542, 0.018462583, 0.018467556, 0.018471653, 0.018477625, 0.018482472, 0.018485528, 0.018487931, 0.018493403, 0.018496125, 0.018501556, 0.018506583, 0.018511931, 0.018515722, 0.018519444, 0.018522986, 0.018527708, 0.018532181, 0.018537847, 0.018540889, 0.018545986, 0.018549208, 0.018552931, 0.018556347, 0.018559014, 0.018564486, 0.018568778, 0.018572931, 0.018578417, 0.018581639, 0.018587361, 0.018591778, 0.018595139, 0.018599917, 0.018605639, 0.018611875, 0.018615403, 0.018620194, 0.018622847, 0.018625833, 0.018629, 0.018632986, 0.018638694, 0.018642375, 0.018648208, 0.018653056, 0.018655722, 0.018660153, 0.018664806]}</msg>
<status status="PASS" starttime="20201112 12:41:33.110" endtime="20201112 12:41:33.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.106" endtime="20201112 12:41:33.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:33.116" level="INFO">${RESULT} = [{'time': 0.018458542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018467556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:33.114" endtime="20201112 12:41:33.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:33.125" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:33.117" endtime="20201112 12:41:33.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.129" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:33.128" endtime="20201112 12:41:33.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.132" level="INFO">VALUE: [3.3480000000002397e-06, 4.972999999998395e-06, 5.971999999999922e-06, 3.05600000000128e-06, 5.471999999999422e-06, 5.431000000000186e-06, 5.34799999999877e-06, 3.722000000001141e-06, 4.721999999998672e-06, 5.666000000001392e-06, 5.096999999999047e-06, 3.7230000000006147e-06, 2.6669999999978655e-06, 4.291999999999491e-06, 5.485999999998992e-06, 5.721999999999672e-06, 3.361000000000336e-06, 5.721999999999672e-06, 3.5279999999991707e-06, 2.653000000001765e-06, 3.1669999999983656e-06, 5.708000000000102e-06, 5.833000000000227e-06, 2.665999999998392e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201112 12:41:33.130" endtime="20201112 12:41:33.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.126" endtime="20201112 12:41:33.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.135" endtime="20201112 12:41:33.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:33.138" endtime="20201112 12:41:33.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.137" endtime="20201112 12:41:33.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.133" endtime="20201112 12:41:33.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:32.770" endtime="20201112 12:41:33.159"></status>
</kw>
<msg timestamp="20201112 12:41:33.159" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.168" endtime="20201112 12:41:33.183"></status>
</kw>
<msg timestamp="20201112 12:41:33.183" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:33.166" endtime="20201112 12:41:33.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:33.184" endtime="20201112 12:41:33.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.187" endtime="20201112 12:41:33.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.164" endtime="20201112 12:41:33.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.161" endtime="20201112 12:41:33.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.196" endtime="20201112 12:41:33.462"></status>
</kw>
<msg timestamp="20201112 12:41:33.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018463403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:33.194" endtime="20201112 12:41:33.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018463403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:33.465" endtime="20201112 12:41:33.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.470" endtime="20201112 12:41:33.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.192" endtime="20201112 12:41:33.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.190" endtime="20201112 12:41:33.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.477" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:33.476" endtime="20201112 12:41:33.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.481" level="INFO">VALUE: [{'time': 0.018463403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.018469722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018474375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018477167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.018481972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.018487472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018490375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018494667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018499583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018502194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.018506389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.195000000001975e-06, 'source_diff': 4.195000000001975e-06}, {'time': 0.018511444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.018516542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.09800000000199e-06, 'source_diff': 5.09800000000199e-06}, {'time': 0.018521222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.018525181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.959000000001295e-06, 'source_diff': 3.959000000001295e-06}, {'time': 0.018530597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.018536444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018539917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4730000000003647e-06, 'source_diff': 3.4730000000003647e-06}, {'time': 0.018543403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018549125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018555111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018561111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.018567306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999997036e-06, 'source_diff': 6.194999999997036e-06}, {'time': 0.018571333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027000000000197e-06, 'source_diff': 4.027000000000197e-06}, {'time': 0.018574181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.018578417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018583778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.360999999998867e-06, 'source_diff': 5.360999999998867e-06}, {'time': 0.018586236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.018591528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.292000000000491e-06, 'source_diff': 5.292000000000491e-06}, {'time': 0.018595625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018601, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018607014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.014000000002101e-06, 'source_diff': 6.014000000002101e-06}, {'time': 0.018610375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3609999999968665e-06, 'source_diff': 3.3609999999968665e-06}, {'time': 0.018613611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.236000000000211e-06, 'source_diff': 3.236000000000211e-06}, {'time': 0.0186175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018623486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.018628014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.018631514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.500000000000031e-06, 'source_diff': 3.500000000000031e-06}, {'time': 0.018637361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.018639833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018643417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5839999999974503e-06, 'source_diff': 3.5839999999974503e-06}, {'time': 0.018647708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.01865025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.018653056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.018657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.018662236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018664958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018668264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.30600000000153e-06, 'source_diff': 3.30600000000153e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:33.478" endtime="20201112 12:41:33.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.474" endtime="20201112 12:41:33.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:33.496" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:33.483" endtime="20201112 12:41:33.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.500" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:33.499" endtime="20201112 12:41:33.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.503" level="INFO">VALUE: {'sourcediff': [0, 2.833000000000696e-06, 3.486000000000461e-06, 4.653000000000296e-06, 2.7919999999979905e-06, 4.805000000000087e-06, 3.02800000000214e-06, 2.471999999999891e-06, 2.9029999999985456e-06, 4.291999999999491e-06, 4.916000000000642e-06, 2.610999999999586e-06, 4.195000000001975e-06, 5.0549999999968676e-06, 5.09800000000199e-06, 4.679999999999962e-06, 3.959000000001295e-06, 5.415999999997673e-06, 5.846999999999797e-06, 3.4730000000003647e-06, 3.486000000000461e-06, 5.721999999999672e-06, 5.985999999999492e-06, 6.000000000002531e-06, 6.194999999997036e-06, 4.027000000000197e-06, 2.8479999999997396e-06, 4.236000000001211e-06, 5.360999999998867e-06, 2.458000000000321e-06, 5.292000000000491e-06, 4.097000000001516e-06, 5.374999999998437e-06, 6.014000000002101e-06, 3.3609999999968665e-06, 3.236000000000211e-06, 3.888999999999976e-06, 5.986000000002961e-06, 4.527999999996701e-06, 3.500000000000031e-06, 5.847000000003266e-06, 2.471999999999891e-06, 3.5839999999974503e-06, 4.291000000000017e-06, 2.54200000000121e-06, 2.80600000000103e-06, 4.457999999998852e-06, 4.721999999998672e-06, 2.722000000000141e-06, 3.30600000000153e-06], 'source_diff': [0, 2.833000000000696e-06, 3.486000000000461e-06, 4.653000000000296e-06, 2.7919999999979905e-06, 4.805000000000087e-06, 3.02800000000214e-06, 2.471999999999891e-06, 2.9029999999985456e-06, 4.291999999999491e-06, 4.916000000000642e-06, 2.610999999999586e-06, 4.195000000001975e-06, 5.0549999999968676e-06, 5.09800000000199e-06, 4.679999999999962e-06, 3.959000000001295e-06, 5.415999999997673e-06, 5.846999999999797e-06, 3.4730000000003647e-06, 3.486000000000461e-06, 5.721999999999672e-06, 5.985999999999492e-06, 6.000000000002531e-06, 6.194999999997036e-06, 4.027000000000197e-06, 2.8479999999997396e-06, 4.236000000001211e-06, 5.360999999998867e-06, 2.458000000000321e-06, 5.292000000000491e-06, 4.097000000001516e-06, 5.374999999998437e-06, 6.014000000002101e-06, 3.3609999999968665e-06, 3.236000000000211e-06, 3.888999999999976e-06, 5.986000000002961e-06, 4.527999999996701e-06, 3.500000000000031e-06, 5.847000000003266e-06, 2.471999999999891e-06, 3.5839999999974503e-06, 4.291000000000017e-06, 2.54200000000121e-06, 2.80600000000103e-06, 4.457999999998852e-06, 4.721999999998672e-06, 2.722000000000141e-06, 3.30600000000153e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.018463403, 0.018466236, 0.018469722, 0.018474375, 0.018477167, 0.018481972, 0.018485, 0.018487472, 0.018490375, 0.018494667, 0.018499583, 0.018502194, 0.018506389, 0.018511444, 0.018516542, 0.018521222, 0.018525181, 0.018530597, 0.018536444, 0.018539917, 0.018543403, 0.018549125, 0.018555111, 0.018561111, 0.018567306, 0.018571333, 0.018574181, 0.018578417, 0.018583778, 0.018586236, 0.018591528, 0.018595625, 0.018601, 0.018607014, 0.018610375, 0.018613611, 0.0186175, 0.018623486, 0.018628014, 0.018631514, 0.018637361, 0.018639833, 0.018643417, 0.018647708, 0.01865025, 0.018653056, 0.018657514, 0.018662236, 0.018664958, 0.018668264]}</msg>
<status status="PASS" starttime="20201112 12:41:33.501" endtime="20201112 12:41:33.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.497" endtime="20201112 12:41:33.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:33.507" level="INFO">${RESULT} = [{'time': 0.018466236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.018474375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:33.504" endtime="20201112 12:41:33.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:33.515" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:33.508" endtime="20201112 12:41:33.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.519" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:33.518" endtime="20201112 12:41:33.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.521" level="INFO">VALUE: [2.833000000000696e-06, 4.653000000000296e-06, 4.805000000000087e-06, 2.471999999999891e-06, 4.291999999999491e-06, 2.610999999999586e-06, 5.0549999999968676e-06, 4.679999999999962e-06, 5.415999999997673e-06, 3.4730000000003647e-06, 5.721999999999672e-06, 6.000000000002531e-06, 4.027000000000197e-06, 4.236000000001211e-06, 2.458000000000321e-06, 4.097000000001516e-06, 6.014000000002101e-06, 3.236000000000211e-06, 5.986000000002961e-06, 3.500000000000031e-06, 2.471999999999891e-06, 4.291000000000017e-06, 2.80600000000103e-06, 4.721999999998672e-06, 3.30600000000153e-06]</msg>
<status status="PASS" starttime="20201112 12:41:33.520" endtime="20201112 12:41:33.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.516" endtime="20201112 12:41:33.523"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.525" endtime="20201112 12:41:33.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:33.529" endtime="20201112 12:41:33.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.527" endtime="20201112 12:41:33.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.523" endtime="20201112 12:41:33.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.160" endtime="20201112 12:41:33.550"></status>
</kw>
<msg timestamp="20201112 12:41:33.550" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.558" endtime="20201112 12:41:33.572"></status>
</kw>
<msg timestamp="20201112 12:41:33.573" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:33.556" endtime="20201112 12:41:33.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:33.574" endtime="20201112 12:41:33.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.576" endtime="20201112 12:41:33.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.554" endtime="20201112 12:41:33.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.552" endtime="20201112 12:41:33.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.585" endtime="20201112 12:41:33.853"></status>
</kw>
<msg timestamp="20201112 12:41:33.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017564347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:33.584" endtime="20201112 12:41:33.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017558069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017564347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:33.856" endtime="20201112 12:41:33.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.862" endtime="20201112 12:41:33.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.581" endtime="20201112 12:41:33.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.579" endtime="20201112 12:41:33.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.869" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:33.867" endtime="20201112 12:41:33.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.872" level="INFO">VALUE: [{'time': 0.017558069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017564347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.017568431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.017571917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.017577083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.017579556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4729999999993646e-06, 'source_diff': 2.4729999999993646e-06}, {'time': 0.017584819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.263000000001877e-06, 'source_diff': 5.263000000001877e-06}, {'time': 0.017589319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.017594431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.017599028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017602569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.017605042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.473000000002834e-06, 'source_diff': 2.473000000002834e-06}, {'time': 0.017608208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.017611986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017616278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017620875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.017623597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.017628889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.017634236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.017637569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.01764375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.017649694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.017654389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6949999999990055e-06, 'source_diff': 4.6949999999990055e-06}, {'time': 0.017660056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.017664653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.017669569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.017675542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.017679764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.017684319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.017687222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.017691528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.017695861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.332999999998727e-06, 'source_diff': 4.332999999998727e-06}, {'time': 0.017701208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.017703694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.485999999999461e-06, 'source_diff': 2.485999999999461e-06}, {'time': 0.017706083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.017710583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.017714361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.017718292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.017722264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.017727417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.017731694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.017736806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.017741167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999997867e-06, 'source_diff': 4.360999999997867e-06}, {'time': 0.017745444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.017750056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.61200000000106e-06, 'source_diff': 4.61200000000106e-06}, {'time': 0.017752514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.458000000000321e-06, 'source_diff': 2.458000000000321e-06}, {'time': 0.017756903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.017762972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.017767444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472000000001891e-06, 'source_diff': 4.472000000001891e-06}, {'time': 0.017772861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:33.870" endtime="20201112 12:41:33.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.865" endtime="20201112 12:41:33.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:33.888" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:33.875" endtime="20201112 12:41:33.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.892" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:33.891" endtime="20201112 12:41:33.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.895" level="INFO">VALUE: {'sourcediff': [0, 6.278000000001921e-06, 4.08399999999795e-06, 3.486000000000461e-06, 5.166000000000892e-06, 2.4729999999993646e-06, 5.263000000001877e-06, 4.4999999999975615e-06, 5.11200000000156e-06, 4.596999999998547e-06, 3.540999999999267e-06, 2.473000000002834e-06, 3.165999999998892e-06, 3.7779999999994207e-06, 4.291999999999491e-06, 4.597000000002016e-06, 2.722000000000141e-06, 5.291999999997021e-06, 5.347000000002766e-06, 3.3329999999977267e-06, 6.181000000000936e-06, 5.944000000000782e-06, 4.6949999999990055e-06, 5.667000000000866e-06, 4.596999999998547e-06, 4.916000000000642e-06, 5.9729999999993955e-06, 4.222000000001641e-06, 4.554999999999837e-06, 2.9029999999985456e-06, 4.30600000000253e-06, 4.332999999998727e-06, 5.346999999999297e-06, 2.485999999999461e-06, 2.389000000001945e-06, 4.4999999999975615e-06, 3.77800000000289e-06, 3.9309999999986855e-06, 3.972000000001391e-06, 5.152999999997326e-06, 4.277000000000447e-06, 5.11200000000156e-06, 4.360999999997867e-06, 4.277000000000447e-06, 4.61200000000106e-06, 2.458000000000321e-06, 4.389000000000476e-06, 6.0689999999974376e-06, 4.472000000001891e-06, 5.417000000000616e-06], 'source_diff': [0, 6.278000000001921e-06, 4.08399999999795e-06, 3.486000000000461e-06, 5.166000000000892e-06, 2.4729999999993646e-06, 5.263000000001877e-06, 4.4999999999975615e-06, 5.11200000000156e-06, 4.596999999998547e-06, 3.540999999999267e-06, 2.473000000002834e-06, 3.165999999998892e-06, 3.7779999999994207e-06, 4.291999999999491e-06, 4.597000000002016e-06, 2.722000000000141e-06, 5.291999999997021e-06, 5.347000000002766e-06, 3.3329999999977267e-06, 6.181000000000936e-06, 5.944000000000782e-06, 4.6949999999990055e-06, 5.667000000000866e-06, 4.596999999998547e-06, 4.916000000000642e-06, 5.9729999999993955e-06, 4.222000000001641e-06, 4.554999999999837e-06, 2.9029999999985456e-06, 4.30600000000253e-06, 4.332999999998727e-06, 5.346999999999297e-06, 2.485999999999461e-06, 2.389000000001945e-06, 4.4999999999975615e-06, 3.77800000000289e-06, 3.9309999999986855e-06, 3.972000000001391e-06, 5.152999999997326e-06, 4.277000000000447e-06, 5.11200000000156e-06, 4.360999999997867e-06, 4.277000000000447e-06, 4.61200000000106e-06, 2.458000000000321e-06, 4.389000000000476e-06, 6.0689999999974376e-06, 4.472000000001891e-06, 5.417000000000616e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.017558069, 0.017564347, 0.017568431, 0.017571917, 0.017577083, 0.017579556, 0.017584819, 0.017589319, 0.017594431, 0.017599028, 0.017602569, 0.017605042, 0.017608208, 0.017611986, 0.017616278, 0.017620875, 0.017623597, 0.017628889, 0.017634236, 0.017637569, 0.01764375, 0.017649694, 0.017654389, 0.017660056, 0.017664653, 0.017669569, 0.017675542, 0.017679764, 0.017684319, 0.017687222, 0.017691528, 0.017695861, 0.017701208, 0.017703694, 0.017706083, 0.017710583, 0.017714361, 0.017718292, 0.017722264, 0.017727417, 0.017731694, 0.017736806, 0.017741167, 0.017745444, 0.017750056, 0.017752514, 0.017756903, 0.017762972, 0.017767444, 0.017772861]}</msg>
<status status="PASS" starttime="20201112 12:41:33.893" endtime="20201112 12:41:33.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.889" endtime="20201112 12:41:33.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:33.900" level="INFO">${RESULT} = [{'time': 0.017564347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.017571917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:33.897" endtime="20201112 12:41:33.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:33.908" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:33.901" endtime="20201112 12:41:33.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.913" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:33.912" endtime="20201112 12:41:33.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.915" level="INFO">VALUE: [6.278000000001921e-06, 3.486000000000461e-06, 2.4729999999993646e-06, 4.4999999999975615e-06, 4.596999999998547e-06, 2.473000000002834e-06, 3.7779999999994207e-06, 4.597000000002016e-06, 5.291999999997021e-06, 3.3329999999977267e-06, 5.944000000000782e-06, 5.667000000000866e-06, 4.916000000000642e-06, 4.222000000001641e-06, 2.9029999999985456e-06, 4.332999999998727e-06, 2.485999999999461e-06, 4.4999999999975615e-06, 3.9309999999986855e-06, 5.152999999997326e-06, 5.11200000000156e-06, 4.277000000000447e-06, 2.458000000000321e-06, 6.0689999999974376e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201112 12:41:33.914" endtime="20201112 12:41:33.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.909" endtime="20201112 12:41:33.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.919" endtime="20201112 12:41:33.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:33.923" endtime="20201112 12:41:33.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.921" endtime="20201112 12:41:33.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.917" endtime="20201112 12:41:33.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.551" endtime="20201112 12:41:33.943"></status>
</kw>
<msg timestamp="20201112 12:41:33.944" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.952" endtime="20201112 12:41:33.966"></status>
</kw>
<msg timestamp="20201112 12:41:33.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:33.950" endtime="20201112 12:41:33.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:33.969" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:33.968" endtime="20201112 12:41:33.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.970" endtime="20201112 12:41:33.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.947" endtime="20201112 12:41:33.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.946" endtime="20201112 12:41:33.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:33.980" endtime="20201112 12:41:34.249"></status>
</kw>
<msg timestamp="20201112 12:41:34.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017959, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017962875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:33.978" endtime="20201112 12:41:34.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017959, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017962875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:34.252" endtime="20201112 12:41:34.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.258" endtime="20201112 12:41:34.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.975" endtime="20201112 12:41:34.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.974" endtime="20201112 12:41:34.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.264" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:34.263" endtime="20201112 12:41:34.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.268" level="INFO">VALUE: [{'time': 0.017959, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017962875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017967083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.017973361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.017977153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.017981, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.017983542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.017988333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.017994514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.017999597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.018003819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018009042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.018012681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.018018875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.018021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.018024708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018027542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.018030597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.018033889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.018037458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5689999999984068e-06, 'source_diff': 3.5689999999984068e-06}, {'time': 0.018041444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018047431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.986999999998965e-06, 'source_diff': 5.986999999998965e-06}, {'time': 0.018049958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.018053931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972999999997395e-06, 'source_diff': 3.972999999997395e-06}, {'time': 0.018059819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.888000000002502e-06, 'source_diff': 5.888000000002502e-06}, {'time': 0.018064889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0699999999993806e-06, 'source_diff': 5.0699999999993806e-06}, {'time': 0.018070236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018073833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.018076375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.018082472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018088458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.986000000002961e-06, 'source_diff': 5.986000000002961e-06}, {'time': 0.018093125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018096528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.0180995, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018102444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9439999999977817e-06, 'source_diff': 2.9439999999977817e-06}, {'time': 0.018107083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018112931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.018115778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018121194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.018127167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.018132778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999999117e-06, 'source_diff': 5.610999999999117e-06}, {'time': 0.018137431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018142597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.018145819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018150167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34799999999777e-06, 'source_diff': 4.34799999999777e-06}, {'time': 0.018156319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.152000000002322e-06, 'source_diff': 6.152000000002322e-06}, {'time': 0.018160181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.86200000000031e-06, 'source_diff': 3.86200000000031e-06}, {'time': 0.018165097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018167694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.018173736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:34.266" endtime="20201112 12:41:34.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.261" endtime="20201112 12:41:34.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:34.285" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:34.271" endtime="20201112 12:41:34.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.289" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:34.288" endtime="20201112 12:41:34.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.292" level="INFO">VALUE: {'sourcediff': [0, 3.875000000000406e-06, 4.207999999998602e-06, 6.278000000001921e-06, 3.7919999999989906e-06, 3.847000000001266e-06, 2.54200000000121e-06, 4.790999999997048e-06, 6.181000000000936e-06, 5.082999999999477e-06, 4.222000000001641e-06, 5.222999999998645e-06, 3.6389999999997258e-06, 6.194000000001032e-06, 3.097000000000516e-06, 2.735999999999711e-06, 2.8340000000001697e-06, 3.054999999998337e-06, 3.29200000000196e-06, 3.5689999999984068e-06, 3.986000000000961e-06, 5.986999999998965e-06, 2.5270000000021664e-06, 3.972999999997395e-06, 5.888000000002502e-06, 5.0699999999993806e-06, 5.346999999999297e-06, 3.597000000001016e-06, 2.5419999999977405e-06, 6.097000000000047e-06, 5.986000000002961e-06, 4.666999999999866e-06, 3.4029999999990457e-06, 2.972000000000391e-06, 2.9439999999977817e-06, 4.639000000000726e-06, 5.8479999999992704e-06, 2.847000000000266e-06, 5.416000000001142e-06, 5.9729999999993955e-06, 5.610999999999117e-06, 4.653000000000296e-06, 5.166000000000892e-06, 3.222000000000641e-06, 4.34799999999777e-06, 6.152000000002322e-06, 3.86200000000031e-06, 4.916000000000642e-06, 2.597000000000016e-06, 6.041999999997771e-06], 'source_diff': [0, 3.875000000000406e-06, 4.207999999998602e-06, 6.278000000001921e-06, 3.7919999999989906e-06, 3.847000000001266e-06, 2.54200000000121e-06, 4.790999999997048e-06, 6.181000000000936e-06, 5.082999999999477e-06, 4.222000000001641e-06, 5.222999999998645e-06, 3.6389999999997258e-06, 6.194000000001032e-06, 3.097000000000516e-06, 2.735999999999711e-06, 2.8340000000001697e-06, 3.054999999998337e-06, 3.29200000000196e-06, 3.5689999999984068e-06, 3.986000000000961e-06, 5.986999999998965e-06, 2.5270000000021664e-06, 3.972999999997395e-06, 5.888000000002502e-06, 5.0699999999993806e-06, 5.346999999999297e-06, 3.597000000001016e-06, 2.5419999999977405e-06, 6.097000000000047e-06, 5.986000000002961e-06, 4.666999999999866e-06, 3.4029999999990457e-06, 2.972000000000391e-06, 2.9439999999977817e-06, 4.639000000000726e-06, 5.8479999999992704e-06, 2.847000000000266e-06, 5.416000000001142e-06, 5.9729999999993955e-06, 5.610999999999117e-06, 4.653000000000296e-06, 5.166000000000892e-06, 3.222000000000641e-06, 4.34799999999777e-06, 6.152000000002322e-06, 3.86200000000031e-06, 4.916000000000642e-06, 2.597000000000016e-06, 6.041999999997771e-06], 'eventtime': [0.017959, 0.017962875, 0.017967083, 0.017973361, 0.017977153, 0.017981, 0.017983542, 0.017988333, 0.017994514, 0.017999597, 0.018003819, 0.018009042, 0.018012681, 0.018018875, 0.018021972, 0.018024708, 0.018027542, 0.018030597, 0.018033889, 0.018037458, 0.018041444, 0.018047431, 0.018049958, 0.018053931, 0.018059819, 0.018064889, 0.018070236, 0.018073833, 0.018076375, 0.018082472, 0.018088458, 0.018093125, 0.018096528, 0.0180995, 0.018102444, 0.018107083, 0.018112931, 0.018115778, 0.018121194, 0.018127167, 0.018132778, 0.018137431, 0.018142597, 0.018145819, 0.018150167, 0.018156319, 0.018160181, 0.018165097, 0.018167694, 0.018173736]}</msg>
<status status="PASS" starttime="20201112 12:41:34.290" endtime="20201112 12:41:34.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.286" endtime="20201112 12:41:34.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:34.297" level="INFO">${RESULT} = [{'time': 0.017962875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.017973361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:34.294" endtime="20201112 12:41:34.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:34.305" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:34.298" endtime="20201112 12:41:34.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.309" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:34.308" endtime="20201112 12:41:34.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.312" level="INFO">VALUE: [3.875000000000406e-06, 6.278000000001921e-06, 3.847000000001266e-06, 4.790999999997048e-06, 5.082999999999477e-06, 5.222999999998645e-06, 6.194000000001032e-06, 2.735999999999711e-06, 3.054999999998337e-06, 3.5689999999984068e-06, 5.986999999998965e-06, 3.972999999997395e-06, 5.0699999999993806e-06, 3.597000000001016e-06, 6.097000000000047e-06, 4.666999999999866e-06, 2.972000000000391e-06, 4.639000000000726e-06, 2.847000000000266e-06, 5.9729999999993955e-06, 4.653000000000296e-06, 3.222000000000641e-06, 6.152000000002322e-06, 4.916000000000642e-06, 6.041999999997771e-06]</msg>
<status status="PASS" starttime="20201112 12:41:34.311" endtime="20201112 12:41:34.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.306" endtime="20201112 12:41:34.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.316" endtime="20201112 12:41:34.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:34.319" endtime="20201112 12:41:34.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.317" endtime="20201112 12:41:34.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.314" endtime="20201112 12:41:34.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:33.944" endtime="20201112 12:41:34.340"></status>
</kw>
<msg timestamp="20201112 12:41:34.340" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.348" endtime="20201112 12:41:34.363"></status>
</kw>
<msg timestamp="20201112 12:41:34.364" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:34.347" endtime="20201112 12:41:34.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.366" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:34.365" endtime="20201112 12:41:34.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.367" endtime="20201112 12:41:34.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.344" endtime="20201112 12:41:34.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.342" endtime="20201112 12:41:34.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.377" endtime="20201112 12:41:34.642"></status>
</kw>
<msg timestamp="20201112 12:41:34.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018269361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018271708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:34.375" endtime="20201112 12:41:34.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018269361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018271708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:34.645" endtime="20201112 12:41:34.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.650" endtime="20201112 12:41:34.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.372" endtime="20201112 12:41:34.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.371" endtime="20201112 12:41:34.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.657" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:34.656" endtime="20201112 12:41:34.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.661" level="INFO">VALUE: [{'time': 0.018269361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018271708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018277986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.018281333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018286556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.018291097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.018295167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.018300861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.694000000000532e-06, 'source_diff': 5.694000000000532e-06}, {'time': 0.018306903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.018312653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.018315472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8189999999976567e-06, 'source_diff': 2.8189999999976567e-06}, {'time': 0.018318583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.018322917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.018325903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018331181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.018334722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5410000000027364e-06, 'source_diff': 3.5410000000027364e-06}, {'time': 0.018340069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018345431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.36199999999834e-06, 'source_diff': 5.36199999999834e-06}, {'time': 0.018347833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4020000000020414e-06, 'source_diff': 2.4020000000020414e-06}, {'time': 0.01835275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018357847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018360764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018363625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.018366528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018370333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.01837425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.917000000002585e-06, 'source_diff': 3.917000000002585e-06}, {'time': 0.018377583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3329999999977267e-06, 'source_diff': 3.3329999999977267e-06}, {'time': 0.018379931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.018385472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.018388194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018394194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.018399764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.569999999999881e-06, 'source_diff': 5.569999999999881e-06}, {'time': 0.018406069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305000000001587e-06, 'source_diff': 6.305000000001587e-06}, {'time': 0.018411736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018417833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018420667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8340000000001697e-06, 'source_diff': 2.8340000000001697e-06}, {'time': 0.018423417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.749999999999281e-06, 'source_diff': 2.749999999999281e-06}, {'time': 0.018428056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018430847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.790999999998517e-06, 'source_diff': 2.790999999998517e-06}, {'time': 0.018433458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.018436611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.018440903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.018446681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.018450528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018453403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018457611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.018461167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.018466056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018470472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018474014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:34.658" endtime="20201112 12:41:34.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.654" endtime="20201112 12:41:34.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:34.676" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:34.663" endtime="20201112 12:41:34.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.680" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:34.679" endtime="20201112 12:41:34.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.684" level="INFO">VALUE: {'sourcediff': [0, 2.346999999999766e-06, 6.2779999999984515e-06, 3.347000000000766e-06, 5.222999999998645e-06, 4.541000000000267e-06, 4.07000000000185e-06, 5.694000000000532e-06, 6.041999999997771e-06, 5.750000000002281e-06, 2.8189999999976567e-06, 3.111000000000086e-06, 4.33400000000167e-06, 2.985999999999961e-06, 5.277999999997451e-06, 3.5410000000027364e-06, 5.346999999999297e-06, 5.36199999999834e-06, 2.4020000000020414e-06, 4.917000000000116e-06, 5.096999999999047e-06, 2.917000000001585e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 3.804999999999087e-06, 3.917000000002585e-06, 3.3329999999977267e-06, 2.3479999999992396e-06, 5.541000000001267e-06, 2.722000000000141e-06, 5.999999999999062e-06, 5.569999999999881e-06, 6.305000000001587e-06, 5.667000000000866e-06, 6.097000000000047e-06, 2.8340000000001697e-06, 2.749999999999281e-06, 4.639000000000726e-06, 2.790999999998517e-06, 2.610999999999586e-06, 3.1529999999987957e-06, 4.29200000000296e-06, 5.7779999999979514e-06, 3.847000000001266e-06, 2.874999999999406e-06, 4.207999999998602e-06, 3.55600000000178e-06, 4.889000000000976e-06, 4.416000000000142e-06, 3.5419999999987406e-06], 'source_diff': [0, 2.346999999999766e-06, 6.2779999999984515e-06, 3.347000000000766e-06, 5.222999999998645e-06, 4.541000000000267e-06, 4.07000000000185e-06, 5.694000000000532e-06, 6.041999999997771e-06, 5.750000000002281e-06, 2.8189999999976567e-06, 3.111000000000086e-06, 4.33400000000167e-06, 2.985999999999961e-06, 5.277999999997451e-06, 3.5410000000027364e-06, 5.346999999999297e-06, 5.36199999999834e-06, 2.4020000000020414e-06, 4.917000000000116e-06, 5.096999999999047e-06, 2.917000000001585e-06, 2.860999999999836e-06, 2.9029999999985456e-06, 3.804999999999087e-06, 3.917000000002585e-06, 3.3329999999977267e-06, 2.3479999999992396e-06, 5.541000000001267e-06, 2.722000000000141e-06, 5.999999999999062e-06, 5.569999999999881e-06, 6.305000000001587e-06, 5.667000000000866e-06, 6.097000000000047e-06, 2.8340000000001697e-06, 2.749999999999281e-06, 4.639000000000726e-06, 2.790999999998517e-06, 2.610999999999586e-06, 3.1529999999987957e-06, 4.29200000000296e-06, 5.7779999999979514e-06, 3.847000000001266e-06, 2.874999999999406e-06, 4.207999999998602e-06, 3.55600000000178e-06, 4.889000000000976e-06, 4.416000000000142e-06, 3.5419999999987406e-06], 'eventtime': [0.018269361, 0.018271708, 0.018277986, 0.018281333, 0.018286556, 0.018291097, 0.018295167, 0.018300861, 0.018306903, 0.018312653, 0.018315472, 0.018318583, 0.018322917, 0.018325903, 0.018331181, 0.018334722, 0.018340069, 0.018345431, 0.018347833, 0.01835275, 0.018357847, 0.018360764, 0.018363625, 0.018366528, 0.018370333, 0.01837425, 0.018377583, 0.018379931, 0.018385472, 0.018388194, 0.018394194, 0.018399764, 0.018406069, 0.018411736, 0.018417833, 0.018420667, 0.018423417, 0.018428056, 0.018430847, 0.018433458, 0.018436611, 0.018440903, 0.018446681, 0.018450528, 0.018453403, 0.018457611, 0.018461167, 0.018466056, 0.018470472, 0.018474014]}</msg>
<status status="PASS" starttime="20201112 12:41:34.682" endtime="20201112 12:41:34.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.677" endtime="20201112 12:41:34.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:34.688" level="INFO">${RESULT} = [{'time': 0.018271708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018281333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:34.686" endtime="20201112 12:41:34.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:34.696" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:34.689" endtime="20201112 12:41:34.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.701" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:34.700" endtime="20201112 12:41:34.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.703" level="INFO">VALUE: [2.346999999999766e-06, 3.347000000000766e-06, 4.541000000000267e-06, 5.694000000000532e-06, 5.750000000002281e-06, 3.111000000000086e-06, 2.985999999999961e-06, 3.5410000000027364e-06, 5.36199999999834e-06, 4.917000000000116e-06, 2.917000000001585e-06, 2.9029999999985456e-06, 3.917000000002585e-06, 2.3479999999992396e-06, 2.722000000000141e-06, 5.569999999999881e-06, 5.667000000000866e-06, 2.8340000000001697e-06, 4.639000000000726e-06, 2.610999999999586e-06, 4.29200000000296e-06, 3.847000000001266e-06, 4.207999999998602e-06, 4.889000000000976e-06, 3.5419999999987406e-06]</msg>
<status status="PASS" starttime="20201112 12:41:34.702" endtime="20201112 12:41:34.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.697" endtime="20201112 12:41:34.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.707" endtime="20201112 12:41:34.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:34.710" endtime="20201112 12:41:34.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.709" endtime="20201112 12:41:34.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.705" endtime="20201112 12:41:34.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.341" endtime="20201112 12:41:34.731"></status>
</kw>
<msg timestamp="20201112 12:41:34.731" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.739" endtime="20201112 12:41:34.753"></status>
</kw>
<msg timestamp="20201112 12:41:34.754" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:34.738" endtime="20201112 12:41:34.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:34.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:34.755" endtime="20201112 12:41:34.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.757" endtime="20201112 12:41:34.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.735" endtime="20201112 12:41:34.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.733" endtime="20201112 12:41:34.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:34.768" endtime="20201112 12:41:35.037"></status>
</kw>
<msg timestamp="20201112 12:41:35.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017949292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:34.766" endtime="20201112 12:41:35.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017949292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:35.040" endtime="20201112 12:41:35.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.046" endtime="20201112 12:41:35.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.762" endtime="20201112 12:41:35.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.761" endtime="20201112 12:41:35.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.053" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:35.052" endtime="20201112 12:41:35.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.056" level="INFO">VALUE: [{'time': 0.017949292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017952208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.017956181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.017959903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.017964056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.017966792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.017971903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017975431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.017979847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.017984389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.017990667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.017993417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.017998, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018000778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7779999999984206e-06, 'source_diff': 2.7779999999984206e-06}, {'time': 0.018005194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018007556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.362000000002279e-06, 'source_diff': 2.362000000002279e-06}, {'time': 0.018011097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.540999999999267e-06, 'source_diff': 3.540999999999267e-06}, {'time': 0.018014306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2090000000005448e-06, 'source_diff': 3.2090000000005448e-06}, {'time': 0.018018236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.018022528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018027806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.278000000000921e-06, 'source_diff': 5.278000000000921e-06}, {'time': 0.018033667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018036264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.018041861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018046694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018052111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018055069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.958000000000821e-06, 'source_diff': 2.958000000000821e-06}, {'time': 0.018058333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.018061417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0840000000004197e-06, 'source_diff': 3.0840000000004197e-06}, {'time': 0.018063986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.018067944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.018073972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.028000000001671e-06, 'source_diff': 6.028000000001671e-06}, {'time': 0.018077389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018080542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.153000000002265e-06, 'source_diff': 3.153000000002265e-06}, {'time': 0.018085639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018091056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018094528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4719999999974216e-06, 'source_diff': 3.4719999999974216e-06}, {'time': 0.01809825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018101819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5690000000018762e-06, 'source_diff': 3.5690000000018762e-06}, {'time': 0.018107972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018113556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.018118542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018120903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018123236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.333000000000196e-06, 'source_diff': 2.333000000000196e-06}, {'time': 0.018128264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018134069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.018139736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018144569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018147792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2230000000001147e-06, 'source_diff': 3.2230000000001147e-06}, {'time': 0.018152292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:35.054" endtime="20201112 12:41:35.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.049" endtime="20201112 12:41:35.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:35.072" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:35.059" endtime="20201112 12:41:35.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.076" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:35.075" endtime="20201112 12:41:35.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.079" level="INFO">VALUE: {'sourcediff': [0, 2.9160000000021113e-06, 3.973000000000865e-06, 3.7219999999976716e-06, 4.152999999999796e-06, 2.735999999999711e-06, 5.111000000002086e-06, 3.5279999999991707e-06, 4.416000000000142e-06, 4.541999999999741e-06, 6.2779999999984515e-06, 2.7500000000027502e-06, 4.582999999998977e-06, 2.7779999999984206e-06, 4.416000000000142e-06, 2.362000000002279e-06, 3.540999999999267e-06, 3.2090000000005448e-06, 3.929999999999212e-06, 4.291999999999491e-06, 5.278000000000921e-06, 5.860999999999367e-06, 2.597000000000016e-06, 5.596999999999547e-06, 4.832999999999227e-06, 5.417000000000616e-06, 2.958000000000821e-06, 3.2639999999993508e-06, 3.0840000000004197e-06, 2.569000000000876e-06, 3.957999999998352e-06, 6.028000000001671e-06, 3.4169999999986156e-06, 3.153000000002265e-06, 5.096999999999047e-06, 5.417000000000616e-06, 3.4719999999974216e-06, 3.722000000001141e-06, 3.5690000000018762e-06, 6.1529999999983265e-06, 5.5839999999994505e-06, 4.986000000001961e-06, 2.360999999999336e-06, 2.333000000000196e-06, 5.028000000000671e-06, 5.804999999997618e-06, 5.667000000000866e-06, 4.832999999999227e-06, 3.2230000000001147e-06, 4.500000000001031e-06], 'source_diff': [0, 2.9160000000021113e-06, 3.973000000000865e-06, 3.7219999999976716e-06, 4.152999999999796e-06, 2.735999999999711e-06, 5.111000000002086e-06, 3.5279999999991707e-06, 4.416000000000142e-06, 4.541999999999741e-06, 6.2779999999984515e-06, 2.7500000000027502e-06, 4.582999999998977e-06, 2.7779999999984206e-06, 4.416000000000142e-06, 2.362000000002279e-06, 3.540999999999267e-06, 3.2090000000005448e-06, 3.929999999999212e-06, 4.291999999999491e-06, 5.278000000000921e-06, 5.860999999999367e-06, 2.597000000000016e-06, 5.596999999999547e-06, 4.832999999999227e-06, 5.417000000000616e-06, 2.958000000000821e-06, 3.2639999999993508e-06, 3.0840000000004197e-06, 2.569000000000876e-06, 3.957999999998352e-06, 6.028000000001671e-06, 3.4169999999986156e-06, 3.153000000002265e-06, 5.096999999999047e-06, 5.417000000000616e-06, 3.4719999999974216e-06, 3.722000000001141e-06, 3.5690000000018762e-06, 6.1529999999983265e-06, 5.5839999999994505e-06, 4.986000000001961e-06, 2.360999999999336e-06, 2.333000000000196e-06, 5.028000000000671e-06, 5.804999999997618e-06, 5.667000000000866e-06, 4.832999999999227e-06, 3.2230000000001147e-06, 4.500000000001031e-06], 'eventtime': [0.017949292, 0.017952208, 0.017956181, 0.017959903, 0.017964056, 0.017966792, 0.017971903, 0.017975431, 0.017979847, 0.017984389, 0.017990667, 0.017993417, 0.017998, 0.018000778, 0.018005194, 0.018007556, 0.018011097, 0.018014306, 0.018018236, 0.018022528, 0.018027806, 0.018033667, 0.018036264, 0.018041861, 0.018046694, 0.018052111, 0.018055069, 0.018058333, 0.018061417, 0.018063986, 0.018067944, 0.018073972, 0.018077389, 0.018080542, 0.018085639, 0.018091056, 0.018094528, 0.01809825, 0.018101819, 0.018107972, 0.018113556, 0.018118542, 0.018120903, 0.018123236, 0.018128264, 0.018134069, 0.018139736, 0.018144569, 0.018147792, 0.018152292]}</msg>
<status status="PASS" starttime="20201112 12:41:35.077" endtime="20201112 12:41:35.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.073" endtime="20201112 12:41:35.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:35.084" level="INFO">${RESULT} = [{'time': 0.017952208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9160000000021113e-06, 'source_diff': 2.9160000000021113e-06}, {'time': 0.017959903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:35.081" endtime="20201112 12:41:35.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:35.092" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:35.085" endtime="20201112 12:41:35.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.096" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:35.095" endtime="20201112 12:41:35.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.099" level="INFO">VALUE: [2.9160000000021113e-06, 3.7219999999976716e-06, 2.735999999999711e-06, 3.5279999999991707e-06, 4.541999999999741e-06, 2.7500000000027502e-06, 2.7779999999984206e-06, 2.362000000002279e-06, 3.2090000000005448e-06, 4.291999999999491e-06, 5.860999999999367e-06, 5.596999999999547e-06, 5.417000000000616e-06, 3.2639999999993508e-06, 2.569000000000876e-06, 6.028000000001671e-06, 3.153000000002265e-06, 5.417000000000616e-06, 3.722000000001141e-06, 6.1529999999983265e-06, 4.986000000001961e-06, 2.333000000000196e-06, 5.804999999997618e-06, 4.832999999999227e-06, 4.500000000001031e-06]</msg>
<status status="PASS" starttime="20201112 12:41:35.097" endtime="20201112 12:41:35.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.093" endtime="20201112 12:41:35.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.102" endtime="20201112 12:41:35.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:35.106" endtime="20201112 12:41:35.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.104" endtime="20201112 12:41:35.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.101" endtime="20201112 12:41:35.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:34.732" endtime="20201112 12:41:35.127"></status>
</kw>
<msg timestamp="20201112 12:41:35.127" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.135" endtime="20201112 12:41:35.150"></status>
</kw>
<msg timestamp="20201112 12:41:35.150" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:35.133" endtime="20201112 12:41:35.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.153" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:35.151" endtime="20201112 12:41:35.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.154" endtime="20201112 12:41:35.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.131" endtime="20201112 12:41:35.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.129" endtime="20201112 12:41:35.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.164" endtime="20201112 12:41:35.437"></status>
</kw>
<msg timestamp="20201112 12:41:35.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017950569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:35.162" endtime="20201112 12:41:35.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017950569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:35.440" endtime="20201112 12:41:35.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.446" endtime="20201112 12:41:35.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.160" endtime="20201112 12:41:35.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.158" endtime="20201112 12:41:35.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.452" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:35.451" endtime="20201112 12:41:35.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.456" level="INFO">VALUE: [{'time': 0.017950569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017956278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.017961125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.01796425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.124999999999656e-06, 'source_diff': 3.124999999999656e-06}, {'time': 0.017967222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.017971, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.017974694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.017980444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.750000000002281e-06, 'source_diff': 5.750000000002281e-06}, {'time': 0.017986306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.86199999999884e-06, 'source_diff': 5.86199999999884e-06}, {'time': 0.017989153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.017992764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.017997319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.018001403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.08399999999795e-06, 'source_diff': 4.08399999999795e-06}, {'time': 0.018005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.018007528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.018010375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018013917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.018019194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.018024736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018030278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018033389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.018036931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018039958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.018043556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.018048333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000000947e-06, 'source_diff': 4.777000000000947e-06}, {'time': 0.018052194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018057972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.018060778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.018067056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.278000000001921e-06, 'source_diff': 6.278000000001921e-06}, {'time': 0.018072875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.018076625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.018080486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018085958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.018088375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.018092014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.018095819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.804999999999087e-06, 'source_diff': 3.804999999999087e-06}, {'time': 0.018098167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.018103653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.01810875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018111653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.018116944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.018122542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018127403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018129931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.018134792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.018139764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018145903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.018149986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.082999999998477e-06, 'source_diff': 4.082999999998477e-06}, {'time': 0.018153764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.018157917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:35.454" endtime="20201112 12:41:35.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.449" endtime="20201112 12:41:35.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:35.473" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:35.459" endtime="20201112 12:41:35.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.477" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:35.476" endtime="20201112 12:41:35.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.480" level="INFO">VALUE: {'sourcediff': [0, 5.7089999999995755e-06, 4.847000000002266e-06, 3.124999999999656e-06, 2.972000000000391e-06, 3.7779999999994207e-06, 3.693999999998532e-06, 5.750000000002281e-06, 5.86199999999884e-06, 2.847000000000266e-06, 3.611000000000586e-06, 4.554999999999837e-06, 4.08399999999795e-06, 3.597000000001016e-06, 2.5279999999981706e-06, 2.847000000000266e-06, 3.54200000000221e-06, 5.276999999997978e-06, 5.542000000000741e-06, 5.542000000000741e-06, 3.111000000000086e-06, 3.5419999999987406e-06, 3.026999999999197e-06, 3.5980000000004897e-06, 4.777000000000947e-06, 3.861000000000836e-06, 5.7779999999979514e-06, 2.80600000000103e-06, 6.278000000001921e-06, 5.8189999999971875e-06, 3.750000000000281e-06, 3.861000000000836e-06, 5.471999999999422e-06, 2.417000000001085e-06, 3.6389999999997258e-06, 3.804999999999087e-06, 2.3479999999992396e-06, 5.486000000002461e-06, 5.096999999999047e-06, 2.9029999999985456e-06, 5.291000000001017e-06, 5.5979999999990204e-06, 4.861000000001836e-06, 2.5279999999981706e-06, 4.861000000001836e-06, 4.971999999998922e-06, 6.139000000002226e-06, 4.082999999998477e-06, 3.7779999999994207e-06, 4.152999999999796e-06], 'source_diff': [0, 5.7089999999995755e-06, 4.847000000002266e-06, 3.124999999999656e-06, 2.972000000000391e-06, 3.7779999999994207e-06, 3.693999999998532e-06, 5.750000000002281e-06, 5.86199999999884e-06, 2.847000000000266e-06, 3.611000000000586e-06, 4.554999999999837e-06, 4.08399999999795e-06, 3.597000000001016e-06, 2.5279999999981706e-06, 2.847000000000266e-06, 3.54200000000221e-06, 5.276999999997978e-06, 5.542000000000741e-06, 5.542000000000741e-06, 3.111000000000086e-06, 3.5419999999987406e-06, 3.026999999999197e-06, 3.5980000000004897e-06, 4.777000000000947e-06, 3.861000000000836e-06, 5.7779999999979514e-06, 2.80600000000103e-06, 6.278000000001921e-06, 5.8189999999971875e-06, 3.750000000000281e-06, 3.861000000000836e-06, 5.471999999999422e-06, 2.417000000001085e-06, 3.6389999999997258e-06, 3.804999999999087e-06, 2.3479999999992396e-06, 5.486000000002461e-06, 5.096999999999047e-06, 2.9029999999985456e-06, 5.291000000001017e-06, 5.5979999999990204e-06, 4.861000000001836e-06, 2.5279999999981706e-06, 4.861000000001836e-06, 4.971999999998922e-06, 6.139000000002226e-06, 4.082999999998477e-06, 3.7779999999994207e-06, 4.152999999999796e-06], 'eventtime': [0.017950569, 0.017956278, 0.017961125, 0.01796425, 0.017967222, 0.017971, 0.017974694, 0.017980444, 0.017986306, 0.017989153, 0.017992764, 0.017997319, 0.018001403, 0.018005, 0.018007528, 0.018010375, 0.018013917, 0.018019194, 0.018024736, 0.018030278, 0.018033389, 0.018036931, 0.018039958, 0.018043556, 0.018048333, 0.018052194, 0.018057972, 0.018060778, 0.018067056, 0.018072875, 0.018076625, 0.018080486, 0.018085958, 0.018088375, 0.018092014, 0.018095819, 0.018098167, 0.018103653, 0.01810875, 0.018111653, 0.018116944, 0.018122542, 0.018127403, 0.018129931, 0.018134792, 0.018139764, 0.018145903, 0.018149986, 0.018153764, 0.018157917]}</msg>
<status status="PASS" starttime="20201112 12:41:35.478" endtime="20201112 12:41:35.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.474" endtime="20201112 12:41:35.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:35.485" level="INFO">${RESULT} = [{'time': 0.017956278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.01796425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:41:35.482" endtime="20201112 12:41:35.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:35.493" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:35.486" endtime="20201112 12:41:35.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.497" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:35.496" endtime="20201112 12:41:35.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.500" level="INFO">VALUE: [5.7089999999995755e-06, 3.124999999999656e-06, 3.7779999999994207e-06, 5.750000000002281e-06, 2.847000000000266e-06, 4.554999999999837e-06, 3.597000000001016e-06, 2.847000000000266e-06, 5.276999999997978e-06, 5.542000000000741e-06, 3.5419999999987406e-06, 3.5980000000004897e-06, 3.861000000000836e-06, 2.80600000000103e-06, 5.8189999999971875e-06, 3.861000000000836e-06, 2.417000000001085e-06, 3.804999999999087e-06, 5.486000000002461e-06, 2.9029999999985456e-06, 5.5979999999990204e-06, 2.5279999999981706e-06, 4.971999999998922e-06, 4.082999999998477e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201112 12:41:35.498" endtime="20201112 12:41:35.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.494" endtime="20201112 12:41:35.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.503" endtime="20201112 12:41:35.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:35.507" endtime="20201112 12:41:35.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.505" endtime="20201112 12:41:35.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.502" endtime="20201112 12:41:35.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.127" endtime="20201112 12:41:35.528"></status>
</kw>
<msg timestamp="20201112 12:41:35.528" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.537" endtime="20201112 12:41:35.551"></status>
</kw>
<msg timestamp="20201112 12:41:35.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:35.535" endtime="20201112 12:41:35.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.554" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:35.553" endtime="20201112 12:41:35.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.555" endtime="20201112 12:41:35.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.532" endtime="20201112 12:41:35.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.530" endtime="20201112 12:41:35.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.565" endtime="20201112 12:41:35.834"></status>
</kw>
<msg timestamp="20201112 12:41:35.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018797014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018801986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:35.563" endtime="20201112 12:41:35.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018797014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018801986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:35.837" endtime="20201112 12:41:35.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.842" endtime="20201112 12:41:35.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.560" endtime="20201112 12:41:35.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.559" endtime="20201112 12:41:35.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.849" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:35.848" endtime="20201112 12:41:35.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.853" level="INFO">VALUE: [{'time': 0.018797014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018801986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018807028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018812319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291000000001017e-06, 'source_diff': 5.291000000001017e-06}, {'time': 0.018817472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.018821014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.018827306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.018831528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.018840347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.346999999999297e-06, 'source_diff': 5.346999999999297e-06}, {'time': 0.018844639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018849194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.554999999999837e-06, 'source_diff': 4.554999999999837e-06}, {'time': 0.018852597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.01885875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.018864792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.018870472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.018873931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4590000000007948e-06, 'source_diff': 3.4590000000007948e-06}, {'time': 0.018878028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.01888075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018883542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7919999999979905e-06, 'source_diff': 2.7919999999979905e-06}, {'time': 0.018887458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.0188935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018896472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018901389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018904917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018908333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018913014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.680999999999436e-06, 'source_diff': 4.680999999999436e-06}, {'time': 0.018917931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018921153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018925306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018929542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018933389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.846999999997797e-06, 'source_diff': 3.846999999997797e-06}, {'time': 0.018936792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.018939639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018943125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.486000000000461e-06, 'source_diff': 3.486000000000461e-06}, {'time': 0.018948208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.01895325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018957736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.018961514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999994207e-06, 'source_diff': 3.7779999999994207e-06}, {'time': 0.018967361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018971597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018975444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018979722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018983139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.018989361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018995528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.018999208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.019004236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.019006639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.019009556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:35.850" endtime="20201112 12:41:35.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.846" endtime="20201112 12:41:35.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:35.869" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:35.855" endtime="20201112 12:41:35.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.873" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:35.872" endtime="20201112 12:41:35.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.876" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.971999999998922e-06, 5.042000000000241e-06, 5.291000000001017e-06, 5.152999999997326e-06, 3.54200000000221e-06, 6.291999999998021e-06, 4.222000000001641e-06, 3.472000000000891e-06, 5.346999999999297e-06, 4.291999999999491e-06, 4.554999999999837e-06, 3.4029999999990457e-06, 6.153000000001796e-06, 6.041999999997771e-06, 5.680000000000962e-06, 3.4590000000007948e-06, 4.097000000001516e-06, 2.722000000000141e-06, 2.7919999999979905e-06, 3.915999999999642e-06, 6.042000000001241e-06, 2.972000000000391e-06, 4.917000000000116e-06, 3.5279999999991707e-06, 3.415999999999142e-06, 4.680999999999436e-06, 4.917000000000116e-06, 3.222000000000641e-06, 4.152999999999796e-06, 4.236000000001211e-06, 3.846999999997797e-06, 3.403000000002515e-06, 2.847000000000266e-06, 3.486000000000461e-06, 5.082999999999477e-06, 5.042000000000241e-06, 4.485999999997992e-06, 3.7779999999994207e-06, 5.846999999999797e-06, 4.236000000001211e-06, 3.847000000001266e-06, 4.277999999999921e-06, 3.4169999999986156e-06, 6.222000000000172e-06, 6.167000000001366e-06, 3.679999999998962e-06, 5.028000000000671e-06, 2.4029999999980456e-06, 2.917000000001585e-06], 'source_diff': [0, 4.971999999998922e-06, 5.042000000000241e-06, 5.291000000001017e-06, 5.152999999997326e-06, 3.54200000000221e-06, 6.291999999998021e-06, 4.222000000001641e-06, 3.472000000000891e-06, 5.346999999999297e-06, 4.291999999999491e-06, 4.554999999999837e-06, 3.4029999999990457e-06, 6.153000000001796e-06, 6.041999999997771e-06, 5.680000000000962e-06, 3.4590000000007948e-06, 4.097000000001516e-06, 2.722000000000141e-06, 2.7919999999979905e-06, 3.915999999999642e-06, 6.042000000001241e-06, 2.972000000000391e-06, 4.917000000000116e-06, 3.5279999999991707e-06, 3.415999999999142e-06, 4.680999999999436e-06, 4.917000000000116e-06, 3.222000000000641e-06, 4.152999999999796e-06, 4.236000000001211e-06, 3.846999999997797e-06, 3.403000000002515e-06, 2.847000000000266e-06, 3.486000000000461e-06, 5.082999999999477e-06, 5.042000000000241e-06, 4.485999999997992e-06, 3.7779999999994207e-06, 5.846999999999797e-06, 4.236000000001211e-06, 3.847000000001266e-06, 4.277999999999921e-06, 3.4169999999986156e-06, 6.222000000000172e-06, 6.167000000001366e-06, 3.679999999998962e-06, 5.028000000000671e-06, 2.4029999999980456e-06, 2.917000000001585e-06], 'eventtime': [0.018797014, 0.018801986, 0.018807028, 0.018812319, 0.018817472, 0.018821014, 0.018827306, 0.018831528, 0.018835, 0.018840347, 0.018844639, 0.018849194, 0.018852597, 0.01885875, 0.018864792, 0.018870472, 0.018873931, 0.018878028, 0.01888075, 0.018883542, 0.018887458, 0.0188935, 0.018896472, 0.018901389, 0.018904917, 0.018908333, 0.018913014, 0.018917931, 0.018921153, 0.018925306, 0.018929542, 0.018933389, 0.018936792, 0.018939639, 0.018943125, 0.018948208, 0.01895325, 0.018957736, 0.018961514, 0.018967361, 0.018971597, 0.018975444, 0.018979722, 0.018983139, 0.018989361, 0.018995528, 0.018999208, 0.019004236, 0.019006639, 0.019009556]}</msg>
<status status="PASS" starttime="20201112 12:41:35.874" endtime="20201112 12:41:35.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.870" endtime="20201112 12:41:35.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:35.880" level="INFO">${RESULT} = [{'time': 0.018801986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018812319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:35.878" endtime="20201112 12:41:35.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:35.889" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:35.881" endtime="20201112 12:41:35.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.893" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:35.892" endtime="20201112 12:41:35.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.895" level="INFO">VALUE: [4.971999999998922e-06, 5.291000000001017e-06, 3.54200000000221e-06, 4.222000000001641e-06, 5.346999999999297e-06, 4.554999999999837e-06, 6.153000000001796e-06, 5.680000000000962e-06, 4.097000000001516e-06, 2.7919999999979905e-06, 6.042000000001241e-06, 4.917000000000116e-06, 3.415999999999142e-06, 4.917000000000116e-06, 4.152999999999796e-06, 3.846999999997797e-06, 2.847000000000266e-06, 5.082999999999477e-06, 4.485999999997992e-06, 5.846999999999797e-06, 3.847000000001266e-06, 3.4169999999986156e-06, 6.167000000001366e-06, 5.028000000000671e-06, 2.917000000001585e-06]</msg>
<status status="PASS" starttime="20201112 12:41:35.894" endtime="20201112 12:41:35.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.890" endtime="20201112 12:41:35.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.899" endtime="20201112 12:41:35.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:35.903" endtime="20201112 12:41:35.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.901" endtime="20201112 12:41:35.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.897" endtime="20201112 12:41:35.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.528" endtime="20201112 12:41:35.924"></status>
</kw>
<msg timestamp="20201112 12:41:35.924" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.932" endtime="20201112 12:41:35.946"></status>
</kw>
<msg timestamp="20201112 12:41:35.947" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:35.931" endtime="20201112 12:41:35.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:35.949" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:35.948" endtime="20201112 12:41:35.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.950" endtime="20201112 12:41:35.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.928" endtime="20201112 12:41:35.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.926" endtime="20201112 12:41:35.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:35.960" endtime="20201112 12:41:36.230"></status>
</kw>
<msg timestamp="20201112 12:41:36.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018630222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018633028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:35.958" endtime="20201112 12:41:36.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018630222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018633028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:36.233" endtime="20201112 12:41:36.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.238" endtime="20201112 12:41:36.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.956" endtime="20201112 12:41:36.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.954" endtime="20201112 12:41:36.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.245" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:36.244" endtime="20201112 12:41:36.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.249" level="INFO">VALUE: [{'time': 0.018630222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018633028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.018637417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.018640333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.915999999998642e-06, 'source_diff': 2.915999999998642e-06}, {'time': 0.01864475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.417000000003085e-06, 'source_diff': 4.417000000003085e-06}, {'time': 0.018650806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055999999997341e-06, 'source_diff': 6.055999999997341e-06}, {'time': 0.018654514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.708000000001571e-06, 'source_diff': 3.708000000001571e-06}, {'time': 0.018657236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018660153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.018664056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018668667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.018674889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018679361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018682097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.018687069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018692417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34799999999877e-06, 'source_diff': 5.34799999999877e-06}, {'time': 0.018696639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018702625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018707722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.018712444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.722000000002141e-06, 'source_diff': 4.722000000002141e-06}, {'time': 0.018715917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4729999999968952e-06, 'source_diff': 3.4729999999968952e-06}, {'time': 0.01872025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.018723875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.018728472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.596999999998547e-06, 'source_diff': 4.596999999998547e-06}, {'time': 0.018732625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018735139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.018739722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999998977e-06, 'source_diff': 4.582999999998977e-06}, {'time': 0.018742736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.018745722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.018749833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018752861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.018757708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018761806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.018765153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.01877125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018776667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018780833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.01878675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018791306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999999311e-06, 'source_diff': 4.555999999999311e-06}, {'time': 0.018796569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.262999999998408e-06, 'source_diff': 5.262999999998408e-06}, {'time': 0.018802556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.987000000002435e-06, 'source_diff': 5.987000000002435e-06}, {'time': 0.018806389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.018812306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.018815181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.018820264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999999477e-06, 'source_diff': 5.082999999999477e-06}, {'time': 0.018825694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.430000000000712e-06, 'source_diff': 5.430000000000712e-06}, {'time': 0.018828542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.018833694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.018839597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9029999999980765e-06, 'source_diff': 5.9029999999980765e-06}, {'time': 0.018843458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:36.246" endtime="20201112 12:41:36.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.241" endtime="20201112 12:41:36.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:36.264" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:36.251" endtime="20201112 12:41:36.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.268" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:36.267" endtime="20201112 12:41:36.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.272" level="INFO">VALUE: {'sourcediff': [0, 2.80600000000103e-06, 4.389000000000476e-06, 2.915999999998642e-06, 4.417000000003085e-06, 6.055999999997341e-06, 3.708000000001571e-06, 2.722000000000141e-06, 2.9169999999981155e-06, 3.902999999999546e-06, 4.611000000001586e-06, 6.222000000000172e-06, 4.471999999998422e-06, 2.7360000000031803e-06, 4.971999999998922e-06, 5.34799999999877e-06, 4.222000000001641e-06, 5.985999999999492e-06, 5.096999999999047e-06, 4.722000000002141e-06, 3.4729999999968952e-06, 4.333000000002196e-06, 3.625000000000156e-06, 4.596999999998547e-06, 4.152999999999796e-06, 2.51400000000207e-06, 4.582999999998977e-06, 3.0139999999991007e-06, 2.985999999999961e-06, 4.111000000001086e-06, 3.0279999999986706e-06, 4.847000000002266e-06, 4.09799999999752e-06, 3.347000000000766e-06, 6.097000000000047e-06, 5.417000000000616e-06, 4.165999999999892e-06, 5.917000000001116e-06, 4.555999999999311e-06, 5.262999999998408e-06, 5.987000000002435e-06, 3.832999999998227e-06, 5.917000000001116e-06, 2.874999999999406e-06, 5.082999999999477e-06, 5.430000000000712e-06, 2.8479999999997396e-06, 5.152000000001322e-06, 5.9029999999980765e-06, 3.861000000000836e-06], 'source_diff': [0, 2.80600000000103e-06, 4.389000000000476e-06, 2.915999999998642e-06, 4.417000000003085e-06, 6.055999999997341e-06, 3.708000000001571e-06, 2.722000000000141e-06, 2.9169999999981155e-06, 3.902999999999546e-06, 4.611000000001586e-06, 6.222000000000172e-06, 4.471999999998422e-06, 2.7360000000031803e-06, 4.971999999998922e-06, 5.34799999999877e-06, 4.222000000001641e-06, 5.985999999999492e-06, 5.096999999999047e-06, 4.722000000002141e-06, 3.4729999999968952e-06, 4.333000000002196e-06, 3.625000000000156e-06, 4.596999999998547e-06, 4.152999999999796e-06, 2.51400000000207e-06, 4.582999999998977e-06, 3.0139999999991007e-06, 2.985999999999961e-06, 4.111000000001086e-06, 3.0279999999986706e-06, 4.847000000002266e-06, 4.09799999999752e-06, 3.347000000000766e-06, 6.097000000000047e-06, 5.417000000000616e-06, 4.165999999999892e-06, 5.917000000001116e-06, 4.555999999999311e-06, 5.262999999998408e-06, 5.987000000002435e-06, 3.832999999998227e-06, 5.917000000001116e-06, 2.874999999999406e-06, 5.082999999999477e-06, 5.430000000000712e-06, 2.8479999999997396e-06, 5.152000000001322e-06, 5.9029999999980765e-06, 3.861000000000836e-06], 'eventtime': [0.018630222, 0.018633028, 0.018637417, 0.018640333, 0.01864475, 0.018650806, 0.018654514, 0.018657236, 0.018660153, 0.018664056, 0.018668667, 0.018674889, 0.018679361, 0.018682097, 0.018687069, 0.018692417, 0.018696639, 0.018702625, 0.018707722, 0.018712444, 0.018715917, 0.01872025, 0.018723875, 0.018728472, 0.018732625, 0.018735139, 0.018739722, 0.018742736, 0.018745722, 0.018749833, 0.018752861, 0.018757708, 0.018761806, 0.018765153, 0.01877125, 0.018776667, 0.018780833, 0.01878675, 0.018791306, 0.018796569, 0.018802556, 0.018806389, 0.018812306, 0.018815181, 0.018820264, 0.018825694, 0.018828542, 0.018833694, 0.018839597, 0.018843458]}</msg>
<status status="PASS" starttime="20201112 12:41:36.270" endtime="20201112 12:41:36.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.265" endtime="20201112 12:41:36.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:36.276" level="INFO">${RESULT} = [{'time': 0.018633028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.018640333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:41:36.273" endtime="20201112 12:41:36.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:36.285" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:36.277" endtime="20201112 12:41:36.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.289" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:36.288" endtime="20201112 12:41:36.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.292" level="INFO">VALUE: [2.80600000000103e-06, 2.915999999998642e-06, 6.055999999997341e-06, 2.722000000000141e-06, 3.902999999999546e-06, 6.222000000000172e-06, 2.7360000000031803e-06, 5.34799999999877e-06, 5.985999999999492e-06, 4.722000000002141e-06, 4.333000000002196e-06, 4.596999999998547e-06, 2.51400000000207e-06, 3.0139999999991007e-06, 4.111000000001086e-06, 4.847000000002266e-06, 3.347000000000766e-06, 5.417000000000616e-06, 5.917000000001116e-06, 5.262999999998408e-06, 3.832999999998227e-06, 2.874999999999406e-06, 5.430000000000712e-06, 5.152000000001322e-06, 3.861000000000836e-06]</msg>
<status status="PASS" starttime="20201112 12:41:36.290" endtime="20201112 12:41:36.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.286" endtime="20201112 12:41:36.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.295" endtime="20201112 12:41:36.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:36.299" endtime="20201112 12:41:36.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.297" endtime="20201112 12:41:36.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.293" endtime="20201112 12:41:36.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:35.925" endtime="20201112 12:41:36.320"></status>
</kw>
<msg timestamp="20201112 12:41:36.320" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.328" endtime="20201112 12:41:36.341"></status>
</kw>
<msg timestamp="20201112 12:41:36.342" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:36.326" endtime="20201112 12:41:36.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:36.343" endtime="20201112 12:41:36.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.346" endtime="20201112 12:41:36.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.323" endtime="20201112 12:41:36.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.322" endtime="20201112 12:41:36.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.355" endtime="20201112 12:41:36.622"></status>
</kw>
<msg timestamp="20201112 12:41:36.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0180745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018079875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:41:36.354" endtime="20201112 12:41:36.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0180745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018079875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:41:36.625" endtime="20201112 12:41:36.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.631" endtime="20201112 12:41:36.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.351" endtime="20201112 12:41:36.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.349" endtime="20201112 12:41:36.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.637" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:36.636" endtime="20201112 12:41:36.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.641" level="INFO">VALUE: [{'time': 0.0180745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018079875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018083764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.018088431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018091792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018097944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.152000000002322e-06, 'source_diff': 6.152000000002322e-06}, {'time': 0.018102917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.018108167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018111125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.018114542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.018119958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.018123361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.403000000002515e-06, 'source_diff': 3.403000000002515e-06}, {'time': 0.018125833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018131944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.110999999999617e-06, 'source_diff': 6.110999999999617e-06}, {'time': 0.018135139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.195000000000975e-06, 'source_diff': 3.195000000000975e-06}, {'time': 0.018141431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.018147681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.018152778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018156944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018163097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018168944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018172736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7919999999989906e-06, 'source_diff': 3.7919999999989906e-06}, {'time': 0.018175653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.018179069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.018181417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.018185278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018187681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018192542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.018197194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018202167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.973000000001865e-06, 'source_diff': 4.973000000001865e-06}, {'time': 0.018208125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9579999999968825e-06, 'source_diff': 5.9579999999968825e-06}, {'time': 0.018212444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.018215972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5279999999991707e-06, 'source_diff': 3.5279999999991707e-06}, {'time': 0.018220694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.018226542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8479999999992704e-06, 'source_diff': 5.8479999999992704e-06}, {'time': 0.018230347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.0182355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018240236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.018245694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.457999999999852e-06, 'source_diff': 5.457999999999852e-06}, {'time': 0.018249667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.018254556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.018260125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5689999999969375e-06, 'source_diff': 5.5689999999969375e-06}, {'time': 0.018266347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018270278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.018274111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}, {'time': 0.018280333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018285875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.542000000000741e-06, 'source_diff': 5.542000000000741e-06}, {'time': 0.018289222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.018293389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.018299181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.792000000000991e-06, 'source_diff': 5.792000000000991e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:36.638" endtime="20201112 12:41:36.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.634" endtime="20201112 12:41:36.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:36.658" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:36.643" endtime="20201112 12:41:36.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.662" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:36.661" endtime="20201112 12:41:36.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.665" level="INFO">VALUE: {'sourcediff': [0, 5.374999999998437e-06, 3.888999999999976e-06, 4.666999999999866e-06, 3.361000000000336e-06, 6.152000000002322e-06, 4.972999999998395e-06, 5.250000000001781e-06, 2.9579999999973516e-06, 3.417000000002085e-06, 5.415999999997673e-06, 3.403000000002515e-06, 2.471999999999891e-06, 6.110999999999617e-06, 3.195000000000975e-06, 6.291999999998021e-06, 6.249999999999312e-06, 5.097000000002516e-06, 4.165999999999892e-06, 6.1529999999983265e-06, 5.846999999999797e-06, 3.7919999999989906e-06, 2.917000000001585e-06, 3.415999999999142e-06, 2.3479999999992396e-06, 3.861000000000836e-06, 2.403000000001515e-06, 4.860999999998367e-06, 4.652000000000822e-06, 4.973000000001865e-06, 5.9579999999968825e-06, 4.319000000002626e-06, 3.5279999999991707e-06, 4.721999999998672e-06, 5.8479999999992704e-06, 3.8050000000025563e-06, 5.153000000000796e-06, 4.735999999998242e-06, 5.457999999999852e-06, 3.973000000000865e-06, 4.889000000000976e-06, 5.5689999999969375e-06, 6.222000000000172e-06, 3.931000000002155e-06, 3.832999999998227e-06, 6.222000000000172e-06, 5.542000000000741e-06, 3.347000000000766e-06, 4.166999999999366e-06, 5.792000000000991e-06], 'source_diff': [0, 5.374999999998437e-06, 3.888999999999976e-06, 4.666999999999866e-06, 3.361000000000336e-06, 6.152000000002322e-06, 4.972999999998395e-06, 5.250000000001781e-06, 2.9579999999973516e-06, 3.417000000002085e-06, 5.415999999997673e-06, 3.403000000002515e-06, 2.471999999999891e-06, 6.110999999999617e-06, 3.195000000000975e-06, 6.291999999998021e-06, 6.249999999999312e-06, 5.097000000002516e-06, 4.165999999999892e-06, 6.1529999999983265e-06, 5.846999999999797e-06, 3.7919999999989906e-06, 2.917000000001585e-06, 3.415999999999142e-06, 2.3479999999992396e-06, 3.861000000000836e-06, 2.403000000001515e-06, 4.860999999998367e-06, 4.652000000000822e-06, 4.973000000001865e-06, 5.9579999999968825e-06, 4.319000000002626e-06, 3.5279999999991707e-06, 4.721999999998672e-06, 5.8479999999992704e-06, 3.8050000000025563e-06, 5.153000000000796e-06, 4.735999999998242e-06, 5.457999999999852e-06, 3.973000000000865e-06, 4.889000000000976e-06, 5.5689999999969375e-06, 6.222000000000172e-06, 3.931000000002155e-06, 3.832999999998227e-06, 6.222000000000172e-06, 5.542000000000741e-06, 3.347000000000766e-06, 4.166999999999366e-06, 5.792000000000991e-06], 'eventtime': [0.0180745, 0.018079875, 0.018083764, 0.018088431, 0.018091792, 0.018097944, 0.018102917, 0.018108167, 0.018111125, 0.018114542, 0.018119958, 0.018123361, 0.018125833, 0.018131944, 0.018135139, 0.018141431, 0.018147681, 0.018152778, 0.018156944, 0.018163097, 0.018168944, 0.018172736, 0.018175653, 0.018179069, 0.018181417, 0.018185278, 0.018187681, 0.018192542, 0.018197194, 0.018202167, 0.018208125, 0.018212444, 0.018215972, 0.018220694, 0.018226542, 0.018230347, 0.0182355, 0.018240236, 0.018245694, 0.018249667, 0.018254556, 0.018260125, 0.018266347, 0.018270278, 0.018274111, 0.018280333, 0.018285875, 0.018289222, 0.018293389, 0.018299181]}</msg>
<status status="PASS" starttime="20201112 12:41:36.663" endtime="20201112 12:41:36.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.659" endtime="20201112 12:41:36.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:36.670" level="INFO">${RESULT} = [{'time': 0.018079875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.374999999998437e-06, 'source_diff': 5.374999999998437e-06}, {'time': 0.018088431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:36.667" endtime="20201112 12:41:36.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:36.678" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:36.671" endtime="20201112 12:41:36.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.682" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:36.681" endtime="20201112 12:41:36.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.685" level="INFO">VALUE: [5.374999999998437e-06, 4.666999999999866e-06, 6.152000000002322e-06, 5.250000000001781e-06, 3.417000000002085e-06, 3.403000000002515e-06, 6.110999999999617e-06, 6.291999999998021e-06, 5.097000000002516e-06, 6.1529999999983265e-06, 3.7919999999989906e-06, 3.415999999999142e-06, 3.861000000000836e-06, 4.860999999998367e-06, 4.973000000001865e-06, 4.319000000002626e-06, 4.721999999998672e-06, 3.8050000000025563e-06, 4.735999999998242e-06, 3.973000000000865e-06, 5.5689999999969375e-06, 3.931000000002155e-06, 6.222000000000172e-06, 3.347000000000766e-06, 5.792000000000991e-06]</msg>
<status status="PASS" starttime="20201112 12:41:36.683" endtime="20201112 12:41:36.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.679" endtime="20201112 12:41:36.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.688" endtime="20201112 12:41:36.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:36.692" endtime="20201112 12:41:36.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.690" endtime="20201112 12:41:36.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.686" endtime="20201112 12:41:36.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.320" endtime="20201112 12:41:36.713"></status>
</kw>
<msg timestamp="20201112 12:41:36.713" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.721" endtime="20201112 12:41:36.734"></status>
</kw>
<msg timestamp="20201112 12:41:36.735" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:36.719" endtime="20201112 12:41:36.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:36.737" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:36.736" endtime="20201112 12:41:36.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.738" endtime="20201112 12:41:36.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.716" endtime="20201112 12:41:36.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.715" endtime="20201112 12:41:36.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:36.748" endtime="20201112 12:41:37.018"></status>
</kw>
<msg timestamp="20201112 12:41:37.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017922056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:36.746" endtime="20201112 12:41:37.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017922056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:37.021" endtime="20201112 12:41:37.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.026" endtime="20201112 12:41:37.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.743" endtime="20201112 12:41:37.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.742" endtime="20201112 12:41:37.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.034" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:37.033" endtime="20201112 12:41:37.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.038" level="INFO">VALUE: [{'time': 0.017922056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}, {'time': 0.01793025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.017934181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.931000000002155e-06, 'source_diff': 3.931000000002155e-06}, {'time': 0.017937, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.819000000001126e-06, 'source_diff': 2.819000000001126e-06}, {'time': 0.017939972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9719999999969215e-06, 'source_diff': 2.9719999999969215e-06}, {'time': 0.017943653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.681000000001905e-06, 'source_diff': 3.681000000001905e-06}, {'time': 0.017948083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.017954292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.017957389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.097000000000516e-06, 'source_diff': 3.097000000000516e-06}, {'time': 0.017963556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.017968292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017972944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.017977417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.472999999997895e-06, 'source_diff': 4.472999999997895e-06}, {'time': 0.017982153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.017986181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999999671e-06, 'source_diff': 4.027999999999671e-06}, {'time': 0.017990667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.017996389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.722000000003141e-06, 'source_diff': 5.722000000003141e-06}, {'time': 0.018001556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166999999996896e-06, 'source_diff': 5.166999999996896e-06}, {'time': 0.018006319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.763000000001377e-06, 'source_diff': 4.763000000001377e-06}, {'time': 0.01801225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.018016236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.018019, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7639999999988507e-06, 'source_diff': 2.7639999999988507e-06}, {'time': 0.018025278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.018027972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.694000000001001e-06, 'source_diff': 2.694000000001001e-06}, {'time': 0.018033819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018038056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.237000000000685e-06, 'source_diff': 4.237000000000685e-06}, {'time': 0.018040764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.708000000000571e-06, 'source_diff': 2.708000000000571e-06}, {'time': 0.018043569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.804999999998087e-06, 'source_diff': 2.804999999998087e-06}, {'time': 0.018049153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.018052819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6660000000028614e-06, 'source_diff': 3.6660000000028614e-06}, {'time': 0.018057861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018063722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999999367e-06, 'source_diff': 5.860999999999367e-06}, {'time': 0.018069819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018075653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.018078069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.415999999998142e-06, 'source_diff': 2.415999999998142e-06}, {'time': 0.01808175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.681000000001905e-06, 'source_diff': 3.681000000001905e-06}, {'time': 0.018086542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999999991e-06, 'source_diff': 4.791999999999991e-06}, {'time': 0.018090319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.776999999999947e-06, 'source_diff': 3.776999999999947e-06}, {'time': 0.018094903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5839999999984504e-06, 'source_diff': 4.5839999999984504e-06}, {'time': 0.018100444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.541000000001267e-06, 'source_diff': 5.541000000001267e-06}, {'time': 0.018106375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.931000000000686e-06, 'source_diff': 5.931000000000686e-06}, {'time': 0.018112458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.083000000000477e-06, 'source_diff': 6.083000000000477e-06}, {'time': 0.018115764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3059999999980605e-06, 'source_diff': 3.3059999999980605e-06}, {'time': 0.018119028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.018123722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018128556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.018131028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.471999999999891e-06, 'source_diff': 2.471999999999891e-06}, {'time': 0.018135375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999998297e-06, 'source_diff': 4.346999999998297e-06}, {'time': 0.018140722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:37.035" endtime="20201112 12:41:37.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.031" endtime="20201112 12:41:37.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:37.053" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:37.040" endtime="20201112 12:41:37.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.057" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:37.056" endtime="20201112 12:41:37.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.060" level="INFO">VALUE: {'sourcediff': [0, 3.4160000000026114e-06, 4.777999999996951e-06, 3.931000000002155e-06, 2.819000000001126e-06, 2.9719999999969215e-06, 3.681000000001905e-06, 4.429999999999712e-06, 6.2090000000000756e-06, 3.097000000000516e-06, 6.166999999997896e-06, 4.736000000001711e-06, 4.652000000000822e-06, 4.472999999997895e-06, 4.736000000001711e-06, 4.027999999999671e-06, 4.485999999997992e-06, 5.722000000003141e-06, 5.166999999996896e-06, 4.763000000001377e-06, 5.931000000000686e-06, 3.986000000000961e-06, 2.7639999999988507e-06, 6.2779999999984515e-06, 2.694000000001001e-06, 5.846999999999797e-06, 4.237000000000685e-06, 2.708000000000571e-06, 2.804999999998087e-06, 5.5839999999994505e-06, 3.6660000000028614e-06, 5.042000000000241e-06, 5.860999999999367e-06, 6.097000000000047e-06, 5.8339999999997005e-06, 2.415999999998142e-06, 3.681000000001905e-06, 4.791999999999991e-06, 3.776999999999947e-06, 4.5839999999984504e-06, 5.541000000001267e-06, 5.931000000000686e-06, 6.083000000000477e-06, 3.3059999999980605e-06, 3.2639999999993508e-06, 4.693999999999532e-06, 4.83400000000217e-06, 2.471999999999891e-06, 4.346999999998297e-06, 5.347000000002766e-06], 'source_diff': [0, 3.4160000000026114e-06, 4.777999999996951e-06, 3.931000000002155e-06, 2.819000000001126e-06, 2.9719999999969215e-06, 3.681000000001905e-06, 4.429999999999712e-06, 6.2090000000000756e-06, 3.097000000000516e-06, 6.166999999997896e-06, 4.736000000001711e-06, 4.652000000000822e-06, 4.472999999997895e-06, 4.736000000001711e-06, 4.027999999999671e-06, 4.485999999997992e-06, 5.722000000003141e-06, 5.166999999996896e-06, 4.763000000001377e-06, 5.931000000000686e-06, 3.986000000000961e-06, 2.7639999999988507e-06, 6.2779999999984515e-06, 2.694000000001001e-06, 5.846999999999797e-06, 4.237000000000685e-06, 2.708000000000571e-06, 2.804999999998087e-06, 5.5839999999994505e-06, 3.6660000000028614e-06, 5.042000000000241e-06, 5.860999999999367e-06, 6.097000000000047e-06, 5.8339999999997005e-06, 2.415999999998142e-06, 3.681000000001905e-06, 4.791999999999991e-06, 3.776999999999947e-06, 4.5839999999984504e-06, 5.541000000001267e-06, 5.931000000000686e-06, 6.083000000000477e-06, 3.3059999999980605e-06, 3.2639999999993508e-06, 4.693999999999532e-06, 4.83400000000217e-06, 2.471999999999891e-06, 4.346999999998297e-06, 5.347000000002766e-06], 'eventtime': [0.017922056, 0.017925472, 0.01793025, 0.017934181, 0.017937, 0.017939972, 0.017943653, 0.017948083, 0.017954292, 0.017957389, 0.017963556, 0.017968292, 0.017972944, 0.017977417, 0.017982153, 0.017986181, 0.017990667, 0.017996389, 0.018001556, 0.018006319, 0.01801225, 0.018016236, 0.018019, 0.018025278, 0.018027972, 0.018033819, 0.018038056, 0.018040764, 0.018043569, 0.018049153, 0.018052819, 0.018057861, 0.018063722, 0.018069819, 0.018075653, 0.018078069, 0.01808175, 0.018086542, 0.018090319, 0.018094903, 0.018100444, 0.018106375, 0.018112458, 0.018115764, 0.018119028, 0.018123722, 0.018128556, 0.018131028, 0.018135375, 0.018140722]}</msg>
<status status="PASS" starttime="20201112 12:41:37.058" endtime="20201112 12:41:37.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.054" endtime="20201112 12:41:37.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:37.065" level="INFO">${RESULT} = [{'time': 0.017925472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4160000000026114e-06, 'source_diff': 3.4160000000026114e-06}, {'time': 0.017934181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:37.062" endtime="20201112 12:41:37.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:37.073" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:37.066" endtime="20201112 12:41:37.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.077" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:37.076" endtime="20201112 12:41:37.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.080" level="INFO">VALUE: [3.4160000000026114e-06, 3.931000000002155e-06, 2.9719999999969215e-06, 4.429999999999712e-06, 3.097000000000516e-06, 4.736000000001711e-06, 4.472999999997895e-06, 4.027999999999671e-06, 5.722000000003141e-06, 4.763000000001377e-06, 3.986000000000961e-06, 6.2779999999984515e-06, 5.846999999999797e-06, 2.708000000000571e-06, 5.5839999999994505e-06, 5.042000000000241e-06, 6.097000000000047e-06, 2.415999999998142e-06, 4.791999999999991e-06, 4.5839999999984504e-06, 5.931000000000686e-06, 3.3059999999980605e-06, 4.693999999999532e-06, 2.471999999999891e-06, 5.347000000002766e-06]</msg>
<status status="PASS" starttime="20201112 12:41:37.079" endtime="20201112 12:41:37.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.074" endtime="20201112 12:41:37.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.083" endtime="20201112 12:41:37.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:37.087" endtime="20201112 12:41:37.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.085" endtime="20201112 12:41:37.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.082" endtime="20201112 12:41:37.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:36.713" endtime="20201112 12:41:37.108"></status>
</kw>
<msg timestamp="20201112 12:41:37.108" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.116" endtime="20201112 12:41:37.130"></status>
</kw>
<msg timestamp="20201112 12:41:37.130" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:37.114" endtime="20201112 12:41:37.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.133" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:37.131" endtime="20201112 12:41:37.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.134" endtime="20201112 12:41:37.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.112" endtime="20201112 12:41:37.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.110" endtime="20201112 12:41:37.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.144" endtime="20201112 12:41:37.411"></status>
</kw>
<msg timestamp="20201112 12:41:37.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018097111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018099722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:37.142" endtime="20201112 12:41:37.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018097111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018099722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:37.414" endtime="20201112 12:41:37.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.419" endtime="20201112 12:41:37.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.139" endtime="20201112 12:41:37.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.137" endtime="20201112 12:41:37.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.426" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:37.425" endtime="20201112 12:41:37.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.430" level="INFO">VALUE: [{'time': 0.018097111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018099722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.018104139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.417000000003085e-06, 'source_diff': 4.417000000003085e-06}, {'time': 0.018109722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.582999999999977e-06, 'source_diff': 5.582999999999977e-06}, {'time': 0.018115153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.430999999996716e-06, 'source_diff': 5.430999999996716e-06}, {'time': 0.018119181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.018124153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.018128556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.018133431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8749999999979365e-06, 'source_diff': 4.8749999999979365e-06}, {'time': 0.018139528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000000047e-06, 'source_diff': 6.097000000000047e-06}, {'time': 0.018142861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.333000000001196e-06, 'source_diff': 3.333000000001196e-06}, {'time': 0.018147347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018150194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.018153542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3480000000002397e-06, 'source_diff': 3.3480000000002397e-06}, {'time': 0.018157778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.018160681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.903000000002015e-06, 'source_diff': 2.903000000002015e-06}, {'time': 0.018163083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.018166444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.018170042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.018173764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.018177611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018181722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018185125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.018191361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.018193708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.018198236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.018204222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018209083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.0182145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018218514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.014000000000101e-06, 'source_diff': 4.014000000000101e-06}, {'time': 0.018222056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018224778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018230764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018234278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999996008e-06, 'source_diff': 3.5139999999996008e-06}, {'time': 0.018239083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805000000000087e-06, 'source_diff': 4.805000000000087e-06}, {'time': 0.018243625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018247917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.018251889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.018257097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018262083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018265889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.80600000000203e-06, 'source_diff': 3.80600000000203e-06}, {'time': 0.018269597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.018273639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.018276736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0969999999970466e-06, 'source_diff': 3.0969999999970466e-06}, {'time': 0.018282778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018287764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.018293542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.018297514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972000000001391e-06, 'source_diff': 3.972000000001391e-06}, {'time': 0.018301236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.018306292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.055999999999811e-06, 'source_diff': 5.055999999999811e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:37.427" endtime="20201112 12:41:37.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.422" endtime="20201112 12:41:37.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:37.459" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:37.446" endtime="20201112 12:41:37.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.464" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:37.462" endtime="20201112 12:41:37.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.467" level="INFO">VALUE: {'sourcediff': [0, 2.610999999999586e-06, 4.417000000003085e-06, 5.582999999999977e-06, 5.430999999996716e-06, 4.02800000000314e-06, 4.971999999998922e-06, 4.403000000000046e-06, 4.8749999999979365e-06, 6.097000000000047e-06, 3.333000000001196e-06, 4.486000000001461e-06, 2.847000000000266e-06, 3.3480000000002397e-06, 4.2359999999977416e-06, 2.903000000002015e-06, 2.401999999998572e-06, 3.361000000000336e-06, 3.5980000000004897e-06, 3.7219999999976716e-06, 3.847000000001266e-06, 4.111000000001086e-06, 3.4029999999990457e-06, 6.235999999999742e-06, 2.346999999999766e-06, 4.528000000000171e-06, 5.985999999999492e-06, 4.861000000001836e-06, 5.417000000000616e-06, 4.014000000000101e-06, 3.5419999999987406e-06, 2.722000000000141e-06, 5.985999999999492e-06, 3.5139999999996008e-06, 4.805000000000087e-06, 4.541999999999741e-06, 4.291999999999491e-06, 3.972000000001391e-06, 5.207999999999602e-06, 4.985999999998492e-06, 3.80600000000203e-06, 3.7079999999981017e-06, 4.04200000000271e-06, 3.0969999999970466e-06, 6.042000000001241e-06, 4.986000000001961e-06, 5.7779999999979514e-06, 3.972000000001391e-06, 3.7219999999976716e-06, 5.055999999999811e-06], 'source_diff': [0, 2.610999999999586e-06, 4.417000000003085e-06, 5.582999999999977e-06, 5.430999999996716e-06, 4.02800000000314e-06, 4.971999999998922e-06, 4.403000000000046e-06, 4.8749999999979365e-06, 6.097000000000047e-06, 3.333000000001196e-06, 4.486000000001461e-06, 2.847000000000266e-06, 3.3480000000002397e-06, 4.2359999999977416e-06, 2.903000000002015e-06, 2.401999999998572e-06, 3.361000000000336e-06, 3.5980000000004897e-06, 3.7219999999976716e-06, 3.847000000001266e-06, 4.111000000001086e-06, 3.4029999999990457e-06, 6.235999999999742e-06, 2.346999999999766e-06, 4.528000000000171e-06, 5.985999999999492e-06, 4.861000000001836e-06, 5.417000000000616e-06, 4.014000000000101e-06, 3.5419999999987406e-06, 2.722000000000141e-06, 5.985999999999492e-06, 3.5139999999996008e-06, 4.805000000000087e-06, 4.541999999999741e-06, 4.291999999999491e-06, 3.972000000001391e-06, 5.207999999999602e-06, 4.985999999998492e-06, 3.80600000000203e-06, 3.7079999999981017e-06, 4.04200000000271e-06, 3.0969999999970466e-06, 6.042000000001241e-06, 4.986000000001961e-06, 5.7779999999979514e-06, 3.972000000001391e-06, 3.7219999999976716e-06, 5.055999999999811e-06], 'eventtime': [0.018097111, 0.018099722, 0.018104139, 0.018109722, 0.018115153, 0.018119181, 0.018124153, 0.018128556, 0.018133431, 0.018139528, 0.018142861, 0.018147347, 0.018150194, 0.018153542, 0.018157778, 0.018160681, 0.018163083, 0.018166444, 0.018170042, 0.018173764, 0.018177611, 0.018181722, 0.018185125, 0.018191361, 0.018193708, 0.018198236, 0.018204222, 0.018209083, 0.0182145, 0.018218514, 0.018222056, 0.018224778, 0.018230764, 0.018234278, 0.018239083, 0.018243625, 0.018247917, 0.018251889, 0.018257097, 0.018262083, 0.018265889, 0.018269597, 0.018273639, 0.018276736, 0.018282778, 0.018287764, 0.018293542, 0.018297514, 0.018301236, 0.018306292]}</msg>
<status status="PASS" starttime="20201112 12:41:37.465" endtime="20201112 12:41:37.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.460" endtime="20201112 12:41:37.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:37.472" level="INFO">${RESULT} = [{'time': 0.018099722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.018109722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:37.469" endtime="20201112 12:41:37.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:37.480" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:37.473" endtime="20201112 12:41:37.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.484" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:37.483" endtime="20201112 12:41:37.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.487" level="INFO">VALUE: [2.610999999999586e-06, 5.582999999999977e-06, 4.02800000000314e-06, 4.403000000000046e-06, 6.097000000000047e-06, 4.486000000001461e-06, 3.3480000000002397e-06, 2.903000000002015e-06, 3.361000000000336e-06, 3.7219999999976716e-06, 4.111000000001086e-06, 6.235999999999742e-06, 4.528000000000171e-06, 4.861000000001836e-06, 4.014000000000101e-06, 2.722000000000141e-06, 3.5139999999996008e-06, 4.541999999999741e-06, 3.972000000001391e-06, 4.985999999998492e-06, 3.7079999999981017e-06, 3.0969999999970466e-06, 4.986000000001961e-06, 3.972000000001391e-06, 5.055999999999811e-06]</msg>
<status status="PASS" starttime="20201112 12:41:37.485" endtime="20201112 12:41:37.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.481" endtime="20201112 12:41:37.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.490" endtime="20201112 12:41:37.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:37.494" endtime="20201112 12:41:37.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.492" endtime="20201112 12:41:37.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.489" endtime="20201112 12:41:37.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.109" endtime="20201112 12:41:37.515"></status>
</kw>
<msg timestamp="20201112 12:41:37.515" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.523" endtime="20201112 12:41:37.537"></status>
</kw>
<msg timestamp="20201112 12:41:37.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:37.521" endtime="20201112 12:41:37.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.540" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:37.539" endtime="20201112 12:41:37.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.541" endtime="20201112 12:41:37.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.519" endtime="20201112 12:41:37.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.517" endtime="20201112 12:41:37.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.552" endtime="20201112 12:41:37.818"></status>
</kw>
<msg timestamp="20201112 12:41:37.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018132361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018136472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:37.550" endtime="20201112 12:41:37.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018132361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018136472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:37.821" endtime="20201112 12:41:37.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.826" endtime="20201112 12:41:37.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.547" endtime="20201112 12:41:37.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.546" endtime="20201112 12:41:37.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.833" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:37.832" endtime="20201112 12:41:37.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.837" level="INFO">VALUE: [{'time': 0.018132361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018136472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018142639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999997896e-06, 'source_diff': 6.166999999997896e-06}, {'time': 0.018146903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.264000000000351e-06, 'source_diff': 4.264000000000351e-06}, {'time': 0.018151069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.018156417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.018159472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.0181645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018168222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.722000000001141e-06, 'source_diff': 3.722000000001141e-06}, {'time': 0.018170958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.735999999999711e-06, 'source_diff': 2.735999999999711e-06}, {'time': 0.018174958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.000000000000531e-06, 'source_diff': 4.000000000000531e-06}, {'time': 0.018180597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018185444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018189417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.973000000000865e-06, 'source_diff': 3.973000000000865e-06}, {'time': 0.018193278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.018197181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.018203153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.01820725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018213431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.018217972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.018222931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.959000000002295e-06, 'source_diff': 4.959000000002295e-06}, {'time': 0.018228722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.018231694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.972000000000391e-06, 'source_diff': 2.972000000000391e-06}, {'time': 0.018235292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.018241208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.915999999998173e-06, 'source_diff': 5.915999999998173e-06}, {'time': 0.018244625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.417000000002085e-06, 'source_diff': 3.417000000002085e-06}, {'time': 0.018247125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018252, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018256917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.018261208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.018265986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.778000000000421e-06, 'source_diff': 4.778000000000421e-06}, {'time': 0.018269528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5419999999987406e-06, 'source_diff': 3.5419999999987406e-06}, {'time': 0.018274764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.018278292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.018280833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.540999999998267e-06, 'source_diff': 2.540999999998267e-06}, {'time': 0.018285875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.018291042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018296028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018300611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.018304542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.018307569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.018310097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.018315514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.018320181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.018323528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.018327125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.597000000001016e-06, 'source_diff': 3.597000000001016e-06}, {'time': 0.018330069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.944000000001251e-06, 'source_diff': 2.944000000001251e-06}, {'time': 0.018336153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0839999999999506e-06, 'source_diff': 6.0839999999999506e-06}, {'time': 0.018341347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.018344292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.945000000000725e-06, 'source_diff': 2.945000000000725e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:37.834" endtime="20201112 12:41:37.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.830" endtime="20201112 12:41:37.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:37.853" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:37.839" endtime="20201112 12:41:37.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.857" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:37.856" endtime="20201112 12:41:37.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.860" level="INFO">VALUE: {'sourcediff': [0, 4.111000000001086e-06, 6.166999999997896e-06, 4.264000000000351e-06, 4.165999999999892e-06, 5.34800000000224e-06, 3.054999999998337e-06, 5.028000000000671e-06, 3.722000000001141e-06, 2.735999999999711e-06, 4.000000000000531e-06, 5.6389999999982565e-06, 4.846999999998797e-06, 3.973000000000865e-06, 3.861000000000836e-06, 3.902999999999546e-06, 5.971999999999922e-06, 4.097000000001516e-06, 6.180999999997466e-06, 4.541000000000267e-06, 4.959000000002295e-06, 5.790999999998048e-06, 2.972000000000391e-06, 3.5980000000004897e-06, 5.915999999998173e-06, 3.417000000002085e-06, 2.4999999999990308e-06, 4.875000000001406e-06, 4.917000000000116e-06, 4.291000000000017e-06, 4.778000000000421e-06, 3.5419999999987406e-06, 5.235999999998742e-06, 3.52800000000264e-06, 2.540999999998267e-06, 5.042000000000241e-06, 5.167000000000366e-06, 4.985999999998492e-06, 4.583000000002446e-06, 3.9309999999986855e-06, 3.026999999999197e-06, 2.52800000000164e-06, 5.417000000000616e-06, 4.666999999999866e-06, 3.3469999999972966e-06, 3.597000000001016e-06, 2.944000000001251e-06, 6.0839999999999506e-06, 5.194000000000032e-06, 2.945000000000725e-06], 'source_diff': [0, 4.111000000001086e-06, 6.166999999997896e-06, 4.264000000000351e-06, 4.165999999999892e-06, 5.34800000000224e-06, 3.054999999998337e-06, 5.028000000000671e-06, 3.722000000001141e-06, 2.735999999999711e-06, 4.000000000000531e-06, 5.6389999999982565e-06, 4.846999999998797e-06, 3.973000000000865e-06, 3.861000000000836e-06, 3.902999999999546e-06, 5.971999999999922e-06, 4.097000000001516e-06, 6.180999999997466e-06, 4.541000000000267e-06, 4.959000000002295e-06, 5.790999999998048e-06, 2.972000000000391e-06, 3.5980000000004897e-06, 5.915999999998173e-06, 3.417000000002085e-06, 2.4999999999990308e-06, 4.875000000001406e-06, 4.917000000000116e-06, 4.291000000000017e-06, 4.778000000000421e-06, 3.5419999999987406e-06, 5.235999999998742e-06, 3.52800000000264e-06, 2.540999999998267e-06, 5.042000000000241e-06, 5.167000000000366e-06, 4.985999999998492e-06, 4.583000000002446e-06, 3.9309999999986855e-06, 3.026999999999197e-06, 2.52800000000164e-06, 5.417000000000616e-06, 4.666999999999866e-06, 3.3469999999972966e-06, 3.597000000001016e-06, 2.944000000001251e-06, 6.0839999999999506e-06, 5.194000000000032e-06, 2.945000000000725e-06], 'eventtime': [0.018132361, 0.018136472, 0.018142639, 0.018146903, 0.018151069, 0.018156417, 0.018159472, 0.0181645, 0.018168222, 0.018170958, 0.018174958, 0.018180597, 0.018185444, 0.018189417, 0.018193278, 0.018197181, 0.018203153, 0.01820725, 0.018213431, 0.018217972, 0.018222931, 0.018228722, 0.018231694, 0.018235292, 0.018241208, 0.018244625, 0.018247125, 0.018252, 0.018256917, 0.018261208, 0.018265986, 0.018269528, 0.018274764, 0.018278292, 0.018280833, 0.018285875, 0.018291042, 0.018296028, 0.018300611, 0.018304542, 0.018307569, 0.018310097, 0.018315514, 0.018320181, 0.018323528, 0.018327125, 0.018330069, 0.018336153, 0.018341347, 0.018344292]}</msg>
<status status="PASS" starttime="20201112 12:41:37.858" endtime="20201112 12:41:37.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.854" endtime="20201112 12:41:37.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:37.865" level="INFO">${RESULT} = [{'time': 0.018136472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.018146903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:37.862" endtime="20201112 12:41:37.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:37.873" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:37.866" endtime="20201112 12:41:37.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.878" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:37.876" endtime="20201112 12:41:37.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.880" level="INFO">VALUE: [4.111000000001086e-06, 4.264000000000351e-06, 5.34800000000224e-06, 5.028000000000671e-06, 2.735999999999711e-06, 5.6389999999982565e-06, 3.973000000000865e-06, 3.902999999999546e-06, 4.097000000001516e-06, 4.541000000000267e-06, 5.790999999998048e-06, 3.5980000000004897e-06, 3.417000000002085e-06, 4.875000000001406e-06, 4.291000000000017e-06, 3.5419999999987406e-06, 3.52800000000264e-06, 5.042000000000241e-06, 4.985999999998492e-06, 3.9309999999986855e-06, 2.52800000000164e-06, 4.666999999999866e-06, 3.597000000001016e-06, 6.0839999999999506e-06, 2.945000000000725e-06]</msg>
<status status="PASS" starttime="20201112 12:41:37.879" endtime="20201112 12:41:37.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.874" endtime="20201112 12:41:37.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.884" endtime="20201112 12:41:37.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:37.887" endtime="20201112 12:41:37.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.886" endtime="20201112 12:41:37.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.882" endtime="20201112 12:41:37.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.515" endtime="20201112 12:41:37.908"></status>
</kw>
<msg timestamp="20201112 12:41:37.908" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.917" endtime="20201112 12:41:37.931"></status>
</kw>
<msg timestamp="20201112 12:41:37.932" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:37.915" endtime="20201112 12:41:37.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:37.934" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:37.933" endtime="20201112 12:41:37.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.935" endtime="20201112 12:41:37.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.912" endtime="20201112 12:41:37.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.910" endtime="20201112 12:41:37.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:37.945" endtime="20201112 12:41:38.214"></status>
</kw>
<msg timestamp="20201112 12:41:38.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018913264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018917056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:37.943" endtime="20201112 12:41:38.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018913264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018917056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:38.217" endtime="20201112 12:41:38.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.223" endtime="20201112 12:41:38.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.941" endtime="20201112 12:41:38.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.939" endtime="20201112 12:41:38.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.230" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:38.229" endtime="20201112 12:41:38.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.233" level="INFO">VALUE: [{'time': 0.018913264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018917056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.018921528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018927194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.018931292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.09799999999752e-06, 'source_diff': 4.09799999999752e-06}, {'time': 0.018937333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000001767e-06, 'source_diff': 6.041000000001767e-06}, {'time': 0.018941556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.018945903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.018948944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.018953042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.09800000000099e-06, 'source_diff': 4.09800000000099e-06}, {'time': 0.018957917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.018961125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2079999999976017e-06, 'source_diff': 3.2079999999976017e-06}, {'time': 0.018965403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018969819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.018973139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3200000000011e-06, 'source_diff': 3.3200000000011e-06}, {'time': 0.018977833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.693999999999532e-06, 'source_diff': 4.693999999999532e-06}, {'time': 0.018980431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5979999999994896e-06, 'source_diff': 2.5979999999994896e-06}, {'time': 0.018984667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.236000000001211e-06, 'source_diff': 4.236000000001211e-06}, {'time': 0.018990264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018995681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.019000778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.019005069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.019010792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.019015014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.019018361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.347000000000766e-06, 'source_diff': 3.347000000000766e-06}, {'time': 0.019022097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.736000000000711e-06, 'source_diff': 3.736000000000711e-06}, {'time': 0.019025333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2359999999967415e-06, 'source_diff': 3.2359999999967415e-06}, {'time': 0.019030472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.019034333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.019037361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.019039778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.417000000001085e-06, 'source_diff': 2.417000000001085e-06}, {'time': 0.019045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.019049361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.019054958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.019060181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.019064472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291000000000017e-06, 'source_diff': 4.291000000000017e-06}, {'time': 0.019067, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.019070986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.986000000000961e-06, 'source_diff': 3.986000000000961e-06}, {'time': 0.019077264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.019080625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.361000000000336e-06, 'source_diff': 3.361000000000336e-06}, {'time': 0.019083153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5279999999981706e-06, 'source_diff': 2.5279999999981706e-06}, {'time': 0.019085514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3610000000028053e-06, 'source_diff': 2.3610000000028053e-06}, {'time': 0.019089486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.019094667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.019099208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.541000000000267e-06, 'source_diff': 4.541000000000267e-06}, {'time': 0.019101597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.389000000001945e-06, 'source_diff': 2.389000000001945e-06}, {'time': 0.019104139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5419999999977405e-06, 'source_diff': 2.5419999999977405e-06}, {'time': 0.019109736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.019112653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.917000000001585e-06, 'source_diff': 2.917000000001585e-06}, {'time': 0.019118056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:38.231" endtime="20201112 12:41:38.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.226" endtime="20201112 12:41:38.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:38.249" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:38.236" endtime="20201112 12:41:38.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.253" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:38.252" endtime="20201112 12:41:38.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.256" level="INFO">VALUE: {'sourcediff': [0, 3.79200000000246e-06, 4.471999999998422e-06, 5.666000000001392e-06, 4.09799999999752e-06, 6.041000000001767e-06, 4.222999999997645e-06, 4.347000000001766e-06, 3.040999999998767e-06, 4.09800000000099e-06, 4.875000000001406e-06, 3.2079999999976017e-06, 4.277999999999921e-06, 4.416000000000142e-06, 3.3200000000011e-06, 4.693999999999532e-06, 2.5979999999994896e-06, 4.236000000001211e-06, 5.596999999999547e-06, 5.417000000000616e-06, 5.096999999999047e-06, 4.291000000000017e-06, 5.7229999999991454e-06, 4.222000000001641e-06, 3.347000000000766e-06, 3.736000000000711e-06, 3.2359999999967415e-06, 5.139000000001226e-06, 3.861000000000836e-06, 3.0279999999986706e-06, 2.417000000001085e-06, 5.221999999999172e-06, 4.361000000001336e-06, 5.596999999999547e-06, 5.222999999998645e-06, 4.291000000000017e-06, 2.52800000000164e-06, 3.986000000000961e-06, 6.2779999999984515e-06, 3.361000000000336e-06, 2.5279999999981706e-06, 2.3610000000028053e-06, 3.971999999997922e-06, 5.180999999999936e-06, 4.541000000000267e-06, 2.389000000001945e-06, 2.5419999999977405e-06, 5.596999999999547e-06, 2.917000000001585e-06, 5.403000000001046e-06], 'source_diff': [0, 3.79200000000246e-06, 4.471999999998422e-06, 5.666000000001392e-06, 4.09799999999752e-06, 6.041000000001767e-06, 4.222999999997645e-06, 4.347000000001766e-06, 3.040999999998767e-06, 4.09800000000099e-06, 4.875000000001406e-06, 3.2079999999976017e-06, 4.277999999999921e-06, 4.416000000000142e-06, 3.3200000000011e-06, 4.693999999999532e-06, 2.5979999999994896e-06, 4.236000000001211e-06, 5.596999999999547e-06, 5.417000000000616e-06, 5.096999999999047e-06, 4.291000000000017e-06, 5.7229999999991454e-06, 4.222000000001641e-06, 3.347000000000766e-06, 3.736000000000711e-06, 3.2359999999967415e-06, 5.139000000001226e-06, 3.861000000000836e-06, 3.0279999999986706e-06, 2.417000000001085e-06, 5.221999999999172e-06, 4.361000000001336e-06, 5.596999999999547e-06, 5.222999999998645e-06, 4.291000000000017e-06, 2.52800000000164e-06, 3.986000000000961e-06, 6.2779999999984515e-06, 3.361000000000336e-06, 2.5279999999981706e-06, 2.3610000000028053e-06, 3.971999999997922e-06, 5.180999999999936e-06, 4.541000000000267e-06, 2.389000000001945e-06, 2.5419999999977405e-06, 5.596999999999547e-06, 2.917000000001585e-06, 5.403000000001046e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.018913264, 0.018917056, 0.018921528, 0.018927194, 0.018931292, 0.018937333, 0.018941556, 0.018945903, 0.018948944, 0.018953042, 0.018957917, 0.018961125, 0.018965403, 0.018969819, 0.018973139, 0.018977833, 0.018980431, 0.018984667, 0.018990264, 0.018995681, 0.019000778, 0.019005069, 0.019010792, 0.019015014, 0.019018361, 0.019022097, 0.019025333, 0.019030472, 0.019034333, 0.019037361, 0.019039778, 0.019045, 0.019049361, 0.019054958, 0.019060181, 0.019064472, 0.019067, 0.019070986, 0.019077264, 0.019080625, 0.019083153, 0.019085514, 0.019089486, 0.019094667, 0.019099208, 0.019101597, 0.019104139, 0.019109736, 0.019112653, 0.019118056]}</msg>
<status status="PASS" starttime="20201112 12:41:38.254" endtime="20201112 12:41:38.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.250" endtime="20201112 12:41:38.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:38.261" level="INFO">${RESULT} = [{'time': 0.018917056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.018927194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:41:38.258" endtime="20201112 12:41:38.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:38.269" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:38.262" endtime="20201112 12:41:38.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.273" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:38.272" endtime="20201112 12:41:38.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.276" level="INFO">VALUE: [3.79200000000246e-06, 5.666000000001392e-06, 6.041000000001767e-06, 4.347000000001766e-06, 4.09800000000099e-06, 3.2079999999976017e-06, 4.416000000000142e-06, 4.693999999999532e-06, 4.236000000001211e-06, 5.417000000000616e-06, 4.291000000000017e-06, 4.222000000001641e-06, 3.736000000000711e-06, 5.139000000001226e-06, 3.0279999999986706e-06, 5.221999999999172e-06, 5.596999999999547e-06, 4.291000000000017e-06, 3.986000000000961e-06, 3.361000000000336e-06, 2.3610000000028053e-06, 5.180999999999936e-06, 2.389000000001945e-06, 5.596999999999547e-06, 5.403000000001046e-06]</msg>
<status status="PASS" starttime="20201112 12:41:38.274" endtime="20201112 12:41:38.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.270" endtime="20201112 12:41:38.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.279" endtime="20201112 12:41:38.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:38.283" endtime="20201112 12:41:38.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.281" endtime="20201112 12:41:38.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.278" endtime="20201112 12:41:38.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:37.909" endtime="20201112 12:41:38.304"></status>
</kw>
<msg timestamp="20201112 12:41:38.305" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.313" endtime="20201112 12:41:38.326"></status>
</kw>
<msg timestamp="20201112 12:41:38.327" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:38.311" endtime="20201112 12:41:38.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.330" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:38.328" endtime="20201112 12:41:38.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.331" endtime="20201112 12:41:38.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.308" endtime="20201112 12:41:38.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.307" endtime="20201112 12:41:38.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.340" endtime="20201112 12:41:38.610"></status>
</kw>
<msg timestamp="20201112 12:41:38.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018728042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018734194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:38.338" endtime="20201112 12:41:38.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018728042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018734194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:38.613" endtime="20201112 12:41:38.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.619" endtime="20201112 12:41:38.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.336" endtime="20201112 12:41:38.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.334" endtime="20201112 12:41:38.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.626" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:38.625" endtime="20201112 12:41:38.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.629" level="INFO">VALUE: [{'time': 0.018728042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018734194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.151999999998853e-06, 'source_diff': 6.151999999998853e-06}, {'time': 0.018739306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.11200000000156e-06, 'source_diff': 5.11200000000156e-06}, {'time': 0.018745569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.262999999999408e-06, 'source_diff': 6.262999999999408e-06}, {'time': 0.018750056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.487000000000935e-06, 'source_diff': 4.487000000000935e-06}, {'time': 0.018754278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.0187605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018765042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.018768319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.276999999999447e-06, 'source_diff': 3.276999999999447e-06}, {'time': 0.018770833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.018775042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208999999998075e-06, 'source_diff': 4.208999999998075e-06}, {'time': 0.018779375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.018782431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0559999999978105e-06, 'source_diff': 3.0559999999978105e-06}, {'time': 0.018787347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018792931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5839999999994505e-06, 'source_diff': 5.5839999999994505e-06}, {'time': 0.018795653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.722000000000141e-06, 'source_diff': 2.722000000000141e-06}, {'time': 0.018800569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018804486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018810333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999999797e-06, 'source_diff': 5.846999999999797e-06}, {'time': 0.018816556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.223000000003115e-06, 'source_diff': 6.223000000003115e-06}, {'time': 0.018822847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.018829069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.018834667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5979999999990204e-06, 'source_diff': 5.5979999999990204e-06}, {'time': 0.018838764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097000000001516e-06, 'source_diff': 4.097000000001516e-06}, {'time': 0.018842875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.018848597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.722000000003141e-06, 'source_diff': 5.722000000003141e-06}, {'time': 0.018854014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.416999999997146e-06, 'source_diff': 5.416999999997146e-06}, {'time': 0.018859111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.018864833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.01886925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018872972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.018876528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.55600000000178e-06, 'source_diff': 3.55600000000178e-06}, {'time': 0.018881556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.028000000000671e-06, 'source_diff': 5.028000000000671e-06}, {'time': 0.018885833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277000000000447e-06, 'source_diff': 4.277000000000447e-06}, {'time': 0.01889025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.018892611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018895111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999990308e-06, 'source_diff': 2.4999999999990308e-06}, {'time': 0.018897681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5700000000003498e-06, 'source_diff': 2.5700000000003498e-06}, {'time': 0.01890075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.018906694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.018910417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7229999999971453e-06, 'source_diff': 3.7229999999971453e-06}, {'time': 0.018912833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4160000000016113e-06, 'source_diff': 2.4160000000016113e-06}, {'time': 0.018918556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.018923167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.018925569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.018927917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.018933847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.018939514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.018943792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018947625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999998227e-06, 'source_diff': 3.832999999998227e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:38.627" endtime="20201112 12:41:38.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.622" endtime="20201112 12:41:38.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:38.645" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:38.632" endtime="20201112 12:41:38.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.649" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:38.648" endtime="20201112 12:41:38.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.652" level="INFO">VALUE: {'sourcediff': [0, 6.151999999998853e-06, 5.11200000000156e-06, 6.262999999999408e-06, 4.487000000000935e-06, 4.221999999998172e-06, 6.222000000000172e-06, 4.541999999999741e-06, 3.276999999999447e-06, 2.51400000000207e-06, 4.208999999998075e-06, 4.333000000002196e-06, 3.0559999999978105e-06, 4.916000000000642e-06, 5.5839999999994505e-06, 2.722000000000141e-06, 4.916000000000642e-06, 3.916999999999116e-06, 5.846999999999797e-06, 6.223000000003115e-06, 6.290999999998548e-06, 6.222000000000172e-06, 5.5979999999990204e-06, 4.097000000001516e-06, 4.1109999999976166e-06, 5.722000000003141e-06, 5.416999999997146e-06, 5.097000000002516e-06, 5.721999999999672e-06, 4.416999999999616e-06, 3.7219999999976716e-06, 3.55600000000178e-06, 5.028000000000671e-06, 4.277000000000447e-06, 4.416999999999616e-06, 2.360999999999336e-06, 2.4999999999990308e-06, 2.5700000000003498e-06, 3.069000000001376e-06, 5.944000000000782e-06, 3.7229999999971453e-06, 2.4160000000016113e-06, 5.7229999999991454e-06, 4.611000000001586e-06, 2.401999999998572e-06, 2.3479999999992396e-06, 5.930000000001212e-06, 5.667000000000866e-06, 4.277999999999921e-06, 3.832999999998227e-06], 'source_diff': [0, 6.151999999998853e-06, 5.11200000000156e-06, 6.262999999999408e-06, 4.487000000000935e-06, 4.221999999998172e-06, 6.222000000000172e-06, 4.541999999999741e-06, 3.276999999999447e-06, 2.51400000000207e-06, 4.208999999998075e-06, 4.333000000002196e-06, 3.0559999999978105e-06, 4.916000000000642e-06, 5.5839999999994505e-06, 2.722000000000141e-06, 4.916000000000642e-06, 3.916999999999116e-06, 5.846999999999797e-06, 6.223000000003115e-06, 6.290999999998548e-06, 6.222000000000172e-06, 5.5979999999990204e-06, 4.097000000001516e-06, 4.1109999999976166e-06, 5.722000000003141e-06, 5.416999999997146e-06, 5.097000000002516e-06, 5.721999999999672e-06, 4.416999999999616e-06, 3.7219999999976716e-06, 3.55600000000178e-06, 5.028000000000671e-06, 4.277000000000447e-06, 4.416999999999616e-06, 2.360999999999336e-06, 2.4999999999990308e-06, 2.5700000000003498e-06, 3.069000000001376e-06, 5.944000000000782e-06, 3.7229999999971453e-06, 2.4160000000016113e-06, 5.7229999999991454e-06, 4.611000000001586e-06, 2.401999999998572e-06, 2.3479999999992396e-06, 5.930000000001212e-06, 5.667000000000866e-06, 4.277999999999921e-06, 3.832999999998227e-06], 'eventtime': [0.018728042, 0.018734194, 0.018739306, 0.018745569, 0.018750056, 0.018754278, 0.0187605, 0.018765042, 0.018768319, 0.018770833, 0.018775042, 0.018779375, 0.018782431, 0.018787347, 0.018792931, 0.018795653, 0.018800569, 0.018804486, 0.018810333, 0.018816556, 0.018822847, 0.018829069, 0.018834667, 0.018838764, 0.018842875, 0.018848597, 0.018854014, 0.018859111, 0.018864833, 0.01886925, 0.018872972, 0.018876528, 0.018881556, 0.018885833, 0.01889025, 0.018892611, 0.018895111, 0.018897681, 0.01890075, 0.018906694, 0.018910417, 0.018912833, 0.018918556, 0.018923167, 0.018925569, 0.018927917, 0.018933847, 0.018939514, 0.018943792, 0.018947625]}</msg>
<status status="PASS" starttime="20201112 12:41:38.650" endtime="20201112 12:41:38.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.646" endtime="20201112 12:41:38.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:38.657" level="INFO">${RESULT} = [{'time': 0.018734194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.151999999998853e-06, 'source_diff': 6.151999999998853e-06}, {'time': 0.018745569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:38.654" endtime="20201112 12:41:38.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:38.666" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:38.658" endtime="20201112 12:41:38.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.670" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:38.669" endtime="20201112 12:41:38.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.672" level="INFO">VALUE: [6.151999999998853e-06, 6.262999999999408e-06, 4.221999999998172e-06, 4.541999999999741e-06, 2.51400000000207e-06, 4.333000000002196e-06, 4.916000000000642e-06, 2.722000000000141e-06, 3.916999999999116e-06, 6.223000000003115e-06, 6.222000000000172e-06, 4.097000000001516e-06, 5.722000000003141e-06, 5.097000000002516e-06, 4.416999999999616e-06, 3.55600000000178e-06, 4.277000000000447e-06, 2.360999999999336e-06, 2.5700000000003498e-06, 5.944000000000782e-06, 2.4160000000016113e-06, 4.611000000001586e-06, 2.3479999999992396e-06, 5.667000000000866e-06, 3.832999999998227e-06]</msg>
<status status="PASS" starttime="20201112 12:41:38.671" endtime="20201112 12:41:38.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.666" endtime="20201112 12:41:38.674"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.676" endtime="20201112 12:41:38.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:38.680" endtime="20201112 12:41:38.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.678" endtime="20201112 12:41:38.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.674" endtime="20201112 12:41:38.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.305" endtime="20201112 12:41:38.700"></status>
</kw>
<msg timestamp="20201112 12:41:38.701" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.709" endtime="20201112 12:41:38.723"></status>
</kw>
<msg timestamp="20201112 12:41:38.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:38.707" endtime="20201112 12:41:38.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:38.726" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:38.725" endtime="20201112 12:41:38.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.727" endtime="20201112 12:41:38.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.704" endtime="20201112 12:41:38.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.703" endtime="20201112 12:41:38.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:38.736" endtime="20201112 12:41:39.006"></status>
</kw>
<msg timestamp="20201112 12:41:39.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017925083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017929944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:38.735" endtime="20201112 12:41:39.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017925083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017929944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:39.009" endtime="20201112 12:41:39.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.015" endtime="20201112 12:41:39.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.732" endtime="20201112 12:41:39.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.730" endtime="20201112 12:41:39.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.021" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:39.020" endtime="20201112 12:41:39.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.025" level="INFO">VALUE: [{'time': 0.017925083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017929944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017935778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8339999999997005e-06, 'source_diff': 5.8339999999997005e-06}, {'time': 0.017940889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.017945181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999999491e-06, 'source_diff': 4.291999999999491e-06}, {'time': 0.017948528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3469999999972966e-06, 'source_diff': 3.3469999999972966e-06}, {'time': 0.017954486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.017960653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.017963833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.017966292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4589999999997947e-06, 'source_diff': 2.4589999999997947e-06}, {'time': 0.017969333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.017975306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.017978778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.472000000000891e-06, 'source_diff': 3.472000000000891e-06}, {'time': 0.017984319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.017988375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.05600000000228e-06, 'source_diff': 4.05600000000228e-06}, {'time': 0.017991639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2639999999993508e-06, 'source_diff': 3.2639999999993508e-06}, {'time': 0.017994681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.017997097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4160000000016113e-06, 'source_diff': 2.4160000000016113e-06}, {'time': 0.018001014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.916999999999116e-06, 'source_diff': 3.916999999999116e-06}, {'time': 0.018005236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.222000000001641e-06, 'source_diff': 4.222000000001641e-06}, {'time': 0.018008833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5969999999975466e-06, 'source_diff': 3.5969999999975466e-06}, {'time': 0.018015056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.223000000003115e-06, 'source_diff': 6.223000000003115e-06}, {'time': 0.018017417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.018022264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.846999999998797e-06, 'source_diff': 4.846999999998797e-06}, {'time': 0.018024667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.403000000001515e-06, 'source_diff': 2.403000000001515e-06}, {'time': 0.018030542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.874999999998937e-06, 'source_diff': 5.874999999998937e-06}, {'time': 0.018033181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.018038431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000001781e-06, 'source_diff': 5.250000000001781e-06}, {'time': 0.018041653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.222000000000641e-06, 'source_diff': 3.222000000000641e-06}, {'time': 0.018044194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.540999999998267e-06, 'source_diff': 2.540999999998267e-06}, {'time': 0.018050153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9589999999998255e-06, 'source_diff': 5.9589999999998255e-06}, {'time': 0.018052819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6660000000018613e-06, 'source_diff': 2.6660000000018613e-06}, {'time': 0.018057042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.018061958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.916000000000642e-06, 'source_diff': 4.916000000000642e-06}, {'time': 0.018064611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.653000000001765e-06, 'source_diff': 2.653000000001765e-06}, {'time': 0.018067278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6669999999978655e-06, 'source_diff': 2.6669999999978655e-06}, {'time': 0.018072875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999999547e-06, 'source_diff': 5.596999999999547e-06}, {'time': 0.018075472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.597000000000016e-06, 'source_diff': 2.597000000000016e-06}, {'time': 0.018080208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.736000000001711e-06, 'source_diff': 4.736000000001711e-06}, {'time': 0.018086153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.018089542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.018094014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018098167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018101833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6660000000028614e-06, 'source_diff': 3.6660000000028614e-06}, {'time': 0.018105569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.018109722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.153000000003265e-06, 'source_diff': 4.153000000003265e-06}, {'time': 0.018113653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9309999999986855e-06, 'source_diff': 3.9309999999986855e-06}, {'time': 0.018118986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.018122833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}, {'time': 0.018126278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4449999999977554e-06, 'source_diff': 3.4449999999977554e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:39.022" endtime="20201112 12:41:39.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.018" endtime="20201112 12:41:39.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:39.042" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:39.027" endtime="20201112 12:41:39.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.046" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:39.045" endtime="20201112 12:41:39.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.049" level="INFO">VALUE: {'sourcediff': [0, 4.860999999998367e-06, 5.8339999999997005e-06, 5.111000000002086e-06, 4.291999999999491e-06, 3.3469999999972966e-06, 5.958000000000352e-06, 6.167000000001366e-06, 3.179999999998462e-06, 2.4589999999997947e-06, 3.0410000000022364e-06, 5.9729999999993955e-06, 3.472000000000891e-06, 5.540999999997798e-06, 4.05600000000228e-06, 3.2639999999993508e-06, 3.0419999999982406e-06, 2.4160000000016113e-06, 3.916999999999116e-06, 4.222000000001641e-06, 3.5969999999975466e-06, 6.223000000003115e-06, 2.360999999999336e-06, 4.846999999998797e-06, 2.403000000001515e-06, 5.874999999998937e-06, 2.6389999999987257e-06, 5.250000000001781e-06, 3.222000000000641e-06, 2.540999999998267e-06, 5.9589999999998255e-06, 2.6660000000018613e-06, 4.222999999997645e-06, 4.916000000000642e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 5.596999999999547e-06, 2.597000000000016e-06, 4.736000000001711e-06, 5.945000000000256e-06, 3.3889999999994758e-06, 4.471999999998422e-06, 4.152999999999796e-06, 3.6660000000028614e-06, 3.7359999999972415e-06, 4.153000000003265e-06, 3.9309999999986855e-06, 5.332999999999727e-06, 3.847000000001266e-06, 3.4449999999977554e-06], 'source_diff': [0, 4.860999999998367e-06, 5.8339999999997005e-06, 5.111000000002086e-06, 4.291999999999491e-06, 3.3469999999972966e-06, 5.958000000000352e-06, 6.167000000001366e-06, 3.179999999998462e-06, 2.4589999999997947e-06, 3.0410000000022364e-06, 5.9729999999993955e-06, 3.472000000000891e-06, 5.540999999997798e-06, 4.05600000000228e-06, 3.2639999999993508e-06, 3.0419999999982406e-06, 2.4160000000016113e-06, 3.916999999999116e-06, 4.222000000001641e-06, 3.5969999999975466e-06, 6.223000000003115e-06, 2.360999999999336e-06, 4.846999999998797e-06, 2.403000000001515e-06, 5.874999999998937e-06, 2.6389999999987257e-06, 5.250000000001781e-06, 3.222000000000641e-06, 2.540999999998267e-06, 5.9589999999998255e-06, 2.6660000000018613e-06, 4.222999999997645e-06, 4.916000000000642e-06, 2.653000000001765e-06, 2.6669999999978655e-06, 5.596999999999547e-06, 2.597000000000016e-06, 4.736000000001711e-06, 5.945000000000256e-06, 3.3889999999994758e-06, 4.471999999998422e-06, 4.152999999999796e-06, 3.6660000000028614e-06, 3.7359999999972415e-06, 4.153000000003265e-06, 3.9309999999986855e-06, 5.332999999999727e-06, 3.847000000001266e-06, 3.4449999999977554e-06], 'eventtime': [0.017925083, 0.017929944, 0.017935778, 0.017940889, 0.017945181, 0.017948528, 0.017954486, 0.017960653, 0.017963833, 0.017966292, 0.017969333, 0.017975306, 0.017978778, 0.017984319, 0.017988375, 0.017991639, 0.017994681, 0.017997097, 0.018001014, 0.018005236, 0.018008833, 0.018015056, 0.018017417, 0.018022264, 0.018024667, 0.018030542, 0.018033181, 0.018038431, 0.018041653, 0.018044194, 0.018050153, 0.018052819, 0.018057042, 0.018061958, 0.018064611, 0.018067278, 0.018072875, 0.018075472, 0.018080208, 0.018086153, 0.018089542, 0.018094014, 0.018098167, 0.018101833, 0.018105569, 0.018109722, 0.018113653, 0.018118986, 0.018122833, 0.018126278]}</msg>
<status status="PASS" starttime="20201112 12:41:39.047" endtime="20201112 12:41:39.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.043" endtime="20201112 12:41:39.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:39.054" level="INFO">${RESULT} = [{'time': 0.017929944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860999999998367e-06, 'source_diff': 4.860999999998367e-06}, {'time': 0.017940889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:39.051" endtime="20201112 12:41:39.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:39.062" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:39.055" endtime="20201112 12:41:39.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.066" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:39.065" endtime="20201112 12:41:39.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.069" level="INFO">VALUE: [4.860999999998367e-06, 5.111000000002086e-06, 3.3469999999972966e-06, 6.167000000001366e-06, 2.4589999999997947e-06, 5.9729999999993955e-06, 5.540999999997798e-06, 3.2639999999993508e-06, 2.4160000000016113e-06, 4.222000000001641e-06, 6.223000000003115e-06, 4.846999999998797e-06, 5.874999999998937e-06, 5.250000000001781e-06, 2.540999999998267e-06, 2.6660000000018613e-06, 4.916000000000642e-06, 2.6669999999978655e-06, 2.597000000000016e-06, 5.945000000000256e-06, 4.471999999998422e-06, 3.6660000000028614e-06, 4.153000000003265e-06, 5.332999999999727e-06, 3.4449999999977554e-06]</msg>
<status status="PASS" starttime="20201112 12:41:39.067" endtime="20201112 12:41:39.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.063" endtime="20201112 12:41:39.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.072" endtime="20201112 12:41:39.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:39.076" endtime="20201112 12:41:39.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.074" endtime="20201112 12:41:39.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.071" endtime="20201112 12:41:39.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:38.701" endtime="20201112 12:41:39.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:31.204" endtime="20201112 12:41:39.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:39.102" endtime="20201112 12:41:39.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.100" endtime="20201112 12:41:39.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.098" endtime="20201112 12:41:39.122"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:31.132" endtime="20201112 12:41:39.122" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:39.130" endtime="20201112 12:41:39.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.129" endtime="20201112 12:41:39.150"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.165" endtime="20201112 12:41:39.184"></status>
</kw>
<msg timestamp="20201112 12:41:39.184" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:39.162" endtime="20201112 12:41:39.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.187" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:39.185" endtime="20201112 12:41:39.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.190" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:39.188" endtime="20201112 12:41:39.190"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:39.159" endtime="20201112 12:41:39.191"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:39.157" endtime="20201112 12:41:39.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.156" endtime="20201112 12:41:39.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:39.196" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:39.195" endtime="20201112 12:41:39.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.193" endtime="20201112 12:41:39.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.155" endtime="20201112 12:41:39.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.154" endtime="20201112 12:41:39.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.197" endtime="20201112 12:41:39.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.153" endtime="20201112 12:41:39.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.151" endtime="20201112 12:41:39.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.127" endtime="20201112 12:41:39.200"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:41:39.203" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.211" endtime="20201112 12:41:39.226"></status>
</kw>
<msg timestamp="20201112 12:41:39.227" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:39.209" endtime="20201112 12:41:39.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:39.228" endtime="20201112 12:41:39.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.231" endtime="20201112 12:41:39.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.206" endtime="20201112 12:41:39.233"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.205" endtime="20201112 12:41:39.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.240" endtime="20201112 12:41:39.530"></status>
</kw>
<msg timestamp="20201112 12:41:39.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070468333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070474625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:39.239" endtime="20201112 12:41:39.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070468333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070474625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:39.534" endtime="20201112 12:41:39.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.543" endtime="20201112 12:41:39.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.236" endtime="20201112 12:41:39.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.234" endtime="20201112 12:41:39.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:39.549" level="INFO">${RESULT} = [{'time': 0.070474625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.29200000000496e-06, 'source_diff': 6.29200000000496e-06}, {'time': 0.070478736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:41:39.546" endtime="20201112 12:41:39.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:39.564" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:39.551" endtime="20201112 12:41:39.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.569" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:39.567" endtime="20201112 12:41:39.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.571" level="INFO">VALUE: [6.29200000000496e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.832999999992757e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.832999999992757e-06, 1.8339999999922307e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8620000000052483e-06, 1.8620000000052483e-06, 1.860999999991897e-06, 1.8620000000052483e-06, 1.860999999991897e-06, 1.8750000000122835e-06, 1.9030000000114233e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000122835e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.8620000000052483e-06, 1.8620000000052483e-06, 1.8199999999995997e-06, 1.8199999999995997e-06, 1.8610000000057747e-06, 1.8620000000052483e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.819000000000126e-06, 1.860999999991897e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.860999999991897e-06, 1.8610000000057747e-06, 1.8610000000057747e-06, 1.860999999991897e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 12:41:39.570" endtime="20201112 12:41:39.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.565" endtime="20201112 12:41:39.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.574" endtime="20201112 12:41:39.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:39.578" endtime="20201112 12:41:39.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.576" endtime="20201112 12:41:39.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.573" endtime="20201112 12:41:39.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.203" endtime="20201112 12:41:39.599"></status>
</kw>
<msg timestamp="20201112 12:41:39.599" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.607" endtime="20201112 12:41:39.623"></status>
</kw>
<msg timestamp="20201112 12:41:39.623" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:39.606" endtime="20201112 12:41:39.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.626" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:39.625" endtime="20201112 12:41:39.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.627" endtime="20201112 12:41:39.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.603" endtime="20201112 12:41:39.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.601" endtime="20201112 12:41:39.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.636" endtime="20201112 12:41:39.925"></status>
</kw>
<msg timestamp="20201112 12:41:39.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018844014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:39.635" endtime="20201112 12:41:39.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018844014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:39.930" endtime="20201112 12:41:39.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.938" endtime="20201112 12:41:39.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.632" endtime="20201112 12:41:39.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.630" endtime="20201112 12:41:39.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:39.945" level="INFO">${RESULT} = [{'time': 0.018845875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018852819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:39.942" endtime="20201112 12:41:39.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:39.960" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:39.946" endtime="20201112 12:41:39.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.964" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:39.963" endtime="20201112 12:41:39.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:39.967" level="INFO">VALUE: [1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.7910000000009862e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8049999999970867e-06, 1.915999999997642e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.9160000000011113e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.889000000001445e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 12:41:39.965" endtime="20201112 12:41:39.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.961" endtime="20201112 12:41:39.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:39.970" endtime="20201112 12:41:39.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:39.974" endtime="20201112 12:41:39.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.972" endtime="20201112 12:41:39.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.968" endtime="20201112 12:41:39.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.600" endtime="20201112 12:41:39.995"></status>
</kw>
<msg timestamp="20201112 12:41:39.995" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.003" endtime="20201112 12:41:40.018"></status>
</kw>
<msg timestamp="20201112 12:41:40.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:40.002" endtime="20201112 12:41:40.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.022" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:40.020" endtime="20201112 12:41:40.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.023" endtime="20201112 12:41:40.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.999" endtime="20201112 12:41:40.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.997" endtime="20201112 12:41:40.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.032" endtime="20201112 12:41:40.322"></status>
</kw>
<msg timestamp="20201112 12:41:40.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018541431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:40.030" endtime="20201112 12:41:40.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018541431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018543278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:40.326" endtime="20201112 12:41:40.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.335" endtime="20201112 12:41:40.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.028" endtime="20201112 12:41:40.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.026" endtime="20201112 12:41:40.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:40.342" level="INFO">${RESULT} = [{'time': 0.018543278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018551028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:40.338" endtime="20201112 12:41:40.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:40.358" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:40.343" endtime="20201112 12:41:40.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.362" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:40.361" endtime="20201112 12:41:40.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.365" level="INFO">VALUE: [1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.9160000000011113e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.9020000000015413e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.9169999999971155e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.917000000000585e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.848000000002209e-06, 1.8749999999984057e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 12:41:40.363" endtime="20201112 12:41:40.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.359" endtime="20201112 12:41:40.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.368" endtime="20201112 12:41:40.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:40.372" endtime="20201112 12:41:40.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.370" endtime="20201112 12:41:40.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.367" endtime="20201112 12:41:40.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.996" endtime="20201112 12:41:40.393"></status>
</kw>
<msg timestamp="20201112 12:41:40.393" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.401" endtime="20201112 12:41:40.416"></status>
</kw>
<msg timestamp="20201112 12:41:40.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:40.399" endtime="20201112 12:41:40.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.419" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:40.418" endtime="20201112 12:41:40.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.420" endtime="20201112 12:41:40.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.396" endtime="20201112 12:41:40.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.395" endtime="20201112 12:41:40.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.430" endtime="20201112 12:41:40.713"></status>
</kw>
<msg timestamp="20201112 12:41:40.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018352236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018354097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:40.428" endtime="20201112 12:41:40.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018352236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018354097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:40.717" endtime="20201112 12:41:40.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.726" endtime="20201112 12:41:40.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.426" endtime="20201112 12:41:40.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.424" endtime="20201112 12:41:40.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:40.733" level="INFO">${RESULT} = [{'time': 0.018354097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018358083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:40.729" endtime="20201112 12:41:40.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:40.747" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:40.734" endtime="20201112 12:41:40.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.752" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:40.751" endtime="20201112 12:41:40.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.754" level="INFO">VALUE: [1.8609999999988358e-06, 1.889000000001445e-06, 1.848000000002209e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8339999999991696e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.9029999999975455e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8470000000027353e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:41:40.753" endtime="20201112 12:41:40.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.748" endtime="20201112 12:41:40.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.758" endtime="20201112 12:41:40.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:40.762" endtime="20201112 12:41:40.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.760" endtime="20201112 12:41:40.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.756" endtime="20201112 12:41:40.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.393" endtime="20201112 12:41:40.782"></status>
</kw>
<msg timestamp="20201112 12:41:40.783" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.791" endtime="20201112 12:41:40.807"></status>
</kw>
<msg timestamp="20201112 12:41:40.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:40.789" endtime="20201112 12:41:40.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:40.810" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:40.808" endtime="20201112 12:41:40.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.811" endtime="20201112 12:41:40.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.786" endtime="20201112 12:41:40.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.785" endtime="20201112 12:41:40.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:40.820" endtime="20201112 12:41:41.108"></status>
</kw>
<msg timestamp="20201112 12:41:41.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01848, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481847, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:41:40.819" endtime="20201112 12:41:41.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01848, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481847, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:41:41.112" endtime="20201112 12:41:41.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.121" endtime="20201112 12:41:41.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.816" endtime="20201112 12:41:41.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.814" endtime="20201112 12:41:41.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:41.128" level="INFO">${RESULT} = [{'time': 0.018481847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018487208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:41.124" endtime="20201112 12:41:41.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:41.142" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:41.129" endtime="20201112 12:41:41.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.147" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:41.146" endtime="20201112 12:41:41.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.149" level="INFO">VALUE: [1.846999999999266e-06, 1.9160000000011113e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.819000000000126e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.77800000000089e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.9169999999971155e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8479999999987395e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8199999999995997e-06]</msg>
<status status="PASS" starttime="20201112 12:41:41.148" endtime="20201112 12:41:41.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.143" endtime="20201112 12:41:41.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.153" endtime="20201112 12:41:41.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:41.157" endtime="20201112 12:41:41.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.155" endtime="20201112 12:41:41.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.151" endtime="20201112 12:41:41.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:40.783" endtime="20201112 12:41:41.177"></status>
</kw>
<msg timestamp="20201112 12:41:41.178" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.186" endtime="20201112 12:41:41.200"></status>
</kw>
<msg timestamp="20201112 12:41:41.201" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:41.184" endtime="20201112 12:41:41.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:41.202" endtime="20201112 12:41:41.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.205" endtime="20201112 12:41:41.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.181" endtime="20201112 12:41:41.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.180" endtime="20201112 12:41:41.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.214" endtime="20201112 12:41:41.496"></status>
</kw>
<msg timestamp="20201112 12:41:41.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018314806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018316681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:41.212" endtime="20201112 12:41:41.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018314806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018316681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:41.501" endtime="20201112 12:41:41.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.509" endtime="20201112 12:41:41.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.210" endtime="20201112 12:41:41.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.208" endtime="20201112 12:41:41.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:41.516" level="INFO">${RESULT} = [{'time': 0.018316681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018323792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:41.513" endtime="20201112 12:41:41.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:41.531" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:41.517" endtime="20201112 12:41:41.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.535" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:41.534" endtime="20201112 12:41:41.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.538" level="INFO">VALUE: [1.8750000000018752e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.834000000002639e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8470000000027353e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.915999999997642e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 12:41:41.536" endtime="20201112 12:41:41.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.532" endtime="20201112 12:41:41.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.542" endtime="20201112 12:41:41.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:41.545" endtime="20201112 12:41:41.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.543" endtime="20201112 12:41:41.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.540" endtime="20201112 12:41:41.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.178" endtime="20201112 12:41:41.566"></status>
</kw>
<msg timestamp="20201112 12:41:41.566" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.574" endtime="20201112 12:41:41.590"></status>
</kw>
<msg timestamp="20201112 12:41:41.590" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:41.572" endtime="20201112 12:41:41.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.593" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:41.591" endtime="20201112 12:41:41.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.594" endtime="20201112 12:41:41.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.570" endtime="20201112 12:41:41.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.568" endtime="20201112 12:41:41.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.603" endtime="20201112 12:41:41.890"></status>
</kw>
<msg timestamp="20201112 12:41:41.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018438042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018439903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:41.601" endtime="20201112 12:41:41.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018438042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018439903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:41.894" endtime="20201112 12:41:41.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.902" endtime="20201112 12:41:41.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.599" endtime="20201112 12:41:41.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.597" endtime="20201112 12:41:41.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:41.909" level="INFO">${RESULT} = [{'time': 0.018439903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018443986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:41.906" endtime="20201112 12:41:41.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:41.925" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:41.910" endtime="20201112 12:41:41.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.929" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:41.928" endtime="20201112 12:41:41.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.932" level="INFO">VALUE: [1.8609999999988358e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.901999999998072e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.903000000001015e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.9169999999971155e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.9029999999975455e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.9449999999997247e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:41:41.930" endtime="20201112 12:41:41.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.926" endtime="20201112 12:41:41.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.935" endtime="20201112 12:41:41.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:41.939" endtime="20201112 12:41:41.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.937" endtime="20201112 12:41:41.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.934" endtime="20201112 12:41:41.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.567" endtime="20201112 12:41:41.960"></status>
</kw>
<msg timestamp="20201112 12:41:41.960" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.968" endtime="20201112 12:41:41.984"></status>
</kw>
<msg timestamp="20201112 12:41:41.984" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:41.966" endtime="20201112 12:41:41.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:41.987" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:41.985" endtime="20201112 12:41:41.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.988" endtime="20201112 12:41:41.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.964" endtime="20201112 12:41:41.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.962" endtime="20201112 12:41:41.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:41.997" endtime="20201112 12:41:42.293"></status>
</kw>
<msg timestamp="20201112 12:41:42.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018452958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018454847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:41.996" endtime="20201112 12:41:42.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:42.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018452958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018454847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:42.303" endtime="20201112 12:41:42.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.321" endtime="20201112 12:41:42.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.993" endtime="20201112 12:41:42.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.991" endtime="20201112 12:41:42.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:42.335" level="INFO">${RESULT} = [{'time': 0.018454847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018459097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:42.328" endtime="20201112 12:41:42.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:42.366" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:42.337" endtime="20201112 12:41:42.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:42.372" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:42.371" endtime="20201112 12:41:42.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:42.375" level="INFO">VALUE: [1.889000000001445e-06, 1.889000000001445e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 12:41:42.373" endtime="20201112 12:41:42.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.368" endtime="20201112 12:41:42.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.378" endtime="20201112 12:41:42.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:42.382" endtime="20201112 12:41:42.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.380" endtime="20201112 12:41:42.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.377" endtime="20201112 12:41:42.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:41.961" endtime="20201112 12:41:42.403"></status>
</kw>
<msg timestamp="20201112 12:41:42.403" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.411" endtime="20201112 12:41:42.426"></status>
</kw>
<msg timestamp="20201112 12:41:42.427" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:42.409" endtime="20201112 12:41:42.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:42.429" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:42.428" endtime="20201112 12:41:42.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.430" endtime="20201112 12:41:42.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.407" endtime="20201112 12:41:42.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.405" endtime="20201112 12:41:42.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.439" endtime="20201112 12:41:42.720"></status>
</kw>
<msg timestamp="20201112 12:41:42.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018239069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:42.438" endtime="20201112 12:41:42.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:42.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018239069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:42.724" endtime="20201112 12:41:42.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.733" endtime="20201112 12:41:42.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.435" endtime="20201112 12:41:42.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.433" endtime="20201112 12:41:42.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:42.739" level="INFO">${RESULT} = [{'time': 0.018240931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8619999999983095e-06, 'source_diff': 1.8619999999983095e-06}, {'time': 0.018245986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:42.736" endtime="20201112 12:41:42.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:42.753" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:42.740" endtime="20201112 12:41:42.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:42.757" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:42.756" endtime="20201112 12:41:42.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:42.760" level="INFO">VALUE: [1.8619999999983095e-06, 1.846999999999266e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.8619999999983095e-06, 1.9029999999975455e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8610000000023053e-06, 1.9029999999975455e-06, 1.862000000001779e-06, 1.8610000000023053e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.848000000002209e-06, 1.862000000001779e-06, 1.8060000000000298e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.9160000000011113e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 12:41:42.758" endtime="20201112 12:41:42.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.754" endtime="20201112 12:41:42.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.770" endtime="20201112 12:41:42.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:42.773" endtime="20201112 12:41:42.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.772" endtime="20201112 12:41:42.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.768" endtime="20201112 12:41:42.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.404" endtime="20201112 12:41:42.794"></status>
</kw>
<msg timestamp="20201112 12:41:42.794" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.802" endtime="20201112 12:41:42.817"></status>
</kw>
<msg timestamp="20201112 12:41:42.818" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:42.800" endtime="20201112 12:41:42.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:42.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:42.819" endtime="20201112 12:41:42.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.822" endtime="20201112 12:41:42.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.798" endtime="20201112 12:41:42.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.796" endtime="20201112 12:41:42.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:42.830" endtime="20201112 12:41:43.120"></status>
</kw>
<msg timestamp="20201112 12:41:43.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017772778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017774625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:42.829" endtime="20201112 12:41:43.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017772778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017774625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:43.124" endtime="20201112 12:41:43.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.132" endtime="20201112 12:41:43.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.826" endtime="20201112 12:41:43.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.825" endtime="20201112 12:41:43.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:43.139" level="INFO">${RESULT} = [{'time': 0.017774625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.017779069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:43.136" endtime="20201112 12:41:43.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:43.153" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:43.140" endtime="20201112 12:41:43.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.157" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:43.156" endtime="20201112 12:41:43.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.160" level="INFO">VALUE: [1.846999999999266e-06, 1.7770000000014163e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.8199999999995997e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8050000000005562e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:41:43.158" endtime="20201112 12:41:43.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.154" endtime="20201112 12:41:43.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.163" endtime="20201112 12:41:43.164"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:43.166" endtime="20201112 12:41:43.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.165" endtime="20201112 12:41:43.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.162" endtime="20201112 12:41:43.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:42.795" endtime="20201112 12:41:43.187"></status>
</kw>
<msg timestamp="20201112 12:41:43.187" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.195" endtime="20201112 12:41:43.210"></status>
</kw>
<msg timestamp="20201112 12:41:43.211" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:43.193" endtime="20201112 12:41:43.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.213" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:43.212" endtime="20201112 12:41:43.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.214" endtime="20201112 12:41:43.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.191" endtime="20201112 12:41:43.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.189" endtime="20201112 12:41:43.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.223" endtime="20201112 12:41:43.510"></status>
</kw>
<msg timestamp="20201112 12:41:43.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017961181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017963056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:43.222" endtime="20201112 12:41:43.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017961181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017963056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:43.514" endtime="20201112 12:41:43.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.522" endtime="20201112 12:41:43.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.219" endtime="20201112 12:41:43.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.217" endtime="20201112 12:41:43.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:43.529" level="INFO">${RESULT} = [{'time': 0.017963056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.017968361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:43.525" endtime="20201112 12:41:43.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:43.543" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:43.530" endtime="20201112 12:41:43.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.548" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:43.547" endtime="20201112 12:41:43.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.550" level="INFO">VALUE: [1.8750000000018752e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8339999999991696e-06, 1.9029999999975455e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.848000000002209e-06, 1.9029999999975455e-06, 1.9029999999975455e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.848000000002209e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.846999999999266e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:41:43.549" endtime="20201112 12:41:43.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.544" endtime="20201112 12:41:43.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.554" endtime="20201112 12:41:43.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:43.557" endtime="20201112 12:41:43.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.555" endtime="20201112 12:41:43.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.552" endtime="20201112 12:41:43.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.188" endtime="20201112 12:41:43.578"></status>
</kw>
<msg timestamp="20201112 12:41:43.578" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.585" endtime="20201112 12:41:43.600"></status>
</kw>
<msg timestamp="20201112 12:41:43.601" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:43.584" endtime="20201112 12:41:43.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.603" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:43.602" endtime="20201112 12:41:43.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.604" endtime="20201112 12:41:43.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.581" endtime="20201112 12:41:43.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.580" endtime="20201112 12:41:43.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.613" endtime="20201112 12:41:43.929"></status>
</kw>
<msg timestamp="20201112 12:41:43.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017739361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017741208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:43.612" endtime="20201112 12:41:43.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017739361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017741208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:43.933" endtime="20201112 12:41:43.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.942" endtime="20201112 12:41:43.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.609" endtime="20201112 12:41:43.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.608" endtime="20201112 12:41:43.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:43.949" level="INFO">${RESULT} = [{'time': 0.017741208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.017748014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:43.945" endtime="20201112 12:41:43.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:43.963" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:43.950" endtime="20201112 12:41:43.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.968" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:43.967" endtime="20201112 12:41:43.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:43.970" level="INFO">VALUE: [1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.915999999997642e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8339999999991696e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8330000000031654e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8479999999987395e-06, 1.917000000000585e-06, 1.848000000002209e-06, 1.846999999999266e-06, 1.8470000000027353e-06]</msg>
<status status="PASS" starttime="20201112 12:41:43.969" endtime="20201112 12:41:43.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.964" endtime="20201112 12:41:43.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:43.974" endtime="20201112 12:41:43.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:43.977" endtime="20201112 12:41:43.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.976" endtime="20201112 12:41:43.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.972" endtime="20201112 12:41:43.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.578" endtime="20201112 12:41:43.998"></status>
</kw>
<msg timestamp="20201112 12:41:43.999" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.007" endtime="20201112 12:41:44.022"></status>
</kw>
<msg timestamp="20201112 12:41:44.023" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:44.005" endtime="20201112 12:41:44.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.025" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:44.024" endtime="20201112 12:41:44.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.026" endtime="20201112 12:41:44.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.002" endtime="20201112 12:41:44.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.001" endtime="20201112 12:41:44.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.035" endtime="20201112 12:41:44.320"></status>
</kw>
<msg timestamp="20201112 12:41:44.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018372278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018374139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:44.034" endtime="20201112 12:41:44.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018372278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018374139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:44.324" endtime="20201112 12:41:44.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.333" endtime="20201112 12:41:44.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.031" endtime="20201112 12:41:44.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.029" endtime="20201112 12:41:44.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:44.340" level="INFO">${RESULT} = [{'time': 0.018374139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018378681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:44.336" endtime="20201112 12:41:44.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:44.354" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:44.341" endtime="20201112 12:41:44.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.359" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:44.358" endtime="20201112 12:41:44.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.361" level="INFO">VALUE: [1.8610000000023053e-06, 1.848000000002209e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.917000000000585e-06, 1.8619999999983095e-06, 1.889000000001445e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8889999999979756e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.915999999997642e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.846999999999266e-06]</msg>
<status status="PASS" starttime="20201112 12:41:44.360" endtime="20201112 12:41:44.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.355" endtime="20201112 12:41:44.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.365" endtime="20201112 12:41:44.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:44.369" endtime="20201112 12:41:44.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.367" endtime="20201112 12:41:44.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.363" endtime="20201112 12:41:44.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:43.999" endtime="20201112 12:41:44.390"></status>
</kw>
<msg timestamp="20201112 12:41:44.390" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.398" endtime="20201112 12:41:44.414"></status>
</kw>
<msg timestamp="20201112 12:41:44.414" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:44.396" endtime="20201112 12:41:44.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:44.415" endtime="20201112 12:41:44.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.418" endtime="20201112 12:41:44.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.393" endtime="20201112 12:41:44.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.392" endtime="20201112 12:41:44.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.427" endtime="20201112 12:41:44.716"></status>
</kw>
<msg timestamp="20201112 12:41:44.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018521389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018523278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:44.426" endtime="20201112 12:41:44.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018521389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018523278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:44.720" endtime="20201112 12:41:44.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.729" endtime="20201112 12:41:44.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.423" endtime="20201112 12:41:44.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.421" endtime="20201112 12:41:44.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:44.736" level="INFO">${RESULT} = [{'time': 0.018523278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.01852725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:41:44.732" endtime="20201112 12:41:44.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:44.750" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:44.737" endtime="20201112 12:41:44.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.755" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:44.753" endtime="20201112 12:41:44.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.757" level="INFO">VALUE: [1.889000000001445e-06, 1.8749999999984057e-06, 1.8889999999979756e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.8619999999983095e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8470000000027353e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.8470000000027353e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 12:41:44.756" endtime="20201112 12:41:44.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.751" endtime="20201112 12:41:44.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.761" endtime="20201112 12:41:44.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:44.764" endtime="20201112 12:41:44.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.763" endtime="20201112 12:41:44.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.759" endtime="20201112 12:41:44.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.390" endtime="20201112 12:41:44.785"></status>
</kw>
<msg timestamp="20201112 12:41:44.785" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.793" endtime="20201112 12:41:44.809"></status>
</kw>
<msg timestamp="20201112 12:41:44.809" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:44.792" endtime="20201112 12:41:44.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:44.812" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:44.810" endtime="20201112 12:41:44.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.813" endtime="20201112 12:41:44.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.789" endtime="20201112 12:41:44.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.787" endtime="20201112 12:41:44.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:44.822" endtime="20201112 12:41:45.106"></status>
</kw>
<msg timestamp="20201112 12:41:45.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018366986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018368819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:44.821" endtime="20201112 12:41:45.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018366986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018368819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:45.111" endtime="20201112 12:41:45.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.119" endtime="20201112 12:41:45.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.818" endtime="20201112 12:41:45.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.816" endtime="20201112 12:41:45.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:45.126" level="INFO">${RESULT} = [{'time': 0.018368819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8330000000031654e-06, 'source_diff': 1.8330000000031654e-06}, {'time': 0.018375694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:45.123" endtime="20201112 12:41:45.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:45.142" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:45.127" endtime="20201112 12:41:45.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.146" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:45.145" endtime="20201112 12:41:45.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.149" level="INFO">VALUE: [1.8330000000031654e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.931000000000155e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.9169999999971155e-06, 1.846999999999266e-06, 1.8050000000005562e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8199999999995997e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8060000000000298e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8049999999970867e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:41:45.147" endtime="20201112 12:41:45.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.143" endtime="20201112 12:41:45.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.152" endtime="20201112 12:41:45.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:45.156" endtime="20201112 12:41:45.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.154" endtime="20201112 12:41:45.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.151" endtime="20201112 12:41:45.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:44.786" endtime="20201112 12:41:45.177"></status>
</kw>
<msg timestamp="20201112 12:41:45.177" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.185" endtime="20201112 12:41:45.200"></status>
</kw>
<msg timestamp="20201112 12:41:45.201" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:45.183" endtime="20201112 12:41:45.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:45.202" endtime="20201112 12:41:45.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.204" endtime="20201112 12:41:45.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.181" endtime="20201112 12:41:45.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.179" endtime="20201112 12:41:45.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.214" endtime="20201112 12:41:45.499"></status>
</kw>
<msg timestamp="20201112 12:41:45.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018400167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018402042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:45.212" endtime="20201112 12:41:45.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018400167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018402042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:45.503" endtime="20201112 12:41:45.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.512" endtime="20201112 12:41:45.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.210" endtime="20201112 12:41:45.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.208" endtime="20201112 12:41:45.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:45.519" level="INFO">${RESULT} = [{'time': 0.018402042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018407597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:45.515" endtime="20201112 12:41:45.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:45.534" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:45.520" endtime="20201112 12:41:45.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.539" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:45.537" endtime="20201112 12:41:45.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.541" level="INFO">VALUE: [1.8750000000018752e-06, 1.8470000000027353e-06, 1.8610000000023053e-06, 1.887999999998502e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8479999999987395e-06, 1.848000000002209e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8060000000000298e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8619999999983095e-06, 1.8609999999988358e-06, 1.862000000001779e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.862000000001779e-06, 1.834000000002639e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.903000000001015e-06, 1.862000000001779e-06, 1.9029999999975455e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.848000000002209e-06]</msg>
<status status="PASS" starttime="20201112 12:41:45.540" endtime="20201112 12:41:45.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.535" endtime="20201112 12:41:45.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.545" endtime="20201112 12:41:45.546"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:45.549" endtime="20201112 12:41:45.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.547" endtime="20201112 12:41:45.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.543" endtime="20201112 12:41:45.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.177" endtime="20201112 12:41:45.569"></status>
</kw>
<msg timestamp="20201112 12:41:45.570" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.578" endtime="20201112 12:41:45.593"></status>
</kw>
<msg timestamp="20201112 12:41:45.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:45.576" endtime="20201112 12:41:45.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.596" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:45.595" endtime="20201112 12:41:45.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.597" endtime="20201112 12:41:45.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.573" endtime="20201112 12:41:45.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.572" endtime="20201112 12:41:45.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.607" endtime="20201112 12:41:45.896"></status>
</kw>
<msg timestamp="20201112 12:41:45.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018672889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01867475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:45.605" endtime="20201112 12:41:45.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018672889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01867475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:45.901" endtime="20201112 12:41:45.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.909" endtime="20201112 12:41:45.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.603" endtime="20201112 12:41:45.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.601" endtime="20201112 12:41:45.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:45.916" level="INFO">${RESULT} = [{'time': 0.01867475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018679347, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:41:45.913" endtime="20201112 12:41:45.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:45.931" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:45.917" endtime="20201112 12:41:45.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.935" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:45.934" endtime="20201112 12:41:45.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.938" level="INFO">VALUE: [1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8199999999995997e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.915999999997642e-06, 1.832999999999696e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.832999999999696e-06, 1.917000000000585e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8889999999979756e-06, 1.8199999999995997e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.903000000001015e-06]</msg>
<status status="PASS" starttime="20201112 12:41:45.936" endtime="20201112 12:41:45.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.932" endtime="20201112 12:41:45.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.941" endtime="20201112 12:41:45.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:45.945" endtime="20201112 12:41:45.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.943" endtime="20201112 12:41:45.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.940" endtime="20201112 12:41:45.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.570" endtime="20201112 12:41:45.966"></status>
</kw>
<msg timestamp="20201112 12:41:45.966" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.974" endtime="20201112 12:41:45.990"></status>
</kw>
<msg timestamp="20201112 12:41:45.990" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:45.972" endtime="20201112 12:41:45.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.993" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:45.991" endtime="20201112 12:41:45.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:45.994" endtime="20201112 12:41:45.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.970" endtime="20201112 12:41:45.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.968" endtime="20201112 12:41:45.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.003" endtime="20201112 12:41:46.292"></status>
</kw>
<msg timestamp="20201112 12:41:46.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018529889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01853175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:46.002" endtime="20201112 12:41:46.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018529889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01853175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:46.297" endtime="20201112 12:41:46.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.305" endtime="20201112 12:41:46.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.999" endtime="20201112 12:41:46.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.997" endtime="20201112 12:41:46.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:46.312" level="INFO">${RESULT} = [{'time': 0.01853175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018537292, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:41:46.309" endtime="20201112 12:41:46.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:46.327" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:46.313" endtime="20201112 12:41:46.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.331" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:46.330" endtime="20201112 12:41:46.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.334" level="INFO">VALUE: [1.8609999999988358e-06, 1.903000000001015e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.862000000001779e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8619999999983095e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.889000000001445e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.917000000000585e-06, 1.846999999999266e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:41:46.332" endtime="20201112 12:41:46.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.328" endtime="20201112 12:41:46.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.337" endtime="20201112 12:41:46.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:46.341" endtime="20201112 12:41:46.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.339" endtime="20201112 12:41:46.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.336" endtime="20201112 12:41:46.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.967" endtime="20201112 12:41:46.362"></status>
</kw>
<msg timestamp="20201112 12:41:46.362" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.370" endtime="20201112 12:41:46.385"></status>
</kw>
<msg timestamp="20201112 12:41:46.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.369" endtime="20201112 12:41:46.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.388" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.386" endtime="20201112 12:41:46.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.389" endtime="20201112 12:41:46.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.366" endtime="20201112 12:41:46.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.364" endtime="20201112 12:41:46.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.399" endtime="20201112 12:41:46.686"></status>
</kw>
<msg timestamp="20201112 12:41:46.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:46.397" endtime="20201112 12:41:46.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:46.690" endtime="20201112 12:41:46.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.699" endtime="20201112 12:41:46.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.394" endtime="20201112 12:41:46.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.393" endtime="20201112 12:41:46.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:46.706" level="INFO">${RESULT} = [{'time': 0.018467056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018472806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:46.702" endtime="20201112 12:41:46.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:46.721" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:46.707" endtime="20201112 12:41:46.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.725" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:46.724" endtime="20201112 12:41:46.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.728" level="INFO">VALUE: [1.8479999999987395e-06, 1.8200000000030692e-06, 1.8610000000023053e-06, 1.862000000001779e-06, 1.8339999999991696e-06, 1.8470000000027353e-06, 1.846999999999266e-06, 1.8750000000018752e-06, 1.8479999999987395e-06, 1.8619999999983095e-06, 1.8470000000027353e-06, 1.8479999999987395e-06, 1.832999999999696e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8199999999995997e-06, 1.862000000001779e-06, 1.862000000001779e-06, 1.889000000001445e-06, 1.8889999999979756e-06, 1.8470000000027353e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.8470000000027353e-06, 1.9029999999975455e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.917000000000585e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.9160000000011113e-06, 1.8609999999988358e-06, 1.8609999999988358e-06]</msg>
<status status="PASS" starttime="20201112 12:41:46.726" endtime="20201112 12:41:46.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.722" endtime="20201112 12:41:46.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.732" endtime="20201112 12:41:46.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:46.735" endtime="20201112 12:41:46.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.734" endtime="20201112 12:41:46.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.730" endtime="20201112 12:41:46.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.363" endtime="20201112 12:41:46.756"></status>
</kw>
<msg timestamp="20201112 12:41:46.756" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.764" endtime="20201112 12:41:46.779"></status>
</kw>
<msg timestamp="20201112 12:41:46.779" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.763" endtime="20201112 12:41:46.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.782" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.781" endtime="20201112 12:41:46.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.783" endtime="20201112 12:41:46.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.760" endtime="20201112 12:41:46.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.758" endtime="20201112 12:41:46.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.792" endtime="20201112 12:41:47.078"></status>
</kw>
<msg timestamp="20201112 12:41:47.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0184305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018432389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:41:46.791" endtime="20201112 12:41:47.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0184305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018432389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:41:47.083" endtime="20201112 12:41:47.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.091" endtime="20201112 12:41:47.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.788" endtime="20201112 12:41:47.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.786" endtime="20201112 12:41:47.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:47.098" level="INFO">${RESULT} = [{'time': 0.018432389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018438611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:47.095" endtime="20201112 12:41:47.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:47.113" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:47.099" endtime="20201112 12:41:47.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.117" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:47.116" endtime="20201112 12:41:47.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.120" level="INFO">VALUE: [1.889000000001445e-06, 1.846999999999266e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.848000000002209e-06, 1.8619999999983095e-06, 1.889000000001445e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8479999999987395e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8619999999983095e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.846999999999266e-06, 1.8889999999979756e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8609999999988358e-06, 1.8610000000023053e-06, 1.8750000000018752e-06, 1.8749999999984057e-06, 1.8749999999984057e-06, 1.8610000000023053e-06, 1.819000000000126e-06, 1.8609999999988358e-06, 1.8749999999984057e-06, 1.832999999999696e-06, 1.8610000000023053e-06, 1.8610000000023053e-06, 1.8889999999979756e-06]</msg>
<status status="PASS" starttime="20201112 12:41:47.118" endtime="20201112 12:41:47.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.114" endtime="20201112 12:41:47.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.124" endtime="20201112 12:41:47.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:47.127" endtime="20201112 12:41:47.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.126" endtime="20201112 12:41:47.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.122" endtime="20201112 12:41:47.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.757" endtime="20201112 12:41:47.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:39.202" endtime="20201112 12:41:47.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:47.157" endtime="20201112 12:41:47.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.155" endtime="20201112 12:41:47.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.154" endtime="20201112 12:41:47.178"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:39.124" endtime="20201112 12:41:47.178" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:47.187" endtime="20201112 12:41:47.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.186" endtime="20201112 12:41:47.207"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.221" endtime="20201112 12:41:47.239"></status>
</kw>
<msg timestamp="20201112 12:41:47.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.219" endtime="20201112 12:41:47.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.243" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.241" endtime="20201112 12:41:47.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.246" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:47.244" endtime="20201112 12:41:47.246"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:47.216" endtime="20201112 12:41:47.247"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:47.214" endtime="20201112 12:41:47.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.213" endtime="20201112 12:41:47.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:47.251" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:47.251" endtime="20201112 12:41:47.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.248" endtime="20201112 12:41:47.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.212" endtime="20201112 12:41:47.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.211" endtime="20201112 12:41:47.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.253" endtime="20201112 12:41:47.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.210" endtime="20201112 12:41:47.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.208" endtime="20201112 12:41:47.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.184" endtime="20201112 12:41:47.256"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.266" endtime="20201112 12:41:47.288"></status>
</kw>
<msg timestamp="20201112 12:41:47.288" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.264" endtime="20201112 12:41:47.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.291" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.289" endtime="20201112 12:41:47.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.292" endtime="20201112 12:41:47.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.261" endtime="20201112 12:41:47.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.259" endtime="20201112 12:41:47.295"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.297" endtime="20201112 12:41:47.298"></status>
</kw>
<msg timestamp="20201112 12:41:47.299" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:41:47.295" endtime="20201112 12:41:47.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.303" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:41:47.302" endtime="20201112 12:41:47.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.305" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:41:47.304" endtime="20201112 12:41:47.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.300" endtime="20201112 12:41:47.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.310" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:41:47.309" endtime="20201112 12:41:47.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.312" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:41:47.311" endtime="20201112 12:41:47.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.307" endtime="20201112 12:41:47.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.320" endtime="20201112 12:41:47.608"></status>
</kw>
<msg timestamp="20201112 12:41:47.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069299806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069333319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:47.318" endtime="20201112 12:41:47.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069299806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069333319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:47.613" endtime="20201112 12:41:47.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.621" endtime="20201112 12:41:47.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.316" endtime="20201112 12:41:47.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.314" endtime="20201112 12:41:47.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:47.628" level="INFO">${RESULT} = [{'time': 0.069333319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3512999999998905e-05, 'source_diff': 3.3512999999998905e-05}, {'time': 0.06934625, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:41:47.625" endtime="20201112 12:41:47.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:47.642" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:47.629" endtime="20201112 12:41:47.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.647" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:41:47.645" endtime="20201112 12:41:47.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.650" level="INFO">VALUE: [3.3512999999998905e-05, 7.471999999994483e-06, 7.415999999996203e-06, 7.415999999996203e-06, 7.458000000001852e-06, 7.4730000000078345e-06, 7.527000000007167e-06, 7.540999999999798e-06, 7.443999999995343e-06, 7.472999999993957e-06, 7.458000000001852e-06, 7.471999999994483e-06, 7.486000000000992e-06, 7.459000000001326e-06, 7.458000000001852e-06, 7.431000000002186e-06, 7.458000000001852e-06, 7.457999999987974e-06, 7.472999999993957e-06, 7.472999999993957e-06, 7.526999999993289e-06, 7.458000000001852e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.457999999987974e-06, 7.471999999994483e-06, 7.459000000001326e-06, 7.471999999994483e-06, 7.458000000001852e-06, 7.457999999987974e-06, 7.472999999993957e-06, 7.445000000008695e-06, 7.459000000001326e-06, 7.471999999994483e-06, 7.415999999996203e-06, 7.459000000001326e-06, 7.459000000001326e-06, 7.472000000008361e-06, 7.458000000001852e-06, 7.443999999995343e-06, 7.4870000000004655e-06, 7.444999999994817e-06, 7.444000000009221e-06, 7.486000000000992e-06, 7.431000000002186e-06, 7.459000000001326e-06, 7.486000000000992e-06, 7.486000000000992e-06, 7.472999999993957e-06]</msg>
<status status="PASS" starttime="20201112 12:41:47.648" endtime="20201112 12:41:47.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.643" endtime="20201112 12:41:47.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.653" endtime="20201112 12:41:47.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:47.657" endtime="20201112 12:41:47.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.655" endtime="20201112 12:41:47.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.651" endtime="20201112 12:41:47.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.257" endtime="20201112 12:41:47.677"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:47.181" endtime="20201112 12:41:47.678" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:47.687" endtime="20201112 12:41:47.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.686" endtime="20201112 12:41:47.707"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.722" endtime="20201112 12:41:47.740"></status>
</kw>
<msg timestamp="20201112 12:41:47.741" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.719" endtime="20201112 12:41:47.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.744" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.742" endtime="20201112 12:41:47.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.747" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:47.745" endtime="20201112 12:41:47.747"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:47.717" endtime="20201112 12:41:47.748"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:47.714" endtime="20201112 12:41:47.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.713" endtime="20201112 12:41:47.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:47.752" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:47.752" endtime="20201112 12:41:47.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.749" endtime="20201112 12:41:47.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.712" endtime="20201112 12:41:47.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.711" endtime="20201112 12:41:47.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.754" endtime="20201112 12:41:47.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.710" endtime="20201112 12:41:47.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.708" endtime="20201112 12:41:47.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.684" endtime="20201112 12:41:47.757"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.773" endtime="20201112 12:41:47.831"></status>
</kw>
<msg timestamp="20201112 12:41:47.832" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.772" endtime="20201112 12:41:47.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.834" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.833" endtime="20201112 12:41:47.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.835" endtime="20201112 12:41:47.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.769" endtime="20201112 12:41:47.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.760" endtime="20201112 12:41:47.838"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.840" endtime="20201112 12:41:47.842"></status>
</kw>
<msg timestamp="20201112 12:41:47.842" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:41:47.839" endtime="20201112 12:41:47.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.846" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:41:47.845" endtime="20201112 12:41:47.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.849" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:41:47.848" endtime="20201112 12:41:47.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.843" endtime="20201112 12:41:47.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.854" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:41:47.853" endtime="20201112 12:41:47.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.856" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:41:47.855" endtime="20201112 12:41:47.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.850" endtime="20201112 12:41:47.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.864" endtime="20201112 12:41:48.157"></status>
</kw>
<msg timestamp="20201112 12:41:48.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076869347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:47.862" endtime="20201112 12:41:48.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076869347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076895458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.161" endtime="20201112 12:41:48.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.169" endtime="20201112 12:41:48.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.859" endtime="20201112 12:41:48.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.857" endtime="20201112 12:41:48.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:48.176" level="INFO">${RESULT} = [{'time': 0.076895458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6110999999995332e-05, 'source_diff': 2.6110999999995332e-05}, {'time': 0.077650764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:48.173" endtime="20201112 12:41:48.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:48.192" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:48.177" endtime="20201112 12:41:48.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.197" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:41:48.196" endtime="20201112 12:41:48.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.200" level="INFO">VALUE: [2.6110999999995332e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6250000000005436e-05, 2.6263999999998067e-05, 2.6277000000005102e-05, 2.6221999999992418e-05, 2.6249999999991558e-05, 2.6250000000005436e-05, 2.620899999999926e-05, 2.6250000000005436e-05, 2.6249999999991558e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6221999999992418e-05, 2.6263999999998067e-05, 2.6249999999991558e-05, 2.6221999999992418e-05, 2.6249999999991558e-05, 2.622300000000577e-05, 2.6250000000005436e-05, 2.6277999999990698e-05, 2.6263999999998067e-05, 2.6278000000004575e-05, 2.6291999999997206e-05, 2.6250000000005436e-05, 2.6250000000005436e-05, 2.6290999999997733e-05, 2.6263999999998067e-05, 2.6278000000004575e-05, 2.6207999999999787e-05, 2.6249999999991558e-05, 2.6249999999991558e-05, 2.6249999999991558e-05, 2.6249999999991558e-05, 2.6249999999991558e-05, 2.6278000000004575e-05, 2.6262999999998593e-05, 2.6262999999998593e-05, 2.6249999999991558e-05, 2.6235999999998927e-05, 2.6221999999992418e-05, 2.630500000000424e-05, 2.6278000000004575e-05, 2.6250000000005436e-05, 2.6235999999998927e-05, 2.6222000000006296e-05, 2.6249999999991558e-05, 2.6235999999998927e-05, 2.630500000000424e-05]</msg>
<status status="PASS" starttime="20201112 12:41:48.198" endtime="20201112 12:41:48.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.193" endtime="20201112 12:41:48.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.203" endtime="20201112 12:41:48.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.206" endtime="20201112 12:41:48.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.205" endtime="20201112 12:41:48.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.201" endtime="20201112 12:41:48.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.758" endtime="20201112 12:41:48.227"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:47.681" endtime="20201112 12:41:48.228" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.236" endtime="20201112 12:41:48.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.234" endtime="20201112 12:41:48.256"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.270" endtime="20201112 12:41:48.289"></status>
</kw>
<msg timestamp="20201112 12:41:48.289" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.268" endtime="20201112 12:41:48.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.292" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.291" endtime="20201112 12:41:48.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.295" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:48.293" endtime="20201112 12:41:48.295"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:48.265" endtime="20201112 12:41:48.296"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:48.263" endtime="20201112 12:41:48.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.262" endtime="20201112 12:41:48.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:48.301" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:48.300" endtime="20201112 12:41:48.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.298" endtime="20201112 12:41:48.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.261" endtime="20201112 12:41:48.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.260" endtime="20201112 12:41:48.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.303" endtime="20201112 12:41:48.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.259" endtime="20201112 12:41:48.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.257" endtime="20201112 12:41:48.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.233" endtime="20201112 12:41:48.306"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.315" endtime="20201112 12:41:48.470"></status>
</kw>
<msg timestamp="20201112 12:41:48.470" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.314" endtime="20201112 12:41:48.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.473" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.471" endtime="20201112 12:41:48.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.474" endtime="20201112 12:41:48.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.311" endtime="20201112 12:41:48.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.309" endtime="20201112 12:41:48.476"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.479" endtime="20201112 12:41:48.480"></status>
</kw>
<msg timestamp="20201112 12:41:48.481" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:41:48.477" endtime="20201112 12:41:48.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.485" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:41:48.484" endtime="20201112 12:41:48.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.487" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:41:48.486" endtime="20201112 12:41:48.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.482" endtime="20201112 12:41:48.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.492" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:41:48.491" endtime="20201112 12:41:48.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.494" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:41:48.493" endtime="20201112 12:41:48.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.489" endtime="20201112 12:41:48.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.502" endtime="20201112 12:41:48.798"></status>
</kw>
<msg timestamp="20201112 12:41:48.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071943431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071992667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.500" endtime="20201112 12:41:48.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071943431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071992667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.802" endtime="20201112 12:41:48.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.810" endtime="20201112 12:41:48.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.498" endtime="20201112 12:41:48.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.496" endtime="20201112 12:41:48.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:48.817" level="INFO">${RESULT} = [{'time': 0.071992667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.923599999999417e-05, 'source_diff': 4.923599999999417e-05}, {'time': 0.074675236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:48.814" endtime="20201112 12:41:48.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:48.831" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:48.818" endtime="20201112 12:41:48.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.836" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:41:48.835" endtime="20201112 12:41:48.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.838" level="INFO">VALUE: [4.923599999999417e-05, 4.908300000000532e-05, 4.899999999999349e-05, 4.906899999999881e-05, 4.911100000000446e-05, 4.908399999999091e-05, 4.915299999999623e-05, 4.904199999999914e-05, 4.908400000000479e-05, 4.9014e-05, 4.908300000000532e-05, 4.9014e-05, 4.906899999999881e-05, 4.908400000000479e-05, 4.908300000000532e-05, 4.905500000000618e-05, 4.908300000000532e-05, 4.906999999999828e-05, 4.908300000000532e-05, 4.9069000000012686e-05, 4.9111000000018334e-05, 4.907000000001216e-05, 4.908300000000532e-05, 4.908300000000532e-05, 4.908400000000479e-05, 4.906899999998493e-05, 4.909699999999795e-05, 4.908400000000479e-05, 4.905600000001953e-05, 4.9083999999977035e-05, 4.908299999997756e-05, 4.908400000000479e-05, 4.915299999999623e-05, 4.907000000001216e-05, 4.909699999999795e-05, 4.9069000000012686e-05, 4.908300000000532e-05, 4.905599999999177e-05, 4.915299999999623e-05, 4.908400000000479e-05, 4.909699999999795e-05, 4.908300000000532e-05, 4.909699999999795e-05, 4.907000000001216e-05, 4.908400000000479e-05, 4.9069000000012686e-05, 4.908300000000532e-05, 4.909699999999795e-05, 4.907000000001216e-05, 4.908300000000532e-05]</msg>
<status status="PASS" starttime="20201112 12:41:48.837" endtime="20201112 12:41:48.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.832" endtime="20201112 12:41:48.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.842" endtime="20201112 12:41:48.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.845" endtime="20201112 12:41:48.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.844" endtime="20201112 12:41:48.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.840" endtime="20201112 12:41:48.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.307" endtime="20201112 12:41:48.866"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:48.230" endtime="20201112 12:41:48.867" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.875" endtime="20201112 12:41:48.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.873" endtime="20201112 12:41:48.895"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.909" endtime="20201112 12:41:48.927"></status>
</kw>
<msg timestamp="20201112 12:41:48.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.907" endtime="20201112 12:41:48.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.931" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.929" endtime="20201112 12:41:48.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.934" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:48.932" endtime="20201112 12:41:48.934"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:48.904" endtime="20201112 12:41:48.935"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:48.902" endtime="20201112 12:41:48.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.900" endtime="20201112 12:41:48.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:48.939" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:48.939" endtime="20201112 12:41:48.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.937" endtime="20201112 12:41:48.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.900" endtime="20201112 12:41:48.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.899" endtime="20201112 12:41:48.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.942" endtime="20201112 12:41:48.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.897" endtime="20201112 12:41:48.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.896" endtime="20201112 12:41:48.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.872" endtime="20201112 12:41:48.944"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.954" endtime="20201112 12:41:48.977"></status>
</kw>
<msg timestamp="20201112 12:41:48.977" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.952" endtime="20201112 12:41:48.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.980" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.979" endtime="20201112 12:41:48.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.981" endtime="20201112 12:41:48.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.950" endtime="20201112 12:41:48.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.947" endtime="20201112 12:41:48.984"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.986" endtime="20201112 12:41:48.988"></status>
</kw>
<msg timestamp="20201112 12:41:48.988" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:41:48.985" endtime="20201112 12:41:48.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.993" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:41:48.992" endtime="20201112 12:41:48.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.995" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:41:48.994" endtime="20201112 12:41:48.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.989" endtime="20201112 12:41:48.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.000" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:41:48.999" endtime="20201112 12:41:49.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.002" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:41:49.001" endtime="20201112 12:41:49.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.996" endtime="20201112 12:41:49.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.010" endtime="20201112 12:41:49.299"></status>
</kw>
<msg timestamp="20201112 12:41:49.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069496764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069497875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.008" endtime="20201112 12:41:49.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069496764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069497875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.304" endtime="20201112 12:41:49.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.312" endtime="20201112 12:41:49.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.005" endtime="20201112 12:41:49.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.003" endtime="20201112 12:41:49.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:49.320" level="INFO">${RESULT} = [{'time': 0.069497875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.069509278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:49.316" endtime="20201112 12:41:49.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:49.333" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:49.321" endtime="20201112 12:41:49.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.338" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:41:49.337" endtime="20201112 12:41:49.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.341" level="INFO">VALUE: [1.1109999999980857e-06, 1.1249999999907168e-06, 1.1110000000119635e-06, 1.1250000000045945e-06, 1.1109999999980857e-06, 1.1530000000037344e-06, 1.1250000000045945e-06, 1.0559999999992797e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1529999999898566e-06, 1.1250000000045945e-06, 1.1389999999972256e-06, 1.1670000000102432e-06, 1.137999999997752e-06, 1.041999999992771e-06, 1.1250000000045945e-06, 1.1389999999972256e-06, 1.1390000000111034e-06, 1.1120000000114372e-06, 1.0970000000054547e-06, 1.137999999997752e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1250000000045945e-06, 1.1389999999972256e-06, 1.1800000000034006e-06, 1.1110000000119635e-06, 1.1109999999980857e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1249999999907168e-06, 1.1389999999972256e-06, 1.1249999999907168e-06, 1.1249999999907168e-06, 1.1110000000119635e-06, 1.1249999999907168e-06, 1.195000000009383e-06, 1.0979999999910506e-06, 1.1109999999980857e-06, 1.1250000000045945e-06, 1.1250000000045945e-06, 1.1389999999972256e-06]</msg>
<status status="PASS" starttime="20201112 12:41:49.339" endtime="20201112 12:41:49.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.334" endtime="20201112 12:41:49.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.344" endtime="20201112 12:41:49.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.347" endtime="20201112 12:41:49.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.346" endtime="20201112 12:41:49.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.342" endtime="20201112 12:41:49.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.945" endtime="20201112 12:41:49.368"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:48.869" endtime="20201112 12:41:49.369" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.377" endtime="20201112 12:41:49.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.376" endtime="20201112 12:41:49.398"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.412" endtime="20201112 12:41:49.430"></status>
</kw>
<msg timestamp="20201112 12:41:49.431" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.410" endtime="20201112 12:41:49.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.433" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.432" endtime="20201112 12:41:49.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.436" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:49.434" endtime="20201112 12:41:49.437"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:49.407" endtime="20201112 12:41:49.437"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:49.404" endtime="20201112 12:41:49.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.403" endtime="20201112 12:41:49.438"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:49.443" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:49.442" endtime="20201112 12:41:49.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.440" endtime="20201112 12:41:49.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.402" endtime="20201112 12:41:49.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.402" endtime="20201112 12:41:49.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.444" endtime="20201112 12:41:49.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.400" endtime="20201112 12:41:49.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.398" endtime="20201112 12:41:49.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.374" endtime="20201112 12:41:49.447"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.457" endtime="20201112 12:41:49.515"></status>
</kw>
<msg timestamp="20201112 12:41:49.516" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.455" endtime="20201112 12:41:49.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.519" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.517" endtime="20201112 12:41:49.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.520" endtime="20201112 12:41:49.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.452" endtime="20201112 12:41:49.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.450" endtime="20201112 12:41:49.522"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.525" endtime="20201112 12:41:49.526"></status>
</kw>
<msg timestamp="20201112 12:41:49.527" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:41:49.523" endtime="20201112 12:41:49.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.531" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:41:49.530" endtime="20201112 12:41:49.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.533" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:41:49.532" endtime="20201112 12:41:49.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.528" endtime="20201112 12:41:49.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.538" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:41:49.537" endtime="20201112 12:41:49.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.540" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:41:49.539" endtime="20201112 12:41:49.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.535" endtime="20201112 12:41:49.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.549" endtime="20201112 12:41:49.839"></status>
</kw>
<msg timestamp="20201112 12:41:49.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070374167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070382653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.546" endtime="20201112 12:41:49.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070374167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070382653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.843" endtime="20201112 12:41:49.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.852" endtime="20201112 12:41:49.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.544" endtime="20201112 12:41:49.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.542" endtime="20201112 12:41:49.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:49.859" level="INFO">${RESULT} = [{'time': 0.070382653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.071143903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:49.855" endtime="20201112 12:41:49.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:49.875" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:49.860" endtime="20201112 12:41:49.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.880" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:41:49.879" endtime="20201112 12:41:49.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.882" level="INFO">VALUE: [8.486000000001992e-06, 8.471999999995483e-06, 8.471999999995483e-06, 8.486000000001992e-06, 8.458000000002852e-06, 8.486000000001992e-06, 8.471999999995483e-06, 8.444999999995817e-06, 8.472000000009361e-06, 8.514000000001132e-06, 8.459000000002326e-06, 8.514000000001132e-06, 8.486000000001992e-06, 8.514000000001132e-06, 8.403000000004046e-06, 8.401999999990695e-06, 8.472000000009361e-06, 8.459000000002326e-06, 8.486000000001992e-06, 8.473000000008835e-06, 8.499999999994623e-06, 8.486000000001992e-06, 8.458000000002852e-06, 8.416000000011081e-06, 8.429999999989835e-06, 8.487000000001466e-06, 8.486000000001992e-06, 8.459000000002326e-06, 8.487000000001466e-06, 8.486000000001992e-06, 8.486000000001992e-06, 8.527999999993763e-06, 8.471999999995483e-06, 8.486000000001992e-06, 8.472000000009361e-06, 8.514000000001132e-06, 8.431000000003186e-06, 8.473000000008835e-06, 8.486000000001992e-06, 8.471999999995483e-06, 8.458000000002852e-06, 8.471999999995483e-06, 8.486000000001992e-06, 8.499999999994623e-06, 8.472999999994957e-06, 8.486000000001992e-06, 8.458000000002852e-06, 8.486000000001992e-06, 8.471999999995483e-06, 8.486000000001992e-06]</msg>
<status status="PASS" starttime="20201112 12:41:49.881" endtime="20201112 12:41:49.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.876" endtime="20201112 12:41:49.883"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.886" endtime="20201112 12:41:49.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.889" endtime="20201112 12:41:49.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.888" endtime="20201112 12:41:49.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.884" endtime="20201112 12:41:49.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.448" endtime="20201112 12:41:49.910"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:49.371" endtime="20201112 12:41:49.911" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.919" endtime="20201112 12:41:49.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.917" endtime="20201112 12:41:49.939"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.954" endtime="20201112 12:41:49.972"></status>
</kw>
<msg timestamp="20201112 12:41:49.972" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.951" endtime="20201112 12:41:49.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.975" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.973" endtime="20201112 12:41:49.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.979" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:49.976" endtime="20201112 12:41:49.979"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:49.948" endtime="20201112 12:41:49.980"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:49.946" endtime="20201112 12:41:49.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.944" endtime="20201112 12:41:49.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:49.984" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:49.984" endtime="20201112 12:41:49.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.981" endtime="20201112 12:41:49.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.944" endtime="20201112 12:41:49.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.943" endtime="20201112 12:41:49.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.986" endtime="20201112 12:41:49.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.942" endtime="20201112 12:41:49.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.940" endtime="20201112 12:41:49.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.916" endtime="20201112 12:41:49.989"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.998" endtime="20201112 12:41:50.154"></status>
</kw>
<msg timestamp="20201112 12:41:50.155" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.997" endtime="20201112 12:41:50.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.157" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.156" endtime="20201112 12:41:50.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.158" endtime="20201112 12:41:50.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.994" endtime="20201112 12:41:50.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.992" endtime="20201112 12:41:50.161"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.163" endtime="20201112 12:41:50.165"></status>
</kw>
<msg timestamp="20201112 12:41:50.165" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:41:50.162" endtime="20201112 12:41:50.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.170" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:41:50.169" endtime="20201112 12:41:50.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.172" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:41:50.171" endtime="20201112 12:41:50.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.166" endtime="20201112 12:41:50.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.177" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:41:50.176" endtime="20201112 12:41:50.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.179" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:41:50.178" endtime="20201112 12:41:50.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.173" endtime="20201112 12:41:50.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.186" endtime="20201112 12:41:50.503"></status>
</kw>
<msg timestamp="20201112 12:41:50.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072172208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072188181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.185" endtime="20201112 12:41:50.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072172208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072188181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.507" endtime="20201112 12:41:50.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.515" endtime="20201112 12:41:50.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.182" endtime="20201112 12:41:50.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.180" endtime="20201112 12:41:50.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:50.522" level="INFO">${RESULT} = [{'time': 0.072188181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5973000000002457e-05, 'source_diff': 1.5973000000002457e-05}, {'time': 0.074888, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:41:50.519" endtime="20201112 12:41:50.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:50.536" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:50.523" endtime="20201112 12:41:50.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.541" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:41:50.540" endtime="20201112 12:41:50.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.543" level="INFO">VALUE: [1.5973000000002457e-05, 1.5972000000002984e-05, 1.6013999999994755e-05, 1.6041999999993894e-05, 1.595899999999595e-05, 1.5986000000009493e-05, 1.6000000000002124e-05, 1.5972000000002984e-05, 1.5986000000009493e-05, 1.5971999999989106e-05, 1.5987000000008966e-05, 1.593099999999681e-05, 1.5986000000009493e-05, 1.5972000000002984e-05, 1.6000000000002124e-05, 1.5972000000002984e-05, 1.5959000000009826e-05, 1.5972000000002984e-05, 1.5971999999989106e-05, 1.6028000000001263e-05, 1.5972000000002984e-05, 1.593000000002509e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.5972000000002984e-05, 1.598600000002337e-05, 1.598600000002337e-05, 1.5973000000002457e-05, 1.5972000000002984e-05, 1.5999999999988246e-05, 1.5999999999988246e-05, 1.598699999999509e-05, 1.5973000000002457e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.6000000000016e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5972000000002984e-05, 1.5943999999989966e-05, 1.5972000000002984e-05, 1.5916000000004704e-05, 1.5959000000009826e-05, 1.5973000000002457e-05, 1.5958000000010353e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.6028000000001263e-05, 1.5985999999995615e-05]</msg>
<status status="PASS" starttime="20201112 12:41:50.542" endtime="20201112 12:41:50.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.537" endtime="20201112 12:41:50.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.547" endtime="20201112 12:41:50.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:50.550" endtime="20201112 12:41:50.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.549" endtime="20201112 12:41:50.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.545" endtime="20201112 12:41:50.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.990" endtime="20201112 12:41:50.571"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:49.913" endtime="20201112 12:41:50.572" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:29.708" endtime="20201112 12:41:50.580"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.648" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:50.656" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:51.655" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:50.647" endtime="20201112 12:41:51.656"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.658" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:51.657" endtime="20201112 12:41:51.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.646" endtime="20201112 12:41:51.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:51.662" endtime="20201112 12:41:51.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.660" endtime="20201112 12:41:51.848"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.861" endtime="20201112 12:41:51.887"></status>
</kw>
<msg timestamp="20201112 12:41:51.888" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.859" endtime="20201112 12:41:51.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.894" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.891" endtime="20201112 12:41:51.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.901" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:51.896" endtime="20201112 12:41:51.901"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:51.857" endtime="20201112 12:41:51.903"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:51.855" endtime="20201112 12:41:51.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.853" endtime="20201112 12:41:51.905"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:51.915" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:51.912" endtime="20201112 12:41:51.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.907" endtime="20201112 12:41:51.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.852" endtime="20201112 12:41:51.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.851" endtime="20201112 12:41:51.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.919" endtime="20201112 12:41:51.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.850" endtime="20201112 12:41:51.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.925" endtime="20201112 12:41:51.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.849" endtime="20201112 12:41:51.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.644" endtime="20201112 12:41:51.931"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:51.944" endtime="20201112 12:41:51.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.940" endtime="20201112 12:41:51.967"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.982" endtime="20201112 12:41:52.000"></status>
</kw>
<msg timestamp="20201112 12:41:52.001" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.981" endtime="20201112 12:41:52.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.003" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.002" endtime="20201112 12:41:52.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.007" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:52.005" endtime="20201112 12:41:52.007"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:51.978" endtime="20201112 12:41:52.008"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:51.975" endtime="20201112 12:41:52.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.974" endtime="20201112 12:41:52.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:52.013" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:52.012" endtime="20201112 12:41:52.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.009" endtime="20201112 12:41:52.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.973" endtime="20201112 12:41:52.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.973" endtime="20201112 12:41:52.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.015" endtime="20201112 12:41:52.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.971" endtime="20201112 12:41:52.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.969" endtime="20201112 12:41:52.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.937" endtime="20201112 12:41:52.017"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.029" endtime="20201112 12:41:52.047"></status>
</kw>
<msg timestamp="20201112 12:41:52.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.027" endtime="20201112 12:41:52.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.049" endtime="20201112 12:41:52.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.052" endtime="20201112 12:41:52.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.024" endtime="20201112 12:41:52.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.021" endtime="20201112 12:41:52.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.061" endtime="20201112 12:41:52.352"></status>
</kw>
<msg timestamp="20201112 12:41:52.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075285778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075318611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.060" endtime="20201112 12:41:52.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075285778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075318611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.356" endtime="20201112 12:41:52.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.365" endtime="20201112 12:41:52.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.057" endtime="20201112 12:41:52.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.055" endtime="20201112 12:41:52.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:52.372" level="INFO">${RESULT} = [{'time': 0.075318611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2832999999996004e-05, 'source_diff': 3.2832999999996004e-05}, {'time': 0.075330653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:52.368" endtime="20201112 12:41:52.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:52.385" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:52.373" endtime="20201112 12:41:52.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.390" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:41:52.389" endtime="20201112 12:41:52.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.393" level="INFO">VALUE: [3.2832999999996004e-05, 2.29200000000096e-06, 2.26400000000182e-06, 2.777999999994951e-06, 2.7639999999884424e-06, 2.76400000000232e-06, 2.7630000000028465e-06, 2.7499999999958114e-06, 2.7359999999893025e-06, 2.76400000000232e-06, 2.2360000000026803e-06, 3.2630000000033466e-06, 2.76400000000232e-06, 2.777999999994951e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2630000000023465e-06, 2.26400000000182e-06, 2.79200000000146e-06, 2.26400000000182e-06, 2.76400000000232e-06, 2.278000000008329e-06, 2.1669999999973655e-06, 2.2360000000026803e-06, 2.2630000000023465e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.2770000000088553e-06, 2.750000000009689e-06, 2.7910000000019863e-06, 2.7499999999958114e-06, 2.26400000000182e-06, 3.2499999999963114e-06, 2.278000000008329e-06, 2.2499999999953113e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.76400000000232e-06, 2.750000000009689e-06, 2.2769999999949775e-06, 2.750000000009689e-06, 2.7639999999884424e-06, 2.7499999999958114e-06, 3.29200000000196e-06, 2.7360000000031803e-06, 2.250000000009189e-06, 2.26400000000182e-06, 2.26400000000182e-06, 2.7499999999958114e-06, 2.76400000000232e-06]</msg>
<status status="PASS" starttime="20201112 12:41:52.391" endtime="20201112 12:41:52.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.386" endtime="20201112 12:41:52.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.397" endtime="20201112 12:41:52.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:52.400" endtime="20201112 12:41:52.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.399" endtime="20201112 12:41:52.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.395" endtime="20201112 12:41:52.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.020" endtime="20201112 12:41:52.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.019" endtime="20201112 12:41:52.421"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.430" endtime="20201112 12:41:52.449"></status>
</kw>
<msg timestamp="20201112 12:41:52.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.429" endtime="20201112 12:41:52.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.450" endtime="20201112 12:41:52.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.453" endtime="20201112 12:41:52.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.426" endtime="20201112 12:41:52.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.424" endtime="20201112 12:41:52.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.463" endtime="20201112 12:41:52.745"></status>
</kw>
<msg timestamp="20201112 12:41:52.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0210245, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:52.461" endtime="20201112 12:41:52.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0210245, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:52.749" endtime="20201112 12:41:52.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.758" endtime="20201112 12:41:52.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.458" endtime="20201112 12:41:52.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.456" endtime="20201112 12:41:52.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:52.765" level="INFO">${RESULT} = [{'time': 0.0210245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.750000000000281e-06, 'source_diff': 3.750000000000281e-06}, {'time': 0.021033472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:41:52.761" endtime="20201112 12:41:52.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:52.779" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:52.766" endtime="20201112 12:41:52.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.784" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:41:52.783" endtime="20201112 12:41:52.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.786" level="INFO">VALUE: [3.750000000000281e-06, 3.722000000001141e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.26400000000282e-06, 3.763999999999851e-06, 3.7779999999994207e-06, 3.736000000000711e-06, 3.763999999999851e-06, 3.2639999999993508e-06, 3.750000000000281e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.7779999999994207e-06, 3.763999999999851e-06, 3.7499999999968114e-06, 3.7910000000029864e-06, 3.7779999999994207e-06, 3.27800000000239e-06, 3.736000000000711e-06, 3.7629999999969077e-06, 3.2639999999993508e-06, 3.750000000000281e-06, 3.2639999999993508e-06, 3.2639999999993508e-06, 3.750000000000281e-06, 3.7229999999971453e-06, 3.763999999999851e-06, 3.236000000000211e-06, 3.763999999999851e-06, 3.2079999999976017e-06, 3.236000000000211e-06, 3.763999999999851e-06, 3.249999999999781e-06, 3.77800000000289e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 3.763999999999851e-06, 4.222000000001641e-06, 3.7779999999994207e-06, 4.1949999999985055e-06, 3.750000000000281e-06, 3.26400000000282e-06, 3.27800000000239e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.2639999999993508e-06, 3.763999999999851e-06, 3.2639999999993508e-06, 4.264000000000351e-06]</msg>
<status status="PASS" starttime="20201112 12:41:52.785" endtime="20201112 12:41:52.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.780" endtime="20201112 12:41:52.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.797" endtime="20201112 12:41:52.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:52.800" endtime="20201112 12:41:52.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.799" endtime="20201112 12:41:52.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.795" endtime="20201112 12:41:52.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.422" endtime="20201112 12:41:52.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.422" endtime="20201112 12:41:52.821"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.830" endtime="20201112 12:41:52.847"></status>
</kw>
<msg timestamp="20201112 12:41:52.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.829" endtime="20201112 12:41:52.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.849" endtime="20201112 12:41:52.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.851" endtime="20201112 12:41:52.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.826" endtime="20201112 12:41:52.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.824" endtime="20201112 12:41:52.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.862" endtime="20201112 12:41:53.145"></status>
</kw>
<msg timestamp="20201112 12:41:53.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.860" endtime="20201112 12:41:53.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.150" endtime="20201112 12:41:53.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.158" endtime="20201112 12:41:53.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.857" endtime="20201112 12:41:53.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.856" endtime="20201112 12:41:53.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.165" level="INFO">${RESULT} = [{'time': 0.020117125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.764000000000851e-06, 'source_diff': 4.764000000000851e-06}, {'time': 0.020127403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:53.162" endtime="20201112 12:41:53.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:53.179" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.166" endtime="20201112 12:41:53.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.184" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:41:53.182" endtime="20201112 12:41:53.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.186" level="INFO">VALUE: [4.764000000000851e-06, 5.221999999999172e-06, 4.750000000001281e-06, 4.764000000000851e-06, 4.264000000000351e-06, 4.263000000000877e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.7639999999973814e-06, 4.778000000000421e-06, 4.778000000000421e-06, 4.221999999998172e-06, 4.750000000001281e-06, 4.7639999999973814e-06, 4.6949999999990055e-06, 4.764000000000851e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.764000000000851e-06, 4.762999999997908e-06, 4.277999999999921e-06, 4.2359999999977416e-06, 5.262999999998408e-06, 4.264000000000351e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.305999999999061e-06, 4.264000000000351e-06, 4.236000000001211e-06, 4.264000000000351e-06, 4.264000000000351e-06, 4.7639999999973814e-06, 4.250000000000781e-06, 4.764000000000851e-06, 4.195000000001975e-06, 4.764000000000851e-06, 4.735999999998242e-06, 4.764000000000851e-06, 4.263999999996881e-06, 4.263000000000877e-06, 4.778000000000421e-06, 4.264000000000351e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.764000000000851e-06, 4.264000000000351e-06, 4.7499999999978115e-06, 4.3200000000021e-06]</msg>
<status status="PASS" starttime="20201112 12:41:53.185" endtime="20201112 12:41:53.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.180" endtime="20201112 12:41:53.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.190" endtime="20201112 12:41:53.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.193" endtime="20201112 12:41:53.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.192" endtime="20201112 12:41:53.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.188" endtime="20201112 12:41:53.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.822" endtime="20201112 12:41:53.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.822" endtime="20201112 12:41:53.214"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.223" endtime="20201112 12:41:53.241"></status>
</kw>
<msg timestamp="20201112 12:41:53.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.222" endtime="20201112 12:41:53.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.242" endtime="20201112 12:41:53.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.245" endtime="20201112 12:41:53.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.219" endtime="20201112 12:41:53.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.217" endtime="20201112 12:41:53.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.255" endtime="20201112 12:41:53.542"></status>
</kw>
<msg timestamp="20201112 12:41:53.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020159083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.254" endtime="20201112 12:41:53.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020159083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.546" endtime="20201112 12:41:53.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.555" endtime="20201112 12:41:53.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.251" endtime="20201112 12:41:53.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.249" endtime="20201112 12:41:53.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.562" level="INFO">${RESULT} = [{'time': 0.020164847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7639999999983815e-06, 'source_diff': 5.7639999999983815e-06}, {'time': 0.020174944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:53.558" endtime="20201112 12:41:53.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:53.576" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.563" endtime="20201112 12:41:53.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.581" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:41:53.580" endtime="20201112 12:41:53.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.583" level="INFO">VALUE: [5.7639999999983815e-06, 5.694000000000532e-06, 5.7639999999983815e-06, 5.7639999999983815e-06, 5.7089999999995755e-06, 5.2639999999978815e-06, 5.319000000000157e-06, 5.778000000001421e-06, 5.778000000001421e-06, 5.762999999998908e-06, 5.7639999999983815e-06, 6.2779999999984515e-06, 5.222999999998645e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.264000000001351e-06, 5.7779999999979514e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.2499999999983116e-06, 5.749999999998812e-06, 5.209000000002545e-06, 6.2639999999988816e-06, 5.7639999999983815e-06, 5.695000000000006e-06, 5.776999999998478e-06, 5.278000000000921e-06, 5.735999999999242e-06, 5.7779999999979514e-06, 5.750000000002281e-06, 5.2639999999978815e-06, 5.764000000001851e-06, 5.262999999998408e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.7639999999983815e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.778000000001421e-06, 5.264000000001351e-06, 5.750000000002281e-06, 5.277999999997451e-06, 5.749999999998812e-06, 5.778000000001421e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.2639999999978815e-06, 5.264000000001351e-06, 5.750000000002281e-06, 5.264000000001351e-06]</msg>
<status status="PASS" starttime="20201112 12:41:53.582" endtime="20201112 12:41:53.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.577" endtime="20201112 12:41:53.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.587" endtime="20201112 12:41:53.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.591" endtime="20201112 12:41:53.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.589" endtime="20201112 12:41:53.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.585" endtime="20201112 12:41:53.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.215" endtime="20201112 12:41:53.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.215" endtime="20201112 12:41:53.612"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.621" endtime="20201112 12:41:53.637"></status>
</kw>
<msg timestamp="20201112 12:41:53.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.619" endtime="20201112 12:41:53.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.638" endtime="20201112 12:41:53.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.641" endtime="20201112 12:41:53.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.616" endtime="20201112 12:41:53.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.614" endtime="20201112 12:41:53.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.653" endtime="20201112 12:41:53.939"></status>
</kw>
<msg timestamp="20201112 12:41:53.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020128486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02013525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:53.651" endtime="20201112 12:41:53.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020128486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02013525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:53.944" endtime="20201112 12:41:53.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.952" endtime="20201112 12:41:53.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.648" endtime="20201112 12:41:53.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.646" endtime="20201112 12:41:53.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.959" level="INFO">${RESULT} = [{'time': 0.02013525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.020145347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:41:53.956" endtime="20201112 12:41:53.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:53.973" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.960" endtime="20201112 12:41:53.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.978" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:41:53.977" endtime="20201112 12:41:53.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.981" level="INFO">VALUE: [6.763999999999382e-06, 6.736000000000242e-06, 6.2639999999988816e-06, 6.792000000001991e-06, 6.7779999999989515e-06, 6.249999999999312e-06, 6.2639999999988816e-06, 6.820000000001131e-06, 6.763999999999382e-06, 6.306000000001061e-06, 6.776999999999478e-06, 6.278000000001921e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.264000000002351e-06, 6.278000000001921e-06, 6.776999999999478e-06, 6.291000000002017e-06, 6.264000000002351e-06, 6.7779999999989515e-06, 6.763999999999382e-06, 6.790999999999048e-06, 6.763999999999382e-06, 6.208000000000602e-06, 6.749999999999812e-06, 6.249999999999312e-06, 6.762999999999908e-06, 6.736000000000242e-06, 6.819000000001657e-06, 6.249999999999312e-06, 7.263999999999882e-06, 7.263000000000408e-06, 6.249999999999312e-06, 6.763999999999382e-06, 6.2639999999988816e-06, 6.2639999999988816e-06, 6.749999999999812e-06, 6.708000000001102e-06, 6.695000000001006e-06, 6.776999999999478e-06, 6.763999999999382e-06, 6.7779999999989515e-06, 6.347000000000297e-06, 6.249999999999312e-06, 6.333000000000727e-06, 6.2779999999984515e-06, 6.249999999999312e-06, 6.2779999999984515e-06, 6.7919999999985214e-06, 6.2639999999988816e-06]</msg>
<status status="PASS" starttime="20201112 12:41:53.979" endtime="20201112 12:41:53.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.974" endtime="20201112 12:41:53.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.984" endtime="20201112 12:41:53.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.988" endtime="20201112 12:41:54.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.986" endtime="20201112 12:41:54.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.983" endtime="20201112 12:41:54.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.613" endtime="20201112 12:41:54.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.612" endtime="20201112 12:41:54.009"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.018" endtime="20201112 12:41:54.034"></status>
</kw>
<msg timestamp="20201112 12:41:54.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.016" endtime="20201112 12:41:54.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.036" endtime="20201112 12:41:54.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.039" endtime="20201112 12:41:54.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.014" endtime="20201112 12:41:54.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.012" endtime="20201112 12:41:54.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.049" endtime="20201112 12:41:54.339"></status>
</kw>
<msg timestamp="20201112 12:41:54.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.047" endtime="20201112 12:41:54.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.344" endtime="20201112 12:41:54.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.352" endtime="20201112 12:41:54.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.045" endtime="20201112 12:41:54.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.043" endtime="20201112 12:41:54.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:54.359" level="INFO">${RESULT} = [{'time': 0.020342778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.749999999997342e-06, 'source_diff': 7.749999999997342e-06}, {'time': 0.020352889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:54.356" endtime="20201112 12:41:54.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:54.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:54.360" endtime="20201112 12:41:54.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.379" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:41:54.378" endtime="20201112 12:41:54.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.381" level="INFO">VALUE: [7.749999999997342e-06, 7.2219999999977025e-06, 7.263999999999882e-06, 7.777999999999952e-06, 8.194999999999036e-06, 8.235999999998272e-06, 7.763000000000908e-06, 7.264000000003351e-06, 7.2779999999994516e-06, 7.750000000000812e-06, 7.263999999999882e-06, 7.292000000002491e-06, 7.82000000000213e-06, 8.277999999996982e-06, 7.749999999997342e-06, 7.263999999999882e-06, 8.278000000000452e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.805999999999091e-06, 7.263999999999882e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.764000000000382e-06, 7.777999999999952e-06, 7.250000000000312e-06, 8.3340000000022e-06, 7.763000000000908e-06, 7.249999999996842e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.764000000000382e-06, 7.750000000000812e-06, 7.777000000000478e-06, 7.764000000000382e-06, 7.764000000000382e-06, 7.2230000000006456e-06, 7.708000000002102e-06, 7.750000000000812e-06, 7.263999999999882e-06, 7.278000000002921e-06, 7.764000000000382e-06, 7.263999999999882e-06, 7.764000000000382e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.723000000001146e-06, 7.235999999997272e-06, 7.250000000000312e-06, 7.764000000000382e-06]</msg>
<status status="PASS" starttime="20201112 12:41:54.380" endtime="20201112 12:41:54.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.375" endtime="20201112 12:41:54.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.385" endtime="20201112 12:41:54.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:54.389" endtime="20201112 12:41:54.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.387" endtime="20201112 12:41:54.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.383" endtime="20201112 12:41:54.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.010" endtime="20201112 12:41:54.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.009" endtime="20201112 12:41:54.410"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.419" endtime="20201112 12:41:54.437"></status>
</kw>
<msg timestamp="20201112 12:41:54.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.417" endtime="20201112 12:41:54.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.438" endtime="20201112 12:41:54.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.441" endtime="20201112 12:41:54.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.414" endtime="20201112 12:41:54.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.412" endtime="20201112 12:41:54.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.452" endtime="20201112 12:41:54.741"></status>
</kw>
<msg timestamp="20201112 12:41:54.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.450" endtime="20201112 12:41:54.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.745" endtime="20201112 12:41:54.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.754" endtime="20201112 12:41:54.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.447" endtime="20201112 12:41:54.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.445" endtime="20201112 12:41:54.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:54.761" level="INFO">${RESULT} = [{'time': 0.020267028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763999999997912e-06, 'source_diff': 8.763999999997912e-06}, {'time': 0.020282056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:54.757" endtime="20201112 12:41:54.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:54.774" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:54.762" endtime="20201112 12:41:54.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.779" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:41:54.778" endtime="20201112 12:41:54.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.782" level="INFO">VALUE: [8.763999999997912e-06, 8.749999999998342e-06, 8.250000000001312e-06, 8.264000000000882e-06, 8.764000000001382e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.236000000001742e-06, 8.778000000000952e-06, 8.778000000000952e-06, 8.292000000000022e-06, 8.778000000000952e-06, 8.305999999999591e-06, 8.277000000000978e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.763999999997912e-06, 8.764000000001382e-06, 8.278000000000452e-06, 8.278000000000452e-06, 8.263999999997412e-06, 8.264000000000882e-06, 8.278000000000452e-06, 8.750000000001812e-06, 8.806000000000092e-06, 8.763999999997912e-06, 9.235999999999273e-06, 8.776999999998009e-06, 8.278000000000452e-06, 8.762999999998439e-06, 8.763999999997912e-06, 8.264000000000882e-06, 8.763999999997912e-06, 8.264000000000882e-06, 8.764000000001382e-06, 8.264000000000882e-06, 8.763999999997912e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.749999999998342e-06, 8.763999999997912e-06, 8.263999999997412e-06, 8.750000000001812e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.764000000001382e-06, 8.264000000000882e-06]</msg>
<status status="PASS" starttime="20201112 12:41:54.780" endtime="20201112 12:41:54.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.775" endtime="20201112 12:41:54.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.785" endtime="20201112 12:41:54.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:54.789" endtime="20201112 12:41:54.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.787" endtime="20201112 12:41:54.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.784" endtime="20201112 12:41:54.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.411" endtime="20201112 12:41:54.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.410" endtime="20201112 12:41:54.810"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.819" endtime="20201112 12:41:54.837"></status>
</kw>
<msg timestamp="20201112 12:41:54.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.818" endtime="20201112 12:41:54.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.839" endtime="20201112 12:41:54.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.841" endtime="20201112 12:41:54.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.815" endtime="20201112 12:41:54.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.813" endtime="20201112 12:41:54.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.852" endtime="20201112 12:41:55.137"></status>
</kw>
<msg timestamp="20201112 12:41:55.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.850" endtime="20201112 12:41:55.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020111292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.142" endtime="20201112 12:41:55.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.150" endtime="20201112 12:41:55.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.847" endtime="20201112 12:41:55.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.846" endtime="20201112 12:41:55.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:55.157" level="INFO">${RESULT} = [{'time': 0.020111292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.763999999998912e-06, 'source_diff': 9.763999999998912e-06}, {'time': 0.020124403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:55.154" endtime="20201112 12:41:55.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:55.171" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.158" endtime="20201112 12:41:55.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.176" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:41:55.175" endtime="20201112 12:41:55.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.178" level="INFO">VALUE: [9.763999999998912e-06, 9.277999999997982e-06, 9.749999999999343e-06, 9.764000000002382e-06, 9.235999999999273e-06, 9.819000000001188e-06, 9.735999999999773e-06, 9.306000000000592e-06, 9.763999999998912e-06, 9.777999999998482e-06, 9.749999999999343e-06, 9.764000000002382e-06, 9.750000000002812e-06, 9.763999999998912e-06, 9.763999999998912e-06, 9.263999999998412e-06, 9.264000000001882e-06, 9.777999999998482e-06, 9.763999999998912e-06, 9.777999999998482e-06, 9.764000000002382e-06, 1.0277999999998982e-05, 9.208000000000133e-06, 1.0249999999999843e-05, 9.764000000002382e-06, 9.221999999999703e-06, 9.263999999998412e-06, 9.749999999999343e-06, 9.194000000000563e-06, 1.0209000000000606e-05, 9.763999999998912e-06, 9.277000000001978e-06, 9.820000000000662e-06, 9.762999999999439e-06, 9.278000000001452e-06, 9.319000000000688e-06, 9.264000000001882e-06, 9.334000000003201e-06, 9.763999999998912e-06, 9.749999999999343e-06, 9.250000000002312e-06, 9.749999999999343e-06, 9.749999999999343e-06, 9.818999999997718e-06, 9.806000000001092e-06, 9.763999999998912e-06, 1.0249999999999843e-05, 9.763999999998912e-06, 9.778000000001952e-06, 9.777999999998482e-06]</msg>
<status status="PASS" starttime="20201112 12:41:55.177" endtime="20201112 12:41:55.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.172" endtime="20201112 12:41:55.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.182" endtime="20201112 12:41:55.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:55.186" endtime="20201112 12:41:55.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.184" endtime="20201112 12:41:55.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.180" endtime="20201112 12:41:55.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.811" endtime="20201112 12:41:55.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.811" endtime="20201112 12:41:55.206"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.216" endtime="20201112 12:41:55.234"></status>
</kw>
<msg timestamp="20201112 12:41:55.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.214" endtime="20201112 12:41:55.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.235" endtime="20201112 12:41:55.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.238" endtime="20201112 12:41:55.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.211" endtime="20201112 12:41:55.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.209" endtime="20201112 12:41:55.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.248" endtime="20201112 12:41:55.536"></status>
</kw>
<msg timestamp="20201112 12:41:55.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02026825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:55.247" endtime="20201112 12:41:55.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02026825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:55.540" endtime="20201112 12:41:55.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.549" endtime="20201112 12:41:55.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.244" endtime="20201112 12:41:55.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.242" endtime="20201112 12:41:55.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:55.556" level="INFO">${RESULT} = [{'time': 0.020279014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0763999999999913e-05, 'source_diff': 1.0763999999999913e-05}, {'time': 0.020292111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:55.552" endtime="20201112 12:41:55.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:55.570" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.557" endtime="20201112 12:41:55.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.574" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:41:55.573" endtime="20201112 12:41:55.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.577" level="INFO">VALUE: [1.0763999999999913e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0277999999998982e-05, 1.0750000000000343e-05, 1.0277999999998982e-05, 1.0277999999998982e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0292000000002022e-05, 1.0750000000000343e-05, 1.0278000000002452e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0249999999999843e-05, 1.0223000000000176e-05, 1.0763999999999913e-05, 1.0262999999999939e-05, 1.0276999999999509e-05, 1.1277999999999982e-05, 1.0806000000002092e-05, 1.0249999999999843e-05, 1.0778000000002952e-05, 1.0763999999999913e-05, 1.0263999999999412e-05, 1.0194999999997567e-05, 1.0334000000000731e-05, 1.0208000000001133e-05, 1.0763999999999913e-05, 1.0263999999999412e-05, 1.0763999999999913e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 1.0763999999999913e-05, 1.0292000000002022e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0249999999999843e-05, 1.1277999999999982e-05, 1.0777999999999482e-05, 1.0763000000000439e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0777000000000009e-05, 1.0750000000000343e-05]</msg>
<status status="PASS" starttime="20201112 12:41:55.575" endtime="20201112 12:41:55.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.571" endtime="20201112 12:41:55.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.581" endtime="20201112 12:41:55.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:55.584" endtime="20201112 12:41:55.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.583" endtime="20201112 12:41:55.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.579" endtime="20201112 12:41:55.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.207" endtime="20201112 12:41:55.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.207" endtime="20201112 12:41:55.605"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.614" endtime="20201112 12:41:55.631"></status>
</kw>
<msg timestamp="20201112 12:41:55.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.613" endtime="20201112 12:41:55.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.633" endtime="20201112 12:41:55.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.635" endtime="20201112 12:41:55.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.610" endtime="20201112 12:41:55.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.608" endtime="20201112 12:41:55.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.646" endtime="20201112 12:41:55.933"></status>
</kw>
<msg timestamp="20201112 12:41:55.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.644" endtime="20201112 12:41:55.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020221153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.938" endtime="20201112 12:41:55.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.946" endtime="20201112 12:41:55.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.642" endtime="20201112 12:41:55.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.640" endtime="20201112 12:41:55.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:55.953" level="INFO">${RESULT} = [{'time': 0.020221153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1749999999997873e-05, 'source_diff': 1.1749999999997873e-05}, {'time': 0.020235319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:55.950" endtime="20201112 12:41:55.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:55.968" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.954" endtime="20201112 12:41:55.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.973" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:41:55.972" endtime="20201112 12:41:55.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.975" level="INFO">VALUE: [1.1749999999997873e-05, 1.1194000000002563e-05, 1.2264000000001413e-05, 1.2264000000001413e-05, 1.1749999999997873e-05, 1.1277999999999982e-05, 1.1763999999997443e-05, 1.177699999999754e-05, 1.1264000000000413e-05, 1.1792000000000052e-05, 1.1832999999999289e-05, 1.2264000000001413e-05, 1.1222000000001703e-05, 1.1236000000001273e-05, 1.1264000000000413e-05, 1.1805000000000149e-05, 1.1763999999997443e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1805000000000149e-05, 1.1763000000001439e-05, 1.1264000000000413e-05, 1.1249999999997373e-05, 1.1735999999998303e-05, 1.2305000000000649e-05, 1.1222000000001703e-05, 1.1223000000001176e-05, 1.1750000000001343e-05, 1.1749999999997873e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1749999999997873e-05, 1.1764000000000913e-05, 1.1749999999997873e-05, 1.2249999999998373e-05, 1.1263999999996943e-05, 1.1750000000001343e-05, 1.1263000000000939e-05, 1.1264000000000413e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.176299999999797e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1805999999999622e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1263999999996943e-05, 1.1708999999998637e-05, 1.1763000000001439e-05]</msg>
<status status="PASS" starttime="20201112 12:41:55.974" endtime="20201112 12:41:55.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.969" endtime="20201112 12:41:55.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.979" endtime="20201112 12:41:55.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:55.983" endtime="20201112 12:41:56.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.981" endtime="20201112 12:41:56.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.977" endtime="20201112 12:41:56.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.606" endtime="20201112 12:41:56.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.605" endtime="20201112 12:41:56.004"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.013" endtime="20201112 12:41:56.030"></status>
</kw>
<msg timestamp="20201112 12:41:56.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.011" endtime="20201112 12:41:56.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.032" endtime="20201112 12:41:56.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.035" endtime="20201112 12:41:56.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.009" endtime="20201112 12:41:56.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.006" endtime="20201112 12:41:56.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.045" endtime="20201112 12:41:56.332"></status>
</kw>
<msg timestamp="20201112 12:41:56.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.043" endtime="20201112 12:41:56.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020254819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.336" endtime="20201112 12:41:56.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.345" endtime="20201112 12:41:56.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.041" endtime="20201112 12:41:56.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.039" endtime="20201112 12:41:56.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:56.352" level="INFO">${RESULT} = [{'time': 0.020254819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2263000000001939e-05, 'source_diff': 1.2263000000001939e-05}, {'time': 0.020272806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:56.348" endtime="20201112 12:41:56.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:56.365" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:56.353" endtime="20201112 12:41:56.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.370" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:41:56.369" endtime="20201112 12:41:56.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.373" level="INFO">VALUE: [1.2263000000001939e-05, 1.2223000000002177e-05, 1.2278000000000983e-05, 1.2750000000002343e-05, 1.2306000000000122e-05, 1.2264000000001413e-05, 1.2278000000000983e-05, 1.2306000000000122e-05, 1.226299999999847e-05, 1.2737000000002247e-05, 1.2708000000000164e-05, 1.2263999999997943e-05, 1.2777999999998013e-05, 1.2763999999998443e-05, 1.2263999999997943e-05, 1.2264000000001413e-05, 1.2236000000002273e-05, 1.2749999999998873e-05, 1.2764000000001913e-05, 1.2264000000001413e-05, 1.2777999999998013e-05, 1.2750000000002343e-05, 1.2736000000002773e-05, 1.2763999999998443e-05, 1.3306000000001122e-05, 1.2750000000002343e-05, 1.2250000000001843e-05, 1.2263000000001939e-05, 1.2736000000002773e-05, 1.2264000000001413e-05, 1.2236999999998277e-05, 1.2250000000001843e-05, 1.2277999999997513e-05, 1.2819000000000719e-05, 1.2332999999999789e-05, 1.2250000000001843e-05, 1.2777999999998013e-05, 1.2277000000001509e-05, 1.2264000000001413e-05, 1.3264000000002413e-05, 1.2263999999997943e-05, 1.2749999999998873e-05, 1.2749999999998873e-05, 1.2750000000002343e-05, 1.2278000000000983e-05, 1.276299999999897e-05, 1.3263999999998943e-05, 1.2721999999999734e-05, 1.226299999999847e-05, 1.2778000000001483e-05]</msg>
<status status="PASS" starttime="20201112 12:41:56.371" endtime="20201112 12:41:56.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.366" endtime="20201112 12:41:56.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.377" endtime="20201112 12:41:56.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.380" endtime="20201112 12:41:56.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.379" endtime="20201112 12:41:56.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.375" endtime="20201112 12:41:56.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.005" endtime="20201112 12:41:56.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.004" endtime="20201112 12:41:56.401"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.410" endtime="20201112 12:41:56.428"></status>
</kw>
<msg timestamp="20201112 12:41:56.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.409" endtime="20201112 12:41:56.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.430" endtime="20201112 12:41:56.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.432" endtime="20201112 12:41:56.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.406" endtime="20201112 12:41:56.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.404" endtime="20201112 12:41:56.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.443" endtime="20201112 12:41:56.730"></status>
</kw>
<msg timestamp="20201112 12:41:56.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020245542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.441" endtime="20201112 12:41:56.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020245542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.734" endtime="20201112 12:41:56.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.743" endtime="20201112 12:41:56.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.438" endtime="20201112 12:41:56.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.437" endtime="20201112 12:41:56.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:56.750" level="INFO">${RESULT} = [{'time': 0.020258792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3250000000002843e-05, 'source_diff': 1.3250000000002843e-05}, {'time': 0.020278028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:56.746" endtime="20201112 12:41:56.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:56.764" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:56.751" endtime="20201112 12:41:56.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.768" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:41:56.767" endtime="20201112 12:41:56.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.771" level="INFO">VALUE: [1.3250000000002843e-05, 1.4277999999999513e-05, 1.3736999999999777e-05, 1.3778000000002483e-05, 1.3736000000000304e-05, 1.3222999999999707e-05, 1.3778000000002483e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3805000000002149e-05, 1.3250000000002843e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3334000000000262e-05, 1.3778000000002483e-05, 1.3249999999999373e-05, 1.3277999999998513e-05, 1.3222000000000234e-05, 1.4277999999999513e-05, 1.3763999999999443e-05, 1.3249999999999373e-05, 1.3264000000002413e-05, 1.3680999999998028e-05, 1.3319000000001219e-05, 1.3263999999998943e-05, 1.376299999999997e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3235999999999803e-05, 1.3749999999999873e-05, 1.3777999999999013e-05, 1.4262999999997e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3763999999999443e-05, 1.3292000000001553e-05, 1.377699999999954e-05, 1.3249999999999373e-05, 1.376299999999997e-05, 1.3763999999999443e-05, 1.3763999999999443e-05, 1.3749999999999873e-05, 1.3749999999999873e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201112 12:41:56.770" endtime="20201112 12:41:56.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.765" endtime="20201112 12:41:56.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.775" endtime="20201112 12:41:56.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.778" endtime="20201112 12:41:56.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.777" endtime="20201112 12:41:56.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.773" endtime="20201112 12:41:56.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.402" endtime="20201112 12:41:56.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.401" endtime="20201112 12:41:56.799"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.808" endtime="20201112 12:41:56.826"></status>
</kw>
<msg timestamp="20201112 12:41:56.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.807" endtime="20201112 12:41:56.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.827" endtime="20201112 12:41:56.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.830" endtime="20201112 12:41:56.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.804" endtime="20201112 12:41:56.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.802" endtime="20201112 12:41:56.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.840" endtime="20201112 12:41:57.127"></status>
</kw>
<msg timestamp="20201112 12:41:57.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.839" endtime="20201112 12:41:57.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.132" endtime="20201112 12:41:57.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.140" endtime="20201112 12:41:57.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.836" endtime="20201112 12:41:57.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.834" endtime="20201112 12:41:57.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.147" level="INFO">${RESULT} = [{'time': 0.020272847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4250000000000373e-05, 'source_diff': 1.4250000000000373e-05}, {'time': 0.020289889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:57.143" endtime="20201112 12:41:57.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:57.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:57.148" endtime="20201112 12:41:57.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.165" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:41:57.164" endtime="20201112 12:41:57.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.168" level="INFO">VALUE: [1.4250000000000373e-05, 1.4263999999999943e-05, 1.4749999999997404e-05, 1.4277999999999513e-05, 1.4291999999999083e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4291999999999083e-05, 1.5264000000000943e-05, 1.4764000000000443e-05, 1.480499999999968e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.4778000000000013e-05, 1.4250000000000373e-05, 1.4764000000000443e-05, 1.4264000000003413e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4806000000002623e-05, 1.4263999999999943e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4764000000000443e-05, 1.4805999999999153e-05, 1.5292000000000083e-05, 1.4278000000002983e-05, 1.4791999999999583e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4721999999998264e-05, 1.4277999999999513e-05, 1.4223000000000707e-05, 1.481899999999925e-05, 1.4277999999999513e-05, 1.4764000000000443e-05, 1.4764000000000443e-05, 1.4263999999999943e-05, 1.4749999999997404e-05, 1.4223000000000707e-05, 1.5236000000001804e-05]</msg>
<status status="PASS" starttime="20201112 12:41:57.167" endtime="20201112 12:41:57.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.162" endtime="20201112 12:41:57.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.172" endtime="20201112 12:41:57.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.175" endtime="20201112 12:41:57.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.174" endtime="20201112 12:41:57.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.170" endtime="20201112 12:41:57.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.800" endtime="20201112 12:41:57.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.800" endtime="20201112 12:41:57.196"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.205" endtime="20201112 12:41:57.224"></status>
</kw>
<msg timestamp="20201112 12:41:57.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.204" endtime="20201112 12:41:57.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.225" endtime="20201112 12:41:57.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.228" endtime="20201112 12:41:57.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.201" endtime="20201112 12:41:57.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.199" endtime="20201112 12:41:57.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.238" endtime="20201112 12:41:57.524"></status>
</kw>
<msg timestamp="20201112 12:41:57.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02026075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:57.237" endtime="20201112 12:41:57.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02026075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020276028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:57.529" endtime="20201112 12:41:57.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.537" endtime="20201112 12:41:57.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.234" endtime="20201112 12:41:57.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.232" endtime="20201112 12:41:57.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.544" level="INFO">${RESULT} = [{'time': 0.020276028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5278000000000513e-05, 'source_diff': 1.5278000000000513e-05}, {'time': 0.020297125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:57.541" endtime="20201112 12:41:57.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:57.559" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:57.545" endtime="20201112 12:41:57.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.564" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:41:57.563" endtime="20201112 12:41:57.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.566" level="INFO">VALUE: [1.5278000000000513e-05, 1.5763999999997974e-05, 1.5250000000001374e-05, 1.527700000000104e-05, 1.5764000000001444e-05, 1.5750000000001874e-05, 1.626300000000247e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5764000000001444e-05, 1.5305999999999653e-05, 1.581900000000025e-05, 1.5763999999997974e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5764000000001444e-05, 1.5749999999998404e-05, 1.580500000000068e-05, 1.633300000000032e-05, 1.5778000000001013e-05, 1.6264000000001944e-05, 1.6277999999998044e-05, 1.577700000000154e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5777999999997544e-05, 1.5792000000000583e-05, 1.5277999999997044e-05, 1.5264000000000943e-05, 1.6250000000002374e-05, 1.5764000000001444e-05, 1.5778000000001013e-05, 1.5292000000000083e-05, 1.5250000000001374e-05, 1.5263999999997474e-05, 1.5278000000000513e-05, 1.577700000000154e-05, 1.5250000000001374e-05, 1.5749999999998404e-05, 1.6277999999998044e-05, 1.5707999999999694e-05, 1.5764000000001444e-05, 1.5763999999997974e-05, 1.5764000000001444e-05, 1.5263999999997474e-05, 1.5764000000001444e-05, 1.5750000000001874e-05, 1.5263999999997474e-05, 1.6264000000001944e-05, 1.6264000000001944e-05]</msg>
<status status="PASS" starttime="20201112 12:41:57.565" endtime="20201112 12:41:57.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.560" endtime="20201112 12:41:57.568"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.570" endtime="20201112 12:41:57.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.574" endtime="20201112 12:41:57.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.572" endtime="20201112 12:41:57.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.568" endtime="20201112 12:41:57.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.197" endtime="20201112 12:41:57.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.197" endtime="20201112 12:41:57.595"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.604" endtime="20201112 12:41:57.621"></status>
</kw>
<msg timestamp="20201112 12:41:57.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.602" endtime="20201112 12:41:57.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.622" endtime="20201112 12:41:57.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.625" endtime="20201112 12:41:57.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.600" endtime="20201112 12:41:57.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.597" endtime="20201112 12:41:57.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.635" endtime="20201112 12:41:57.920"></status>
</kw>
<msg timestamp="20201112 12:41:57.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02026625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:57.634" endtime="20201112 12:41:57.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020248986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02026625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:57.925" endtime="20201112 12:41:57.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.933" endtime="20201112 12:41:57.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.631" endtime="20201112 12:41:57.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.629" endtime="20201112 12:41:57.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.940" level="INFO">${RESULT} = [{'time': 0.02026625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.020285931, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:41:57.937" endtime="20201112 12:41:57.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:57.954" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:57.941" endtime="20201112 12:41:57.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.959" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:41:57.958" endtime="20201112 12:41:57.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.961" level="INFO">VALUE: [1.7263999999999474e-05, 1.6263999999998474e-05, 1.6263999999998474e-05, 1.6264000000001944e-05, 1.6249999999998904e-05, 1.6764000000002444e-05, 1.6264000000001944e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.7249999999999904e-05, 1.6263999999998474e-05, 1.6278000000001513e-05, 1.6264000000001944e-05, 1.6235999999999334e-05, 1.634699999999989e-05, 1.67629999999995e-05, 1.6764000000002444e-05, 1.7277999999999044e-05, 1.6278000000001513e-05, 1.6764000000002444e-05, 1.6250000000002374e-05, 1.6263999999998474e-05, 1.6750000000002874e-05, 1.6277999999998044e-05, 1.6263999999998474e-05, 1.6792000000001583e-05, 1.6250000000002374e-05, 1.7263999999999474e-05, 1.6250000000002374e-05, 1.6262999999999e-05, 1.7334000000000793e-05, 1.6764000000002444e-05, 1.7263e-05, 1.6749999999999404e-05, 1.683300000000082e-05, 1.6263999999998474e-05, 1.6208999999999668e-05, 1.6262999999999e-05, 1.631900000000075e-05, 1.6750000000002874e-05, 1.7263999999999474e-05, 1.6749999999999404e-05, 1.6735999999999834e-05, 1.684700000000039e-05, 1.6263999999998474e-05, 1.626300000000247e-05, 1.6277999999998044e-05, 1.6763999999998974e-05, 1.6763999999998974e-05]</msg>
<status status="PASS" starttime="20201112 12:41:57.960" endtime="20201112 12:41:57.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.955" endtime="20201112 12:41:57.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.972" endtime="20201112 12:41:57.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.975" endtime="20201112 12:41:57.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.974" endtime="20201112 12:41:57.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.970" endtime="20201112 12:41:57.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.596" endtime="20201112 12:41:57.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.595" endtime="20201112 12:41:57.996"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.006" endtime="20201112 12:41:58.022"></status>
</kw>
<msg timestamp="20201112 12:41:58.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.004" endtime="20201112 12:41:58.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.024" endtime="20201112 12:41:58.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.026" endtime="20201112 12:41:58.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.001" endtime="20201112 12:41:58.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.999" endtime="20201112 12:41:58.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.037" endtime="20201112 12:41:58.323"></status>
</kw>
<msg timestamp="20201112 12:41:58.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.035" endtime="20201112 12:41:58.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.327" endtime="20201112 12:41:58.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.336" endtime="20201112 12:41:58.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.033" endtime="20201112 12:41:58.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.031" endtime="20201112 12:41:58.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:58.343" level="INFO">${RESULT} = [{'time': 0.020347361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7792000000002584e-05, 'source_diff': 1.7792000000002584e-05}, {'time': 0.02036725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:41:58.339" endtime="20201112 12:41:58.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:58.357" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:58.344" endtime="20201112 12:41:58.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.362" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:41:58.361" endtime="20201112 12:41:58.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.364" level="INFO">VALUE: [1.7792000000002584e-05, 1.731899999999828e-05, 1.7763999999999974e-05, 1.7263999999999474e-05, 1.7778000000003014e-05, 1.7778000000003014e-05, 1.7277999999999044e-05, 1.777700000000007e-05, 1.7777999999999544e-05, 1.7249999999999904e-05, 1.7763999999999974e-05, 1.7263999999999474e-05, 1.7221999999997295e-05, 1.779099999999964e-05, 1.7736000000000834e-05, 1.7763999999999974e-05, 1.7778000000003014e-05, 1.77630000000005e-05, 1.7263999999999474e-05, 1.7263999999999474e-05, 1.7264000000002944e-05, 1.7763999999999974e-05, 1.7750000000000404e-05, 1.7763999999999974e-05, 1.7763999999999974e-05, 1.7291999999998614e-05, 1.7263999999999474e-05, 1.8278000000000044e-05, 1.7236000000000334e-05, 1.7278000000002514e-05, 1.7236000000000334e-05, 1.7249999999999904e-05, 1.7249999999999904e-05, 1.7263999999999474e-05, 1.7277999999999044e-05, 1.7763999999999974e-05, 1.727699999999957e-05, 1.7263999999999474e-05, 1.7750000000000404e-05, 1.8235999999997865e-05, 1.8249999999997435e-05, 1.8250000000000904e-05, 1.77630000000005e-05, 1.7763999999999974e-05, 1.7263999999999474e-05, 1.776299999999703e-05, 1.7263999999999474e-05, 1.7263e-05, 1.7222000000000764e-05, 1.7750000000000404e-05]</msg>
<status status="PASS" starttime="20201112 12:41:58.363" endtime="20201112 12:41:58.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.358" endtime="20201112 12:41:58.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.368" endtime="20201112 12:41:58.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:58.372" endtime="20201112 12:41:58.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.370" endtime="20201112 12:41:58.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.366" endtime="20201112 12:41:58.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.997" endtime="20201112 12:41:58.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.997" endtime="20201112 12:41:58.393"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.402" endtime="20201112 12:41:58.418"></status>
</kw>
<msg timestamp="20201112 12:41:58.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.400" endtime="20201112 12:41:58.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.419" endtime="20201112 12:41:58.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.422" endtime="20201112 12:41:58.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.397" endtime="20201112 12:41:58.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.395" endtime="20201112 12:41:58.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.432" endtime="20201112 12:41:58.719"></status>
</kw>
<msg timestamp="20201112 12:41:58.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.431" endtime="20201112 12:41:58.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.724" endtime="20201112 12:41:58.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.732" endtime="20201112 12:41:58.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.428" endtime="20201112 12:41:58.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.426" endtime="20201112 12:41:58.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:58.739" level="INFO">${RESULT} = [{'time': 0.020258319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.87630000000015e-05, 'source_diff': 1.87630000000015e-05}, {'time': 0.020280681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:41:58.736" endtime="20201112 12:41:58.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:58.753" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:58.740" endtime="20201112 12:41:58.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.758" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:41:58.757" endtime="20201112 12:41:58.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.761" level="INFO">VALUE: [1.87630000000015e-05, 1.8263999999997005e-05, 1.8763999999997505e-05, 1.8749999999997935e-05, 1.8764000000000974e-05, 1.8764000000000974e-05, 1.877700000000107e-05, 1.9278000000001044e-05, 1.826299999999753e-05, 1.8263999999997005e-05, 1.8778000000000544e-05, 1.8263000000001e-05, 1.8264000000000474e-05, 1.8264000000000474e-05, 1.9264000000001474e-05, 1.8764000000000974e-05, 1.8277999999996575e-05, 1.8736000000001835e-05, 1.8778000000000544e-05, 1.87769999999976e-05, 1.87769999999976e-05, 1.8250000000000904e-05, 1.8264000000000474e-05, 1.829100000000014e-05, 1.8264000000000474e-05, 1.8263999999997005e-05, 1.8764000000000974e-05, 1.9263999999998005e-05, 1.8750000000001404e-05, 1.8778000000000544e-05, 1.829100000000014e-05, 1.8763999999997505e-05, 1.8735999999998365e-05, 1.8264000000000474e-05, 1.8264000000000474e-05, 1.8249999999997435e-05, 1.87769999999976e-05, 1.9263999999998005e-05, 1.8278000000000044e-05, 1.9263999999998005e-05, 1.8749999999997935e-05, 1.8278000000000044e-05, 1.8764000000000974e-05, 1.8193999999999155e-05, 1.8750000000001404e-05, 1.8278000000000044e-05, 1.8319999999998754e-05, 1.8749999999997935e-05, 1.9264000000001474e-05, 1.876299999999803e-05]</msg>
<status status="PASS" starttime="20201112 12:41:58.759" endtime="20201112 12:41:58.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.754" endtime="20201112 12:41:58.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.764" endtime="20201112 12:41:58.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:58.768" endtime="20201112 12:41:58.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.766" endtime="20201112 12:41:58.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.763" endtime="20201112 12:41:58.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.393" endtime="20201112 12:41:58.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.393" endtime="20201112 12:41:58.789"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.798" endtime="20201112 12:41:58.815"></status>
</kw>
<msg timestamp="20201112 12:41:58.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.796" endtime="20201112 12:41:58.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.817" endtime="20201112 12:41:58.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.820" endtime="20201112 12:41:58.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.794" endtime="20201112 12:41:58.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.792" endtime="20201112 12:41:58.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.830" endtime="20201112 12:41:59.139"></status>
</kw>
<msg timestamp="20201112 12:41:59.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020260667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.828" endtime="20201112 12:41:59.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020260667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.144" endtime="20201112 12:41:59.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.152" endtime="20201112 12:41:59.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.826" endtime="20201112 12:41:59.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.824" endtime="20201112 12:41:59.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.159" level="INFO">${RESULT} = [{'time': 0.020280444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.977700000000207e-05, 'source_diff': 1.977700000000207e-05}, {'time': 0.020303514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:59.156" endtime="20201112 12:41:59.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:59.174" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:59.160" endtime="20201112 12:41:59.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.179" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:41:59.178" endtime="20201112 12:41:59.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.182" level="INFO">VALUE: [1.977700000000207e-05, 1.9292000000000614e-05, 1.9735999999999365e-05, 1.9263999999998005e-05, 1.9763999999998505e-05, 1.9263000000002e-05, 1.9763999999998505e-05, 1.9334000000002793e-05, 1.9306000000000184e-05, 1.9764000000001974e-05, 1.9250000000001904e-05, 1.9749999999998935e-05, 1.9763999999998505e-05, 1.9764000000001974e-05, 1.9249999999998435e-05, 1.9763999999998505e-05, 1.9250000000001904e-05, 1.9764000000001974e-05, 1.9277999999997575e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9792000000001114e-05, 1.9249999999998435e-05, 1.9833999999999824e-05, 1.97769999999986e-05, 1.9235999999998865e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.919499999999963e-05, 1.9778000000001544e-05, 1.9763999999998505e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9250000000001904e-05, 1.9763999999998505e-05, 1.9750000000002405e-05, 1.9764000000001974e-05, 1.9763999999998505e-05, 1.9763999999998505e-05, 1.9792000000001114e-05, 1.9292000000000614e-05, 1.9764000000001974e-05, 1.9249999999998435e-05, 1.9763999999998505e-05, 1.933299999999985e-05, 1.9764000000001974e-05, 1.9278000000001044e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.9749999999998935e-05]</msg>
<status status="PASS" starttime="20201112 12:41:59.180" endtime="20201112 12:41:59.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.175" endtime="20201112 12:41:59.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.185" endtime="20201112 12:41:59.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.189" endtime="20201112 12:41:59.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.187" endtime="20201112 12:41:59.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.184" endtime="20201112 12:41:59.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.790" endtime="20201112 12:41:59.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.789" endtime="20201112 12:41:59.210"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.219" endtime="20201112 12:41:59.237"></status>
</kw>
<msg timestamp="20201112 12:41:59.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.217" endtime="20201112 12:41:59.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.238" endtime="20201112 12:41:59.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.241" endtime="20201112 12:41:59.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.215" endtime="20201112 12:41:59.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.213" endtime="20201112 12:41:59.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.252" endtime="20201112 12:41:59.538"></status>
</kw>
<msg timestamp="20201112 12:41:59.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.250" endtime="20201112 12:41:59.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.543" endtime="20201112 12:41:59.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.551" endtime="20201112 12:41:59.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.247" endtime="20201112 12:41:59.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.245" endtime="20201112 12:41:59.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.558" level="INFO">${RESULT} = [{'time': 0.020241556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0763999999999505e-05, 'source_diff': 2.0763999999999505e-05}, {'time': 0.020268472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:59.555" endtime="20201112 12:41:59.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:59.572" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:59.559" endtime="20201112 12:41:59.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.577" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:41:59.576" endtime="20201112 12:41:59.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.579" level="INFO">VALUE: [2.0763999999999505e-05, 2.0763999999999505e-05, 2.0777999999999075e-05, 2.0708000000001225e-05, 2.0763999999999505e-05, 2.076300000000003e-05, 2.0764000000002975e-05, 2.0292000000001614e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.027700000000257e-05, 2.0263999999999005e-05, 2.1264000000000005e-05, 2.0305999999997715e-05, 2.0263999999999005e-05, 2.1236000000000865e-05, 2.0763999999999505e-05, 2.0264000000002474e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0264000000002474e-05, 2.0306000000001184e-05, 2.0722000000000795e-05, 2.0263999999999005e-05, 2.0749999999999935e-05, 2.0792000000002114e-05, 2.0249999999999435e-05, 2.0749999999999935e-05, 2.02769999999991e-05, 2.0277999999998575e-05, 2.1277999999999575e-05, 2.079099999999917e-05, 2.0263999999999005e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0277999999998575e-05, 2.076300000000003e-05, 2.022299999999977e-05, 2.0250000000002905e-05, 2.076300000000003e-05, 2.1264000000000005e-05, 2.0249999999999435e-05, 2.0749999999999935e-05, 2.0249999999999435e-05, 2.0264000000002474e-05, 2.0263999999999005e-05, 2.083300000000135e-05, 2.0263999999999005e-05]</msg>
<status status="PASS" starttime="20201112 12:41:59.578" endtime="20201112 12:41:59.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.573" endtime="20201112 12:41:59.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.583" endtime="20201112 12:41:59.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.587" endtime="20201112 12:41:59.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.585" endtime="20201112 12:41:59.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.581" endtime="20201112 12:41:59.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.211" endtime="20201112 12:41:59.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.210" endtime="20201112 12:41:59.608"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.617" endtime="20201112 12:41:59.632"></status>
</kw>
<msg timestamp="20201112 12:41:59.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.615" endtime="20201112 12:41:59.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.634" endtime="20201112 12:41:59.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.637" endtime="20201112 12:41:59.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.612" endtime="20201112 12:41:59.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.610" endtime="20201112 12:41:59.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.647" endtime="20201112 12:41:59.934"></status>
</kw>
<msg timestamp="20201112 12:41:59.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020155778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.646" endtime="20201112 12:41:59.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020155778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020177528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.938" endtime="20201112 12:41:59.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.946" endtime="20201112 12:41:59.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.643" endtime="20201112 12:41:59.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.641" endtime="20201112 12:41:59.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.954" level="INFO">${RESULT} = [{'time': 0.020177528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1750000000000935e-05, 'source_diff': 2.1750000000000935e-05}, {'time': 0.020203639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:59.950" endtime="20201112 12:41:59.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:41:59.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:59.955" endtime="20201112 12:41:59.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.972" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:41:59.971" endtime="20201112 12:41:59.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.975" level="INFO">VALUE: [2.1750000000000935e-05, 2.1277999999999575e-05, 2.1250000000000435e-05, 2.1749999999997466e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.2277999999997106e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.1778000000000075e-05, 2.1735999999997896e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.1750000000000935e-05, 2.1735999999997896e-05, 2.1764000000000505e-05, 2.2278000000000575e-05, 2.1764000000000505e-05, 2.1262999999997062e-05, 2.1749999999997466e-05, 2.1721999999998326e-05, 2.2235999999998396e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.12770000000001e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1778000000000075e-05, 2.126300000000053e-05, 2.1764000000000505e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.1250000000000435e-05, 2.1750000000000935e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.12770000000001e-05, 2.1749999999997466e-05, 2.176300000000103e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.2264000000001005e-05, 2.1834000000001824e-05, 2.1778000000000075e-05, 2.1250000000000435e-05, 2.180500000000321e-05]</msg>
<status status="PASS" starttime="20201112 12:41:59.973" endtime="20201112 12:41:59.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.968" endtime="20201112 12:41:59.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.978" endtime="20201112 12:41:59.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.982" endtime="20201112 12:42:00.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.980" endtime="20201112 12:42:00.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.977" endtime="20201112 12:42:00.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.609" endtime="20201112 12:42:00.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.608" endtime="20201112 12:42:00.003"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.012" endtime="20201112 12:42:00.031"></status>
</kw>
<msg timestamp="20201112 12:42:00.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.011" endtime="20201112 12:42:00.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.033" endtime="20201112 12:42:00.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.037" endtime="20201112 12:42:00.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.008" endtime="20201112 12:42:00.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.006" endtime="20201112 12:42:00.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.052" endtime="20201112 12:42:00.339"></status>
</kw>
<msg timestamp="20201112 12:42:00.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.050" endtime="20201112 12:42:00.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020324194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.344" endtime="20201112 12:42:00.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.352" endtime="20201112 12:42:00.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.046" endtime="20201112 12:42:00.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.044" endtime="20201112 12:42:00.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.359" level="INFO">${RESULT} = [{'time': 0.020324194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27770000000016e-05, 'source_diff': 2.27770000000016e-05}, {'time': 0.020349528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:00.356" endtime="20201112 12:42:00.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:00.373" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:00.360" endtime="20201112 12:42:00.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.378" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:00.377" endtime="20201112 12:42:00.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.380" level="INFO">VALUE: [2.27770000000016e-05, 2.2763999999998036e-05, 2.2762999999998562e-05, 2.2264000000001005e-05, 2.2278000000000575e-05, 2.22770000000011e-05, 2.2749999999998466e-05, 2.2777999999997606e-05, 2.3262999999999062e-05, 2.2750000000001935e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.2250000000001435e-05, 2.27770000000016e-05, 2.2276999999997632e-05, 2.2707999999999756e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.3263999999998536e-05, 2.2763999999998036e-05, 2.2763999999998036e-05, 2.2263999999997536e-05, 2.27770000000016e-05, 2.2763999999998036e-05, 2.2250000000001435e-05, 2.273700000000184e-05, 2.2707999999999756e-05, 2.276300000000203e-05, 2.276300000000203e-05, 2.3278000000001575e-05, 2.269499999999966e-05, 2.219499999999916e-05, 2.2264000000001005e-05, 2.2249999999997966e-05, 2.2764000000001505e-05, 2.2764000000001505e-05, 2.2749999999998466e-05, 2.2764000000001505e-05, 2.2264000000001005e-05, 2.2264000000001005e-05, 2.3221999999999826e-05, 2.2262999999998062e-05, 2.2694000000000186e-05, 2.2749999999998466e-05, 2.2749999999998466e-05, 2.2763999999998036e-05, 2.2264000000001005e-05, 2.2763999999998036e-05, 2.2263999999997536e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201112 12:42:00.379" endtime="20201112 12:42:00.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.374" endtime="20201112 12:42:00.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.384" endtime="20201112 12:42:00.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.388" endtime="20201112 12:42:00.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.386" endtime="20201112 12:42:00.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.382" endtime="20201112 12:42:00.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.004" endtime="20201112 12:42:00.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.003" endtime="20201112 12:42:00.409"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.418" endtime="20201112 12:42:00.435"></status>
</kw>
<msg timestamp="20201112 12:42:00.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.416" endtime="20201112 12:42:00.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.437" endtime="20201112 12:42:00.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.440" endtime="20201112 12:42:00.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.413" endtime="20201112 12:42:00.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.411" endtime="20201112 12:42:00.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.450" endtime="20201112 12:42:00.740"></status>
</kw>
<msg timestamp="20201112 12:42:00.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.448" endtime="20201112 12:42:00.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020349222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.745" endtime="20201112 12:42:00.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.754" endtime="20201112 12:42:00.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.446" endtime="20201112 12:42:00.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.444" endtime="20201112 12:42:00.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.761" level="INFO">${RESULT} = [{'time': 0.020372986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3763999999999036e-05, 'source_diff': 2.3763999999999036e-05}, {'time': 0.020402097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:00.757" endtime="20201112 12:42:00.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:00.776" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:00.762" endtime="20201112 12:42:00.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.781" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:00.779" endtime="20201112 12:42:00.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.783" level="INFO">VALUE: [2.3763999999999036e-05, 2.3778000000002075e-05, 2.3276999999998632e-05, 2.3264000000002005e-05, 2.3763999999999036e-05, 2.3263999999998536e-05, 2.3778000000002075e-05, 2.3708000000000756e-05, 2.3320000000000285e-05, 2.3763999999999036e-05, 2.3693999999997717e-05, 2.3763999999999036e-05, 2.3263999999998536e-05, 2.3264000000002005e-05, 2.3264000000002005e-05, 2.3777999999998606e-05, 2.3276999999998632e-05, 2.3249999999998966e-05, 2.3777999999998606e-05, 2.3778000000002075e-05, 2.3750000000002935e-05, 2.3277999999998106e-05, 2.3763999999999036e-05, 2.3304999999997772e-05, 2.4290999999999202e-05, 2.3250000000002435e-05, 2.4249999999999966e-05, 2.3778000000002075e-05, 2.3777999999998606e-05, 2.3264000000002005e-05, 2.3763999999999036e-05, 2.3764000000002505e-05, 2.3777999999998606e-05, 2.3263999999998536e-05, 2.3777999999998606e-05, 2.3749999999999466e-05, 2.3263999999998536e-05, 2.3264000000002005e-05, 2.3208000000000256e-05, 2.3750000000002935e-05, 2.3263999999998536e-05, 2.333300000000038e-05, 2.3722000000000326e-05, 2.331900000000081e-05, 2.3263999999998536e-05, 2.3263999999998536e-05, 2.3763999999999036e-05, 2.4263999999999536e-05, 2.3264000000002005e-05, 2.3263999999998536e-05]</msg>
<status status="PASS" starttime="20201112 12:42:00.782" endtime="20201112 12:42:00.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.777" endtime="20201112 12:42:00.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.787" endtime="20201112 12:42:00.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.791" endtime="20201112 12:42:00.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.789" endtime="20201112 12:42:00.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.785" endtime="20201112 12:42:00.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.410" endtime="20201112 12:42:00.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.409" endtime="20201112 12:42:00.812"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.821" endtime="20201112 12:42:00.838"></status>
</kw>
<msg timestamp="20201112 12:42:00.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.819" endtime="20201112 12:42:00.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.840" endtime="20201112 12:42:00.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.842" endtime="20201112 12:42:00.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.816" endtime="20201112 12:42:00.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.814" endtime="20201112 12:42:00.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.853" endtime="20201112 12:42:01.140"></status>
</kw>
<msg timestamp="20201112 12:42:01.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.851" endtime="20201112 12:42:01.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.144" endtime="20201112 12:42:01.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.153" endtime="20201112 12:42:01.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.848" endtime="20201112 12:42:01.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.847" endtime="20201112 12:42:01.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.160" level="INFO">${RESULT} = [{'time': 0.020233931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4791999999999176e-05, 'source_diff': 2.4791999999999176e-05}, {'time': 0.020265306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:01.156" endtime="20201112 12:42:01.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:01.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:01.161" endtime="20201112 12:42:01.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.178" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:01.177" endtime="20201112 12:42:01.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.181" level="INFO">VALUE: [2.4791999999999176e-05, 2.5291999999999676e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4236000000000396e-05, 2.4263999999999536e-05, 2.4764000000000036e-05, 2.4249999999999966e-05, 2.4764000000000036e-05, 2.4263999999999536e-05, 2.4764000000000036e-05, 2.5264000000000536e-05, 2.5263999999997067e-05, 2.4777000000000132e-05, 2.4777000000000132e-05, 2.4263999999999536e-05, 2.4263999999999536e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4777000000000132e-05, 2.4764000000000036e-05, 2.4777999999999606e-05, 2.4263999999999536e-05, 2.4263999999999536e-05, 2.5263000000001062e-05, 2.4764000000000036e-05, 2.4277999999999106e-05, 2.4777999999999606e-05, 2.4263999999999536e-05, 2.4264000000003005e-05, 2.4764000000000036e-05, 2.4249999999999966e-05, 2.4263999999999536e-05, 2.5278000000000106e-05, 2.4277999999999106e-05, 2.4348000000000425e-05, 2.4318999999998342e-05, 2.4764000000000036e-05, 2.4263000000000062e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.5250000000000966e-05, 2.4764000000000036e-05, 2.4764000000000036e-05, 2.4249999999999966e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4777999999999606e-05, 2.4764000000000036e-05, 2.4764000000000036e-05]</msg>
<status status="PASS" starttime="20201112 12:42:01.179" endtime="20201112 12:42:01.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.174" endtime="20201112 12:42:01.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.185" endtime="20201112 12:42:01.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.188" endtime="20201112 12:42:01.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.186" endtime="20201112 12:42:01.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.183" endtime="20201112 12:42:01.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.813" endtime="20201112 12:42:01.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.812" endtime="20201112 12:42:01.209"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.218" endtime="20201112 12:42:01.236"></status>
</kw>
<msg timestamp="20201112 12:42:01.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.216" endtime="20201112 12:42:01.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.237" endtime="20201112 12:42:01.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.240" endtime="20201112 12:42:01.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.214" endtime="20201112 12:42:01.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.212" endtime="20201112 12:42:01.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.251" endtime="20201112 12:42:01.538"></status>
</kw>
<msg timestamp="20201112 12:42:01.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.249" endtime="20201112 12:42:01.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.542" endtime="20201112 12:42:01.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.551" endtime="20201112 12:42:01.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.246" endtime="20201112 12:42:01.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.244" endtime="20201112 12:42:01.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.558" level="INFO">${RESULT} = [{'time': 0.020233917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5764000000001036e-05, 'source_diff': 2.5764000000001036e-05}, {'time': 0.020261583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:01.554" endtime="20201112 12:42:01.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:01.572" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:01.559" endtime="20201112 12:42:01.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.576" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:42:01.575" endtime="20201112 12:42:01.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.579" level="INFO">VALUE: [2.5764000000001036e-05, 2.5207999999998787e-05, 2.5763999999997567e-05, 2.5278000000000106e-05, 2.5764000000001036e-05, 2.5264000000000536e-05, 2.5764000000001036e-05, 2.5749999999997997e-05, 2.5763999999997567e-05, 2.5264000000000536e-05, 2.5735999999998427e-05, 2.5805999999999746e-05, 2.6249999999998497e-05, 2.5291999999999676e-05, 2.5764000000001036e-05, 2.5750000000001466e-05, 2.6263000000002062e-05, 2.5764000000001036e-05, 2.5778000000000606e-05, 2.5750000000001466e-05, 2.5764000000001036e-05, 2.5763999999997567e-05, 2.5778000000000606e-05, 2.5236000000001396e-05, 2.5764000000001036e-05, 2.6278000000001106e-05, 2.5778000000000606e-05, 2.5249999999997497e-05, 2.5278000000000106e-05, 2.5764000000001036e-05, 2.5262999999997593e-05, 2.5264000000000536e-05, 2.5750000000001466e-05, 2.5818999999999842e-05, 2.5319999999998816e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.6278000000001106e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.5278000000000106e-05, 2.5318999999999342e-05, 2.5264000000000536e-05, 2.5264000000000536e-05, 2.5763999999997567e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.5777000000001132e-05, 2.5750000000001466e-05, 2.6250000000001966e-05]</msg>
<status status="PASS" starttime="20201112 12:42:01.578" endtime="20201112 12:42:01.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.573" endtime="20201112 12:42:01.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.583" endtime="20201112 12:42:01.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.586" endtime="20201112 12:42:01.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.585" endtime="20201112 12:42:01.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.581" endtime="20201112 12:42:01.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.210" endtime="20201112 12:42:01.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.210" endtime="20201112 12:42:01.607"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.616" endtime="20201112 12:42:01.634"></status>
</kw>
<msg timestamp="20201112 12:42:01.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.615" endtime="20201112 12:42:01.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.635" endtime="20201112 12:42:01.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.638" endtime="20201112 12:42:01.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.612" endtime="20201112 12:42:01.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.610" endtime="20201112 12:42:01.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.648" endtime="20201112 12:42:01.935"></status>
</kw>
<msg timestamp="20201112 12:42:01.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.647" endtime="20201112 12:42:01.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020260083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.940" endtime="20201112 12:42:01.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.948" endtime="20201112 12:42:01.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.644" endtime="20201112 12:42:01.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.642" endtime="20201112 12:42:01.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.955" level="INFO">${RESULT} = [{'time': 0.020260083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6819000000000842e-05, 'source_diff': 2.6819000000000842e-05}, {'time': 0.020290028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:01.952" endtime="20201112 12:42:01.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:01.969" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:01.956" endtime="20201112 12:42:01.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.974" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:42:01.973" endtime="20201112 12:42:01.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.976" level="INFO">VALUE: [2.6819000000000842e-05, 2.6264000000001536e-05, 2.6264000000001536e-05, 2.6721999999999857e-05, 2.6777000000002132e-05, 2.6764000000002036e-05, 2.6305000000000772e-05, 2.6762999999999093e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6263999999998067e-05, 2.6763999999998567e-05, 2.6750000000002466e-05, 2.6763999999998567e-05, 2.7208000000000787e-05, 2.6264000000001536e-05, 2.6694000000000717e-05, 2.6763999999998567e-05, 2.6804999999997803e-05, 2.6264000000001536e-05, 2.6278000000001106e-05, 2.6262999999998593e-05, 2.6292000000000676e-05, 2.6263999999998067e-05, 2.6764000000002036e-05, 2.6263999999998067e-05, 2.6806000000000746e-05, 2.6776999999998663e-05, 2.6249999999998497e-05, 2.6278000000001106e-05, 2.6777000000002132e-05, 2.6263999999998067e-05, 2.6750000000002466e-05, 2.6694000000000717e-05, 2.6778000000001606e-05, 2.7276999999999163e-05, 2.6263999999998067e-05, 2.6777999999998137e-05, 2.6278000000001106e-05, 2.6764000000002036e-05, 2.620899999999926e-05, 2.6250000000001966e-05, 2.6278000000001106e-05, 2.6764000000002036e-05, 2.6790999999998233e-05, 2.6764000000002036e-05, 2.7262999999999593e-05, 2.6763999999998567e-05, 2.6763999999998567e-05, 2.6264000000001536e-05]</msg>
<status status="PASS" starttime="20201112 12:42:01.975" endtime="20201112 12:42:01.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.970" endtime="20201112 12:42:01.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.981" endtime="20201112 12:42:01.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.986" endtime="20201112 12:42:02.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.984" endtime="20201112 12:42:02.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.978" endtime="20201112 12:42:02.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.608" endtime="20201112 12:42:02.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.608" endtime="20201112 12:42:02.008"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.023" endtime="20201112 12:42:02.042"></status>
</kw>
<msg timestamp="20201112 12:42:02.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.021" endtime="20201112 12:42:02.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.044" endtime="20201112 12:42:02.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.047" endtime="20201112 12:42:02.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.016" endtime="20201112 12:42:02.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.013" endtime="20201112 12:42:02.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.058" endtime="20201112 12:42:02.344"></status>
</kw>
<msg timestamp="20201112 12:42:02.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027861833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027889625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.057" endtime="20201112 12:42:02.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027861833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027889625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.348" endtime="20201112 12:42:02.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.357" endtime="20201112 12:42:02.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.054" endtime="20201112 12:42:02.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.052" endtime="20201112 12:42:02.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.364" level="INFO">${RESULT} = [{'time': 0.027889625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7792000000002176e-05, 'source_diff': 2.7792000000002176e-05}, {'time': 0.027922944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:02.360" endtime="20201112 12:42:02.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:02.379" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:02.365" endtime="20201112 12:42:02.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.384" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:42:02.383" endtime="20201112 12:42:02.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.386" level="INFO">VALUE: [2.7792000000002176e-05, 2.7819000000001842e-05, 2.7263999999999067e-05, 2.7277999999998637e-05, 2.7179999999998178e-05, 2.7264000000002536e-05, 2.7263999999999067e-05, 2.7708000000001287e-05, 2.7262999999999593e-05, 2.7777999999999137e-05, 2.7263999999999067e-05, 2.7264000000002536e-05, 2.7292000000001676e-05, 2.7764000000003036e-05, 2.7777999999999137e-05, 2.8333000000001912e-05, 2.7763000000000093e-05, 2.7305000000001772e-05, 2.7277000000002632e-05, 2.7763999999999567e-05, 2.7263999999999067e-05, 2.7846999999997513e-05, 2.7264000000002536e-05, 2.7749999999999997e-05, 2.7749999999999997e-05, 2.7249999999999497e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7263999999999067e-05, 2.7249999999999497e-05, 2.7262999999999593e-05, 2.7263999999999067e-05, 2.7277999999998637e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7305999999997776e-05, 2.7263999999999067e-05, 2.7764000000003036e-05, 2.7749999999999997e-05, 2.7249999999999497e-05, 2.7763999999999567e-05, 2.7777999999999137e-05, 2.769499999999772e-05, 2.8250000000000497e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7263999999999067e-05, 2.7805999999998277e-05, 2.7319999999997346e-05, 2.7749999999999997e-05]</msg>
<status status="PASS" starttime="20201112 12:42:02.385" endtime="20201112 12:42:02.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.380" endtime="20201112 12:42:02.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.390" endtime="20201112 12:42:02.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.393" endtime="20201112 12:42:02.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.392" endtime="20201112 12:42:02.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.388" endtime="20201112 12:42:02.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.010" endtime="20201112 12:42:02.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.009" endtime="20201112 12:42:02.414"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.424" endtime="20201112 12:42:02.442"></status>
</kw>
<msg timestamp="20201112 12:42:02.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.422" endtime="20201112 12:42:02.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.443" endtime="20201112 12:42:02.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.446" endtime="20201112 12:42:02.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.419" endtime="20201112 12:42:02.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.417" endtime="20201112 12:42:02.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.456" endtime="20201112 12:42:02.743"></status>
</kw>
<msg timestamp="20201112 12:42:02.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020430931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.455" endtime="20201112 12:42:02.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020430931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.747" endtime="20201112 12:42:02.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.756" endtime="20201112 12:42:02.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.452" endtime="20201112 12:42:02.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.450" endtime="20201112 12:42:02.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.763" level="INFO">${RESULT} = [{'time': 0.020459708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8777000000000663e-05, 'source_diff': 2.8777000000000663e-05}, {'time': 0.020490931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:02.759" endtime="20201112 12:42:02.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:02.777" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:02.764" endtime="20201112 12:42:02.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.782" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:42:02.781" endtime="20201112 12:42:02.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.785" level="INFO">VALUE: [2.8777000000000663e-05, 2.8764000000000567e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8264000000000067e-05, 2.82370000000004e-05, 2.8791999999999707e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.8750000000000997e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8750000000000997e-05, 2.8277999999999637e-05, 2.8763999999997097e-05, 2.8791000000000233e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8264000000000067e-05, 2.8277000000000163e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8736000000001427e-05, 2.8778000000000137e-05, 2.920899999999879e-05, 2.8764000000000567e-05, 2.8778000000000137e-05, 2.8263000000000593e-05, 2.8763999999997097e-05, 2.8736000000001427e-05, 2.8277999999999637e-05, 2.8305000000002772e-05, 2.8818999999999373e-05, 2.8263000000000593e-05, 2.8249999999997027e-05, 2.8264000000000067e-05, 2.8319000000002342e-05, 2.8208000000001787e-05, 2.8764000000000567e-05, 2.8778000000000137e-05, 2.8764000000000567e-05, 2.8264000000000067e-05, 2.8778000000000137e-05, 2.8778000000000137e-05, 2.8791000000000233e-05, 2.9264000000001067e-05, 2.8235999999997458e-05, 2.8264000000000067e-05, 2.8764000000000567e-05]</msg>
<status status="PASS" starttime="20201112 12:42:02.783" endtime="20201112 12:42:02.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.778" endtime="20201112 12:42:02.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.789" endtime="20201112 12:42:02.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.792" endtime="20201112 12:42:02.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.791" endtime="20201112 12:42:02.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.787" endtime="20201112 12:42:02.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.415" endtime="20201112 12:42:02.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.415" endtime="20201112 12:42:02.813"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.822" endtime="20201112 12:42:02.839"></status>
</kw>
<msg timestamp="20201112 12:42:02.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.821" endtime="20201112 12:42:02.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.841" endtime="20201112 12:42:02.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.844" endtime="20201112 12:42:02.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.818" endtime="20201112 12:42:02.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.816" endtime="20201112 12:42:02.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.854" endtime="20201112 12:42:03.141"></status>
</kw>
<msg timestamp="20201112 12:42:03.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020343167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.853" endtime="20201112 12:42:03.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020343167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020372917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.145" endtime="20201112 12:42:03.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.154" endtime="20201112 12:42:03.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.850" endtime="20201112 12:42:03.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.848" endtime="20201112 12:42:03.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.161" level="INFO">${RESULT} = [{'time': 0.020372917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9750000000001997e-05, 'source_diff': 2.9750000000001997e-05}, {'time': 0.020404833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:03.157" endtime="20201112 12:42:03.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:03.174" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:03.162" endtime="20201112 12:42:03.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.179" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:42:03.178" endtime="20201112 12:42:03.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.182" level="INFO">VALUE: [2.9750000000001997e-05, 2.9250000000001497e-05, 2.9792000000000707e-05, 2.9777999999997667e-05, 2.9763999999998098e-05, 2.9292000000000207e-05, 2.9791999999997237e-05, 2.9764000000001567e-05, 2.9764000000001567e-05, 2.9763999999998098e-05, 2.9721999999999388e-05, 2.9263999999997597e-05, 2.9264000000001067e-05, 2.9763000000002093e-05, 2.9250000000001497e-05, 2.9264000000001067e-05, 2.9805000000000803e-05, 2.9763999999998098e-05, 2.9264000000001067e-05, 2.9262999999998124e-05, 2.9305999999999777e-05, 2.9750000000001997e-05, 3.0276999999998694e-05, 2.9764000000001567e-05, 2.97370000000019e-05, 2.9763999999998098e-05, 2.9250000000001497e-05, 2.9292000000000207e-05, 2.9264000000001067e-05, 2.9250000000001497e-05, 2.9264000000001067e-05, 2.9722000000002857e-05, 2.9749999999998528e-05, 2.9277999999997167e-05, 2.9263000000001593e-05, 2.9278000000000637e-05, 2.9250000000001497e-05, 2.922299999999836e-05, 2.9764000000001567e-05, 2.9762999999998624e-05, 2.9264000000001067e-05, 2.9763999999998098e-05, 2.9763000000002093e-05, 2.9292000000000207e-05, 2.9764000000001567e-05, 2.9763999999998098e-05, 2.9264000000001067e-05, 2.9346999999999013e-05, 2.9777000000001663e-05, 2.9292000000000207e-05]</msg>
<status status="PASS" starttime="20201112 12:42:03.180" endtime="20201112 12:42:03.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.175" endtime="20201112 12:42:03.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.192" endtime="20201112 12:42:03.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.196" endtime="20201112 12:42:03.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.194" endtime="20201112 12:42:03.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.190" endtime="20201112 12:42:03.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.814" endtime="20201112 12:42:03.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.813" endtime="20201112 12:42:03.217"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.226" endtime="20201112 12:42:03.243"></status>
</kw>
<msg timestamp="20201112 12:42:03.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.224" endtime="20201112 12:42:03.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.245" endtime="20201112 12:42:03.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.248" endtime="20201112 12:42:03.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.221" endtime="20201112 12:42:03.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.219" endtime="20201112 12:42:03.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.258" endtime="20201112 12:42:03.545"></status>
</kw>
<msg timestamp="20201112 12:42:03.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020200181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.256" endtime="20201112 12:42:03.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020200181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020230458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.549" endtime="20201112 12:42:03.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.557" endtime="20201112 12:42:03.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.254" endtime="20201112 12:42:03.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.252" endtime="20201112 12:42:03.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.565" level="INFO">${RESULT} = [{'time': 0.020230458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0276999999998694e-05, 'source_diff': 3.0276999999998694e-05}, {'time': 0.020264667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:03.561" endtime="20201112 12:42:03.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:03.578" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:03.566" endtime="20201112 12:42:03.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.583" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:42:03.582" endtime="20201112 12:42:03.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.586" level="INFO">VALUE: [3.0276999999998694e-05, 3.07639999999991e-05, 3.0249999999999028e-05, 3.07639999999991e-05, 3.076400000000257e-05, 3.081900000000137e-05, 3.082000000000085e-05, 3.077799999999867e-05, 3.0277999999998167e-05, 3.0277999999998167e-05, 3.0263999999998598e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.077799999999867e-05, 3.077700000000266e-05, 3.076400000000257e-05, 3.074999999999953e-05, 3.076400000000257e-05, 3.07639999999991e-05, 3.07639999999991e-05, 3.0762999999999624e-05, 3.0263999999998598e-05, 3.077800000000214e-05, 3.074999999999953e-05, 3.07639999999991e-05, 3.0264000000002067e-05, 3.0263999999998598e-05, 3.12639999999996e-05, 3.0263999999998598e-05, 3.0264000000002067e-05, 3.0263999999998598e-05, 3.0264000000002067e-05, 3.07639999999991e-05, 3.0263999999998598e-05, 3.0264000000002067e-05, 3.125000000000003e-05, 3.0249999999999028e-05, 3.076400000000257e-05, 3.0762999999999624e-05, 3.0250000000002497e-05, 3.0278000000001637e-05, 3.074999999999953e-05, 3.0221999999999888e-05, 3.0762999999999624e-05, 3.125000000000003e-05, 3.07639999999991e-05, 3.0264000000002067e-05, 3.079100000000223e-05, 3.0278000000001637e-05, 3.076400000000257e-05]</msg>
<status status="PASS" starttime="20201112 12:42:03.584" endtime="20201112 12:42:03.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.579" endtime="20201112 12:42:03.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.589" endtime="20201112 12:42:03.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.593" endtime="20201112 12:42:03.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.591" endtime="20201112 12:42:03.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.588" endtime="20201112 12:42:03.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.218" endtime="20201112 12:42:03.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.217" endtime="20201112 12:42:03.614"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.622" endtime="20201112 12:42:03.640"></status>
</kw>
<msg timestamp="20201112 12:42:03.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.621" endtime="20201112 12:42:03.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.641" endtime="20201112 12:42:03.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.644" endtime="20201112 12:42:03.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.618" endtime="20201112 12:42:03.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.616" endtime="20201112 12:42:03.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.654" endtime="20201112 12:42:03.941"></status>
</kw>
<msg timestamp="20201112 12:42:03.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.652" endtime="20201112 12:42:03.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019765042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.945" endtime="20201112 12:42:03.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.953" endtime="20201112 12:42:03.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.650" endtime="20201112 12:42:03.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.648" endtime="20201112 12:42:03.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.960" level="INFO">${RESULT} = [{'time': 0.019765042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.306999999999881e-05, 'source_diff': 5.306999999999881e-05}, {'time': 0.019815597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:03.957" endtime="20201112 12:42:03.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:03.975" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:03.961" endtime="20201112 12:42:03.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.980" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:42:03.979" endtime="20201112 12:42:03.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.983" level="INFO">VALUE: [5.306999999999881e-05, 3.5625000000000934e-05, 3.550000000000081e-05, 3.5111000000000864e-05, 3.523599999999752e-05, 3.552800000000342e-05, 3.49450000000015e-05, 3.506999999999816e-05, 3.547200000000167e-05, 3.5596999999998324e-05, 3.544499999999853e-05, 3.5389000000000254e-05, 3.49450000000015e-05, 3.498600000000074e-05, 3.55840000000017e-05, 3.556999999999866e-05, 3.523700000000046e-05, 3.49450000000015e-05, 3.5290999999999795e-05, 3.5054999999999115e-05, 3.5069000000002154e-05, 3.525000000000056e-05, 3.544399999999906e-05, 3.499999999999684e-05, 3.5054999999999115e-05, 3.5541000000000045e-05, 3.5083000000001724e-05, 3.6846999999999575e-05, 3.5374999999997214e-05, 3.518000000000271e-05, 3.501399999999988e-05, 3.5318999999998935e-05, 3.67780000000012e-05, 3.575000000000106e-05, 3.5318999999998935e-05, 3.5402999999999823e-05, 3.6889000000001754e-05, 3.680600000000034e-05, 3.684799999999905e-05, 3.680600000000034e-05, 3.505599999999859e-05, 3.5445000000002e-05, 3.505600000000206e-05, 3.494399999999856e-05, 3.54580000000021e-05, 3.506999999999816e-05, 3.49580000000016e-05, 3.563800000000103e-05, 3.693000000000099e-05, 3.5360999999997644e-05]</msg>
<status status="PASS" starttime="20201112 12:42:03.981" endtime="20201112 12:42:03.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.976" endtime="20201112 12:42:03.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.986" endtime="20201112 12:42:03.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.990" endtime="20201112 12:42:04.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.988" endtime="20201112 12:42:04.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.985" endtime="20201112 12:42:04.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.615" endtime="20201112 12:42:04.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.614" endtime="20201112 12:42:04.011"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.020" endtime="20201112 12:42:04.038"></status>
</kw>
<msg timestamp="20201112 12:42:04.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.018" endtime="20201112 12:42:04.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.039" endtime="20201112 12:42:04.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.042" endtime="20201112 12:42:04.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.016" endtime="20201112 12:42:04.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.014" endtime="20201112 12:42:04.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.052" endtime="20201112 12:42:04.363"></status>
</kw>
<msg timestamp="20201112 12:42:04.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:04.051" endtime="20201112 12:42:04.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:04.367" endtime="20201112 12:42:04.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.376" endtime="20201112 12:42:04.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.048" endtime="20201112 12:42:04.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.046" endtime="20201112 12:42:04.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.383" level="INFO">${RESULT} = [{'time': 0.020292653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6653000000001074e-05, 'source_diff': 3.6653000000001074e-05}, {'time': 0.020340639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:04.379" endtime="20201112 12:42:04.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:04.397" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:04.384" endtime="20201112 12:42:04.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.401" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:42:04.400" endtime="20201112 12:42:04.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.404" level="INFO">VALUE: [3.6653000000001074e-05, 3.6596999999999325e-05, 3.630599999999984e-05, 3.656999999999966e-05, 3.782000000000091e-05, 3.7902999999998854e-05, 3.6153000000000574e-05, 3.623600000000199e-05, 3.623599999999852e-05, 3.6819000000000435e-05, 3.644499999999953e-05, 3.594499999999903e-05, 3.60840000000022e-05, 3.613799999999806e-05, 3.600000000000131e-05, 3.6332999999999505e-05, 3.6527000000001475e-05, 3.592999999999999e-05, 3.6776999999998256e-05, 3.594399999999956e-05, 3.654200000000052e-05, 3.6167000000000143e-05, 3.672199999999945e-05, 3.6569000000000185e-05, 3.6068999999999685e-05, 3.6318999999999935e-05, 3.6068999999999685e-05, 3.592999999999999e-05, 3.620799999999938e-05, 3.6624999999998464e-05, 3.6180999999999713e-05, 3.624999999999809e-05, 3.6125000000001434e-05, 3.6681000000000213e-05, 3.6389000000001254e-05, 3.634800000000202e-05, 3.626400000000113e-05, 3.633400000000245e-05, 3.6333000000002974e-05, 3.600000000000131e-05, 3.790199999999938e-05, 3.6512999999998436e-05, 3.6681000000000213e-05, 3.619499999999928e-05, 3.672199999999945e-05, 3.6639000000001504e-05, 3.644400000000006e-05, 3.7861000000000145e-05, 3.622199999999895e-05, 3.591600000000042e-05]</msg>
<status status="PASS" starttime="20201112 12:42:04.402" endtime="20201112 12:42:04.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.398" endtime="20201112 12:42:04.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.408" endtime="20201112 12:42:04.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.411" endtime="20201112 12:42:04.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.410" endtime="20201112 12:42:04.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.406" endtime="20201112 12:42:04.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.012" endtime="20201112 12:42:04.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.011" endtime="20201112 12:42:04.432"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.441" endtime="20201112 12:42:04.459"></status>
</kw>
<msg timestamp="20201112 12:42:04.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.440" endtime="20201112 12:42:04.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.461" endtime="20201112 12:42:04.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.463" endtime="20201112 12:42:04.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.437" endtime="20201112 12:42:04.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.435" endtime="20201112 12:42:04.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.474" endtime="20201112 12:42:04.760"></status>
</kw>
<msg timestamp="20201112 12:42:04.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.472" endtime="20201112 12:42:04.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020210931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.764" endtime="20201112 12:42:04.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.773" endtime="20201112 12:42:04.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.470" endtime="20201112 12:42:04.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.468" endtime="20201112 12:42:04.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.780" level="INFO">${RESULT} = [{'time': 0.020248556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7624999999999464e-05, 'source_diff': 3.7624999999999464e-05}, {'time': 0.020298556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:04.776" endtime="20201112 12:42:04.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:04.794" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:04.781" endtime="20201112 12:42:04.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.799" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:42:04.798" endtime="20201112 12:42:04.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.802" level="INFO">VALUE: [3.7624999999999464e-05, 3.705599999999712e-05, 3.724999999999909e-05, 3.724999999999909e-05, 3.782000000000091e-05, 3.7360999999999644e-05, 3.751400000000238e-05, 3.718000000000124e-05, 3.8847000000001575e-05, 3.7138999999998534e-05, 3.751399999999891e-05, 3.722199999999995e-05, 3.8861000000001145e-05, 3.745800000000063e-05, 3.7445000000000533e-05, 3.695800000000013e-05, 3.772199999999698e-05, 3.8875000000000715e-05, 3.7139000000002004e-05, 3.755600000000109e-05, 3.702800000000145e-05, 3.725000000000256e-05, 3.699999999999884e-05, 3.782000000000091e-05, 3.7195000000000283e-05, 3.87919999999993e-05, 3.7526999999999006e-05, 3.7262999999999186e-05, 3.694399999999709e-05, 3.7639000000002504e-05, 3.724999999999909e-05, 3.8875000000000715e-05, 3.745800000000063e-05, 3.7653000000002074e-05, 3.7639000000002504e-05, 3.7138999999998534e-05, 3.7068999999997215e-05, 3.8818999999998965e-05, 3.745800000000063e-05, 3.7347000000000075e-05, 3.742999999999802e-05, 3.744400000000106e-05, 3.7652999999998604e-05, 3.694400000000056e-05, 3.730599999999737e-05, 3.751400000000238e-05, 3.7180999999997244e-05, 3.7417000000001394e-05, 3.69589999999996e-05, 3.7681000000001214e-05]</msg>
<status status="PASS" starttime="20201112 12:42:04.800" endtime="20201112 12:42:04.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.795" endtime="20201112 12:42:04.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.806" endtime="20201112 12:42:04.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.810" endtime="20201112 12:42:04.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.808" endtime="20201112 12:42:04.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.804" endtime="20201112 12:42:04.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.433" endtime="20201112 12:42:04.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.433" endtime="20201112 12:42:04.831"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.840" endtime="20201112 12:42:04.858"></status>
</kw>
<msg timestamp="20201112 12:42:04.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.839" endtime="20201112 12:42:04.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.860" endtime="20201112 12:42:04.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.862" endtime="20201112 12:42:04.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.836" endtime="20201112 12:42:04.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.834" endtime="20201112 12:42:04.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.873" endtime="20201112 12:42:05.159"></status>
</kw>
<msg timestamp="20201112 12:42:05.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020185431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.871" endtime="20201112 12:42:05.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020185431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.163" endtime="20201112 12:42:05.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.171" endtime="20201112 12:42:05.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.869" endtime="20201112 12:42:05.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.867" endtime="20201112 12:42:05.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.178" level="INFO">${RESULT} = [{'time': 0.020224042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8611000000000895e-05, 'source_diff': 3.8611000000000895e-05}, {'time': 0.020273083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:05.175" endtime="20201112 12:42:05.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:05.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:05.180" endtime="20201112 12:42:05.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.197" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:42:05.196" endtime="20201112 12:42:05.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.200" level="INFO">VALUE: [3.8611000000000895e-05, 3.8361000000000645e-05, 3.8318999999998465e-05, 3.9888999999997815e-05, 3.8569000000002185e-05, 3.9818999999999966e-05, 3.872199999999798e-05, 3.875000000000059e-05, 3.820799999999791e-05, 3.845799999999816e-05, 3.845800000000163e-05, 3.847199999999773e-05, 3.8430999999998494e-05, 3.8096999999997355e-05, 3.9930999999999994e-05, 3.867999999999927e-05, 3.8597000000001325e-05, 3.849999999999687e-05, 3.8610999999997425e-05, 3.980599999999987e-05, 3.827799999999923e-05, 3.873600000000102e-05, 3.825000000000009e-05, 3.876400000000016e-05, 3.8388999999999784e-05, 3.8291000000002795e-05, 3.81659999999992e-05, 3.980599999999987e-05, 3.813800000000006e-05, 3.8054999999998645e-05, 3.8568999999998715e-05, 3.804199999999855e-05, 3.8139000000003004e-05, 3.8276999999999756e-05, 3.8319000000001935e-05, 3.8388999999999784e-05, 3.850000000000034e-05, 3.8347000000001075e-05, 3.9805000000000396e-05, 3.819399999999834e-05, 3.872200000000145e-05, 3.798600000000027e-05, 3.852800000000295e-05, 3.852800000000295e-05, 3.873600000000102e-05, 3.8596999999997855e-05, 3.8124999999999964e-05, 3.875000000000059e-05, 3.7916999999998424e-05, 3.829200000000227e-05]</msg>
<status status="PASS" starttime="20201112 12:42:05.198" endtime="20201112 12:42:05.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.193" endtime="20201112 12:42:05.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.203" endtime="20201112 12:42:05.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.207" endtime="20201112 12:42:05.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.205" endtime="20201112 12:42:05.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.202" endtime="20201112 12:42:05.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.832" endtime="20201112 12:42:05.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.831" endtime="20201112 12:42:05.228"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.237" endtime="20201112 12:42:05.255"></status>
</kw>
<msg timestamp="20201112 12:42:05.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.235" endtime="20201112 12:42:05.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.256" endtime="20201112 12:42:05.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.259" endtime="20201112 12:42:05.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.233" endtime="20201112 12:42:05.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.230" endtime="20201112 12:42:05.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.269" endtime="20201112 12:42:05.556"></status>
</kw>
<msg timestamp="20201112 12:42:05.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.268" endtime="20201112 12:42:05.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.560" endtime="20201112 12:42:05.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.569" endtime="20201112 12:42:05.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.265" endtime="20201112 12:42:05.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.263" endtime="20201112 12:42:05.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.576" level="INFO">${RESULT} = [{'time': 0.020328375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9582999999999285e-05, 'source_diff': 3.9582999999999285e-05}, {'time': 0.020379389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:05.572" endtime="20201112 12:42:05.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:05.591" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:05.577" endtime="20201112 12:42:05.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.595" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:42:05.594" endtime="20201112 12:42:05.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.598" level="INFO">VALUE: [3.9582999999999285e-05, 4.0833000000000536e-05, 3.901400000000041e-05, 3.956999999999919e-05, 3.9375000000001215e-05, 3.902799999999998e-05, 3.920799999999891e-05, 3.977800000000073e-05, 3.9333000000002505e-05, 3.9223000000001423e-05, 3.9277000000000756e-05, 3.9153000000000104e-05, 3.9776999999997786e-05, 3.9722999999998454e-05, 3.9777000000001256e-05, 3.9333000000002505e-05, 3.8889000000000284e-05, 3.970799999999941e-05, 3.9582999999999285e-05, 3.900000000000084e-05, 3.895799999999866e-05, 3.901400000000041e-05, 3.901400000000041e-05, 3.898600000000127e-05, 3.922200000000195e-05, 3.9068999999999215e-05, 3.926399999999719e-05, 3.944399999999959e-05, 3.9333000000002505e-05, 3.9181000000002714e-05, 3.9195000000002284e-05, 3.901400000000041e-05, 3.9625000000001465e-05, 4.097200000000023e-05, 3.976400000000116e-05, 3.9527000000001006e-05, 3.950000000000134e-05, 3.9444999999999064e-05, 3.931999999999894e-05, 4.088799999999934e-05, 3.900000000000084e-05, 3.9347000000002075e-05, 3.9153000000000104e-05, 3.977800000000073e-05, 3.9652999999997135e-05, 3.9375000000001215e-05, 3.975000000000159e-05, 3.902799999999998e-05, 3.970799999999941e-05, 3.9680999999999744e-05]</msg>
<status status="PASS" starttime="20201112 12:42:05.597" endtime="20201112 12:42:05.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.592" endtime="20201112 12:42:05.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.602" endtime="20201112 12:42:05.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.605" endtime="20201112 12:42:05.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.604" endtime="20201112 12:42:05.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.600" endtime="20201112 12:42:05.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.229" endtime="20201112 12:42:05.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.228" endtime="20201112 12:42:05.626"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.635" endtime="20201112 12:42:05.654"></status>
</kw>
<msg timestamp="20201112 12:42:05.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.634" endtime="20201112 12:42:05.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.655" endtime="20201112 12:42:05.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.658" endtime="20201112 12:42:05.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.631" endtime="20201112 12:42:05.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.629" endtime="20201112 12:42:05.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.668" endtime="20201112 12:42:05.955"></status>
</kw>
<msg timestamp="20201112 12:42:05.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020249028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.667" endtime="20201112 12:42:05.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020249028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.960" endtime="20201112 12:42:05.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.968" endtime="20201112 12:42:05.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.664" endtime="20201112 12:42:05.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.662" endtime="20201112 12:42:05.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.975" level="INFO">${RESULT} = [{'time': 0.020249028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0445000000000064e-05, 'source_diff': 4.0445000000000064e-05}, {'time': 0.020302, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:05.972" endtime="20201112 12:42:05.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:05.989" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:05.976" endtime="20201112 12:42:05.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.994" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:42:05.992" endtime="20201112 12:42:05.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.996" level="INFO">VALUE: [4.0445000000000064e-05, 3.9930999999999994e-05, 4.001399999999794e-05, 4.1902999999999385e-05, 4.0583000000000286e-05, 4.07920000000013e-05, 3.99859999999988e-05, 4.027800000000123e-05, 4.007000000000316e-05, 4.057000000000019e-05, 4.0055000000000646e-05, 4.006999999999969e-05, 4.1861000000000675e-05, 4.1875000000000245e-05, 4.180600000000187e-05, 4.063800000000256e-05, 4.0375000000002215e-05, 4.018000000000077e-05, 4.077799999999826e-05, 3.99859999999988e-05, 4.1902999999999385e-05, 3.995800000000313e-05, 4.070800000000041e-05, 4.024999999999862e-05, 4.030600000000037e-05, 4.02920000000008e-05, 4.1861000000000675e-05, 4.0526999999998536e-05, 4.0124999999998495e-05, 4.18059999999984e-05, 4.0653000000001605e-05, 4.0458999999999634e-05, 3.9917000000000424e-05, 4.054199999999758e-05, 4.1888999999999815e-05, 4.0389000000001785e-05, 4.1888999999999815e-05, 4.0596999999999855e-05, 4.1874999999996776e-05, 4.0375000000002215e-05, 4.182000000000144e-05, 4.192999999999905e-05, 4.0776999999998786e-05, 4.054200000000105e-05, 4.0583000000000286e-05, 4.04859999999993e-05, 4.0568999999997246e-05, 4.019400000000034e-05, 4.070799999999694e-05, 4.076399999999869e-05]</msg>
<status status="PASS" starttime="20201112 12:42:05.995" endtime="20201112 12:42:05.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.990" endtime="20201112 12:42:05.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.000" endtime="20201112 12:42:06.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.004" endtime="20201112 12:42:06.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.002" endtime="20201112 12:42:06.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.998" endtime="20201112 12:42:06.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.627" endtime="20201112 12:42:06.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.627" endtime="20201112 12:42:06.025"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.034" endtime="20201112 12:42:06.051"></status>
</kw>
<msg timestamp="20201112 12:42:06.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.032" endtime="20201112 12:42:06.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.053" endtime="20201112 12:42:06.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.056" endtime="20201112 12:42:06.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.029" endtime="20201112 12:42:06.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.027" endtime="20201112 12:42:06.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.066" endtime="20201112 12:42:06.353"></status>
</kw>
<msg timestamp="20201112 12:42:06.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.065" endtime="20201112 12:42:06.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020246167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.357" endtime="20201112 12:42:06.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.366" endtime="20201112 12:42:06.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.062" endtime="20201112 12:42:06.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.060" endtime="20201112 12:42:06.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.374" level="INFO">${RESULT} = [{'time': 0.020287486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1319000000001466e-05, 'source_diff': 4.1319000000001466e-05}, {'time': 0.020340458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:06.370" endtime="20201112 12:42:06.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:06.387" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:06.375" endtime="20201112 12:42:06.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.392" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:42:06.391" endtime="20201112 12:42:06.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.395" level="INFO">VALUE: [4.1319000000001466e-05, 4.126399999999919e-05, 4.143000000000202e-05, 4.1583000000001286e-05, 4.175000000000012e-05, 4.1069000000001216e-05, 4.126399999999919e-05, 4.1652999999999135e-05, 4.2903000000000385e-05, 4.277800000000026e-05, 4.105599999999765e-05, 4.1069000000001216e-05, 4.28059999999994e-05, 4.102799999999851e-05, 4.155599999999815e-05, 4.152799999999901e-05, 4.102799999999851e-05, 4.1124999999999495e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.1695000000001314e-05, 4.1709000000000884e-05, 4.101400000000241e-05, 4.094399999999762e-05, 4.1667000000002175e-05, 4.099999999999937e-05, 4.138799999999984e-05, 4.1361000000000175e-05, 4.094400000000109e-05, 4.126399999999919e-05, 4.144400000000159e-05, 4.2846999999998636e-05, 4.118000000000177e-05, 4.1680999999998275e-05, 4.120799999999744e-05, 4.14860000000003e-05, 4.1638999999999565e-05, 4.104199999999808e-05, 4.09859999999998e-05, 4.1181000000001244e-05, 4.1638999999999565e-05, 4.140199999999941e-05, 4.1624999999999995e-05, 4.1138999999999065e-05, 4.1222999999999954e-05, 4.133400000000051e-05, 4.1417000000001924e-05, 4.124999999999962e-05, 4.100000000000284e-05, 4.1624999999999995e-05]</msg>
<status status="PASS" starttime="20201112 12:42:06.394" endtime="20201112 12:42:06.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.388" endtime="20201112 12:42:06.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.399" endtime="20201112 12:42:06.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.403" endtime="20201112 12:42:06.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.402" endtime="20201112 12:42:06.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.397" endtime="20201112 12:42:06.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.025" endtime="20201112 12:42:06.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.025" endtime="20201112 12:42:06.425"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.435" endtime="20201112 12:42:06.453"></status>
</kw>
<msg timestamp="20201112 12:42:06.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.433" endtime="20201112 12:42:06.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.455" endtime="20201112 12:42:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.457" endtime="20201112 12:42:06.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.430" endtime="20201112 12:42:06.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.428" endtime="20201112 12:42:06.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.468" endtime="20201112 12:42:06.754"></status>
</kw>
<msg timestamp="20201112 12:42:06.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.466" endtime="20201112 12:42:06.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021618181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.758" endtime="20201112 12:42:06.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.767" endtime="20201112 12:42:06.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.464" endtime="20201112 12:42:06.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.462" endtime="20201112 12:42:06.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.774" level="INFO">${RESULT} = [{'time': 0.021660972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2791000000000357e-05, 'source_diff': 4.2791000000000357e-05}, {'time': 0.021713986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:06.770" endtime="20201112 12:42:06.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:06.787" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:06.775" endtime="20201112 12:42:06.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.792" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:42:06.791" endtime="20201112 12:42:06.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.795" level="INFO">VALUE: [4.2791000000000357e-05, 4.220800000000191e-05, 4.2124999999997026e-05, 4.2568999999999246e-05, 4.3875000000002246e-05, 4.277800000000026e-05, 4.2375000000000745e-05, 4.2680999999999275e-05, 4.222200000000148e-05, 4.226400000000019e-05, 4.28059999999994e-05, 4.381999999999997e-05, 4.2458999999998165e-05, 4.2139000000000065e-05, 4.201399999999994e-05, 4.38060000000004e-05, 4.2374999999997276e-05, 4.1958999999997665e-05, 4.1917000000002425e-05, 4.252800000000001e-05, 4.2582999999998816e-05, 4.2875000000001245e-05, 4.226400000000019e-05, 4.2582999999998816e-05, 4.243000000000302e-05, 4.3819000000000496e-05, 4.2040999999999606e-05, 4.194399999999862e-05, 4.2166999999999205e-05, 4.2624999999997526e-05, 4.252800000000001e-05, 4.277800000000026e-05, 4.195800000000166e-05, 4.2583000000002286e-05, 4.2389000000000315e-05, 4.2625000000000995e-05, 4.2319000000002466e-05, 4.3846999999999636e-05, 4.2209000000001384e-05, 4.227799999999976e-05, 4.200000000000037e-05, 4.19860000000008e-05, 4.2194999999998345e-05, 4.245799999999869e-05, 4.2111000000000925e-05, 4.2582999999998816e-05, 4.2125000000000495e-05, 4.194400000000209e-05, 4.2332999999998566e-05, 4.202799999999951e-05]</msg>
<status status="PASS" starttime="20201112 12:42:06.793" endtime="20201112 12:42:06.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.788" endtime="20201112 12:42:06.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.798" endtime="20201112 12:42:06.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.802" endtime="20201112 12:42:06.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.800" endtime="20201112 12:42:06.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.797" endtime="20201112 12:42:06.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.426" endtime="20201112 12:42:06.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.425" endtime="20201112 12:42:06.823"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.833" endtime="20201112 12:42:06.852"></status>
</kw>
<msg timestamp="20201112 12:42:06.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.831" endtime="20201112 12:42:06.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.854" endtime="20201112 12:42:06.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.856" endtime="20201112 12:42:06.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.828" endtime="20201112 12:42:06.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.826" endtime="20201112 12:42:06.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.867" endtime="20201112 12:42:07.153"></status>
</kw>
<msg timestamp="20201112 12:42:07.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.865" endtime="20201112 12:42:07.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021309194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.158" endtime="20201112 12:42:07.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.167" endtime="20201112 12:42:07.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.862" endtime="20201112 12:42:07.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.860" endtime="20201112 12:42:07.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.173" level="INFO">${RESULT} = [{'time': 0.021309194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3360999999998706e-05, 'source_diff': 4.3360999999998706e-05}, {'time': 0.021364208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:07.170" endtime="20201112 12:42:07.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:07.189" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:07.174" endtime="20201112 12:42:07.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.193" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:42:07.192" endtime="20201112 12:42:07.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.196" level="INFO">VALUE: [4.3360999999998706e-05, 4.340199999999794e-05, 4.352699999999807e-05, 4.3582999999999816e-05, 4.370799999999994e-05, 4.323599999999858e-05, 4.3374999999998276e-05, 4.3610999999998956e-05, 4.3431000000000025e-05, 4.295799999999919e-05, 4.3332999999999566e-05, 4.4888999999999346e-05, 4.344400000000012e-05, 4.319400000000334e-05, 4.354200000000058e-05, 4.295799999999919e-05, 4.2944999999999095e-05, 4.3389000000001315e-05, 4.3444999999999595e-05, 4.482000000000097e-05, 4.3709000000002884e-05, 4.374999999999865e-05, 4.356999999999972e-05, 4.375000000000212e-05, 4.325000000000162e-05, 4.305599999999965e-05, 4.3111000000001926e-05, 4.369400000000037e-05, 4.301400000000094e-05, 4.4847000000000636e-05, 4.3318999999999996e-05, 4.342999999999708e-05, 4.326400000000119e-05, 4.4903000000002385e-05, 4.4861000000000206e-05, 4.3611000000002426e-05, 4.294399999999962e-05, 4.370799999999994e-05, 4.319399999999987e-05, 4.3153000000000635e-05, 4.4916999999998486e-05, 4.3596999999999386e-05, 4.4847000000000636e-05, 4.33059999999999e-05, 4.482000000000097e-05, 4.3667000000000705e-05, 4.482000000000097e-05, 4.297200000000223e-05, 4.381999999999997e-05, 4.29999999999979e-05]</msg>
<status status="PASS" starttime="20201112 12:42:07.194" endtime="20201112 12:42:07.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.189" endtime="20201112 12:42:07.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.200" endtime="20201112 12:42:07.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.203" endtime="20201112 12:42:07.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.202" endtime="20201112 12:42:07.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.198" endtime="20201112 12:42:07.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.824" endtime="20201112 12:42:07.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.823" endtime="20201112 12:42:07.224"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.233" endtime="20201112 12:42:07.252"></status>
</kw>
<msg timestamp="20201112 12:42:07.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.232" endtime="20201112 12:42:07.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.254" endtime="20201112 12:42:07.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.256" endtime="20201112 12:42:07.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.229" endtime="20201112 12:42:07.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.227" endtime="20201112 12:42:07.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.267" endtime="20201112 12:42:07.553"></status>
</kw>
<msg timestamp="20201112 12:42:07.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.265" endtime="20201112 12:42:07.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.557" endtime="20201112 12:42:07.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.566" endtime="20201112 12:42:07.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.263" endtime="20201112 12:42:07.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.261" endtime="20201112 12:42:07.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.573" level="INFO">${RESULT} = [{'time': 0.020389319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.404099999999814e-05, 'source_diff': 4.404099999999814e-05}, {'time': 0.020445306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:07.570" endtime="20201112 12:42:07.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:07.587" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:07.574" endtime="20201112 12:42:07.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.592" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:42:07.591" endtime="20201112 12:42:07.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.594" level="INFO">VALUE: [4.404099999999814e-05, 4.4138999999998596e-05, 4.424999999999915e-05, 4.4195000000000345e-05, 4.4375000000002746e-05, 4.445800000000069e-05, 4.395800000000019e-05, 4.423599999999958e-05, 4.4667000000001705e-05, 4.4569000000001247e-05, 4.586099999999774e-05, 4.4152999999998166e-05, 4.4069000000000746e-05, 4.420800000000044e-05, 4.4138999999998596e-05, 4.479200000000183e-05, 4.476399999999922e-05, 4.456999999999725e-05, 4.3931000000000525e-05, 4.4667000000001705e-05, 4.4181000000000775e-05, 4.4374999999999276e-05, 4.4208999999999915e-05, 4.4445000000000595e-05, 4.404200000000108e-05, 4.474999999999965e-05, 4.416600000000173e-05, 4.400000000000237e-05, 4.581899999999903e-05, 4.4569000000001247e-05, 4.427800000000176e-05, 4.4569000000001247e-05, 4.476399999999922e-05, 4.469400000000137e-05, 4.470800000000094e-05, 4.472200000000051e-05, 4.5930999999999056e-05, 4.425000000000262e-05, 4.584699999999817e-05, 4.424999999999915e-05, 4.4444999999997126e-05, 4.4652999999998666e-05, 4.426399999999872e-05, 4.450000000000287e-05, 4.4125000000002496e-05, 4.4652999999998666e-05, 4.5861000000001206e-05, 4.477799999999879e-05, 4.469400000000137e-05, 4.594400000000262e-05]</msg>
<status status="PASS" starttime="20201112 12:42:07.593" endtime="20201112 12:42:07.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.588" endtime="20201112 12:42:07.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.598" endtime="20201112 12:42:07.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.602" endtime="20201112 12:42:07.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.600" endtime="20201112 12:42:07.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.596" endtime="20201112 12:42:07.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.225" endtime="20201112 12:42:07.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.224" endtime="20201112 12:42:07.623"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.632" endtime="20201112 12:42:07.650"></status>
</kw>
<msg timestamp="20201112 12:42:07.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.630" endtime="20201112 12:42:07.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.651" endtime="20201112 12:42:07.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.654" endtime="20201112 12:42:07.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.627" endtime="20201112 12:42:07.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.625" endtime="20201112 12:42:07.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.664" endtime="20201112 12:42:07.950"></status>
</kw>
<msg timestamp="20201112 12:42:07.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.663" endtime="20201112 12:42:07.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.954" endtime="20201112 12:42:07.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.963" endtime="20201112 12:42:07.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.660" endtime="20201112 12:42:07.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.658" endtime="20201112 12:42:07.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.970" level="INFO">${RESULT} = [{'time': 0.020233833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.516599999999926e-05, 'source_diff': 4.516599999999926e-05}, {'time': 0.020291847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:07.967" endtime="20201112 12:42:07.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:07.984" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:07.971" endtime="20201112 12:42:07.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.989" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:42:07.988" endtime="20201112 12:42:07.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.991" level="INFO">VALUE: [4.516599999999926e-05, 4.556899999999878e-05, 4.684699999999917e-05, 4.497200000000076e-05, 4.6889000000001346e-05, 4.494399999999815e-05, 4.530599999999843e-05, 4.5333000000001566e-05, 4.5319000000001997e-05, 4.559800000000086e-05, 4.683399999999907e-05, 4.557000000000172e-05, 4.49999999999999e-05, 4.5445000000001595e-05, 4.501399999999947e-05, 4.5430999999998556e-05, 4.6903000000000916e-05, 4.531899999999853e-05, 4.495800000000119e-05, 4.51800000000023e-05, 4.506899999999828e-05, 4.497200000000076e-05, 4.5375000000000276e-05, 4.5138999999999596e-05, 4.6875000000001776e-05, 4.51939999999984e-05, 4.5138999999999596e-05, 4.544399999999865e-05, 4.531899999999853e-05, 4.687499999999831e-05, 4.544399999999865e-05, 4.569400000000237e-05, 4.5209000000000915e-05, 4.502799999999904e-05, 4.5166999999998736e-05, 4.5139000000003066e-05, 4.5138999999999596e-05, 4.5652999999999666e-05, 4.5444999999998126e-05, 4.68199999999995e-05, 4.556999999999825e-05, 4.501399999999947e-05, 4.520800000000144e-05, 4.495799999999772e-05, 4.495799999999772e-05, 4.547199999999779e-05, 4.5639000000000096e-05, 4.579199999999936e-05, 4.58329999999986e-05, 4.68329999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:42:07.990" endtime="20201112 12:42:07.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.985" endtime="20201112 12:42:07.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.995" endtime="20201112 12:42:07.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.999" endtime="20201112 12:42:08.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.997" endtime="20201112 12:42:08.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.993" endtime="20201112 12:42:08.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.624" endtime="20201112 12:42:08.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.623" endtime="20201112 12:42:08.020"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.029" endtime="20201112 12:42:08.048"></status>
</kw>
<msg timestamp="20201112 12:42:08.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.027" endtime="20201112 12:42:08.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.049" endtime="20201112 12:42:08.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.052" endtime="20201112 12:42:08.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.024" endtime="20201112 12:42:08.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.022" endtime="20201112 12:42:08.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.062" endtime="20201112 12:42:08.348"></status>
</kw>
<msg timestamp="20201112 12:42:08.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.061" endtime="20201112 12:42:08.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.352" endtime="20201112 12:42:08.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.361" endtime="20201112 12:42:08.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.058" endtime="20201112 12:42:08.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.056" endtime="20201112 12:42:08.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:08.368" level="INFO">${RESULT} = [{'time': 0.020430028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.624999999999768e-05, 'source_diff': 4.624999999999768e-05}, {'time': 0.020490028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:08.365" endtime="20201112 12:42:08.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:08.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:08.369" endtime="20201112 12:42:08.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.387" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:42:08.386" endtime="20201112 12:42:08.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.389" level="INFO">VALUE: [4.624999999999768e-05, 4.658399999999882e-05, 4.601400000000047e-05, 4.6653000000000666e-05, 4.601400000000047e-05, 4.634800000000161e-05, 4.779199999999789e-05, 4.649999999999793e-05, 4.622199999999854e-05, 4.607000000000222e-05, 4.676400000000122e-05, 4.620800000000244e-05, 4.790199999999897e-05, 4.6139000000000596e-05, 4.648600000000183e-05, 4.655500000000021e-05, 4.61939999999994e-05, 4.626400000000072e-05, 4.598600000000133e-05, 4.788899999999888e-05, 4.666699999999677e-05, 4.638899999999738e-05, 4.788899999999888e-05, 4.608299999999885e-05, 4.656999999999925e-05, 4.601400000000047e-05, 4.659800000000186e-05, 4.6444999999999126e-05, 4.61939999999994e-05, 4.658399999999882e-05, 4.779199999999789e-05, 4.6694999999999376e-05, 4.6459000000002165e-05, 4.656899999999978e-05, 4.6125000000001026e-05, 4.594400000000262e-05, 4.6611000000001956e-05, 4.630499999999996e-05, 4.61939999999994e-05, 4.78330000000006e-05, 4.627800000000029e-05, 4.6125000000001026e-05, 4.676399999999775e-05, 4.6625000000001526e-05, 4.672199999999904e-05, 4.656899999999978e-05, 4.657000000000272e-05, 4.65000000000014e-05, 4.6097000000001886e-05, 4.6653000000000666e-05]</msg>
<status status="PASS" starttime="20201112 12:42:08.388" endtime="20201112 12:42:08.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.383" endtime="20201112 12:42:08.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.400" endtime="20201112 12:42:08.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.404" endtime="20201112 12:42:08.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.402" endtime="20201112 12:42:08.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.398" endtime="20201112 12:42:08.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.021" endtime="20201112 12:42:08.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.020" endtime="20201112 12:42:08.425"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.434" endtime="20201112 12:42:08.452"></status>
</kw>
<msg timestamp="20201112 12:42:08.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.432" endtime="20201112 12:42:08.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.453" endtime="20201112 12:42:08.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.456" endtime="20201112 12:42:08.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.429" endtime="20201112 12:42:08.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.427" endtime="20201112 12:42:08.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.466" endtime="20201112 12:42:08.753"></status>
</kw>
<msg timestamp="20201112 12:42:08.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.465" endtime="20201112 12:42:08.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020373528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.758" endtime="20201112 12:42:08.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.766" endtime="20201112 12:42:08.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.462" endtime="20201112 12:42:08.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.460" endtime="20201112 12:42:08.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:08.773" level="INFO">${RESULT} = [{'time': 0.020373528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.730599999999696e-05, 'source_diff': 4.730599999999696e-05}, {'time': 0.020434528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:08.770" endtime="20201112 12:42:08.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:08.788" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:08.774" endtime="20201112 12:42:08.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.793" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:42:08.792" endtime="20201112 12:42:08.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.796" level="INFO">VALUE: [4.730599999999696e-05, 4.7639000000002096e-05, 4.883400000000107e-05, 4.883400000000107e-05, 4.6958999999999196e-05, 4.755600000000068e-05, 4.734699999999967e-05, 4.88330000000016e-05, 4.7111000000002456e-05, 4.697199999999929e-05, 4.729100000000139e-05, 4.7403000000001416e-05, 4.743000000000108e-05, 4.702800000000104e-05, 4.762499999999906e-05, 4.720799999999997e-05, 4.7375000000002276e-05, 4.7430999999997087e-05, 4.884700000000117e-05, 4.702800000000104e-05, 4.888899999999988e-05, 4.7708999999999946e-05, 4.705600000000018e-05, 4.7708999999999946e-05, 4.780500000000146e-05, 4.888899999999988e-05, 4.745800000000022e-05, 4.7125000000002026e-05, 4.765200000000219e-05, 4.6931000000000056e-05, 4.73879999999989e-05, 4.7125000000002026e-05, 4.713899999999813e-05, 4.724999999999868e-05, 4.73330000000001e-05, 4.769399999999743e-05, 4.880499999999899e-05, 4.737499999999881e-05, 4.7153000000001166e-05, 4.888899999999988e-05, 4.737499999999881e-05, 4.737499999999881e-05, 4.757000000000025e-05, 4.709799999999889e-05, 4.7013999999998e-05, 4.7695000000000376e-05, 4.887500000000031e-05, 4.6972999999998766e-05, 4.736099999999924e-05, 4.888899999999988e-05]</msg>
<status status="PASS" starttime="20201112 12:42:08.794" endtime="20201112 12:42:08.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.789" endtime="20201112 12:42:08.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.799" endtime="20201112 12:42:08.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.803" endtime="20201112 12:42:08.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.801" endtime="20201112 12:42:08.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.798" endtime="20201112 12:42:08.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.425" endtime="20201112 12:42:08.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.425" endtime="20201112 12:42:08.824"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.833" endtime="20201112 12:42:08.852"></status>
</kw>
<msg timestamp="20201112 12:42:08.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.831" endtime="20201112 12:42:08.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.853" endtime="20201112 12:42:08.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.856" endtime="20201112 12:42:08.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.829" endtime="20201112 12:42:08.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.826" endtime="20201112 12:42:08.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.868" endtime="20201112 12:42:09.154"></status>
</kw>
<msg timestamp="20201112 12:42:09.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020225736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.866" endtime="20201112 12:42:09.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020225736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.158" endtime="20201112 12:42:09.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.167" endtime="20201112 12:42:09.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.863" endtime="20201112 12:42:09.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.861" endtime="20201112 12:42:09.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:09.174" level="INFO">${RESULT} = [{'time': 0.020225736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8417000000001986e-05, 'source_diff': 4.8417000000001986e-05}, {'time': 0.02028475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:09.170" endtime="20201112 12:42:09.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:09.187" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:09.175" endtime="20201112 12:42:09.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.192" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:42:09.191" endtime="20201112 12:42:09.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.195" level="INFO">VALUE: [4.8417000000001986e-05, 4.855600000000168e-05, 4.986099999999827e-05, 4.804200000000161e-05, 4.866699999999877e-05, 4.816699999999827e-05, 4.858400000000082e-05, 4.805600000000118e-05, 4.847199999999732e-05, 4.85139999999995e-05, 4.811099999999999e-05, 4.859800000000039e-05, 4.870800000000147e-05, 4.829099999999892e-05, 4.861199999999996e-05, 4.857000000000125e-05, 4.990300000000045e-05, 4.806900000000128e-05, 4.8431000000001556e-05, 4.861099999999702e-05, 4.831900000000153e-05, 4.858300000000135e-05, 4.984700000000217e-05, 4.829199999999839e-05, 4.813899999999913e-05, 4.858299999999788e-05, 4.837499999999981e-05, 4.805599999999771e-05, 4.8417000000001986e-05, 4.809799999999989e-05, 4.812499999999956e-05, 4.808400000000032e-05, 4.855599999999821e-05, 4.805600000000118e-05, 4.838899999999938e-05, 4.848600000000036e-05, 4.876399999999975e-05, 4.83330000000011e-05, 4.862500000000006e-05, 4.798599999999986e-05, 4.798599999999986e-05, 4.876399999999975e-05, 4.823600000000011e-05, 4.852799999999907e-05, 4.794400000000115e-05, 4.794399999999768e-05, 4.8695000000001376e-05, 4.988900000000088e-05, 4.870800000000147e-05, 4.802799999999857e-05]</msg>
<status status="PASS" starttime="20201112 12:42:09.193" endtime="20201112 12:42:09.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.188" endtime="20201112 12:42:09.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.198" endtime="20201112 12:42:09.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.202" endtime="20201112 12:42:09.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.200" endtime="20201112 12:42:09.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.197" endtime="20201112 12:42:09.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.825" endtime="20201112 12:42:09.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.824" endtime="20201112 12:42:09.223"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.232" endtime="20201112 12:42:09.251"></status>
</kw>
<msg timestamp="20201112 12:42:09.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.230" endtime="20201112 12:42:09.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.252" endtime="20201112 12:42:09.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.255" endtime="20201112 12:42:09.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.228" endtime="20201112 12:42:09.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.226" endtime="20201112 12:42:09.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.266" endtime="20201112 12:42:09.551"></status>
</kw>
<msg timestamp="20201112 12:42:09.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020263125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.264" endtime="20201112 12:42:09.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020263125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.555" endtime="20201112 12:42:09.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.564" endtime="20201112 12:42:09.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.261" endtime="20201112 12:42:09.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.259" endtime="20201112 12:42:09.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:09.571" level="INFO">${RESULT} = [{'time': 0.020312111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.898600000000086e-05, 'source_diff': 4.898600000000086e-05}, {'time': 0.020374153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:09.567" endtime="20201112 12:42:09.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:09.585" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:09.572" endtime="20201112 12:42:09.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.589" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:42:09.588" endtime="20201112 12:42:09.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.592" level="INFO">VALUE: [4.898600000000086e-05, 5.093100000000059e-05, 4.905599999999871e-05, 4.937500000000081e-05, 4.958400000000182e-05, 4.902799999999957e-05, 5.091700000000102e-05, 5.087499999999884e-05, 4.9320000000002e-05, 4.93339999999981e-05, 4.8959000000001196e-05, 4.918099999999884e-05, 5.083300000000013e-05, 4.936200000000071e-05, 4.904199999999914e-05, 5.08469999999997e-05, 4.931899999999906e-05, 4.938900000000038e-05, 5.080499999999752e-05, 4.920800000000197e-05, 4.920800000000197e-05, 4.940299999999995e-05, 4.933299999999863e-05, 4.9014e-05, 4.934700000000167e-05, 4.93469999999982e-05, 4.961100000000149e-05, 4.919399999999893e-05, 4.925000000000068e-05, 4.919499999999841e-05, 4.8959000000001196e-05, 4.905599999999871e-05, 4.933299999999863e-05, 5.087499999999884e-05, 4.963900000000063e-05, 4.941600000000004e-05, 4.936100000000124e-05, 4.909699999999795e-05, 4.892999999999911e-05, 4.976400000000075e-05, 4.920800000000197e-05, 4.9014e-05, 4.975000000000118e-05, 4.96940000000029e-05, 4.938900000000038e-05, 4.917999999999936e-05, 4.902799999999957e-05, 4.976400000000075e-05, 4.9473000000001266e-05, 4.934700000000167e-05]</msg>
<status status="PASS" starttime="20201112 12:42:09.590" endtime="20201112 12:42:09.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.585" endtime="20201112 12:42:09.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.596" endtime="20201112 12:42:09.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.599" endtime="20201112 12:42:09.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.598" endtime="20201112 12:42:09.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.594" endtime="20201112 12:42:09.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.224" endtime="20201112 12:42:09.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.223" endtime="20201112 12:42:09.620"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.629" endtime="20201112 12:42:09.647"></status>
</kw>
<msg timestamp="20201112 12:42:09.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.628" endtime="20201112 12:42:09.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.649" endtime="20201112 12:42:09.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.652" endtime="20201112 12:42:09.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.625" endtime="20201112 12:42:09.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.623" endtime="20201112 12:42:09.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.662" endtime="20201112 12:42:09.948"></status>
</kw>
<msg timestamp="20201112 12:42:09.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.661" endtime="20201112 12:42:09.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020241694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.952" endtime="20201112 12:42:09.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.961" endtime="20201112 12:42:09.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.658" endtime="20201112 12:42:09.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.656" endtime="20201112 12:42:09.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:09.968" level="INFO">${RESULT} = [{'time': 0.020291625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.993099999999959e-05, 'source_diff': 4.993099999999959e-05}, {'time': 0.020352639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:09.964" endtime="20201112 12:42:09.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:09.982" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:09.969" endtime="20201112 12:42:09.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.986" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:42:09.985" endtime="20201112 12:42:09.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.989" level="INFO">VALUE: [4.993099999999959e-05, 5.031999999999953e-05, 5.009799999999842e-05, 5.044499999999966e-05, 5.031999999999953e-05, 5.076399999999828e-05, 5.013900000000113e-05, 5.0445000000003126e-05, 5.044499999999966e-05, 5.001299999999806e-05, 5.025000000000168e-05, 5.002699999999763e-05, 5.015299999999723e-05, 5.186100000000027e-05, 4.994399999999968e-05, 5.041700000000052e-05, 5.051399999999803e-05, 4.999999999999796e-05, 5.073599999999914e-05, 5.019399999999993e-05, 4.998599999999839e-05, 5.074999999999871e-05, 5.040300000000095e-05, 5.000000000000143e-05, 5.048599999999889e-05, 4.990300000000045e-05, 5.01530000000007e-05, 5.019499999999941e-05, 5.0402000000001473e-05, 5.187499999999984e-05, 5.181900000000156e-05, 5.076399999999828e-05, 5.051299999999856e-05, 5.05270000000016e-05, 5.011100000000199e-05, 5.041600000000104e-05, 5.183300000000113e-05, 5.06530000000012e-05, 5.000000000000143e-05, 5.0320000000003e-05, 5.076400000000175e-05, 5.031900000000006e-05, 5.180499999999852e-05, 5.049999999999846e-05, 5.188899999999941e-05, 5.076400000000175e-05, 5.18470000000007e-05, 5.019499999999941e-05, 5.01530000000007e-05, 5.012499999999809e-05]</msg>
<status status="PASS" starttime="20201112 12:42:09.987" endtime="20201112 12:42:09.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.982" endtime="20201112 12:42:09.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.993" endtime="20201112 12:42:09.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.996" endtime="20201112 12:42:10.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.995" endtime="20201112 12:42:10.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.991" endtime="20201112 12:42:10.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.621" endtime="20201112 12:42:10.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.621" endtime="20201112 12:42:10.017"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.026" endtime="20201112 12:42:10.045"></status>
</kw>
<msg timestamp="20201112 12:42:10.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.025" endtime="20201112 12:42:10.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.047" endtime="20201112 12:42:10.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.049" endtime="20201112 12:42:10.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.022" endtime="20201112 12:42:10.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.020" endtime="20201112 12:42:10.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.060" endtime="20201112 12:42:10.347"></status>
</kw>
<msg timestamp="20201112 12:42:10.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.058" endtime="20201112 12:42:10.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.351" endtime="20201112 12:42:10.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.360" endtime="20201112 12:42:10.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.056" endtime="20201112 12:42:10.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.054" endtime="20201112 12:42:10.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:10.367" level="INFO">${RESULT} = [{'time': 0.020395806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.137499999999934e-05, 'source_diff': 5.137499999999934e-05}, {'time': 0.020458792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:10.363" endtime="20201112 12:42:10.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:10.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:10.368" endtime="20201112 12:42:10.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.386" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:42:10.385" endtime="20201112 12:42:10.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.389" level="INFO">VALUE: [5.137499999999934e-05, 5.168100000000134e-05, 5.094500000000016e-05, 5.109799999999942e-05, 5.109800000000289e-05, 5.141700000000152e-05, 5.158300000000088e-05, 5.124999999999921e-05, 5.099999999999896e-05, 5.137500000000281e-05, 5.281899999999909e-05, 5.109699999999995e-05, 5.156899999999784e-05, 5.144400000000118e-05, 5.118100000000084e-05, 5.091700000000102e-05, 5.144499999999719e-05, 5.169500000000091e-05, 5.141700000000152e-05, 5.170899999999701e-05, 5.14729999999998e-05, 5.108399999999985e-05, 5.144499999999719e-05, 5.122299999999955e-05, 5.15270000000026e-05, 5.131900000000106e-05, 5.105499999999777e-05, 5.112499999999909e-05, 5.290299999999998e-05, 5.173600000000014e-05, 5.106900000000081e-05, 5.126399999999878e-05, 5.152800000000207e-05, 5.138899999999891e-05, 5.144500000000066e-05, 5.140299999999848e-05, 5.161100000000002e-05, 5.126399999999878e-05, 5.123599999999964e-05, 5.163899999999916e-05, 5.126399999999878e-05, 5.124999999999921e-05, 5.144500000000066e-05, 5.170900000000048e-05, 5.16669999999983e-05, 5.119400000000093e-05, 5.290299999999998e-05, 5.1137999999999184e-05, 5.277700000000038e-05, 5.151399999999903e-05]</msg>
<status status="PASS" starttime="20201112 12:42:10.387" endtime="20201112 12:42:10.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.383" endtime="20201112 12:42:10.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.393" endtime="20201112 12:42:10.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.396" endtime="20201112 12:42:10.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.395" endtime="20201112 12:42:10.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.391" endtime="20201112 12:42:10.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.018" endtime="20201112 12:42:10.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.018" endtime="20201112 12:42:10.417"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.426" endtime="20201112 12:42:10.445"></status>
</kw>
<msg timestamp="20201112 12:42:10.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.425" endtime="20201112 12:42:10.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.447" endtime="20201112 12:42:10.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.450" endtime="20201112 12:42:10.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.422" endtime="20201112 12:42:10.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.420" endtime="20201112 12:42:10.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.460" endtime="20201112 12:42:10.747"></status>
</kw>
<msg timestamp="20201112 12:42:10.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.459" endtime="20201112 12:42:10.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.751" endtime="20201112 12:42:10.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.760" endtime="20201112 12:42:10.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.456" endtime="20201112 12:42:10.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.454" endtime="20201112 12:42:10.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:10.767" level="INFO">${RESULT} = [{'time': 0.020387125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.388899999999794e-05, 'source_diff': 5.388899999999794e-05}, {'time': 0.020453111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:10.763" endtime="20201112 12:42:10.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:10.781" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:10.768" endtime="20201112 12:42:10.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.785" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:42:10.784" endtime="20201112 12:42:10.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.788" level="INFO">VALUE: [5.388899999999794e-05, 5.388899999999794e-05, 5.381900000000009e-05, 5.381900000000009e-05, 5.197200000000082e-05, 5.272299999999758e-05, 5.265299999999973e-05, 5.213899999999966e-05, 5.238899999999991e-05, 5.244499999999819e-05, 5.255599999999874e-05, 5.212500000000009e-05, 5.2721999999998104e-05, 5.197200000000082e-05, 5.2707999999998534e-05, 5.277799999999985e-05, 5.250000000000046e-05, 5.2708000000002e-05, 5.2707999999998534e-05, 5.262500000000059e-05, 5.387499999999837e-05, 5.212500000000009e-05, 5.388900000000141e-05, 5.381900000000009e-05, 5.390299999999751e-05, 5.26669999999993e-05, 5.388900000000141e-05, 5.209800000000042e-05, 5.261099999999755e-05, 5.277799999999985e-05, 5.270899999999801e-05, 5.226399999999978e-05, 5.218100000000184e-05, 5.258299999999841e-05, 5.231899999999859e-05, 5.198600000000039e-05, 5.22080000000015e-05, 5.259700000000145e-05, 5.388900000000141e-05, 5.212500000000009e-05, 5.238899999999991e-05, 5.199999999999996e-05, 5.198600000000039e-05, 5.240299999999948e-05, 5.2193999999998464e-05, 5.388899999999794e-05, 5.201399999999953e-05, 5.280599999999899e-05, 5.205600000000171e-05, 5.195900000000073e-05]</msg>
<status status="PASS" starttime="20201112 12:42:10.786" endtime="20201112 12:42:10.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.781" endtime="20201112 12:42:10.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.792" endtime="20201112 12:42:10.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.795" endtime="20201112 12:42:10.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.794" endtime="20201112 12:42:10.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.790" endtime="20201112 12:42:10.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.418" endtime="20201112 12:42:10.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.418" endtime="20201112 12:42:10.816"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.825" endtime="20201112 12:42:10.844"></status>
</kw>
<msg timestamp="20201112 12:42:10.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.824" endtime="20201112 12:42:10.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.846" endtime="20201112 12:42:10.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.849" endtime="20201112 12:42:10.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.821" endtime="20201112 12:42:10.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.819" endtime="20201112 12:42:10.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.859" endtime="20201112 12:42:11.145"></status>
</kw>
<msg timestamp="20201112 12:42:11.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020385569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.857" endtime="20201112 12:42:11.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020330736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020385569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.150" endtime="20201112 12:42:11.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.158" endtime="20201112 12:42:11.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.855" endtime="20201112 12:42:11.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.853" endtime="20201112 12:42:11.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.165" level="INFO">${RESULT} = [{'time': 0.020385569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.483300000000066e-05, 'source_diff': 5.483300000000066e-05}, {'time': 0.020452597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:11.162" endtime="20201112 12:42:11.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:11.179" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:11.166" endtime="20201112 12:42:11.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.184" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:42:11.183" endtime="20201112 12:42:11.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.186" level="INFO">VALUE: [5.483300000000066e-05, 5.379100000000095e-05, 5.3652000000001254e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.3749999999998244e-05, 5.308299999999891e-05, 5.337500000000134e-05, 5.31669999999998e-05, 5.2957999999998784e-05, 5.301400000000053e-05, 5.359700000000245e-05, 5.3749999999998244e-05, 5.343099999999962e-05, 5.370899999999901e-05, 5.308400000000185e-05, 5.304199999999967e-05, 5.313900000000066e-05, 5.319400000000293e-05, 5.352700000000113e-05, 5.2943999999999214e-05, 5.325000000000121e-05, 5.351400000000103e-05, 5.3707999999999534e-05, 5.363900000000116e-05, 5.347200000000232e-05, 5.323600000000164e-05, 5.336100000000177e-05, 5.3179999999999894e-05, 5.363900000000116e-05, 5.297200000000182e-05, 5.312500000000109e-05, 5.363899999999769e-05, 5.304199999999967e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.2985999999997924e-05, 5.361200000000149e-05, 5.483300000000066e-05, 5.373700000000162e-05, 5.3443999999999714e-05, 5.3457999999999284e-05, 5.487499999999937e-05, 5.337500000000134e-05, 5.3443999999999714e-05, 5.33470000000022e-05, 5.491699999999808e-05, 5.331899999999959e-05, 5.2971999999998354e-05, 5.36670000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:42:11.185" endtime="20201112 12:42:11.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.180" endtime="20201112 12:42:11.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.190" endtime="20201112 12:42:11.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.194" endtime="20201112 12:42:11.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.192" endtime="20201112 12:42:11.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.189" endtime="20201112 12:42:11.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.817" endtime="20201112 12:42:11.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.816" endtime="20201112 12:42:11.215"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.224" endtime="20201112 12:42:11.242"></status>
</kw>
<msg timestamp="20201112 12:42:11.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.222" endtime="20201112 12:42:11.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.244" endtime="20201112 12:42:11.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.246" endtime="20201112 12:42:11.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.220" endtime="20201112 12:42:11.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.217" endtime="20201112 12:42:11.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.257" endtime="20201112 12:42:11.543"></status>
</kw>
<msg timestamp="20201112 12:42:11.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020306069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020360736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.255" endtime="20201112 12:42:11.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020306069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020360736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.547" endtime="20201112 12:42:11.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.556" endtime="20201112 12:42:11.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.253" endtime="20201112 12:42:11.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.251" endtime="20201112 12:42:11.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.563" level="INFO">${RESULT} = [{'time': 0.020360736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.46670000000013e-05, 'source_diff': 5.46670000000013e-05}, {'time': 0.020427722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:11.559" endtime="20201112 12:42:11.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:11.577" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:11.564" endtime="20201112 12:42:11.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.582" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:42:11.581" endtime="20201112 12:42:11.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.584" level="INFO">VALUE: [5.46670000000013e-05, 5.438899999999844e-05, 5.4694000000000964e-05, 5.398600000000239e-05, 5.433300000000016e-05, 5.3957999999999784e-05, 5.465299999999826e-05, 5.4013999999998064e-05, 5.413900000000166e-05, 5.4722000000000104e-05, 5.462500000000259e-05, 5.401400000000153e-05, 5.412499999999862e-05, 5.391699999999708e-05, 5.4527999999998134e-05, 5.3999999999998494e-05, 5.452699999999866e-05, 5.426400000000178e-05, 5.481899999999762e-05, 5.4652000000002254e-05, 5.3944000000000214e-05, 5.408299999999991e-05, 5.437499999999887e-05, 5.438900000000191e-05, 5.4277999999997883e-05, 5.405599999999677e-05, 5.4263999999998314e-05, 5.458399999999988e-05, 5.469500000000044e-05, 5.444500000000019e-05, 5.4291999999997453e-05, 5.390300000000098e-05, 5.39730000000023e-05, 5.4749999999999244e-05, 5.4458000000000284e-05, 5.58610000000008e-05, 5.393100000000012e-05, 5.438899999999844e-05, 5.5887999999996996e-05, 5.43470000000032e-05, 5.412500000000209e-05, 5.3971999999999354e-05, 5.4694000000000964e-05, 5.427800000000135e-05, 5.456900000000084e-05, 5.4416000000001574e-05, 5.4471999999999854e-05, 5.443100000000062e-05, 5.429200000000092e-05, 5.432000000000006e-05]</msg>
<status status="PASS" starttime="20201112 12:42:11.583" endtime="20201112 12:42:11.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.578" endtime="20201112 12:42:11.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.588" endtime="20201112 12:42:11.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.592" endtime="20201112 12:42:11.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.590" endtime="20201112 12:42:11.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.586" endtime="20201112 12:42:11.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.216" endtime="20201112 12:42:11.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.215" endtime="20201112 12:42:11.613"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.622" endtime="20201112 12:42:11.641"></status>
</kw>
<msg timestamp="20201112 12:42:11.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.620" endtime="20201112 12:42:11.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.643" endtime="20201112 12:42:11.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.645" endtime="20201112 12:42:11.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.617" endtime="20201112 12:42:11.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.615" endtime="20201112 12:42:11.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.656" endtime="20201112 12:42:11.942"></status>
</kw>
<msg timestamp="20201112 12:42:11.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.654" endtime="20201112 12:42:11.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.947" endtime="20201112 12:42:11.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.955" endtime="20201112 12:42:11.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.651" endtime="20201112 12:42:11.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.650" endtime="20201112 12:42:11.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.962" level="INFO">${RESULT} = [{'time': 0.020425833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.534700000000073e-05, 'source_diff': 5.534700000000073e-05}, {'time': 0.020494847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:11.959" endtime="20201112 12:42:11.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:11.977" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:11.963" endtime="20201112 12:42:11.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.982" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:42:11.981" endtime="20201112 12:42:11.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.985" level="INFO">VALUE: [5.534700000000073e-05, 5.537499999999987e-05, 5.5763999999999814e-05, 5.537499999999987e-05, 5.50549999999983e-05, 5.5208000000001034e-05, 5.554200000000217e-05, 5.543100000000162e-05, 5.4958000000000784e-05, 5.5499999999999994e-05, 5.508300000000091e-05, 5.513899999999919e-05, 5.5263999999999314e-05, 5.5513999999999564e-05, 5.687500000000137e-05, 5.487500000000284e-05, 5.5291999999998453e-05, 5.5638000000000215e-05, 5.5722000000001104e-05, 5.577699999999991e-05, 5.5679999999998925e-05, 5.683299999999919e-05, 5.5527999999999134e-05, 5.5027999999998634e-05, 5.516699999999833e-05, 5.4985999999999924e-05, 5.4999999999999494e-05, 5.515299999999876e-05, 5.5638000000000215e-05, 5.5472000000000854e-05, 5.683300000000266e-05, 5.518100000000137e-05, 5.505600000000124e-05, 5.53610000000003e-05, 5.570900000000101e-05, 5.684699999999876e-05, 5.5763999999999814e-05, 5.508300000000091e-05, 5.5457999999997815e-05, 5.683300000000266e-05, 5.4944000000001214e-05, 5.561100000000055e-05, 5.569500000000144e-05, 5.683299999999919e-05, 5.68610000000018e-05, 5.5263999999999314e-05, 5.5179999999998425e-05, 5.512499999999962e-05, 5.5499999999999994e-05, 5.569499999999797e-05]</msg>
<status status="PASS" starttime="20201112 12:42:11.983" endtime="20201112 12:42:11.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.978" endtime="20201112 12:42:11.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.989" endtime="20201112 12:42:11.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.992" endtime="20201112 12:42:12.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.991" endtime="20201112 12:42:12.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.987" endtime="20201112 12:42:12.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.614" endtime="20201112 12:42:12.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.613" endtime="20201112 12:42:12.013"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.022" endtime="20201112 12:42:12.043"></status>
</kw>
<msg timestamp="20201112 12:42:12.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.021" endtime="20201112 12:42:12.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.044" endtime="20201112 12:42:12.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.047" endtime="20201112 12:42:12.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.018" endtime="20201112 12:42:12.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.016" endtime="20201112 12:42:12.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.057" endtime="20201112 12:42:12.344"></status>
</kw>
<msg timestamp="20201112 12:42:12.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020428083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.056" endtime="20201112 12:42:12.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020428083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.348" endtime="20201112 12:42:12.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.357" endtime="20201112 12:42:12.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.053" endtime="20201112 12:42:12.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.051" endtime="20201112 12:42:12.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.364" level="INFO">${RESULT} = [{'time': 0.020485917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7833999999999663e-05, 'source_diff': 5.7833999999999663e-05}, {'time': 0.020555917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:12.360" endtime="20201112 12:42:12.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:12.377" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:12.365" endtime="20201112 12:42:12.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.382" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:42:12.381" endtime="20201112 12:42:12.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.385" level="INFO">VALUE: [5.7833999999999663e-05, 5.6277999999999884e-05, 5.6555999999999274e-05, 5.63749999999974e-05, 5.6500000000000994e-05, 5.658300000000241e-05, 5.6319999999998593e-05, 5.676300000000134e-05, 5.6708000000002534e-05, 5.6764000000000814e-05, 5.6764000000000814e-05, 5.638900000000044e-05, 5.6443999999999245e-05, 5.640300000000001e-05, 5.615299999999976e-05, 5.662500000000112e-05, 5.609700000000148e-05, 5.608400000000138e-05, 5.615299999999976e-05, 5.7791999999997484e-05, 5.666699999999983e-05, 5.680600000000299e-05, 5.647299999999786e-05, 5.622299999999761e-05, 5.7902000000002035e-05, 5.5971999999997885e-05, 5.613900000000019e-05, 5.6264000000000314e-05, 5.6165999999999855e-05, 5.6528000000000134e-05, 5.6763999999997344e-05, 5.6000000000000494e-05, 5.6222000000001604e-05, 5.604200000000267e-05, 5.6027999999999634e-05, 5.6764000000000814e-05, 5.5972000000001354e-05, 5.6221999999998135e-05, 5.615299999999976e-05, 5.6041999999999204e-05, 5.681899999999962e-05, 5.670899999999854e-05, 5.620899999999804e-05, 5.6763999999997344e-05, 5.6055999999998773e-05, 5.7887999999998996e-05, 5.5972000000001354e-05, 5.5986000000000924e-05, 5.6805999999999524e-05, 5.605500000000277e-05]</msg>
<status status="PASS" starttime="20201112 12:42:12.383" endtime="20201112 12:42:12.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.378" endtime="20201112 12:42:12.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.389" endtime="20201112 12:42:12.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.392" endtime="20201112 12:42:12.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.391" endtime="20201112 12:42:12.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.387" endtime="20201112 12:42:12.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.014" endtime="20201112 12:42:12.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.014" endtime="20201112 12:42:12.413"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.422" endtime="20201112 12:42:12.442"></status>
</kw>
<msg timestamp="20201112 12:42:12.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.421" endtime="20201112 12:42:12.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.443" endtime="20201112 12:42:12.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.446" endtime="20201112 12:42:12.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.418" endtime="20201112 12:42:12.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.416" endtime="20201112 12:42:12.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.457" endtime="20201112 12:42:12.742"></status>
</kw>
<msg timestamp="20201112 12:42:12.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020535889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.455" endtime="20201112 12:42:12.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020535889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.747" endtime="20201112 12:42:12.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.755" endtime="20201112 12:42:12.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.452" endtime="20201112 12:42:12.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.450" endtime="20201112 12:42:12.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.762" level="INFO">${RESULT} = [{'time': 0.020535889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.71809999999999e-05, 'source_diff': 5.71809999999999e-05}, {'time': 0.020606889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:12.759" endtime="20201112 12:42:12.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:12.776" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:12.763" endtime="20201112 12:42:12.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.781" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:42:12.780" endtime="20201112 12:42:12.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.783" level="INFO">VALUE: [5.71809999999999e-05, 5.7055999999999774e-05, 5.7055999999999774e-05, 5.7319999999999593e-05, 5.7583999999999413e-05, 5.713900000000119e-05, 5.7222000000002604e-05, 5.777699999999844e-05, 5.7430000000000675e-05, 5.7014000000001064e-05, 5.6943999999999745e-05, 5.7250000000001744e-05, 5.6985999999998455e-05, 5.6958000000002784e-05, 5.75550000000008e-05, 5.762499999999865e-05, 5.7708000000000065e-05, 5.708400000000238e-05, 5.737500000000187e-05, 5.715300000000076e-05, 5.7069999999999343e-05, 5.695899999999879e-05, 5.766700000000083e-05, 5.7416000000001105e-05, 5.693099999999965e-05, 5.6930000000000175e-05, 5.736200000000177e-05, 5.737500000000187e-05, 5.881900000000162e-05, 5.7749999999998775e-05, 5.893099999999818e-05, 5.7264000000001314e-05, 5.7763999999998344e-05, 5.883299999999772e-05, 5.7542000000000704e-05, 5.883300000000119e-05, 5.7055999999999774e-05, 5.7193999999999995e-05, 5.7791999999997484e-05, 5.7833999999999663e-05, 5.755499999999733e-05, 5.7749999999998775e-05, 5.7499999999998525e-05, 5.8820000000001094e-05, 5.713899999999772e-05, 5.712499999999815e-05, 5.7749999999998775e-05, 5.6986000000001924e-05, 5.883299999999772e-05, 5.7485999999998955e-05]</msg>
<status status="PASS" starttime="20201112 12:42:12.782" endtime="20201112 12:42:12.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.777" endtime="20201112 12:42:12.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.787" endtime="20201112 12:42:12.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.791" endtime="20201112 12:42:12.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.789" endtime="20201112 12:42:12.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.785" endtime="20201112 12:42:12.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.414" endtime="20201112 12:42:12.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.414" endtime="20201112 12:42:12.812"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.821" endtime="20201112 12:42:12.841"></status>
</kw>
<msg timestamp="20201112 12:42:12.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.819" endtime="20201112 12:42:12.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.843" endtime="20201112 12:42:12.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.845" endtime="20201112 12:42:12.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.816" endtime="20201112 12:42:12.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.814" endtime="20201112 12:42:12.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.856" endtime="20201112 12:42:13.142"></status>
</kw>
<msg timestamp="20201112 12:42:13.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.854" endtime="20201112 12:42:13.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020293694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.146" endtime="20201112 12:42:13.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.155" endtime="20201112 12:42:13.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.851" endtime="20201112 12:42:13.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.850" endtime="20201112 12:42:13.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.162" level="INFO">${RESULT} = [{'time': 0.020351931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.823699999999918e-05, 'source_diff': 5.823699999999918e-05}, {'time': 0.020421, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:13.158" endtime="20201112 12:42:13.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:13.175" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:13.163" endtime="20201112 12:42:13.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.180" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:42:13.179" endtime="20201112 12:42:13.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.183" level="INFO">VALUE: [5.823699999999918e-05, 5.8458000000000815e-05, 5.8235999999999705e-05, 5.8401999999999066e-05, 5.865299999999879e-05, 5.809700000000001e-05, 5.863899999999922e-05, 5.838899999999897e-05, 5.991700000000308e-05, 5.8707999999997595e-05, 5.8472000000000385e-05, 5.986099999999786e-05, 5.838899999999897e-05, 5.8499999999999525e-05, 5.847299999999986e-05, 5.986099999999786e-05, 5.8514000000002564e-05, 5.8249999999999275e-05, 5.866700000000183e-05, 5.8485999999999955e-05, 5.815299999999829e-05, 5.8805999999998054e-05, 5.98750000000009e-05, 5.984700000000176e-05, 5.8264000000002314e-05, 5.881900000000162e-05, 5.85550000000018e-05, 5.8457999999997345e-05, 5.8499999999999525e-05, 5.8514000000002564e-05, 5.990300000000004e-05, 5.8708000000001065e-05, 5.8320000000000594e-05, 5.8651999999999316e-05, 5.988900000000047e-05, 5.8499999999999525e-05, 5.820900000000004e-05, 5.8222000000000135e-05, 5.827699999999894e-05, 5.8041999999997734e-05, 5.8416000000002105e-05, 5.8472000000000385e-05, 5.8180000000001425e-05, 5.8763999999999345e-05, 5.85550000000018e-05, 5.8693999999998026e-05, 5.855499999999833e-05, 5.8443999999997776e-05, 5.8708000000001065e-05, 5.8235999999999705e-05]</msg>
<status status="PASS" starttime="20201112 12:42:13.181" endtime="20201112 12:42:13.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.176" endtime="20201112 12:42:13.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.186" endtime="20201112 12:42:13.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.190" endtime="20201112 12:42:13.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.188" endtime="20201112 12:42:13.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.185" endtime="20201112 12:42:13.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.813" endtime="20201112 12:42:13.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.812" endtime="20201112 12:42:13.211"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.220" endtime="20201112 12:42:13.240"></status>
</kw>
<msg timestamp="20201112 12:42:13.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.219" endtime="20201112 12:42:13.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.242" endtime="20201112 12:42:13.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.244" endtime="20201112 12:42:13.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.216" endtime="20201112 12:42:13.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.214" endtime="20201112 12:42:13.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.255" endtime="20201112 12:42:13.541"></status>
</kw>
<msg timestamp="20201112 12:42:13.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.253" endtime="20201112 12:42:13.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.545" endtime="20201112 12:42:13.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.553" endtime="20201112 12:42:13.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.251" endtime="20201112 12:42:13.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.249" endtime="20201112 12:42:13.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.561" level="INFO">${RESULT} = [{'time': 0.020291792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9194999999998e-05, 'source_diff': 5.9194999999998e-05}, {'time': 0.020363806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201112 12:42:13.557" endtime="20201112 12:42:13.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:13.576" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:13.562" endtime="20201112 12:42:13.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.581" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:42:13.580" endtime="20201112 12:42:13.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.583" level="INFO">VALUE: [5.9194999999998e-05, 5.940300000000301e-05, 5.9055999999998304e-05, 5.931899999999865e-05, 5.9735999999997735e-05, 6.083299999999972e-05, 5.9250000000000275e-05, 5.9263999999999845e-05, 5.9263999999999845e-05, 5.931899999999865e-05, 5.95689999999989e-05, 5.9527999999999665e-05, 5.934699999999779e-05, 6.0806000000000054e-05, 5.938899999999997e-05, 5.9749999999997305e-05, 5.9277999999999414e-05, 6.0819999999999624e-05, 5.970900000000154e-05, 5.8930000000002175e-05, 5.963900000000022e-05, 5.962500000000065e-05, 5.902699999999969e-05, 5.9514000000000095e-05, 5.913899999999972e-05, 5.9749999999997305e-05, 5.962499999999718e-05, 5.90550000000023e-05, 5.913899999999972e-05, 5.933300000000169e-05, 5.9500000000000525e-05, 6.084699999999929e-05, 5.90689999999984e-05, 5.9348000000000734e-05, 5.966699999999936e-05, 5.9027999999999164e-05, 5.9263999999999845e-05, 5.933300000000169e-05, 5.9250000000000275e-05, 5.902699999999969e-05, 5.944499999999825e-05, 5.958300000000194e-05, 5.912500000000015e-05, 5.9514000000000095e-05, 5.962500000000065e-05, 5.931899999999865e-05, 5.965299999999979e-05, 5.95689999999989e-05, 5.9527999999999665e-05, 5.9000000000000025e-05]</msg>
<status status="PASS" starttime="20201112 12:42:13.582" endtime="20201112 12:42:13.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.577" endtime="20201112 12:42:13.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.587" endtime="20201112 12:42:13.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.591" endtime="20201112 12:42:13.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.589" endtime="20201112 12:42:13.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.585" endtime="20201112 12:42:13.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.212" endtime="20201112 12:42:13.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.211" endtime="20201112 12:42:13.612"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.621" endtime="20201112 12:42:13.640"></status>
</kw>
<msg timestamp="20201112 12:42:13.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.619" endtime="20201112 12:42:13.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.642" endtime="20201112 12:42:13.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.645" endtime="20201112 12:42:13.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.616" endtime="20201112 12:42:13.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.614" endtime="20201112 12:42:13.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.655" endtime="20201112 12:42:13.942"></status>
</kw>
<msg timestamp="20201112 12:42:13.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.654" endtime="20201112 12:42:13.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020366625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.947" endtime="20201112 12:42:13.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.956" endtime="20201112 12:42:13.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.651" endtime="20201112 12:42:13.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.649" endtime="20201112 12:42:13.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.964" level="INFO">${RESULT} = [{'time': 0.020366625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181899999999768e-05, 'source_diff': 6.181899999999768e-05}, {'time': 0.020439653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:13.960" endtime="20201112 12:42:13.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:13.978" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:13.965" endtime="20201112 12:42:13.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.983" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:42:13.982" endtime="20201112 12:42:13.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.985" level="INFO">VALUE: [6.181899999999768e-05, 6.015300000000029e-05, 6.038900000000097e-05, 5.993099999999918e-05, 6.03750000000014e-05, 6.0179999999999956e-05, 6.043099999999968e-05, 6.184700000000029e-05, 6.0749999999998305e-05, 6.187499999999943e-05, 5.9957999999998846e-05, 6.0457999999999346e-05, 6.012500000000115e-05, 6.0000000000001025e-05, 6.040300000000054e-05, 6.0707999999999596e-05, 6.030500000000008e-05, 6.038900000000097e-05, 6.0471999999998916e-05, 6.048700000000143e-05, 6.023700000000118e-05, 6.180600000000105e-05, 5.997299999999789e-05, 6.0750000000001775e-05, 6.0415999999997166e-05, 6.012500000000115e-05, 6.0387999999998027e-05, 6.06949999999995e-05, 6.031899999999965e-05, 6.0000000000001025e-05, 6.036099999999836e-05, 6.0278000000000415e-05, 6.0014000000000595e-05, 6.180500000000158e-05, 6.033299999999922e-05, 6.058299999999947e-05, 6.0305999999999554e-05, 6.0305999999999554e-05, 6.044500000000272e-05, 6.011099999999811e-05, 6.047299999999839e-05, 6.013900000000072e-05, 6.0749999999998305e-05, 6.0305999999999554e-05, 6.022299999999814e-05, 6.077699999999797e-05, 6.0443999999999776e-05, 6.0471999999998916e-05, 6.190299999999857e-05, 6.180500000000158e-05]</msg>
<status status="PASS" starttime="20201112 12:42:13.984" endtime="20201112 12:42:13.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.979" endtime="20201112 12:42:13.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.989" endtime="20201112 12:42:13.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.993" endtime="20201112 12:42:14.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.991" endtime="20201112 12:42:14.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.987" endtime="20201112 12:42:14.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.613" endtime="20201112 12:42:14.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.612" endtime="20201112 12:42:14.014"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.023" endtime="20201112 12:42:14.042"></status>
</kw>
<msg timestamp="20201112 12:42:14.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.022" endtime="20201112 12:42:14.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.043" endtime="20201112 12:42:14.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.046" endtime="20201112 12:42:14.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.019" endtime="20201112 12:42:14.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.016" endtime="20201112 12:42:14.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.057" endtime="20201112 12:42:14.344"></status>
</kw>
<msg timestamp="20201112 12:42:14.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020461264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02052275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:14.055" endtime="20201112 12:42:14.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020461264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02052275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:14.348" endtime="20201112 12:42:14.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.357" endtime="20201112 12:42:14.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.052" endtime="20201112 12:42:14.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.051" endtime="20201112 12:42:14.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.364" level="INFO">${RESULT} = [{'time': 0.02052275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.148599999999949e-05, 'source_diff': 6.148599999999949e-05}, {'time': 0.02059675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:14.361" endtime="20201112 12:42:14.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:14.378" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.365" endtime="20201112 12:42:14.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.383" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:42:14.382" endtime="20201112 12:42:14.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.385" level="INFO">VALUE: [6.148599999999949e-05, 6.154200000000123e-05, 6.123599999999924e-05, 6.106999999999987e-05, 6.166700000000136e-05, 6.145899999999982e-05, 6.281999999999816e-05, 6.104199999999727e-05, 6.29020000000001e-05, 6.281899999999868e-05, 6.151300000000262e-05, 6.113899999999825e-05, 6.281899999999868e-05, 6.15140000000021e-05, 6.287500000000043e-05, 6.1014000000001595e-05, 6.10560000000003e-05, 6.13750000000024e-05, 6.10690000000004e-05, 6.161099999999961e-05, 6.163899999999875e-05, 6.163899999999875e-05, 6.109699999999954e-05, 6.140299999999807e-05, 6.132000000000012e-05, 6.177800000000191e-05, 6.286100000000086e-05, 6.13750000000024e-05, 6.281900000000215e-05, 6.12629999999989e-05, 6.108299999999997e-05, 6.284700000000129e-05, 6.1013999999998125e-05, 6.165299999999832e-05, 6.290299999999957e-05, 6.1195e-05, 6.108299999999997e-05, 6.172200000000017e-05, 6.165299999999832e-05, 6.284699999999782e-05, 6.106999999999987e-05, 6.163899999999875e-05, 6.094499999999975e-05, 6.172200000000017e-05, 6.286100000000086e-05, 6.172200000000017e-05, 6.279199999999902e-05, 6.104099999999779e-05, 6.113899999999825e-05, 6.137499999999893e-05]</msg>
<status status="PASS" starttime="20201112 12:42:14.384" endtime="20201112 12:42:14.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.379" endtime="20201112 12:42:14.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.389" endtime="20201112 12:42:14.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.393" endtime="20201112 12:42:14.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.391" endtime="20201112 12:42:14.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.387" endtime="20201112 12:42:14.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.015" endtime="20201112 12:42:14.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.014" endtime="20201112 12:42:14.414"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.423" endtime="20201112 12:42:14.442"></status>
</kw>
<msg timestamp="20201112 12:42:14.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.421" endtime="20201112 12:42:14.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.444" endtime="20201112 12:42:14.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.446" endtime="20201112 12:42:14.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.418" endtime="20201112 12:42:14.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.416" endtime="20201112 12:42:14.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.457" endtime="20201112 12:42:14.744"></status>
</kw>
<msg timestamp="20201112 12:42:14.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020452347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.455" endtime="20201112 12:42:14.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020452347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.748" endtime="20201112 12:42:14.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.757" endtime="20201112 12:42:14.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.452" endtime="20201112 12:42:14.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.451" endtime="20201112 12:42:14.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.764" level="INFO">${RESULT} = [{'time': 0.020452347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.211100000000011e-05, 'source_diff': 6.211100000000011e-05}, {'time': 0.020528361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:14.760" endtime="20201112 12:42:14.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:14.777" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.765" endtime="20201112 12:42:14.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.782" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:42:14.781" endtime="20201112 12:42:14.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.785" level="INFO">VALUE: [6.211100000000011e-05, 6.204199999999827e-05, 6.381899999999968e-05, 6.20140000000026e-05, 6.381899999999968e-05, 6.215299999999882e-05, 6.20279999999987e-05, 6.199999999999956e-05, 6.211100000000011e-05, 6.2582999999998e-05, 6.202800000000216e-05, 6.23889999999995e-05, 6.208400000000044e-05, 6.280600000000205e-05, 6.268099999999846e-05, 6.223600000000024e-05, 6.266700000000236e-05, 6.244500000000125e-05, 6.382000000000262e-05, 6.257000000000137e-05, 6.202699999999922e-05, 6.23889999999995e-05, 6.245799999999788e-05, 6.242999999999874e-05, 6.383299999999925e-05, 6.222200000000067e-05, 6.240299999999907e-05, 6.270799999999813e-05, 6.390300000000057e-05, 6.381899999999968e-05, 6.208400000000044e-05, 6.243099999999821e-05, 6.215299999999882e-05, 6.215300000000229e-05, 6.250000000000006e-05, 6.195900000000032e-05, 6.245799999999788e-05, 6.386199999999786e-05, 6.380500000000011e-05, 6.238800000000003e-05, 6.22080000000011e-05, 6.258300000000147e-05, 6.3889000000001e-05, 6.387500000000143e-05, 6.277799999999945e-05, 6.227799999999895e-05, 6.279199999999902e-05, 6.26950000000015e-05, 6.216699999999839e-05, 6.23340000000007e-05]</msg>
<status status="PASS" starttime="20201112 12:42:14.783" endtime="20201112 12:42:14.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.778" endtime="20201112 12:42:14.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.789" endtime="20201112 12:42:14.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.792" endtime="20201112 12:42:14.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.791" endtime="20201112 12:42:14.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.787" endtime="20201112 12:42:14.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.415" endtime="20201112 12:42:14.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.414" endtime="20201112 12:42:14.813"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.822" endtime="20201112 12:42:14.841"></status>
</kw>
<msg timestamp="20201112 12:42:14.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.821" endtime="20201112 12:42:14.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.843" endtime="20201112 12:42:14.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.845" endtime="20201112 12:42:14.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.818" endtime="20201112 12:42:14.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.816" endtime="20201112 12:42:14.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.856" endtime="20201112 12:42:15.142"></status>
</kw>
<msg timestamp="20201112 12:42:15.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.854" endtime="20201112 12:42:15.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.146" endtime="20201112 12:42:15.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.155" endtime="20201112 12:42:15.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.851" endtime="20201112 12:42:15.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.850" endtime="20201112 12:42:15.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.162" level="INFO">${RESULT} = [{'time': 0.020267444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.341600000000017e-05, 'source_diff': 6.341600000000017e-05}, {'time': 0.020343444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:15.158" endtime="20201112 12:42:15.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:15.177" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:15.163" endtime="20201112 12:42:15.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.181" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:42:15.180" endtime="20201112 12:42:15.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.184" level="INFO">VALUE: [6.341600000000017e-05, 6.29439999999988e-05, 6.356899999999943e-05, 6.362500000000118e-05, 6.313900000000025e-05, 6.354100000000029e-05, 6.320799999999863e-05, 6.481899999999721e-05, 6.356899999999943e-05, 6.331899999999918e-05, 6.345800000000235e-05, 6.333299999999875e-05, 6.294499999999828e-05, 6.297299999999742e-05, 6.38340000000022e-05, 6.294499999999828e-05, 6.377800000000045e-05, 6.374999999999784e-05, 6.4889000000002e-05, 6.350000000000106e-05, 6.320799999999863e-05, 6.49159999999982e-05, 6.347199999999845e-05, 6.333299999999875e-05, 6.37219999999987e-05, 6.295799999999838e-05, 6.334699999999832e-05, 6.362500000000118e-05, 6.37219999999987e-05, 6.312499999999721e-05, 6.365300000000032e-05, 6.326400000000038e-05, 6.30699999999984e-05, 6.480600000000059e-05, 6.297200000000142e-05, 6.34439999999993e-05, 6.376400000000088e-05, 6.370799999999913e-05, 6.30829999999985e-05, 6.35280000000002e-05, 6.306899999999893e-05, 6.295800000000185e-05, 6.317999999999949e-05, 6.351400000000063e-05, 6.295799999999838e-05, 6.305599999999884e-05, 6.337500000000093e-05, 6.483300000000025e-05, 6.307000000000187e-05, 6.482000000000016e-05]</msg>
<status status="PASS" starttime="20201112 12:42:15.182" endtime="20201112 12:42:15.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.178" endtime="20201112 12:42:15.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.188" endtime="20201112 12:42:15.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.191" endtime="20201112 12:42:15.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.190" endtime="20201112 12:42:15.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.186" endtime="20201112 12:42:15.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.814" endtime="20201112 12:42:15.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.813" endtime="20201112 12:42:15.212"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.221" endtime="20201112 12:42:15.240"></status>
</kw>
<msg timestamp="20201112 12:42:15.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.220" endtime="20201112 12:42:15.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.242" endtime="20201112 12:42:15.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.244" endtime="20201112 12:42:15.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.217" endtime="20201112 12:42:15.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.215" endtime="20201112 12:42:15.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.255" endtime="20201112 12:42:15.541"></status>
</kw>
<msg timestamp="20201112 12:42:15.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020200708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.253" endtime="20201112 12:42:15.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020200708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020264847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.545" endtime="20201112 12:42:15.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.554" endtime="20201112 12:42:15.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.251" endtime="20201112 12:42:15.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.249" endtime="20201112 12:42:15.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.561" level="INFO">${RESULT} = [{'time': 0.020264847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.413899999999778e-05, 'source_diff': 6.413899999999778e-05}, {'time': 0.020340861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:15.557" endtime="20201112 12:42:15.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:15.574" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:15.562" endtime="20201112 12:42:15.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.579" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:42:15.578" endtime="20201112 12:42:15.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.582" level="INFO">VALUE: [6.413899999999778e-05, 6.470799999999666e-05, 6.474999999999884e-05, 6.43890000000015e-05, 6.449999999999859e-05, 6.59029999999991e-05, 6.580599999999812e-05, 6.466700000000089e-05, 6.393099999999971e-05, 6.458399999999948e-05, 6.431999999999966e-05, 6.583400000000073e-05, 6.427800000000095e-05, 6.401300000000165e-05, 6.40829999999995e-05, 6.441600000000117e-05, 6.587499999999996e-05, 6.459699999999957e-05, 6.480500000000111e-05, 6.583300000000125e-05, 6.588899999999953e-05, 6.587499999999996e-05, 6.456900000000043e-05, 6.4583e-05, 6.436100000000236e-05, 6.463900000000175e-05, 6.426400000000138e-05, 6.479200000000102e-05, 6.466599999999795e-05, 6.451300000000215e-05, 6.47639999999984e-05, 6.477700000000197e-05, 6.418000000000049e-05, 6.4583e-05, 6.404200000000027e-05, 6.581899999999821e-05, 6.450000000000206e-05, 6.39439999999998e-05, 6.465299999999785e-05, 6.469400000000056e-05, 6.476400000000188e-05, 6.469500000000003e-05, 6.592999999999877e-05, 6.42500000000018e-05, 6.395900000000232e-05, 6.43479999999988e-05, 6.394499999999928e-05, 6.58480000000003e-05, 6.438899999999803e-05, 6.469500000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:42:15.580" endtime="20201112 12:42:15.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.575" endtime="20201112 12:42:15.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.586" endtime="20201112 12:42:15.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.589" endtime="20201112 12:42:15.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.588" endtime="20201112 12:42:15.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.584" endtime="20201112 12:42:15.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.213" endtime="20201112 12:42:15.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.213" endtime="20201112 12:42:15.610"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.619" endtime="20201112 12:42:15.639"></status>
</kw>
<msg timestamp="20201112 12:42:15.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.618" endtime="20201112 12:42:15.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.641" endtime="20201112 12:42:15.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.643" endtime="20201112 12:42:15.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.615" endtime="20201112 12:42:15.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.613" endtime="20201112 12:42:15.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.654" endtime="20201112 12:42:15.940"></status>
</kw>
<msg timestamp="20201112 12:42:15.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.652" endtime="20201112 12:42:15.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020198667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.945" endtime="20201112 12:42:15.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.953" endtime="20201112 12:42:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.650" endtime="20201112 12:42:15.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.648" endtime="20201112 12:42:15.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.960" level="INFO">${RESULT} = [{'time': 0.020263819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.515199999999888e-05, 'source_diff': 6.515199999999888e-05}, {'time': 0.020339833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:15.957" endtime="20201112 12:42:15.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:15.975" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:15.962" endtime="20201112 12:42:15.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.980" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:42:15.978" endtime="20201112 12:42:15.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.982" level="INFO">VALUE: [6.515199999999888e-05, 6.515200000000235e-05, 6.52639999999989e-05, 6.501400000000213e-05, 6.555499999999839e-05, 6.515299999999835e-05, 6.551399999999916e-05, 6.57639999999994e-05, 6.69030000000001e-05, 6.544500000000078e-05, 6.683399999999826e-05, 6.494499999999681e-05, 6.508399999999998e-05, 6.529199999999805e-05, 6.57639999999994e-05, 6.499999999999909e-05, 6.57359999999968e-05, 6.555599999999787e-05, 6.50830000000005e-05, 6.516600000000192e-05, 6.54440000000013e-05, 6.52500000000028e-05, 6.54029999999986e-05, 6.542999999999827e-05, 6.576400000000288e-05, 6.543100000000121e-05, 6.512499999999921e-05, 6.55700000000009e-05, 6.57639999999994e-05, 6.681999999999869e-05, 6.519500000000053e-05, 6.558400000000048e-05, 6.516600000000192e-05, 6.516599999999845e-05, 6.687500000000096e-05, 6.538899999999903e-05, 6.556899999999796e-05, 6.683299999999878e-05, 6.504099999999832e-05, 6.533300000000075e-05, 6.508299999999703e-05, 6.497199999999995e-05, 6.519400000000106e-05, 6.50830000000005e-05, 6.57639999999994e-05, 6.533400000000023e-05, 6.537499999999946e-05, 6.519500000000053e-05, 6.544500000000078e-05, 6.554099999999882e-05]</msg>
<status status="PASS" starttime="20201112 12:42:15.981" endtime="20201112 12:42:15.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.976" endtime="20201112 12:42:15.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.986" endtime="20201112 12:42:15.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.990" endtime="20201112 12:42:16.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.988" endtime="20201112 12:42:16.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.984" endtime="20201112 12:42:16.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.611" endtime="20201112 12:42:16.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.611" endtime="20201112 12:42:16.011"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.020" endtime="20201112 12:42:16.039"></status>
</kw>
<msg timestamp="20201112 12:42:16.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.018" endtime="20201112 12:42:16.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.041" endtime="20201112 12:42:16.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.043" endtime="20201112 12:42:16.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.015" endtime="20201112 12:42:16.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.013" endtime="20201112 12:42:16.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.054" endtime="20201112 12:42:16.340"></status>
</kw>
<msg timestamp="20201112 12:42:16.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.052" endtime="20201112 12:42:16.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020387528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.345" endtime="20201112 12:42:16.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.353" endtime="20201112 12:42:16.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.050" endtime="20201112 12:42:16.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.048" endtime="20201112 12:42:16.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.360" level="INFO">${RESULT} = [{'time': 0.020387528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.790299999999763e-05, 'source_diff': 6.790299999999763e-05}, {'time': 0.020464542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:16.357" endtime="20201112 12:42:16.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:16.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:16.361" endtime="20201112 12:42:16.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.379" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:42:16.378" endtime="20201112 12:42:16.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.381" level="INFO">VALUE: [6.790299999999763e-05, 6.645899999999788e-05, 6.618100000000196e-05, 6.788900000000153e-05, 6.634700000000132e-05, 6.656900000000243e-05, 6.619399999999859e-05, 6.631900000000218e-05, 6.605499999999889e-05, 6.606900000000193e-05, 6.679199999999955e-05, 6.656900000000243e-05, 6.615299999999935e-05, 6.650000000000059e-05, 6.600000000000009e-05, 6.615300000000282e-05, 6.631999999999819e-05, 6.605600000000184e-05, 6.613899999999978e-05, 6.666699999999942e-05, 6.636100000000089e-05, 6.631900000000218e-05, 6.594399999999834e-05, 6.665200000000038e-05, 6.601399999999966e-05, 6.608299999999803e-05, 6.612500000000021e-05, 6.642999999999927e-05, 6.652799999999973e-05, 6.602799999999923e-05, 6.60280000000027e-05, 6.658299999999853e-05, 6.620899999999763e-05, 6.65700000000019e-05, 6.680499999999964e-05, 6.680600000000259e-05, 6.665299999999985e-05, 6.630600000000209e-05, 6.649999999999712e-05, 6.676299999999746e-05, 6.600000000000009e-05, 6.637500000000046e-05, 6.661100000000114e-05, 6.677799999999998e-05, 6.638900000000003e-05, 6.601400000000313e-05, 6.67640000000004e-05, 6.675000000000084e-05, 6.681900000000268e-05, 6.622199999999773e-05]</msg>
<status status="PASS" starttime="20201112 12:42:16.380" endtime="20201112 12:42:16.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.375" endtime="20201112 12:42:16.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.385" endtime="20201112 12:42:16.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.389" endtime="20201112 12:42:16.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.387" endtime="20201112 12:42:16.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.383" endtime="20201112 12:42:16.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.012" endtime="20201112 12:42:16.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.011" endtime="20201112 12:42:16.410"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.419" endtime="20201112 12:42:16.438"></status>
</kw>
<msg timestamp="20201112 12:42:16.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.417" endtime="20201112 12:42:16.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.440" endtime="20201112 12:42:16.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.443" endtime="20201112 12:42:16.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.414" endtime="20201112 12:42:16.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.412" endtime="20201112 12:42:16.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.453" endtime="20201112 12:42:16.741"></status>
</kw>
<msg timestamp="20201112 12:42:16.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020510944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.452" endtime="20201112 12:42:16.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020510944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.745" endtime="20201112 12:42:16.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.753" endtime="20201112 12:42:16.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.449" endtime="20201112 12:42:16.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.447" endtime="20201112 12:42:16.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.760" level="INFO">${RESULT} = [{'time': 0.020578444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.750000000000159e-05, 'source_diff': 6.750000000000159e-05}, {'time': 0.020656458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:16.757" endtime="20201112 12:42:16.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:16.775" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:16.761" endtime="20201112 12:42:16.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.780" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:42:16.779" endtime="20201112 12:42:16.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.783" level="INFO">VALUE: [6.750000000000159e-05, 6.731899999999971e-05, 6.711099999999817e-05, 6.755500000000039e-05, 6.727800000000048e-05, 6.701400000000066e-05, 6.719400000000306e-05, 6.730500000000014e-05, 6.702800000000023e-05, 6.70830000000025e-05, 6.770799999999966e-05, 6.697300000000142e-05, 6.75420000000003e-05, 6.730599999999962e-05, 6.751399999999769e-05, 6.725000000000134e-05, 6.734699999999885e-05, 6.738800000000156e-05, 6.706999999999894e-05, 6.770799999999966e-05, 6.756899999999996e-05, 6.766699999999695e-05, 6.731899999999971e-05, 6.701400000000066e-05, 6.702800000000023e-05, 6.716699999999992e-05, 6.743000000000027e-05, 6.697199999999848e-05, 6.762500000000171e-05, 6.736099999999842e-05, 6.752800000000073e-05, 6.738900000000103e-05, 6.741700000000017e-05, 6.72229999999982e-05, 6.884700000000035e-05, 6.701400000000066e-05, 6.888799999999959e-05, 6.762500000000171e-05, 6.741700000000017e-05, 6.709700000000207e-05, 6.698599999999805e-05, 6.701400000000066e-05, 6.705599999999937e-05, 6.705599999999937e-05, 6.701400000000066e-05, 6.770800000000313e-05, 6.890299999999863e-05, 6.888899999999906e-05, 6.77909999999976e-05, 6.751399999999769e-05]</msg>
<status status="PASS" starttime="20201112 12:42:16.781" endtime="20201112 12:42:16.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.776" endtime="20201112 12:42:16.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.786" endtime="20201112 12:42:16.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.790" endtime="20201112 12:42:16.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.788" endtime="20201112 12:42:16.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.785" endtime="20201112 12:42:16.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.411" endtime="20201112 12:42:16.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.410" endtime="20201112 12:42:16.811"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.820" endtime="20201112 12:42:16.840"></status>
</kw>
<msg timestamp="20201112 12:42:16.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.818" endtime="20201112 12:42:16.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.842" endtime="20201112 12:42:16.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.844" endtime="20201112 12:42:16.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.816" endtime="20201112 12:42:16.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.813" endtime="20201112 12:42:16.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.855" endtime="20201112 12:42:17.141"></status>
</kw>
<msg timestamp="20201112 12:42:17.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020190986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.853" endtime="20201112 12:42:17.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020190986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.145" endtime="20201112 12:42:17.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.154" endtime="20201112 12:42:17.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.850" endtime="20201112 12:42:17.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.849" endtime="20201112 12:42:17.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.161" level="INFO">${RESULT} = [{'time': 0.020259528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.854199999999783e-05, 'source_diff': 6.854199999999783e-05}, {'time': 0.020338556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:17.157" endtime="20201112 12:42:17.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:17.175" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.162" endtime="20201112 12:42:17.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.179" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:42:17.178" endtime="20201112 12:42:17.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.182" level="INFO">VALUE: [6.854199999999783e-05, 6.87229999999997e-05, 6.80839999999995e-05, 6.801299999999871e-05, 6.865200000000238e-05, 6.793100000000024e-05, 6.838799999999909e-05, 6.797199999999948e-05, 6.84160000000017e-05, 6.818100000000049e-05, 6.812499999999874e-05, 6.806900000000046e-05, 6.801399999999819e-05, 6.876399999999894e-05, 6.983300000000178e-05, 6.816700000000092e-05, 6.849999999999912e-05, 6.850000000000259e-05, 6.865299999999838e-05, 6.870800000000066e-05, 6.851300000000268e-05, 6.852799999999826e-05, 6.988800000000059e-05, 6.834699999999985e-05, 6.879200000000155e-05, 6.811099999999917e-05, 6.813900000000178e-05, 6.863899999999881e-05, 6.818100000000049e-05, 6.838900000000203e-05, 6.794400000000034e-05, 6.870800000000066e-05, 6.822300000000267e-05, 6.852800000000173e-05, 6.791700000000067e-05, 6.87229999999997e-05, 6.838900000000203e-05, 6.876299999999946e-05, 6.8584e-05, 6.870800000000066e-05, 6.827799999999801e-05, 6.841599999999823e-05, 6.813900000000178e-05, 6.849999999999912e-05, 6.877799999999851e-05, 6.843000000000127e-05, 6.863899999999881e-05, 6.880599999999765e-05, 6.981900000000221e-05, 6.80420000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.180" endtime="20201112 12:42:17.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.176" endtime="20201112 12:42:17.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.186" endtime="20201112 12:42:17.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.189" endtime="20201112 12:42:17.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.188" endtime="20201112 12:42:17.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.184" endtime="20201112 12:42:17.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.812" endtime="20201112 12:42:17.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.811" endtime="20201112 12:42:17.210"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.219" endtime="20201112 12:42:17.239"></status>
</kw>
<msg timestamp="20201112 12:42:17.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.218" endtime="20201112 12:42:17.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.241" endtime="20201112 12:42:17.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.243" endtime="20201112 12:42:17.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.215" endtime="20201112 12:42:17.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.213" endtime="20201112 12:42:17.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.254" endtime="20201112 12:42:17.541"></status>
</kw>
<msg timestamp="20201112 12:42:17.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020210597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.252" endtime="20201112 12:42:17.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020210597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.545" endtime="20201112 12:42:17.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.553" endtime="20201112 12:42:17.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.249" endtime="20201112 12:42:17.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.247" endtime="20201112 12:42:17.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.560" level="INFO">${RESULT} = [{'time': 0.020280208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.961100000000067e-05, 'source_diff': 6.961100000000067e-05}, {'time': 0.020360194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:17.557" endtime="20201112 12:42:17.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:17.574" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.561" endtime="20201112 12:42:17.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.579" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:42:17.578" endtime="20201112 12:42:17.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.582" level="INFO">VALUE: [6.961100000000067e-05, 6.926299999999996e-05, 6.918000000000202e-05, 6.958299999999806e-05, 6.918099999999802e-05, 6.906900000000146e-05, 6.972200000000123e-05, 6.906900000000146e-05, 6.938899999999956e-05, 7.086099999999845e-05, 6.915300000000235e-05, 6.90420000000018e-05, 6.952799999999926e-05, 6.96109999999972e-05, 6.965299999999938e-05, 7.090200000000116e-05, 6.926399999999944e-05, 6.944500000000131e-05, 7.084699999999888e-05, 6.945800000000141e-05, 6.965299999999938e-05, 6.9584000000001e-05, 7.090300000000063e-05, 6.89299999999983e-05, 6.983400000000126e-05, 6.919399999999812e-05, 6.912499999999974e-05, 6.916700000000192e-05, 6.920899999999716e-05, 6.90970000000006e-05, 6.901399999999919e-05, 7.090200000000116e-05, 6.937499999999999e-05, 7.084700000000235e-05, 6.905600000000137e-05, 6.961100000000067e-05, 6.901399999999919e-05, 6.911100000000017e-05, 6.94169999999987e-05, 6.919400000000159e-05, 6.945800000000141e-05, 6.97360000000008e-05, 6.952799999999926e-05, 6.90420000000018e-05, 6.965299999999938e-05, 6.932000000000119e-05, 6.913899999999931e-05, 6.94299999999988e-05, 6.950000000000012e-05, 7.080599999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.580" endtime="20201112 12:42:17.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.575" endtime="20201112 12:42:17.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.585" endtime="20201112 12:42:17.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.589" endtime="20201112 12:42:17.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.587" endtime="20201112 12:42:17.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.584" endtime="20201112 12:42:17.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.211" endtime="20201112 12:42:17.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.211" endtime="20201112 12:42:17.610"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.619" endtime="20201112 12:42:17.639"></status>
</kw>
<msg timestamp="20201112 12:42:17.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.617" endtime="20201112 12:42:17.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.641" endtime="20201112 12:42:17.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.644" endtime="20201112 12:42:17.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.615" endtime="20201112 12:42:17.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.612" endtime="20201112 12:42:17.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.654" endtime="20201112 12:42:17.941"></status>
</kw>
<msg timestamp="20201112 12:42:17.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02037775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:17.652" endtime="20201112 12:42:17.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02037775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:17.945" endtime="20201112 12:42:17.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.954" endtime="20201112 12:42:17.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.650" endtime="20201112 12:42:17.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.648" endtime="20201112 12:42:17.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.961" level="INFO">${RESULT} = [{'time': 0.020447861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.011100000000117e-05, 'source_diff': 7.011100000000117e-05}, {'time': 0.020531875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:17.957" endtime="20201112 12:42:17.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:17.974" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.962" endtime="20201112 12:42:17.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.979" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:42:17.978" endtime="20201112 12:42:17.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.982" level="INFO">VALUE: [7.011100000000117e-05, 7.183300000000031e-05, 7.05689999999995e-05, 7.033400000000176e-05, 7.00970000000016e-05, 7.063900000000081e-05, 7.065299999999691e-05, 7.027800000000001e-05, 7.079200000000008e-05, 7.044499999999884e-05, 6.987500000000049e-05, 7.034700000000185e-05, 7.066600000000048e-05, 7.038799999999762e-05, 6.998600000000105e-05, 7.019399999999912e-05, 7.045799999999894e-05, 7.005499999999942e-05, 7.059699999999863e-05, 7.069399999999962e-05, 7.066699999999995e-05, 7.02499999999974e-05, 7.045899999999841e-05, 7.077800000000051e-05, 7.07360000000018e-05, 7.040200000000066e-05, 6.993099999999877e-05, 7.072199999999876e-05, 7.045799999999894e-05, 7.018099999999902e-05, 6.995799999999844e-05, 7.015299999999988e-05, 7.044399999999937e-05, 7.019399999999912e-05, 7.029200000000305e-05, 7.063900000000081e-05, 7.001400000000019e-05, 7.077800000000051e-05, 7.182000000000022e-05, 6.997299999999748e-05, 7.077700000000103e-05, 7.000000000000062e-05, 7.176399999999847e-05, 7.066600000000048e-05, 7.022299999999773e-05, 6.998600000000105e-05, 7.065199999999744e-05, 7.077800000000051e-05, 7.000000000000062e-05, 7.056900000000296e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.980" endtime="20201112 12:42:17.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.975" endtime="20201112 12:42:17.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.985" endtime="20201112 12:42:17.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.989" endtime="20201112 12:42:18.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.987" endtime="20201112 12:42:18.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.984" endtime="20201112 12:42:18.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.611" endtime="20201112 12:42:18.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.610" endtime="20201112 12:42:18.011"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.020" endtime="20201112 12:42:18.040"></status>
</kw>
<msg timestamp="20201112 12:42:18.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.018" endtime="20201112 12:42:18.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.041" endtime="20201112 12:42:18.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.044" endtime="20201112 12:42:18.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.015" endtime="20201112 12:42:18.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.013" endtime="20201112 12:42:18.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.054" endtime="20201112 12:42:18.339"></status>
</kw>
<msg timestamp="20201112 12:42:18.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020437486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020509042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.053" endtime="20201112 12:42:18.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020437486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020509042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.343" endtime="20201112 12:42:18.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.352" endtime="20201112 12:42:18.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.050" endtime="20201112 12:42:18.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.048" endtime="20201112 12:42:18.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.359" level="INFO">${RESULT} = [{'time': 0.020509042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.15560000000004e-05, 'source_diff': 7.15560000000004e-05}, {'time': 0.020591014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:18.355" endtime="20201112 12:42:18.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:18.374" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:18.360" endtime="20201112 12:42:18.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.378" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:42:18.377" endtime="20201112 12:42:18.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.381" level="INFO">VALUE: [7.15560000000004e-05, 7.120799999999969e-05, 7.112499999999827e-05, 7.137499999999852e-05, 7.115300000000088e-05, 7.120899999999916e-05, 7.102800000000076e-05, 7.162499999999877e-05, 7.129199999999711e-05, 7.140199999999819e-05, 7.100000000000162e-05, 7.1069e-05, 7.145799999999994e-05, 7.290300000000263e-05, 7.151400000000169e-05, 7.15690000000005e-05, 7.162500000000224e-05, 7.133299999999981e-05, 7.134699999999938e-05, 7.122199999999926e-05, 7.134700000000285e-05, 7.286100000000045e-05, 7.152800000000126e-05, 7.094499999999934e-05, 7.168100000000052e-05, 7.150000000000212e-05, 7.097199999999901e-05, 7.173599999999933e-05, 7.145799999999994e-05, 7.117999999999708e-05, 7.145799999999994e-05, 7.131900000000024e-05, 7.283300000000131e-05, 7.163899999999834e-05, 7.102800000000076e-05, 7.170899999999966e-05, 7.12499999999984e-05, 7.173599999999933e-05, 7.122199999999926e-05, 7.166600000000148e-05, 7.17910000000016e-05, 7.287500000000002e-05, 7.125000000000187e-05, 7.145799999999994e-05, 7.156899999999702e-05, 7.115300000000088e-05, 7.169400000000062e-05, 7.131900000000024e-05, 7.116700000000045e-05, 7.102799999999729e-05]</msg>
<status status="PASS" starttime="20201112 12:42:18.380" endtime="20201112 12:42:18.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.375" endtime="20201112 12:42:18.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.385" endtime="20201112 12:42:18.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.388" endtime="20201112 12:42:18.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.387" endtime="20201112 12:42:18.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.383" endtime="20201112 12:42:18.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.011" endtime="20201112 12:42:18.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.011" endtime="20201112 12:42:18.409"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.418" endtime="20201112 12:42:18.439"></status>
</kw>
<msg timestamp="20201112 12:42:18.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.417" endtime="20201112 12:42:18.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.440" endtime="20201112 12:42:18.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.443" endtime="20201112 12:42:18.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.414" endtime="20201112 12:42:18.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.412" endtime="20201112 12:42:18.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.453" endtime="20201112 12:42:18.741"></status>
</kw>
<msg timestamp="20201112 12:42:18.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020406236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:18.452" endtime="20201112 12:42:18.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020406236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:18.745" endtime="20201112 12:42:18.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.754" endtime="20201112 12:42:18.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.449" endtime="20201112 12:42:18.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.447" endtime="20201112 12:42:18.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.761" level="INFO">${RESULT} = [{'time': 0.020406236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.223599999999983e-05, 'source_diff': 7.223599999999983e-05}, {'time': 0.020492292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:18.757" endtime="20201112 12:42:18.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:18.774" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:18.762" endtime="20201112 12:42:18.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.779" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:42:18.778" endtime="20201112 12:42:18.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.782" level="INFO">VALUE: [7.223599999999983e-05, 7.230599999999768e-05, 7.204200000000133e-05, 7.240299999999866e-05, 7.201399999999872e-05, 7.251399999999922e-05, 7.276399999999947e-05, 7.220900000000016e-05, 7.245899999999694e-05, 7.381999999999875e-05, 7.381999999999875e-05, 7.197200000000001e-05, 7.28049999999987e-05, 7.279199999999861e-05, 7.263899999999934e-05, 7.227799999999854e-05, 7.387500000000102e-05, 7.27499999999999e-05, 7.218100000000102e-05, 7.383300000000231e-05, 7.227799999999854e-05, 7.230500000000167e-05, 7.195899999999991e-05, 7.213900000000231e-05, 7.258400000000054e-05, 7.240299999999866e-05, 7.245899999999694e-05, 7.269400000000162e-05, 7.387500000000102e-05, 7.388900000000059e-05, 7.206899999999752e-05, 7.24300000000018e-05, 7.265299999999891e-05, 7.22499999999994e-05, 7.234700000000038e-05, 7.24439999999979e-05, 7.209700000000013e-05, 7.265300000000238e-05, 7.268100000000152e-05, 7.266700000000195e-05, 7.213900000000231e-05, 7.388900000000059e-05, 7.381999999999875e-05, 7.258300000000106e-05, 7.21109999999997e-05, 7.229099999999863e-05, 7.25690000000015e-05, 7.19300000000013e-05, 7.209700000000013e-05, 7.186099999999945e-05]</msg>
<status status="PASS" starttime="20201112 12:42:18.780" endtime="20201112 12:42:18.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.775" endtime="20201112 12:42:18.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.818" endtime="20201112 12:42:18.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.821" endtime="20201112 12:42:18.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.820" endtime="20201112 12:42:18.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.816" endtime="20201112 12:42:18.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.410" endtime="20201112 12:42:18.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.410" endtime="20201112 12:42:18.842"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.852" endtime="20201112 12:42:18.871"></status>
</kw>
<msg timestamp="20201112 12:42:18.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.850" endtime="20201112 12:42:18.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.873" endtime="20201112 12:42:18.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.875" endtime="20201112 12:42:18.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.847" endtime="20201112 12:42:18.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.845" endtime="20201112 12:42:18.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.886" endtime="20201112 12:42:19.172"></status>
</kw>
<msg timestamp="20201112 12:42:19.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.884" endtime="20201112 12:42:19.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.177" endtime="20201112 12:42:19.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.185" endtime="20201112 12:42:19.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.882" endtime="20201112 12:42:19.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.880" endtime="20201112 12:42:19.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.192" level="INFO">${RESULT} = [{'time': 0.020436375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.300000000000015e-05, 'source_diff': 7.300000000000015e-05}, {'time': 0.020523361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:19.189" endtime="20201112 12:42:19.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:19.206" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.193" endtime="20201112 12:42:19.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.211" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:42:19.210" endtime="20201112 12:42:19.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.213" level="INFO">VALUE: [7.300000000000015e-05, 7.342999999999933e-05, 7.370800000000219e-05, 7.308300000000156e-05, 7.322199999999779e-05, 7.370900000000166e-05, 7.319499999999812e-05, 7.37370000000008e-05, 7.386099999999798e-05, 7.334699999999791e-05, 7.351400000000022e-05, 7.333299999999834e-05, 7.334700000000138e-05, 7.481900000000027e-05, 7.363900000000034e-05, 7.351400000000022e-05, 7.338900000000009e-05, 7.369500000000209e-05, 7.344400000000237e-05, 7.327799999999954e-05, 7.3069999999998e-05, 7.305599999999843e-05, 7.487500000000202e-05, 7.376400000000047e-05, 7.487499999999855e-05, 7.327700000000006e-05, 7.3069000000002e-05, 7.351400000000022e-05, 7.35690000000025e-05, 7.34300000000028e-05, 7.306899999999852e-05, 7.334699999999791e-05, 7.319400000000212e-05, 7.376400000000047e-05, 7.288899999999959e-05, 7.358399999999807e-05, 7.312500000000027e-05, 7.333400000000129e-05, 7.351400000000022e-05, 7.307000000000147e-05, 7.320799999999822e-05, 7.479100000000113e-05, 7.487499999999855e-05, 7.323600000000083e-05, 7.338900000000009e-05, 7.326399999999997e-05, 7.305500000000242e-05, 7.36249999999973e-05, 7.312500000000027e-05, 7.347200000000151e-05]</msg>
<status status="PASS" starttime="20201112 12:42:19.212" endtime="20201112 12:42:19.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.207" endtime="20201112 12:42:19.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.217" endtime="20201112 12:42:19.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.221" endtime="20201112 12:42:19.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.219" endtime="20201112 12:42:19.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.215" endtime="20201112 12:42:19.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.843" endtime="20201112 12:42:19.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.843" endtime="20201112 12:42:19.242"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.251" endtime="20201112 12:42:19.270"></status>
</kw>
<msg timestamp="20201112 12:42:19.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.249" endtime="20201112 12:42:19.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.272" endtime="20201112 12:42:19.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.274" endtime="20201112 12:42:19.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.246" endtime="20201112 12:42:19.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.244" endtime="20201112 12:42:19.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.285" endtime="20201112 12:42:19.572"></status>
</kw>
<msg timestamp="20201112 12:42:19.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020282167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.283" endtime="20201112 12:42:19.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020208208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020282167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.576" endtime="20201112 12:42:19.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.584" endtime="20201112 12:42:19.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.281" endtime="20201112 12:42:19.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.279" endtime="20201112 12:42:19.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.591" level="INFO">${RESULT} = [{'time': 0.020282167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.395900000000191e-05, 'source_diff': 7.395900000000191e-05}, {'time': 0.020369208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:19.588" endtime="20201112 12:42:19.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:19.605" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.592" endtime="20201112 12:42:19.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.610" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:42:19.609" endtime="20201112 12:42:19.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.613" level="INFO">VALUE: [7.395900000000191e-05, 7.429100000000063e-05, 7.391699999999973e-05, 7.47500000000019e-05, 7.46379999999984e-05, 7.427800000000054e-05, 7.443000000000033e-05, 7.445800000000294e-05, 7.413899999999737e-05, 7.397199999999854e-05, 7.386099999999798e-05, 7.431999999999925e-05, 7.450000000000165e-05, 7.422199999999879e-05, 7.452800000000079e-05, 7.420899999999869e-05, 7.583400000000032e-05, 7.477800000000104e-05, 7.420900000000216e-05, 7.406899999999952e-05, 7.441600000000076e-05, 7.474999999999843e-05, 7.392999999999983e-05, 7.587499999999955e-05, 7.409700000000213e-05, 7.423599999999836e-05, 7.445799999999947e-05, 7.430599999999968e-05, 7.456900000000002e-05, 7.477800000000104e-05, 7.448599999999861e-05, 7.431999999999925e-05, 7.438900000000109e-05, 7.402800000000029e-05, 7.584700000000041e-05, 7.401400000000072e-05, 7.469400000000015e-05, 7.441600000000076e-05, 7.477799999999757e-05, 7.455500000000045e-05, 7.588899999999912e-05, 7.40829999999991e-05, 7.426400000000097e-05, 7.466700000000048e-05, 7.480600000000018e-05, 7.438900000000109e-05, 7.440300000000066e-05, 7.415300000000041e-05, 7.42500000000014e-05, 7.452799999999732e-05]</msg>
<status status="PASS" starttime="20201112 12:42:19.611" endtime="20201112 12:42:19.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.606" endtime="20201112 12:42:19.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.616" endtime="20201112 12:42:19.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.620" endtime="20201112 12:42:19.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.618" endtime="20201112 12:42:19.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.615" endtime="20201112 12:42:19.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.243" endtime="20201112 12:42:19.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.242" endtime="20201112 12:42:19.641"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.650" endtime="20201112 12:42:19.669"></status>
</kw>
<msg timestamp="20201112 12:42:19.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.648" endtime="20201112 12:42:19.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.671" endtime="20201112 12:42:19.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.673" endtime="20201112 12:42:19.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.646" endtime="20201112 12:42:19.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.643" endtime="20201112 12:42:19.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.684" endtime="20201112 12:42:19.971"></status>
</kw>
<msg timestamp="20201112 12:42:19.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020375611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.682" endtime="20201112 12:42:19.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020375611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.975" endtime="20201112 12:42:19.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.983" endtime="20201112 12:42:19.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.680" endtime="20201112 12:42:19.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.678" endtime="20201112 12:42:19.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.991" level="INFO">${RESULT} = [{'time': 0.020375611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.552799999999832e-05, 'source_diff': 7.552799999999832e-05}, {'time': 0.020462597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:19.987" endtime="20201112 12:42:19.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.006" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.992" endtime="20201112 12:42:20.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.011" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.010" endtime="20201112 12:42:20.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.013" level="INFO">VALUE: [7.552799999999832e-05, 7.502799999999782e-05, 7.52500000000024e-05, 7.502799999999782e-05, 7.687500000000055e-05, 7.573599999999986e-05, 7.680600000000218e-05, 7.502800000000129e-05, 7.516700000000098e-05, 7.512500000000227e-05, 7.558400000000007e-05, 7.517999999999761e-05, 7.530599999999721e-05, 7.502700000000181e-05, 7.574999999999943e-05, 7.54440000000009e-05, 7.554099999999841e-05, 7.566599999999854e-05, 7.505599999999696e-05, 7.493000000000083e-05, 7.506900000000052e-05, 7.52639999999985e-05, 7.548599999999961e-05, 7.577800000000204e-05, 7.523599999999936e-05, 7.582000000000075e-05, 7.537499999999905e-05, 7.574999999999943e-05, 7.5763999999999e-05, 7.56249999999993e-05, 7.683300000000184e-05, 7.515300000000141e-05, 7.690300000000316e-05, 7.52500000000024e-05, 7.513899999999837e-05, 7.569399999999768e-05, 7.531900000000077e-05, 7.687500000000055e-05, 7.512500000000227e-05, 7.552799999999832e-05, 7.538899999999862e-05, 7.683400000000132e-05, 7.519500000000012e-05, 7.559799999999964e-05, 7.554099999999841e-05, 7.570799999999725e-05, 7.505500000000095e-05, 7.56249999999993e-05, 7.501399999999825e-05, 7.519399999999718e-05]</msg>
<status status="PASS" starttime="20201112 12:42:20.012" endtime="20201112 12:42:20.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.007" endtime="20201112 12:42:20.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.017" endtime="20201112 12:42:20.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.021" endtime="20201112 12:42:20.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.019" endtime="20201112 12:42:20.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.015" endtime="20201112 12:42:20.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.642" endtime="20201112 12:42:20.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.641" endtime="20201112 12:42:20.042"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.051" endtime="20201112 12:42:20.071"></status>
</kw>
<msg timestamp="20201112 12:42:20.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.050" endtime="20201112 12:42:20.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.072" endtime="20201112 12:42:20.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.075" endtime="20201112 12:42:20.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.047" endtime="20201112 12:42:20.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.045" endtime="20201112 12:42:20.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.085" endtime="20201112 12:42:20.372"></status>
</kw>
<msg timestamp="20201112 12:42:20.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.084" endtime="20201112 12:42:20.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.376" endtime="20201112 12:42:20.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.384" endtime="20201112 12:42:20.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.081" endtime="20201112 12:42:20.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.079" endtime="20201112 12:42:20.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.391" level="INFO">${RESULT} = [{'time': 0.020464347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.672200000000129e-05, 'source_diff': 7.672200000000129e-05}, {'time': 0.020552347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:20.388" endtime="20201112 12:42:20.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.405" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:20.392" endtime="20201112 12:42:20.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.410" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.409" endtime="20201112 12:42:20.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.413" level="INFO">VALUE: [7.672200000000129e-05, 7.661099999999726e-05, 7.65830000000016e-05, 7.780500000000024e-05, 7.654199999999889e-05, 7.6764e-05, 7.637500000000005e-05, 7.670900000000119e-05, 7.606999999999753e-05, 7.780599999999971e-05, 7.65839999999976e-05, 7.60830000000011e-05, 7.604199999999839e-05, 7.656899999999855e-05, 7.601400000000272e-05, 7.598600000000011e-05, 7.672199999999782e-05, 7.620799999999775e-05, 7.663899999999987e-05, 7.672199999999782e-05, 7.592999999999836e-05, 7.672200000000129e-05, 7.633300000000134e-05, 7.65839999999976e-05, 7.66250000000003e-05, 7.616699999999851e-05, 7.640199999999972e-05, 7.606900000000152e-05, 7.594500000000087e-05, 7.791600000000079e-05, 7.674999999999696e-05, 7.616599999999904e-05, 7.780500000000024e-05, 7.622200000000079e-05, 7.613899999999937e-05, 7.597200000000054e-05, 7.616699999999851e-05, 7.780599999999971e-05, 7.636100000000048e-05, 7.666700000000248e-05, 7.66250000000003e-05, 7.613900000000284e-05, 7.672300000000076e-05, 7.781999999999928e-05, 7.651300000000028e-05, 7.591599999999879e-05, 7.652799999999932e-05, 7.633299999999787e-05, 7.638899999999962e-05, 7.78189999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:42:20.411" endtime="20201112 12:42:20.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.406" endtime="20201112 12:42:20.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.416" endtime="20201112 12:42:20.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.420" endtime="20201112 12:42:20.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.418" endtime="20201112 12:42:20.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.415" endtime="20201112 12:42:20.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.043" endtime="20201112 12:42:20.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.043" endtime="20201112 12:42:20.441"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.450" endtime="20201112 12:42:20.470"></status>
</kw>
<msg timestamp="20201112 12:42:20.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.448" endtime="20201112 12:42:20.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.471" endtime="20201112 12:42:20.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.474" endtime="20201112 12:42:20.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.446" endtime="20201112 12:42:20.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.444" endtime="20201112 12:42:20.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.484" endtime="20201112 12:42:20.770"></status>
</kw>
<msg timestamp="20201112 12:42:20.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020294153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020371653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.483" endtime="20201112 12:42:20.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020294153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020371653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.774" endtime="20201112 12:42:20.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.783" endtime="20201112 12:42:20.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.480" endtime="20201112 12:42:20.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.478" endtime="20201112 12:42:20.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.790" level="INFO">${RESULT} = [{'time': 0.020371653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000118e-05, 'source_diff': 7.750000000000118e-05}, {'time': 0.020462736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:20.786" endtime="20201112 12:42:20.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.804" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:20.791" endtime="20201112 12:42:20.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.808" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.807" endtime="20201112 12:42:20.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.811" level="INFO">VALUE: [7.750000000000118e-05, 7.77779999999971e-05, 7.77229999999983e-05, 7.697300000000101e-05, 7.770799999999925e-05, 7.755499999999999e-05, 7.752699999999738e-05, 7.705499999999949e-05, 7.887500000000255e-05, 7.744399999999943e-05, 7.770799999999925e-05, 7.713900000000037e-05, 7.770800000000272e-05, 7.722200000000179e-05, 7.701400000000025e-05, 7.884799999999942e-05, 7.756999999999903e-05, 7.713900000000037e-05, 7.740200000000072e-05, 7.773599999999839e-05, 7.737499999999758e-05, 7.702799999999982e-05, 7.738899999999715e-05, 7.731900000000277e-05, 7.706899999999905e-05, 7.756900000000302e-05, 7.691699999999926e-05, 7.76250000000013e-05, 7.766700000000001e-05, 7.741699999999976e-05, 7.763900000000087e-05, 7.765300000000044e-05, 7.888900000000212e-05, 7.736100000000148e-05, 7.736099999999801e-05, 7.70830000000021e-05, 7.712499999999733e-05, 7.706899999999905e-05, 7.766700000000001e-05, 7.72640000000005e-05, 7.73189999999993e-05, 7.755499999999999e-05, 7.737500000000105e-05, 7.715299999999994e-05, 7.772199999999882e-05, 7.697200000000154e-05, 7.695899999999797e-05, 7.887499999999908e-05, 7.730599999999921e-05, 7.708400000000157e-05]</msg>
<status status="PASS" starttime="20201112 12:42:20.810" endtime="20201112 12:42:20.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.805" endtime="20201112 12:42:20.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.815" endtime="20201112 12:42:20.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.818" endtime="20201112 12:42:20.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.817" endtime="20201112 12:42:20.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.813" endtime="20201112 12:42:20.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.442" endtime="20201112 12:42:20.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.441" endtime="20201112 12:42:20.839"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.848" endtime="20201112 12:42:20.869"></status>
</kw>
<msg timestamp="20201112 12:42:20.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.847" endtime="20201112 12:42:20.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.870" endtime="20201112 12:42:20.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.873" endtime="20201112 12:42:20.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.844" endtime="20201112 12:42:20.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.842" endtime="20201112 12:42:20.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.883" endtime="20201112 12:42:21.170"></status>
</kw>
<msg timestamp="20201112 12:42:21.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020446208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.882" endtime="20201112 12:42:21.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020367472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020446208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.175" endtime="20201112 12:42:21.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.183" endtime="20201112 12:42:21.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.879" endtime="20201112 12:42:21.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.877" endtime="20201112 12:42:21.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.190" level="INFO">${RESULT} = [{'time': 0.020446208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.873599999999939e-05, 'source_diff': 7.873599999999939e-05}, {'time': 0.020536167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:21.187" endtime="20201112 12:42:21.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.204" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:21.191" endtime="20201112 12:42:21.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.209" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.208" endtime="20201112 12:42:21.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.211" level="INFO">VALUE: [7.873599999999939e-05, 7.863900000000187e-05, 7.874999999999896e-05, 7.8151999999998e-05, 7.847199999999957e-05, 7.825000000000193e-05, 7.82770000000016e-05, 7.99169999999988e-05, 7.8458e-05, 7.801400000000125e-05, 7.819400000000018e-05, 7.819400000000018e-05, 7.876299999999906e-05, 7.801400000000125e-05, 7.815300000000094e-05, 7.876399999999853e-05, 7.843100000000033e-05, 7.833399999999935e-05, 7.869500000000015e-05, 7.875000000000243e-05, 7.988899999999965e-05, 7.87779999999981e-05, 7.801400000000125e-05, 7.990299999999922e-05, 7.834700000000291e-05, 7.806900000000006e-05, 7.798599999999864e-05, 7.82779999999976e-05, 7.834800000000239e-05, 7.800000000000168e-05, 7.993000000000236e-05, 7.99169999999988e-05, 7.847200000000304e-05, 7.820799999999975e-05, 7.865300000000144e-05, 7.85969999999997e-05, 7.984700000000094e-05, 7.824999999999846e-05, 7.829200000000064e-05, 7.838899999999815e-05, 7.797199999999907e-05, 7.799999999999821e-05, 7.869400000000068e-05, 7.990299999999922e-05, 7.8764000000002e-05, 7.84449999999999e-05, 7.849999999999871e-05, 7.845899999999947e-05, 7.875000000000243e-05, 7.868000000000111e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.210" endtime="20201112 12:42:21.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.205" endtime="20201112 12:42:21.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.215" endtime="20201112 12:42:21.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.219" endtime="20201112 12:42:21.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.217" endtime="20201112 12:42:21.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.213" endtime="20201112 12:42:21.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.840" endtime="20201112 12:42:21.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.840" endtime="20201112 12:42:21.240"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.249" endtime="20201112 12:42:21.269"></status>
</kw>
<msg timestamp="20201112 12:42:21.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.247" endtime="20201112 12:42:21.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.271" endtime="20201112 12:42:21.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.273" endtime="20201112 12:42:21.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.244" endtime="20201112 12:42:21.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.242" endtime="20201112 12:42:21.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.284" endtime="20201112 12:42:21.570"></status>
</kw>
<msg timestamp="20201112 12:42:21.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020439958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02051925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:21.282" endtime="20201112 12:42:21.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020439958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02051925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:21.574" endtime="20201112 12:42:21.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.582" endtime="20201112 12:42:21.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.279" endtime="20201112 12:42:21.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.278" endtime="20201112 12:42:21.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.589" level="INFO">${RESULT} = [{'time': 0.02051925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929199999999817e-05, 'source_diff': 7.929199999999817e-05}, {'time': 0.02061225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:21.586" endtime="20201112 12:42:21.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.604" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:21.591" endtime="20201112 12:42:21.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.609" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.608" endtime="20201112 12:42:21.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.612" level="INFO">VALUE: [7.929199999999817e-05, 7.902799999999835e-05, 7.933300000000088e-05, 7.907000000000053e-05, 7.902799999999835e-05, 8.084799999999795e-05, 7.912499999999933e-05, 7.957000000000103e-05, 7.938899999999915e-05, 8.087500000000108e-05, 7.944400000000143e-05, 7.944400000000143e-05, 7.9151999999999e-05, 7.947200000000057e-05, 7.956900000000156e-05, 7.96389999999994e-05, 7.980600000000171e-05, 7.968100000000158e-05, 7.954200000000189e-05, 7.920900000000022e-05, 7.934799999999992e-05, 7.970799999999778e-05, 7.919500000000065e-05, 8.092999999999989e-05, 7.91389999999989e-05, 7.973600000000039e-05, 7.938900000000262e-05, 7.951399999999928e-05, 7.965299999999897e-05, 7.926399999999903e-05, 7.958300000000113e-05, 7.9458000000001e-05, 7.927800000000207e-05, 7.963900000000287e-05, 7.952800000000232e-05, 8.090300000000022e-05, 7.898599999999964e-05, 7.969500000000115e-05, 7.9151999999999e-05, 7.926299999999956e-05, 7.906900000000106e-05, 7.919400000000118e-05, 7.934700000000044e-05, 7.945799999999753e-05, 7.902800000000182e-05, 7.980600000000171e-05, 7.943100000000133e-05, 8.095799999999903e-05, 7.905599999999749e-05, 7.918100000000108e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.610" endtime="20201112 12:42:21.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.605" endtime="20201112 12:42:21.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.616" endtime="20201112 12:42:21.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.619" endtime="20201112 12:42:21.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.617" endtime="20201112 12:42:21.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.614" endtime="20201112 12:42:21.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.241" endtime="20201112 12:42:21.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.240" endtime="20201112 12:42:21.640"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.649" endtime="20201112 12:42:21.669"></status>
</kw>
<msg timestamp="20201112 12:42:21.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.648" endtime="20201112 12:42:21.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.671" endtime="20201112 12:42:21.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.673" endtime="20201112 12:42:21.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.645" endtime="20201112 12:42:21.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.643" endtime="20201112 12:42:21.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.684" endtime="20201112 12:42:21.970"></status>
</kw>
<msg timestamp="20201112 12:42:21.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.682" endtime="20201112 12:42:21.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.975" endtime="20201112 12:42:21.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.983" endtime="20201112 12:42:21.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.680" endtime="20201112 12:42:21.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.678" endtime="20201112 12:42:21.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.990" level="INFO">${RESULT} = [{'time': 0.020404931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.011200000000024e-05, 'source_diff': 8.011200000000024e-05}, {'time': 0.020497944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:21.987" endtime="20201112 12:42:21.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.004" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:21.991" endtime="20201112 12:42:22.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.009" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.008" endtime="20201112 12:42:22.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.012" level="INFO">VALUE: [8.011200000000024e-05, 8.18329999999999e-05, 8.190200000000175e-05, 8.191699999999733e-05, 8.02779999999996e-05, 8.056900000000256e-05, 8.051400000000028e-05, 8.079199999999967e-05, 8.076399999999706e-05, 8.05840000000016e-05, 8.004199999999892e-05, 8.040299999999972e-05, 8.02779999999996e-05, 8.057000000000203e-05, 8.027700000000013e-05, 8.051400000000028e-05, 7.998700000000011e-05, 8.055499999999952e-05, 8.075000000000096e-05, 8.005499999999902e-05, 8.01389999999999e-05, 8.023599999999742e-05, 8.18329999999999e-05, 8.02779999999996e-05, 8.069500000000215e-05, 8.00970000000012e-05, 8.188900000000165e-05, 8.015299999999947e-05, 8.044499999999843e-05, 8.080499999999977e-05, 8.030599999999874e-05, 8.029199999999917e-05, 8.188899999999819e-05, 8.040299999999972e-05, 7.992999999999889e-05, 7.997200000000107e-05, 8.049999999999724e-05, 8.188900000000165e-05, 8.07780000000001e-05, 8.036200000000049e-05, 8.045799999999853e-05, 8.04450000000019e-05, 8.072299999999782e-05, 8.024999999999699e-05, 8.052799999999985e-05, 7.994400000000193e-05, 8.016599999999957e-05, 8.002699999999988e-05, 8.038900000000015e-05, 7.995799999999803e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.010" endtime="20201112 12:42:22.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.005" endtime="20201112 12:42:22.013"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.015" endtime="20201112 12:42:22.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.019" endtime="20201112 12:42:22.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.017" endtime="20201112 12:42:22.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.014" endtime="20201112 12:42:22.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.641" endtime="20201112 12:42:22.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.641" endtime="20201112 12:42:22.040"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.049" endtime="20201112 12:42:22.070"></status>
</kw>
<msg timestamp="20201112 12:42:22.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.047" endtime="20201112 12:42:22.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.071" endtime="20201112 12:42:22.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.074" endtime="20201112 12:42:22.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.045" endtime="20201112 12:42:22.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.042" endtime="20201112 12:42:22.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.085" endtime="20201112 12:42:22.370"></status>
</kw>
<msg timestamp="20201112 12:42:22.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020723028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020804514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.083" endtime="20201112 12:42:22.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020723028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020804514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.374" endtime="20201112 12:42:22.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.382" endtime="20201112 12:42:22.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.080" endtime="20201112 12:42:22.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.078" endtime="20201112 12:42:22.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.389" level="INFO">${RESULT} = [{'time': 0.020804514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.148599999999867e-05, 'source_diff': 8.148599999999867e-05}, {'time': 0.020896514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:22.386" endtime="20201112 12:42:22.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.403" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:22.391" endtime="20201112 12:42:22.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.408" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.407" endtime="20201112 12:42:22.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.411" level="INFO">VALUE: [8.148599999999867e-05, 8.09580000000025e-05, 8.162499999999837e-05, 8.151399999999781e-05, 8.155500000000052e-05, 8.131999999999931e-05, 8.122199999999885e-05, 8.144399999999996e-05, 8.15130000000018e-05, 8.126399999999756e-05, 8.094399999999946e-05, 8.108300000000263e-05, 8.168100000000011e-05, 8.144399999999996e-05, 8.108300000000263e-05, 8.13329999999994e-05, 8.144499999999943e-05, 8.097300000000154e-05, 8.118000000000014e-05, 8.133400000000235e-05, 8.163899999999794e-05, 8.106899999999959e-05, 8.284700000000048e-05, 8.11390000000009e-05, 8.134699999999898e-05, 8.163899999999794e-05, 8.119399999999971e-05, 8.134699999999898e-05, 8.168100000000011e-05, 8.131999999999931e-05, 8.108399999999863e-05, 8.162500000000183e-05, 8.126399999999756e-05, 8.144499999999943e-05, 8.094499999999893e-05, 8.158299999999966e-05, 8.138799999999821e-05, 8.162500000000183e-05, 8.126400000000103e-05, 8.154200000000042e-05, 8.118000000000014e-05, 8.115300000000047e-05, 8.176400000000153e-05, 8.126400000000103e-05, 8.102800000000035e-05, 8.169400000000021e-05, 8.126400000000103e-05, 8.158299999999966e-05, 8.136099999999855e-05, 8.15269999999979e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.409" endtime="20201112 12:42:22.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.404" endtime="20201112 12:42:22.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.414" endtime="20201112 12:42:22.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.418" endtime="20201112 12:42:22.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.416" endtime="20201112 12:42:22.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.413" endtime="20201112 12:42:22.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.041" endtime="20201112 12:42:22.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.040" endtime="20201112 12:42:22.439"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.448" endtime="20201112 12:42:22.469"></status>
</kw>
<msg timestamp="20201112 12:42:22.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.447" endtime="20201112 12:42:22.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.470" endtime="20201112 12:42:22.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.473" endtime="20201112 12:42:22.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.444" endtime="20201112 12:42:22.476"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.442" endtime="20201112 12:42:22.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.483" endtime="20201112 12:42:22.770"></status>
</kw>
<msg timestamp="20201112 12:42:22.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.482" endtime="20201112 12:42:22.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.774" endtime="20201112 12:42:22.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.782" endtime="20201112 12:42:22.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.479" endtime="20201112 12:42:22.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.477" endtime="20201112 12:42:22.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.789" level="INFO">${RESULT} = [{'time': 0.020454181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.226399999999856e-05, 'source_diff': 8.226399999999856e-05}, {'time': 0.020548181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:22.786" endtime="20201112 12:42:22.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.803" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:22.790" endtime="20201112 12:42:22.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.808" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.807" endtime="20201112 12:42:22.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.811" level="INFO">VALUE: [8.226399999999856e-05, 8.201399999999831e-05, 8.195900000000297e-05, 8.201399999999831e-05, 8.237499999999912e-05, 8.21390000000019e-05, 8.381900000000234e-05, 8.262499999999937e-05, 8.22780000000016e-05, 8.226399999999856e-05, 8.269500000000068e-05, 8.251399999999881e-05, 8.19719999999996e-05, 8.243100000000086e-05, 8.211100000000277e-05, 8.212500000000234e-05, 8.245800000000053e-05, 8.256899999999762e-05, 8.261200000000274e-05, 8.219400000000071e-05, 8.209699999999973e-05, 8.269399999999774e-05, 8.258300000000066e-05, 8.274999999999949e-05, 8.21390000000019e-05, 8.395799999999856e-05, 8.25979999999997e-05, 8.377799999999963e-05, 8.279200000000167e-05, 8.276399999999906e-05, 8.238899999999869e-05, 8.26109999999998e-05, 8.19719999999996e-05, 8.262499999999937e-05, 8.199999999999874e-05, 8.259699999999676e-05, 8.22910000000017e-05, 8.215300000000147e-05, 8.218100000000061e-05, 8.38049999999993e-05, 8.266700000000154e-05, 8.193100000000036e-05, 8.390299999999976e-05, 8.280600000000124e-05, 8.21390000000019e-05, 8.234799999999945e-05, 8.256899999999762e-05, 8.386199999999705e-05, 8.201400000000178e-05, 8.252700000000238e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.809" endtime="20201112 12:42:22.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.804" endtime="20201112 12:42:22.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.814" endtime="20201112 12:42:22.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.818" endtime="20201112 12:42:22.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.816" endtime="20201112 12:42:22.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.813" endtime="20201112 12:42:22.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.440" endtime="20201112 12:42:22.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.440" endtime="20201112 12:42:22.839"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.848" endtime="20201112 12:42:22.869"></status>
</kw>
<msg timestamp="20201112 12:42:22.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.846" endtime="20201112 12:42:22.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.870" endtime="20201112 12:42:22.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.873" endtime="20201112 12:42:22.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.844" endtime="20201112 12:42:22.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.842" endtime="20201112 12:42:22.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.883" endtime="20201112 12:42:23.171"></status>
</kw>
<msg timestamp="20201112 12:42:23.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020440611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.882" endtime="20201112 12:42:23.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020440611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020523764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.175" endtime="20201112 12:42:23.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.183" endtime="20201112 12:42:23.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.879" endtime="20201112 12:42:23.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.877" endtime="20201112 12:42:23.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.190" level="INFO">${RESULT} = [{'time': 0.020523764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.3152999999999e-05, 'source_diff': 8.3152999999999e-05}, {'time': 0.020619764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201112 12:42:23.187" endtime="20201112 12:42:23.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.205" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.191" endtime="20201112 12:42:23.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.210" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.209" endtime="20201112 12:42:23.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.213" level="INFO">VALUE: [8.3152999999999e-05, 8.331999999999784e-05, 8.320799999999781e-05, 8.324999999999999e-05, 8.376400000000006e-05, 8.351399999999981e-05, 8.299999999999974e-05, 8.29309999999979e-05, 8.324999999999999e-05, 8.490300000000076e-05, 8.363899999999994e-05, 8.340199999999978e-05, 8.370800000000178e-05, 8.484700000000248e-05, 8.301399999999931e-05, 8.288899999999919e-05, 8.294500000000093e-05, 8.486199999999805e-05, 8.308400000000063e-05, 8.324999999999999e-05, 8.338899999999969e-05, 8.305599999999802e-05, 8.344500000000143e-05, 8.370800000000178e-05, 8.376400000000006e-05, 8.308300000000116e-05, 8.329200000000217e-05, 8.306899999999812e-05, 8.315300000000247e-05, 8.488899999999772e-05, 8.295799999999756e-05, 8.355600000000199e-05, 8.487499999999815e-05, 8.301399999999931e-05, 8.483400000000238e-05, 8.362500000000037e-05, 8.332000000000131e-05, 8.369399999999874e-05, 8.304200000000192e-05, 8.302800000000235e-05, 8.488899999999772e-05, 8.33330000000014e-05, 8.331999999999784e-05, 8.363899999999994e-05, 8.31390000000029e-05, 8.363899999999994e-05, 8.375000000000049e-05, 8.488900000000119e-05, 8.294399999999799e-05, 8.373600000000092e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.211" endtime="20201112 12:42:23.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.206" endtime="20201112 12:42:23.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.216" endtime="20201112 12:42:23.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.220" endtime="20201112 12:42:23.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.218" endtime="20201112 12:42:23.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.215" endtime="20201112 12:42:23.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.840" endtime="20201112 12:42:23.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.839" endtime="20201112 12:42:23.241"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.250" endtime="20201112 12:42:23.270"></status>
</kw>
<msg timestamp="20201112 12:42:23.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.249" endtime="20201112 12:42:23.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.272" endtime="20201112 12:42:23.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.274" endtime="20201112 12:42:23.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.246" endtime="20201112 12:42:23.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.244" endtime="20201112 12:42:23.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.285" endtime="20201112 12:42:23.572"></status>
</kw>
<msg timestamp="20201112 12:42:23.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020424333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.283" endtime="20201112 12:42:23.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020339903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020424333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.576" endtime="20201112 12:42:23.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.585" endtime="20201112 12:42:23.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.281" endtime="20201112 12:42:23.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.279" endtime="20201112 12:42:23.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.592" level="INFO">${RESULT} = [{'time': 0.020424333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.442999999999992e-05, 'source_diff': 8.442999999999992e-05}, {'time': 0.020521333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:23.588" endtime="20201112 12:42:23.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.605" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.593" endtime="20201112 12:42:23.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.610" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.609" endtime="20201112 12:42:23.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.613" level="INFO">VALUE: [8.442999999999992e-05, 8.580499999999783e-05, 8.46530000000005e-05, 8.462500000000137e-05, 8.426400000000056e-05, 8.451399999999734e-05, 8.438900000000069e-05, 8.419399999999924e-05, 8.437499999999765e-05, 8.4153e-05, 8.390299999999976e-05, 8.400000000000074e-05, 8.583399999999991e-05, 8.408299999999869e-05, 8.46660000000006e-05, 8.408299999999869e-05, 8.423600000000142e-05, 8.440300000000026e-05, 8.444399999999949e-05, 8.398600000000117e-05, 8.468099999999965e-05, 8.437500000000112e-05, 8.455599999999952e-05, 8.4153e-05, 8.412500000000087e-05, 8.427800000000013e-05, 8.583399999999991e-05, 8.401400000000031e-05, 8.583300000000044e-05, 8.588899999999872e-05, 8.408299999999869e-05, 8.586099999999958e-05, 8.430599999999927e-05, 8.442999999999992e-05, 8.456899999999962e-05, 8.413900000000044e-05, 8.472199999999888e-05, 8.437500000000112e-05, 8.420900000000175e-05, 8.408400000000163e-05, 8.463899999999747e-05, 8.448700000000114e-05, 8.408300000000216e-05, 8.427700000000066e-05, 8.424999999999752e-05, 8.41110000000013e-05, 8.476399999999759e-05, 8.469399999999974e-05, 8.408299999999869e-05, 8.433400000000188e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.611" endtime="20201112 12:42:23.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.606" endtime="20201112 12:42:23.614"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.617" endtime="20201112 12:42:23.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.620" endtime="20201112 12:42:23.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.619" endtime="20201112 12:42:23.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.615" endtime="20201112 12:42:23.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.242" endtime="20201112 12:42:23.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.241" endtime="20201112 12:42:23.641"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.650" endtime="20201112 12:42:23.671"></status>
</kw>
<msg timestamp="20201112 12:42:23.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.649" endtime="20201112 12:42:23.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.672" endtime="20201112 12:42:23.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.675" endtime="20201112 12:42:23.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.646" endtime="20201112 12:42:23.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.644" endtime="20201112 12:42:23.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.685" endtime="20201112 12:42:23.971"></status>
</kw>
<msg timestamp="20201112 12:42:23.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.684" endtime="20201112 12:42:23.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.975" endtime="20201112 12:42:23.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.984" endtime="20201112 12:42:23.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.681" endtime="20201112 12:42:23.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.679" endtime="20201112 12:42:23.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.991" level="INFO">${RESULT} = [{'time': 0.020442611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.592999999999795e-05, 'source_diff': 8.592999999999795e-05}, {'time': 0.020540583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:23.987" endtime="20201112 12:42:23.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.005" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.992" endtime="20201112 12:42:24.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.010" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.008" endtime="20201112 12:42:24.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.012" level="INFO">VALUE: [8.592999999999795e-05, 8.520799999999981e-05, 8.526399999999809e-05, 8.505499999999708e-05, 8.537500000000212e-05, 8.563899999999847e-05, 8.495799999999956e-05, 8.551400000000181e-05, 8.684800000000048e-05, 8.49729999999986e-05, 8.506999999999959e-05, 8.509699999999926e-05, 8.512500000000187e-05, 8.526400000000156e-05, 8.513899999999797e-05, 8.569400000000074e-05, 8.519400000000024e-05, 8.537499999999865e-05, 8.506900000000012e-05, 8.506900000000012e-05, 8.520799999999981e-05, 8.54859999999992e-05, 8.574999999999902e-05, 8.688899999999972e-05, 8.505600000000002e-05, 8.525000000000199e-05, 8.544400000000049e-05, 8.552699999999844e-05, 8.56249999999989e-05, 8.515200000000153e-05, 8.509699999999926e-05, 8.570800000000031e-05, 8.56249999999989e-05, 8.677799999999916e-05, 8.561099999999933e-05, 8.687500000000015e-05, 8.520900000000275e-05, 8.554200000000095e-05, 8.5153000000001e-05, 8.563900000000194e-05, 8.495799999999956e-05, 8.504200000000045e-05, 8.524999999999852e-05, 8.527799999999766e-05, 8.537499999999865e-05, 8.558399999999966e-05, 8.54859999999992e-05, 8.544399999999702e-05, 8.572199999999988e-05, 8.56530000000015e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.011" endtime="20201112 12:42:24.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.006" endtime="20201112 12:42:24.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.021" endtime="20201112 12:42:24.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.025" endtime="20201112 12:42:24.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.023" endtime="20201112 12:42:24.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.019" endtime="20201112 12:42:24.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.642" endtime="20201112 12:42:24.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.642" endtime="20201112 12:42:24.046"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.055" endtime="20201112 12:42:24.075"></status>
</kw>
<msg timestamp="20201112 12:42:24.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.053" endtime="20201112 12:42:24.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.076" endtime="20201112 12:42:24.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.079" endtime="20201112 12:42:24.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.051" endtime="20201112 12:42:24.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.048" endtime="20201112 12:42:24.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.091" endtime="20201112 12:42:24.377"></status>
</kw>
<msg timestamp="20201112 12:42:24.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.089" endtime="20201112 12:42:24.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.381" endtime="20201112 12:42:24.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.390" endtime="20201112 12:42:24.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.086" endtime="20201112 12:42:24.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.084" endtime="20201112 12:42:24.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.397" level="INFO">${RESULT} = [{'time': 0.020350903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.613899999999897e-05, 'source_diff': 8.613899999999897e-05}, {'time': 0.020448917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:24.393" endtime="20201112 12:42:24.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.411" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:24.398" endtime="20201112 12:42:24.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.415" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.414" endtime="20201112 12:42:24.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.418" level="INFO">VALUE: [8.613899999999897e-05, 8.609799999999973e-05, 8.627799999999866e-05, 8.608300000000069e-05, 8.674999999999655e-05, 8.613900000000244e-05, 8.677800000000263e-05, 8.679100000000273e-05, 8.643099999999793e-05, 8.638899999999922e-05, 8.643099999999793e-05, 8.623599999999995e-05, 8.597200000000013e-05, 8.600000000000274e-05, 8.78059999999993e-05, 8.783400000000191e-05, 8.629099999999876e-05, 8.607000000000059e-05, 8.651399999999934e-05, 8.59859999999997e-05, 8.645800000000106e-05, 8.64860000000002e-05, 8.609700000000026e-05, 8.587499999999915e-05, 8.670800000000131e-05, 8.781999999999887e-05, 8.783299999999897e-05, 8.6153000000002e-05, 8.657000000000109e-05, 8.680600000000177e-05, 8.6153000000002e-05, 8.66249999999999e-05, 8.608300000000069e-05, 8.645800000000106e-05, 8.592999999999795e-05, 8.609700000000026e-05, 8.661100000000033e-05, 8.7944999999999e-05, 8.651399999999934e-05, 8.661100000000033e-05, 8.632000000000084e-05, 8.784700000000201e-05, 8.638899999999922e-05, 8.626399999999909e-05, 8.637499999999965e-05, 8.661100000000033e-05, 8.659700000000076e-05, 8.783299999999897e-05, 8.779100000000026e-05, 8.647200000000063e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.417" endtime="20201112 12:42:24.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.412" endtime="20201112 12:42:24.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.422" endtime="20201112 12:42:24.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.425" endtime="20201112 12:42:24.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.424" endtime="20201112 12:42:24.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.420" endtime="20201112 12:42:24.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.047" endtime="20201112 12:42:24.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.046" endtime="20201112 12:42:24.446"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.456" endtime="20201112 12:42:24.476"></status>
</kw>
<msg timestamp="20201112 12:42:24.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.454" endtime="20201112 12:42:24.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.478" endtime="20201112 12:42:24.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.481" endtime="20201112 12:42:24.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.451" endtime="20201112 12:42:24.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.449" endtime="20201112 12:42:24.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.491" endtime="20201112 12:42:24.777"></status>
</kw>
<msg timestamp="20201112 12:42:24.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.489" endtime="20201112 12:42:24.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.782" endtime="20201112 12:42:24.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.790" endtime="20201112 12:42:24.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.487" endtime="20201112 12:42:24.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.485" endtime="20201112 12:42:24.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.797" level="INFO">${RESULT} = [{'time': 0.020383194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.716599999999963e-05, 'source_diff': 8.716599999999963e-05}, {'time': 0.020483181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:24.794" endtime="20201112 12:42:24.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.812" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:24.798" endtime="20201112 12:42:24.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.817" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.816" endtime="20201112 12:42:24.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.820" level="INFO">VALUE: [8.716599999999963e-05, 8.695900000000104e-05, 8.713899999999997e-05, 8.884699999999954e-05, 8.738900000000022e-05, 8.742999999999945e-05, 8.702799999999941e-05, 8.708300000000169e-05, 8.752699999999697e-05, 8.884699999999954e-05, 8.886099999999911e-05, 8.705599999999855e-05, 8.733399999999794e-05, 8.705599999999855e-05, 8.756999999999862e-05, 8.755600000000252e-05, 8.740299999999979e-05, 8.886099999999911e-05, 8.774999999999755e-05, 8.727799999999966e-05, 8.741599999999988e-05, 8.777800000000016e-05, 8.708300000000169e-05, 8.702799999999941e-05, 8.724999999999705e-05, 8.723599999999748e-05, 8.775000000000102e-05, 8.729199999999923e-05, 8.719499999999825e-05, 8.745799999999859e-05, 8.73189999999989e-05, 8.694399999999852e-05, 8.71799999999992e-05, 8.701399999999984e-05, 8.740299999999979e-05, 8.770799999999884e-05, 8.716700000000258e-05, 8.701399999999984e-05, 8.706999999999812e-05, 8.707000000000159e-05, 8.763900000000047e-05, 8.74860000000012e-05, 8.772300000000136e-05, 8.759699999999829e-05, 8.720800000000181e-05, 8.726400000000009e-05, 8.776400000000059e-05, 8.737500000000065e-05, 8.744399999999902e-05, 8.769399999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.818" endtime="20201112 12:42:24.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.813" endtime="20201112 12:42:24.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.823" endtime="20201112 12:42:24.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.827" endtime="20201112 12:42:24.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.825" endtime="20201112 12:42:24.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.822" endtime="20201112 12:42:24.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.447" endtime="20201112 12:42:24.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.447" endtime="20201112 12:42:24.848"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.857" endtime="20201112 12:42:24.878"></status>
</kw>
<msg timestamp="20201112 12:42:24.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.855" endtime="20201112 12:42:24.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.879" endtime="20201112 12:42:24.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.882" endtime="20201112 12:42:24.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.853" endtime="20201112 12:42:24.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.850" endtime="20201112 12:42:24.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.892" endtime="20201112 12:42:25.179"></status>
</kw>
<msg timestamp="20201112 12:42:25.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020397431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.891" endtime="20201112 12:42:25.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020397431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.183" endtime="20201112 12:42:25.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.192" endtime="20201112 12:42:25.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.888" endtime="20201112 12:42:25.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.886" endtime="20201112 12:42:25.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.199" level="INFO">${RESULT} = [{'time': 0.020397431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.802800000000041e-05, 'source_diff': 8.802800000000041e-05}, {'time': 0.020499486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:25.195" endtime="20201112 12:42:25.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.213" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:25.200" endtime="20201112 12:42:25.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.217" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.216" endtime="20201112 12:42:25.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.220" level="INFO">VALUE: [8.802800000000041e-05, 8.987499999999968e-05, 8.847200000000263e-05, 8.870799999999984e-05, 8.827799999999719e-05, 8.802800000000041e-05, 8.83189999999999e-05, 8.876400000000159e-05, 8.981899999999793e-05, 8.829200000000023e-05, 8.854200000000048e-05, 8.831999999999937e-05, 8.816600000000063e-05, 8.984700000000054e-05, 8.836100000000208e-05, 8.837500000000165e-05, 8.870799999999984e-05, 8.843099999999993e-05, 8.83189999999999e-05, 8.838900000000122e-05, 8.806899999999965e-05, 8.879200000000073e-05, 8.809700000000226e-05, 8.7944999999999e-05, 8.833400000000241e-05, 8.865300000000104e-05, 8.829100000000076e-05, 8.881999999999987e-05, 8.827699999999772e-05, 8.987499999999968e-05, 8.869400000000027e-05, 8.876400000000159e-05, 8.865300000000104e-05, 8.813900000000097e-05, 8.872199999999941e-05, 8.851400000000134e-05, 8.869499999999975e-05, 8.805599999999955e-05, 8.980599999999783e-05, 8.800000000000127e-05, 8.872299999999889e-05, 8.858299999999972e-05, 8.808299999999922e-05, 8.850000000000177e-05, 8.820800000000281e-05, 8.990299999999882e-05, 8.988899999999925e-05, 8.827800000000066e-05, 8.809699999999879e-05, 8.795799999999909e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.219" endtime="20201112 12:42:25.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.214" endtime="20201112 12:42:25.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.224" endtime="20201112 12:42:25.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.227" endtime="20201112 12:42:25.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.226" endtime="20201112 12:42:25.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.222" endtime="20201112 12:42:25.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.849" endtime="20201112 12:42:25.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.848" endtime="20201112 12:42:25.248"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.257" endtime="20201112 12:42:25.278"></status>
</kw>
<msg timestamp="20201112 12:42:25.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.256" endtime="20201112 12:42:25.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.280" endtime="20201112 12:42:25.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.282" endtime="20201112 12:42:25.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.253" endtime="20201112 12:42:25.285"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.251" endtime="20201112 12:42:25.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.293" endtime="20201112 12:42:25.580"></status>
</kw>
<msg timestamp="20201112 12:42:25.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020314833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.291" endtime="20201112 12:42:25.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020314833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020403875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.585" endtime="20201112 12:42:25.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.593" endtime="20201112 12:42:25.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.288" endtime="20201112 12:42:25.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.287" endtime="20201112 12:42:25.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.600" level="INFO">${RESULT} = [{'time': 0.020403875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.904199999999751e-05, 'source_diff': 8.904199999999751e-05}, {'time': 0.020506917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:25.597" endtime="20201112 12:42:25.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.614" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:25.601" endtime="20201112 12:42:25.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.619" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.618" endtime="20201112 12:42:25.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.622" level="INFO">VALUE: [8.904199999999751e-05, 8.943100000000093e-05, 8.91389999999985e-05, 8.904199999999751e-05, 8.974999999999955e-05, 8.962499999999943e-05, 8.920800000000034e-05, 8.91800000000012e-05, 8.913799999999902e-05, 9.091699999999939e-05, 8.962499999999943e-05, 9.090299999999982e-05, 8.934700000000004e-05, 8.976399999999912e-05, 8.941700000000136e-05, 8.929200000000123e-05, 8.943100000000093e-05, 8.926399999999862e-05, 8.977699999999922e-05, 8.91519999999986e-05, 8.901300000000237e-05, 8.958300000000072e-05, 8.959799999999976e-05, 8.961099999999986e-05, 8.891600000000138e-05, 8.948599999999973e-05, 8.922199999999991e-05, 8.956900000000115e-05, 9.088900000000025e-05, 8.901399999999837e-05, 8.962499999999943e-05, 8.904200000000098e-05, 8.901300000000237e-05, 8.933300000000047e-05, 8.952700000000244e-05, 9.080499999999936e-05, 8.944400000000102e-05, 9.084699999999807e-05, 8.977800000000216e-05, 8.938899999999875e-05, 8.965300000000204e-05, 9.088899999999678e-05, 8.902799999999794e-05, 8.957000000000062e-05, 8.976399999999912e-05, 8.908400000000316e-05, 8.91250000000024e-05, 8.95129999999994e-05, 8.976399999999912e-05, 8.947200000000016e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.620" endtime="20201112 12:42:25.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.615" endtime="20201112 12:42:25.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.625" endtime="20201112 12:42:25.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.629" endtime="20201112 12:42:25.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.627" endtime="20201112 12:42:25.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.624" endtime="20201112 12:42:25.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.249" endtime="20201112 12:42:25.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.249" endtime="20201112 12:42:25.651"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.660" endtime="20201112 12:42:25.681"></status>
</kw>
<msg timestamp="20201112 12:42:25.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.658" endtime="20201112 12:42:25.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.682" endtime="20201112 12:42:25.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.685" endtime="20201112 12:42:25.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.656" endtime="20201112 12:42:25.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.653" endtime="20201112 12:42:25.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.695" endtime="20201112 12:42:25.982"></status>
</kw>
<msg timestamp="20201112 12:42:25.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:25.694" endtime="20201112 12:42:25.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465403, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:25.987" endtime="20201112 12:42:25.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.995" endtime="20201112 12:42:25.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.691" endtime="20201112 12:42:25.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.689" endtime="20201112 12:42:25.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.002" level="INFO">${RESULT} = [{'time': 0.021465403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.190300000000082e-05, 'source_diff': 9.190300000000082e-05}, {'time': 0.021569417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:25.999" endtime="20201112 12:42:26.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.016" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:26.003" endtime="20201112 12:42:26.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.021" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.020" endtime="20201112 12:42:26.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.023" level="INFO">VALUE: [9.190300000000082e-05, 9.052799999999944e-05, 9.033399999999747e-05, 9.01519999999996e-05, 9.03199999999979e-05, 9.076300000000065e-05, 9.069400000000227e-05, 9.019400000000177e-05, 9.038899999999975e-05, 9.079199999999926e-05, 9.062500000000043e-05, 9.070800000000184e-05, 9.0332999999998e-05, 9.033399999999747e-05, 9.020900000000082e-05, 9.033400000000094e-05, 9.072200000000141e-05, 9.017999999999873e-05, 9.033300000000147e-05, 9.037500000000018e-05, 9.01939999999983e-05, 8.997200000000066e-05, 9.061099999999739e-05, 9.005599999999808e-05, 9.066699999999914e-05, 9.056999999999815e-05, 9.036100000000061e-05, 9.01389999999995e-05, 9.188900000000125e-05, 8.99999999999998e-05, 9.047199999999769e-05, 8.995800000000109e-05, 9.045799999999812e-05, 9.06939999999988e-05, 9.061099999999739e-05, 9.042999999999898e-05, 9.016699999999864e-05, 9.043099999999846e-05, 9.051399999999987e-05, 9.052799999999944e-05, 9.052799999999944e-05, 9.076400000000012e-05, 9.030599999999833e-05, 9.041599999999941e-05, 9.179200000000026e-05, 9.054099999999954e-05, 9.077799999999969e-05, 9.020800000000134e-05, 9.072200000000141e-05, 9.076400000000012e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.022" endtime="20201112 12:42:26.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.017" endtime="20201112 12:42:26.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.027" endtime="20201112 12:42:26.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.031" endtime="20201112 12:42:26.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.029" endtime="20201112 12:42:26.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.025" endtime="20201112 12:42:26.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.652" endtime="20201112 12:42:26.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.651" endtime="20201112 12:42:26.052"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.061" endtime="20201112 12:42:26.081"></status>
</kw>
<msg timestamp="20201112 12:42:26.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.059" endtime="20201112 12:42:26.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.083" endtime="20201112 12:42:26.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.085" endtime="20201112 12:42:26.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.057" endtime="20201112 12:42:26.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.054" endtime="20201112 12:42:26.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.096" endtime="20201112 12:42:26.382"></status>
</kw>
<msg timestamp="20201112 12:42:26.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.094" endtime="20201112 12:42:26.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020304167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.387" endtime="20201112 12:42:26.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.395" endtime="20201112 12:42:26.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.091" endtime="20201112 12:42:26.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.090" endtime="20201112 12:42:26.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.403" level="INFO">${RESULT} = [{'time': 0.020396083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.191599999999744e-05, 'source_diff': 9.191599999999744e-05}, {'time': 0.020500083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:26.399" endtime="20201112 12:42:26.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.417" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:26.404" endtime="20201112 12:42:26.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.422" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.421" endtime="20201112 12:42:26.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.425" level="INFO">VALUE: [9.191599999999744e-05, 9.158299999999925e-05, 9.156899999999968e-05, 9.120799999999887e-05, 9.138900000000075e-05, 9.15139999999974e-05, 9.134700000000204e-05, 9.287500000000268e-05, 9.287499999999921e-05, 9.138900000000075e-05, 9.130599999999933e-05, 9.173600000000198e-05, 9.144399999999955e-05, 9.28879999999993e-05, 9.131899999999943e-05, 9.156899999999968e-05, 9.173600000000198e-05, 9.131899999999943e-05, 9.1332999999999e-05, 9.288900000000225e-05, 9.11529999999966e-05, 9.162499999999796e-05, 9.172299999999842e-05, 9.1639000000001e-05, 9.170900000000232e-05, 9.09589999999981e-05, 9.140200000000084e-05, 9.10139999999969e-05, 9.155500000000011e-05, 9.145800000000259e-05, 9.094399999999905e-05, 9.116699999999964e-05, 9.108300000000222e-05, 9.116699999999964e-05, 9.140300000000032e-05, 9.137500000000118e-05, 9.15000000000013e-05, 9.123599999999801e-05, 9.113800000000102e-05, 9.105500000000308e-05, 9.138900000000075e-05, 9.104199999999951e-05, 9.16939999999998e-05, 9.155599999999958e-05, 9.166700000000014e-05, 9.286099999999964e-05, 9.161099999999839e-05, 9.134700000000204e-05, 9.123700000000096e-05, 9.097299999999767e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.423" endtime="20201112 12:42:26.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.418" endtime="20201112 12:42:26.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.429" endtime="20201112 12:42:26.430"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.432" endtime="20201112 12:42:26.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.431" endtime="20201112 12:42:26.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.427" endtime="20201112 12:42:26.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.053" endtime="20201112 12:42:26.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.052" endtime="20201112 12:42:26.453"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.462" endtime="20201112 12:42:26.483"></status>
</kw>
<msg timestamp="20201112 12:42:26.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.461" endtime="20201112 12:42:26.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.484" endtime="20201112 12:42:26.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.487" endtime="20201112 12:42:26.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.458" endtime="20201112 12:42:26.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.456" endtime="20201112 12:42:26.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.497" endtime="20201112 12:42:26.784"></status>
</kw>
<msg timestamp="20201112 12:42:26.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020314722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.496" endtime="20201112 12:42:26.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020220847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020314722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.788" endtime="20201112 12:42:26.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.797" endtime="20201112 12:42:26.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.493" endtime="20201112 12:42:26.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.491" endtime="20201112 12:42:26.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.804" level="INFO">${RESULT} = [{'time': 0.020314722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.387500000000021e-05, 'source_diff': 9.387500000000021e-05}, {'time': 0.020417722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:26.800" endtime="20201112 12:42:26.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.817" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:26.805" endtime="20201112 12:42:26.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.822" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.821" endtime="20201112 12:42:26.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.825" level="INFO">VALUE: [9.387500000000021e-05, 9.20139999999979e-05, 9.270800000000037e-05, 9.199999999999833e-05, 9.229200000000076e-05, 9.237500000000218e-05, 9.222299999999892e-05, 9.23199999999999e-05, 9.277799999999822e-05, 9.198600000000223e-05, 9.254099999999807e-05, 9.231900000000043e-05, 9.387500000000021e-05, 9.256900000000068e-05, 9.227800000000119e-05, 9.256900000000068e-05, 9.281899999999746e-05, 9.20000000000018e-05, 9.195799999999962e-05, 9.205600000000008e-05, 9.244500000000003e-05, 9.277699999999875e-05, 9.262500000000243e-05, 9.20130000000019e-05, 9.227699999999825e-05, 9.262500000000243e-05, 9.226400000000162e-05, 9.21940000000003e-05, 9.26529999999981e-05, 9.238899999999828e-05, 9.201400000000137e-05, 9.268100000000071e-05, 9.20139999999979e-05, 9.249999999999883e-05, 9.213899999999803e-05, 9.236100000000261e-05, 9.283299999999703e-05, 9.258300000000025e-05, 9.28200000000004e-05, 9.243000000000098e-05, 9.277799999999822e-05, 9.376399999999965e-05, 9.222199999999944e-05, 9.386100000000064e-05, 9.212500000000193e-05, 9.257000000000015e-05, 9.251400000000187e-05, 9.229099999999782e-05, 9.276299999999918e-05, 9.281899999999746e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.823" endtime="20201112 12:42:26.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.819" endtime="20201112 12:42:26.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.829" endtime="20201112 12:42:26.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.832" endtime="20201112 12:42:26.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.831" endtime="20201112 12:42:26.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.827" endtime="20201112 12:42:26.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.454" endtime="20201112 12:42:26.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.454" endtime="20201112 12:42:26.853"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.862" endtime="20201112 12:42:26.883"></status>
</kw>
<msg timestamp="20201112 12:42:26.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.861" endtime="20201112 12:42:26.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.884" endtime="20201112 12:42:26.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.887" endtime="20201112 12:42:26.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.858" endtime="20201112 12:42:26.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.856" endtime="20201112 12:42:26.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.898" endtime="20201112 12:42:27.184"></status>
</kw>
<msg timestamp="20201112 12:42:27.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020406542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.896" endtime="20201112 12:42:27.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020313097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020406542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.188" endtime="20201112 12:42:27.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.197" endtime="20201112 12:42:27.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.893" endtime="20201112 12:42:27.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.891" endtime="20201112 12:42:27.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.204" level="INFO">${RESULT} = [{'time': 0.020406542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.344500000000103e-05, 'source_diff': 9.344500000000103e-05}, {'time': 0.020510583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:27.200" endtime="20201112 12:42:27.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.218" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:27.205" endtime="20201112 12:42:27.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.223" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.221" endtime="20201112 12:42:27.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.225" level="INFO">VALUE: [9.344500000000103e-05, 9.365199999999962e-05, 9.377699999999975e-05, 9.486099999999817e-05, 9.308300000000075e-05, 9.368000000000223e-05, 9.486100000000164e-05, 9.362499999999996e-05, 9.363899999999953e-05, 9.366700000000214e-05, 9.352800000000244e-05, 9.340299999999885e-05, 9.372300000000042e-05, 9.370900000000085e-05, 9.375000000000008e-05, 9.326400000000262e-05, 9.363899999999953e-05, 9.327699999999925e-05, 9.319399999999783e-05, 9.48469999999986e-05, 9.333299999999753e-05, 9.35139999999994e-05, 9.372200000000094e-05, 9.333299999999753e-05, 9.319499999999731e-05, 9.352800000000244e-05, 9.377800000000269e-05, 9.362499999999996e-05, 9.341600000000241e-05, 9.36940000000018e-05, 9.373599999999704e-05, 9.29720000000002e-05, 9.375000000000008e-05, 9.347199999999722e-05, 9.326399999999915e-05, 9.305600000000108e-05, 9.35139999999994e-05, 9.315300000000207e-05, 9.29590000000001e-05, 9.380599999999836e-05, 9.319500000000078e-05, 9.29590000000001e-05, 9.363800000000005e-05, 9.304099999999857e-05, 9.299999999999933e-05, 9.33469999999971e-05, 9.367999999999876e-05, 9.369399999999833e-05, 9.488900000000078e-05, 9.377800000000269e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.224" endtime="20201112 12:42:27.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.219" endtime="20201112 12:42:27.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.229" endtime="20201112 12:42:27.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.233" endtime="20201112 12:42:27.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.231" endtime="20201112 12:42:27.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.227" endtime="20201112 12:42:27.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.854" endtime="20201112 12:42:27.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.854" endtime="20201112 12:42:27.254"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.263" endtime="20201112 12:42:27.283"></status>
</kw>
<msg timestamp="20201112 12:42:27.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.261" endtime="20201112 12:42:27.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.285" endtime="20201112 12:42:27.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.287" endtime="20201112 12:42:27.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.258" endtime="20201112 12:42:27.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.256" endtime="20201112 12:42:27.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.298" endtime="20201112 12:42:27.584"></status>
</kw>
<msg timestamp="20201112 12:42:27.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02026075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02035525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:27.296" endtime="20201112 12:42:27.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02026075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02035525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:27.589" endtime="20201112 12:42:27.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.597" endtime="20201112 12:42:27.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.294" endtime="20201112 12:42:27.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.292" endtime="20201112 12:42:27.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.604" level="INFO">${RESULT} = [{'time': 0.02035525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999999736e-05, 'source_diff': 9.449999999999736e-05}, {'time': 0.02046125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:27.601" endtime="20201112 12:42:27.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:27.605" endtime="20201112 12:42:27.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.623" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.622" endtime="20201112 12:42:27.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.625" level="INFO">VALUE: [9.449999999999736e-05, 9.45140000000004e-05, 9.41529999999996e-05, 9.469499999999881e-05, 9.429199999999929e-05, 9.458299999999878e-05, 9.413900000000003e-05, 9.46530000000001e-05, 9.467999999999976e-05, 9.590300000000135e-05, 9.409700000000132e-05, 9.47079999999989e-05, 9.463900000000053e-05, 9.394400000000205e-05, 9.44720000000017e-05, 9.479199999999979e-05, 9.468099999999924e-05, 9.480599999999936e-05, 9.419500000000178e-05, 9.398600000000076e-05, 9.443099999999899e-05, 9.583300000000003e-05, 9.476299999999771e-05, 9.46530000000001e-05, 9.470800000000237e-05, 9.458299999999878e-05, 9.430600000000233e-05, 9.437499999999724e-05, 9.390299999999935e-05, 9.583300000000003e-05, 9.436199999999714e-05, 9.579199999999732e-05, 9.448600000000126e-05, 9.405599999999861e-05, 9.43880000000008e-05, 9.412500000000046e-05, 9.408299999999828e-05, 9.581900000000046e-05, 9.404099999999957e-05, 9.475000000000108e-05, 9.456999999999868e-05, 9.454199999999954e-05, 9.46660000000002e-05, 9.456999999999868e-05, 9.391700000000239e-05, 9.58339999999995e-05, 9.433299999999853e-05, 9.45140000000004e-05, 9.455499999999964e-05, 9.475000000000108e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.624" endtime="20201112 12:42:27.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.619" endtime="20201112 12:42:27.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.629" endtime="20201112 12:42:27.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.633" endtime="20201112 12:42:27.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.631" endtime="20201112 12:42:27.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.627" endtime="20201112 12:42:27.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.254" endtime="20201112 12:42:27.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.254" endtime="20201112 12:42:27.654"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.663" endtime="20201112 12:42:27.683"></status>
</kw>
<msg timestamp="20201112 12:42:27.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.661" endtime="20201112 12:42:27.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.685" endtime="20201112 12:42:27.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.688" endtime="20201112 12:42:27.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.659" endtime="20201112 12:42:27.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.656" endtime="20201112 12:42:27.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.698" endtime="20201112 12:42:27.985"></status>
</kw>
<msg timestamp="20201112 12:42:27.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.696" endtime="20201112 12:42:27.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.989" endtime="20201112 12:42:27.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.998" endtime="20201112 12:42:27.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.694" endtime="20201112 12:42:28.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.692" endtime="20201112 12:42:28.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.005" level="INFO">${RESULT} = [{'time': 0.020328528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513899999999756e-05, 'source_diff': 9.513899999999756e-05}, {'time': 0.020435542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.001" endtime="20201112 12:42:28.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.020" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:28.006" endtime="20201112 12:42:28.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.025" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.023" endtime="20201112 12:42:28.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.027" level="INFO">VALUE: [9.513899999999756e-05, 9.50140000000009e-05, 9.547199999999922e-05, 9.577799999999775e-05, 9.518099999999974e-05, 9.556900000000021e-05, 9.544400000000008e-05, 9.538899999999781e-05, 9.569400000000033e-05, 9.515299999999713e-05, 9.495799999999915e-05, 9.536099999999867e-05, 9.545899999999913e-05, 9.502800000000047e-05, 9.551399999999793e-05, 9.551399999999793e-05, 9.55270000000015e-05, 9.544400000000008e-05, 9.559699999999935e-05, 9.575000000000208e-05, 9.504200000000004e-05, 9.577699999999828e-05, 9.569400000000033e-05, 9.569500000000328e-05, 9.538899999999781e-05, 9.520899999999888e-05, 9.56530000000011e-05, 9.520899999999888e-05, 9.544499999999956e-05, 9.5027000000001e-05, 9.569400000000033e-05, 9.531899999999996e-05, 9.57079999999999e-05, 9.522199999999897e-05, 9.559700000000282e-05, 9.563899999999806e-05, 9.687499999999974e-05, 9.506999999999918e-05, 9.558400000000272e-05, 9.561099999999892e-05, 9.552800000000097e-05, 9.53200000000029e-05, 9.574999999999861e-05, 9.533299999999953e-05, 9.509699999999885e-05, 9.519500000000278e-05, 9.549999999999836e-05, 9.695900000000063e-05, 9.687499999999974e-05, 9.562500000000196e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.026" endtime="20201112 12:42:28.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.021" endtime="20201112 12:42:28.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.031" endtime="20201112 12:42:28.032"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.034" endtime="20201112 12:42:28.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.033" endtime="20201112 12:42:28.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.029" endtime="20201112 12:42:28.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.655" endtime="20201112 12:42:28.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.654" endtime="20201112 12:42:28.055"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.065" endtime="20201112 12:42:28.085"></status>
</kw>
<msg timestamp="20201112 12:42:28.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.063" endtime="20201112 12:42:28.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.087" endtime="20201112 12:42:28.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.089" endtime="20201112 12:42:28.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.060" endtime="20201112 12:42:28.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.058" endtime="20201112 12:42:28.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.100" endtime="20201112 12:42:28.386"></status>
</kw>
<msg timestamp="20201112 12:42:28.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.098" endtime="20201112 12:42:28.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.391" endtime="20201112 12:42:28.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.399" endtime="20201112 12:42:28.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.095" endtime="20201112 12:42:28.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.094" endtime="20201112 12:42:28.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.406" level="INFO">${RESULT} = [{'time': 0.020433569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.692999999999855e-05, 'source_diff': 9.692999999999855e-05}, {'time': 0.020541583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.403" endtime="20201112 12:42:28.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.420" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:28.407" endtime="20201112 12:42:28.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.425" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.424" endtime="20201112 12:42:28.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.427" level="INFO">VALUE: [9.692999999999855e-05, 9.631899999999749e-05, 9.777799999999975e-05, 9.601299999999896e-05, 9.784699999999813e-05, 9.788900000000031e-05, 9.61530000000016e-05, 9.637499999999924e-05, 9.650000000000283e-05, 9.663899999999906e-05, 9.607000000000018e-05, 9.672299999999995e-05, 9.781999999999846e-05, 9.627800000000172e-05, 9.594400000000058e-05, 9.63470000000001e-05, 9.658300000000078e-05, 9.640299999999838e-05, 9.669399999999786e-05, 9.65279999999985e-05, 9.594399999999711e-05, 9.65140000000024e-05, 9.647200000000022e-05, 9.644500000000056e-05, 9.588900000000178e-05, 9.636100000000314e-05, 9.658400000000025e-05, 9.649999999999936e-05, 9.626399999999868e-05, 9.654199999999807e-05, 9.604200000000104e-05, 9.672200000000047e-05, 9.783299999999856e-05, 9.654200000000154e-05, 9.612500000000246e-05, 9.602800000000147e-05, 9.783399999999803e-05, 9.61530000000016e-05, 9.622299999999945e-05, 9.61660000000017e-05, 9.619400000000083e-05, 9.65140000000024e-05, 9.627799999999825e-05, 9.594400000000058e-05, 9.622199999999997e-05, 9.626400000000215e-05, 9.787500000000074e-05, 9.62080000000004e-05, 9.791699999999945e-05, 9.627799999999825e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.426" endtime="20201112 12:42:28.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.421" endtime="20201112 12:42:28.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.431" endtime="20201112 12:42:28.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.435" endtime="20201112 12:42:28.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.433" endtime="20201112 12:42:28.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.429" endtime="20201112 12:42:28.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.056" endtime="20201112 12:42:28.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.056" endtime="20201112 12:42:28.456"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.465" endtime="20201112 12:42:28.485"></status>
</kw>
<msg timestamp="20201112 12:42:28.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.463" endtime="20201112 12:42:28.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.487" endtime="20201112 12:42:28.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.490" endtime="20201112 12:42:28.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.460" endtime="20201112 12:42:28.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.458" endtime="20201112 12:42:28.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.500" endtime="20201112 12:42:28.786"></status>
</kw>
<msg timestamp="20201112 12:42:28.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020203347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.499" endtime="20201112 12:42:28.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020203347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.791" endtime="20201112 12:42:28.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.799" endtime="20201112 12:42:28.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.496" endtime="20201112 12:42:28.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.494" endtime="20201112 12:42:28.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.806" level="INFO">${RESULT} = [{'time': 0.020302194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.884699999999913e-05, 'source_diff': 9.884699999999913e-05}, {'time': 0.020412236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.803" endtime="20201112 12:42:28.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.820" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:28.807" endtime="20201112 12:42:28.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.825" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.824" endtime="20201112 12:42:28.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.827" level="INFO">VALUE: [9.884699999999913e-05, 9.76669999999992e-05, 9.704199999999857e-05, 9.891699999999698e-05, 9.751399999999993e-05, 9.715299999999913e-05, 9.699999999999986e-05, 9.887500000000174e-05, 9.718099999999827e-05, 9.7721999999998e-05, 9.702699999999953e-05, 9.751399999999993e-05, 9.752700000000003e-05, 9.881899999999999e-05, 9.697199999999725e-05, 9.76669999999992e-05, 9.7027999999999e-05, 9.765299999999963e-05, 9.884699999999913e-05, 9.752800000000297e-05, 9.887500000000174e-05, 9.755599999999864e-05, 9.697199999999725e-05, 9.732000000000143e-05, 9.730500000000239e-05, 9.706900000000171e-05, 9.744400000000208e-05, 9.769399999999887e-05, 9.72920000000023e-05, 9.751399999999993e-05, 9.756899999999874e-05, 9.763900000000006e-05, 9.713899999999956e-05, 9.884800000000207e-05, 9.70409999999991e-05, 9.738899999999981e-05, 9.709700000000085e-05, 9.890299999999741e-05, 9.7027999999999e-05, 9.888900000000131e-05, 9.713899999999956e-05, 9.72219999999975e-05, 9.73470000000011e-05, 9.711199999999989e-05, 9.725000000000011e-05, 9.707000000000118e-05, 9.707000000000118e-05, 9.754199999999907e-05, 9.737500000000024e-05, 9.891700000000045e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.826" endtime="20201112 12:42:28.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.821" endtime="20201112 12:42:28.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.831" endtime="20201112 12:42:28.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.835" endtime="20201112 12:42:28.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.833" endtime="20201112 12:42:28.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.830" endtime="20201112 12:42:28.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.457" endtime="20201112 12:42:28.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.456" endtime="20201112 12:42:28.856"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.865" endtime="20201112 12:42:28.886"></status>
</kw>
<msg timestamp="20201112 12:42:28.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.863" endtime="20201112 12:42:28.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.887" endtime="20201112 12:42:28.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.890" endtime="20201112 12:42:28.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.861" endtime="20201112 12:42:28.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.859" endtime="20201112 12:42:28.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.900" endtime="20201112 12:42:29.186"></status>
</kw>
<msg timestamp="20201112 12:42:29.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.899" endtime="20201112 12:42:29.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020243667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.191" endtime="20201112 12:42:29.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.199" endtime="20201112 12:42:29.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.896" endtime="20201112 12:42:29.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.894" endtime="20201112 12:42:29.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.206" level="INFO">${RESULT} = [{'time': 0.020343556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.988899999999884e-05, 'source_diff': 9.988899999999884e-05}, {'time': 0.020455569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:29.203" endtime="20201112 12:42:29.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.220" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:29.207" endtime="20201112 12:42:29.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.225" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.224" endtime="20201112 12:42:29.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.227" level="INFO">VALUE: [9.988899999999884e-05, 9.851300000000146e-05, 9.827800000000025e-05, 9.858299999999931e-05, 9.830499999999992e-05, 9.848599999999832e-05, 9.795799999999869e-05, 9.854200000000007e-05, 9.850000000000136e-05, 9.856999999999921e-05, 9.837500000000124e-05, 9.861099999999845e-05, 9.854200000000007e-05, 9.850000000000136e-05, 9.838800000000134e-05, 9.802700000000053e-05, 9.801400000000043e-05, 9.85280000000005e-05, 9.865299999999716e-05, 9.826400000000068e-05, 9.831899999999949e-05, 9.812499999999752e-05, 9.832000000000243e-05, 9.976400000000218e-05, 9.976399999999871e-05, 9.819500000000231e-05, 9.852699999999756e-05, 9.844399999999962e-05, 9.838900000000081e-05, 9.823599999999807e-05, 9.983300000000056e-05, 9.854200000000007e-05, 9.845799999999919e-05, 9.81669999999997e-05, 9.840300000000038e-05, 9.820900000000188e-05, 9.830600000000286e-05, 9.829199999999982e-05, 9.825000000000111e-05, 9.858400000000225e-05, 9.809699999999838e-05, 9.880500000000042e-05, 9.797200000000172e-05, 9.84999999999979e-05, 9.858299999999931e-05, 9.870799999999944e-05, 9.838900000000081e-05, 9.879200000000032e-05, 9.865300000000063e-05, 9.879099999999738e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.226" endtime="20201112 12:42:29.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.221" endtime="20201112 12:42:29.233"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.235" endtime="20201112 12:42:29.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.239" endtime="20201112 12:42:29.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.237" endtime="20201112 12:42:29.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.234" endtime="20201112 12:42:29.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.857" endtime="20201112 12:42:29.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.856" endtime="20201112 12:42:29.260"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.269" endtime="20201112 12:42:29.290"></status>
</kw>
<msg timestamp="20201112 12:42:29.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.268" endtime="20201112 12:42:29.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.291" endtime="20201112 12:42:29.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.294" endtime="20201112 12:42:29.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.265" endtime="20201112 12:42:29.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.263" endtime="20201112 12:42:29.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.304" endtime="20201112 12:42:29.590"></status>
</kw>
<msg timestamp="20201112 12:42:29.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.303" endtime="20201112 12:42:29.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.594" endtime="20201112 12:42:29.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.602" endtime="20201112 12:42:29.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.300" endtime="20201112 12:42:29.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.298" endtime="20201112 12:42:29.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.609" level="INFO">${RESULT} = [{'time': 0.020454444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.927699999999831e-05, 'source_diff': 9.927699999999831e-05}, {'time': 0.020565444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:29.606" endtime="20201112 12:42:29.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.624" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:29.610" endtime="20201112 12:42:29.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.629" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.628" endtime="20201112 12:42:29.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.632" level="INFO">VALUE: [9.927699999999831e-05, 9.931899999999702e-05, 9.909699999999938e-05, 9.905500000000067e-05, 9.937500000000224e-05, 9.920799999999994e-05, 0.00010083299999999809, 9.962499999999902e-05, 9.962499999999902e-05, 0.00010083400000000103, 9.977800000000175e-05, 9.951399999999846e-05, 9.933399999999953e-05, 9.952699999999856e-05, 9.92080000000034e-05, 0.00010090199999999994, 9.937499999999877e-05, 9.969400000000087e-05, 9.933300000000006e-05, 9.940300000000138e-05, 9.891700000000045e-05, 9.919499999999984e-05, 9.947200000000322e-05, 9.912500000000199e-05, 9.931999999999996e-05, 9.90410000000011e-05, 0.00010087500000000027, 9.962499999999902e-05, 9.954099999999813e-05, 0.00010088899999999984, 9.962499999999902e-05, 9.945800000000019e-05, 9.969500000000034e-05, 9.908299999999981e-05, 9.89999999999984e-05, 9.938900000000181e-05, 9.961199999999892e-05, 9.927700000000178e-05, 0.00010081899999999852, 0.00010081900000000199, 9.970800000000044e-05, 9.894400000000012e-05, 9.963899999999859e-05, 9.970800000000044e-05, 9.965299999999816e-05, 9.902799999999753e-05, 9.933399999999953e-05, 9.901400000000143e-05, 9.976399999999871e-05, 9.952700000000203e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.630" endtime="20201112 12:42:29.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.625" endtime="20201112 12:42:29.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.635" endtime="20201112 12:42:29.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.639" endtime="20201112 12:42:29.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.637" endtime="20201112 12:42:29.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.634" endtime="20201112 12:42:29.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.261" endtime="20201112 12:42:29.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.260" endtime="20201112 12:42:29.660"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.669" endtime="20201112 12:42:29.690"></status>
</kw>
<msg timestamp="20201112 12:42:29.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.667" endtime="20201112 12:42:29.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.691" endtime="20201112 12:42:29.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.694" endtime="20201112 12:42:29.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.665" endtime="20201112 12:42:29.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.663" endtime="20201112 12:42:29.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.705" endtime="20201112 12:42:29.991"></status>
</kw>
<msg timestamp="20201112 12:42:29.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.703" endtime="20201112 12:42:29.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020250653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.995" endtime="20201112 12:42:30.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.004" endtime="20201112 12:42:30.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.700" endtime="20201112 12:42:30.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.698" endtime="20201112 12:42:30.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.011" level="INFO">${RESULT} = [{'time': 0.020351361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010070799999999797, 'source_diff': 0.00010070799999999797}, {'time': 0.020464403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.007" endtime="20201112 12:42:30.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.024" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:30.012" endtime="20201112 12:42:30.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.029" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.028" endtime="20201112 12:42:30.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.032" level="INFO">VALUE: [0.00010070799999999797, 0.0001001809999999978, 0.00010032000000000096, 9.997200000000026e-05, 0.00010004200000000157, 0.00010032000000000096, 0.00010022299999999998, 0.00010047199999999729, 0.0001000410000000021, 0.00010040199999999944, 0.00010176400000000071, 0.00010184699999999866, 0.00010063899999999959, 0.00010043099999999805, 0.00010041700000000195, 0.00010176400000000071, 0.00010034699999999716, 0.00010027800000000225, 0.00010075000000000014, 9.998599999999983e-05, 0.00010001299999999949, 0.00010054099999999913, 0.00010012499999999952, 0.00010038899999999934, 0.00010034700000000063, 0.00010077799999999928, 0.00010070800000000144, 0.00010188900000000084, 0.00010038900000000281, 0.00010027799999999878, 0.00010013900000000256, 0.00010068100000000177, 0.00010001400000000243, 0.00010045799999999772, 0.00010034700000000063, 0.00010181899999999952, 0.00010013899999999909, 0.00010031900000000149, 0.00010070800000000144, 0.00010075000000000014, 9.99999999999994e-05, 0.00010033400000000053, 0.00010019500000000084, 0.00010193000000000008, 0.00010020800000000094, 0.00010070800000000144, 0.00010081899999999852, 0.00010188900000000084, 0.00010075000000000014, 9.994399999999765e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.030" endtime="20201112 12:42:30.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.025" endtime="20201112 12:42:30.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.035" endtime="20201112 12:42:30.037"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.039" endtime="20201112 12:42:30.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.037" endtime="20201112 12:42:30.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.034" endtime="20201112 12:42:30.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.661" endtime="20201112 12:42:30.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.660" endtime="20201112 12:42:30.060"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.069" endtime="20201112 12:42:30.090"></status>
</kw>
<msg timestamp="20201112 12:42:30.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.067" endtime="20201112 12:42:30.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.092" endtime="20201112 12:42:30.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.094" endtime="20201112 12:42:30.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.065" endtime="20201112 12:42:30.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.063" endtime="20201112 12:42:30.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.105" endtime="20201112 12:42:30.390"></status>
</kw>
<msg timestamp="20201112 12:42:30.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.103" endtime="20201112 12:42:30.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.394" endtime="20201112 12:42:30.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.403" endtime="20201112 12:42:30.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.101" endtime="20201112 12:42:30.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.099" endtime="20201112 12:42:30.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.410" level="INFO">${RESULT} = [{'time': 0.020495319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010170800000000244, 'source_diff': 0.00010170800000000244}, {'time': 0.020606361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.406" endtime="20201112 12:42:30.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.423" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:30.411" endtime="20201112 12:42:30.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.428" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.427" endtime="20201112 12:42:30.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.430" level="INFO">VALUE: [0.00010170800000000244, 0.00010098600000000083, 0.00010097200000000126, 0.0001013749999999973, 0.00010147199999999829, 0.00010105599999999867, 0.00010116699999999923, 0.00010288899999999837, 0.00010115200000000019, 0.00010283399999999956, 0.00010137500000000077, 0.00010156999999999874, 0.00010115200000000019, 0.00010097200000000126, 0.00010125000000000065, 0.00010108299999999834, 0.00010116699999999923, 0.00010156899999999927, 0.00010107000000000171, 0.00010156999999999874, 0.00010177800000000028, 0.00010119499999999837, 0.00010133399999999806, 0.00010108399999999781, 0.0001029299999999976, 0.00010127799999999978, 0.00010179199999999985, 0.0001013610000000012, 0.00010281899999999705, 0.00010176400000000071, 0.00010122300000000098, 0.00010106900000000224, 0.00010108400000000128, 0.00010108400000000128, 0.00010113900000000009, 0.00010109699999999791, 0.00010138800000000087, 0.00010151400000000046, 0.00010138900000000034, 0.0001011809999999988, 0.00010145800000000219, 0.00010152800000000003, 0.00010165300000000016, 0.00010101399999999996, 0.00010102799999999953, 0.00010108400000000128, 0.00010173600000000158, 0.00010133300000000206, 0.00010108400000000128, 0.00010290299999999794]</msg>
<status status="PASS" starttime="20201112 12:42:30.429" endtime="20201112 12:42:30.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.424" endtime="20201112 12:42:30.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.434" endtime="20201112 12:42:30.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.438" endtime="20201112 12:42:30.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.436" endtime="20201112 12:42:30.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.432" endtime="20201112 12:42:30.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.061" endtime="20201112 12:42:30.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.060" endtime="20201112 12:42:30.459"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.468" endtime="20201112 12:42:30.489"></status>
</kw>
<msg timestamp="20201112 12:42:30.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.466" endtime="20201112 12:42:30.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.491" endtime="20201112 12:42:30.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.494" endtime="20201112 12:42:30.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.464" endtime="20201112 12:42:30.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.461" endtime="20201112 12:42:30.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.504" endtime="20201112 12:42:30.793"></status>
</kw>
<msg timestamp="20201112 12:42:30.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020473403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.502" endtime="20201112 12:42:30.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020473403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.798" endtime="20201112 12:42:30.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.806" endtime="20201112 12:42:30.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.500" endtime="20201112 12:42:30.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.498" endtime="20201112 12:42:30.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.813" level="INFO">${RESULT} = [{'time': 0.020473403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010280600000000042, 'source_diff': 0.00010280600000000042}, {'time': 0.020588403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.809" endtime="20201112 12:42:30.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.826" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:30.814" endtime="20201112 12:42:30.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.831" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.830" endtime="20201112 12:42:30.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.834" level="INFO">VALUE: [0.00010280600000000042, 0.00010193100000000302, 0.00010230500000000045, 0.00010262499999999855, 0.00010390199999999947, 0.00010277699999999834, 0.00010263899999999812, 0.00010249999999999843, 0.00010270799999999997, 0.00010262499999999855, 0.00010255600000000017, 0.00010233400000000253, 0.00010208400000000228, 0.00010244499999999962, 0.00010227800000000078, 0.00010286099999999923, 0.00010195799999999922, 0.0001025000000000019, 0.00010390199999999947, 0.00010211099999999848, 0.00010206899999999977, 0.00010238800000000187, 0.00010244499999999962, 0.00010276400000000172, 0.00010243100000000005, 0.00010197299999999826, 0.00010233399999999906, 0.00010258399999999931, 0.00010199999999999793, 0.00010383300000000109, 0.00010390200000000294, 0.00010255600000000017, 0.00010274999999999868, 0.00010276399999999825, 0.00010279199999999739, 0.00010282, 0.00010209800000000185, 0.00010199999999999793, 0.00010234799999999863, 0.00010208399999999881, 0.00010194399999999965, 0.00010227700000000131, 0.00010280500000000095, 0.00010201400000000097, 0.00010227800000000078, 0.00010276400000000172, 0.00010279200000000085, 0.0001025000000000019, 0.00010191699999999998, 0.00010227799999999732]</msg>
<status status="PASS" starttime="20201112 12:42:30.832" endtime="20201112 12:42:30.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.827" endtime="20201112 12:42:30.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.837" endtime="20201112 12:42:30.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.841" endtime="20201112 12:42:30.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.839" endtime="20201112 12:42:30.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.836" endtime="20201112 12:42:30.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.460" endtime="20201112 12:42:30.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.459" endtime="20201112 12:42:30.862"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.871" endtime="20201112 12:42:30.892"></status>
</kw>
<msg timestamp="20201112 12:42:30.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.869" endtime="20201112 12:42:30.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.894" endtime="20201112 12:42:30.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.896" endtime="20201112 12:42:30.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.867" endtime="20201112 12:42:30.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.865" endtime="20201112 12:42:30.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.907" endtime="20201112 12:42:31.193"></status>
</kw>
<msg timestamp="20201112 12:42:31.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020240222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.905" endtime="20201112 12:42:31.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020240222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020343958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.197" endtime="20201112 12:42:31.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.206" endtime="20201112 12:42:31.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.902" endtime="20201112 12:42:31.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.901" endtime="20201112 12:42:31.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.213" level="INFO">${RESULT} = [{'time': 0.020343958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001037360000000001, 'source_diff': 0.0001037360000000001}, {'time': 0.020460986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:31.209" endtime="20201112 12:42:31.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:31.227" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:31.214" endtime="20201112 12:42:31.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.232" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:42:31.231" endtime="20201112 12:42:31.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.235" level="INFO">VALUE: [0.0001037360000000001, 0.0001035420000000016, 0.0001033749999999993, 0.00010323600000000308, 0.00010369500000000087, 0.00010319500000000037, 0.00010490299999999994, 0.00010293100000000055, 0.00010319500000000037, 0.00010326400000000222, 0.0001036940000000014, 0.0001030550000000012, 0.0001035559999999977, 0.00010338899999999887, 0.00010299999999999893, 0.00010338900000000234, 0.00010324999999999918, 0.00010344500000000062, 0.00010327799999999832, 0.00010293100000000055, 0.00010329200000000135, 0.00010307000000000024, 0.00010352700000000256, 0.00010352799999999857, 0.00010306900000000077, 0.00010484700000000166, 0.00010306900000000077, 0.00010483299999999862, 0.00010320800000000047, 0.00010370800000000097, 0.00010315300000000166, 0.00010298599999999936, 0.00010325000000000265, 0.00010377699999999934, 0.00010377699999999934, 0.00010365300000000216, 0.0001032359999999996, 0.00010297199999999979, 0.0001033749999999993, 0.0001033749999999993, 0.00010355600000000117, 0.00010316700000000123, 0.00010326399999999875, 0.00010344500000000062, 0.00010330599999999746, 0.00010370800000000097, 0.00010334700000000016, 0.00010352699999999909, 0.00010491699999999951, 0.00010301400000000197]</msg>
<status status="PASS" starttime="20201112 12:42:31.233" endtime="20201112 12:42:31.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.228" endtime="20201112 12:42:31.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.238" endtime="20201112 12:42:31.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.242" endtime="20201112 12:42:31.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.240" endtime="20201112 12:42:31.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.237" endtime="20201112 12:42:31.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.863" endtime="20201112 12:42:31.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.862" endtime="20201112 12:42:31.263"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.272" endtime="20201112 12:42:31.293"></status>
</kw>
<msg timestamp="20201112 12:42:31.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.271" endtime="20201112 12:42:31.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.295" endtime="20201112 12:42:31.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.298" endtime="20201112 12:42:31.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.268" endtime="20201112 12:42:31.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.266" endtime="20201112 12:42:31.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.308" endtime="20201112 12:42:31.594"></status>
</kw>
<msg timestamp="20201112 12:42:31.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.307" endtime="20201112 12:42:31.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020371069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.598" endtime="20201112 12:42:31.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.607" endtime="20201112 12:42:31.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.304" endtime="20201112 12:42:31.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.302" endtime="20201112 12:42:31.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.614" level="INFO">${RESULT} = [{'time': 0.020475222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010415300000000266, 'source_diff': 0.00010415300000000266}, {'time': 0.020593236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:31.610" endtime="20201112 12:42:31.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:31.627" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:31.615" endtime="20201112 12:42:31.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.632" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:42:31.631" endtime="20201112 12:42:31.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.635" level="INFO">VALUE: [0.00010415300000000266, 0.00010481900000000252, 0.00010584699999999919, 0.00010452700000000009, 0.00010447200000000129, 0.00010430599999999846, 0.00010397300000000026, 0.00010588900000000137, 0.00010422200000000104, 0.00010420800000000147, 0.00010398600000000036, 0.00010590200000000147, 0.00010465299999999969, 0.00010458299999999837, 0.00010462500000000055, 0.00010583299999999962, 0.00010441699999999901, 0.00010588900000000137, 0.00010584800000000213, 0.00010584799999999867, 0.00010397200000000079, 0.0001043750000000003, 0.00010444399999999868, 0.00010475000000000068, 0.00010408300000000134, 0.00010445800000000172, 0.00010422200000000104, 0.00010443099999999858, 0.0001041949999999979, 0.00010472300000000101, 0.0001058889999999979, 0.00010411099999999701, 0.00010454099999999966, 0.0001043750000000003, 0.00010456900000000227, 0.0001040139999999995, 0.0001040420000000021, 0.0001058889999999979, 0.00010440299999999944, 0.00010588900000000137, 0.00010401300000000002, 0.00010590299999999747, 0.00010468099999999883, 0.00010472300000000101, 0.00010477699999999687, 0.0001045689999999988, 0.00010412500000000005, 0.00010458299999999837, 0.0001042360000000006, 0.00010448600000000086]</msg>
<status status="PASS" starttime="20201112 12:42:31.633" endtime="20201112 12:42:31.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.628" endtime="20201112 12:42:31.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.638" endtime="20201112 12:42:31.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.642" endtime="20201112 12:42:31.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.641" endtime="20201112 12:42:31.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.637" endtime="20201112 12:42:31.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.264" endtime="20201112 12:42:31.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.263" endtime="20201112 12:42:31.663"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.672" endtime="20201112 12:42:31.691"></status>
</kw>
<msg timestamp="20201112 12:42:31.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.671" endtime="20201112 12:42:31.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.693" endtime="20201112 12:42:31.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.696" endtime="20201112 12:42:31.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.668" endtime="20201112 12:42:31.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.666" endtime="20201112 12:42:31.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.706" endtime="20201112 12:42:31.993"></status>
</kw>
<msg timestamp="20201112 12:42:31.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020415583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.704" endtime="20201112 12:42:31.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020310333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020415583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.998" endtime="20201112 12:42:32.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.006" endtime="20201112 12:42:32.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.702" endtime="20201112 12:42:32.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.700" endtime="20201112 12:42:32.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.013" level="INFO">${RESULT} = [{'time': 0.020415583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010525000000000118, 'source_diff': 0.00010525000000000118}, {'time': 0.020534597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:32.010" endtime="20201112 12:42:32.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.026" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:32.014" endtime="20201112 12:42:32.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.031" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.030" endtime="20201112 12:42:32.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.034" level="INFO">VALUE: [0.00010525000000000118, 0.0001050140000000005, 0.00010686099999999976, 0.00010495799999999875, 0.0001051940000000029, 0.0001055279999999971, 0.0001052360000000016, 0.00010538900000000087, 0.00010515300000000019, 0.00010552700000000109, 0.00010495799999999875, 0.0001068750000000028, 0.00010581900000000005, 0.00010527800000000032, 0.00010676399999999878, 0.00010493099999999908, 0.0001058339999999991, 0.00010682000000000053, 0.0001055279999999971, 0.00010511099999999801, 0.00010534699999999869, 0.00010565199999999775, 0.00010569399999999993, 0.0001050689999999993, 0.00010537499999999783, 0.00010552800000000057, 0.00010563899999999765, 0.00010579199999999692, 0.00010581999999999953, 0.00010525000000000118, 0.00010552800000000057, 0.00010576400000000125, 0.00010497199999999832, 0.00010580599999999996, 0.00010550000000000143, 0.0001052360000000016, 0.00010576400000000125, 0.00010548599999999839, 0.00010502800000000007, 0.00010495799999999875, 0.00010550000000000143, 0.00010691700000000151, 0.00010556999999999928, 0.0001068340000000001, 0.00010520800000000247, 0.000106901999999999, 0.0001068889999999989, 0.00010502800000000007, 0.00010494399999999918, 0.0001055689999999998]</msg>
<status status="PASS" starttime="20201112 12:42:32.032" endtime="20201112 12:42:32.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.027" endtime="20201112 12:42:32.035"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.037" endtime="20201112 12:42:32.039"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.041" endtime="20201112 12:42:32.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.040" endtime="20201112 12:42:32.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.036" endtime="20201112 12:42:32.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.664" endtime="20201112 12:42:32.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.663" endtime="20201112 12:42:32.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.018" endtime="20201112 12:42:32.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.067" endtime="20201112 12:42:32.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.065" endtime="20201112 12:42:32.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.064" endtime="20201112 12:42:32.087"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:51.932" endtime="20201112 12:42:32.088" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.096" endtime="20201112 12:42:32.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.094" endtime="20201112 12:42:32.116"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.131" endtime="20201112 12:42:32.147"></status>
</kw>
<msg timestamp="20201112 12:42:32.147" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.129" endtime="20201112 12:42:32.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.150" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.148" endtime="20201112 12:42:32.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.153" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:32.151" endtime="20201112 12:42:32.153"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:32.126" endtime="20201112 12:42:32.154"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:32.124" endtime="20201112 12:42:32.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.122" endtime="20201112 12:42:32.155"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:32.159" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:32.158" endtime="20201112 12:42:32.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.156" endtime="20201112 12:42:32.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.121" endtime="20201112 12:42:32.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.120" endtime="20201112 12:42:32.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.161" endtime="20201112 12:42:32.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.119" endtime="20201112 12:42:32.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.117" endtime="20201112 12:42:32.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.093" endtime="20201112 12:42:32.163"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.174" endtime="20201112 12:42:32.192"></status>
</kw>
<msg timestamp="20201112 12:42:32.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.172" endtime="20201112 12:42:32.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.193" endtime="20201112 12:42:32.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.196" endtime="20201112 12:42:32.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.170" endtime="20201112 12:42:32.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.167" endtime="20201112 12:42:32.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.208" endtime="20201112 12:42:32.492"></status>
</kw>
<msg timestamp="20201112 12:42:32.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069007514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069030403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.205" endtime="20201112 12:42:32.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069007514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069030403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.496" endtime="20201112 12:42:32.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.505" endtime="20201112 12:42:32.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.202" endtime="20201112 12:42:32.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.200" endtime="20201112 12:42:32.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.512" level="INFO">${RESULT} = [{'time': 0.069030403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.288899999999816e-05, 'source_diff': 2.288899999999816e-05}, {'time': 0.0690405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:32.508" endtime="20201112 12:42:32.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.525" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:32.513" endtime="20201112 12:42:32.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.530" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.529" endtime="20201112 12:42:32.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.533" level="INFO">VALUE: [2.288899999999816e-05, 5.667000000000866e-06, 5.639000000001726e-06, 5.097000000009455e-06, 5.097000000009455e-06, 5.583000000003446e-06, 5.096999999995577e-06, 5.624999999995217e-06, 5.570000000010289e-06, 5.611000000002586e-06, 5.083000000002946e-06, 5.596999999996077e-06, 5.097999999995051e-06, 5.583000000003446e-06, 6.096999999996577e-06, 5.569000000010815e-06, 5.583000000003446e-06, 5.611000000002586e-06, 5.597000000009955e-06, 5.096999999995577e-06, 5.597000000009955e-06, 5.097000000009455e-06, 5.125000000008595e-06, 5.0139999999976315e-06, 5.597999999995551e-06, 5.610999999988708e-06, 5.597000000009955e-06, 5.0829999999890685e-06, 5.598000000009429e-06, 5.097999999995051e-06, 5.598000000009429e-06, 5.124999999994717e-06, 5.583000000003446e-06, 5.596999999996077e-06, 5.11200000000156e-06, 5.08400000000242e-06, 5.681000000007375e-06, 5.596999999996077e-06, 5.083000000002946e-06, 5.596999999996077e-06, 5.596999999996077e-06, 5.040999999997298e-06, 5.0829999999890685e-06, 5.611000000002586e-06, 5.097000000009455e-06, 5.597000000009955e-06, 6.0829999999900686e-06, 5.597000000009955e-06, 5.097000000009455e-06, 5.096999999995577e-06]</msg>
<status status="PASS" starttime="20201112 12:42:32.531" endtime="20201112 12:42:32.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.526" endtime="20201112 12:42:32.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.536" endtime="20201112 12:42:32.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.540" endtime="20201112 12:42:32.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.538" endtime="20201112 12:42:32.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.534" endtime="20201112 12:42:32.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.166" endtime="20201112 12:42:32.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.165" endtime="20201112 12:42:32.561"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.570" endtime="20201112 12:42:32.588"></status>
</kw>
<msg timestamp="20201112 12:42:32.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.568" endtime="20201112 12:42:32.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.590" endtime="20201112 12:42:32.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.593" endtime="20201112 12:42:32.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.566" endtime="20201112 12:42:32.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.563" endtime="20201112 12:42:32.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.602" endtime="20201112 12:42:32.888"></status>
</kw>
<msg timestamp="20201112 12:42:32.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020796389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020802986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.601" endtime="20201112 12:42:32.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020796389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020802986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.892" endtime="20201112 12:42:32.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.901" endtime="20201112 12:42:32.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.598" endtime="20201112 12:42:32.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.596" endtime="20201112 12:42:32.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.908" level="INFO">${RESULT} = [{'time': 0.020802986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.597000000000547e-06, 'source_diff': 6.597000000000547e-06}, {'time': 0.020813722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:32.904" endtime="20201112 12:42:32.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.922" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:32.909" endtime="20201112 12:42:32.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.926" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.925" endtime="20201112 12:42:32.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.929" level="INFO">VALUE: [6.597000000000547e-06, 6.597000000000547e-06, 6.5969999999970774e-06, 6.5969999999970774e-06, 6.611000000000117e-06, 6.0979999999995205e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.124999999999187e-06, 6.597000000000547e-06, 6.667000000001866e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.638999999999257e-06, 6.651999999999353e-06, 6.097000000000047e-06, 6.0979999999995205e-06, 6.5980000000000205e-06, 6.597000000000547e-06, 6.5969999999970774e-06, 6.597000000000547e-06, 7.153000000002796e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.556000000001311e-06, 7.167000000002366e-06, 6.624999999999687e-06, 6.624999999999687e-06, 6.597000000000547e-06, 6.624999999999687e-06, 6.0979999999995205e-06, 7.1120000000000905e-06, 6.110999999999617e-06, 6.083000000000477e-06, 7.125000000000187e-06, 6.125000000002656e-06, 6.5980000000000205e-06, 6.097000000000047e-06, 7.110999999997147e-06, 6.611000000000117e-06, 6.584000000000451e-06, 6.61200000000306e-06, 6.097000000000047e-06, 6.597000000000547e-06, 6.597000000000547e-06, 6.6669999999983964e-06, 6.0839999999999506e-06, 6.0839999999999506e-06]</msg>
<status status="PASS" starttime="20201112 12:42:32.927" endtime="20201112 12:42:32.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.923" endtime="20201112 12:42:32.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.932" endtime="20201112 12:42:32.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.936" endtime="20201112 12:42:32.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.935" endtime="20201112 12:42:32.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.931" endtime="20201112 12:42:32.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.562" endtime="20201112 12:42:32.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.561" endtime="20201112 12:42:32.957"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.966" endtime="20201112 12:42:32.983"></status>
</kw>
<msg timestamp="20201112 12:42:32.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.965" endtime="20201112 12:42:32.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.984" endtime="20201112 12:42:32.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.987" endtime="20201112 12:42:32.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.962" endtime="20201112 12:42:32.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.960" endtime="20201112 12:42:32.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.996" endtime="20201112 12:42:33.286"></status>
</kw>
<msg timestamp="20201112 12:42:33.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.995" endtime="20201112 12:42:33.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020286014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020293611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.291" endtime="20201112 12:42:33.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.299" endtime="20201112 12:42:33.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.992" endtime="20201112 12:42:33.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.990" endtime="20201112 12:42:33.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.306" level="INFO">${RESULT} = [{'time': 0.020293611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.020304681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:33.303" endtime="20201112 12:42:33.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:33.320" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:33.307" endtime="20201112 12:42:33.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.325" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:42:33.324" endtime="20201112 12:42:33.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.327" level="INFO">VALUE: [7.5969999999980775e-06, 7.584000000001451e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.0980000000005206e-06, 7.124999999996717e-06, 7.125000000000187e-06, 7.110999999997147e-06, 7.583000000001977e-06, 8.096999999998578e-06, 7.0419999999987715e-06, 7.584000000001451e-06, 7.084000000000951e-06, 7.111000000000617e-06, 7.611000000001117e-06, 7.5969999999980775e-06, 7.1120000000000905e-06, 7.054999999998868e-06, 7.611000000001117e-06, 7.097000000001047e-06, 7.0969999999975775e-06, 7.6109999999976474e-06, 7.1120000000000905e-06, 7.111000000000617e-06, 7.0969999999975775e-06, 8.096999999998578e-06, 7.0969999999975775e-06, 7.6109999999976474e-06, 7.598000000001021e-06, 7.5969999999980775e-06, 7.597000000001547e-06, 7.111000000000617e-06, 7.693999999999063e-06, 7.097000000001047e-06, 7.111000000000617e-06, 7.597000000001547e-06, 7.5969999999980775e-06, 7.1529999999993266e-06, 8.11200000000109e-06, 7.570000000001881e-06, 8.082999999999008e-06, 7.582999999998508e-06, 7.097000000001047e-06, 7.584000000001451e-06, 7.1120000000000905e-06, 7.597000000001547e-06, 7.652999999999827e-06, 7.125000000000187e-06, 7.514000000000132e-06, 7.597999999997551e-06]</msg>
<status status="PASS" starttime="20201112 12:42:33.326" endtime="20201112 12:42:33.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.321" endtime="20201112 12:42:33.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.331" endtime="20201112 12:42:33.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.335" endtime="20201112 12:42:33.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.333" endtime="20201112 12:42:33.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.329" endtime="20201112 12:42:33.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.958" endtime="20201112 12:42:33.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.958" endtime="20201112 12:42:33.356"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.365" endtime="20201112 12:42:33.383"></status>
</kw>
<msg timestamp="20201112 12:42:33.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.363" endtime="20201112 12:42:33.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.384" endtime="20201112 12:42:33.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.387" endtime="20201112 12:42:33.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.360" endtime="20201112 12:42:33.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.358" endtime="20201112 12:42:33.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.396" endtime="20201112 12:42:33.686"></status>
</kw>
<msg timestamp="20201112 12:42:33.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.395" endtime="20201112 12:42:33.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.691" endtime="20201112 12:42:33.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.699" endtime="20201112 12:42:33.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.392" endtime="20201112 12:42:33.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.390" endtime="20201112 12:42:33.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.706" level="INFO">${RESULT} = [{'time': 0.020458694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.020469625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:33.703" endtime="20201112 12:42:33.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:33.720" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:33.707" endtime="20201112 12:42:33.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.725" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:42:33.724" endtime="20201112 12:42:33.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.727" level="INFO">VALUE: [8.041000000000298e-06, 8.097000000002047e-06, 8.652999999997357e-06, 8.09800000000152e-06, 8.639000000001257e-06, 8.611000000002117e-06, 8.096999999998578e-06, 8.096999999998578e-06, 8.610999999998648e-06, 8.666999999996927e-06, 8.610999999998648e-06, 8.097000000002047e-06, 8.083000000002477e-06, 8.582999999999508e-06, 8.582999999999508e-06, 8.082999999999008e-06, 8.138999999997287e-06, 8.111000000001617e-06, 8.111000000001617e-06, 8.59800000000202e-06, 8.610999999998648e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.097999999998051e-06, 8.597000000002547e-06, 8.610999999998648e-06, 8.625000000001687e-06, 8.125000000001187e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.61200000000159e-06, 8.110999999998147e-06, 9.096999999999578e-06, 8.582999999999508e-06, 8.597000000002547e-06, 8.555000000000368e-06, 8.125000000001187e-06, 8.596999999999078e-06, 8.097000000002047e-06, 8.611000000002117e-06, 9.096999999999578e-06, 8.153000000000327e-06, 8.555999999999842e-06, 8.152000000000853e-06, 8.110999999998147e-06, 8.583999999998981e-06, 8.110999999998147e-06, 8.59800000000202e-06, 8.596999999999078e-06, 9.110999999999148e-06]</msg>
<status status="PASS" starttime="20201112 12:42:33.726" endtime="20201112 12:42:33.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.721" endtime="20201112 12:42:33.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.731" endtime="20201112 12:42:33.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.735" endtime="20201112 12:42:33.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.733" endtime="20201112 12:42:33.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.729" endtime="20201112 12:42:33.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.356" endtime="20201112 12:42:33.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.356" endtime="20201112 12:42:33.756"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.765" endtime="20201112 12:42:33.783"></status>
</kw>
<msg timestamp="20201112 12:42:33.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.763" endtime="20201112 12:42:33.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.785" endtime="20201112 12:42:33.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.787" endtime="20201112 12:42:33.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.761" endtime="20201112 12:42:33.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.758" endtime="20201112 12:42:33.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.797" endtime="20201112 12:42:34.085"></status>
</kw>
<msg timestamp="20201112 12:42:34.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020591194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02060025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:33.795" endtime="20201112 12:42:34.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020591194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02060025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:34.090" endtime="20201112 12:42:34.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.098" endtime="20201112 12:42:34.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.793" endtime="20201112 12:42:34.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.791" endtime="20201112 12:42:34.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.105" level="INFO">${RESULT} = [{'time': 0.02060025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.020612264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:34.102" endtime="20201112 12:42:34.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.119" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:34.106" endtime="20201112 12:42:34.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.124" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.123" endtime="20201112 12:42:34.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.127" level="INFO">VALUE: [9.056000000000342e-06, 9.111000000002617e-06, 9.597999999999551e-06, 9.597000000000078e-06, 9.096999999999578e-06, 9.096999999999578e-06, 1.0084000000000481e-05, 9.096999999999578e-06, 9.083999999999481e-06, 9.597000000000078e-06, 9.597000000000078e-06, 9.09800000000252e-06, 1.0111999999999621e-05, 9.610999999999648e-06, 9.124999999998717e-06, 9.583000000000508e-06, 9.096999999999578e-06, 9.597999999999551e-06, 9.597000000000078e-06, 1.0111999999999621e-05, 9.096999999999578e-06, 9.096999999999578e-06, 9.110999999999148e-06, 9.097999999999051e-06, 9.096999999999578e-06, 9.125000000002187e-06, 9.583000000000508e-06, 9.541000000001798e-06, 9.653000000001827e-06, 9.61200000000259e-06, 9.110999999999148e-06, 9.151999999998384e-06, 9.667000000001397e-06, 9.110999999999148e-06, 9.124999999998717e-06, 1.0055999999997872e-05, 1.0082999999997538e-05, 9.096999999999578e-06, 9.624999999999218e-06, 9.652999999998357e-06, 9.569999999996942e-06, 9.597000000000078e-06, 9.597000000000078e-06, 1.0111000000000148e-05, 9.069000000000438e-06, 9.097999999999051e-06, 9.110999999999148e-06, 9.096999999999578e-06, 9.055000000000868e-06, 9.096999999999578e-06]</msg>
<status status="PASS" starttime="20201112 12:42:34.125" endtime="20201112 12:42:34.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.120" endtime="20201112 12:42:34.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.130" endtime="20201112 12:42:34.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.134" endtime="20201112 12:42:34.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.132" endtime="20201112 12:42:34.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.129" endtime="20201112 12:42:34.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.757" endtime="20201112 12:42:34.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.756" endtime="20201112 12:42:34.155"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.164" endtime="20201112 12:42:34.182"></status>
</kw>
<msg timestamp="20201112 12:42:34.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.163" endtime="20201112 12:42:34.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.184" endtime="20201112 12:42:34.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.186" endtime="20201112 12:42:34.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.160" endtime="20201112 12:42:34.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.158" endtime="20201112 12:42:34.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.196" endtime="20201112 12:42:34.484"></status>
</kw>
<msg timestamp="20201112 12:42:34.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020430847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.194" endtime="20201112 12:42:34.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020430847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.489" endtime="20201112 12:42:34.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.497" endtime="20201112 12:42:34.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.191" endtime="20201112 12:42:34.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.190" endtime="20201112 12:42:34.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.504" level="INFO">${RESULT} = [{'time': 0.020441458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.020455333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:34.501" endtime="20201112 12:42:34.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.564" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:34.505" endtime="20201112 12:42:34.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.568" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.567" endtime="20201112 12:42:34.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.571" level="INFO">VALUE: [1.0611000000000648e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0598000000000551e-05, 1.1125000000000718e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.0542000000002272e-05, 1.0097000000000578e-05, 1.0610999999997178e-05, 1.0111000000000148e-05, 1.0040999999998829e-05, 1.0610999999997178e-05, 1.0611000000000648e-05, 1.0542000000002272e-05, 1.0597000000001078e-05, 1.0597000000001078e-05, 1.0111000000000148e-05, 1.0681000000001967e-05, 1.1096999999998108e-05, 1.0111000000000148e-05, 1.0596999999997608e-05, 1.0582999999998038e-05, 1.0582999999998038e-05, 1.0597000000001078e-05, 1.1124999999997248e-05, 1.0611000000000648e-05, 1.0110999999996678e-05, 1.0597000000001078e-05, 1.0054999999998399e-05, 1.0596999999997608e-05, 1.0625000000000218e-05, 1.0597000000001078e-05, 1.0583000000001508e-05, 1.0097000000000578e-05, 1.0652999999999357e-05, 1.0096999999997108e-05, 1.0167000000001897e-05, 1.0611000000000648e-05, 1.0555000000002368e-05, 1.0596999999997608e-05, 1.0596999999997608e-05, 1.0084000000000481e-05, 1.0582999999998038e-05, 1.0111000000000148e-05, 1.1083000000002008e-05, 1.0111000000000148e-05, 1.0612000000000121e-05, 1.0042000000001772e-05, 1.0597000000001078e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.570" endtime="20201112 12:42:34.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.565" endtime="20201112 12:42:34.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.581" endtime="20201112 12:42:34.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.584" endtime="20201112 12:42:34.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.583" endtime="20201112 12:42:34.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.579" endtime="20201112 12:42:34.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.156" endtime="20201112 12:42:34.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.155" endtime="20201112 12:42:34.605"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.615" endtime="20201112 12:42:34.632"></status>
</kw>
<msg timestamp="20201112 12:42:34.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.613" endtime="20201112 12:42:34.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.634" endtime="20201112 12:42:34.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.636" endtime="20201112 12:42:34.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.610" endtime="20201112 12:42:34.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.608" endtime="20201112 12:42:34.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.646" endtime="20201112 12:42:34.932"></status>
</kw>
<msg timestamp="20201112 12:42:34.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020976694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020987792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.644" endtime="20201112 12:42:34.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020976694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020987792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.936" endtime="20201112 12:42:34.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.945" endtime="20201112 12:42:34.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.642" endtime="20201112 12:42:34.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.640" endtime="20201112 12:42:34.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.952" level="INFO">${RESULT} = [{'time': 0.020987792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1098000000001051e-05, 'source_diff': 1.1098000000001051e-05}, {'time': 0.021003972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:34.948" endtime="20201112 12:42:34.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:34.953" endtime="20201112 12:42:34.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.970" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.969" endtime="20201112 12:42:34.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.973" level="INFO">VALUE: [1.1098000000001051e-05, 1.1596999999998608e-05, 1.1596999999998608e-05, 1.2125000000001718e-05, 1.1597000000002078e-05, 1.1582999999999039e-05, 1.1096999999998108e-05, 1.1637999999997845e-05, 1.1138999999996818e-05, 1.1610999999998178e-05, 1.1098000000001051e-05, 1.2096999999999108e-05, 1.1111000000001148e-05, 1.1610999999998178e-05, 1.1597000000002078e-05, 1.1611000000001648e-05, 1.1541999999999802e-05, 1.1569999999998942e-05, 1.1597000000002078e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.1110999999997678e-05, 1.1124999999997248e-05, 1.1612000000001121e-05, 1.1070000000001912e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.1611000000001648e-05, 1.1596999999998608e-05, 1.1110999999997678e-05, 1.1582999999999039e-05, 1.1611000000001648e-05, 1.1096999999998108e-05, 1.1096999999998108e-05, 1.1598000000001552e-05, 1.1096999999998108e-05, 1.1582999999999039e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1097000000001578e-05, 1.1068999999998969e-05, 1.1097000000001578e-05, 1.1082999999998538e-05, 1.2096999999999108e-05, 1.1098000000001051e-05, 1.1583000000002508e-05, 1.1597000000002078e-05, 1.1597000000002078e-05, 1.1096999999998108e-05, 1.1110999999997678e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.971" endtime="20201112 12:42:34.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.967" endtime="20201112 12:42:34.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.977" endtime="20201112 12:42:34.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.980" endtime="20201112 12:42:35.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.979" endtime="20201112 12:42:35.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.975" endtime="20201112 12:42:35.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.606" endtime="20201112 12:42:35.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.606" endtime="20201112 12:42:35.001"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.011" endtime="20201112 12:42:35.028"></status>
</kw>
<msg timestamp="20201112 12:42:35.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.009" endtime="20201112 12:42:35.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.030" endtime="20201112 12:42:35.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.032" endtime="20201112 12:42:35.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.006" endtime="20201112 12:42:35.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.004" endtime="20201112 12:42:35.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.042" endtime="20201112 12:42:35.327"></status>
</kw>
<msg timestamp="20201112 12:42:35.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021431319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021443431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.040" endtime="20201112 12:42:35.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021431319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021443431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.331" endtime="20201112 12:42:35.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.340" endtime="20201112 12:42:35.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.037" endtime="20201112 12:42:35.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.035" endtime="20201112 12:42:35.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.347" level="INFO">${RESULT} = [{'time': 0.021443431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2111999999998152e-05, 'source_diff': 1.2111999999998152e-05}, {'time': 0.021460472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:35.343" endtime="20201112 12:42:35.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:35.361" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:35.348" endtime="20201112 12:42:35.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.365" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:42:35.364" endtime="20201112 12:42:35.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.368" level="INFO">VALUE: [1.2111999999998152e-05, 1.2097000000002578e-05, 1.2625000000002218e-05, 1.2611000000002648e-05, 1.2583000000000039e-05, 1.2082999999999539e-05, 1.2597999999999082e-05, 1.2624999999998748e-05, 1.2083999999999012e-05, 1.2125000000001718e-05, 1.2097000000002578e-05, 1.2111000000002148e-05, 1.2597999999999082e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2597000000003078e-05, 1.2569000000000469e-05, 1.2111000000002148e-05, 1.2555000000000899e-05, 1.2625000000002218e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2083999999999012e-05, 1.2598000000002552e-05, 1.2610999999999178e-05, 1.2556000000000372e-05, 1.2096999999999108e-05, 1.2110999999998678e-05, 1.2096999999999108e-05, 1.2583999999999512e-05, 1.2096999999999108e-05, 1.2598000000002552e-05, 1.2596999999999609e-05, 1.2625000000002218e-05, 1.2583999999999512e-05, 1.3028000000001733e-05, 1.2110999999998678e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2556000000000372e-05, 1.2098000000002052e-05, 1.2611000000002648e-05, 1.2596999999999609e-05, 1.2096999999999108e-05, 1.2096999999999108e-05, 1.2583999999999512e-05, 1.2084000000002482e-05, 1.2610999999999178e-05, 1.2110999999998678e-05, 1.2583000000000039e-05]</msg>
<status status="PASS" starttime="20201112 12:42:35.367" endtime="20201112 12:42:35.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.362" endtime="20201112 12:42:35.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.372" endtime="20201112 12:42:35.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.375" endtime="20201112 12:42:35.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.374" endtime="20201112 12:42:35.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.370" endtime="20201112 12:42:35.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.002" endtime="20201112 12:42:35.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.002" endtime="20201112 12:42:35.396"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.405" endtime="20201112 12:42:35.424"></status>
</kw>
<msg timestamp="20201112 12:42:35.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.404" endtime="20201112 12:42:35.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.426" endtime="20201112 12:42:35.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.428" endtime="20201112 12:42:35.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.401" endtime="20201112 12:42:35.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.399" endtime="20201112 12:42:35.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.438" endtime="20201112 12:42:35.723"></status>
</kw>
<msg timestamp="20201112 12:42:35.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021155597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.436" endtime="20201112 12:42:35.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021155597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021168681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.728" endtime="20201112 12:42:35.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.736" endtime="20201112 12:42:35.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.434" endtime="20201112 12:42:35.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.432" endtime="20201112 12:42:35.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.743" level="INFO">${RESULT} = [{'time': 0.021168681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3084000000000012e-05, 'source_diff': 1.3084000000000012e-05}, {'time': 0.02118475, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:35.740" endtime="20201112 12:42:35.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:35.757" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:35.744" endtime="20201112 12:42:35.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.762" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:42:35.761" endtime="20201112 12:42:35.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.765" level="INFO">VALUE: [1.3084000000000012e-05, 1.358299999999757e-05, 1.3679999999998554e-05, 1.3665999999998985e-05, 1.3624999999999748e-05, 1.4098000000000582e-05, 1.3542000000001803e-05, 1.358299999999757e-05, 1.3097000000000109e-05, 1.3124999999999248e-05, 1.3583000000001039e-05, 1.3652999999998888e-05, 1.4098000000000582e-05, 1.3097000000000109e-05, 1.3570000000000942e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.3596999999997139e-05, 1.4042000000002303e-05, 1.3125000000002718e-05, 1.3110999999999678e-05, 1.3652999999998888e-05, 1.3097000000000109e-05, 1.3083000000000539e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.3596999999997139e-05, 1.3110999999999678e-05, 1.3110999999999678e-05, 1.3098000000003052e-05, 1.3611000000000179e-05, 1.3638999999999318e-05, 1.3125000000002718e-05, 1.409699999999764e-05, 1.3097999999999582e-05, 1.3611000000000179e-05, 1.3097000000000109e-05, 1.3097000000000109e-05, 1.3611000000000179e-05, 1.3598000000000082e-05, 1.3097999999999582e-05, 1.3097000000000109e-05, 1.3097000000000109e-05, 1.358299999999757e-05, 1.3583000000001039e-05, 1.3097999999999582e-05, 1.3097999999999582e-05, 1.3138000000002814e-05, 1.3597000000000609e-05, 1.3611000000000179e-05]</msg>
<status status="PASS" starttime="20201112 12:42:35.763" endtime="20201112 12:42:35.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.758" endtime="20201112 12:42:35.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.768" endtime="20201112 12:42:35.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.772" endtime="20201112 12:42:35.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.770" endtime="20201112 12:42:35.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.767" endtime="20201112 12:42:35.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.397" endtime="20201112 12:42:35.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.397" endtime="20201112 12:42:35.793"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.802" endtime="20201112 12:42:35.820"></status>
</kw>
<msg timestamp="20201112 12:42:35.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.800" endtime="20201112 12:42:35.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.821" endtime="20201112 12:42:35.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.824" endtime="20201112 12:42:35.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.798" endtime="20201112 12:42:35.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.795" endtime="20201112 12:42:35.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.833" endtime="20201112 12:42:36.119"></status>
</kw>
<msg timestamp="20201112 12:42:36.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:35.832" endtime="20201112 12:42:36.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:36.123" endtime="20201112 12:42:36.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.132" endtime="20201112 12:42:36.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.829" endtime="20201112 12:42:36.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.827" endtime="20201112 12:42:36.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.139" level="INFO">${RESULT} = [{'time': 0.020495083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4583000000002039e-05, 'source_diff': 1.4583000000002039e-05}, {'time': 0.020513444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:36.135" endtime="20201112 12:42:36.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.154" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:36.140" endtime="20201112 12:42:36.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.159" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.157" endtime="20201112 12:42:36.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.161" level="INFO">VALUE: [1.4583000000002039e-05, 1.405499999999893e-05, 1.4598000000001082e-05, 1.4584000000001512e-05, 1.4652999999999888e-05, 1.409699999999764e-05, 1.4111000000000679e-05, 1.4597000000001609e-05, 1.458299999999857e-05, 1.459699999999814e-05, 1.409699999999764e-05, 1.459699999999814e-05, 1.4111000000000679e-05, 1.4597000000001609e-05, 1.5125000000001249e-05, 1.4584000000001512e-05, 1.4625000000000749e-05, 1.4097000000001109e-05, 1.4597000000001609e-05, 1.4111000000000679e-05, 1.458299999999857e-05, 1.4097000000001109e-05, 1.409699999999764e-05, 1.4611000000001179e-05, 1.4069000000001969e-05, 1.4125000000000248e-05, 1.4069999999997973e-05, 1.4111000000000679e-05, 1.4625000000000749e-05, 1.40689999999985e-05, 1.4111000000000679e-05, 1.4652999999999888e-05, 1.4597000000001609e-05, 1.4597000000001609e-05, 1.461099999999771e-05, 1.4083000000001539e-05, 1.4625000000000749e-05, 1.4125000000000248e-05, 1.4597000000001609e-05, 1.4111000000000679e-05, 1.4611000000001179e-05, 1.4111000000000679e-05, 1.4056000000001873e-05, 1.4611000000001179e-05, 1.4598000000001082e-05, 1.508299999999907e-05, 1.4125000000000248e-05, 1.4611000000001179e-05, 1.461099999999771e-05, 1.4097000000001109e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.160" endtime="20201112 12:42:36.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.155" endtime="20201112 12:42:36.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.165" endtime="20201112 12:42:36.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.169" endtime="20201112 12:42:36.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.167" endtime="20201112 12:42:36.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.163" endtime="20201112 12:42:36.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.794" endtime="20201112 12:42:36.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.793" endtime="20201112 12:42:36.190"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.199" endtime="20201112 12:42:36.217"></status>
</kw>
<msg timestamp="20201112 12:42:36.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.197" endtime="20201112 12:42:36.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.219" endtime="20201112 12:42:36.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.221" endtime="20201112 12:42:36.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.194" endtime="20201112 12:42:36.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.192" endtime="20201112 12:42:36.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.232" endtime="20201112 12:42:36.520"></status>
</kw>
<msg timestamp="20201112 12:42:36.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020461014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.230" endtime="20201112 12:42:36.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020461014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.524" endtime="20201112 12:42:36.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.533" endtime="20201112 12:42:36.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.227" endtime="20201112 12:42:36.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.226" endtime="20201112 12:42:36.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.540" level="INFO">${RESULT} = [{'time': 0.020476111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5097000000002109e-05, 'source_diff': 1.5097000000002109e-05}, {'time': 0.020493792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:36.536" endtime="20201112 12:42:36.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.553" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:36.541" endtime="20201112 12:42:36.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.558" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.557" endtime="20201112 12:42:36.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.561" level="INFO">VALUE: [1.5097000000002109e-05, 1.5098000000001582e-05, 1.5125000000001249e-05, 1.559699999999914e-05, 1.561099999999871e-05, 1.559700000000261e-05, 1.612499999999878e-05, 1.5097999999998113e-05, 1.5069999999998973e-05, 1.508299999999907e-05, 1.508299999999907e-05, 1.559700000000261e-05, 1.561100000000218e-05, 1.508299999999907e-05, 1.561099999999871e-05, 1.558299999999957e-05, 1.559699999999914e-05, 1.562500000000175e-05, 1.559699999999914e-05, 1.559700000000261e-05, 1.5056000000002873e-05, 1.5125000000001249e-05, 1.5666000000000985e-05, 1.5097999999998113e-05, 1.561099999999871e-05, 1.561099999999871e-05, 1.5569e-05, 1.558299999999957e-05, 1.508299999999907e-05, 1.609699999999964e-05, 1.5555999999999903e-05, 1.561099999999871e-05, 1.558299999999957e-05, 1.561100000000218e-05, 1.559699999999914e-05, 1.5098000000001582e-05, 1.511099999999821e-05, 1.5111000000001679e-05, 1.559700000000261e-05, 1.561099999999871e-05, 1.5111000000001679e-05, 1.511099999999821e-05, 1.5097999999998113e-05, 1.509699999999864e-05, 1.559699999999914e-05, 1.559699999999914e-05, 1.5125000000001249e-05, 1.50689999999995e-05, 1.5097999999998113e-05, 1.559699999999914e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.559" endtime="20201112 12:42:36.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.554" endtime="20201112 12:42:36.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.564" endtime="20201112 12:42:36.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.568" endtime="20201112 12:42:36.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.566" endtime="20201112 12:42:36.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.563" endtime="20201112 12:42:36.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.191" endtime="20201112 12:42:36.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.190" endtime="20201112 12:42:36.589"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.598" endtime="20201112 12:42:36.616"></status>
</kw>
<msg timestamp="20201112 12:42:36.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.597" endtime="20201112 12:42:36.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.618" endtime="20201112 12:42:36.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.621" endtime="20201112 12:42:36.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.594" endtime="20201112 12:42:36.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.592" endtime="20201112 12:42:36.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.631" endtime="20201112 12:42:36.918"></status>
</kw>
<msg timestamp="20201112 12:42:36.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020779486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.629" endtime="20201112 12:42:36.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020779486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.922" endtime="20201112 12:42:36.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.931" endtime="20201112 12:42:36.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.627" endtime="20201112 12:42:36.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.625" endtime="20201112 12:42:36.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.938" level="INFO">${RESULT} = [{'time': 0.020779486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.661099999999971e-05, 'source_diff': 1.661099999999971e-05}, {'time': 0.020800403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.934" endtime="20201112 12:42:36.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.951" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:36.939" endtime="20201112 12:42:36.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.956" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.955" endtime="20201112 12:42:36.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.959" level="INFO">VALUE: [1.661099999999971e-05, 1.659700000000014e-05, 1.6556000000000903e-05, 1.661099999999971e-05, 1.609699999999964e-05, 1.659700000000014e-05, 1.6597999999999613e-05, 1.658300000000057e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.65829999999971e-05, 1.663900000000232e-05, 1.662499999999928e-05, 1.611100000000268e-05, 1.6069999999999973e-05, 1.615300000000139e-05, 1.6097999999999113e-05, 1.6111999999998683e-05, 1.659700000000014e-05, 1.661099999999971e-05, 1.60829999999966e-05, 1.715299999999892e-05, 1.661099999999971e-05, 1.609699999999964e-05, 1.6097999999999113e-05, 1.609700000000311e-05, 1.661099999999971e-05, 1.662499999999928e-05, 1.6584000000000043e-05, 1.6612000000002652e-05, 1.608300000000007e-05, 1.609700000000311e-05, 1.611099999999921e-05, 1.663899999999885e-05, 1.6083999999999543e-05, 1.6597999999999613e-05, 1.658300000000057e-05, 1.609699999999964e-05, 1.659700000000014e-05, 1.659700000000014e-05, 1.609699999999964e-05, 1.609700000000311e-05, 1.662499999999928e-05, 1.659700000000014e-05, 1.709700000000064e-05, 1.611099999999921e-05, 1.609700000000311e-05, 1.661099999999971e-05, 1.659700000000014e-05, 1.611099999999921e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.957" endtime="20201112 12:42:36.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.952" endtime="20201112 12:42:36.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.963" endtime="20201112 12:42:36.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.966" endtime="20201112 12:42:36.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.964" endtime="20201112 12:42:36.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.961" endtime="20201112 12:42:36.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.590" endtime="20201112 12:42:36.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.590" endtime="20201112 12:42:36.987"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.996" endtime="20201112 12:42:37.013"></status>
</kw>
<msg timestamp="20201112 12:42:37.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.995" endtime="20201112 12:42:37.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.015" endtime="20201112 12:42:37.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.017" endtime="20201112 12:42:37.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.992" endtime="20201112 12:42:37.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.990" endtime="20201112 12:42:37.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.028" endtime="20201112 12:42:37.315"></status>
</kw>
<msg timestamp="20201112 12:42:37.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.026" endtime="20201112 12:42:37.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020423528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.319" endtime="20201112 12:42:37.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.328" endtime="20201112 12:42:37.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.024" endtime="20201112 12:42:37.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.022" endtime="20201112 12:42:37.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.335" level="INFO">${RESULT} = [{'time': 0.020423528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.711100000000021e-05, 'source_diff': 1.711100000000021e-05}, {'time': 0.020446639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:37.331" endtime="20201112 12:42:37.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.348" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:37.336" endtime="20201112 12:42:37.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.353" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:42:37.352" endtime="20201112 12:42:37.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.356" level="INFO">VALUE: [1.711100000000021e-05, 1.709700000000064e-05, 1.706899999999803e-05, 1.7111999999999683e-05, 1.709700000000064e-05, 1.761100000000071e-05, 1.709700000000064e-05, 1.711100000000021e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.709700000000064e-05, 1.7665999999999515e-05, 1.758300000000157e-05, 1.811100000000121e-05, 1.811100000000121e-05, 1.7098000000000113e-05, 1.75829999999981e-05, 1.709700000000064e-05, 1.75829999999981e-05, 1.809699999999817e-05, 1.711100000000021e-05, 1.7598000000000613e-05, 1.7584000000001043e-05, 1.762500000000028e-05, 1.759700000000114e-05, 1.709700000000064e-05, 1.7598000000000613e-05, 1.7084000000000543e-05, 1.7651999999999946e-05, 1.761100000000071e-05, 1.759699999999767e-05, 1.762500000000028e-05, 1.7042000000001833e-05, 1.711100000000021e-05, 1.7584000000001043e-05, 1.709699999999717e-05, 1.708300000000107e-05, 1.756899999999853e-05, 1.711100000000021e-05, 1.759700000000114e-05, 1.761099999999724e-05, 1.712499999999978e-05, 1.765299999999942e-05, 1.7084000000000543e-05, 1.761100000000071e-05, 1.7098000000000113e-05, 1.709700000000064e-05, 1.761100000000071e-05, 1.761100000000071e-05, 1.711100000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.354" endtime="20201112 12:42:37.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.349" endtime="20201112 12:42:37.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.359" endtime="20201112 12:42:37.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.363" endtime="20201112 12:42:37.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.361" endtime="20201112 12:42:37.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.358" endtime="20201112 12:42:37.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.988" endtime="20201112 12:42:37.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.987" endtime="20201112 12:42:37.384"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.393" endtime="20201112 12:42:37.410"></status>
</kw>
<msg timestamp="20201112 12:42:37.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.392" endtime="20201112 12:42:37.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.412" endtime="20201112 12:42:37.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.414" endtime="20201112 12:42:37.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.389" endtime="20201112 12:42:37.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.387" endtime="20201112 12:42:37.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.425" endtime="20201112 12:42:37.712"></status>
</kw>
<msg timestamp="20201112 12:42:37.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020556125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.423" endtime="20201112 12:42:37.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020556125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.716" endtime="20201112 12:42:37.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.724" endtime="20201112 12:42:37.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.420" endtime="20201112 12:42:37.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.419" endtime="20201112 12:42:37.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.731" level="INFO">${RESULT} = [{'time': 0.020556125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.858300000000257e-05, 'source_diff': 1.858300000000257e-05}, {'time': 0.020578431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:37.728" endtime="20201112 12:42:37.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.746" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:37.732" endtime="20201112 12:42:37.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.751" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:42:37.750" endtime="20201112 12:42:37.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.753" level="INFO">VALUE: [1.858300000000257e-05, 1.8098000000001113e-05, 1.8027999999999794e-05, 1.8583999999998574e-05, 1.809699999999817e-05, 1.861099999999824e-05, 1.861099999999824e-05, 1.859699999999867e-05, 1.863900000000085e-05, 1.859699999999867e-05, 1.862499999999781e-05, 1.859700000000214e-05, 1.913900000000135e-05, 1.909699999999917e-05, 1.8014000000000224e-05, 1.859700000000214e-05, 1.8541999999999864e-05, 1.859699999999867e-05, 1.855499999999996e-05, 1.859699999999867e-05, 1.8528000000000294e-05, 1.861100000000171e-05, 1.809700000000164e-05, 1.861099999999824e-05, 1.80829999999986e-05, 1.8569999999999004e-05, 1.8597999999998144e-05, 1.859699999999867e-05, 1.816699999999949e-05, 1.811100000000121e-05, 1.811100000000121e-05, 1.861100000000171e-05, 1.8598000000001613e-05, 1.855499999999996e-05, 1.90829999999996e-05, 1.862500000000128e-05, 1.808300000000207e-05, 1.862500000000128e-05, 1.809699999999817e-05, 1.809700000000164e-05, 1.8138000000000876e-05, 1.8070000000001973e-05, 1.85829999999991e-05, 1.8584000000002043e-05, 1.8069999999998504e-05, 1.859700000000214e-05, 1.861100000000171e-05, 1.811100000000121e-05, 1.813900000000035e-05, 1.861100000000171e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.752" endtime="20201112 12:42:37.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.747" endtime="20201112 12:42:37.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.757" endtime="20201112 12:42:37.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.761" endtime="20201112 12:42:37.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.759" endtime="20201112 12:42:37.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.756" endtime="20201112 12:42:37.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.385" endtime="20201112 12:42:37.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.384" endtime="20201112 12:42:37.782"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.791" endtime="20201112 12:42:37.808"></status>
</kw>
<msg timestamp="20201112 12:42:37.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.789" endtime="20201112 12:42:37.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.810" endtime="20201112 12:42:37.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.812" endtime="20201112 12:42:37.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.786" endtime="20201112 12:42:37.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.784" endtime="20201112 12:42:37.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.823" endtime="20201112 12:42:38.109"></status>
</kw>
<msg timestamp="20201112 12:42:38.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.821" endtime="20201112 12:42:38.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.114" endtime="20201112 12:42:38.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.122" endtime="20201112 12:42:38.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.818" endtime="20201112 12:42:38.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.816" endtime="20201112 12:42:38.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.129" level="INFO">${RESULT} = [{'time': 0.020395208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.959700000000314e-05, 'source_diff': 1.959700000000314e-05}, {'time': 0.020417264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.126" endtime="20201112 12:42:38.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.143" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:38.130" endtime="20201112 12:42:38.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.148" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.147" endtime="20201112 12:42:38.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.150" level="INFO">VALUE: [1.959700000000314e-05, 1.961099999999924e-05, 2.0097999999999644e-05, 1.9084000000002543e-05, 1.9097999999998644e-05, 1.909699999999917e-05, 1.961099999999924e-05, 1.9055999999999934e-05, 1.912500000000178e-05, 1.9098000000002113e-05, 1.9598000000002613e-05, 1.959699999999967e-05, 1.909699999999917e-05, 1.965299999999795e-05, 1.912499999999831e-05, 1.9098000000002113e-05, 1.909700000000264e-05, 1.9598000000002613e-05, 1.909700000000264e-05, 1.90829999999996e-05, 2.012499999999931e-05, 2.009700000000017e-05, 1.912499999999831e-05, 2.015299999999845e-05, 1.963899999999838e-05, 1.909699999999917e-05, 1.909699999999917e-05, 1.959699999999967e-05, 1.95830000000001e-05, 1.911099999999874e-05, 1.956900000000053e-05, 1.90829999999996e-05, 1.9098000000002113e-05, 1.9111999999998214e-05, 1.962499999999881e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.909699999999917e-05, 2.009700000000017e-05, 1.9097999999998644e-05, 1.909699999999917e-05, 1.909699999999917e-05, 1.909699999999917e-05, 1.961099999999924e-05, 1.9597999999999144e-05, 1.95830000000001e-05, 1.90829999999996e-05, 1.9097999999998644e-05, 1.90829999999996e-05, 1.959699999999967e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.149" endtime="20201112 12:42:38.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.144" endtime="20201112 12:42:38.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.154" endtime="20201112 12:42:38.155"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.158" endtime="20201112 12:42:38.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.156" endtime="20201112 12:42:38.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.152" endtime="20201112 12:42:38.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.783" endtime="20201112 12:42:38.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.782" endtime="20201112 12:42:38.179"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.188" endtime="20201112 12:42:38.205"></status>
</kw>
<msg timestamp="20201112 12:42:38.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.186" endtime="20201112 12:42:38.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.206" endtime="20201112 12:42:38.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.209" endtime="20201112 12:42:38.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.184" endtime="20201112 12:42:38.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.181" endtime="20201112 12:42:38.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.219" endtime="20201112 12:42:38.506"></status>
</kw>
<msg timestamp="20201112 12:42:38.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.218" endtime="20201112 12:42:38.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020506153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020526264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.510" endtime="20201112 12:42:38.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.519" endtime="20201112 12:42:38.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.215" endtime="20201112 12:42:38.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.213" endtime="20201112 12:42:38.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.526" level="INFO">${RESULT} = [{'time': 0.020526264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.011099999999974e-05, 'source_diff': 2.011099999999974e-05}, {'time': 0.020552111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.522" endtime="20201112 12:42:38.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.540" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:38.527" endtime="20201112 12:42:38.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.544" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.543" endtime="20201112 12:42:38.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.547" level="INFO">VALUE: [2.011099999999974e-05, 2.059700000000067e-05, 2.0112000000002683e-05, 2.009700000000017e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.0598000000000144e-05, 2.0111999999999214e-05, 2.0598000000000144e-05, 2.012499999999931e-05, 2.063899999999938e-05, 2.105499999999899e-05, 2.0583999999997105e-05, 2.0111999999999214e-05, 2.062499999999981e-05, 2.0097999999999644e-05, 2.011099999999974e-05, 2.009700000000017e-05, 2.009700000000017e-05, 2.058299999999763e-05, 2.059700000000067e-05, 2.0611999999999714e-05, 2.009700000000017e-05, 2.065300000000242e-05, 2.059700000000067e-05, 2.0598000000000144e-05, 2.0583999999997105e-05, 2.063899999999938e-05, 2.012499999999931e-05, 2.05830000000011e-05, 2.062500000000328e-05, 2.0028000000001794e-05, 2.062499999999981e-05, 2.059700000000067e-05, 2.0084000000000074e-05, 2.058299999999763e-05, 2.009700000000017e-05, 2.0097999999999644e-05, 2.00830000000006e-05, 2.009700000000017e-05, 2.0084000000000074e-05, 2.059700000000067e-05, 2.009700000000017e-05, 2.011099999999974e-05, 2.015299999999845e-05, 2.1098000000000644e-05, 2.00830000000006e-05, 2.1056000000001934e-05, 2.009700000000017e-05, 2.0097999999999644e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.545" endtime="20201112 12:42:38.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.541" endtime="20201112 12:42:38.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.551" endtime="20201112 12:42:38.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.554" endtime="20201112 12:42:38.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.553" endtime="20201112 12:42:38.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.549" endtime="20201112 12:42:38.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.180" endtime="20201112 12:42:38.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.179" endtime="20201112 12:42:38.575"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.584" endtime="20201112 12:42:38.602"></status>
</kw>
<msg timestamp="20201112 12:42:38.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.583" endtime="20201112 12:42:38.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.604" endtime="20201112 12:42:38.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.606" endtime="20201112 12:42:38.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.580" endtime="20201112 12:42:38.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.578" endtime="20201112 12:42:38.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.617" endtime="20201112 12:42:38.904"></status>
</kw>
<msg timestamp="20201112 12:42:38.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020489583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020510681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.615" endtime="20201112 12:42:38.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020489583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020510681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.909" endtime="20201112 12:42:38.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.917" endtime="20201112 12:42:38.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.613" endtime="20201112 12:42:38.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.611" endtime="20201112 12:42:38.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.924" level="INFO">${RESULT} = [{'time': 0.020510681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1098000000000644e-05, 'source_diff': 2.1098000000000644e-05}, {'time': 0.020535681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:38.921" endtime="20201112 12:42:38.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:38.925" endtime="20201112 12:42:38.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.943" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.942" endtime="20201112 12:42:38.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.945" level="INFO">VALUE: [2.1098000000000644e-05, 2.1112000000000214e-05, 2.111100000000074e-05, 2.159700000000167e-05, 2.159700000000167e-05, 2.161100000000124e-05, 2.15830000000021e-05, 2.1112000000000214e-05, 2.1084000000001074e-05, 2.162500000000081e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.159700000000167e-05, 2.10969999999977e-05, 2.211100000000174e-05, 2.111099999999727e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.209700000000217e-05, 2.112500000000031e-05, 2.209700000000217e-05, 2.111100000000074e-05, 2.156899999999906e-05, 2.161099999999777e-05, 2.1556000000002434e-05, 2.215300000000045e-05, 2.1556000000002434e-05, 2.1056000000001934e-05, 2.111099999999727e-05, 2.159700000000167e-05, 2.161100000000124e-05, 2.108299999999813e-05, 2.1084000000001074e-05, 2.108299999999813e-05, 2.1041999999998895e-05, 2.162500000000081e-05, 2.112500000000031e-05, 2.111100000000074e-05, 2.111099999999727e-05, 2.106900000000203e-05, 2.1069999999998035e-05, 2.161099999999777e-05, 2.1583999999998105e-05, 2.158299999999863e-05, 2.15969999999982e-05, 2.162500000000081e-05, 2.109700000000117e-05, 2.161099999999777e-05, 2.1055999999998465e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.944" endtime="20201112 12:42:38.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.939" endtime="20201112 12:42:38.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.949" endtime="20201112 12:42:38.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.953" endtime="20201112 12:42:38.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.951" endtime="20201112 12:42:38.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.947" endtime="20201112 12:42:38.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.576" endtime="20201112 12:42:38.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.576" endtime="20201112 12:42:38.974"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.983" endtime="20201112 12:42:39.001"></status>
</kw>
<msg timestamp="20201112 12:42:39.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.981" endtime="20201112 12:42:39.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.003" endtime="20201112 12:42:39.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.005" endtime="20201112 12:42:39.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.979" endtime="20201112 12:42:39.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.976" endtime="20201112 12:42:39.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.016" endtime="20201112 12:42:39.303"></status>
</kw>
<msg timestamp="20201112 12:42:39.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020461, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020483542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:39.014" endtime="20201112 12:42:39.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020461, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020483542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:39.307" endtime="20201112 12:42:39.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.316" endtime="20201112 12:42:39.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.012" endtime="20201112 12:42:39.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.010" endtime="20201112 12:42:39.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.323" level="INFO">${RESULT} = [{'time': 0.020483542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.020509472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:39.320" endtime="20201112 12:42:39.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.338" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:39.324" endtime="20201112 12:42:39.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.343" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.342" endtime="20201112 12:42:39.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.345" level="INFO">VALUE: [2.2542000000000395e-05, 2.208299999999913e-05, 2.3097999999999175e-05, 2.2070000000002504e-05, 2.30969999999997e-05, 2.20969999999987e-05, 2.2583999999999105e-05, 2.20969999999987e-05, 2.30969999999997e-05, 2.2527999999997356e-05, 2.262499999999834e-05, 2.20830000000026e-05, 2.212499999999784e-05, 2.2569999999999535e-05, 2.20969999999987e-05, 2.261099999999877e-05, 2.261099999999877e-05, 2.213900000000088e-05, 2.2598000000002144e-05, 2.2528000000000825e-05, 2.259700000000267e-05, 2.259700000000267e-05, 2.261099999999877e-05, 2.312499999999884e-05, 2.255500000000049e-05, 2.261100000000224e-05, 2.2098000000001644e-05, 2.2055999999999465e-05, 2.258299999999963e-05, 2.211100000000174e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.212499999999784e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.20969999999987e-05, 2.263900000000138e-05, 2.25969999999992e-05, 2.25969999999992e-05, 2.2083999999998605e-05, 2.261099999999877e-05, 2.25969999999992e-05, 2.258299999999963e-05, 2.2612000000001714e-05, 2.2097999999998175e-05, 2.20969999999987e-05, 2.211099999999827e-05, 2.211100000000174e-05, 2.211100000000174e-05, 2.261100000000224e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.344" endtime="20201112 12:42:39.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.339" endtime="20201112 12:42:39.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.349" endtime="20201112 12:42:39.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.353" endtime="20201112 12:42:39.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.351" endtime="20201112 12:42:39.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.348" endtime="20201112 12:42:39.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.975" endtime="20201112 12:42:39.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.974" endtime="20201112 12:42:39.374"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.383" endtime="20201112 12:42:39.401"></status>
</kw>
<msg timestamp="20201112 12:42:39.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.382" endtime="20201112 12:42:39.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.403" endtime="20201112 12:42:39.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.406" endtime="20201112 12:42:39.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.379" endtime="20201112 12:42:39.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.376" endtime="20201112 12:42:39.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.416" endtime="20201112 12:42:39.703"></status>
</kw>
<msg timestamp="20201112 12:42:39.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020621181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.415" endtime="20201112 12:42:39.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020621181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.707" endtime="20201112 12:42:39.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.715" endtime="20201112 12:42:39.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.412" endtime="20201112 12:42:39.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.410" endtime="20201112 12:42:39.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.723" level="INFO">${RESULT} = [{'time': 0.020621181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3083999999999605e-05, 'source_diff': 2.3083999999999605e-05}, {'time': 0.02065, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:39.719" endtime="20201112 12:42:39.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.736" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:39.724" endtime="20201112 12:42:39.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.741" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.740" endtime="20201112 12:42:39.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.744" level="INFO">VALUE: [2.3083999999999605e-05, 2.311100000000274e-05, 2.3570000000000535e-05, 2.3637999999999437e-05, 2.413899999999941e-05, 2.361099999999977e-05, 2.3097999999999175e-05, 2.3111999999998745e-05, 2.3098000000002644e-05, 2.35970000000002e-05, 2.3056000000000465e-05, 2.311099999999927e-05, 2.366700000000152e-05, 2.361099999999977e-05, 2.3597999999999675e-05, 2.3596999999996732e-05, 2.311099999999927e-05, 2.311099999999927e-05, 2.356900000000106e-05, 2.3070000000000035e-05, 2.3097999999999175e-05, 2.30969999999997e-05, 2.3584000000000105e-05, 2.362499999999934e-05, 2.361099999999977e-05, 2.361099999999977e-05, 2.3042000000000895e-05, 2.361099999999977e-05, 2.3541999999997926e-05, 2.30969999999997e-05, 2.309700000000317e-05, 2.35970000000002e-05, 2.312499999999884e-05, 2.3583999999996635e-05, 2.35970000000002e-05, 2.312499999999884e-05, 2.358300000000063e-05, 2.311099999999927e-05, 2.308300000000013e-05, 2.3584000000000105e-05, 2.3584000000000105e-05, 2.3584000000000105e-05, 2.311099999999927e-05, 2.361099999999977e-05, 2.362499999999934e-05, 2.3597999999999675e-05, 2.361099999999977e-05, 2.411100000000027e-05, 2.309700000000317e-05, 2.3555999999997496e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.742" endtime="20201112 12:42:39.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.737" endtime="20201112 12:42:39.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.752" endtime="20201112 12:42:39.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.756" endtime="20201112 12:42:39.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.754" endtime="20201112 12:42:39.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.751" endtime="20201112 12:42:39.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.375" endtime="20201112 12:42:39.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.374" endtime="20201112 12:42:39.777"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.786" endtime="20201112 12:42:39.804"></status>
</kw>
<msg timestamp="20201112 12:42:39.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.784" endtime="20201112 12:42:39.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.806" endtime="20201112 12:42:39.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.808" endtime="20201112 12:42:39.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.782" endtime="20201112 12:42:39.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.780" endtime="20201112 12:42:39.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.819" endtime="20201112 12:42:40.107"></status>
</kw>
<msg timestamp="20201112 12:42:40.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02041675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:39.817" endtime="20201112 12:42:40.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02041675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:40.111" endtime="20201112 12:42:40.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.120" endtime="20201112 12:42:40.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.815" endtime="20201112 12:42:40.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.813" endtime="20201112 12:42:40.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.127" level="INFO">${RESULT} = [{'time': 0.020441403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.020468222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:40.123" endtime="20201112 12:42:40.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.140" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:40.128" endtime="20201112 12:42:40.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.145" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.144" endtime="20201112 12:42:40.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.148" level="INFO">VALUE: [2.465299999999948e-05, 2.461100000000077e-05, 2.4070000000001035e-05, 2.4610999999997302e-05, 2.5097999999997705e-05, 2.462500000000034e-05, 2.4597999999997205e-05, 2.512500000000084e-05, 2.469499999999819e-05, 2.4582999999998162e-05, 2.4098000000000175e-05, 2.4112000000003214e-05, 2.4597999999997205e-05, 2.412499999999984e-05, 2.4527999999999356e-05, 2.45970000000012e-05, 2.4098000000000175e-05, 2.5111999999997275e-05, 2.4527999999999356e-05, 2.4098000000000175e-05, 2.4582999999998162e-05, 2.408300000000113e-05, 2.45970000000012e-05, 2.4555999999998496e-05, 2.412499999999984e-05, 2.461100000000077e-05, 2.4610999999997302e-05, 2.511100000000127e-05, 2.411100000000027e-05, 2.4596999999997732e-05, 2.411100000000027e-05, 2.411100000000027e-05, 2.462500000000034e-05, 2.4582999999998162e-05, 2.462500000000034e-05, 2.4098000000000175e-05, 2.461100000000077e-05, 2.4596999999997732e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.4582999999998162e-05, 2.4596999999997732e-05, 2.50970000000017e-05, 2.512499999999737e-05, 2.4598000000000675e-05, 2.4610999999997302e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.411100000000027e-05, 2.4556000000001965e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.146" endtime="20201112 12:42:40.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.141" endtime="20201112 12:42:40.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.152" endtime="20201112 12:42:40.153"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.155" endtime="20201112 12:42:40.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.154" endtime="20201112 12:42:40.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.150" endtime="20201112 12:42:40.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.778" endtime="20201112 12:42:40.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.777" endtime="20201112 12:42:40.176"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.185" endtime="20201112 12:42:40.203"></status>
</kw>
<msg timestamp="20201112 12:42:40.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.184" endtime="20201112 12:42:40.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.205" endtime="20201112 12:42:40.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.207" endtime="20201112 12:42:40.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.181" endtime="20201112 12:42:40.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.179" endtime="20201112 12:42:40.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.218" endtime="20201112 12:42:40.505"></status>
</kw>
<msg timestamp="20201112 12:42:40.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02041725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:40.216" endtime="20201112 12:42:40.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02041725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:40.509" endtime="20201112 12:42:40.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.518" endtime="20201112 12:42:40.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.213" endtime="20201112 12:42:40.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.212" endtime="20201112 12:42:40.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.525" level="INFO">${RESULT} = [{'time': 0.02041725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5056000000002465e-05, 'source_diff': 2.5056000000002465e-05}, {'time': 0.020447306, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:40.521" endtime="20201112 12:42:40.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.538" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:40.526" endtime="20201112 12:42:40.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.543" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.542" endtime="20201112 12:42:40.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.546" level="INFO">VALUE: [2.5056000000002465e-05, 2.5097999999997705e-05, 2.55970000000022e-05, 2.561100000000177e-05, 2.55970000000022e-05, 2.50970000000017e-05, 2.511100000000127e-05, 2.5583999999998636e-05, 2.50970000000017e-05, 2.5097999999997705e-05, 2.55970000000022e-05, 2.55970000000022e-05, 2.5596999999998732e-05, 2.5096999999998232e-05, 2.563900000000091e-05, 2.561100000000177e-05, 2.5598000000001675e-05, 2.5096999999998232e-05, 2.5610999999998302e-05, 2.5568999999999592e-05, 2.563899999999744e-05, 2.55970000000022e-05, 2.50970000000017e-05, 2.5610999999998302e-05, 2.55970000000022e-05, 2.5610999999998302e-05, 2.5610999999998302e-05, 2.5096999999998232e-05, 2.566700000000005e-05, 2.6069999999999566e-05, 2.5596999999998732e-05, 2.561100000000177e-05, 2.563900000000091e-05, 2.5555999999999496e-05, 2.5082999999998662e-05, 2.5596999999998732e-05, 2.5040999999999952e-05, 2.563900000000091e-05, 2.512500000000084e-05, 2.55970000000022e-05, 2.5610999999998302e-05, 2.568099999999962e-05, 2.5096999999998232e-05, 2.561100000000177e-05, 2.556900000000306e-05, 2.508300000000213e-05, 2.561100000000177e-05, 2.513900000000041e-05, 2.5610999999998302e-05, 2.511100000000127e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.544" endtime="20201112 12:42:40.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.539" endtime="20201112 12:42:40.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.549" endtime="20201112 12:42:40.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.553" endtime="20201112 12:42:40.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.551" endtime="20201112 12:42:40.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.548" endtime="20201112 12:42:40.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.177" endtime="20201112 12:42:40.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.176" endtime="20201112 12:42:40.574"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.583" endtime="20201112 12:42:40.601"></status>
</kw>
<msg timestamp="20201112 12:42:40.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.582" endtime="20201112 12:42:40.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.603" endtime="20201112 12:42:40.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.605" endtime="20201112 12:42:40.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.579" endtime="20201112 12:42:40.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.577" endtime="20201112 12:42:40.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.616" endtime="20201112 12:42:40.902"></status>
</kw>
<msg timestamp="20201112 12:42:40.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.614" endtime="20201112 12:42:40.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020512556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.906" endtime="20201112 12:42:40.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.915" endtime="20201112 12:42:40.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.611" endtime="20201112 12:42:40.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.610" endtime="20201112 12:42:40.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.922" level="INFO">${RESULT} = [{'time': 0.020539111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6554999999997553e-05, 'source_diff': 2.6554999999997553e-05}, {'time': 0.020568972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:40.919" endtime="20201112 12:42:40.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.937" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:40.923" endtime="20201112 12:42:40.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.942" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.941" endtime="20201112 12:42:40.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.945" level="INFO">VALUE: [2.6554999999997553e-05, 2.6596999999999732e-05, 2.6082999999999662e-05, 2.6596999999999732e-05, 2.613900000000141e-05, 2.6570000000000066e-05, 2.6110999999998802e-05, 2.6597999999999206e-05, 2.60970000000027e-05, 2.6026999999997913e-05, 2.6096999999999232e-05, 2.6540999999997983e-05, 2.662500000000234e-05, 2.6110999999998802e-05, 2.6082999999999662e-05, 2.6583000000000162e-05, 2.6124999999998372e-05, 2.6596999999999732e-05, 2.6596999999999732e-05, 2.6570000000000066e-05, 2.6096999999999232e-05, 2.7097000000000232e-05, 2.661100000000277e-05, 2.6042000000000426e-05, 2.6584000000003105e-05, 2.6596999999999732e-05, 2.6582999999996693e-05, 2.6083999999999136e-05, 2.7110999999999802e-05, 2.6596999999999732e-05, 2.6082999999999662e-05, 2.6069000000000092e-05, 2.6596999999999732e-05, 2.60970000000027e-05, 2.6610999999999302e-05, 2.6124999999998372e-05, 2.6624999999998872e-05, 2.6084000000002605e-05, 2.6596999999999732e-05, 2.615299999999751e-05, 2.6637999999998968e-05, 2.6152000000001507e-05, 2.6069000000000092e-05, 2.6582999999996693e-05, 2.6098000000002175e-05, 2.6097999999998706e-05, 2.6596999999999732e-05, 2.611100000000227e-05, 2.6583000000000162e-05, 2.6583000000000162e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.943" endtime="20201112 12:42:40.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.938" endtime="20201112 12:42:40.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.948" endtime="20201112 12:42:40.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.952" endtime="20201112 12:42:40.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.950" endtime="20201112 12:42:40.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.947" endtime="20201112 12:42:40.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.575" endtime="20201112 12:42:40.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.574" endtime="20201112 12:42:40.973"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.982" endtime="20201112 12:42:41.000"></status>
</kw>
<msg timestamp="20201112 12:42:41.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.980" endtime="20201112 12:42:41.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.002" endtime="20201112 12:42:41.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.004" endtime="20201112 12:42:41.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.978" endtime="20201112 12:42:41.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.975" endtime="20201112 12:42:41.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.015" endtime="20201112 12:42:41.301"></status>
</kw>
<msg timestamp="20201112 12:42:41.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.013" endtime="20201112 12:42:41.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020471458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.306" endtime="20201112 12:42:41.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.314" endtime="20201112 12:42:41.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.010" endtime="20201112 12:42:41.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.009" endtime="20201112 12:42:41.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.321" level="INFO">${RESULT} = [{'time': 0.020471458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8111000000000802e-05, 'source_diff': 2.8111000000000802e-05}, {'time': 0.020501139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:41.317" endtime="20201112 12:42:41.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.335" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:41.322" endtime="20201112 12:42:41.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.340" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.339" endtime="20201112 12:42:41.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.343" level="INFO">VALUE: [2.8111000000000802e-05, 2.712500000000284e-05, 2.715299999999851e-05, 2.7611000000000302e-05, 2.7097000000000232e-05, 2.7082999999997193e-05, 2.7597000000000732e-05, 2.7611000000000302e-05, 2.7611999999999776e-05, 2.7097999999999706e-05, 2.7611000000000302e-05, 2.7611000000000302e-05, 2.7611000000000302e-05, 2.7097000000000232e-05, 2.7097999999999706e-05, 2.7611000000000302e-05, 2.7569000000001592e-05, 2.7110999999999802e-05, 2.8124999999996902e-05, 2.7624999999999872e-05, 2.7110999999999802e-05, 2.7597000000000732e-05, 2.7111999999999276e-05, 2.7584000000000636e-05, 2.7097000000000232e-05, 2.7068999999997623e-05, 2.7597000000000732e-05, 2.8111000000000802e-05, 2.7611999999999776e-05, 2.7110999999999802e-05, 2.7110999999999802e-05, 2.7597000000000732e-05, 2.7597000000000732e-05, 2.7110999999999802e-05, 2.7611000000000302e-05, 2.7084000000000136e-05, 2.711100000000327e-05, 2.7110999999999802e-05, 2.7542000000001926e-05, 2.7110999999999802e-05, 2.7624999999999872e-05, 2.7097000000000232e-05, 2.7111999999999276e-05, 2.715299999999851e-05, 2.7124999999999372e-05, 2.7611000000000302e-05, 2.7596999999997263e-05, 2.7611000000000302e-05, 2.7110999999999802e-05, 2.7624999999999872e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.341" endtime="20201112 12:42:41.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.336" endtime="20201112 12:42:41.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.347" endtime="20201112 12:42:41.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.351" endtime="20201112 12:42:41.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.349" endtime="20201112 12:42:41.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.345" endtime="20201112 12:42:41.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.974" endtime="20201112 12:42:41.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.973" endtime="20201112 12:42:41.372"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.381" endtime="20201112 12:42:41.399"></status>
</kw>
<msg timestamp="20201112 12:42:41.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.379" endtime="20201112 12:42:41.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.401" endtime="20201112 12:42:41.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.403" endtime="20201112 12:42:41.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.376" endtime="20201112 12:42:41.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.374" endtime="20201112 12:42:41.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.414" endtime="20201112 12:42:41.698"></status>
</kw>
<msg timestamp="20201112 12:42:41.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02057625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020604347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:41.412" endtime="20201112 12:42:41.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02057625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020604347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:41.703" endtime="20201112 12:42:41.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.711" endtime="20201112 12:42:41.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.409" endtime="20201112 12:42:41.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.407" endtime="20201112 12:42:41.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.718" level="INFO">${RESULT} = [{'time': 0.020604347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8096999999997763e-05, 'source_diff': 2.8096999999997763e-05}, {'time': 0.020635056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:41.715" endtime="20201112 12:42:41.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.732" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:41.719" endtime="20201112 12:42:41.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.737" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.736" endtime="20201112 12:42:41.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.740" level="INFO">VALUE: [2.8096999999997763e-05, 2.8125000000000372e-05, 2.8125000000000372e-05, 2.8611000000001302e-05, 2.8611000000001302e-05, 2.8112000000000276e-05, 2.8098000000000706e-05, 2.8596999999998263e-05, 2.8610999999997833e-05, 2.8097000000001232e-05, 2.8083000000001662e-05, 2.8611000000001302e-05, 2.8596999999998263e-05, 2.8096999999997763e-05, 2.8084000000001136e-05, 2.8597000000001732e-05, 2.8653000000000012e-05, 2.8082999999998193e-05, 2.8055999999998527e-05, 2.8138999999999942e-05, 2.8625000000000872e-05, 2.8610999999997833e-05, 2.8111000000000802e-05, 2.8083000000001662e-05, 2.8097000000001232e-05, 2.8612000000000776e-05, 2.8582999999998693e-05, 2.8625000000000872e-05, 2.8611000000001302e-05, 2.8583000000002162e-05, 2.8111000000000802e-05, 2.8111000000000802e-05, 2.8111000000000802e-05, 2.8611000000001302e-05, 2.8097000000001232e-05, 2.8583000000002162e-05, 2.8097000000001232e-05, 2.8111000000000802e-05, 2.8125000000000372e-05, 2.8110999999997333e-05, 2.8598000000001206e-05, 2.8096999999997763e-05, 2.8556000000002496e-05, 2.8540999999999983e-05, 2.8598000000001206e-05, 2.8584000000001636e-05, 2.816699999999908e-05, 2.8611000000001302e-05, 2.8097000000001232e-05, 2.8610999999997833e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.738" endtime="20201112 12:42:41.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.733" endtime="20201112 12:42:41.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.743" endtime="20201112 12:42:41.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.747" endtime="20201112 12:42:41.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.745" endtime="20201112 12:42:41.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.742" endtime="20201112 12:42:41.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.373" endtime="20201112 12:42:41.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.372" endtime="20201112 12:42:41.768"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.777" endtime="20201112 12:42:41.795"></status>
</kw>
<msg timestamp="20201112 12:42:41.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.775" endtime="20201112 12:42:41.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.797" endtime="20201112 12:42:41.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.800" endtime="20201112 12:42:41.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.773" endtime="20201112 12:42:41.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.770" endtime="20201112 12:42:41.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.810" endtime="20201112 12:42:42.096"></status>
</kw>
<msg timestamp="20201112 12:42:42.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020537806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.809" endtime="20201112 12:42:42.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020537806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.101" endtime="20201112 12:42:42.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.109" endtime="20201112 12:42:42.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.806" endtime="20201112 12:42:42.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.804" endtime="20201112 12:42:42.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.116" level="INFO">${RESULT} = [{'time': 0.020537806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9583999999999167e-05, 'source_diff': 2.9583999999999167e-05}, {'time': 0.020572931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:42.113" endtime="20201112 12:42:42.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.130" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.117" endtime="20201112 12:42:42.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.135" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.134" endtime="20201112 12:42:42.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.138" level="INFO">VALUE: [2.9583999999999167e-05, 2.9111999999997806e-05, 2.9596999999999263e-05, 2.9110999999998333e-05, 2.9598000000002206e-05, 2.9125000000001372e-05, 2.9625000000001872e-05, 2.9597999999998736e-05, 2.9096999999998763e-05, 2.9097000000002232e-05, 2.9610999999998833e-05, 2.9125000000001372e-05, 2.9041999999999957e-05, 2.9082999999999193e-05, 2.9139000000000942e-05, 2.9596999999999263e-05, 2.9596999999999263e-05, 2.9082999999999193e-05, 3.0096999999999763e-05, 2.9610999999998833e-05, 2.9596999999999263e-05, 2.9596999999999263e-05, 2.9596999999999263e-05, 2.9125000000001372e-05, 2.9124999999997903e-05, 2.9583999999999167e-05, 3.0167000000001082e-05, 2.9124999999997903e-05, 2.9596999999999263e-05, 2.9611000000002302e-05, 2.9097000000002232e-05, 2.9596999999999263e-05, 2.9652999999997542e-05, 2.9639000000001442e-05, 2.9625000000001872e-05, 2.9610999999998833e-05, 2.9596999999999263e-05, 2.9611000000002302e-05, 2.9596999999999263e-05, 2.9084000000002136e-05, 2.9596999999999263e-05, 3.0111000000002802e-05, 2.9597999999998736e-05, 2.9610999999998833e-05, 2.9653000000001012e-05, 2.9096999999998763e-05, 3.0096999999999763e-05, 2.9139000000000942e-05, 2.9596999999999263e-05, 2.9596999999999263e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.136" endtime="20201112 12:42:42.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.131" endtime="20201112 12:42:42.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.141" endtime="20201112 12:42:42.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.145" endtime="20201112 12:42:42.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.143" endtime="20201112 12:42:42.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.140" endtime="20201112 12:42:42.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.769" endtime="20201112 12:42:42.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.768" endtime="20201112 12:42:42.166"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.175" endtime="20201112 12:42:42.193"></status>
</kw>
<msg timestamp="20201112 12:42:42.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.173" endtime="20201112 12:42:42.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.195" endtime="20201112 12:42:42.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.197" endtime="20201112 12:42:42.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.171" endtime="20201112 12:42:42.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.169" endtime="20201112 12:42:42.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.208" endtime="20201112 12:42:42.494"></status>
</kw>
<msg timestamp="20201112 12:42:42.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020566347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.206" endtime="20201112 12:42:42.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020566347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.499" endtime="20201112 12:42:42.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.508" endtime="20201112 12:42:42.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.204" endtime="20201112 12:42:42.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.202" endtime="20201112 12:42:42.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.515" level="INFO">${RESULT} = [{'time': 0.020596944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.020632875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:42.511" endtime="20201112 12:42:42.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.530" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.516" endtime="20201112 12:42:42.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.534" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.533" endtime="20201112 12:42:42.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.537" level="INFO">VALUE: [3.059700000000026e-05, 3.0138999999998473e-05, 3.0098000000002706e-05, 3.06110000000033e-05, 3.0111999999998806e-05, 3.0097999999999236e-05, 3.066700000000158e-05, 3.059700000000026e-05, 3.059700000000026e-05, 3.0083000000000193e-05, 3.066700000000158e-05, 3.0110999999999333e-05, 3.066599999999864e-05, 3.0584000000000167e-05, 3.0054999999997584e-05, 3.0096999999999763e-05, 3.0098000000002706e-05, 3.059700000000026e-05, 3.061099999999983e-05, 3.059700000000026e-05, 3.0138999999998473e-05, 3.059700000000026e-05, 3.0597999999999737e-05, 3.0611999999999306e-05, 3.0111999999998806e-05, 3.0584000000000167e-05, 3.06249999999994e-05, 3.0111000000002802e-05, 3.0069000000000623e-05, 3.0112000000002276e-05, 3.111100000000033e-05, 3.0096999999999763e-05, 3.059700000000026e-05, 3.0596999999996793e-05, 3.0083000000000193e-05, 3.0070000000000097e-05, 3.0111999999998806e-05, 3.0084000000003136e-05, 3.0096999999999763e-05, 3.109700000000076e-05, 3.0096999999999763e-05, 3.0111000000002802e-05, 3.0584000000000167e-05, 3.0125000000002372e-05, 3.054100000000198e-05, 3.059700000000026e-05, 3.0096999999999763e-05, 3.0139000000001942e-05, 3.0110999999999333e-05, 3.056999999999713e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.535" endtime="20201112 12:42:42.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.531" endtime="20201112 12:42:42.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.541" endtime="20201112 12:42:42.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.544" endtime="20201112 12:42:42.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.543" endtime="20201112 12:42:42.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.539" endtime="20201112 12:42:42.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.167" endtime="20201112 12:42:42.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.166" endtime="20201112 12:42:42.565"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.574" endtime="20201112 12:42:42.592"></status>
</kw>
<msg timestamp="20201112 12:42:42.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.573" endtime="20201112 12:42:42.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.594" endtime="20201112 12:42:42.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.596" endtime="20201112 12:42:42.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.570" endtime="20201112 12:42:42.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.568" endtime="20201112 12:42:42.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.607" endtime="20201112 12:42:42.893"></status>
</kw>
<msg timestamp="20201112 12:42:42.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.605" endtime="20201112 12:42:42.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020470556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.897" endtime="20201112 12:42:42.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.906" endtime="20201112 12:42:42.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.602" endtime="20201112 12:42:42.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.601" endtime="20201112 12:42:42.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.913" level="INFO">${RESULT} = [{'time': 0.020470556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.15700000000016e-05, 'source_diff': 3.15700000000016e-05}, {'time': 0.020506417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:42.909" endtime="20201112 12:42:42.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.926" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.914" endtime="20201112 12:42:42.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.931" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.930" endtime="20201112 12:42:42.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.934" level="INFO">VALUE: [3.15700000000016e-05, 3.111100000000033e-05, 3.161100000000083e-05, 3.111100000000033e-05, 3.161100000000083e-05, 3.163899999999997e-05, 3.159700000000126e-05, 3.209800000000124e-05, 3.111100000000033e-05, 3.108300000000119e-05, 3.15700000000016e-05, 3.111100000000033e-05, 3.161100000000083e-05, 3.111099999999686e-05, 3.109700000000076e-05, 3.11249999999999e-05, 3.212499999999743e-05, 3.163899999999997e-05, 3.2110999999997863e-05, 3.111100000000033e-05, 3.158400000000117e-05, 3.111100000000033e-05, 3.113900000000294e-05, 3.159700000000126e-05, 3.109700000000076e-05, 3.1596999999997794e-05, 3.1098000000000237e-05, 3.109700000000076e-05, 3.111100000000033e-05, 3.15839999999977e-05, 3.111100000000033e-05, 3.111100000000033e-05, 3.106999999999763e-05, 3.111100000000033e-05, 3.1596999999997794e-05, 3.109700000000076e-05, 3.11249999999999e-05, 3.111100000000033e-05, 3.109700000000076e-05, 3.15839999999977e-05, 3.216699999999961e-05, 3.1098000000000237e-05, 3.1596999999997794e-05, 3.155500000000255e-05, 3.159700000000126e-05, 3.111100000000033e-05, 3.111099999999686e-05, 3.104199999999849e-05, 3.1598000000000737e-05, 3.11249999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.932" endtime="20201112 12:42:42.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.927" endtime="20201112 12:42:42.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.938" endtime="20201112 12:42:42.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.941" endtime="20201112 12:42:42.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.940" endtime="20201112 12:42:42.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.936" endtime="20201112 12:42:42.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.566" endtime="20201112 12:42:42.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.566" endtime="20201112 12:42:42.962"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.971" endtime="20201112 12:42:42.989"></status>
</kw>
<msg timestamp="20201112 12:42:42.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.970" endtime="20201112 12:42:42.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.990" endtime="20201112 12:42:42.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.993" endtime="20201112 12:42:42.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.967" endtime="20201112 12:42:42.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.965" endtime="20201112 12:42:42.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.004" endtime="20201112 12:42:43.290"></status>
</kw>
<msg timestamp="20201112 12:42:43.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020557111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.002" endtime="20201112 12:42:43.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020557111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.295" endtime="20201112 12:42:43.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.303" endtime="20201112 12:42:43.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.999" endtime="20201112 12:42:43.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.997" endtime="20201112 12:42:43.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.310" level="INFO">${RESULT} = [{'time': 0.020589694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2582999999999224e-05, 'source_diff': 3.2582999999999224e-05}, {'time': 0.020626639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:43.307" endtime="20201112 12:42:43.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.324" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.311" endtime="20201112 12:42:43.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.329" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.328" endtime="20201112 12:42:43.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.332" level="INFO">VALUE: [3.2582999999999224e-05, 3.2610999999998364e-05, 3.261100000000183e-05, 3.261199999999784e-05, 3.26250000000014e-05, 3.2110999999997863e-05, 3.2610999999998364e-05, 3.261100000000183e-05, 3.209700000000176e-05, 3.211100000000133e-05, 3.3082999999999724e-05, 3.209700000000176e-05, 3.211100000000133e-05, 3.2082999999998724e-05, 3.259700000000226e-05, 3.2624999999997933e-05, 3.2110999999997863e-05, 3.2610999999998364e-05, 3.258400000000217e-05, 3.2596999999998794e-05, 3.3096999999999294e-05, 3.2110999999997863e-05, 3.2610999999998364e-05, 3.261100000000183e-05, 3.259800000000174e-05, 3.2054999999999584e-05, 3.211100000000133e-05, 3.21250000000009e-05, 3.209700000000176e-05, 3.261100000000183e-05, 3.211199999999734e-05, 3.2612000000001307e-05, 3.261100000000183e-05, 3.26250000000014e-05, 3.209700000000176e-05, 3.2068999999999154e-05, 3.2054999999999584e-05, 3.211100000000133e-05, 3.259700000000226e-05, 3.211100000000133e-05, 3.3096999999999294e-05, 3.209700000000176e-05, 3.2110999999997863e-05, 3.2110999999997863e-05, 3.258300000000269e-05, 3.2096999999998294e-05, 3.2110999999997863e-05, 3.255599999999956e-05, 3.209700000000176e-05, 3.2527000000000944e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.330" endtime="20201112 12:42:43.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.325" endtime="20201112 12:42:43.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.335" endtime="20201112 12:42:43.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.339" endtime="20201112 12:42:43.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.337" endtime="20201112 12:42:43.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.334" endtime="20201112 12:42:43.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.963" endtime="20201112 12:42:43.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.963" endtime="20201112 12:42:43.360"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.370" endtime="20201112 12:42:43.389"></status>
</kw>
<msg timestamp="20201112 12:42:43.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.369" endtime="20201112 12:42:43.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.391" endtime="20201112 12:42:43.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.393" endtime="20201112 12:42:43.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.365" endtime="20201112 12:42:43.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.363" endtime="20201112 12:42:43.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.404" endtime="20201112 12:42:43.690"></status>
</kw>
<msg timestamp="20201112 12:42:43.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.402" endtime="20201112 12:42:43.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022037792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.694" endtime="20201112 12:42:43.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.703" endtime="20201112 12:42:43.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.399" endtime="20201112 12:42:43.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.398" endtime="20201112 12:42:43.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.710" level="INFO">${RESULT} = [{'time': 0.022037792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.30839999999992e-05, 'source_diff': 3.30839999999992e-05}, {'time': 0.022074181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:43.706" endtime="20201112 12:42:43.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.723" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.711" endtime="20201112 12:42:43.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.728" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.727" endtime="20201112 12:42:43.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.731" level="INFO">VALUE: [3.30839999999992e-05, 3.3624999999998934e-05, 3.4124999999999434e-05, 3.3583000000000224e-05, 3.3110999999998864e-05, 3.309799999999877e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.359799999999927e-05, 3.3638999999998503e-05, 3.3624999999998934e-05, 3.311100000000233e-05, 3.3596999999999794e-05, 3.361199999999884e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3110999999998864e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.355600000000056e-05, 3.3096999999999294e-05, 3.3068999999996684e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.31250000000019e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.3110999999998864e-05, 3.3096999999999294e-05, 3.3610999999999364e-05, 3.311100000000233e-05, 3.407000000000063e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.3638999999998503e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3096999999999294e-05, 3.3610999999999364e-05, 3.302799999999745e-05, 3.31250000000019e-05, 3.3110999999998864e-05, 3.3610999999999364e-05, 3.311100000000233e-05, 3.3096999999999294e-05, 3.3110999999998864e-05, 3.36250000000024e-05, 3.359799999999927e-05, 3.3610999999999364e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.729" endtime="20201112 12:42:43.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.724" endtime="20201112 12:42:43.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.735" endtime="20201112 12:42:43.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.738" endtime="20201112 12:42:43.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.737" endtime="20201112 12:42:43.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.733" endtime="20201112 12:42:43.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.361" endtime="20201112 12:42:43.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.361" endtime="20201112 12:42:43.759"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.769" endtime="20201112 12:42:43.787"></status>
</kw>
<msg timestamp="20201112 12:42:43.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.767" endtime="20201112 12:42:43.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.788" endtime="20201112 12:42:43.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.791" endtime="20201112 12:42:43.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.764" endtime="20201112 12:42:43.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.762" endtime="20201112 12:42:43.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.802" endtime="20201112 12:42:44.088"></status>
</kw>
<msg timestamp="20201112 12:42:44.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020601625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.800" endtime="20201112 12:42:44.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020601625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.092" endtime="20201112 12:42:44.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.101" endtime="20201112 12:42:44.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.797" endtime="20201112 12:42:44.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.795" endtime="20201112 12:42:44.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.108" level="INFO">${RESULT} = [{'time': 0.020601625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.045799999999975e-05, 'source_diff': 5.045799999999975e-05}, {'time': 0.020656639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:44.104" endtime="20201112 12:42:44.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.123" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.109" endtime="20201112 12:42:44.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.127" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.126" endtime="20201112 12:42:44.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.130" level="INFO">VALUE: [5.045799999999975e-05, 5.008299999999938e-05, 5.026399999999778e-05, 5.005599999999971e-05, 5.043100000000009e-05, 5.030599999999996e-05, 5.009700000000242e-05, 4.986100000000174e-05, 5.029200000000039e-05, 5.0236999999998116e-05, 5.179200000000189e-05, 5.012500000000156e-05, 5.176399999999928e-05, 5.023599999999864e-05, 5.005500000000024e-05, 4.986100000000174e-05, 5.179099999999895e-05, 4.98469999999987e-05, 5.066600000000129e-05, 5.011100000000199e-05, 5.019399999999993e-05, 5.011100000000199e-05, 4.986099999999827e-05, 5.066700000000077e-05, 5.176400000000275e-05, 5.018099999999984e-05, 5.051399999999803e-05, 5.018099999999984e-05, 5.061100000000249e-05, 4.988900000000088e-05, 5.037499999999834e-05, 5.019399999999993e-05, 5.025000000000168e-05, 5.019399999999993e-05, 5.020899999999898e-05, 5.050000000000193e-05, 5.176399999999928e-05, 5.066700000000077e-05, 5.033299999999963e-05, 5.049999999999846e-05, 5.026400000000125e-05, 5.011100000000199e-05, 5.066700000000077e-05, 5.009699999999895e-05, 5.036099999999877e-05, 5.022199999999907e-05, 5.054200000000064e-05, 5.040300000000095e-05, 5.01530000000007e-05, 5.056999999999978e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.129" endtime="20201112 12:42:44.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.124" endtime="20201112 12:42:44.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.134" endtime="20201112 12:42:44.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.137" endtime="20201112 12:42:44.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.136" endtime="20201112 12:42:44.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.132" endtime="20201112 12:42:44.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.760" endtime="20201112 12:42:44.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.760" endtime="20201112 12:42:44.158"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.167" endtime="20201112 12:42:44.186"></status>
</kw>
<msg timestamp="20201112 12:42:44.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.166" endtime="20201112 12:42:44.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.187" endtime="20201112 12:42:44.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.190" endtime="20201112 12:42:44.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.163" endtime="20201112 12:42:44.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.161" endtime="20201112 12:42:44.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.200" endtime="20201112 12:42:44.487"></status>
</kw>
<msg timestamp="20201112 12:42:44.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.199" endtime="20201112 12:42:44.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.491" endtime="20201112 12:42:44.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.499" endtime="20201112 12:42:44.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.196" endtime="20201112 12:42:44.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.194" endtime="20201112 12:42:44.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.506" level="INFO">${RESULT} = [{'time': 0.020545583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.15409999999987e-05, 'source_diff': 5.15409999999987e-05}, {'time': 0.020601597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:44.503" endtime="20201112 12:42:44.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.520" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.507" endtime="20201112 12:42:44.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.525" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.524" endtime="20201112 12:42:44.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.527" level="INFO">VALUE: [5.15409999999987e-05, 5.130499999999802e-05, 5.1415999999998574e-05, 5.150000000000293e-05, 5.1457999999997284e-05, 5.13470000000002e-05, 5.0929999999997644e-05, 5.277799999999985e-05, 5.122200000000007e-05, 5.16669999999983e-05, 5.118100000000084e-05, 5.087499999999884e-05, 5.168100000000134e-05, 5.159700000000045e-05, 5.105600000000071e-05, 5.148599999999989e-05, 5.143100000000109e-05, 5.118100000000084e-05, 5.099999999999896e-05, 5.1152000000002223e-05, 5.156900000000131e-05, 5.161100000000002e-05, 5.155500000000174e-05, 5.102800000000157e-05, 5.155499999999827e-05, 5.111100000000299e-05, 5.108300000000038e-05, 5.168000000000186e-05, 5.15409999999987e-05, 5.111099999999952e-05, 5.154100000000217e-05, 5.137499999999934e-05, 5.115299999999823e-05, 5.133299999999716e-05, 5.116700000000127e-05, 5.2721999999998104e-05, 5.138899999999891e-05, 5.119500000000041e-05, 5.143000000000161e-05, 5.125000000000268e-05, 5.08469999999997e-05, 5.087499999999884e-05, 5.140299999999848e-05, 5.144400000000118e-05, 5.13470000000002e-05, 5.1708000000001e-05, 5.170900000000048e-05, 5.093000000000111e-05, 5.118000000000136e-05, 5.280500000000299e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.526" endtime="20201112 12:42:44.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.521" endtime="20201112 12:42:44.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.531" endtime="20201112 12:42:44.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.535" endtime="20201112 12:42:44.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.533" endtime="20201112 12:42:44.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.530" endtime="20201112 12:42:44.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.159" endtime="20201112 12:42:44.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.159" endtime="20201112 12:42:44.556"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.565" endtime="20201112 12:42:44.585"></status>
</kw>
<msg timestamp="20201112 12:42:44.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.563" endtime="20201112 12:42:44.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.586" endtime="20201112 12:42:44.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.589" endtime="20201112 12:42:44.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.561" endtime="20201112 12:42:44.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.559" endtime="20201112 12:42:44.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.600" endtime="20201112 12:42:44.885"></status>
</kw>
<msg timestamp="20201112 12:42:44.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020538528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.598" endtime="20201112 12:42:44.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020538528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.890" endtime="20201112 12:42:44.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.898" endtime="20201112 12:42:44.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.595" endtime="20201112 12:42:44.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.593" endtime="20201112 12:42:44.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.905" level="INFO">${RESULT} = [{'time': 0.020592278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3749999999998244e-05, 'source_diff': 5.3749999999998244e-05}, {'time': 0.020648333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:44.901" endtime="20201112 12:42:44.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.906" endtime="20201112 12:42:44.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.924" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.922" endtime="20201112 12:42:44.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.926" level="INFO">VALUE: [5.3749999999998244e-05, 5.2652000000000254e-05, 5.248600000000089e-05, 5.268100000000234e-05, 5.376299999999834e-05, 5.204200000000214e-05, 5.248700000000037e-05, 5.266700000000277e-05, 5.212500000000009e-05, 5.199999999999996e-05, 5.2165999999999324e-05, 5.2693999999998964e-05, 5.234699999999773e-05, 5.225000000000021e-05, 5.188899999999941e-05, 5.229100000000292e-05, 5.269499999999844e-05, 5.376400000000128e-05, 5.229199999999892e-05, 5.218099999999837e-05, 5.261100000000102e-05, 5.276400000000028e-05, 5.275000000000071e-05, 5.229199999999892e-05, 5.257000000000178e-05, 5.208400000000085e-05, 5.230599999999849e-05, 5.269500000000191e-05, 5.373699999999815e-05, 5.261200000000049e-05, 5.265299999999973e-05, 5.194400000000168e-05, 5.212500000000009e-05, 5.198600000000039e-05, 5.2680000000002863e-05, 5.208300000000138e-05, 5.380500000000052e-05, 5.280599999999899e-05, 5.190299999999898e-05, 5.2443999999998714e-05, 5.207000000000128e-05, 5.245800000000175e-05, 5.379200000000042e-05, 5.199999999999996e-05, 5.187499999999984e-05, 5.23470000000012e-05, 5.237500000000034e-05, 5.225000000000021e-05, 5.2221999999997604e-05, 5.211100000000052e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.925" endtime="20201112 12:42:44.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.920" endtime="20201112 12:42:44.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.934" endtime="20201112 12:42:44.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.937" endtime="20201112 12:42:44.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.936" endtime="20201112 12:42:44.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.932" endtime="20201112 12:42:44.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.557" endtime="20201112 12:42:44.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.556" endtime="20201112 12:42:44.959"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.968" endtime="20201112 12:42:44.988"></status>
</kw>
<msg timestamp="20201112 12:42:44.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.966" endtime="20201112 12:42:44.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.989" endtime="20201112 12:42:44.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.992" endtime="20201112 12:42:44.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.963" endtime="20201112 12:42:44.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.961" endtime="20201112 12:42:44.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.003" endtime="20201112 12:42:45.290"></status>
</kw>
<msg timestamp="20201112 12:42:45.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020533486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.001" endtime="20201112 12:42:45.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020533486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.294" endtime="20201112 12:42:45.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.303" endtime="20201112 12:42:45.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.998" endtime="20201112 12:42:45.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.996" endtime="20201112 12:42:45.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.310" level="INFO">${RESULT} = [{'time': 0.020586625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.313900000000066e-05, 'source_diff': 5.313900000000066e-05}, {'time': 0.020641625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.306" endtime="20201112 12:42:45.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.324" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.311" endtime="20201112 12:42:45.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.328" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.327" endtime="20201112 12:42:45.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.331" level="INFO">VALUE: [5.313900000000066e-05, 5.286100000000127e-05, 5.318099999999937e-05, 5.293099999999912e-05, 5.333299999999916e-05, 5.354200000000017e-05, 5.330599999999949e-05, 5.293100000000259e-05, 5.376300000000181e-05, 5.295899999999826e-05, 5.362499999999812e-05, 5.3249999999997744e-05, 5.480499999999805e-05, 5.312500000000109e-05, 5.3166000000000324e-05, 5.3430000000000144e-05, 5.481900000000109e-05, 5.283300000000213e-05, 5.479100000000195e-05, 5.323600000000164e-05, 5.304199999999967e-05, 5.298600000000139e-05, 5.2943999999999214e-05, 5.4708000000000534e-05, 5.368100000000334e-05, 5.331999999999906e-05, 5.355599999999974e-05, 5.3235999999998174e-05, 5.28609999999978e-05, 5.319499999999894e-05, 5.373600000000214e-05, 5.312500000000109e-05, 5.286100000000127e-05, 5.482000000000056e-05, 5.3666000000000824e-05, 5.479100000000195e-05, 5.343099999999962e-05, 5.2929999999999644e-05, 5.4749999999999244e-05, 5.4749999999999244e-05, 5.3499999999997994e-05, 5.2957999999998784e-05, 5.4763999999998814e-05, 5.2929999999999644e-05, 5.3693999999999964e-05, 5.318100000000284e-05, 5.312499999999762e-05, 5.354099999999723e-05, 5.305599999999924e-05, 5.28470000000017e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.330" endtime="20201112 12:42:45.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.325" endtime="20201112 12:42:45.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.335" endtime="20201112 12:42:45.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.338" endtime="20201112 12:42:45.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.337" endtime="20201112 12:42:45.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.333" endtime="20201112 12:42:45.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.960" endtime="20201112 12:42:45.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.959" endtime="20201112 12:42:45.359"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.368" endtime="20201112 12:42:45.387"></status>
</kw>
<msg timestamp="20201112 12:42:45.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.367" endtime="20201112 12:42:45.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.389" endtime="20201112 12:42:45.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.391" endtime="20201112 12:42:45.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.364" endtime="20201112 12:42:45.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.362" endtime="20201112 12:42:45.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.403" endtime="20201112 12:42:45.690"></status>
</kw>
<msg timestamp="20201112 12:42:45.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.401" endtime="20201112 12:42:45.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020454931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.694" endtime="20201112 12:42:45.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.703" endtime="20201112 12:42:45.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.398" endtime="20201112 12:42:45.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.396" endtime="20201112 12:42:45.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.710" level="INFO">${RESULT} = [{'time': 0.020454931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.41670000000008e-05, 'source_diff': 5.41670000000008e-05}, {'time': 0.020511944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:45.706" endtime="20201112 12:42:45.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.725" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.711" endtime="20201112 12:42:45.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.729" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.728" endtime="20201112 12:42:45.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.732" level="INFO">VALUE: [5.41670000000008e-05, 5.3971999999999354e-05, 5.3957999999999784e-05, 5.4180000000000894e-05, 5.4194000000000464e-05, 5.43609999999993e-05, 5.5708000000001534e-05, 5.580499999999905e-05, 5.455600000000074e-05, 5.4735999999999674e-05, 5.409699999999948e-05, 5.580500000000252e-05, 5.40280000000011e-05, 5.391699999999708e-05, 5.406999999999981e-05, 5.404200000000067e-05, 5.394499999999969e-05, 5.430600000000049e-05, 5.418100000000037e-05, 5.581999999999809e-05, 5.5805999999998523e-05, 5.430600000000049e-05, 5.430600000000049e-05, 5.393100000000012e-05, 5.461199999999902e-05, 5.4499999999998994e-05, 5.405500000000077e-05, 5.433300000000016e-05, 5.402699999999816e-05, 5.3971999999999354e-05, 5.454099999999823e-05, 5.4499999999998994e-05, 5.5763999999999814e-05, 5.394499999999969e-05, 5.4680000000001394e-05, 5.5777999999999384e-05, 5.462500000000259e-05, 5.404200000000067e-05, 5.4485999999999424e-05, 5.5805999999998523e-05, 5.429200000000092e-05, 5.393100000000012e-05, 5.5777999999999384e-05, 5.3887999999998465e-05, 5.5791999999998954e-05, 5.4277999999997883e-05, 5.409800000000242e-05, 5.4722000000000104e-05, 5.5763999999999814e-05, 5.454099999999823e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.731" endtime="20201112 12:42:45.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.725" endtime="20201112 12:42:45.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.736" endtime="20201112 12:42:45.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.739" endtime="20201112 12:42:45.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.738" endtime="20201112 12:42:45.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.734" endtime="20201112 12:42:45.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.360" endtime="20201112 12:42:45.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.360" endtime="20201112 12:42:45.760"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.769" endtime="20201112 12:42:45.788"></status>
</kw>
<msg timestamp="20201112 12:42:45.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.768" endtime="20201112 12:42:45.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.790" endtime="20201112 12:42:45.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.792" endtime="20201112 12:42:45.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.765" endtime="20201112 12:42:45.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.763" endtime="20201112 12:42:45.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.803" endtime="20201112 12:42:46.090"></status>
</kw>
<msg timestamp="20201112 12:42:46.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02044075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:45.801" endtime="20201112 12:42:46.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020385542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02044075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:46.094" endtime="20201112 12:42:46.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.103" endtime="20201112 12:42:46.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.799" endtime="20201112 12:42:46.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.797" endtime="20201112 12:42:46.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.110" level="INFO">${RESULT} = [{'time': 0.02044075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5208000000001034e-05, 'source_diff': 5.5208000000001034e-05}, {'time': 0.02049875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.106" endtime="20201112 12:42:46.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.124" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.111" endtime="20201112 12:42:46.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.128" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.127" endtime="20201112 12:42:46.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.131" level="INFO">VALUE: [5.5208000000001034e-05, 5.5305999999998023e-05, 5.6805999999999524e-05, 5.543099999999815e-05, 5.5013999999999064e-05, 5.531999999999759e-05, 5.494500000000069e-05, 5.505600000000124e-05, 5.538900000000291e-05, 5.497299999999983e-05, 5.5651999999999785e-05, 5.48609999999998e-05, 5.6750000000001244e-05, 5.5693999999998495e-05, 5.5236000000000174e-05, 5.551300000000009e-05, 5.537499999999987e-05, 5.4999999999999494e-05, 5.4929999999998175e-05, 5.5236000000000174e-05, 5.5194000000001464e-05, 5.6764000000000814e-05, 5.531899999999812e-05, 5.483299999999719e-05, 5.6763999999997344e-05, 5.518100000000137e-05, 5.533300000000116e-05, 5.555600000000174e-05, 5.5166000000002324e-05, 5.568100000000187e-05, 5.577699999999991e-05, 5.543100000000162e-05, 5.6750000000001244e-05, 5.4972000000000354e-05, 5.6736000000001674e-05, 5.5387999999999965e-05, 5.4930000000001644e-05, 5.5305999999998023e-05, 5.5499999999999994e-05, 5.5680000000002394e-05, 5.552699999999966e-05, 5.4999999999999494e-05, 5.5736000000000674e-05, 5.558299999999794e-05, 5.562500000000012e-05, 5.5249999999999744e-05, 5.5472000000000854e-05, 5.488899999999894e-05, 5.5555999999998273e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.129" endtime="20201112 12:42:46.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.125" endtime="20201112 12:42:46.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.135" endtime="20201112 12:42:46.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.138" endtime="20201112 12:42:46.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.137" endtime="20201112 12:42:46.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.133" endtime="20201112 12:42:46.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.761" endtime="20201112 12:42:46.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.761" endtime="20201112 12:42:46.159"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.168" endtime="20201112 12:42:46.187"></status>
</kw>
<msg timestamp="20201112 12:42:46.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.167" endtime="20201112 12:42:46.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.189" endtime="20201112 12:42:46.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.192" endtime="20201112 12:42:46.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.164" endtime="20201112 12:42:46.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.162" endtime="20201112 12:42:46.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.202" endtime="20201112 12:42:46.488"></status>
</kw>
<msg timestamp="20201112 12:42:46.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.200" endtime="20201112 12:42:46.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020600889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.493" endtime="20201112 12:42:46.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.501" endtime="20201112 12:42:46.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.198" endtime="20201112 12:42:46.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.196" endtime="20201112 12:42:46.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.508" level="INFO">${RESULT} = [{'time': 0.020600889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.590299999999951e-05, 'source_diff': 5.590299999999951e-05}, {'time': 0.020662889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.505" endtime="20201112 12:42:46.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.522" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.509" endtime="20201112 12:42:46.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.527" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.526" endtime="20201112 12:42:46.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.530" level="INFO">VALUE: [5.590299999999951e-05, 5.634700000000173e-05, 5.662500000000112e-05, 5.5929999999999175e-05, 5.611099999999758e-05, 5.662500000000112e-05, 5.605600000000224e-05, 5.643100000000262e-05, 5.611100000000105e-05, 5.6319999999998593e-05, 5.612500000000062e-05, 5.65549999999998e-05, 5.65549999999998e-05, 5.7750000000002244e-05, 5.5972000000001354e-05, 5.629099999999998e-05, 5.612500000000062e-05, 5.665300000000026e-05, 5.611099999999758e-05, 5.6179999999999425e-05, 5.662500000000112e-05, 5.5971999999997885e-05, 5.618100000000237e-05, 5.6555999999999274e-05, 5.6291999999999454e-05, 5.7763999999998344e-05, 5.6055999999998773e-05, 5.7750000000002244e-05, 5.637500000000087e-05, 5.608399999999791e-05, 5.627700000000041e-05, 5.78749999999989e-05, 5.647299999999786e-05, 5.64870000000009e-05, 5.665300000000026e-05, 5.6679999999999925e-05, 5.6471999999998385e-05, 5.6165999999999855e-05, 5.7735999999999205e-05, 5.6471999999998385e-05, 5.7749999999998775e-05, 5.608300000000191e-05, 5.6264000000000314e-05, 5.58610000000008e-05, 5.6264000000000314e-05, 5.609700000000148e-05, 5.61670000000028e-05, 5.593099999999865e-05, 5.6736000000001674e-05, 5.58610000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.528" endtime="20201112 12:42:46.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.523" endtime="20201112 12:42:46.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.533" endtime="20201112 12:42:46.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.537" endtime="20201112 12:42:46.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.535" endtime="20201112 12:42:46.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.532" endtime="20201112 12:42:46.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.160" endtime="20201112 12:42:46.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.160" endtime="20201112 12:42:46.558"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.567" endtime="20201112 12:42:46.586"></status>
</kw>
<msg timestamp="20201112 12:42:46.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.565" endtime="20201112 12:42:46.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.588" endtime="20201112 12:42:46.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.591" endtime="20201112 12:42:46.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.563" endtime="20201112 12:42:46.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.560" endtime="20201112 12:42:46.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.601" endtime="20201112 12:42:46.889"></status>
</kw>
<msg timestamp="20201112 12:42:46.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.600" endtime="20201112 12:42:46.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020433458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.893" endtime="20201112 12:42:46.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.902" endtime="20201112 12:42:46.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.597" endtime="20201112 12:42:46.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.595" endtime="20201112 12:42:46.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.909" level="INFO">${RESULT} = [{'time': 0.020433458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7472000000002854e-05, 'source_diff': 5.7472000000002854e-05}, {'time': 0.020493444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:46.905" endtime="20201112 12:42:46.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.922" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.910" endtime="20201112 12:42:46.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.927" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.926" endtime="20201112 12:42:46.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.930" level="INFO">VALUE: [5.7472000000002854e-05, 5.681899999999962e-05, 5.6916000000000605e-05, 5.704100000000073e-05, 5.7014000000001064e-05, 5.712499999999815e-05, 5.715300000000076e-05, 5.7249999999998274e-05, 5.7528000000001134e-05, 5.7514000000001564e-05, 5.6944000000003214e-05, 5.769499999999997e-05, 5.743100000000015e-05, 5.769499999999997e-05, 5.71809999999999e-05, 5.7485999999998955e-05, 5.741700000000058e-05, 5.883299999999772e-05, 5.76810000000004e-05, 5.75550000000008e-05, 5.756900000000037e-05, 5.758299999999994e-05, 5.6930000000000175e-05, 5.8763999999999345e-05, 5.731900000000012e-05, 5.7735999999999205e-05, 5.7000000000001494e-05, 5.736099999999883e-05, 5.6930000000000175e-05, 5.759699999999951e-05, 5.7042000000000204e-05, 5.7013999999997594e-05, 5.711099999999858e-05, 5.741700000000058e-05, 5.7764000000001814e-05, 5.769499999999997e-05, 5.7305999999996554e-05, 5.711099999999858e-05, 5.8792000000001954e-05, 5.6999999999998024e-05, 5.716700000000033e-05, 5.697300000000183e-05, 5.7055999999999774e-05, 5.731900000000012e-05, 5.6971999999998885e-05, 5.762499999999865e-05, 5.684699999999876e-05, 5.881900000000162e-05, 5.7444000000000245e-05, 5.76810000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.928" endtime="20201112 12:42:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.923" endtime="20201112 12:42:46.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.934" endtime="20201112 12:42:46.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.937" endtime="20201112 12:42:46.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.936" endtime="20201112 12:42:46.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.932" endtime="20201112 12:42:46.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.559" endtime="20201112 12:42:46.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.558" endtime="20201112 12:42:46.958"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.967" endtime="20201112 12:42:46.988"></status>
</kw>
<msg timestamp="20201112 12:42:46.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.966" endtime="20201112 12:42:46.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.990" endtime="20201112 12:42:46.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.992" endtime="20201112 12:42:46.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.963" endtime="20201112 12:42:46.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.961" endtime="20201112 12:42:46.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.003" endtime="20201112 12:42:47.288"></status>
</kw>
<msg timestamp="20201112 12:42:47.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02039125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:47.001" endtime="20201112 12:42:47.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02039125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020449139, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:47.293" endtime="20201112 12:42:47.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.301" endtime="20201112 12:42:47.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.998" endtime="20201112 12:42:47.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.997" endtime="20201112 12:42:47.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.308" level="INFO">${RESULT} = [{'time': 0.020449139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.788900000000194e-05, 'source_diff': 5.788900000000194e-05}, {'time': 0.020509153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:47.305" endtime="20201112 12:42:47.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.323" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.309" endtime="20201112 12:42:47.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.328" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.327" endtime="20201112 12:42:47.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.331" level="INFO">VALUE: [5.788900000000194e-05, 5.78749999999989e-05, 5.9805999999999054e-05, 5.8708000000001065e-05, 5.977700000000044e-05, 5.822300000000308e-05, 5.86949999999975e-05, 5.812500000000262e-05, 5.7929999999997706e-05, 5.7958000000000315e-05, 5.8278000000001884e-05, 5.836099999999983e-05, 5.863899999999922e-05, 5.85550000000018e-05, 5.7985999999999455e-05, 5.8180000000001425e-05, 5.8235999999999705e-05, 5.7985999999999455e-05, 5.7943999999997275e-05, 5.836099999999983e-05, 5.819500000000047e-05, 5.8556000000001274e-05, 5.863899999999922e-05, 5.8222000000000135e-05, 5.8500000000002994e-05, 5.845900000000029e-05, 5.8291999999997984e-05, 5.8402000000002535e-05, 5.847299999999986e-05, 5.78749999999989e-05, 5.8749999999999775e-05, 5.7930000000001175e-05, 5.812499999999915e-05, 5.78749999999989e-05, 5.8651999999999316e-05, 5.8264000000002314e-05, 5.8736000000000205e-05, 5.8485999999999955e-05, 5.8679999999998456e-05, 5.9764000000000345e-05, 5.865300000000226e-05, 5.811099999999958e-05, 5.8083999999999913e-05, 5.78749999999989e-05, 5.840299999999854e-05, 5.980499999999958e-05, 5.8222000000000135e-05, 5.787500000000237e-05, 5.819500000000047e-05, 5.841700000000158e-05]</msg>
<status status="PASS" starttime="20201112 12:42:47.329" endtime="20201112 12:42:47.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.324" endtime="20201112 12:42:47.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.334" endtime="20201112 12:42:47.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.338" endtime="20201112 12:42:47.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.336" endtime="20201112 12:42:47.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.333" endtime="20201112 12:42:47.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.959" endtime="20201112 12:42:47.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.959" endtime="20201112 12:42:47.359"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.368" endtime="20201112 12:42:47.387"></status>
</kw>
<msg timestamp="20201112 12:42:47.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.367" endtime="20201112 12:42:47.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.389" endtime="20201112 12:42:47.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.391" endtime="20201112 12:42:47.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.364" endtime="20201112 12:42:47.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.362" endtime="20201112 12:42:47.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.402" endtime="20201112 12:42:47.688"></status>
</kw>
<msg timestamp="20201112 12:42:47.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.400" endtime="20201112 12:42:47.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020602111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.692" endtime="20201112 12:42:47.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.701" endtime="20201112 12:42:47.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.397" endtime="20201112 12:42:47.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.396" endtime="20201112 12:42:47.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.708" level="INFO">${RESULT} = [{'time': 0.020602111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8957999999997845e-05, 'source_diff': 5.8957999999997845e-05}, {'time': 0.020667097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:47.704" endtime="20201112 12:42:47.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.722" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.709" endtime="20201112 12:42:47.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.727" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.726" endtime="20201112 12:42:47.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.729" level="INFO">VALUE: [5.8957999999997845e-05, 5.9527999999999665e-05, 5.9736000000001205e-05, 5.9680000000002925e-05, 5.9443999999998776e-05, 6.081900000000015e-05, 5.931900000000212e-05, 5.884700000000076e-05, 5.961100000000108e-05, 5.9458000000001815e-05, 5.972300000000111e-05, 5.9499999999997055e-05, 5.9320000000001594e-05, 5.959700000000151e-05, 5.893100000000165e-05, 6.0806000000000054e-05, 6.0819999999999624e-05, 5.888899999999947e-05, 5.912500000000015e-05, 5.9500000000000525e-05, 5.926300000000037e-05, 5.931899999999865e-05, 6.079100000000101e-05, 5.9500000000000525e-05, 5.93750000000004e-05, 5.9457999999998346e-05, 5.912500000000015e-05, 5.8943999999998276e-05, 5.884700000000076e-05, 5.933299999999822e-05, 5.893100000000165e-05, 5.916700000000233e-05, 5.920900000000104e-05, 5.918099999999843e-05, 5.938899999999997e-05, 5.9485999999997485e-05, 5.93750000000004e-05, 5.916699999999886e-05, 6.065300000000079e-05, 5.9027999999999164e-05, 6.073699999999821e-05, 5.93750000000004e-05, 5.9348000000000734e-05, 5.955499999999933e-05, 5.886100000000033e-05, 5.9514000000000095e-05, 5.8986000000000455e-05, 6.080500000000058e-05, 5.933300000000169e-05, 5.8929999999998706e-05]</msg>
<status status="PASS" starttime="20201112 12:42:47.728" endtime="20201112 12:42:47.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.723" endtime="20201112 12:42:47.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.733" endtime="20201112 12:42:47.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.737" endtime="20201112 12:42:47.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.735" endtime="20201112 12:42:47.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.731" endtime="20201112 12:42:47.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.360" endtime="20201112 12:42:47.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.359" endtime="20201112 12:42:47.758"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.767" endtime="20201112 12:42:47.785"></status>
</kw>
<msg timestamp="20201112 12:42:47.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.765" endtime="20201112 12:42:47.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.786" endtime="20201112 12:42:47.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.789" endtime="20201112 12:42:47.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.762" endtime="20201112 12:42:47.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.760" endtime="20201112 12:42:47.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.800" endtime="20201112 12:42:48.087"></status>
</kw>
<msg timestamp="20201112 12:42:48.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020421764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.798" endtime="20201112 12:42:48.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020421764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.091" endtime="20201112 12:42:48.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.100" endtime="20201112 12:42:48.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.795" endtime="20201112 12:42:48.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.793" endtime="20201112 12:42:48.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.107" level="INFO">${RESULT} = [{'time': 0.020421764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.083299999999972e-05, 'source_diff': 6.083299999999972e-05}, {'time': 0.020487764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.103" endtime="20201112 12:42:48.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.121" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.108" endtime="20201112 12:42:48.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.125" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.124" endtime="20201112 12:42:48.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.128" level="INFO">VALUE: [6.083299999999972e-05, 6.0305999999999554e-05, 6.034699999999879e-05, 6.0041999999999734e-05, 6.0000000000001025e-05, 5.988900000000047e-05, 6.066700000000036e-05, 6.0193999999999526e-05, 6.062499999999818e-05, 6.186100000000333e-05, 6.0500000000001525e-05, 5.9929999999999706e-05, 6.0264000000000845e-05, 6.0542000000000235e-05, 6.004100000000026e-05, 6.012500000000115e-05, 6.0707999999999596e-05, 5.9943999999999276e-05, 6.17499999999993e-05, 6.036100000000183e-05, 6.0569999999999374e-05, 6.036099999999836e-05, 6.037499999999793e-05, 5.986100000000133e-05, 6.0749999999998305e-05, 6.048700000000143e-05, 6.0222000000002135e-05, 6.044500000000272e-05, 6.073700000000168e-05, 6.066699999999689e-05, 6.17499999999993e-05, 6.0014000000000595e-05, 6.03750000000014e-05, 6.0165999999996916e-05, 6.0665999999997416e-05, 6.011100000000158e-05, 6.061099999999861e-05, 6.055500000000033e-05, 6.0305999999999554e-05, 6.17499999999993e-05, 6.0707999999999596e-05, 6.012499999999768e-05, 6.0056000000002774e-05, 6.066700000000036e-05, 5.9986000000001455e-05, 6.0305999999999554e-05, 6.177699999999897e-05, 6.016699999999986e-05, 5.9887999999997527e-05, 6.065300000000079e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.126" endtime="20201112 12:42:48.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.122" endtime="20201112 12:42:48.129"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.132" endtime="20201112 12:42:48.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.136" endtime="20201112 12:42:48.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.134" endtime="20201112 12:42:48.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.130" endtime="20201112 12:42:48.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.759" endtime="20201112 12:42:48.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.758" endtime="20201112 12:42:48.157"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.166" endtime="20201112 12:42:48.185"></status>
</kw>
<msg timestamp="20201112 12:42:48.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.164" endtime="20201112 12:42:48.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.187" endtime="20201112 12:42:48.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.189" endtime="20201112 12:42:48.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.161" endtime="20201112 12:42:48.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.159" endtime="20201112 12:42:48.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.200" endtime="20201112 12:42:48.486"></status>
</kw>
<msg timestamp="20201112 12:42:48.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020455431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.198" endtime="20201112 12:42:48.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020455431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.491" endtime="20201112 12:42:48.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.500" endtime="20201112 12:42:48.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.195" endtime="20201112 12:42:48.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.194" endtime="20201112 12:42:48.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.507" level="INFO">${RESULT} = [{'time': 0.020516361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0930000000000706e-05, 'source_diff': 6.0930000000000706e-05}, {'time': 0.020583292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:48.503" endtime="20201112 12:42:48.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.521" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.508" endtime="20201112 12:42:48.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.525" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.524" endtime="20201112 12:42:48.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.528" level="INFO">VALUE: [6.0930000000000706e-05, 6.137499999999893e-05, 6.140299999999807e-05, 6.105599999999684e-05, 6.168099999999746e-05, 6.093100000000018e-05, 6.105500000000083e-05, 6.1582999999997e-05, 6.0943999999996806e-05, 6.145800000000035e-05, 6.136099999999936e-05, 6.088900000000147e-05, 6.141599999999817e-05, 6.145800000000035e-05, 6.166700000000136e-05, 6.093100000000018e-05, 6.161099999999961e-05, 6.091700000000061e-05, 6.13750000000024e-05, 6.173599999999974e-05, 6.087499999999843e-05, 6.1014000000001595e-05, 6.111099999999911e-05, 6.10690000000004e-05, 6.280600000000205e-05, 6.104199999999727e-05, 6.169400000000103e-05, 6.113799999999878e-05, 6.131900000000065e-05, 6.123599999999924e-05, 6.162499999999918e-05, 6.134699999999979e-05, 6.147199999999992e-05, 6.116600000000139e-05, 6.084699999999929e-05, 6.111100000000258e-05, 6.112500000000215e-05, 6.086099999999886e-05, 6.1014000000001595e-05, 6.109699999999954e-05, 6.084700000000276e-05, 6.0999999999998555e-05, 6.173599999999974e-05, 6.277799999999945e-05, 6.169400000000103e-05, 6.161199999999908e-05, 6.091700000000061e-05, 6.130500000000108e-05, 6.112499999999868e-05, 6.130500000000108e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.526" endtime="20201112 12:42:48.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.521" endtime="20201112 12:42:48.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.532" endtime="20201112 12:42:48.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.535" endtime="20201112 12:42:48.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.534" endtime="20201112 12:42:48.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.530" endtime="20201112 12:42:48.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.157" endtime="20201112 12:42:48.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.157" endtime="20201112 12:42:48.556"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.565" endtime="20201112 12:42:48.584"></status>
</kw>
<msg timestamp="20201112 12:42:48.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.564" endtime="20201112 12:42:48.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.586" endtime="20201112 12:42:48.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.588" endtime="20201112 12:42:48.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.561" endtime="20201112 12:42:48.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.559" endtime="20201112 12:42:48.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.599" endtime="20201112 12:42:48.885"></status>
</kw>
<msg timestamp="20201112 12:42:48.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020496, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:48.597" endtime="20201112 12:42:48.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020496, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557847, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:48.889" endtime="20201112 12:42:48.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.897" endtime="20201112 12:42:48.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.595" endtime="20201112 12:42:48.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.593" endtime="20201112 12:42:48.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.905" level="INFO">${RESULT} = [{'time': 0.020557847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.184700000000029e-05, 'source_diff': 6.184700000000029e-05}, {'time': 0.020622875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.901" endtime="20201112 12:42:48.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.920" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.906" endtime="20201112 12:42:48.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.924" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.923" endtime="20201112 12:42:48.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.927" level="INFO">VALUE: [6.184700000000029e-05, 6.184700000000029e-05, 6.20279999999987e-05, 6.234700000000079e-05, 6.232000000000112e-05, 6.268099999999846e-05, 6.226399999999938e-05, 6.248600000000049e-05, 6.248600000000049e-05, 6.20140000000026e-05, 6.241700000000211e-05, 6.218100000000143e-05, 6.18620000000028e-05, 6.222300000000014e-05, 6.266699999999889e-05, 6.218100000000143e-05, 6.248600000000049e-05, 6.194400000000128e-05, 6.216600000000239e-05, 6.254099999999929e-05, 6.237499999999993e-05, 6.380500000000011e-05, 6.234700000000079e-05, 6.27500000000003e-05, 6.222200000000067e-05, 6.212499999999968e-05, 6.234700000000079e-05, 6.195900000000032e-05, 6.184700000000029e-05, 6.229199999999852e-05, 6.201399999999913e-05, 6.262500000000018e-05, 6.205599999999784e-05, 6.374999999999784e-05, 6.213899999999925e-05, 6.263899999999975e-05, 6.230500000000208e-05, 6.245800000000135e-05, 6.186099999999986e-05, 6.252800000000266e-05, 6.204100000000226e-05, 6.190300000000204e-05, 6.237499999999993e-05, 6.276399999999988e-05, 6.259700000000104e-05, 6.226399999999938e-05, 6.194500000000075e-05, 6.26950000000015e-05, 6.226399999999938e-05, 6.262500000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.925" endtime="20201112 12:42:48.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.920" endtime="20201112 12:42:48.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.931" endtime="20201112 12:42:48.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.934" endtime="20201112 12:42:48.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.933" endtime="20201112 12:42:48.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.929" endtime="20201112 12:42:48.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.557" endtime="20201112 12:42:48.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.557" endtime="20201112 12:42:48.955"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.964" endtime="20201112 12:42:48.983"></status>
</kw>
<msg timestamp="20201112 12:42:48.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.963" endtime="20201112 12:42:48.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.985" endtime="20201112 12:42:48.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.987" endtime="20201112 12:42:48.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.960" endtime="20201112 12:42:48.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.958" endtime="20201112 12:42:48.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.998" endtime="20201112 12:42:49.284"></status>
</kw>
<msg timestamp="20201112 12:42:49.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020451264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.996" endtime="20201112 12:42:49.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020451264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.289" endtime="20201112 12:42:49.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.297" endtime="20201112 12:42:49.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.993" endtime="20201112 12:42:49.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.992" endtime="20201112 12:42:49.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.304" level="INFO">${RESULT} = [{'time': 0.020451264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.35280000000002e-05, 'source_diff': 6.35280000000002e-05}, {'time': 0.020516264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:49.301" endtime="20201112 12:42:49.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.305" endtime="20201112 12:42:49.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.323" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.322" endtime="20201112 12:42:49.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.325" level="INFO">VALUE: [6.35280000000002e-05, 6.286100000000086e-05, 6.351400000000063e-05, 6.370900000000207e-05, 6.305599999999884e-05, 6.363900000000075e-05, 6.481900000000068e-05, 6.297300000000089e-05, 6.309699999999807e-05, 6.330499999999961e-05, 6.480500000000111e-05, 6.369399999999956e-05, 6.479099999999807e-05, 6.341600000000017e-05, 6.315299999999982e-05, 6.362499999999771e-05, 6.355499999999986e-05, 6.348600000000149e-05, 6.372200000000217e-05, 6.326400000000038e-05, 6.337500000000093e-05, 6.311100000000111e-05, 6.318100000000243e-05, 6.305599999999884e-05, 6.322200000000167e-05, 6.343099999999921e-05, 6.351299999999768e-05, 6.480600000000059e-05, 6.368100000000293e-05, 6.482000000000016e-05, 6.326400000000038e-05, 6.34439999999993e-05, 6.342999999999974e-05, 6.306899999999893e-05, 6.312500000000068e-05, 6.477799999999798e-05, 6.363900000000075e-05, 6.301400000000013e-05, 6.359699999999857e-05, 6.351400000000063e-05, 6.331899999999918e-05, 6.343099999999921e-05, 6.290300000000304e-05, 6.37089999999986e-05, 6.345799999999888e-05, 6.347300000000139e-05, 6.298599999999752e-05, 6.483300000000025e-05, 6.333299999999875e-05, 6.355599999999934e-05]</msg>
<status status="PASS" starttime="20201112 12:42:49.324" endtime="20201112 12:42:49.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.319" endtime="20201112 12:42:49.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.329" endtime="20201112 12:42:49.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.333" endtime="20201112 12:42:49.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.331" endtime="20201112 12:42:49.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.328" endtime="20201112 12:42:49.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.956" endtime="20201112 12:42:49.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.956" endtime="20201112 12:42:49.354"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.363" endtime="20201112 12:42:49.382"></status>
</kw>
<msg timestamp="20201112 12:42:49.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.361" endtime="20201112 12:42:49.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.384" endtime="20201112 12:42:49.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.386" endtime="20201112 12:42:49.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.359" endtime="20201112 12:42:49.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.356" endtime="20201112 12:42:49.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.397" endtime="20201112 12:42:49.683"></status>
</kw>
<msg timestamp="20201112 12:42:49.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.395" endtime="20201112 12:42:49.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020481778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020546444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.688" endtime="20201112 12:42:49.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.696" endtime="20201112 12:42:49.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.393" endtime="20201112 12:42:49.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.391" endtime="20201112 12:42:49.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.703" level="INFO">${RESULT} = [{'time': 0.020546444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.466600000000142e-05, 'source_diff': 6.466600000000142e-05}, {'time': 0.020614431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:49.700" endtime="20201112 12:42:49.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.717" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.704" endtime="20201112 12:42:49.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.722" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.721" endtime="20201112 12:42:49.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.724" level="INFO">VALUE: [6.466600000000142e-05, 6.466699999999742e-05, 6.400000000000156e-05, 6.429100000000104e-05, 6.441600000000117e-05, 6.415299999999735e-05, 6.463900000000175e-05, 6.580500000000211e-05, 6.580499999999864e-05, 6.568099999999799e-05, 6.468100000000046e-05, 6.393100000000318e-05, 6.473599999999927e-05, 6.395900000000232e-05, 6.469500000000003e-05, 6.40699999999994e-05, 6.423599999999877e-05, 6.449999999999859e-05, 6.468100000000046e-05, 6.395799999999938e-05, 6.448700000000196e-05, 6.454200000000077e-05, 6.393000000000024e-05, 6.45280000000012e-05, 6.450000000000206e-05, 6.409699999999907e-05, 6.57500000000033e-05, 6.398599999999852e-05, 6.426400000000138e-05, 6.443100000000021e-05, 6.418000000000049e-05, 6.580600000000159e-05, 6.40699999999994e-05, 6.419499999999953e-05, 6.413900000000125e-05, 6.426400000000138e-05, 6.473599999999927e-05, 6.397200000000242e-05, 6.395799999999938e-05, 6.466700000000089e-05, 6.398599999999852e-05, 6.44440000000003e-05, 6.419400000000006e-05, 6.454099999999782e-05, 6.580500000000211e-05, 6.447199999999945e-05, 6.579099999999907e-05, 6.398599999999852e-05, 6.443000000000074e-05, 6.423600000000224e-05]</msg>
<status status="PASS" starttime="20201112 12:42:49.723" endtime="20201112 12:42:49.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.718" endtime="20201112 12:42:49.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.728" endtime="20201112 12:42:49.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.732" endtime="20201112 12:42:49.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.730" endtime="20201112 12:42:49.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.727" endtime="20201112 12:42:49.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.355" endtime="20201112 12:42:49.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.354" endtime="20201112 12:42:49.753"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.762" endtime="20201112 12:42:49.781"></status>
</kw>
<msg timestamp="20201112 12:42:49.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.760" endtime="20201112 12:42:49.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.783" endtime="20201112 12:42:49.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.785" endtime="20201112 12:42:49.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.758" endtime="20201112 12:42:49.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.755" endtime="20201112 12:42:49.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.796" endtime="20201112 12:42:50.081"></status>
</kw>
<msg timestamp="20201112 12:42:50.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.794" endtime="20201112 12:42:50.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020409917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.086" endtime="20201112 12:42:50.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.094" endtime="20201112 12:42:50.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.791" endtime="20201112 12:42:50.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.790" endtime="20201112 12:42:50.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.101" level="INFO">${RESULT} = [{'time': 0.020475333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.54159999999987e-05, 'source_diff': 6.54159999999987e-05}, {'time': 0.020547319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:50.098" endtime="20201112 12:42:50.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.115" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.102" endtime="20201112 12:42:50.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.120" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.119" endtime="20201112 12:42:50.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.123" level="INFO">VALUE: [6.54159999999987e-05, 6.67220000000017e-05, 6.556900000000143e-05, 6.484699999999982e-05, 6.683299999999878e-05, 6.530499999999814e-05, 6.505500000000136e-05, 6.488899999999853e-05, 6.532000000000066e-05, 6.541700000000164e-05, 6.534700000000032e-05, 6.487499999999896e-05, 6.684799999999783e-05, 6.486099999999939e-05, 6.532000000000066e-05, 6.555600000000134e-05, 6.543099999999774e-05, 6.487499999999896e-05, 6.569399999999809e-05, 6.506900000000093e-05, 6.574999999999984e-05, 6.493000000000124e-05, 6.501399999999866e-05, 6.504099999999832e-05, 6.495800000000038e-05, 6.542999999999827e-05, 6.524999999999934e-05, 6.681899999999921e-05, 6.52500000000028e-05, 6.529200000000152e-05, 6.547200000000045e-05, 6.524999999999934e-05, 6.505600000000084e-05, 6.573600000000027e-05, 6.512499999999921e-05, 6.563799999999981e-05, 6.516700000000139e-05, 6.672300000000117e-05, 6.512499999999921e-05, 6.561100000000014e-05, 6.537500000000293e-05, 6.516599999999845e-05, 6.549999999999959e-05, 6.568000000000199e-05, 6.486100000000286e-05, 6.486099999999939e-05, 6.519400000000106e-05, 6.57220000000007e-05, 6.513900000000225e-05, 6.493100000000071e-05]</msg>
<status status="PASS" starttime="20201112 12:42:50.121" endtime="20201112 12:42:50.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.116" endtime="20201112 12:42:50.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.130" endtime="20201112 12:42:50.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.134" endtime="20201112 12:42:50.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.132" endtime="20201112 12:42:50.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.129" endtime="20201112 12:42:50.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.754" endtime="20201112 12:42:50.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.753" endtime="20201112 12:42:50.155"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.164" endtime="20201112 12:42:50.184"></status>
</kw>
<msg timestamp="20201112 12:42:50.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.162" endtime="20201112 12:42:50.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.185" endtime="20201112 12:42:50.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.188" endtime="20201112 12:42:50.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.160" endtime="20201112 12:42:50.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.157" endtime="20201112 12:42:50.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.199" endtime="20201112 12:42:50.486"></status>
</kw>
<msg timestamp="20201112 12:42:50.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.197" endtime="20201112 12:42:50.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020485056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.491" endtime="20201112 12:42:50.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.500" endtime="20201112 12:42:50.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.194" endtime="20201112 12:42:50.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.193" endtime="20201112 12:42:50.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.507" level="INFO">${RESULT} = [{'time': 0.020485056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.619500000000153e-05, 'source_diff': 6.619500000000153e-05}, {'time': 0.020556056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:50.503" endtime="20201112 12:42:50.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.521" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.508" endtime="20201112 12:42:50.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.526" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.525" endtime="20201112 12:42:50.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.529" level="INFO">VALUE: [6.619500000000153e-05, 6.629199999999905e-05, 6.663900000000028e-05, 6.675000000000084e-05, 6.584700000000082e-05, 6.634699999999785e-05, 6.636100000000089e-05, 6.587499999999996e-05, 6.64159999999997e-05, 6.62639999999999e-05, 6.773600000000227e-05, 6.780600000000012e-05, 6.668000000000299e-05, 6.630600000000209e-05, 6.580599999999812e-05, 6.62220000000012e-05, 6.665299999999985e-05, 6.599999999999662e-05, 6.659800000000105e-05, 6.668099999999899e-05, 6.588800000000006e-05, 6.588899999999953e-05, 6.659700000000157e-05, 6.59440000000018e-05, 6.598600000000052e-05, 6.64159999999997e-05, 6.637500000000046e-05, 6.605500000000236e-05, 6.642999999999927e-05, 6.637500000000046e-05, 6.591700000000214e-05, 6.637500000000046e-05, 6.650000000000059e-05, 6.591700000000214e-05, 6.782000000000316e-05, 6.601399999999966e-05, 6.766700000000042e-05, 6.627800000000295e-05, 6.663800000000081e-05, 6.586100000000039e-05, 6.618000000000249e-05, 6.616599999999945e-05, 6.641600000000317e-05, 6.594399999999834e-05, 6.667999999999952e-05, 6.588899999999953e-05, 6.611099999999717e-05, 6.648600000000102e-05, 6.587499999999996e-05, 6.675000000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:42:50.527" endtime="20201112 12:42:50.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.522" endtime="20201112 12:42:50.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.533" endtime="20201112 12:42:50.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.536" endtime="20201112 12:42:50.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.535" endtime="20201112 12:42:50.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.531" endtime="20201112 12:42:50.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.156" endtime="20201112 12:42:50.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.155" endtime="20201112 12:42:50.557"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.566" endtime="20201112 12:42:50.585"></status>
</kw>
<msg timestamp="20201112 12:42:50.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.565" endtime="20201112 12:42:50.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.587" endtime="20201112 12:42:50.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.590" endtime="20201112 12:42:50.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.562" endtime="20201112 12:42:50.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.560" endtime="20201112 12:42:50.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.600" endtime="20201112 12:42:50.887"></status>
</kw>
<msg timestamp="20201112 12:42:50.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02047225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:50.599" endtime="20201112 12:42:50.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02047225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:50.891" endtime="20201112 12:42:50.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.900" endtime="20201112 12:42:50.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.596" endtime="20201112 12:42:50.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.594" endtime="20201112 12:42:50.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.907" level="INFO">${RESULT} = [{'time': 0.020539736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.748599999999855e-05, 'source_diff': 6.748599999999855e-05}, {'time': 0.02061275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:50.904" endtime="20201112 12:42:50.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.921" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.908" endtime="20201112 12:42:50.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.926" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.925" endtime="20201112 12:42:50.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.928" level="INFO">VALUE: [6.748599999999855e-05, 6.701400000000066e-05, 6.768099999999999e-05, 6.716699999999992e-05, 6.705599999999937e-05, 6.719500000000253e-05, 6.70419999999998e-05, 6.694500000000228e-05, 6.722199999999873e-05, 6.880600000000112e-05, 6.719500000000253e-05, 6.736099999999842e-05, 6.730599999999962e-05, 6.754199999999683e-05, 6.705599999999937e-05, 6.712500000000121e-05, 6.733299999999928e-05, 6.694499999999881e-05, 6.881900000000121e-05, 6.737499999999799e-05, 6.725000000000134e-05, 6.70419999999998e-05, 6.731900000000318e-05, 6.687499999999749e-05, 6.711099999999817e-05, 6.712499999999774e-05, 6.762500000000171e-05, 6.768099999999999e-05, 6.768099999999999e-05, 6.718100000000296e-05, 6.734799999999833e-05, 6.731999999999919e-05, 6.77359999999988e-05, 6.770899999999913e-05, 6.738900000000103e-05, 6.755500000000039e-05, 6.724999999999787e-05, 6.700000000000109e-05, 6.726399999999744e-05, 6.755500000000039e-05, 6.695799999999891e-05, 6.756899999999996e-05, 6.705600000000284e-05, 6.731999999999919e-05, 6.743099999999974e-05, 6.681999999999869e-05, 6.769499999999956e-05, 6.694499999999881e-05, 6.763899999999781e-05, 6.873699999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:42:50.927" endtime="20201112 12:42:50.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.922" endtime="20201112 12:42:50.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.932" endtime="20201112 12:42:50.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.935" endtime="20201112 12:42:50.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.934" endtime="20201112 12:42:50.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.930" endtime="20201112 12:42:50.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.558" endtime="20201112 12:42:50.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.557" endtime="20201112 12:42:50.956"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.965" endtime="20201112 12:42:50.984"></status>
</kw>
<msg timestamp="20201112 12:42:50.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.964" endtime="20201112 12:42:50.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.986" endtime="20201112 12:42:50.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.989" endtime="20201112 12:42:50.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.961" endtime="20201112 12:42:50.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.959" endtime="20201112 12:42:50.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.999" endtime="20201112 12:42:51.286"></status>
</kw>
<msg timestamp="20201112 12:42:51.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.997" endtime="20201112 12:42:51.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020441417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.290" endtime="20201112 12:42:51.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.299" endtime="20201112 12:42:51.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.995" endtime="20201112 12:42:51.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.993" endtime="20201112 12:42:51.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.306" level="INFO">${RESULT} = [{'time': 0.020441417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.833399999999976e-05, 'source_diff': 6.833399999999976e-05}, {'time': 0.020515361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.302" endtime="20201112 12:42:51.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.320" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.307" endtime="20201112 12:42:51.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.325" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.323" endtime="20201112 12:42:51.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.327" level="INFO">VALUE: [6.833399999999976e-05, 6.813899999999831e-05, 6.819400000000059e-05, 6.827799999999801e-05, 6.976399999999994e-05, 6.862500000000271e-05, 6.80969999999996e-05, 6.812499999999874e-05, 6.82359999999993e-05, 6.788899999999806e-05, 6.822199999999973e-05, 6.819500000000006e-05, 6.80700000000034e-05, 6.973700000000027e-05, 6.874999999999937e-05, 6.833300000000028e-05, 6.836099999999942e-05, 6.836099999999942e-05, 6.849999999999912e-05, 6.786099999999892e-05, 6.818000000000102e-05, 6.979199999999908e-05, 6.793100000000024e-05, 6.808300000000003e-05, 6.791700000000067e-05, 6.848599999999955e-05, 6.824999999999887e-05, 6.82359999999993e-05, 6.799999999999862e-05, 6.820899999999963e-05, 6.844500000000031e-05, 6.818099999999702e-05, 6.799999999999862e-05, 6.855500000000139e-05, 6.880600000000112e-05, 6.79299999999973e-05, 6.862499999999924e-05, 6.847199999999998e-05, 6.855499999999792e-05, 6.850000000000259e-05, 6.831999999999672e-05, 6.794499999999981e-05, 6.979199999999908e-05, 6.863899999999881e-05, 6.857000000000044e-05, 6.837499999999899e-05, 6.830599999999715e-05, 6.97360000000008e-05, 6.868000000000152e-05, 6.812500000000221e-05]</msg>
<status status="PASS" starttime="20201112 12:42:51.326" endtime="20201112 12:42:51.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.321" endtime="20201112 12:42:51.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.331" endtime="20201112 12:42:51.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.334" endtime="20201112 12:42:51.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.333" endtime="20201112 12:42:51.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.329" endtime="20201112 12:42:51.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.957" endtime="20201112 12:42:51.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.957" endtime="20201112 12:42:51.356"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.365" endtime="20201112 12:42:51.383"></status>
</kw>
<msg timestamp="20201112 12:42:51.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.363" endtime="20201112 12:42:51.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.385" endtime="20201112 12:42:51.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.388" endtime="20201112 12:42:51.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.360" endtime="20201112 12:42:51.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.358" endtime="20201112 12:42:51.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.398" endtime="20201112 12:42:51.685"></status>
</kw>
<msg timestamp="20201112 12:42:51.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.396" endtime="20201112 12:42:51.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020514403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.689" endtime="20201112 12:42:51.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.698" endtime="20201112 12:42:51.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.394" endtime="20201112 12:42:51.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.392" endtime="20201112 12:42:51.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.705" level="INFO">${RESULT} = [{'time': 0.020583764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.936100000000042e-05, 'source_diff': 6.936100000000042e-05}, {'time': 0.020657778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.702" endtime="20201112 12:42:51.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.719" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.706" endtime="20201112 12:42:51.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.724" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.723" endtime="20201112 12:42:51.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.727" level="INFO">VALUE: [6.936100000000042e-05, 6.920900000000063e-05, 6.962500000000024e-05, 6.951399999999969e-05, 6.936100000000042e-05, 6.886099999999992e-05, 6.958300000000153e-05, 6.893000000000177e-05, 6.97230000000007e-05, 7.082000000000269e-05, 6.938899999999956e-05, 6.973599999999733e-05, 7.07910000000006e-05, 6.936100000000042e-05, 6.944400000000184e-05, 6.893000000000177e-05, 6.905499999999842e-05, 6.951400000000316e-05, 6.934700000000085e-05, 6.933300000000128e-05, 6.898600000000005e-05, 6.916699999999845e-05, 6.941700000000217e-05, 6.936100000000042e-05, 6.913899999999931e-05, 6.948700000000002e-05, 6.948600000000055e-05, 6.919399999999812e-05, 7.076400000000094e-05, 6.961100000000067e-05, 6.956899999999849e-05, 6.938899999999956e-05, 6.944399999999837e-05, 6.886099999999992e-05, 7.081899999999974e-05, 6.948600000000055e-05, 6.926399999999944e-05, 6.893099999999777e-05, 6.932000000000119e-05, 6.943099999999827e-05, 6.924999999999987e-05, 6.962500000000024e-05, 6.931999999999772e-05, 6.924999999999987e-05, 6.967999999999905e-05, 7.086099999999845e-05, 7.081899999999974e-05, 6.897200000000048e-05, 7.084699999999888e-05, 6.911100000000017e-05]</msg>
<status status="PASS" starttime="20201112 12:42:51.725" endtime="20201112 12:42:51.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.720" endtime="20201112 12:42:51.728"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.730" endtime="20201112 12:42:51.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.734" endtime="20201112 12:42:51.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.732" endtime="20201112 12:42:51.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.729" endtime="20201112 12:42:51.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.357" endtime="20201112 12:42:51.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.356" endtime="20201112 12:42:51.755"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.764" endtime="20201112 12:42:51.784"></status>
</kw>
<msg timestamp="20201112 12:42:51.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.762" endtime="20201112 12:42:51.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.785" endtime="20201112 12:42:51.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.788" endtime="20201112 12:42:51.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.760" endtime="20201112 12:42:51.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.757" endtime="20201112 12:42:51.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.798" endtime="20201112 12:42:52.084"></status>
</kw>
<msg timestamp="20201112 12:42:52.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.797" endtime="20201112 12:42:52.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.088" endtime="20201112 12:42:52.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.097" endtime="20201112 12:42:52.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.794" endtime="20201112 12:42:52.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.792" endtime="20201112 12:42:52.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.104" level="INFO">${RESULT} = [{'time': 0.020611514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.062500000000124e-05, 'source_diff': 7.062500000000124e-05}, {'time': 0.020686528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.100" endtime="20201112 12:42:52.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.119" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.105" endtime="20201112 12:42:52.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.123" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.122" endtime="20201112 12:42:52.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.126" level="INFO">VALUE: [7.062500000000124e-05, 6.986099999999745e-05, 7.037500000000099e-05, 7.05970000000021e-05, 7.050000000000112e-05, 6.998600000000105e-05, 6.994499999999834e-05, 7.054199999999983e-05, 6.994399999999887e-05, 7.012500000000074e-05, 7.180500000000117e-05, 7.040200000000066e-05, 7.026400000000044e-05, 7.054199999999983e-05, 7.037499999999752e-05, 6.994399999999887e-05, 7.009699999999813e-05, 6.987500000000049e-05, 7.180600000000065e-05, 6.997199999999801e-05, 7.048599999999808e-05, 7.030600000000262e-05, 7.044499999999884e-05, 7.036100000000142e-05, 7.016700000000292e-05, 7.052799999999679e-05, 7.006999999999847e-05, 7.180500000000117e-05, 6.987500000000049e-05, 6.994400000000234e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.026400000000044e-05, 7.040300000000013e-05, 7.180600000000065e-05, 7.175000000000237e-05, 6.993099999999877e-05, 7.061100000000167e-05, 7.080500000000017e-05, 7.029200000000305e-05, 7.056999999999897e-05, 6.987500000000049e-05, 7.020799999999869e-05, 6.988800000000059e-05, 7.066699999999995e-05, 7.048700000000102e-05, 7.030499999999967e-05, 6.994400000000234e-05, 6.980499999999917e-05, 7.012499999999727e-05]</msg>
<status status="PASS" starttime="20201112 12:42:52.125" endtime="20201112 12:42:52.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.120" endtime="20201112 12:42:52.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.130" endtime="20201112 12:42:52.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.133" endtime="20201112 12:42:52.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.132" endtime="20201112 12:42:52.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.128" endtime="20201112 12:42:52.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.756" endtime="20201112 12:42:52.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.755" endtime="20201112 12:42:52.154"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.163" endtime="20201112 12:42:52.183"></status>
</kw>
<msg timestamp="20201112 12:42:52.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.162" endtime="20201112 12:42:52.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.184" endtime="20201112 12:42:52.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.187" endtime="20201112 12:42:52.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.159" endtime="20201112 12:42:52.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.157" endtime="20201112 12:42:52.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.197" endtime="20201112 12:42:52.485"></status>
</kw>
<msg timestamp="20201112 12:42:52.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.196" endtime="20201112 12:42:52.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020404014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.489" endtime="20201112 12:42:52.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.498" endtime="20201112 12:42:52.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.193" endtime="20201112 12:42:52.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.191" endtime="20201112 12:42:52.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.506" level="INFO">${RESULT} = [{'time': 0.020475736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.172199999999976e-05, 'source_diff': 7.172199999999976e-05}, {'time': 0.020550722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.502" endtime="20201112 12:42:52.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.520" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.507" endtime="20201112 12:42:52.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.524" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.523" endtime="20201112 12:42:52.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.527" level="INFO">VALUE: [7.172199999999976e-05, 7.116600000000098e-05, 7.099999999999815e-05, 7.112499999999827e-05, 7.280600000000165e-05, 7.097300000000195e-05, 7.137500000000199e-05, 7.086099999999845e-05, 7.151299999999874e-05, 7.130600000000015e-05, 7.170800000000019e-05, 7.101399999999772e-05, 7.13620000000019e-05, 7.118100000000002e-05, 7.279099999999913e-05, 7.10970000000026e-05, 7.086100000000192e-05, 7.125000000000187e-05, 7.281899999999827e-05, 7.130500000000067e-05, 7.086100000000192e-05, 7.086100000000192e-05, 7.123700000000177e-05, 7.115300000000088e-05, 7.273600000000033e-05, 7.137499999999852e-05, 7.27499999999999e-05, 7.149999999999865e-05, 7.170800000000019e-05, 7.097299999999848e-05, 7.118000000000055e-05, 7.097299999999848e-05, 7.137499999999852e-05, 7.123599999999883e-05, 7.098599999999858e-05, 7.273600000000033e-05, 7.136099999999895e-05, 7.142999999999733e-05, 7.098600000000205e-05, 7.131999999999972e-05, 7.11109999999987e-05, 7.134699999999938e-05, 7.130600000000015e-05, 7.12499999999984e-05, 7.176400000000194e-05, 7.149999999999865e-05, 7.143100000000027e-05, 7.087500000000149e-05, 7.10559999999999e-05, 7.12499999999984e-05]</msg>
<status status="PASS" starttime="20201112 12:42:52.526" endtime="20201112 12:42:52.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.521" endtime="20201112 12:42:52.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.531" endtime="20201112 12:42:52.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.534" endtime="20201112 12:42:52.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.533" endtime="20201112 12:42:52.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.529" endtime="20201112 12:42:52.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.155" endtime="20201112 12:42:52.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.155" endtime="20201112 12:42:52.555"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.565" endtime="20201112 12:42:52.584"></status>
</kw>
<msg timestamp="20201112 12:42:52.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.563" endtime="20201112 12:42:52.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.586" endtime="20201112 12:42:52.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.588" endtime="20201112 12:42:52.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.560" endtime="20201112 12:42:52.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.558" endtime="20201112 12:42:52.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.599" endtime="20201112 12:42:52.885"></status>
</kw>
<msg timestamp="20201112 12:42:52.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.597" endtime="20201112 12:42:52.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020572486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.890" endtime="20201112 12:42:52.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.898" endtime="20201112 12:42:52.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.595" endtime="20201112 12:42:52.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.593" endtime="20201112 12:42:52.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.905" level="INFO">${RESULT} = [{'time': 0.020644583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.209700000000013e-05, 'source_diff': 7.209700000000013e-05}, {'time': 0.020721542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.902" endtime="20201112 12:42:52.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.919" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.906" endtime="20201112 12:42:52.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.924" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.923" endtime="20201112 12:42:52.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.927" level="INFO">VALUE: [7.209700000000013e-05, 7.248600000000008e-05, 7.218099999999755e-05, 7.205499999999795e-05, 7.202700000000228e-05, 7.22499999999994e-05, 7.223599999999983e-05, 7.248600000000008e-05, 7.258300000000106e-05, 7.229099999999863e-05, 7.238899999999909e-05, 7.194500000000034e-05, 7.223599999999983e-05, 7.380599999999918e-05, 7.254199999999836e-05, 7.198599999999958e-05, 7.236099999999995e-05, 7.20560000000009e-05, 7.193100000000077e-05, 7.262499999999977e-05, 7.218099999999755e-05, 7.245800000000094e-05, 7.255500000000192e-05, 7.212499999999927e-05, 7.379100000000013e-05, 7.218000000000155e-05, 7.218100000000102e-05, 7.241600000000223e-05, 7.199999999999915e-05, 7.381899999999927e-05, 7.373600000000133e-05, 7.272299999999676e-05, 7.205599999999743e-05, 7.380600000000265e-05, 7.27499999999999e-05, 7.382000000000222e-05, 7.193100000000077e-05, 7.380599999999918e-05, 7.195800000000044e-05, 7.187499999999902e-05, 7.379100000000013e-05, 7.218000000000155e-05, 7.266599999999901e-05, 7.237499999999952e-05, 7.245800000000094e-05, 7.22499999999994e-05, 7.219400000000112e-05, 7.38049999999997e-05, 7.25560000000014e-05, 7.244500000000084e-05]</msg>
<status status="PASS" starttime="20201112 12:42:52.925" endtime="20201112 12:42:52.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.920" endtime="20201112 12:42:52.928"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.931" endtime="20201112 12:42:52.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.934" endtime="20201112 12:42:52.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.932" endtime="20201112 12:42:52.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.929" endtime="20201112 12:42:52.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.556" endtime="20201112 12:42:52.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.556" endtime="20201112 12:42:52.955"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.964" endtime="20201112 12:42:52.983"></status>
</kw>
<msg timestamp="20201112 12:42:52.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.963" endtime="20201112 12:42:52.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.985" endtime="20201112 12:42:52.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.987" endtime="20201112 12:42:52.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.960" endtime="20201112 12:42:52.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.958" endtime="20201112 12:42:52.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.998" endtime="20201112 12:42:53.284"></status>
</kw>
<msg timestamp="20201112 12:42:53.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020525931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020598972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.996" endtime="20201112 12:42:53.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020525931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020598972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.289" endtime="20201112 12:42:53.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.297" endtime="20201112 12:42:53.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.994" endtime="20201112 12:42:53.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.992" endtime="20201112 12:42:53.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.305" level="INFO">${RESULT} = [{'time': 0.020598972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304099999999938e-05, 'source_diff': 7.304099999999938e-05}, {'time': 0.020675986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:53.301" endtime="20201112 12:42:53.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.318" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.306" endtime="20201112 12:42:53.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.323" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.322" endtime="20201112 12:42:53.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.326" level="INFO">VALUE: [7.304099999999938e-05, 7.367999999999958e-05, 7.336100000000095e-05, 7.361099999999773e-05, 7.313899999999984e-05, 7.348600000000108e-05, 7.323600000000083e-05, 7.329199999999911e-05, 7.313899999999984e-05, 7.363900000000034e-05, 7.305599999999843e-05, 7.372200000000176e-05, 7.337500000000052e-05, 7.31110000000007e-05, 7.29170000000022e-05, 7.359700000000163e-05, 7.373599999999786e-05, 7.481900000000027e-05, 7.33049999999992e-05, 7.355499999999945e-05, 7.34439999999989e-05, 7.372200000000176e-05, 7.301399999999972e-05, 7.309699999999766e-05, 7.31110000000007e-05, 7.472199999999929e-05, 7.318099999999855e-05, 7.344400000000237e-05, 7.291699999999873e-05, 7.34309999999988e-05, 7.312500000000027e-05, 7.367999999999958e-05, 7.283400000000079e-05, 7.368000000000305e-05, 7.359699999999816e-05, 7.286100000000045e-05, 7.36110000000012e-05, 7.482000000000322e-05, 7.340299999999966e-05, 7.350000000000065e-05, 7.331999999999825e-05, 7.284700000000088e-05, 7.305599999999843e-05, 7.340299999999966e-05, 7.36110000000012e-05, 7.298600000000058e-05, 7.304199999999886e-05, 7.35560000000024e-05, 7.359800000000111e-05, 7.337500000000052e-05]</msg>
<status status="PASS" starttime="20201112 12:42:53.324" endtime="20201112 12:42:53.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.319" endtime="20201112 12:42:53.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.330" endtime="20201112 12:42:53.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.333" endtime="20201112 12:42:53.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.332" endtime="20201112 12:42:53.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.328" endtime="20201112 12:42:53.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.956" endtime="20201112 12:42:53.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.955" endtime="20201112 12:42:53.354"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.363" endtime="20201112 12:42:53.383"></status>
</kw>
<msg timestamp="20201112 12:42:53.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.362" endtime="20201112 12:42:53.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.385" endtime="20201112 12:42:53.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.387" endtime="20201112 12:42:53.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.359" endtime="20201112 12:42:53.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.357" endtime="20201112 12:42:53.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.398" endtime="20201112 12:42:53.685"></status>
</kw>
<msg timestamp="20201112 12:42:53.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020442486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020517333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.396" endtime="20201112 12:42:53.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020442486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020517333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.694" endtime="20201112 12:42:53.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.704" endtime="20201112 12:42:53.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.394" endtime="20201112 12:42:53.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.392" endtime="20201112 12:42:53.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.711" level="INFO">${RESULT} = [{'time': 0.020517333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.484699999999941e-05, 'source_diff': 7.484699999999941e-05}, {'time': 0.020596319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:53.707" endtime="20201112 12:42:53.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.726" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.712" endtime="20201112 12:42:53.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.731" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.730" endtime="20201112 12:42:53.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.733" level="INFO">VALUE: [7.484699999999941e-05, 7.40829999999991e-05, 7.58189999999978e-05, 7.431899999999977e-05, 7.580499999999823e-05, 7.44439999999999e-05, 7.465299999999744e-05, 7.41249999999978e-05, 7.44309999999998e-05, 7.427800000000054e-05, 7.427800000000054e-05, 7.449999999999818e-05, 7.436099999999848e-05, 7.39439999999994e-05, 7.458399999999907e-05, 7.455599999999993e-05, 7.433299999999934e-05, 7.388899999999712e-05, 7.409699999999866e-05, 7.429200000000011e-05, 7.440300000000066e-05, 7.398600000000158e-05, 7.404100000000038e-05, 7.427800000000054e-05, 7.46249999999983e-05, 7.388900000000059e-05, 7.447200000000251e-05, 7.468100000000005e-05, 7.582000000000075e-05, 7.469500000000309e-05, 7.395800000000244e-05, 7.423599999999836e-05, 7.44309999999998e-05, 7.398600000000158e-05, 7.480600000000018e-05, 7.387500000000102e-05, 7.456900000000002e-05, 7.395799999999897e-05, 7.58050000000017e-05, 7.455500000000045e-05, 7.43050000000002e-05, 7.412500000000127e-05, 7.451399999999775e-05, 7.463900000000134e-05, 7.400000000000115e-05, 7.454200000000036e-05, 7.580600000000118e-05, 7.394500000000234e-05, 7.409800000000161e-05, 7.437500000000152e-05]</msg>
<status status="PASS" starttime="20201112 12:42:53.732" endtime="20201112 12:42:53.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.727" endtime="20201112 12:42:53.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.737" endtime="20201112 12:42:53.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.741" endtime="20201112 12:42:53.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.739" endtime="20201112 12:42:53.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.735" endtime="20201112 12:42:53.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.355" endtime="20201112 12:42:53.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.355" endtime="20201112 12:42:53.762"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.771" endtime="20201112 12:42:53.791"></status>
</kw>
<msg timestamp="20201112 12:42:53.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.770" endtime="20201112 12:42:53.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.793" endtime="20201112 12:42:53.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.795" endtime="20201112 12:42:53.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.767" endtime="20201112 12:42:53.799"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.765" endtime="20201112 12:42:53.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.806" endtime="20201112 12:42:54.094"></status>
</kw>
<msg timestamp="20201112 12:42:54.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.804" endtime="20201112 12:42:54.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.099" endtime="20201112 12:42:54.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.108" endtime="20201112 12:42:54.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.802" endtime="20201112 12:42:54.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.800" endtime="20201112 12:42:54.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.115" level="INFO">${RESULT} = [{'time': 0.020558139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.56249999999993e-05, 'source_diff': 7.56249999999993e-05}, {'time': 0.020639139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:54.111" endtime="20201112 12:42:54.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.129" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.116" endtime="20201112 12:42:54.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.133" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.132" endtime="20201112 12:42:54.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.136" level="INFO">VALUE: [7.56249999999993e-05, 7.523599999999936e-05, 7.573599999999986e-05, 7.54310000000008e-05, 7.515299999999794e-05, 7.494499999999987e-05, 7.501299999999878e-05, 7.49310000000003e-05, 7.556900000000102e-05, 7.561099999999973e-05, 7.547200000000004e-05, 7.536099999999948e-05, 7.549999999999918e-05, 7.543000000000133e-05, 7.550000000000265e-05, 7.679200000000261e-05, 7.543000000000133e-05, 7.481999999999975e-05, 7.533399999999982e-05, 7.519500000000012e-05, 7.519500000000012e-05, 7.538899999999862e-05, 7.49310000000003e-05, 7.537499999999905e-05, 7.513900000000184e-05, 7.500000000000215e-05, 7.518000000000108e-05, 7.526400000000197e-05, 7.516700000000098e-05, 7.516600000000151e-05, 7.486099999999898e-05, 7.563899999999887e-05, 7.523599999999936e-05, 7.540300000000166e-05, 7.536099999999948e-05, 7.520899999999969e-05, 7.49310000000003e-05, 7.518100000000055e-05, 7.54029999999982e-05, 7.536100000000295e-05, 7.501399999999825e-05, 7.556899999999755e-05, 7.56379999999994e-05, 7.54440000000009e-05, 7.54440000000009e-05, 7.679099999999967e-05, 7.554100000000188e-05, 7.549999999999918e-05, 7.513900000000184e-05, 7.570900000000019e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.134" endtime="20201112 12:42:54.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.130" endtime="20201112 12:42:54.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.140" endtime="20201112 12:42:54.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.143" endtime="20201112 12:42:54.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.142" endtime="20201112 12:42:54.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.138" endtime="20201112 12:42:54.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.763" endtime="20201112 12:42:54.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.762" endtime="20201112 12:42:54.164"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.173" endtime="20201112 12:42:54.193"></status>
</kw>
<msg timestamp="20201112 12:42:54.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.172" endtime="20201112 12:42:54.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.194" endtime="20201112 12:42:54.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.197" endtime="20201112 12:42:54.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.169" endtime="20201112 12:42:54.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.167" endtime="20201112 12:42:54.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.207" endtime="20201112 12:42:54.493"></status>
</kw>
<msg timestamp="20201112 12:42:54.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020559125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.206" endtime="20201112 12:42:54.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020559125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.497" endtime="20201112 12:42:54.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.506" endtime="20201112 12:42:54.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.203" endtime="20201112 12:42:54.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.201" endtime="20201112 12:42:54.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.513" level="INFO">${RESULT} = [{'time': 0.020559125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652799999999932e-05, 'source_diff': 7.652799999999932e-05}, {'time': 0.020641139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:54.510" endtime="20201112 12:42:54.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.527" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.514" endtime="20201112 12:42:54.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.533" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.531" endtime="20201112 12:42:54.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.535" level="INFO">VALUE: [7.652799999999932e-05, 7.599999999999968e-05, 7.59310000000013e-05, 7.597300000000001e-05, 7.645900000000094e-05, 7.668099999999858e-05, 7.61249999999998e-05, 7.587499999999955e-05, 7.655499999999898e-05, 7.642999999999886e-05, 7.588899999999912e-05, 7.779100000000067e-05, 7.604099999999892e-05, 7.774999999999796e-05, 7.605600000000143e-05, 7.637500000000005e-05, 7.6070000000001e-05, 7.656999999999803e-05, 7.630499999999873e-05, 7.65700000000015e-05, 7.65700000000015e-05, 7.655599999999846e-05, 7.611199999999971e-05, 7.588799999999965e-05, 7.645899999999747e-05, 7.61249999999998e-05, 7.61249999999998e-05, 7.613899999999937e-05, 7.6457999999998e-05, 7.605499999999848e-05, 7.59440000000014e-05, 7.647199999999757e-05, 7.62639999999995e-05, 7.648600000000061e-05, 7.64310000000018e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.64310000000018e-05, 7.597300000000001e-05, 7.784700000000241e-05, 7.618000000000208e-05, 7.598699999999958e-05, 7.779200000000014e-05, 7.623600000000036e-05, 7.611100000000023e-05, 7.61249999999998e-05, 7.624999999999993e-05, 7.605500000000195e-05, 7.64440000000019e-05, 7.629200000000211e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.534" endtime="20201112 12:42:54.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.528" endtime="20201112 12:42:54.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.539" endtime="20201112 12:42:54.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.543" endtime="20201112 12:42:54.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.541" endtime="20201112 12:42:54.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.537" endtime="20201112 12:42:54.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.165" endtime="20201112 12:42:54.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.165" endtime="20201112 12:42:54.564"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.573" endtime="20201112 12:42:54.593"></status>
</kw>
<msg timestamp="20201112 12:42:54.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.571" endtime="20201112 12:42:54.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.595" endtime="20201112 12:42:54.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.597" endtime="20201112 12:42:54.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.569" endtime="20201112 12:42:54.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.566" endtime="20201112 12:42:54.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.608" endtime="20201112 12:42:54.895"></status>
</kw>
<msg timestamp="20201112 12:42:54.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020419556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02049725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:54.607" endtime="20201112 12:42:54.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020419556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02049725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:54.899" endtime="20201112 12:42:54.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.908" endtime="20201112 12:42:54.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.604" endtime="20201112 12:42:54.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.602" endtime="20201112 12:42:54.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.915" level="INFO">${RESULT} = [{'time': 0.02049725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.769400000000315e-05, 'source_diff': 7.769400000000315e-05}, {'time': 0.020579264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:54.911" endtime="20201112 12:42:54.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.929" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.916" endtime="20201112 12:42:54.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.934" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.932" endtime="20201112 12:42:54.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.936" level="INFO">VALUE: [7.769400000000315e-05, 7.708299999999862e-05, 7.741699999999976e-05, 7.750000000000118e-05, 7.880600000000071e-05, 7.72640000000005e-05, 7.882000000000028e-05, 7.768100000000305e-05, 7.743099999999933e-05, 7.691599999999979e-05, 7.711100000000123e-05, 7.694399999999893e-05, 7.763900000000087e-05, 7.706899999999905e-05, 7.718099999999908e-05, 7.711099999999776e-05, 7.686099999999751e-05, 7.706899999999905e-05, 7.883399999999985e-05, 7.69579999999985e-05, 7.688900000000012e-05, 7.762499999999783e-05, 7.743099999999933e-05, 7.71250000000008e-05, 7.879200000000114e-05, 7.755499999999999e-05, 7.706899999999905e-05, 7.723600000000136e-05, 7.752700000000085e-05, 7.872199999999982e-05, 7.700000000000068e-05, 7.87909999999982e-05, 7.749999999999771e-05, 7.763900000000087e-05, 7.747200000000204e-05, 7.743099999999933e-05, 7.75839999999986e-05, 7.699999999999721e-05, 7.880600000000071e-05, 7.736100000000148e-05, 7.704200000000286e-05, 7.700000000000068e-05, 7.761100000000173e-05, 7.734699999999844e-05, 7.693000000000283e-05, 7.738900000000062e-05, 7.691599999999979e-05, 7.748600000000161e-05, 7.705499999999949e-05, 7.768000000000011e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.935" endtime="20201112 12:42:54.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.930" endtime="20201112 12:42:54.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.940" endtime="20201112 12:42:54.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.943" endtime="20201112 12:42:54.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.942" endtime="20201112 12:42:54.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.938" endtime="20201112 12:42:54.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.565" endtime="20201112 12:42:54.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.564" endtime="20201112 12:42:54.964"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.973" endtime="20201112 12:42:54.993"></status>
</kw>
<msg timestamp="20201112 12:42:54.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.972" endtime="20201112 12:42:54.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.995" endtime="20201112 12:42:54.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.998" endtime="20201112 12:42:55.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.969" endtime="20201112 12:42:55.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.967" endtime="20201112 12:42:55.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.008" endtime="20201112 12:42:55.295"></status>
</kw>
<msg timestamp="20201112 12:42:55.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020500931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.007" endtime="20201112 12:42:55.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020500931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.300" endtime="20201112 12:42:55.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.308" endtime="20201112 12:42:55.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.004" endtime="20201112 12:42:55.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.002" endtime="20201112 12:42:55.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.316" level="INFO">${RESULT} = [{'time': 0.020578792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.786099999999851e-05, 'source_diff': 7.786099999999851e-05}, {'time': 0.020659819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.312" endtime="20201112 12:42:55.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.330" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.317" endtime="20201112 12:42:55.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.335" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.334" endtime="20201112 12:42:55.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.338" level="INFO">VALUE: [7.786099999999851e-05, 7.869400000000068e-05, 7.973600000000039e-05, 7.830500000000074e-05, 7.793000000000036e-05, 7.830500000000074e-05, 7.8458e-05, 7.86389999999984e-05, 7.855500000000099e-05, 7.811099999999876e-05, 7.825000000000193e-05, 7.804200000000039e-05, 7.8070000000003e-05, 7.861099999999926e-05, 7.798599999999864e-05, 7.841700000000076e-05, 7.87779999999981e-05, 7.816700000000051e-05, 7.79169999999968e-05, 7.979100000000267e-05, 7.837499999999858e-05, 7.793000000000036e-05, 7.841600000000129e-05, 7.808299999999962e-05, 7.802800000000082e-05, 7.787500000000155e-05, 7.84169999999973e-05, 7.836100000000248e-05, 7.981999999999781e-05, 7.980599999999824e-05, 7.797200000000254e-05, 7.86389999999984e-05, 7.79030000000007e-05, 7.79579999999995e-05, 7.80839999999991e-05, 7.976300000000006e-05, 7.833299999999987e-05, 7.802700000000135e-05, 7.84030000000012e-05, 7.824999999999846e-05, 7.801399999999778e-05, 7.844400000000043e-05, 7.84030000000012e-05, 7.980500000000224e-05, 7.980600000000171e-05, 7.973600000000039e-05, 7.804199999999692e-05, 7.784799999999842e-05, 7.866700000000101e-05, 7.843100000000033e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.336" endtime="20201112 12:42:55.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.331" endtime="20201112 12:42:55.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.348" endtime="20201112 12:42:55.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.351" endtime="20201112 12:42:55.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.350" endtime="20201112 12:42:55.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.346" endtime="20201112 12:42:55.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.965" endtime="20201112 12:42:55.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.965" endtime="20201112 12:42:55.372"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.381" endtime="20201112 12:42:55.401"></status>
</kw>
<msg timestamp="20201112 12:42:55.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.380" endtime="20201112 12:42:55.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.403" endtime="20201112 12:42:55.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.405" endtime="20201112 12:42:55.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.377" endtime="20201112 12:42:55.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.375" endtime="20201112 12:42:55.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.416" endtime="20201112 12:42:55.704"></status>
</kw>
<msg timestamp="20201112 12:42:55.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.414" endtime="20201112 12:42:55.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.708" endtime="20201112 12:42:55.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.717" endtime="20201112 12:42:55.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.412" endtime="20201112 12:42:55.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.410" endtime="20201112 12:42:55.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.724" level="INFO">${RESULT} = [{'time': 0.020468611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.988899999999965e-05, 'source_diff': 7.988899999999965e-05}, {'time': 0.020552597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.720" endtime="20201112 12:42:55.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.738" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.725" endtime="20201112 12:42:55.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.742" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.741" endtime="20201112 12:42:55.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.745" level="INFO">VALUE: [7.988899999999965e-05, 8.07780000000001e-05, 7.972200000000082e-05, 7.923599999999989e-05, 7.958299999999766e-05, 7.962499999999983e-05, 7.969500000000115e-05, 7.915299999999847e-05, 7.888899999999865e-05, 7.904200000000139e-05, 7.905500000000149e-05, 7.893100000000083e-05, 7.936100000000001e-05, 7.906899999999759e-05, 7.954199999999842e-05, 8.075000000000096e-05, 7.901399999999878e-05, 7.906900000000106e-05, 7.916600000000204e-05, 7.951399999999928e-05, 7.934700000000044e-05, 7.970800000000125e-05, 7.884699999999994e-05, 7.887499999999908e-05, 8.073599999999792e-05, 7.905600000000096e-05, 7.966700000000201e-05, 7.905600000000096e-05, 7.961199999999974e-05, 7.968099999999811e-05, 7.892999999999789e-05, 7.924999999999946e-05, 7.972200000000082e-05, 7.919399999999771e-05, 7.952799999999885e-05, 7.954099999999895e-05, 7.936100000000001e-05, 7.91389999999989e-05, 7.907000000000053e-05, 7.886099999999951e-05, 7.968100000000158e-05, 7.962499999999983e-05, 7.905600000000096e-05, 7.968099999999811e-05, 7.905600000000096e-05, 7.893100000000083e-05, 7.936199999999949e-05, 7.91250000000028e-05, 8.07910000000002e-05, 7.899999999999921e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.744" endtime="20201112 12:42:55.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.739" endtime="20201112 12:42:55.746"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.749" endtime="20201112 12:42:55.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.752" endtime="20201112 12:42:55.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.751" endtime="20201112 12:42:55.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.747" endtime="20201112 12:42:55.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.373" endtime="20201112 12:42:55.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.373" endtime="20201112 12:42:55.773"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.782" endtime="20201112 12:42:55.803"></status>
</kw>
<msg timestamp="20201112 12:42:55.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.781" endtime="20201112 12:42:55.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.804" endtime="20201112 12:42:55.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.807" endtime="20201112 12:42:55.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.778" endtime="20201112 12:42:55.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.776" endtime="20201112 12:42:55.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.817" endtime="20201112 12:42:56.104"></status>
</kw>
<msg timestamp="20201112 12:42:56.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.816" endtime="20201112 12:42:56.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.108" endtime="20201112 12:42:56.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.117" endtime="20201112 12:42:56.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.813" endtime="20201112 12:42:56.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.811" endtime="20201112 12:42:56.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.124" level="INFO">${RESULT} = [{'time': 0.020505764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.018099999999861e-05, 'source_diff': 8.018099999999861e-05}, {'time': 0.02059075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:56.120" endtime="20201112 12:42:56.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.138" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.125" endtime="20201112 12:42:56.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.142" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.141" endtime="20201112 12:42:56.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.145" level="INFO">VALUE: [8.018099999999861e-05, 8.00970000000012e-05, 8.045900000000147e-05, 8.007000000000153e-05, 8.006999999999806e-05, 8.000000000000021e-05, 8.179099999999773e-05, 8.011200000000024e-05, 8.016699999999904e-05, 8.03190000000023e-05, 8.020800000000175e-05, 8.005500000000249e-05, 8.055499999999952e-05, 8.037500000000058e-05, 8.000000000000021e-05, 8.031899999999884e-05, 8.025000000000046e-05, 7.983300000000138e-05, 8.080499999999977e-05, 8.019499999999818e-05, 7.988899999999965e-05, 7.986199999999999e-05, 8.04169999999993e-05, 8.012500000000033e-05, 7.993000000000236e-05, 8.037500000000058e-05, 8.0458000000002e-05, 8.026400000000003e-05, 8.036100000000101e-05, 8.075000000000096e-05, 8.011100000000076e-05, 8.176400000000153e-05, 8.037500000000058e-05, 8.066699999999954e-05, 8.037500000000058e-05, 8.044499999999843e-05, 8.037500000000058e-05, 8.002799999999935e-05, 8.023700000000036e-05, 8.176400000000153e-05, 7.99169999999988e-05, 8.017999999999914e-05, 8.019400000000218e-05, 8.180500000000077e-05, 8.030500000000274e-05, 8.026400000000003e-05, 8.055499999999952e-05, 8.037500000000058e-05, 8.073600000000139e-05, 8.045799999999853e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.143" endtime="20201112 12:42:56.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.139" endtime="20201112 12:42:56.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.149" endtime="20201112 12:42:56.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.152" endtime="20201112 12:42:56.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.151" endtime="20201112 12:42:56.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.147" endtime="20201112 12:42:56.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.774" endtime="20201112 12:42:56.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.774" endtime="20201112 12:42:56.173"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.182" endtime="20201112 12:42:56.202"></status>
</kw>
<msg timestamp="20201112 12:42:56.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.181" endtime="20201112 12:42:56.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.203" endtime="20201112 12:42:56.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.206" endtime="20201112 12:42:56.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.178" endtime="20201112 12:42:56.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.176" endtime="20201112 12:42:56.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.217" endtime="20201112 12:42:56.503"></status>
</kw>
<msg timestamp="20201112 12:42:56.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020622111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.215" endtime="20201112 12:42:56.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020622111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.507" endtime="20201112 12:42:56.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.516" endtime="20201112 12:42:56.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.212" endtime="20201112 12:42:56.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.210" endtime="20201112 12:42:56.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.523" level="INFO">${RESULT} = [{'time': 0.020622111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.109699999999873e-05, 'source_diff': 8.109699999999873e-05}, {'time': 0.020706111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:56.519" endtime="20201112 12:42:56.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.537" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.524" endtime="20201112 12:42:56.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.542" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.540" endtime="20201112 12:42:56.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.544" level="INFO">VALUE: [8.109699999999873e-05, 8.105500000000002e-05, 8.27919999999982e-05, 8.273599999999992e-05, 8.149999999999824e-05, 8.098599999999817e-05, 8.140300000000072e-05, 8.155599999999999e-05, 8.152700000000138e-05, 8.173599999999892e-05, 8.100000000000121e-05, 8.115300000000047e-05, 8.275000000000296e-05, 8.167999999999717e-05, 8.11109999999983e-05, 8.28049999999983e-05, 8.131899999999984e-05, 8.155599999999999e-05, 8.281900000000134e-05, 8.137499999999812e-05, 8.112499999999787e-05, 8.172199999999935e-05, 8.10970000000022e-05, 8.111100000000177e-05, 8.086099999999805e-05, 8.112500000000133e-05, 8.154200000000042e-05, 8.161100000000227e-05, 8.273599999999992e-05, 8.143000000000039e-05, 8.130500000000027e-05, 8.155500000000052e-05, 8.113899999999744e-05, 8.143099999999986e-05, 8.169400000000021e-05, 8.105599999999949e-05, 8.143099999999986e-05, 8.113899999999744e-05, 8.169499999999968e-05, 8.175000000000196e-05, 8.136199999999802e-05, 8.137500000000158e-05, 8.092999999999989e-05, 8.092999999999989e-05, 8.123599999999842e-05, 8.279099999999873e-05, 8.123599999999842e-05, 8.136099999999855e-05, 8.133300000000288e-05, 8.107000000000253e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.543" endtime="20201112 12:42:56.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.538" endtime="20201112 12:42:56.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.548" endtime="20201112 12:42:56.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.552" endtime="20201112 12:42:56.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.550" endtime="20201112 12:42:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.546" endtime="20201112 12:42:56.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.174" endtime="20201112 12:42:56.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.174" endtime="20201112 12:42:56.573"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.582" endtime="20201112 12:42:56.602"></status>
</kw>
<msg timestamp="20201112 12:42:56.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.581" endtime="20201112 12:42:56.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.604" endtime="20201112 12:42:56.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.606" endtime="20201112 12:42:56.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.578" endtime="20201112 12:42:56.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.576" endtime="20201112 12:42:56.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.617" endtime="20201112 12:42:56.903"></status>
</kw>
<msg timestamp="20201112 12:42:56.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.615" endtime="20201112 12:42:56.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020617764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.908" endtime="20201112 12:42:56.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.916" endtime="20201112 12:42:56.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.613" endtime="20201112 12:42:56.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.611" endtime="20201112 12:42:56.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.923" level="INFO">${RESULT} = [{'time': 0.020617764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.248599999999967e-05, 'source_diff': 8.248599999999967e-05}, {'time': 0.020702736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:56.920" endtime="20201112 12:42:56.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.924" endtime="20201112 12:42:56.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.943" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.942" endtime="20201112 12:42:56.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.945" level="INFO">VALUE: [8.248599999999967e-05, 8.274999999999949e-05, 8.194400000000046e-05, 8.254200000000142e-05, 8.232000000000031e-05, 8.248599999999967e-05, 8.202800000000135e-05, 8.208300000000016e-05, 8.26109999999998e-05, 8.218100000000061e-05, 8.194499999999993e-05, 8.256899999999762e-05, 8.199999999999874e-05, 8.17910000000012e-05, 8.198599999999917e-05, 8.229099999999823e-05, 8.231900000000084e-05, 8.24720000000001e-05, 8.252800000000185e-05, 8.222199999999985e-05, 8.186100000000252e-05, 8.204200000000092e-05, 8.237499999999912e-05, 8.230600000000074e-05, 8.257000000000056e-05, 8.211199999999877e-05, 8.193100000000036e-05, 8.229099999999823e-05, 8.231900000000084e-05, 8.244400000000096e-05, 8.26109999999998e-05, 8.268000000000164e-05, 8.26390000000024e-05, 8.181999999999981e-05, 8.223599999999942e-05, 8.250000000000271e-05, 8.236099999999955e-05, 8.236099999999955e-05, 8.237499999999912e-05, 8.230500000000127e-05, 8.187499999999862e-05, 8.237499999999912e-05, 8.25979999999997e-05, 8.201400000000178e-05, 8.255500000000152e-05, 8.381899999999887e-05, 8.230600000000074e-05, 8.241600000000182e-05, 8.265300000000197e-05, 8.225000000000246e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.944" endtime="20201112 12:42:56.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.939" endtime="20201112 12:42:56.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.949" endtime="20201112 12:42:56.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.953" endtime="20201112 12:42:56.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.952" endtime="20201112 12:42:56.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.947" endtime="20201112 12:42:56.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.574" endtime="20201112 12:42:56.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.573" endtime="20201112 12:42:56.974"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.983" endtime="20201112 12:42:57.003"></status>
</kw>
<msg timestamp="20201112 12:42:57.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.981" endtime="20201112 12:42:57.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.004" endtime="20201112 12:42:57.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.007" endtime="20201112 12:42:57.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.979" endtime="20201112 12:42:57.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.977" endtime="20201112 12:42:57.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.017" endtime="20201112 12:42:57.304"></status>
</kw>
<msg timestamp="20201112 12:42:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.016" endtime="20201112 12:42:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.308" endtime="20201112 12:42:57.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.316" endtime="20201112 12:42:57.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.013" endtime="20201112 12:42:57.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.011" endtime="20201112 12:42:57.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.323" level="INFO">${RESULT} = [{'time': 0.020489472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.356900000000209e-05, 'source_diff': 8.356900000000209e-05}, {'time': 0.020575458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.320" endtime="20201112 12:42:57.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.337" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:57.324" endtime="20201112 12:42:57.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.342" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.341" endtime="20201112 12:42:57.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.345" level="INFO">VALUE: [8.356900000000209e-05, 8.330500000000227e-05, 8.33049999999988e-05, 8.292999999999842e-05, 8.48050000000003e-05, 8.355599999999852e-05, 8.293100000000136e-05, 8.29590000000005e-05, 8.324999999999999e-05, 8.32919999999987e-05, 8.295799999999756e-05, 8.363899999999994e-05, 8.313899999999944e-05, 8.368099999999865e-05, 8.375000000000049e-05, 8.320799999999781e-05, 8.317999999999867e-05, 8.292999999999842e-05, 8.313899999999944e-05, 8.298600000000017e-05, 8.294400000000146e-05, 8.316699999999858e-05, 8.334700000000098e-05, 8.324999999999999e-05, 8.306999999999759e-05, 8.337500000000012e-05, 8.336100000000055e-05, 8.333400000000088e-05, 8.336100000000055e-05, 8.352699999999991e-05, 8.36110000000008e-05, 8.362500000000037e-05, 8.355499999999905e-05, 8.338899999999969e-05, 8.324999999999999e-05, 8.337500000000012e-05, 8.313899999999944e-05, 8.359700000000123e-05, 8.299999999999974e-05, 8.305599999999802e-05, 8.31110000000003e-05, 8.338899999999969e-05, 8.354199999999895e-05, 8.487500000000162e-05, 8.306899999999812e-05, 8.355500000000252e-05, 8.305499999999855e-05, 8.286100000000005e-05, 8.287499999999962e-05, 8.302799999999888e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.343" endtime="20201112 12:42:57.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.338" endtime="20201112 12:42:57.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.349" endtime="20201112 12:42:57.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.352" endtime="20201112 12:42:57.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.351" endtime="20201112 12:42:57.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.347" endtime="20201112 12:42:57.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.975" endtime="20201112 12:42:57.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.974" endtime="20201112 12:42:57.373"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.382" endtime="20201112 12:42:57.403"></status>
</kw>
<msg timestamp="20201112 12:42:57.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.381" endtime="20201112 12:42:57.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.404" endtime="20201112 12:42:57.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.407" endtime="20201112 12:42:57.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.378" endtime="20201112 12:42:57.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.376" endtime="20201112 12:42:57.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.418" endtime="20201112 12:42:57.704"></status>
</kw>
<msg timestamp="20201112 12:42:57.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.416" endtime="20201112 12:42:57.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020625778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.708" endtime="20201112 12:42:57.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.717" endtime="20201112 12:42:57.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.413" endtime="20201112 12:42:57.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.411" endtime="20201112 12:42:57.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.724" level="INFO">${RESULT} = [{'time': 0.020625778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388900000000019e-05, 'source_diff': 8.388900000000019e-05}, {'time': 0.020713778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.721" endtime="20201112 12:42:57.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.738" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:57.725" endtime="20201112 12:42:57.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.743" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.741" endtime="20201112 12:42:57.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.745" level="INFO">VALUE: [8.388900000000019e-05, 8.441699999999983e-05, 8.466700000000008e-05, 8.445799999999906e-05, 8.461200000000127e-05, 8.463900000000094e-05, 8.400000000000074e-05, 8.442999999999992e-05, 8.581900000000087e-05, 8.419399999999924e-05, 8.579099999999826e-05, 8.433299999999894e-05, 8.472199999999888e-05, 8.445899999999854e-05, 8.437500000000112e-05, 8.455599999999952e-05, 8.419500000000218e-05, 8.451400000000081e-05, 8.580600000000077e-05, 8.470799999999931e-05, 8.422199999999838e-05, 8.401299999999737e-05, 8.462500000000137e-05, 8.43330000000024e-05, 8.431899999999937e-05, 8.394400000000246e-05, 8.451400000000081e-05, 8.41249999999974e-05, 8.405600000000249e-05, 8.469499999999922e-05, 8.466700000000008e-05, 8.443100000000286e-05, 8.441699999999983e-05, 8.461099999999833e-05, 8.401400000000031e-05, 8.408299999999869e-05, 8.417999999999967e-05, 8.43049999999998e-05, 8.419399999999924e-05, 8.4153e-05, 8.46530000000005e-05, 8.398600000000117e-05, 8.458300000000266e-05, 8.412500000000087e-05, 8.455599999999952e-05, 8.426400000000056e-05, 8.437500000000112e-05, 8.46530000000005e-05, 8.569500000000022e-05, 8.46110000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.744" endtime="20201112 12:42:57.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.739" endtime="20201112 12:42:57.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.749" endtime="20201112 12:42:57.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.753" endtime="20201112 12:42:57.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.751" endtime="20201112 12:42:57.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.747" endtime="20201112 12:42:57.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.374" endtime="20201112 12:42:57.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.373" endtime="20201112 12:42:57.774"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.783" endtime="20201112 12:42:57.803"></status>
</kw>
<msg timestamp="20201112 12:42:57.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.781" endtime="20201112 12:42:57.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.805" endtime="20201112 12:42:57.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.807" endtime="20201112 12:42:57.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.778" endtime="20201112 12:42:57.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.776" endtime="20201112 12:42:57.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.818" endtime="20201112 12:42:58.106"></status>
</kw>
<msg timestamp="20201112 12:42:58.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.816" endtime="20201112 12:42:58.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.110" endtime="20201112 12:42:58.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.119" endtime="20201112 12:42:58.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.813" endtime="20201112 12:42:58.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.812" endtime="20201112 12:42:58.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.126" level="INFO">${RESULT} = [{'time': 0.020486389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.51110000000023e-05, 'source_diff': 8.51110000000023e-05}, {'time': 0.020575389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:58.122" endtime="20201112 12:42:58.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.140" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.127" endtime="20201112 12:42:58.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.144" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.143" endtime="20201112 12:42:58.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.147" level="INFO">VALUE: [8.51110000000023e-05, 8.513899999999797e-05, 8.481999999999934e-05, 8.525000000000199e-05, 8.540300000000126e-05, 8.509799999999873e-05, 8.568100000000065e-05, 8.504100000000098e-05, 8.542999999999745e-05, 8.4846999999999e-05, 8.540300000000126e-05, 8.53189999999969e-05, 8.499999999999827e-05, 8.498600000000217e-05, 8.681900000000187e-05, 8.538900000000169e-05, 8.533299999999994e-05, 8.573599999999945e-05, 8.500000000000174e-05, 8.679199999999873e-05, 8.512500000000187e-05, 8.557000000000009e-05, 8.500000000000174e-05, 8.523699999999843e-05, 8.491600000000085e-05, 8.518000000000067e-05, 8.572199999999988e-05, 8.536100000000255e-05, 8.568000000000117e-05, 8.577800000000163e-05, 8.525000000000199e-05, 8.56249999999989e-05, 8.488900000000119e-05, 8.532000000000331e-05, 8.544499999999997e-05, 8.568100000000065e-05, 8.537499999999865e-05, 8.525000000000199e-05, 8.537500000000212e-05, 8.505500000000055e-05, 8.53050000000008e-05, 8.537500000000212e-05, 8.56660000000016e-05, 8.53050000000008e-05, 8.525000000000199e-05, 8.54310000000004e-05, 8.537500000000212e-05, 8.522200000000285e-05, 8.54310000000004e-05, 8.54310000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.145" endtime="20201112 12:42:58.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.141" endtime="20201112 12:42:58.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.151" endtime="20201112 12:42:58.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.154" endtime="20201112 12:42:58.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.153" endtime="20201112 12:42:58.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.149" endtime="20201112 12:42:58.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.774" endtime="20201112 12:42:58.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.774" endtime="20201112 12:42:58.175"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.184" endtime="20201112 12:42:58.205"></status>
</kw>
<msg timestamp="20201112 12:42:58.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.183" endtime="20201112 12:42:58.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.206" endtime="20201112 12:42:58.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.209" endtime="20201112 12:42:58.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.180" endtime="20201112 12:42:58.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.178" endtime="20201112 12:42:58.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.219" endtime="20201112 12:42:58.507"></status>
</kw>
<msg timestamp="20201112 12:42:58.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:58.218" endtime="20201112 12:42:58.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563778, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:58.511" endtime="20201112 12:42:58.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.520" endtime="20201112 12:42:58.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.215" endtime="20201112 12:42:58.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.213" endtime="20201112 12:42:58.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.527" level="INFO">${RESULT} = [{'time': 0.020563778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.627800000000213e-05, 'source_diff': 8.627800000000213e-05}, {'time': 0.020655792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.523" endtime="20201112 12:42:58.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.542" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.528" endtime="20201112 12:42:58.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.546" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.545" endtime="20201112 12:42:58.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.549" level="INFO">VALUE: [8.627800000000213e-05, 8.618099999999768e-05, 8.630600000000127e-05, 8.663799999999999e-05, 8.649999999999977e-05, 8.611099999999983e-05, 8.597200000000013e-05, 8.63050000000018e-05, 8.595799999999709e-05, 8.669399999999827e-05, 8.605499999999808e-05, 8.780600000000277e-05, 8.624999999999952e-05, 8.636100000000008e-05, 8.665200000000303e-05, 8.61669999999981e-05, 8.624999999999952e-05, 8.619500000000072e-05, 8.662500000000337e-05, 8.586099999999958e-05, 8.616700000000158e-05, 8.618100000000115e-05, 8.595800000000056e-05, 8.620800000000081e-05, 8.613900000000244e-05, 8.625000000000299e-05, 8.78059999999993e-05, 8.627799999999866e-05, 8.649999999999977e-05, 8.668100000000165e-05, 8.783399999999844e-05, 8.779100000000026e-05, 8.649999999999977e-05, 8.668099999999818e-05, 8.619400000000124e-05, 8.594399999999752e-05, 8.591599999999838e-05, 8.605500000000155e-05, 8.776400000000059e-05, 8.593000000000142e-05, 8.59859999999997e-05, 8.605599999999755e-05, 8.618100000000115e-05, 8.63470000000005e-05, 8.657000000000109e-05, 8.604200000000145e-05, 8.61249999999994e-05, 8.594400000000099e-05, 8.61249999999994e-05, 8.587499999999915e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.548" endtime="20201112 12:42:58.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.543" endtime="20201112 12:42:58.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.553" endtime="20201112 12:42:58.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.556" endtime="20201112 12:42:58.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.555" endtime="20201112 12:42:58.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.551" endtime="20201112 12:42:58.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.176" endtime="20201112 12:42:58.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.176" endtime="20201112 12:42:58.577"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.588" endtime="20201112 12:42:58.607"></status>
</kw>
<msg timestamp="20201112 12:42:58.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.586" endtime="20201112 12:42:58.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.609" endtime="20201112 12:42:58.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.612" endtime="20201112 12:42:58.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.583" endtime="20201112 12:42:58.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.580" endtime="20201112 12:42:58.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.622" endtime="20201112 12:42:58.909"></status>
</kw>
<msg timestamp="20201112 12:42:58.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.621" endtime="20201112 12:42:58.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.913" endtime="20201112 12:42:58.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.922" endtime="20201112 12:42:58.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.618" endtime="20201112 12:42:58.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.616" endtime="20201112 12:42:58.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.929" level="INFO">${RESULT} = [{'time': 0.021893069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.763800000000099e-05, 'source_diff': 8.763800000000099e-05}, {'time': 0.021985083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.925" endtime="20201112 12:42:58.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.942" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.930" endtime="20201112 12:42:58.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.947" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.946" endtime="20201112 12:42:58.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.950" level="INFO">VALUE: [8.763800000000099e-05, 8.730499999999933e-05, 8.706900000000212e-05, 8.694399999999852e-05, 8.750000000000077e-05, 8.772199999999841e-05, 8.752799999999991e-05, 8.88060000000003e-05, 8.713899999999997e-05, 8.774999999999755e-05, 8.874999999999855e-05, 8.772200000000188e-05, 8.720799999999834e-05, 8.705600000000202e-05, 8.705599999999855e-05, 8.722199999999791e-05, 8.756899999999915e-05, 8.71250000000004e-05, 8.722199999999791e-05, 8.76250000000009e-05, 8.700000000000027e-05, 8.744400000000249e-05, 8.69860000000007e-05, 8.711099999999736e-05, 8.875000000000202e-05, 8.734800000000098e-05, 8.71669999999991e-05, 8.725000000000052e-05, 8.719399999999877e-05, 8.758300000000219e-05, 8.693000000000242e-05, 8.743000000000292e-05, 8.694399999999852e-05, 8.88190000000004e-05, 8.706899999999865e-05, 8.700000000000027e-05, 8.74310000000024e-05, 8.686100000000058e-05, 8.705599999999855e-05, 8.701399999999984e-05, 8.695899999999757e-05, 8.705600000000202e-05, 8.733299999999847e-05, 8.76250000000009e-05, 8.772300000000136e-05, 8.719400000000224e-05, 8.711100000000083e-05, 8.76799999999997e-05, 8.736100000000108e-05, 8.762499999999743e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.948" endtime="20201112 12:42:58.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.943" endtime="20201112 12:42:58.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.954" endtime="20201112 12:42:58.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.957" endtime="20201112 12:42:58.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.956" endtime="20201112 12:42:58.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.952" endtime="20201112 12:42:58.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.578" endtime="20201112 12:42:58.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.578" endtime="20201112 12:42:58.978"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.987" endtime="20201112 12:42:59.008"></status>
</kw>
<msg timestamp="20201112 12:42:59.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.985" endtime="20201112 12:42:59.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.009" endtime="20201112 12:42:59.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.012" endtime="20201112 12:42:59.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.983" endtime="20201112 12:42:59.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.981" endtime="20201112 12:42:59.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.023" endtime="20201112 12:42:59.309"></status>
</kw>
<msg timestamp="20201112 12:42:59.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.021" endtime="20201112 12:42:59.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020436875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020525389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.314" endtime="20201112 12:42:59.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.322" endtime="20201112 12:42:59.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.018" endtime="20201112 12:42:59.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.016" endtime="20201112 12:42:59.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.329" level="INFO">${RESULT} = [{'time': 0.020525389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.851400000000134e-05, 'source_diff': 8.851400000000134e-05}, {'time': 0.020618403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:59.326" endtime="20201112 12:42:59.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.343" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:59.330" endtime="20201112 12:42:59.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.348" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.347" endtime="20201112 12:42:59.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.350" level="INFO">VALUE: [8.851400000000134e-05, 8.800000000000127e-05, 8.868100000000018e-05, 8.832000000000284e-05, 8.980499999999836e-05, 8.79869999999977e-05, 8.862499999999843e-05, 8.855499999999711e-05, 8.791600000000038e-05, 8.802799999999694e-05, 8.830500000000033e-05, 8.973599999999998e-05, 8.806899999999965e-05, 8.838900000000122e-05, 8.81670000000001e-05, 8.982000000000087e-05, 8.802800000000041e-05, 8.84860000000022e-05, 8.808299999999922e-05, 8.829200000000023e-05, 8.858299999999972e-05, 8.833299999999947e-05, 8.98060000000013e-05, 8.86800000000007e-05, 8.812499999999793e-05, 8.838899999999775e-05, 8.783299999999897e-05, 8.798599999999823e-05, 8.855600000000005e-05, 8.863900000000147e-05, 8.823600000000195e-05, 8.807000000000259e-05, 8.875000000000202e-05, 8.873700000000193e-05, 8.980500000000183e-05, 8.811100000000183e-05, 8.856900000000015e-05, 8.826400000000109e-05, 8.827800000000066e-05, 8.837500000000165e-05, 8.830500000000033e-05, 8.86800000000007e-05, 8.979200000000173e-05, 8.851399999999787e-05, 8.83059999999998e-05, 8.847199999999916e-05, 8.824999999999805e-05, 8.792999999999995e-05, 8.812499999999793e-05, 8.823700000000143e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.349" endtime="20201112 12:42:59.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.344" endtime="20201112 12:42:59.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.354" endtime="20201112 12:42:59.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.358" endtime="20201112 12:42:59.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.356" endtime="20201112 12:42:59.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.352" endtime="20201112 12:42:59.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.979" endtime="20201112 12:42:59.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.978" endtime="20201112 12:42:59.379"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.388" endtime="20201112 12:42:59.408"></status>
</kw>
<msg timestamp="20201112 12:42:59.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.386" endtime="20201112 12:42:59.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.410" endtime="20201112 12:42:59.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.412" endtime="20201112 12:42:59.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.384" endtime="20201112 12:42:59.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.382" endtime="20201112 12:42:59.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.423" endtime="20201112 12:42:59.709"></status>
</kw>
<msg timestamp="20201112 12:42:59.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020530403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.421" endtime="20201112 12:42:59.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020530403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.714" endtime="20201112 12:42:59.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.722" endtime="20201112 12:42:59.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.418" endtime="20201112 12:42:59.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.416" endtime="20201112 12:42:59.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.729" level="INFO">${RESULT} = [{'time': 0.020619708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.930500000000133e-05, 'source_diff': 8.930500000000133e-05}, {'time': 0.020714708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:59.726" endtime="20201112 12:42:59.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.743" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:59.730" endtime="20201112 12:42:59.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.748" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.747" endtime="20201112 12:42:59.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.751" level="INFO">VALUE: [8.930500000000133e-05, 8.936099999999961e-05, 8.93190000000009e-05, 8.975000000000302e-05, 8.894400000000052e-05, 9.081899999999893e-05, 8.893100000000043e-05, 8.945900000000007e-05, 8.94450000000005e-05, 8.952799999999844e-05, 8.893100000000043e-05, 8.941700000000136e-05, 8.973599999999998e-05, 9.079199999999926e-05, 8.952800000000191e-05, 8.948599999999973e-05, 8.970800000000084e-05, 8.917999999999773e-05, 8.923599999999948e-05, 8.906900000000065e-05, 8.940299999999832e-05, 8.951399999999887e-05, 8.936099999999961e-05, 8.905600000000055e-05, 8.958300000000072e-05, 8.926299999999915e-05, 8.948700000000268e-05, 8.894400000000052e-05, 8.909699999999979e-05, 8.962499999999943e-05, 9.079099999999979e-05, 8.956899999999768e-05, 8.954100000000201e-05, 8.945800000000059e-05, 8.886099999999911e-05, 8.909699999999979e-05, 8.895800000000009e-05, 8.919500000000025e-05, 8.934700000000004e-05, 8.94999999999993e-05, 8.936099999999961e-05, 8.888899999999825e-05, 8.904199999999751e-05, 8.887499999999868e-05, 8.884699999999954e-05, 8.938899999999875e-05, 8.923600000000295e-05, 8.948599999999973e-05, 8.893100000000043e-05, 8.91389999999985e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.749" endtime="20201112 12:42:59.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.744" endtime="20201112 12:42:59.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.754" endtime="20201112 12:42:59.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.758" endtime="20201112 12:42:59.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.756" endtime="20201112 12:42:59.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.753" endtime="20201112 12:42:59.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.380" endtime="20201112 12:42:59.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.379" endtime="20201112 12:42:59.779"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.788" endtime="20201112 12:42:59.808"></status>
</kw>
<msg timestamp="20201112 12:42:59.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.786" endtime="20201112 12:42:59.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.810" endtime="20201112 12:42:59.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.812" endtime="20201112 12:42:59.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.784" endtime="20201112 12:42:59.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.782" endtime="20201112 12:42:59.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.823" endtime="20201112 12:43:00.109"></status>
</kw>
<msg timestamp="20201112 12:43:00.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020526208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.821" endtime="20201112 12:43:00.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020526208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020616486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.113" endtime="20201112 12:43:00.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.122" endtime="20201112 12:43:00.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.819" endtime="20201112 12:43:00.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.817" endtime="20201112 12:43:00.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.129" level="INFO">${RESULT} = [{'time': 0.020616486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.027799999999919e-05, 'source_diff': 9.027799999999919e-05}, {'time': 0.0207125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:00.125" endtime="20201112 12:43:00.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.144" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.130" endtime="20201112 12:43:00.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.148" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.147" endtime="20201112 12:43:00.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.151" level="INFO">VALUE: [9.027799999999919e-05, 8.99999999999998e-05, 9.070799999999837e-05, 9.038899999999975e-05, 9.173599999999851e-05, 9.001399999999937e-05, 8.990299999999882e-05, 9.05000000000003e-05, 9.012499999999993e-05, 9.063799999999705e-05, 9.026300000000015e-05, 8.984700000000054e-05, 9.005500000000208e-05, 9.056899999999868e-05, 9.030499999999886e-05, 9.179099999999732e-05, 9.04450000000015e-05, 9.069500000000175e-05, 9.01389999999995e-05, 9.011100000000036e-05, 9.180599999999983e-05, 9.037500000000018e-05, 8.988900000000272e-05, 9.008400000000069e-05, 9.01939999999983e-05, 9.180500000000036e-05, 9.177799999999722e-05, 9.022200000000091e-05, 9.052799999999944e-05, 8.99999999999998e-05, 8.995800000000109e-05, 9.004199999999851e-05, 9.018099999999821e-05, 9.01389999999995e-05, 8.987499999999968e-05, 9.068100000000218e-05, 9.025000000000005e-05, 8.990300000000229e-05, 9.047300000000064e-05, 8.99999999999998e-05, 9.033300000000147e-05, 9.065299999999957e-05, 9.042999999999898e-05, 9.030499999999886e-05, 9.030499999999886e-05, 9.043099999999846e-05, 8.988899999999925e-05, 9.055599999999858e-05, 9.052799999999944e-05, 9.008400000000069e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.150" endtime="20201112 12:43:00.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.145" endtime="20201112 12:43:00.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.155" endtime="20201112 12:43:00.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.158" endtime="20201112 12:43:00.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.157" endtime="20201112 12:43:00.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.153" endtime="20201112 12:43:00.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.780" endtime="20201112 12:43:00.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.779" endtime="20201112 12:43:00.179"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.188" endtime="20201112 12:43:00.209"></status>
</kw>
<msg timestamp="20201112 12:43:00.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.187" endtime="20201112 12:43:00.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.210" endtime="20201112 12:43:00.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.213" endtime="20201112 12:43:00.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.184" endtime="20201112 12:43:00.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.182" endtime="20201112 12:43:00.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.223" endtime="20201112 12:43:00.509"></status>
</kw>
<msg timestamp="20201112 12:43:00.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020520181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:00.222" endtime="20201112 12:43:00.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020520181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:00.513" endtime="20201112 12:43:00.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.522" endtime="20201112 12:43:00.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.219" endtime="20201112 12:43:00.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.217" endtime="20201112 12:43:00.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.529" level="INFO">${RESULT} = [{'time': 0.020520181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.168099999999971e-05, 'source_diff': 9.168099999999971e-05}, {'time': 0.020615181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:00.525" endtime="20201112 12:43:00.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.543" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.530" endtime="20201112 12:43:00.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.547" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.546" endtime="20201112 12:43:00.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.550" level="INFO">VALUE: [9.168099999999971e-05, 9.141699999999989e-05, 9.137500000000118e-05, 9.10000000000008e-05, 9.284700000000007e-05, 9.10000000000008e-05, 9.136100000000161e-05, 9.098600000000123e-05, 9.13060000000028e-05, 9.175000000000155e-05, 9.170899999999885e-05, 9.098600000000123e-05, 9.143099999999946e-05, 9.104199999999951e-05, 9.287499999999921e-05, 9.15000000000013e-05, 9.162500000000143e-05, 9.116699999999964e-05, 9.115300000000007e-05, 9.106899999999918e-05, 9.16939999999998e-05, 9.162500000000143e-05, 9.165300000000057e-05, 9.129199999999976e-05, 9.119499999999878e-05, 9.283399999999997e-05, 9.168100000000318e-05, 9.084800000000101e-05, 9.156999999999915e-05, 9.094399999999905e-05, 9.123600000000148e-05, 9.142999999999998e-05, 9.131899999999943e-05, 9.140200000000084e-05, 9.113899999999703e-05, 9.162500000000143e-05, 9.172199999999894e-05, 9.28200000000004e-05, 9.104199999999951e-05, 9.097200000000166e-05, 9.156999999999915e-05, 9.162500000000143e-05, 9.159799999999829e-05, 9.115300000000007e-05, 9.280599999999736e-05, 9.172300000000189e-05, 9.120799999999887e-05, 9.144399999999955e-05, 9.136099999999814e-05, 9.104199999999951e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.549" endtime="20201112 12:43:00.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.544" endtime="20201112 12:43:00.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.554" endtime="20201112 12:43:00.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.557" endtime="20201112 12:43:00.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.556" endtime="20201112 12:43:00.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.552" endtime="20201112 12:43:00.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.180" endtime="20201112 12:43:00.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.180" endtime="20201112 12:43:00.579"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.588" endtime="20201112 12:43:00.608"></status>
</kw>
<msg timestamp="20201112 12:43:00.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.586" endtime="20201112 12:43:00.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.609" endtime="20201112 12:43:00.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.612" endtime="20201112 12:43:00.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.583" endtime="20201112 12:43:00.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.581" endtime="20201112 12:43:00.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.624" endtime="20201112 12:43:00.910"></status>
</kw>
<msg timestamp="20201112 12:43:00.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020601236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0206935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:00.622" endtime="20201112 12:43:00.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020601236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0206935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:00.915" endtime="20201112 12:43:00.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.923" endtime="20201112 12:43:00.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.619" endtime="20201112 12:43:00.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.617" endtime="20201112 12:43:00.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.930" level="INFO">${RESULT} = [{'time': 0.0206935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.226400000000162e-05, 'source_diff': 9.226400000000162e-05}, {'time': 0.0207915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:43:00.927" endtime="20201112 12:43:00.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.944" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.931" endtime="20201112 12:43:00.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.949" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.948" endtime="20201112 12:43:00.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.952" level="INFO">VALUE: [9.226400000000162e-05, 9.198600000000223e-05, 9.254200000000101e-05, 9.233399999999947e-05, 9.258300000000025e-05, 9.198600000000223e-05, 9.237499999999871e-05, 9.234799999999904e-05, 9.218000000000073e-05, 9.263899999999853e-05, 9.230499999999739e-05, 9.377799999999922e-05, 9.376399999999965e-05, 9.248599999999926e-05, 9.268100000000071e-05, 9.24589999999996e-05, 9.259699999999982e-05, 9.184699999999907e-05, 9.273599999999951e-05, 9.234799999999904e-05, 9.212500000000193e-05, 9.375000000000008e-05, 9.266600000000166e-05, 9.268000000000123e-05, 9.379100000000279e-05, 9.256900000000068e-05, 9.24719999999997e-05, 9.218000000000073e-05, 9.265300000000157e-05, 9.236100000000261e-05, 9.243100000000046e-05, 9.249999999999883e-05, 9.198600000000223e-05, 9.26940000000008e-05, 9.198699999999824e-05, 9.187499999999821e-05, 9.226299999999868e-05, 9.225000000000205e-05, 9.266699999999767e-05, 9.212499999999846e-05, 9.245800000000012e-05, 9.212499999999846e-05, 9.24719999999997e-05, 9.225000000000205e-05, 9.201400000000137e-05, 9.206999999999965e-05, 9.223599999999901e-05, 9.254199999999754e-05, 9.234699999999957e-05, 9.263799999999905e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.950" endtime="20201112 12:43:00.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.945" endtime="20201112 12:43:00.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.955" endtime="20201112 12:43:00.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.959" endtime="20201112 12:43:00.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.957" endtime="20201112 12:43:00.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.954" endtime="20201112 12:43:00.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.580" endtime="20201112 12:43:00.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.579" endtime="20201112 12:43:00.980"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.989" endtime="20201112 12:43:01.009"></status>
</kw>
<msg timestamp="20201112 12:43:01.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.987" endtime="20201112 12:43:01.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.011" endtime="20201112 12:43:01.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.013" endtime="20201112 12:43:01.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.985" endtime="20201112 12:43:01.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.983" endtime="20201112 12:43:01.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.024" endtime="20201112 12:43:01.313"></status>
</kw>
<msg timestamp="20201112 12:43:01.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.022" endtime="20201112 12:43:01.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.317" endtime="20201112 12:43:01.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.326" endtime="20201112 12:43:01.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.020" endtime="20201112 12:43:01.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.018" endtime="20201112 12:43:01.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.333" level="INFO">${RESULT} = [{'time': 0.020514444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.340199999999937e-05, 'source_diff': 9.340199999999937e-05}, {'time': 0.020611444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.329" endtime="20201112 12:43:01.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.347" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:01.334" endtime="20201112 12:43:01.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.352" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.350" endtime="20201112 12:43:01.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.354" level="INFO">VALUE: [9.340199999999937e-05, 9.287499999999921e-05, 9.372200000000094e-05, 9.477700000000075e-05, 9.288900000000225e-05, 9.362499999999996e-05, 9.323600000000001e-05, 9.305600000000108e-05, 9.307000000000065e-05, 9.349999999999983e-05, 9.299999999999933e-05, 9.319500000000078e-05, 9.280600000000083e-05, 9.317999999999826e-05, 9.287499999999921e-05, 9.37079999999979e-05, 9.337499999999971e-05, 9.293000000000148e-05, 9.29720000000002e-05, 9.31940000000013e-05, 9.359700000000082e-05, 9.361100000000039e-05, 9.344500000000103e-05, 9.309700000000032e-05, 9.369499999999781e-05, 9.287500000000268e-05, 9.369500000000128e-05, 9.354199999999854e-05, 9.362499999999996e-05, 9.324999999999958e-05, 9.355600000000158e-05, 9.367999999999876e-05, 9.354099999999907e-05, 9.286099999999964e-05, 9.318099999999774e-05, 9.316699999999817e-05, 9.483400000000197e-05, 9.286099999999964e-05, 9.35139999999994e-05, 9.348600000000026e-05, 9.367999999999876e-05, 9.480500000000336e-05, 9.31940000000013e-05, 9.293000000000148e-05, 9.372200000000094e-05, 9.286099999999964e-05, 9.317999999999826e-05, 9.336100000000014e-05, 9.312499999999946e-05, 9.330599999999786e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.353" endtime="20201112 12:43:01.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.348" endtime="20201112 12:43:01.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.358" endtime="20201112 12:43:01.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.362" endtime="20201112 12:43:01.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.360" endtime="20201112 12:43:01.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.356" endtime="20201112 12:43:01.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.981" endtime="20201112 12:43:01.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.980" endtime="20201112 12:43:01.383"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.392" endtime="20201112 12:43:01.412"></status>
</kw>
<msg timestamp="20201112 12:43:01.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.390" endtime="20201112 12:43:01.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.413" endtime="20201112 12:43:01.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.416" endtime="20201112 12:43:01.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.387" endtime="20201112 12:43:01.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.385" endtime="20201112 12:43:01.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.426" endtime="20201112 12:43:01.713"></status>
</kw>
<msg timestamp="20201112 12:43:01.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02040475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020499319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:01.425" endtime="20201112 12:43:01.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02040475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020499319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:01.718" endtime="20201112 12:43:01.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.726" endtime="20201112 12:43:01.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.422" endtime="20201112 12:43:01.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.420" endtime="20201112 12:43:01.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.733" level="INFO">${RESULT} = [{'time': 0.020499319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.456899999999921e-05, 'source_diff': 9.456899999999921e-05}, {'time': 0.020597306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.730" endtime="20201112 12:43:01.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.748" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:01.734" endtime="20201112 12:43:01.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.753" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.752" endtime="20201112 12:43:01.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.756" level="INFO">VALUE: [9.456899999999921e-05, 9.391699999999892e-05, 9.394499999999806e-05, 9.411100000000089e-05, 9.387500000000021e-05, 9.411100000000089e-05, 9.581900000000046e-05, 9.406999999999818e-05, 9.409799999999732e-05, 9.398600000000076e-05, 9.395899999999763e-05, 9.456999999999868e-05, 9.404199999999904e-05, 9.577699999999828e-05, 9.406900000000218e-05, 9.387500000000021e-05, 9.581899999999699e-05, 9.423600000000101e-05, 9.466599999999672e-05, 9.455499999999964e-05, 9.398600000000076e-05, 9.449999999999736e-05, 9.407000000000165e-05, 9.422200000000144e-05, 9.426400000000015e-05, 9.416700000000264e-05, 9.434800000000104e-05, 9.418100000000221e-05, 9.393000000000248e-05, 9.474999999999761e-05, 9.467999999999976e-05, 9.427799999999972e-05, 9.434700000000157e-05, 9.462500000000096e-05, 9.447199999999822e-05, 9.441699999999942e-05, 9.400000000000033e-05, 9.462500000000096e-05, 9.455599999999911e-05, 9.391700000000239e-05, 9.400000000000033e-05, 9.392999999999901e-05, 9.466699999999967e-05, 9.581900000000046e-05, 9.467999999999976e-05, 9.430500000000286e-05, 9.458299999999878e-05, 9.437499999999724e-05, 9.418099999999874e-05, 9.440299999999985e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.754" endtime="20201112 12:43:01.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.749" endtime="20201112 12:43:01.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.759" endtime="20201112 12:43:01.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.763" endtime="20201112 12:43:01.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.761" endtime="20201112 12:43:01.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.758" endtime="20201112 12:43:01.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.383" endtime="20201112 12:43:01.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.383" endtime="20201112 12:43:01.784"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.793" endtime="20201112 12:43:01.813"></status>
</kw>
<msg timestamp="20201112 12:43:01.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.792" endtime="20201112 12:43:01.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.815" endtime="20201112 12:43:01.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.817" endtime="20201112 12:43:01.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.789" endtime="20201112 12:43:01.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.787" endtime="20201112 12:43:01.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.828" endtime="20201112 12:43:02.115"></status>
</kw>
<msg timestamp="20201112 12:43:02.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020565903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.826" endtime="20201112 12:43:02.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020470708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020565903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.119" endtime="20201112 12:43:02.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.128" endtime="20201112 12:43:02.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.824" endtime="20201112 12:43:02.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.822" endtime="20201112 12:43:02.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.135" level="INFO">${RESULT} = [{'time': 0.020565903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.519499999999931e-05, 'source_diff': 9.519499999999931e-05}, {'time': 0.020663903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.131" endtime="20201112 12:43:02.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.136" endtime="20201112 12:43:02.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.153" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.152" endtime="20201112 12:43:02.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.156" level="INFO">VALUE: [9.519499999999931e-05, 9.529200000000029e-05, 9.670900000000038e-05, 9.561100000000239e-05, 9.51530000000006e-05, 9.574999999999861e-05, 9.512500000000146e-05, 9.513900000000103e-05, 9.505500000000014e-05, 9.684800000000007e-05, 9.506899999999971e-05, 9.493000000000001e-05, 9.544499999999956e-05, 9.512500000000146e-05, 9.515299999999713e-05, 9.531999999999943e-05, 9.556999999999968e-05, 9.673600000000004e-05, 9.500000000000133e-05, 9.500000000000133e-05, 9.527800000000072e-05, 9.524999999999811e-05, 9.526400000000115e-05, 9.681899999999799e-05, 9.563899999999806e-05, 9.513900000000103e-05, 9.555600000000011e-05, 9.679199999999832e-05, 9.494499999999906e-05, 9.544499999999956e-05, 9.501300000000143e-05, 9.568000000000076e-05, 9.529100000000082e-05, 9.486099999999817e-05, 9.487500000000121e-05, 9.491599999999698e-05, 9.504100000000057e-05, 9.523599999999854e-05, 9.537500000000171e-05, 9.487499999999774e-05, 9.570899999999938e-05, 9.573600000000251e-05, 9.513899999999756e-05, 9.493100000000296e-05, 9.676400000000265e-05, 9.491699999999992e-05, 9.522299999999845e-05, 9.545799999999965e-05, 9.488899999999731e-05, 9.676399999999918e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.154" endtime="20201112 12:43:02.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.149" endtime="20201112 12:43:02.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.160" endtime="20201112 12:43:02.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.163" endtime="20201112 12:43:02.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.162" endtime="20201112 12:43:02.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.158" endtime="20201112 12:43:02.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.785" endtime="20201112 12:43:02.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.784" endtime="20201112 12:43:02.184"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.193" endtime="20201112 12:43:02.214"></status>
</kw>
<msg timestamp="20201112 12:43:02.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.192" endtime="20201112 12:43:02.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.215" endtime="20201112 12:43:02.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.218" endtime="20201112 12:43:02.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.189" endtime="20201112 12:43:02.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.187" endtime="20201112 12:43:02.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.228" endtime="20201112 12:43:02.514"></status>
</kw>
<msg timestamp="20201112 12:43:02.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020570056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:02.227" endtime="20201112 12:43:02.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020570056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:02.518" endtime="20201112 12:43:02.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.527" endtime="20201112 12:43:02.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.224" endtime="20201112 12:43:02.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.222" endtime="20201112 12:43:02.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.534" level="INFO">${RESULT} = [{'time': 0.020570056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.655600000000111e-05, 'source_diff': 9.655600000000111e-05}, {'time': 0.020669083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.530" endtime="20201112 12:43:02.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.548" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.535" endtime="20201112 12:43:02.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.552" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.551" endtime="20201112 12:43:02.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.555" level="INFO">VALUE: [9.655600000000111e-05, 9.597199999999972e-05, 9.661199999999939e-05, 9.61669999999977e-05, 9.779199999999932e-05, 9.783299999999856e-05, 9.673600000000004e-05, 9.629099999999835e-05, 9.644399999999761e-05, 9.64729999999997e-05, 9.630600000000086e-05, 9.776400000000018e-05, 9.612499999999899e-05, 9.623599999999954e-05, 9.618099999999727e-05, 9.604200000000104e-05, 9.599999999999886e-05, 9.600000000000233e-05, 9.781899999999899e-05, 9.661099999999992e-05, 9.604200000000104e-05, 9.606900000000071e-05, 9.613900000000203e-05, 9.595800000000015e-05, 9.630600000000086e-05, 9.630600000000086e-05, 9.776400000000018e-05, 9.650000000000283e-05, 9.666599999999873e-05, 9.649999999999936e-05, 9.637499999999924e-05, 9.647200000000022e-05, 9.590300000000135e-05, 9.655499999999817e-05, 9.620899999999988e-05, 9.65279999999985e-05, 9.622299999999945e-05, 9.605600000000061e-05, 9.66530000000021e-05, 9.63470000000001e-05, 9.602800000000147e-05, 9.601299999999896e-05, 9.645800000000065e-05, 9.66530000000021e-05, 9.599999999999886e-05, 9.644399999999761e-05, 9.781900000000246e-05, 9.586099999999917e-05, 9.674999999999961e-05, 9.625000000000258e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.554" endtime="20201112 12:43:02.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.549" endtime="20201112 12:43:02.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.559" endtime="20201112 12:43:02.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.562" endtime="20201112 12:43:02.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.561" endtime="20201112 12:43:02.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.557" endtime="20201112 12:43:02.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.185" endtime="20201112 12:43:02.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.184" endtime="20201112 12:43:02.583"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.592" endtime="20201112 12:43:02.613"></status>
</kw>
<msg timestamp="20201112 12:43:02.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.591" endtime="20201112 12:43:02.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.614" endtime="20201112 12:43:02.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.617" endtime="20201112 12:43:02.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.588" endtime="20201112 12:43:02.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.586" endtime="20201112 12:43:02.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.627" endtime="20201112 12:43:02.914"></status>
</kw>
<msg timestamp="20201112 12:43:02.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.626" endtime="20201112 12:43:02.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020498389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.919" endtime="20201112 12:43:02.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.927" endtime="20201112 12:43:02.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.623" endtime="20201112 12:43:02.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.621" endtime="20201112 12:43:02.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.934" level="INFO">${RESULT} = [{'time': 0.020498389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.750000000000036e-05, 'source_diff': 9.750000000000036e-05}, {'time': 0.020601389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.931" endtime="20201112 12:43:02.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.948" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.935" endtime="20201112 12:43:02.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.953" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.952" endtime="20201112 12:43:02.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.955" level="INFO">VALUE: [9.750000000000036e-05, 9.876400000000118e-05, 9.693100000000149e-05, 9.76669999999992e-05, 9.69730000000002e-05, 9.723700000000002e-05, 9.699999999999986e-05, 9.748599999999732e-05, 9.76799999999993e-05, 9.761099999999745e-05, 9.693000000000201e-05, 9.879200000000032e-05, 9.756900000000221e-05, 9.761100000000092e-05, 9.754200000000254e-05, 9.881999999999946e-05, 9.71669999999987e-05, 9.690299999999888e-05, 9.713899999999956e-05, 9.699999999999986e-05, 9.75409999999996e-05, 9.736100000000067e-05, 9.742999999999905e-05, 9.692999999999855e-05, 9.694499999999759e-05, 9.713899999999956e-05, 9.688899999999931e-05, 9.69860000000003e-05, 9.694500000000106e-05, 9.694499999999759e-05, 9.723599999999707e-05, 9.71669999999987e-05, 9.880500000000042e-05, 9.7721999999998e-05, 9.725000000000011e-05, 9.693000000000201e-05, 9.762500000000049e-05, 9.719399999999837e-05, 9.69860000000003e-05, 9.751399999999993e-05, 9.743099999999852e-05, 9.751399999999993e-05, 9.699999999999986e-05, 9.770899999999791e-05, 9.737500000000024e-05, 9.726300000000021e-05, 9.711100000000042e-05, 9.71799999999988e-05, 9.687499999999974e-05, 9.731900000000196e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.954" endtime="20201112 12:43:02.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.949" endtime="20201112 12:43:02.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.959" endtime="20201112 12:43:02.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.963" endtime="20201112 12:43:02.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.961" endtime="20201112 12:43:02.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.957" endtime="20201112 12:43:02.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.584" endtime="20201112 12:43:02.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.584" endtime="20201112 12:43:02.984"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.993" endtime="20201112 12:43:03.014"></status>
</kw>
<msg timestamp="20201112 12:43:03.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.991" endtime="20201112 12:43:03.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.016" endtime="20201112 12:43:03.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.019" endtime="20201112 12:43:03.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.989" endtime="20201112 12:43:03.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.986" endtime="20201112 12:43:03.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.029" endtime="20201112 12:43:03.316"></status>
</kw>
<msg timestamp="20201112 12:43:03.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02049075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205905, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:03.027" endtime="20201112 12:43:03.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02049075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0205905, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:03.320" endtime="20201112 12:43:03.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.329" endtime="20201112 12:43:03.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.025" endtime="20201112 12:43:03.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.023" endtime="20201112 12:43:03.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.336" level="INFO">${RESULT} = [{'time': 0.0205905, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.975000000000261e-05, 'source_diff': 9.975000000000261e-05}, {'time': 0.0206915, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:43:03.333" endtime="20201112 12:43:03.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.351" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:03.337" endtime="20201112 12:43:03.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.356" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.355" endtime="20201112 12:43:03.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.358" level="INFO">VALUE: [9.975000000000261e-05, 9.808300000000228e-05, 9.812500000000099e-05, 9.811100000000142e-05, 9.831999999999896e-05, 9.841600000000048e-05, 9.79860000000013e-05, 9.83059999999994e-05, 9.805499999999967e-05, 9.845799999999919e-05, 9.825000000000111e-05, 9.86800000000003e-05, 9.974999999999914e-05, 9.86800000000003e-05, 9.855599999999964e-05, 9.976400000000218e-05, 9.841600000000048e-05, 9.876400000000118e-05, 9.788800000000084e-05, 9.981900000000099e-05, 9.866699999999673e-05, 9.9722e-05, 9.855500000000017e-05, 9.856899999999974e-05, 9.855500000000017e-05, 9.800000000000086e-05, 9.824999999999764e-05, 9.833299999999906e-05, 9.98060000000009e-05, 9.829199999999982e-05, 9.982000000000046e-05, 9.793099999999902e-05, 9.792999999999955e-05, 9.834699999999863e-05, 9.84730000000017e-05, 9.830499999999992e-05, 9.869399999999987e-05, 9.830499999999992e-05, 9.977800000000175e-05, 9.98060000000009e-05, 9.791699999999945e-05, 9.838899999999734e-05, 9.86670000000002e-05, 9.8028e-05, 9.805599999999914e-05, 9.795799999999869e-05, 9.869399999999987e-05, 9.795799999999869e-05, 9.823600000000154e-05, 9.869399999999987e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.357" endtime="20201112 12:43:03.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.352" endtime="20201112 12:43:03.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.362" endtime="20201112 12:43:03.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.366" endtime="20201112 12:43:03.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.364" endtime="20201112 12:43:03.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.360" endtime="20201112 12:43:03.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.985" endtime="20201112 12:43:03.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.984" endtime="20201112 12:43:03.387"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.396" endtime="20201112 12:43:03.417"></status>
</kw>
<msg timestamp="20201112 12:43:03.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.394" endtime="20201112 12:43:03.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.419" endtime="20201112 12:43:03.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.421" endtime="20201112 12:43:03.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.391" endtime="20201112 12:43:03.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.389" endtime="20201112 12:43:03.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.432" endtime="20201112 12:43:03.719"></status>
</kw>
<msg timestamp="20201112 12:43:03.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020510292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.430" endtime="20201112 12:43:03.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020410792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020510292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.723" endtime="20201112 12:43:03.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.732" endtime="20201112 12:43:03.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.427" endtime="20201112 12:43:03.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.426" endtime="20201112 12:43:03.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.739" level="INFO">${RESULT} = [{'time': 0.020510292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.94999999999989e-05, 'source_diff': 9.94999999999989e-05}, {'time': 0.020615319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:03.735" endtime="20201112 12:43:03.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.753" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:03.740" endtime="20201112 12:43:03.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.757" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.756" endtime="20201112 12:43:03.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.760" level="INFO">VALUE: [9.94999999999989e-05, 9.913799999999862e-05, 9.95280000000015e-05, 9.956900000000074e-05, 9.912499999999852e-05, 9.930499999999745e-05, 9.943000000000105e-05, 9.920799999999994e-05, 9.923599999999907e-05, 9.923599999999907e-05, 9.905600000000014e-05, 9.955600000000064e-05, 9.904200000000057e-05, 9.905600000000014e-05, 9.920899999999941e-05, 9.906900000000024e-05, 9.968100000000077e-05, 9.976399999999871e-05, 0.00010073600000000058, 9.961100000000292e-05, 9.886100000000217e-05, 0.00010073600000000058, 9.938899999999834e-05, 9.909699999999938e-05, 9.973599999999957e-05, 9.958400000000325e-05, 9.934699999999963e-05, 9.909699999999938e-05, 9.89999999999984e-05, 9.945899999999966e-05, 9.958300000000031e-05, 9.901400000000143e-05, 9.951399999999846e-05, 9.950000000000236e-05, 9.911099999999895e-05, 9.905600000000014e-05, 9.891700000000045e-05, 0.00010083400000000103, 9.91670000000007e-05, 9.900000000000186e-05, 9.959699999999988e-05, 9.961100000000292e-05, 9.940300000000138e-05, 9.9028000000001e-05, 9.937499999999877e-05, 9.894400000000012e-05, 9.93609999999992e-05, 9.974999999999914e-05, 9.941700000000095e-05, 9.906900000000024e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.759" endtime="20201112 12:43:03.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.754" endtime="20201112 12:43:03.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.764" endtime="20201112 12:43:03.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.768" endtime="20201112 12:43:03.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.766" endtime="20201112 12:43:03.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.762" endtime="20201112 12:43:03.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.388" endtime="20201112 12:43:03.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.387" endtime="20201112 12:43:03.789"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.797" endtime="20201112 12:43:03.818"></status>
</kw>
<msg timestamp="20201112 12:43:03.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.796" endtime="20201112 12:43:03.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.820" endtime="20201112 12:43:03.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.823" endtime="20201112 12:43:03.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.793" endtime="20201112 12:43:03.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.791" endtime="20201112 12:43:03.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.833" endtime="20201112 12:43:04.119"></status>
</kw>
<msg timestamp="20201112 12:43:04.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020522028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.831" endtime="20201112 12:43:04.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020522028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.123" endtime="20201112 12:43:04.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.132" endtime="20201112 12:43:04.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.829" endtime="20201112 12:43:04.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.827" endtime="20201112 12:43:04.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.139" level="INFO">${RESULT} = [{'time': 0.020522028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010013900000000256, 'source_diff': 0.00010013900000000256}, {'time': 0.020628014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:04.135" endtime="20201112 12:43:04.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.152" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.140" endtime="20201112 12:43:04.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.157" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.156" endtime="20201112 12:43:04.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.160" level="INFO">VALUE: [0.00010013900000000256, 0.00010004200000000157, 9.988900000000231e-05, 0.00010005599999999767, 0.00010018100000000127, 0.0001005419999999986, 0.00010037499999999977, 0.00010008299999999734, 0.00010011099999999995, 0.00010006900000000124, 0.0001004999999999999, 0.00010009699999999691, 0.00010044499999999762, 0.00010047300000000023, 0.00010037499999999977, 0.00010044499999999762, 0.00010015199999999919, 0.0001003060000000014, 9.988800000000284e-05, 0.00010038799999999987, 0.00010002799999999853, 9.994399999999765e-05, 0.00010062500000000002, 0.00010026399999999921, 9.987499999999927e-05, 0.00010177800000000028, 0.00010180599999999942, 9.991699999999798e-05, 0.00010001399999999896, 0.00010029199999999835, 0.00010048600000000033, 0.00010024999999999964, 9.997299999999973e-05, 0.00010042999999999858, 0.00010013900000000256, 0.00010180499999999995, 9.994399999999765e-05, 0.0001006809999999983, 0.00010183299999999909, 0.00010016600000000223, 0.00010026399999999921, 0.00010048600000000033, 0.00010073600000000058, 0.00010055599999999817, 0.00010018100000000127, 0.00010180499999999995, 0.00010016600000000223, 0.00010176400000000071, 0.00010016600000000223, 0.00010011099999999995]</msg>
<status status="PASS" starttime="20201112 12:43:04.158" endtime="20201112 12:43:04.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.153" endtime="20201112 12:43:04.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.164" endtime="20201112 12:43:04.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.167" endtime="20201112 12:43:04.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.166" endtime="20201112 12:43:04.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.162" endtime="20201112 12:43:04.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.790" endtime="20201112 12:43:04.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.789" endtime="20201112 12:43:04.188"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.197" endtime="20201112 12:43:04.218"></status>
</kw>
<msg timestamp="20201112 12:43:04.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.196" endtime="20201112 12:43:04.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.219" endtime="20201112 12:43:04.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.222" endtime="20201112 12:43:04.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.193" endtime="20201112 12:43:04.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.191" endtime="20201112 12:43:04.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.232" endtime="20201112 12:43:04.520"></status>
</kw>
<msg timestamp="20201112 12:43:04.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.231" endtime="20201112 12:43:04.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020595167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.525" endtime="20201112 12:43:04.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.533" endtime="20201112 12:43:04.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.228" endtime="20201112 12:43:04.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.226" endtime="20201112 12:43:04.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.540" level="INFO">${RESULT} = [{'time': 0.020595167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010112500000000052, 'source_diff': 0.00010112500000000052}, {'time': 0.020700139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:04.537" endtime="20201112 12:43:04.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.554" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.541" endtime="20201112 12:43:04.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.559" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.558" endtime="20201112 12:43:04.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.561" level="INFO">VALUE: [0.00010112500000000052, 0.00010127799999999978, 0.00010143099999999905, 0.00010113900000000009, 0.00010144400000000262, 0.00010148699999999733, 0.00010173699999999758, 0.00010138900000000034, 0.00010117999999999933, 0.00010138900000000034, 0.00010090299999999941, 0.0001015000000000009, 0.0001010410000000031, 0.0001016809999999993, 0.0001010419999999991, 0.00010126399999999675, 0.00010276400000000172, 0.00010138900000000034, 0.00010131899999999902, 0.00010112500000000052, 0.00010163900000000059, 0.00010098600000000083, 0.00010156900000000274, 0.0001016939999999994, 0.0001016809999999993, 0.00010127800000000325, 0.00010143099999999905, 0.00010091699999999898, 0.0001013610000000012, 0.00010280599999999696, 0.00010094500000000159, 0.00010179199999999985, 0.00010169400000000287, 0.00010162500000000102, 0.00010130499999999945, 0.00010162500000000102, 0.0001010549999999992, 0.00010120799999999847, 0.00010111099999999748, 0.0001015419999999996, 0.00010120900000000141, 0.00010148600000000133, 0.00010137500000000077, 0.00010101399999999996, 0.00010279199999999739, 0.00010087500000000027, 0.00010104099999999963, 0.00010162499999999755, 0.00010116699999999923, 0.00010162499999999755]</msg>
<status status="PASS" starttime="20201112 12:43:04.560" endtime="20201112 12:43:04.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.555" endtime="20201112 12:43:04.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.565" endtime="20201112 12:43:04.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.569" endtime="20201112 12:43:04.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.567" endtime="20201112 12:43:04.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.563" endtime="20201112 12:43:04.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.189" endtime="20201112 12:43:04.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.189" endtime="20201112 12:43:04.590"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.599" endtime="20201112 12:43:04.620"></status>
</kw>
<msg timestamp="20201112 12:43:04.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.597" endtime="20201112 12:43:04.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.622" endtime="20201112 12:43:04.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.624" endtime="20201112 12:43:04.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.595" endtime="20201112 12:43:04.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.592" endtime="20201112 12:43:04.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.635" endtime="20201112 12:43:04.922"></status>
</kw>
<msg timestamp="20201112 12:43:04.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.633" endtime="20201112 12:43:04.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.926" endtime="20201112 12:43:04.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.935" endtime="20201112 12:43:04.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.631" endtime="20201112 12:43:04.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.629" endtime="20201112 12:43:04.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.942" level="INFO">${RESULT} = [{'time': 0.020552917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010222300000000198, 'source_diff': 0.00010222300000000198}, {'time': 0.020659917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:04.938" endtime="20201112 12:43:04.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.956" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.943" endtime="20201112 12:43:04.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.961" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.960" endtime="20201112 12:43:04.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.964" level="INFO">VALUE: [0.00010222300000000198, 0.00010247299999999876, 0.00010212499999999805, 0.00010243000000000058, 0.00010248599999999886, 0.00010202799999999707, 0.00010206899999999977, 0.00010238900000000134, 0.00010383300000000109, 0.00010248599999999886, 0.00010252799999999757, 0.00010263900000000159, 0.0001020420000000001, 0.00010245899999999919, 0.0001025550000000007, 0.00010383300000000109, 0.0001020420000000001, 0.0001021939999999999, 0.00010275000000000215, 0.00010198599999999836, 0.00010206899999999977, 0.0001021939999999999, 0.0001023749999999983, 0.00010261099999999898, 0.0001020420000000001, 0.00010219499999999937, 0.00010266699999999726, 0.00010380600000000142, 0.00010258299999999984, 0.0001023619999999982, 0.00010227800000000078, 0.00010204100000000063, 0.0001023749999999983, 0.0001019160000000005, 0.00010231900000000002, 0.00010263899999999812, 0.00010258299999999984, 0.00010229200000000035, 0.00010201400000000097, 0.00010269499999999987, 0.00010247299999999876, 0.00010256900000000027, 0.00010236099999999873, 0.00010211099999999848, 0.00010225000000000165, 0.00010218000000000033, 0.00010206899999999977, 0.00010229200000000035, 0.00010226400000000122, 0.00010377799999999882]</msg>
<status status="PASS" starttime="20201112 12:43:04.962" endtime="20201112 12:43:04.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.957" endtime="20201112 12:43:04.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.967" endtime="20201112 12:43:04.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.971" endtime="20201112 12:43:04.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.969" endtime="20201112 12:43:04.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.966" endtime="20201112 12:43:04.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.591" endtime="20201112 12:43:04.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.590" endtime="20201112 12:43:04.992"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.001" endtime="20201112 12:43:05.022"></status>
</kw>
<msg timestamp="20201112 12:43:05.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.999" endtime="20201112 12:43:05.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.023" endtime="20201112 12:43:05.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.026" endtime="20201112 12:43:05.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.997" endtime="20201112 12:43:05.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.994" endtime="20201112 12:43:05.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.036" endtime="20201112 12:43:05.322"></status>
</kw>
<msg timestamp="20201112 12:43:05.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020454736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.035" endtime="20201112 12:43:05.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020454736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020558194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.326" endtime="20201112 12:43:05.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.335" endtime="20201112 12:43:05.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.032" endtime="20201112 12:43:05.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.030" endtime="20201112 12:43:05.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.342" level="INFO">${RESULT} = [{'time': 0.020558194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010345799999999725, 'source_diff': 0.00010345799999999725}, {'time': 0.020664194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:05.338" endtime="20201112 12:43:05.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.355" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:05.343" endtime="20201112 12:43:05.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.360" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.359" endtime="20201112 12:43:05.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.362" level="INFO">VALUE: [0.00010345799999999725, 0.00010293000000000108, 0.00010312499999999905, 0.00010345800000000072, 0.00010347200000000029, 0.00010313899999999862, 0.00010354199999999814, 0.0001032359999999996, 0.00010320899999999994, 0.00010319500000000037, 0.0001030139999999985, 0.00010320800000000047, 0.00010294500000000012, 0.00010333300000000059, 0.00010293000000000108, 0.00010344400000000115, 0.00010330499999999798, 0.00010298599999999936, 0.000103416000000002, 0.00010297199999999979, 0.00010343100000000105, 0.00010479199999999939, 0.00010357000000000074, 0.00010325000000000265, 0.00010323699999999908, 0.00010336099999999973, 0.00010477699999999687, 0.00010294400000000065, 0.000103207999999997, 0.0001035559999999977, 0.00010288900000000184, 0.00010362499999999955, 0.00010481899999999905, 0.0001037360000000001, 0.00010362499999999955, 0.00010343099999999758, 0.00010363899999999912, 0.00010352800000000204, 0.00010316699999999776, 0.00010305600000000067, 0.00010299999999999893, 0.0001030550000000012, 0.00010330499999999798, 0.0001030420000000011, 0.00010305499999999773, 0.00010363899999999912, 0.00010320899999999994, 0.00010299999999999893, 0.00010355600000000117, 0.00010470900000000144]</msg>
<status status="PASS" starttime="20201112 12:43:05.361" endtime="20201112 12:43:05.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.356" endtime="20201112 12:43:05.364"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.366" endtime="20201112 12:43:05.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.370" endtime="20201112 12:43:05.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.368" endtime="20201112 12:43:05.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.364" endtime="20201112 12:43:05.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.993" endtime="20201112 12:43:05.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.992" endtime="20201112 12:43:05.391"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.400" endtime="20201112 12:43:05.421"></status>
</kw>
<msg timestamp="20201112 12:43:05.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.398" endtime="20201112 12:43:05.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.422" endtime="20201112 12:43:05.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.425" endtime="20201112 12:43:05.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.395" endtime="20201112 12:43:05.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.393" endtime="20201112 12:43:05.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.436" endtime="20201112 12:43:05.722"></status>
</kw>
<msg timestamp="20201112 12:43:05.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.434" endtime="20201112 12:43:05.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.726" endtime="20201112 12:43:05.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.735" endtime="20201112 12:43:05.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.431" endtime="20201112 12:43:05.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.429" endtime="20201112 12:43:05.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.742" level="INFO">${RESULT} = [{'time': 0.020592556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010461200000000045, 'source_diff': 0.00010461200000000045}, {'time': 0.020700583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:05.738" endtime="20201112 12:43:05.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.755" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:05.743" endtime="20201112 12:43:05.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.760" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.759" endtime="20201112 12:43:05.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.763" level="INFO">VALUE: [0.00010461200000000045, 0.00010408300000000134, 0.00010475000000000068, 0.00010404099999999916, 0.00010583299999999962, 0.00010425000000000018, 0.00010390299999999894, 0.0001041949999999979, 0.00010433300000000159, 0.00010466699999999926, 0.00010455600000000217, 0.00010590300000000094, 0.0001046810000000023, 0.00010444399999999868, 0.00010388899999999937, 0.00010448599999999739, 0.00010425000000000018, 0.00010445800000000172, 0.00010399999999999993, 0.00010412500000000005, 0.00010394500000000112, 0.00010463900000000012, 0.00010583299999999962, 0.00010447200000000129, 0.00010463900000000012, 0.00010475000000000068, 0.00010395799999999775, 0.00010455499999999923, 0.0001045689999999988, 0.00010465300000000316, 0.00010475000000000068, 0.00010581999999999953, 0.00010399999999999993, 0.00010472199999999807, 0.00010408399999999735, 0.00010399999999999993, 0.0001057499999999982, 0.00010390300000000241, 0.0001038879999999999, 0.00010391599999999904, 0.00010427799999999932, 0.00010386100000000023, 0.0001038749999999998, 0.00010581900000000005, 0.00010455600000000217, 0.00010412500000000005, 0.00010447200000000129, 0.00010429200000000236, 0.00010408299999999787, 0.00010402799999999907]</msg>
<status status="PASS" starttime="20201112 12:43:05.761" endtime="20201112 12:43:05.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.756" endtime="20201112 12:43:05.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.773" endtime="20201112 12:43:05.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.777" endtime="20201112 12:43:05.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.775" endtime="20201112 12:43:05.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.771" endtime="20201112 12:43:05.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.392" endtime="20201112 12:43:05.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.391" endtime="20201112 12:43:05.798"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.807" endtime="20201112 12:43:05.829"></status>
</kw>
<msg timestamp="20201112 12:43:05.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.805" endtime="20201112 12:43:05.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.830" endtime="20201112 12:43:05.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.833" endtime="20201112 12:43:05.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.802" endtime="20201112 12:43:05.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.800" endtime="20201112 12:43:05.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.843" endtime="20201112 12:43:06.130"></status>
</kw>
<msg timestamp="20201112 12:43:06.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020547833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0206535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:05.842" endtime="20201112 12:43:06.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020547833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0206535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:06.134" endtime="20201112 12:43:06.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.143" endtime="20201112 12:43:06.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.839" endtime="20201112 12:43:06.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.837" endtime="20201112 12:43:06.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.150" level="INFO">${RESULT} = [{'time': 0.0206535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010566700000000026, 'source_diff': 0.00010566700000000026}, {'time': 0.020762569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:06.146" endtime="20201112 12:43:06.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.163" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:06.151" endtime="20201112 12:43:06.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.168" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.167" endtime="20201112 12:43:06.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.171" level="INFO">VALUE: [0.00010566700000000026, 0.00010544400000000315, 0.00010502800000000007, 0.00010495799999999875, 0.00010544499999999915, 0.00010504199999999964, 0.00010556999999999928, 0.00010498700000000083, 0.00010569399999999993, 0.00010533299999999912, 0.00010679100000000191, 0.00010487499999999733, 0.0001050140000000005, 0.00010554200000000014, 0.00010526400000000075, 0.000105514000000001, 0.0001050559999999992, 0.00010511100000000148, 0.0001050689999999993, 0.00010498700000000083, 0.0001067499999999992, 0.00010495799999999875, 0.00010525000000000118, 0.0001057360000000021, 0.00010494399999999918, 0.00010536100000000173, 0.00010516699999999976, 0.0001053339999999986, 0.00010518099999999933, 0.00010494499999999865, 0.00010515200000000072, 0.00010679199999999792, 0.00010536199999999774, 0.00010513899999999715, 0.00010566700000000026, 0.00010681900000000105, 0.00010500000000000093, 0.00010677800000000182, 0.00010531999999999903, 0.00010522200000000204, 0.00010530599999999946, 0.0001057360000000021, 0.00010506900000000277, 0.00010569399999999993, 0.00010566600000000079, 0.00010495799999999875, 0.00010492999999999961, 0.00010491699999999951, 0.00010487499999999733, 0.0001050140000000005]</msg>
<status status="PASS" starttime="20201112 12:43:06.169" endtime="20201112 12:43:06.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.164" endtime="20201112 12:43:06.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.175" endtime="20201112 12:43:06.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.178" endtime="20201112 12:43:06.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.176" endtime="20201112 12:43:06.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.173" endtime="20201112 12:43:06.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.799" endtime="20201112 12:43:06.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.798" endtime="20201112 12:43:06.199"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.208" endtime="20201112 12:43:06.229"></status>
</kw>
<msg timestamp="20201112 12:43:06.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.207" endtime="20201112 12:43:06.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.230" endtime="20201112 12:43:06.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.233" endtime="20201112 12:43:06.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.204" endtime="20201112 12:43:06.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.202" endtime="20201112 12:43:06.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.244" endtime="20201112 12:43:06.529"></status>
</kw>
<msg timestamp="20201112 12:43:06.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.242" endtime="20201112 12:43:06.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.533" endtime="20201112 12:43:06.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.542" endtime="20201112 12:43:06.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.239" endtime="20201112 12:43:06.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.237" endtime="20201112 12:43:06.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.549" level="INFO">${RESULT} = [{'time': 0.020563028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010657000000000028, 'source_diff': 0.00010657000000000028}, {'time': 0.020676042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:06.545" endtime="20201112 12:43:06.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.564" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:06.550" endtime="20201112 12:43:06.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.568" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.567" endtime="20201112 12:43:06.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.571" level="INFO">VALUE: [0.00010657000000000028, 0.0001077500000000002, 0.00010611099999999901, 0.00010594400000000018, 0.00010588900000000137, 0.00010666599999999832, 0.00010605500000000073, 0.00010642999999999764, 0.00010665299999999822, 0.00010648599999999939, 0.00010663899999999865, 0.00010636099999999926, 0.00010593100000000008, 0.00010637499999999883, 0.00010666699999999779, 0.00010632000000000003, 0.00010611099999999901, 0.00010661099999999951, 0.00010625000000000218, 0.00010643000000000111, 0.00010640299999999797, 0.00010627800000000132, 0.00010591700000000051, 0.00010618100000000033, 0.00010640300000000144, 0.00010588900000000137, 0.00010625000000000218, 0.00010594499999999965, 0.00010587499999999833, 0.00010644500000000015, 0.00010612499999999858, 0.00010611100000000248, 0.00010604200000000064, 0.00010599999999999846, 0.00010659699999999994, 0.00010595899999999922, 0.0001063889999999984, 0.00010783399999999763, 0.00010581999999999953, 0.00010784700000000119, 0.00010666700000000126, 0.00010779099999999944, 0.00010642999999999764, 0.00010591599999999757, 0.00010627799999999785, 0.00010649999999999896, 0.00010590300000000094, 0.00010780600000000196, 0.00010781999999999806, 0.00010659699999999994]</msg>
<status status="PASS" starttime="20201112 12:43:06.569" endtime="20201112 12:43:06.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.564" endtime="20201112 12:43:06.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.575" endtime="20201112 12:43:06.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.578" endtime="20201112 12:43:06.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.577" endtime="20201112 12:43:06.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.573" endtime="20201112 12:43:06.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.200" endtime="20201112 12:43:06.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.200" endtime="20201112 12:43:06.599"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.608" endtime="20201112 12:43:06.630"></status>
</kw>
<msg timestamp="20201112 12:43:06.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.607" endtime="20201112 12:43:06.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.632" endtime="20201112 12:43:06.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.634" endtime="20201112 12:43:06.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.604" endtime="20201112 12:43:06.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.602" endtime="20201112 12:43:06.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.645" endtime="20201112 12:43:06.931"></status>
</kw>
<msg timestamp="20201112 12:43:06.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020705278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.643" endtime="20201112 12:43:06.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020705278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.936" endtime="20201112 12:43:06.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.944" endtime="20201112 12:43:06.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.641" endtime="20201112 12:43:06.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.639" endtime="20201112 12:43:06.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.951" level="INFO">${RESULT} = [{'time': 0.020705278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010713899999999915, 'source_diff': 0.00010713899999999915}, {'time': 0.020816278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:06.948" endtime="20201112 12:43:06.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.965" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:06.952" endtime="20201112 12:43:06.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.969" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.968" endtime="20201112 12:43:06.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.972" level="INFO">VALUE: [0.00010713899999999915, 0.00010716700000000176, 0.0001068750000000028, 0.00010738900000000287, 0.00010697299999999979, 0.00010705500000000173, 0.00010704099999999869, 0.00010755500000000223, 0.00010873599999999817, 0.00010881899999999958, 0.0001072499999999997, 0.00010736100000000026, 0.00010686099999999976, 0.0001073889999999994, 0.00010716700000000176, 0.0001070560000000012, 0.00010881899999999958, 0.00010880500000000001, 0.00010766599999999932, 0.00010712500000000305, 0.00010773600000000064, 0.00010736100000000026, 0.0001075279999999991, 0.00010875000000000121, 0.00010707000000000078, 0.00010748600000000039, 0.00010773600000000064, 0.00010723600000000014, 0.00010701299999999955, 0.00010727799999999885, 0.00010737499999999983, 0.00010694400000000118, 0.00010881900000000305, 0.00010698599999999989, 0.00010768100000000183, 0.00010709700000000044, 0.0001077500000000002, 0.00010759800000000042, 0.00010716700000000176, 0.00010691699999999804, 0.00010744500000000115, 0.00010758300000000137, 0.00010734700000000069, 0.00010694399999999771, 0.00010733300000000112, 0.0001073889999999994, 0.00010756899999999833, 0.00010727800000000232, 0.00010712499999999958, 0.00010691699999999804]</msg>
<status status="PASS" starttime="20201112 12:43:06.971" endtime="20201112 12:43:06.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.966" endtime="20201112 12:43:06.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.976" endtime="20201112 12:43:06.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.979" endtime="20201112 12:43:06.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.978" endtime="20201112 12:43:06.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.974" endtime="20201112 12:43:07.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.600" endtime="20201112 12:43:07.000"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.600" endtime="20201112 12:43:07.000"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.010" endtime="20201112 12:43:07.031"></status>
</kw>
<msg timestamp="20201112 12:43:07.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.008" endtime="20201112 12:43:07.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.032" endtime="20201112 12:43:07.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.035" endtime="20201112 12:43:07.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.005" endtime="20201112 12:43:07.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.003" endtime="20201112 12:43:07.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.045" endtime="20201112 12:43:07.331"></status>
</kw>
<msg timestamp="20201112 12:43:07.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020671486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020779514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.044" endtime="20201112 12:43:07.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020671486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020779514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.336" endtime="20201112 12:43:07.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.344" endtime="20201112 12:43:07.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.041" endtime="20201112 12:43:07.346"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.039" endtime="20201112 12:43:07.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.351" level="INFO">${RESULT} = [{'time': 0.020779514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001080279999999996, 'source_diff': 0.0001080279999999996}, {'time': 0.020890514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.348" endtime="20201112 12:43:07.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.365" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:07.352" endtime="20201112 12:43:07.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.370" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.369" endtime="20201112 12:43:07.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.372" level="INFO">VALUE: [0.0001080279999999996, 0.00010848599999999792, 0.00010982000000000006, 0.00010868099999999936, 0.00010812500000000058, 0.00010812499999999711, 0.00010794400000000218, 0.00010979100000000144, 0.00010847199999999835, 0.00010811100000000101, 0.00010787500000000033, 0.00010799999999999699, 0.00010837500000000083, 0.00010822200000000157, 0.00010850000000000096, 0.00010837500000000083, 0.00010983299999999668, 0.0001097630000000023, 0.00010979099999999797, 0.00010829099999999994, 0.00010856899999999933, 0.00010848600000000139, 0.00010856899999999933, 0.00010798600000000089, 0.00010844499999999868, 0.00010838899999999693, 0.00010809700000000144, 0.00010787499999999686, 0.00010859799999999795, 0.00010820799999999853, 0.00010836199999999727, 0.00010862500000000108, 0.00010977800000000135, 0.00010794499999999818, 0.00010801400000000003, 0.00010848600000000139, 0.00010812500000000058, 0.00010849999999999749, 0.00010830499999999951, 0.00010851400000000053, 0.00010855599999999924, 0.00010830599999999899, 0.00010826299999999733, 0.00010792999999999914, 0.00010874999999999774, 0.00010872200000000207, 0.00010980500000000101, 0.00010863899999999718, 0.00010829200000000289, 0.00010827799999999985]</msg>
<status status="PASS" starttime="20201112 12:43:07.371" endtime="20201112 12:43:07.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.366" endtime="20201112 12:43:07.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.376" endtime="20201112 12:43:07.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.380" endtime="20201112 12:43:07.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.378" endtime="20201112 12:43:07.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.374" endtime="20201112 12:43:07.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.001" endtime="20201112 12:43:07.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.001" endtime="20201112 12:43:07.401"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.410" endtime="20201112 12:43:07.431"></status>
</kw>
<msg timestamp="20201112 12:43:07.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.408" endtime="20201112 12:43:07.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.432" endtime="20201112 12:43:07.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.435" endtime="20201112 12:43:07.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.405" endtime="20201112 12:43:07.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.403" endtime="20201112 12:43:07.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.446" endtime="20201112 12:43:07.733"></status>
</kw>
<msg timestamp="20201112 12:43:07.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.444" endtime="20201112 12:43:07.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020540694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.737" endtime="20201112 12:43:07.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.746" endtime="20201112 12:43:07.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.441" endtime="20201112 12:43:07.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.439" endtime="20201112 12:43:07.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.753" level="INFO">${RESULT} = [{'time': 0.020540694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011079100000000244, 'source_diff': 0.00011079100000000244}, {'time': 0.020654694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:07.749" endtime="20201112 12:43:07.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:07.754" endtime="20201112 12:43:07.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.771" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.770" endtime="20201112 12:43:07.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.773" level="INFO">VALUE: [0.00011079100000000244, 0.0001097219999999996, 0.00010924999999999824, 0.00010936100000000226, 0.00010911099999999854, 0.00010923600000000214, 0.00010905599999999974, 0.00010951399999999806, 0.00010895900000000222, 0.00010931999999999956, 0.00010941700000000054, 0.00011079200000000192, 0.00010955500000000076, 0.00010954100000000119, 0.00010943000000000064, 0.00010955500000000076, 0.00010886099999999829, 0.00010920799999999953, 0.00010913900000000115, 0.00010973599999999917, 0.00010961099999999904, 0.00010886099999999829, 0.00010951400000000153, 0.00010944400000000021, 0.00010911099999999854, 0.00010912500000000158, 0.00010901399999999756, 0.00010923600000000214, 0.00010956900000000033, 0.00010923599999999867, 0.00010890300000000047, 0.00010937500000000183, 0.00010950000000000196, 0.00010904200000000017, 0.00011079199999999845, 0.00010898599999999842, 0.00010968000000000089, 0.00010943000000000064, 0.00011079100000000244, 0.00010956899999999686, 0.00010956900000000033, 0.00010898600000000189, 0.00010899999999999799, 0.00010894499999999918, 0.00010936099999999879, 0.0001090699999999993, 0.00010931999999999956, 0.00010943100000000011, 0.00010919399999999996, 0.00011076399999999931]</msg>
<status status="PASS" starttime="20201112 12:43:07.772" endtime="20201112 12:43:07.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.767" endtime="20201112 12:43:07.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.777" endtime="20201112 12:43:07.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.781" endtime="20201112 12:43:07.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.779" endtime="20201112 12:43:07.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.776" endtime="20201112 12:43:07.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.401" endtime="20201112 12:43:07.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.401" endtime="20201112 12:43:07.802"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.811" endtime="20201112 12:43:07.832"></status>
</kw>
<msg timestamp="20201112 12:43:07.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.810" endtime="20201112 12:43:07.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.834" endtime="20201112 12:43:07.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.836" endtime="20201112 12:43:07.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.807" endtime="20201112 12:43:07.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.805" endtime="20201112 12:43:07.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.847" endtime="20201112 12:43:08.134"></status>
</kw>
<msg timestamp="20201112 12:43:08.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.845" endtime="20201112 12:43:08.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020429083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020539139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.139" endtime="20201112 12:43:08.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.147" endtime="20201112 12:43:08.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.843" endtime="20201112 12:43:08.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.841" endtime="20201112 12:43:08.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.154" level="INFO">${RESULT} = [{'time': 0.020539139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011005600000000074, 'source_diff': 0.00011005600000000074}, {'time': 0.020653083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:08.150" endtime="20201112 12:43:08.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.169" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.155" endtime="20201112 12:43:08.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.173" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.172" endtime="20201112 12:43:08.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.176" level="INFO">VALUE: [0.00011005600000000074, 0.00011054099999999872, 0.00011004100000000169, 0.00011026400000000228, 0.00010987499999999886, 0.00011179199999999945, 0.00011016700000000129, 0.00011073600000000017, 0.0001102220000000001, 0.0001105700000000008, 0.00010999999999999899, 0.0001105700000000008, 0.00011055599999999777, 0.00010987499999999886, 0.00011074999999999974, 0.00011041600000000207, 0.00011172199999999813, 0.00011019400000000096, 0.0001102220000000001, 0.00011026400000000228, 0.0001100700000000003, 0.00011043100000000111, 0.0001098890000000019, 0.00011068100000000136, 0.00010998700000000236, 0.00011058299999999743, 0.00011018000000000139, 0.00011174999999999727, 0.00011073600000000017, 0.00011074999999999974, 0.0001100280000000016, 0.00010997299999999932, 0.00010993000000000114, 0.00011009699999999997, 0.0001100700000000003, 0.00011011099999999954, 0.00011045800000000078, 0.00011061100000000004, 0.00011181899999999911, 0.00011056900000000133, 0.00011179199999999945, 0.00010988899999999843, 0.00011012499999999911, 0.00011001399999999856, 0.00011049999999999949, 0.00011033299999999718, 0.00010999999999999899, 0.00011177799999999988, 0.00011045799999999731, 0.00011004100000000169]</msg>
<status status="PASS" starttime="20201112 12:43:08.174" endtime="20201112 12:43:08.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.170" endtime="20201112 12:43:08.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.180" endtime="20201112 12:43:08.181"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.183" endtime="20201112 12:43:08.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.182" endtime="20201112 12:43:08.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.178" endtime="20201112 12:43:08.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.803" endtime="20201112 12:43:08.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.802" endtime="20201112 12:43:08.204"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.213" endtime="20201112 12:43:08.235"></status>
</kw>
<msg timestamp="20201112 12:43:08.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.212" endtime="20201112 12:43:08.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.237" endtime="20201112 12:43:08.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.240" endtime="20201112 12:43:08.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.209" endtime="20201112 12:43:08.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.207" endtime="20201112 12:43:08.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.250" endtime="20201112 12:43:08.536"></status>
</kw>
<msg timestamp="20201112 12:43:08.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020502125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020613736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.248" endtime="20201112 12:43:08.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020502125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020613736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.540" endtime="20201112 12:43:08.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.549" endtime="20201112 12:43:08.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.246" endtime="20201112 12:43:08.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.244" endtime="20201112 12:43:08.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.556" level="INFO">${RESULT} = [{'time': 0.020613736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011161100000000104, 'source_diff': 0.00011161100000000104}, {'time': 0.020727681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:08.552" endtime="20201112 12:43:08.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.569" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.557" endtime="20201112 12:43:08.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.574" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.573" endtime="20201112 12:43:08.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.577" level="INFO">VALUE: [0.00011161100000000104, 0.00011148700000000039, 0.00011125000000000024, 0.0001110549999999988, 0.00011112500000000011, 0.00011175000000000074, 0.00011161099999999757, 0.00011279200000000045, 0.00011141699999999907, 0.00011118099999999839, 0.00011163800000000071, 0.00011131999999999809, 0.00011118099999999839, 0.00011148600000000092, 0.00011115199999999978, 0.00011167999999999942, 0.00011163899999999671, 0.00011098600000000042, 0.00011120799999999806, 0.00011270800000000303, 0.0001115419999999992, 0.0001112359999999972, 0.00011163900000000018, 0.00011134700000000122, 0.00011125000000000024, 0.00011169399999999899, 0.00011125000000000024, 0.00011130499999999904, 0.00011136100000000079, 0.00011163900000000018, 0.00011118099999999839, 0.00011168100000000236, 0.00011144500000000168, 0.00011155599999999877, 0.00011274999999999827, 0.00011099999999999999, 0.00011130599999999852, 0.00011151400000000006, 0.00011084700000000072, 0.00011115299999999925, 0.0001127770000000014, 0.00011145800000000178, 0.00011123600000000067, 0.00011274999999999827, 0.00011159800000000095, 0.00011105600000000174, 0.00011279200000000045, 0.00011140200000000003, 0.00011154099999999972, 0.00011277800000000088]</msg>
<status status="PASS" starttime="20201112 12:43:08.575" endtime="20201112 12:43:08.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.570" endtime="20201112 12:43:08.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.580" endtime="20201112 12:43:08.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.584" endtime="20201112 12:43:08.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.582" endtime="20201112 12:43:08.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.579" endtime="20201112 12:43:08.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.205" endtime="20201112 12:43:08.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.205" endtime="20201112 12:43:08.605"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.614" endtime="20201112 12:43:08.636"></status>
</kw>
<msg timestamp="20201112 12:43:08.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.612" endtime="20201112 12:43:08.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.637" endtime="20201112 12:43:08.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.640" endtime="20201112 12:43:08.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.610" endtime="20201112 12:43:08.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.607" endtime="20201112 12:43:08.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.650" endtime="20201112 12:43:08.938"></status>
</kw>
<msg timestamp="20201112 12:43:08.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020369194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.649" endtime="20201112 12:43:08.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020369194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.942" endtime="20201112 12:43:08.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.950" endtime="20201112 12:43:08.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.646" endtime="20201112 12:43:08.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.644" endtime="20201112 12:43:08.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.957" level="INFO">${RESULT} = [{'time': 0.020481153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011195899999999828, 'source_diff': 0.00011195899999999828}, {'time': 0.020597153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:08.954" endtime="20201112 12:43:08.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.971" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.958" endtime="20201112 12:43:08.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.976" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.975" endtime="20201112 12:43:08.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.978" level="INFO">VALUE: [0.00011195899999999828, 0.00011274999999999827, 0.00011247200000000235, 0.00011261100000000204, 0.0001120419999999997, 0.0001123749999999979, 0.00011262500000000161, 0.00011247200000000235, 0.00011237500000000136, 0.00011262500000000161, 0.00011237500000000136, 0.00011234699999999875, 0.00011202800000000013, 0.00011225000000000124, 0.00011230599999999952, 0.00011250000000000149, 0.00011195799999999881, 0.00011212499999999764, 0.00011212500000000111, 0.00011248599999999845, 0.00011238899999999746, 0.00011238900000000093, 0.00011244399999999974, 0.00011223600000000167, 0.00011199999999999752, 0.00011201399999999709, 0.00011216699999999982, 0.00011212500000000111, 0.00011219399999999949, 0.00011194400000000271, 0.00011237500000000136, 0.00011274999999999827, 0.000112596999999999, 0.00011380600000000102, 0.00011230500000000004, 0.00011206999999999884, 0.00011384799999999973, 0.00011212500000000111, 0.00011226300000000133, 0.0001120419999999997, 0.00011244399999999974, 0.00011230500000000004, 0.00011211100000000154, 0.00011237500000000136, 0.0001125550000000003, 0.00011238900000000093, 0.00011186100000000129, 0.00011212500000000111, 0.00011188900000000043, 0.00011219499999999896]</msg>
<status status="PASS" starttime="20201112 12:43:08.977" endtime="20201112 12:43:08.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.972" endtime="20201112 12:43:08.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.982" endtime="20201112 12:43:08.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.986" endtime="20201112 12:43:09.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.984" endtime="20201112 12:43:09.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.980" endtime="20201112 12:43:09.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.606" endtime="20201112 12:43:09.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.605" endtime="20201112 12:43:09.007"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.016" endtime="20201112 12:43:09.037"></status>
</kw>
<msg timestamp="20201112 12:43:09.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.014" endtime="20201112 12:43:09.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.039" endtime="20201112 12:43:09.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.041" endtime="20201112 12:43:09.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.012" endtime="20201112 12:43:09.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.009" endtime="20201112 12:43:09.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.052" endtime="20201112 12:43:09.338"></status>
</kw>
<msg timestamp="20201112 12:43:09.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020498208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.050" endtime="20201112 12:43:09.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020498208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020611431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.342" endtime="20201112 12:43:09.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.351" endtime="20201112 12:43:09.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.047" endtime="20201112 12:43:09.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.046" endtime="20201112 12:43:09.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.357" level="INFO">${RESULT} = [{'time': 0.020611431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001132229999999991, 'source_diff': 0.0001132229999999991}, {'time': 0.020728431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:09.354" endtime="20201112 12:43:09.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.371" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:09.359" endtime="20201112 12:43:09.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.376" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.375" endtime="20201112 12:43:09.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.379" level="INFO">VALUE: [0.0001132229999999991, 0.00011305600000000027, 0.00011483299999999821, 0.00011324999999999877, 0.00011366700000000132, 0.00011354099999999825, 0.00011358300000000043, 0.00011480599999999855, 0.00011363899999999871, 0.00011333399999999966, 0.00011312499999999864, 0.00011284799999999873, 0.00011319400000000049, 0.00011330499999999757, 0.0001135550000000013, 0.00011481899999999864, 0.00011318000000000092, 0.0001128749999999984, 0.00011311099999999907, 0.00011351400000000206, 0.00011479199999999898, 0.00011352799999999816, 0.00011281900000000011, 0.00011344400000000074, 0.0001133749999999989, 0.00011305499999999732, 0.00011355499999999782, 0.00011349999999999902, 0.00011475000000000027, 0.00011286099999999882, 0.00011362499999999914, 0.00011319499999999996, 0.00011330600000000052, 0.00011313899999999821, 0.00011344399999999727, 0.00011344400000000074, 0.0001132359999999992, 0.00011298600000000242, 0.00011312499999999864, 0.00011319400000000049, 0.00011349999999999902, 0.00011305600000000027, 0.00011343100000000064, 0.00011318100000000039, 0.0001130550000000008, 0.00011330600000000052, 0.00011343100000000064, 0.00011350000000000249, 0.00011313900000000168, 0.00011355499999999782]</msg>
<status status="PASS" starttime="20201112 12:43:09.377" endtime="20201112 12:43:09.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.372" endtime="20201112 12:43:09.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.382" endtime="20201112 12:43:09.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.386" endtime="20201112 12:43:09.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.384" endtime="20201112 12:43:09.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.381" endtime="20201112 12:43:09.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.008" endtime="20201112 12:43:09.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.007" endtime="20201112 12:43:09.407"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.416" endtime="20201112 12:43:09.437"></status>
</kw>
<msg timestamp="20201112 12:43:09.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.414" endtime="20201112 12:43:09.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.439" endtime="20201112 12:43:09.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.442" endtime="20201112 12:43:09.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.412" endtime="20201112 12:43:09.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.409" endtime="20201112 12:43:09.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.452" endtime="20201112 12:43:09.739"></status>
</kw>
<msg timestamp="20201112 12:43:09.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020598681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.451" endtime="20201112 12:43:09.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020598681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.743" endtime="20201112 12:43:09.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.752" endtime="20201112 12:43:09.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.448" endtime="20201112 12:43:09.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.446" endtime="20201112 12:43:09.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.759" level="INFO">${RESULT} = [{'time': 0.020598681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011577800000000041, 'source_diff': 0.00011577800000000041}, {'time': 0.020718694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.756" endtime="20201112 12:43:09.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.774" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:09.760" endtime="20201112 12:43:09.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.779" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.778" endtime="20201112 12:43:09.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.781" level="INFO">VALUE: [0.00011577800000000041, 0.00011581899999999964, 0.00011409800000000345, 0.0001143619999999998, 0.00011417999999999845, 0.00011444399999999827, 0.0001139299999999982, 0.00011431900000000161, 0.00011416700000000182, 0.00011418100000000139, 0.00011413899999999921, 0.00011461100000000057, 0.00011573599999999823, 0.00011418000000000192, 0.00011394500000000071, 0.00011419399999999802, 0.00011462500000000014, 0.00011450000000000002, 0.00011399999999999952, 0.00011413899999999921, 0.00011577800000000041, 0.00011399999999999952, 0.00011475000000000027, 0.00011470900000000103, 0.00011476300000000036, 0.00011468099999999842, 0.00011575000000000127, 0.00011451399999999959, 0.00011456900000000186, 0.00011469399999999852, 0.00011412499999999964, 0.00011580500000000007, 0.00011408400000000041, 0.00011448600000000045, 0.00011458399999999744, 0.00011576400000000084, 0.00011462500000000014, 0.00011461100000000057, 0.00011452799999999916, 0.00011436100000000032, 0.00011419400000000149, 0.00011415299999999878, 0.00011583300000000268, 0.00011426399999999934, 0.0001142360000000002, 0.0001145559999999983, 0.00011438899999999946, 0.00011426399999999934, 0.00011399999999999952, 0.00011391700000000157]</msg>
<status status="PASS" starttime="20201112 12:43:09.780" endtime="20201112 12:43:09.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.775" endtime="20201112 12:43:09.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.785" endtime="20201112 12:43:09.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.789" endtime="20201112 12:43:09.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.787" endtime="20201112 12:43:09.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.783" endtime="20201112 12:43:09.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.408" endtime="20201112 12:43:09.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.407" endtime="20201112 12:43:09.810"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.819" endtime="20201112 12:43:09.840"></status>
</kw>
<msg timestamp="20201112 12:43:09.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.817" endtime="20201112 12:43:09.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.842" endtime="20201112 12:43:09.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.844" endtime="20201112 12:43:09.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.815" endtime="20201112 12:43:09.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.812" endtime="20201112 12:43:09.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.855" endtime="20201112 12:43:10.141"></status>
</kw>
<msg timestamp="20201112 12:43:10.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.853" endtime="20201112 12:43:10.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020441583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.145" endtime="20201112 12:43:10.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.154" endtime="20201112 12:43:10.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.850" endtime="20201112 12:43:10.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.849" endtime="20201112 12:43:10.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.161" level="INFO">${RESULT} = [{'time': 0.020557236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011565300000000028, 'source_diff': 0.00011565300000000028}, {'time': 0.02067525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:10.157" endtime="20201112 12:43:10.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.174" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:10.162" endtime="20201112 12:43:10.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.179" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.178" endtime="20201112 12:43:10.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.182" level="INFO">VALUE: [0.00011565300000000028, 0.00011502799999999966, 0.00011544499999999874, 0.00011548599999999798, 0.0001155559999999993, 0.00011493100000000214, 0.0001148750000000004, 0.00011525000000000077, 0.00011543099999999917, 0.00011526400000000034, 0.0001157360000000017, 0.00011525000000000077, 0.00011495799999999834, 0.00011534700000000175, 0.00011543099999999917, 0.00011568099999999942, 0.00011494499999999824, 0.00011519499999999849, 0.00011523599999999773, 0.00011520800000000206, 0.0001154299999999997, 0.00011517999999999945, 0.00011511100000000107, 0.00011572199999999866, 0.00011519400000000249, 0.00011679200000000098, 0.00011563900000000071, 0.00011495900000000128, 0.0001154169999999996, 0.00011520800000000206, 0.00011512499999999717, 0.00011526400000000034, 0.00011486099999999735, 0.00011544400000000274, 0.00011527799999999991, 0.00011502799999999966, 0.00011551399999999712, 0.00011494499999999824, 0.00011550000000000102, 0.00011516700000000282, 0.00011500000000000052, 0.00011495800000000181, 0.00011483400000000116, 0.00011541600000000013, 0.00011488899999999996, 0.00011501400000000009, 0.0001167499999999988, 0.0001150970000000015, 0.00011538900000000046, 0.00011494500000000171]</msg>
<status status="PASS" starttime="20201112 12:43:10.180" endtime="20201112 12:43:10.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.175" endtime="20201112 12:43:10.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.185" endtime="20201112 12:43:10.187"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.189" endtime="20201112 12:43:10.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.187" endtime="20201112 12:43:10.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.184" endtime="20201112 12:43:10.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.811" endtime="20201112 12:43:10.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.810" endtime="20201112 12:43:10.210"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.219" endtime="20201112 12:43:10.240"></status>
</kw>
<msg timestamp="20201112 12:43:10.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.217" endtime="20201112 12:43:10.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.242" endtime="20201112 12:43:10.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.245" endtime="20201112 12:43:10.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.215" endtime="20201112 12:43:10.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.213" endtime="20201112 12:43:10.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.255" endtime="20201112 12:43:10.541"></status>
</kw>
<msg timestamp="20201112 12:43:10.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020606528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.253" endtime="20201112 12:43:10.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020606528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.546" endtime="20201112 12:43:10.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.554" endtime="20201112 12:43:10.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.251" endtime="20201112 12:43:10.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.249" endtime="20201112 12:43:10.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.561" level="INFO">${RESULT} = [{'time': 0.020606528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011597199999999891, 'source_diff': 0.00011597199999999891}, {'time': 0.020725514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:10.558" endtime="20201112 12:43:10.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.575" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:10.562" endtime="20201112 12:43:10.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.579" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.578" endtime="20201112 12:43:10.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.582" level="INFO">VALUE: [0.00011597199999999891, 0.00011658299999999996, 0.00011652800000000116, 0.00011599999999999805, 0.0001162499999999983, 0.00011633299999999971, 0.00011588900000000096, 0.0001167499999999988, 0.00011668000000000095, 0.00011615299999999731, 0.0001177499999999998, 0.0001159170000000001, 0.00011637499999999842, 0.00011612499999999817, 0.00011620899999999906, 0.0001162499999999983, 0.00011601400000000109, 0.0001162360000000022, 0.00011619400000000002, 0.00011598600000000195, 0.00011772200000000066, 0.00011780599999999808, 0.00011784800000000026, 0.0001163750000000019, 0.00011619499999999949, 0.0001162360000000022, 0.00011598600000000195, 0.00011611199999999808, 0.00011625000000000177, 0.00011649999999999855, 0.00011644400000000027, 0.0001178049999999986, 0.00011626400000000134, 0.00011649999999999855, 0.00011595899999999881, 0.00011593099999999967, 0.00011651399999999812, 0.0001165560000000003, 0.0001177499999999998, 0.00011630500000000057, 0.0001159300000000002, 0.00011662499999999867, 0.00011604100000000075, 0.00011649999999999855, 0.00011612500000000164, 0.00011648599999999898, 0.00011612499999999817, 0.00011631999999999962, 0.0001165560000000003, 0.00011626399999999787]</msg>
<status status="PASS" starttime="20201112 12:43:10.581" endtime="20201112 12:43:10.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.575" endtime="20201112 12:43:10.583"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.586" endtime="20201112 12:43:10.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.589" endtime="20201112 12:43:10.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.588" endtime="20201112 12:43:10.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.584" endtime="20201112 12:43:10.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.211" endtime="20201112 12:43:10.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.210" endtime="20201112 12:43:10.610"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.619" endtime="20201112 12:43:10.641"></status>
</kw>
<msg timestamp="20201112 12:43:10.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.618" endtime="20201112 12:43:10.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.642" endtime="20201112 12:43:10.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.645" endtime="20201112 12:43:10.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.615" endtime="20201112 12:43:10.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.613" endtime="20201112 12:43:10.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.655" endtime="20201112 12:43:10.942"></status>
</kw>
<msg timestamp="20201112 12:43:10.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.654" endtime="20201112 12:43:10.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020490625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.947" endtime="20201112 12:43:10.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.955" endtime="20201112 12:43:10.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.651" endtime="20201112 12:43:10.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.649" endtime="20201112 12:43:10.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.962" level="INFO">${RESULT} = [{'time': 0.020490625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011699999999999905, 'source_diff': 0.00011699999999999905}, {'time': 0.020610653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:10.959" endtime="20201112 12:43:10.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.976" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:10.963" endtime="20201112 12:43:10.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.981" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.979" endtime="20201112 12:43:10.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.983" level="INFO">VALUE: [0.00011699999999999905, 0.00011713899999999874, 0.00011730600000000105, 0.00011736099999999985, 0.00011883299999999875, 0.0001177499999999998, 0.00011687499999999892, 0.00011695800000000034, 0.00011702800000000166, 0.00011762499999999967, 0.0001169170000000011, 0.00011718099999999745, 0.00011732000000000062, 0.00011773600000000023, 0.00011749999999999955, 0.00011693100000000067, 0.0001174300000000017, 0.00011694400000000077, 0.0001177499999999998, 0.00011717999999999798, 0.00011740300000000203, 0.00011731900000000114, 0.00011686099999999935, 0.00011768099999999795, 0.00011704199999999776, 0.00011702699999999872, 0.000117388999999999, 0.00011686099999999935, 0.00011704199999999776, 0.00011719400000000102, 0.00011708300000000046, 0.00011705499999999786, 0.00011736099999999985, 0.00011740299999999856, 0.00011738900000000246, 0.00011719400000000102, 0.00011733400000000019, 0.00011697299999999938, 0.00011693100000000067, 0.00011772300000000013, 0.000117388999999999, 0.00011754099999999879, 0.00011744400000000127, 0.00011769399999999805, 0.00011729199999999801, 0.00011712499999999917, 0.000117695000000001, 0.0001169170000000011, 0.00011701399999999862, 0.00011749999999999955]</msg>
<status status="PASS" starttime="20201112 12:43:10.982" endtime="20201112 12:43:10.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.977" endtime="20201112 12:43:10.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.992" endtime="20201112 12:43:10.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.995" endtime="20201112 12:43:11.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.994" endtime="20201112 12:43:11.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.990" endtime="20201112 12:43:11.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.611" endtime="20201112 12:43:11.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.611" endtime="20201112 12:43:11.016"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.026" endtime="20201112 12:43:11.047"></status>
</kw>
<msg timestamp="20201112 12:43:11.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.024" endtime="20201112 12:43:11.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.049" endtime="20201112 12:43:11.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.051" endtime="20201112 12:43:11.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.021" endtime="20201112 12:43:11.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.019" endtime="20201112 12:43:11.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.062" endtime="20201112 12:43:11.348"></status>
</kw>
<msg timestamp="20201112 12:43:11.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020732458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.060" endtime="20201112 12:43:11.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020613958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020732458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.352" endtime="20201112 12:43:11.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.360" endtime="20201112 12:43:11.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.057" endtime="20201112 12:43:11.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.056" endtime="20201112 12:43:11.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.367" level="INFO">${RESULT} = [{'time': 0.020732458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011849999999999708, 'source_diff': 0.00011849999999999708}, {'time': 0.020855458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:11.364" endtime="20201112 12:43:11.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:11.368" endtime="20201112 12:43:11.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.387" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.386" endtime="20201112 12:43:11.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.389" level="INFO">VALUE: [0.00011849999999999708, 0.0001198050000000006, 0.00011858399999999797, 0.00011809699999999757, 0.00011836100000000085, 0.00011841699999999913, 0.00011979200000000051, 0.00011863900000000024, 0.0001179170000000021, 0.00011854199999999926, 0.0001182500000000003, 0.00011861099999999763, 0.00011866599999999991, 0.00011816699999999888, 0.00011812500000000017, 0.00011983299999999975, 0.00011981999999999965, 0.00011798599999999701, 0.00011812500000000017, 0.00011865200000000034, 0.00011981900000000018, 0.00011856899999999893, 0.00011804099999999929, 0.00011869399999999905, 0.00011833399999999772, 0.00011829199999999901, 0.00011834800000000076, 0.00011852799999999969, 0.00011786100000000035, 0.00011861200000000058, 0.00011851300000000065, 0.00011849999999999708, 0.00011795800000000134, 0.00011866599999999991, 0.00011979099999999757, 0.00011798600000000048, 0.0001183049999999991, 0.00011869400000000252, 0.00011983399999999922, 0.00011843100000000217, 0.00011863900000000024, 0.00011836199999999686, 0.00011830600000000205, 0.00011820800000000159, 0.00011786100000000035, 0.00011977800000000094, 0.00011798600000000048, 0.00011872200000000166, 0.0001186110000000011, 0.00011800000000000005]</msg>
<status status="PASS" starttime="20201112 12:43:11.388" endtime="20201112 12:43:11.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.383" endtime="20201112 12:43:11.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.393" endtime="20201112 12:43:11.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.397" endtime="20201112 12:43:11.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.395" endtime="20201112 12:43:11.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.391" endtime="20201112 12:43:11.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.017" endtime="20201112 12:43:11.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.017" endtime="20201112 12:43:11.418"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.427" endtime="20201112 12:43:11.449"></status>
</kw>
<msg timestamp="20201112 12:43:11.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.425" endtime="20201112 12:43:11.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.450" endtime="20201112 12:43:11.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.453" endtime="20201112 12:43:11.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.423" endtime="20201112 12:43:11.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.420" endtime="20201112 12:43:11.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.463" endtime="20201112 12:43:11.750"></status>
</kw>
<msg timestamp="20201112 12:43:11.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.462" endtime="20201112 12:43:11.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.754" endtime="20201112 12:43:11.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.763" endtime="20201112 12:43:11.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.459" endtime="20201112 12:43:11.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.457" endtime="20201112 12:43:11.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.770" level="INFO">${RESULT} = [{'time': 0.020661431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011947300000000188, 'source_diff': 0.00011947300000000188}, {'time': 0.020786431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:11.766" endtime="20201112 12:43:11.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.784" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:11.771" endtime="20201112 12:43:11.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.789" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.788" endtime="20201112 12:43:11.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.791" level="INFO">VALUE: [0.00011947300000000188, 0.00011898700000000095, 0.00012077800000000194, 0.00011887499999999745, 0.00011958300000000296, 0.00011892999999999973, 0.00011898599999999801, 0.00012080600000000108, 0.00011962500000000167, 0.0001196249999999982, 0.00011920799999999912, 0.00011906899999999943, 0.00011886199999999736, 0.00011913899999999727, 0.00011931899999999968, 0.000119082999999999, 0.00011886100000000135, 0.00011898600000000148, 0.00011920900000000206, 0.00011900000000000105, 0.00011945799999999937, 0.00011970799999999962, 0.00011972299999999866, 0.0001194309999999997, 0.000119389000000001, 0.00011955500000000036, 0.00011920799999999912, 0.00011898600000000148, 0.00011956899999999993, 0.00011929200000000001, 0.00012080600000000108, 0.00011965299999999734, 0.00011905599999999933, 0.00011904100000000029, 0.00011973699999999823, 0.00012073599999999976, 0.00011915300000000031, 0.00011952800000000069, 0.00011943000000000023, 0.00012083300000000075, 0.00011951400000000112, 0.00012073599999999976, 0.0001197089999999991, 0.00011969499999999952, 0.00011945800000000284, 0.00011954200000000026, 0.00011969400000000005, 0.00011922199999999869, 0.00011913900000000074, 0.0001208050000000016]</msg>
<status status="PASS" starttime="20201112 12:43:11.790" endtime="20201112 12:43:11.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.785" endtime="20201112 12:43:11.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.795" endtime="20201112 12:43:11.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.799" endtime="20201112 12:43:11.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.797" endtime="20201112 12:43:11.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.793" endtime="20201112 12:43:11.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.419" endtime="20201112 12:43:11.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.418" endtime="20201112 12:43:11.820"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.829" endtime="20201112 12:43:11.849"></status>
</kw>
<msg timestamp="20201112 12:43:11.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.827" endtime="20201112 12:43:11.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.851" endtime="20201112 12:43:11.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.853" endtime="20201112 12:43:11.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.824" endtime="20201112 12:43:11.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.822" endtime="20201112 12:43:11.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.865" endtime="20201112 12:43:12.151"></status>
</kw>
<msg timestamp="20201112 12:43:12.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.864" endtime="20201112 12:43:12.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020731208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.155" endtime="20201112 12:43:12.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.164" endtime="20201112 12:43:12.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.861" endtime="20201112 12:43:12.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.858" endtime="20201112 12:43:12.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.171" level="INFO">${RESULT} = [{'time': 0.020731208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001205830000000005, 'source_diff': 0.0001205830000000005}, {'time': 0.020856208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:12.167" endtime="20201112 12:43:12.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.184" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:12.172" endtime="20201112 12:43:12.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.189" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.188" endtime="20201112 12:43:12.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.191" level="INFO">VALUE: [0.0001205830000000005, 0.00012048599999999951, 0.00012006900000000043, 0.00012076400000000237, 0.00012011099999999914, 0.00012177799999999947, 0.00012023599999999926, 0.00012008399999999947, 0.0001200699999999999, 0.00012019400000000055, 0.00012005500000000086, 0.0001199440000000003, 0.0001201249999999987, 0.0001217639999999999, 0.00011999999999999858, 0.00012059799999999954, 0.0001205700000000004, 0.0001200699999999999, 0.0001205700000000004, 0.00011995899999999934, 0.00011998599999999901, 0.00012187500000000046, 0.00012011099999999914, 0.000120389000000002, 0.00012009699999999957, 0.0001205830000000005, 0.00012037500000000242, 0.0001217639999999999, 0.00011999999999999858, 0.00012068100000000095, 0.0001205700000000004, 0.00012011099999999914, 0.00011988799999999855, 0.00012019399999999708, 0.0001199440000000003, 0.00012019400000000055, 0.00011983299999999975, 0.00012002800000000119, 0.00012011099999999914, 0.00012180599999999861, 0.00012044500000000027, 0.00012034800000000276, 0.00012023699999999873, 0.00011987499999999846, 0.00012001300000000215, 0.0001201249999999987, 0.000120083, 0.00012049999999999908, 0.00011986099999999889, 0.00012027800000000144]</msg>
<status status="PASS" starttime="20201112 12:43:12.190" endtime="20201112 12:43:12.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.185" endtime="20201112 12:43:12.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.195" endtime="20201112 12:43:12.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.199" endtime="20201112 12:43:12.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.197" endtime="20201112 12:43:12.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.194" endtime="20201112 12:43:12.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.821" endtime="20201112 12:43:12.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.820" endtime="20201112 12:43:12.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.164" endtime="20201112 12:43:12.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.226" endtime="20201112 12:43:12.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.225" endtime="20201112 12:43:12.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.222" endtime="20201112 12:43:12.247"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:32.090" endtime="20201112 12:43:12.247" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:50.602" endtime="20201112 12:43:12.252"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.310" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:43:12.318" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:43:13.330" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:43:12.308" endtime="20201112 12:43:13.331"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.334" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:43:13.332" endtime="20201112 12:43:13.334"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.307" endtime="20201112 12:43:13.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.337" endtime="20201112 12:43:13.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.335" endtime="20201112 12:43:13.526"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.555" endtime="20201112 12:43:13.584"></status>
</kw>
<msg timestamp="20201112 12:43:13.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.552" endtime="20201112 12:43:13.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.591" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.588" endtime="20201112 12:43:13.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.598" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:13.593" endtime="20201112 12:43:13.599"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:13.545" endtime="20201112 12:43:13.600"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:13.539" endtime="20201112 12:43:13.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.537" endtime="20201112 12:43:13.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:13.613" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:13.611" endtime="20201112 12:43:13.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.604" endtime="20201112 12:43:13.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.535" endtime="20201112 12:43:13.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.533" endtime="20201112 12:43:13.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.616" endtime="20201112 12:43:13.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.531" endtime="20201112 12:43:13.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.622" endtime="20201112 12:43:13.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.528" endtime="20201112 12:43:13.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.305" endtime="20201112 12:43:13.624"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.631" endtime="20201112 12:43:13.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.629" endtime="20201112 12:43:13.651"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.665" endtime="20201112 12:43:13.682"></status>
</kw>
<msg timestamp="20201112 12:43:13.683" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.663" endtime="20201112 12:43:13.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.685" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.684" endtime="20201112 12:43:13.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.689" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:13.687" endtime="20201112 12:43:13.689"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:13.660" endtime="20201112 12:43:13.690"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:13.658" endtime="20201112 12:43:13.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.657" endtime="20201112 12:43:13.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:13.695" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:13.694" endtime="20201112 12:43:13.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.691" endtime="20201112 12:43:13.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.656" endtime="20201112 12:43:13.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.655" endtime="20201112 12:43:13.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.696" endtime="20201112 12:43:13.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.654" endtime="20201112 12:43:13.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.652" endtime="20201112 12:43:13.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.628" endtime="20201112 12:43:13.699"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:13.703" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.713" endtime="20201112 12:43:15.793"></status>
</kw>
<msg timestamp="20201112 12:43:15.794" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 307421, 'wakeups': [317495, 327438, 337429, 347429, 357429, 367429, 37...</msg>
<status status="PASS" starttime="20201112 12:43:13.711" endtime="20201112 12:43:15.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.800" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 307421, 'wakeups': [317495, 327438, 337429, 347429, 357429, 367429, 37...</msg>
<status status="PASS" starttime="20201112 12:43:15.796" endtime="20201112 12:43:15.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.804" endtime="20201112 12:43:15.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.709" endtime="20201112 12:43:15.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.705" endtime="20201112 12:43:15.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.815" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'start-time': 307421, 'wakeups': [317495, 327438, 337429, 347429, 357429, 367429, 377429, 387429, 397429, 407429, 417429, 427429, 437429, 447429, 457429, 46...</msg>
<status status="PASS" starttime="20201112 12:43:15.811" endtime="20201112 12:43:15.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.824" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:15.822" endtime="20201112 12:43:15.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.829" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:15.827" endtime="20201112 12:43:15.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.817" endtime="20201112 12:43:15.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.840" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:15.838" endtime="20201112 12:43:15.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.845" level="INFO">VALUE: 307421</msg>
<status status="PASS" starttime="20201112 12:43:15.842" endtime="20201112 12:43:15.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.832" endtime="20201112 12:43:15.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.856" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:15.854" endtime="20201112 12:43:15.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.862" level="INFO">VALUE: [317495, 327438, 337429, 347429, 357429, 367429, 377429, 387429, 397429, 407429, 417429, 427429, 437429, 447429, 457429, 467429, 477429, 487429, 497429, 507429, 517429, 527429, 537429, 547429, 557429, 567429, 577429, 587429, 597429, 607429, 617429, 627429, 637429, 647429, 657429, 667429, 677429, 687429, 697429, 707429, 717429, 727429, 737429, 747429, 757429, 767429, 777429, 787429, 797429, 807429, 817429, 827429, 837429, 847429, 857429, 867429, 877429, 887429, 897429, 907429, 917429, 927429, 937429, 947429, 957429, 967429, 977429, 987429, 997429, 1007429, 1017429, 1027429, 1037429, 1047429, 1057429, 1067429, 1077429, 1087429, 1097429, 1107429, 1117429, 1127429, 1137429, 1147429, 1157429, 1167429, 1177429, 1187429, 1197429, 1207429, 1217429, 1227429, 1237429, 1247429, 1257429, 1267429, 1277429, 1287429, 1297429, 1307429]</msg>
<status status="PASS" starttime="20201112 12:43:15.859" endtime="20201112 12:43:15.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.848" endtime="20201112 12:43:15.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.875" endtime="20201112 12:43:16.172"></status>
</kw>
<msg timestamp="20201112 12:43:16.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071691875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081766611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.873" endtime="20201112 12:43:16.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071691875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081766611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.176" endtime="20201112 12:43:16.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.184" endtime="20201112 12:43:16.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.870" endtime="20201112 12:43:16.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.865" endtime="20201112 12:43:16.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.212" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:16.188" endtime="20201112 12:43:16.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.217" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:16.216" endtime="20201112 12:43:16.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.247" level="INFO">VALUE: 0.071691875</msg>
<status status="PASS" starttime="20201112 12:43:16.246" endtime="20201112 12:43:16.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.213" endtime="20201112 12:43:16.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.253" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:16.252" endtime="20201112 12:43:16.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.255" level="INFO">VALUE: [0.081766611, 0.091706347, 0.101698264, 0.111699181, 0.121700139, 0.131701014, 0.141701944, 0.151702861, 0.161703792, 0.171704708, 0.181705667, 0.191706556, 0.201707486, 0.211708403, 0.221709333, 0.231710292, 0.241711181, 0.251712069, 0.261713028, 0.271713917, 0.281714861, 0.291715764, 0.301716708, 0.311717611, 0.321718542, 0.331719458, 0.341720375, 0.351721278, 0.36172225, 0.371723125, 0.381724056, 0.391724958, 0.401725903, 0.411726806, 0.421727736, 0.431728667, 0.441729583, 0.451730486, 0.461731417, 0.471732333, 0.481733264, 0.491734167, 0.501735111, 0.511736042, 0.521736944, 0.531737847, 0.541738792, 0.551739708, 0.561740625, 0.571741556, 0.581742486, 0.591743375, 0.601744306, 0.611745278, 0.621746167, 0.631747069, 0.641748014, 0.651748931, 0.661749847, 0.67175075, 0.681751681, 0.691752611, 0.701753569, 0.711754444, 0.721755375, 0.731756292, 0.741757208, 0.751758139, 0.761759056, 0.771759958, 0.781760903, 0.791761806, 0.801762736, 0.811763708, 0.821764583, 0.831765528, 0.841766431, 0.851767333, 0.861768319, 0.871769181, 0.881770111, 0.891771083, 0.901771958, 0.911772889, 0.921773806, 0.931774722, 0.941775667, 0.951776556, 0.961777486, 0.971778417, 0.981779347, 0.991780264, 1.001781181, 1.011782083, 1.021783042, 1.031783944, 1.041784861, 1.051785792, 1.061786764, 1.071787625] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:16.254" endtime="20201112 12:43:16.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.249" endtime="20201112 12:43:16.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.259" endtime="20201112 12:43:16.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.262" endtime="20201112 12:43:16.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.261" endtime="20201112 12:43:16.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.257" endtime="20201112 12:43:16.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.704" endtime="20201112 12:43:16.283"></status>
</kw>
<msg timestamp="20201112 12:43:16.283" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.292" endtime="20201112 12:43:18.375"></status>
</kw>
<msg timestamp="20201112 12:43:18.376" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2885727, 'wakeups': [2895735, 2905735, 2915735, 2925735, 2935735, 2945...</msg>
<status status="PASS" starttime="20201112 12:43:16.290" endtime="20201112 12:43:18.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.383" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2885727, 'wakeups': [2895735, 2905735, 2915735, 2925735, 2935735, 2945...</msg>
<status status="PASS" starttime="20201112 12:43:18.379" endtime="20201112 12:43:18.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.385" endtime="20201112 12:43:18.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.287" endtime="20201112 12:43:18.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.285" endtime="20201112 12:43:18.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.397" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'start-time': 2885727, 'wakeups': [2895735, 2905735, 2915735, 2925735, 2935735, 2945735, 2955735, 2965735, 2975735, 2985735, 2995735, 3005735, 3015735, 3025...</msg>
<status status="PASS" starttime="20201112 12:43:18.393" endtime="20201112 12:43:18.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.409" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:18.404" endtime="20201112 12:43:18.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.413" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:18.411" endtime="20201112 12:43:18.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.399" endtime="20201112 12:43:18.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.425" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:18.422" endtime="20201112 12:43:18.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.430" level="INFO">VALUE: 2885727</msg>
<status status="PASS" starttime="20201112 12:43:18.427" endtime="20201112 12:43:18.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.417" endtime="20201112 12:43:18.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.441" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:18.438" endtime="20201112 12:43:18.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.445" level="INFO">VALUE: [2895735, 2905735, 2915735, 2925735, 2935735, 2945735, 2955735, 2965735, 2975735, 2985735, 2995735, 3005735, 3015735, 3025735, 3035735, 3045735, 3055735, 3065735, 3075735, 3085735, 3095735, 3105735, 3115735, 3125735, 3135735, 3145735, 3155735, 3165735, 3175735, 3185735, 3195735, 3205735, 3215735, 3225735, 3235735, 3245735, 3255735, 3265735, 3275735, 3285735, 3295735, 3305735, 3315735, 3325735, 3335735, 3345735, 3355735, 3365735, 3375735, 3385735, 3395735, 3405735, 3415735, 3425735, 3435735, 3445735, 3455735, 3465735, 3475735, 3485735, 3495735, 3505735, 3515735, 3525735, 3535735, 3545735, 3555735, 3565735, 3575735, 3585735, 3595735, 3605735, 3615735, 3625735, 3635735, 3645735, 3655735, 3665735, 3675735, 3685735, 3695735, 3705735, 3715735, 3725735, 3735735, 3745735, 3755735, 3765735, 3775735, 3785735, 3795735, 3805735, 3815735, 3825735, 3835735, 3845735, 3855735, 3865735, 3875735, 3885735]</msg>
<status status="PASS" starttime="20201112 12:43:18.443" endtime="20201112 12:43:18.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.433" endtime="20201112 12:43:18.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.462" endtime="20201112 12:43:18.764"></status>
</kw>
<msg timestamp="20201112 12:43:18.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018808625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028817917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.459" endtime="20201112 12:43:18.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018808625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028817917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.768" endtime="20201112 12:43:18.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.776" endtime="20201112 12:43:18.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.453" endtime="20201112 12:43:18.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.449" endtime="20201112 12:43:18.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.803" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:18.780" endtime="20201112 12:43:18.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.809" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:18.808" endtime="20201112 12:43:18.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.811" level="INFO">VALUE: 0.018808625</msg>
<status status="PASS" starttime="20201112 12:43:18.810" endtime="20201112 12:43:18.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.804" endtime="20201112 12:43:18.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.816" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:18.815" endtime="20201112 12:43:18.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.819" level="INFO">VALUE: [0.028817917, 0.038818847, 0.048819764, 0.058820681, 0.068821597, 0.078822542, 0.088823458, 0.098824375, 0.108825278, 0.118826208, 0.128827111, 0.138828042, 0.148828958, 0.158829889, 0.168830792, 0.178831778, 0.188832653, 0.198833583, 0.208834472, 0.218835403, 0.228836389, 0.238837264, 0.248838167, 0.258839097, 0.26884, 0.278841, 0.288841833, 0.298842819, 0.308843681, 0.318844611, 0.328845528, 0.338846458, 0.348847403, 0.358848306, 0.368849208, 0.378850153, 0.388851042, 0.398851986, 0.408852889, 0.418853819, 0.428854806, 0.438855681, 0.448856569, 0.458857514, 0.468858417, 0.478859361, 0.488860292, 0.498861194, 0.508862125, 0.518863042, 0.528863958, 0.538864889, 0.548865806, 0.558866736, 0.568867639, 0.578868569, 0.588869486, 0.598870444, 0.608871319, 0.61887225, 0.628873167, 0.638874097, 0.648875014, 0.658875958, 0.668876889, 0.678877792, 0.688878708, 0.698879625, 0.708880542, 0.718881486, 0.728882403, 0.738883333, 0.748884236, 0.758885236, 0.768886083, 0.778887, 0.788887944, 0.798888889, 0.808889764, 0.818890694, 0.828891597, 0.838892542, 0.848893444, 0.858894375, 0.868895292, 0.878896236, 0.888897167, 0.898898069, 0.908899, 0.918899917, 0.928900833, 0.938901764, 0.948902681, 0.958903597, 0.9689045, 0.978905444, 0.988906347, 0.998907278, 1.00890825, 1.018909194] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:18.818" endtime="20201112 12:43:18.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.812" endtime="20201112 12:43:18.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.823" endtime="20201112 12:43:18.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.826" endtime="20201112 12:43:18.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.825" endtime="20201112 12:43:18.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.821" endtime="20201112 12:43:18.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.284" endtime="20201112 12:43:18.847"></status>
</kw>
<msg timestamp="20201112 12:43:18.847" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.856" endtime="20201112 12:43:20.939"></status>
</kw>
<msg timestamp="20201112 12:43:20.940" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5449671, 'wakeups': [5459679, 5469679, 5479679, 5489679, 5499679, 5509...</msg>
<status status="PASS" starttime="20201112 12:43:18.854" endtime="20201112 12:43:20.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.946" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5449671, 'wakeups': [5459679, 5469679, 5479679, 5489679, 5499679, 5509...</msg>
<status status="PASS" starttime="20201112 12:43:20.943" endtime="20201112 12:43:20.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.949" endtime="20201112 12:43:20.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.851" endtime="20201112 12:43:20.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.849" endtime="20201112 12:43:20.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.961" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'start-time': 5449671, 'wakeups': [5459679, 5469679, 5479679, 5489679, 5499679, 5509679, 5519679, 5529679, 5539679, 5549679, 5559679, 5569679, 5579679, 5589...</msg>
<status status="PASS" starttime="20201112 12:43:20.957" endtime="20201112 12:43:20.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.971" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:20.968" endtime="20201112 12:43:20.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.976" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:20.973" endtime="20201112 12:43:20.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.963" endtime="20201112 12:43:20.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.988" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:20.985" endtime="20201112 12:43:20.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.992" level="INFO">VALUE: 5449671</msg>
<status status="PASS" starttime="20201112 12:43:20.990" endtime="20201112 12:43:20.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.979" endtime="20201112 12:43:20.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.003" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:21.001" endtime="20201112 12:43:21.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.008" level="INFO">VALUE: [5459679, 5469679, 5479679, 5489679, 5499679, 5509679, 5519679, 5529679, 5539679, 5549679, 5559679, 5569679, 5579679, 5589679, 5599679, 5609679, 5619679, 5629679, 5639679, 5649679, 5659679, 5669679, 5679679, 5689679, 5699679, 5709679, 5719679, 5729679, 5739679, 5749679, 5759679, 5769679, 5779679, 5789679, 5799679, 5809679, 5819679, 5829679, 5839679, 5849679, 5859679, 5869679, 5879679, 5889679, 5899679, 5909679, 5919679, 5929679, 5939679, 5949679, 5959679, 5969679, 5979679, 5989679, 5999679, 6009679, 6019679, 6029679, 6039679, 6049679, 6059679, 6069679, 6079679, 6089679, 6099679, 6109679, 6119679, 6129679, 6139679, 6149679, 6159679, 6169679, 6179679, 6189679, 6199679, 6209679, 6219679, 6229679, 6239679, 6249679, 6259679, 6269679, 6279679, 6289679, 6299679, 6309679, 6319679, 6329679, 6339679, 6349679, 6359679, 6369679, 6379679, 6389679, 6399679, 6409679, 6419679, 6429679, 6439679, 6449679]</msg>
<status status="PASS" starttime="20201112 12:43:21.006" endtime="20201112 12:43:21.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.996" endtime="20201112 12:43:21.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.028" endtime="20201112 12:43:21.331"></status>
</kw>
<msg timestamp="20201112 12:43:21.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018895778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028904597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.024" endtime="20201112 12:43:21.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018895778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028904597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.334" endtime="20201112 12:43:21.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.342" endtime="20201112 12:43:21.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.016" endtime="20201112 12:43:21.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.012" endtime="20201112 12:43:21.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.370" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:21.346" endtime="20201112 12:43:21.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.374" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:21.373" endtime="20201112 12:43:21.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.377" level="INFO">VALUE: 0.018895778</msg>
<status status="PASS" starttime="20201112 12:43:21.376" endtime="20201112 12:43:21.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.371" endtime="20201112 12:43:21.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.382" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:21.381" endtime="20201112 12:43:21.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.384" level="INFO">VALUE: [0.028904597, 0.038905542, 0.048906444, 0.058907417, 0.068908278, 0.078909208, 0.088910111, 0.098911069, 0.108911972, 0.118912903, 0.128913806, 0.138914736, 0.148915667, 0.158916597, 0.168917472, 0.1789185, 0.188919319, 0.198920264, 0.208921167, 0.218922111, 0.228923, 0.238924, 0.248924861, 0.258925792, 0.268926708, 0.278927639, 0.288928528, 0.298929472, 0.308930375, 0.318931306, 0.328932208, 0.338933139, 0.348934056, 0.358934986, 0.368935903, 0.378936847, 0.388937736, 0.398938681, 0.408939583, 0.418940514, 0.428941431, 0.438942361, 0.448943278, 0.458944236, 0.468945111, 0.478946056, 0.488946972, 0.498947889, 0.508948819, 0.518949806, 0.528950653, 0.538951583, 0.5489525, 0.558953444, 0.568954347, 0.578955306, 0.588956194, 0.598957111, 0.608958028, 0.618958972, 0.628959875, 0.638960792, 0.648961722, 0.658962625, 0.668963542, 0.678964472, 0.688965375, 0.698966306, 0.708967222, 0.718968153, 0.728969069, 0.73897, 0.748970903, 0.758971847, 0.76897275, 0.778973681, 0.788974583, 0.798975528, 0.808976431, 0.818977361, 0.828978264, 0.838979194, 0.848980111, 0.858981042, 0.868981986, 0.878982931, 0.888983806, 0.898984736, 0.908985653, 0.918986583, 0.928987472, 0.938988403, 0.948989333, 0.95899025, 0.968991194, 0.978992111, 0.988993, 0.998993931, 1.008994847, 1.018995792] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:21.383" endtime="20201112 12:43:21.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.378" endtime="20201112 12:43:21.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.388" endtime="20201112 12:43:21.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.391" endtime="20201112 12:43:21.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.390" endtime="20201112 12:43:21.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.386" endtime="20201112 12:43:21.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.848" endtime="20201112 12:43:21.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.702" endtime="20201112 12:43:21.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.701" endtime="20201112 12:43:21.413"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:21.415" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.431" endtime="20201112 12:43:23.514"></status>
</kw>
<msg timestamp="20201112 12:43:23.515" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8024964, 'wakeups': [8034994, 8044973, 8054972, 8064972, 8074972, 8084...</msg>
<status status="PASS" starttime="20201112 12:43:21.423" endtime="20201112 12:43:23.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.522" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8024964, 'wakeups': [8034994, 8044973, 8054972, 8064972, 8074972, 8084...</msg>
<status status="PASS" starttime="20201112 12:43:23.518" endtime="20201112 12:43:23.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.524" endtime="20201112 12:43:23.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.420" endtime="20201112 12:43:23.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.418" endtime="20201112 12:43:23.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.536" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'start-time': 8024964, 'wakeups': [8034994, 8044973, 8054972, 8064972, 8074972, 8084972, 8094972, 8104972, 8114972, 8124972, 8134972, 8144972, 8154972, 8164...</msg>
<status status="PASS" starttime="20201112 12:43:23.532" endtime="20201112 12:43:23.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.545" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:23.543" endtime="20201112 12:43:23.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.550" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:23.548" endtime="20201112 12:43:23.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.538" endtime="20201112 12:43:23.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.561" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:23.559" endtime="20201112 12:43:23.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.565" level="INFO">VALUE: 8024964</msg>
<status status="PASS" starttime="20201112 12:43:23.563" endtime="20201112 12:43:23.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.553" endtime="20201112 12:43:23.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.576" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:23.574" endtime="20201112 12:43:23.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.581" level="INFO">VALUE: [8034994, 8044973, 8054972, 8064972, 8074972, 8084972, 8094972, 8104972, 8114972, 8124972, 8134972, 8144972, 8154972, 8164972, 8174972, 8184972, 8194972, 8204972, 8214972, 8224972, 8234972, 8244972, 8254972, 8264972, 8274972, 8284972, 8294972, 8304972, 8314972, 8324972, 8334972, 8344972, 8354972, 8364972, 8374972, 8384972, 8394972, 8404972, 8414972, 8424972, 8434972, 8444972, 8454972, 8464972, 8474972, 8484972, 8494972, 8504972, 8514972, 8524972, 8534972, 8544972, 8554972, 8564972, 8574972, 8584972, 8594972, 8604972, 8614972, 8624972, 8634972, 8644972, 8654972, 8664972, 8674972, 8684972, 8694972, 8704972, 8714972, 8724972, 8734972, 8744972, 8754972, 8764972, 8774972, 8784972, 8794972, 8804972, 8814972, 8824972, 8834972, 8844972, 8854972, 8864972, 8874972, 8884972, 8894972, 8904972, 8914972, 8924972, 8934972, 8944972, 8954972, 8964972, 8974972, 8984972, 8994972, 9004972, 9014972, 9024972]</msg>
<status status="PASS" starttime="20201112 12:43:23.579" endtime="20201112 12:43:23.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.568" endtime="20201112 12:43:23.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.597" endtime="20201112 12:43:23.895"></status>
</kw>
<msg timestamp="20201112 12:43:23.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0287765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038807264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:23.594" endtime="20201112 12:43:23.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0287765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038807264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:23.899" endtime="20201112 12:43:23.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.907" endtime="20201112 12:43:23.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.588" endtime="20201112 12:43:23.910"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.584" endtime="20201112 12:43:23.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.935" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:23.911" endtime="20201112 12:43:23.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.940" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:23.939" endtime="20201112 12:43:23.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.942" level="INFO">VALUE: 0.0287765</msg>
<status status="PASS" starttime="20201112 12:43:23.941" endtime="20201112 12:43:23.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.936" endtime="20201112 12:43:23.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.948" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:23.946" endtime="20201112 12:43:23.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.950" level="INFO">VALUE: [0.038807264, 0.048786861, 0.058786764, 0.068787694, 0.078788597, 0.088789528, 0.098790472, 0.108791361, 0.118792278, 0.128793292, 0.138794153, 0.148795042, 0.158795958, 0.168796903, 0.178797819, 0.188798764, 0.198799653, 0.208800569, 0.218801486, 0.228802417, 0.238803333, 0.248804264, 0.258805222, 0.268806097, 0.278807014, 0.288807958, 0.298808861, 0.308809778, 0.318810722, 0.328811639, 0.338812542, 0.348813472, 0.358814403, 0.368815319, 0.378816236, 0.388817167, 0.398818069, 0.408819, 0.418819917, 0.428820861, 0.438821778, 0.448822681, 0.458823597, 0.468824528, 0.478825444, 0.488826403, 0.498827306, 0.508828208, 0.518829139, 0.528830056, 0.538831014, 0.548831944, 0.558832819, 0.56883375, 0.578834722, 0.588835597, 0.598836528, 0.608837431, 0.618838375, 0.628839292, 0.638840194, 0.648841125, 0.658842056, 0.668843014, 0.678843903, 0.688844819, 0.698845736, 0.708846653, 0.718847583, 0.7288485, 0.738849417, 0.748850361, 0.758851264, 0.768852194, 0.778853125, 0.788854028, 0.798854986, 0.808855875, 0.818856806, 0.828857722, 0.838858653, 0.848859583, 0.8588605, 0.868861431, 0.878862333, 0.888863264, 0.898864181, 0.908865139, 0.918866042, 0.928866958, 0.938867875, 0.948868792, 0.958869722, 0.968870639, 0.978871569, 0.988872472, 0.998873403, 1.008874333, 1.01887525, 1.028876167] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:23.949" endtime="20201112 12:43:23.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.943" endtime="20201112 12:43:23.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.953" endtime="20201112 12:43:23.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.957" endtime="20201112 12:43:23.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.955" endtime="20201112 12:43:23.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.951" endtime="20201112 12:43:23.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.416" endtime="20201112 12:43:23.977"></status>
</kw>
<msg timestamp="20201112 12:43:23.978" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.986" endtime="20201112 12:43:26.081"></status>
</kw>
<msg timestamp="20201112 12:43:26.082" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10580121, 'wakeups': [10590137, 10600137, 10610137, 10620137, 10630137...</msg>
<status status="PASS" starttime="20201112 12:43:23.985" endtime="20201112 12:43:26.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.088" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10580121, 'wakeups': [10590137, 10600137, 10610137, 10620137, 10630137...</msg>
<status status="PASS" starttime="20201112 12:43:26.084" endtime="20201112 12:43:26.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.091" endtime="20201112 12:43:26.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.982" endtime="20201112 12:43:26.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.980" endtime="20201112 12:43:26.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.104" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'start-time': 10580121, 'wakeups': [10590137, 10600137, 10610137, 10620137, 10630137, 10640137, 10650137, 10660137, 10670137, 10680137, 10690137, 10700137, ...</msg>
<status status="PASS" starttime="20201112 12:43:26.099" endtime="20201112 12:43:26.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.113" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:26.111" endtime="20201112 12:43:26.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.118" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:26.116" endtime="20201112 12:43:26.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.105" endtime="20201112 12:43:26.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.131" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:26.127" endtime="20201112 12:43:26.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.136" level="INFO">VALUE: 10580121</msg>
<status status="PASS" starttime="20201112 12:43:26.134" endtime="20201112 12:43:26.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.121" endtime="20201112 12:43:26.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.147" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:26.144" endtime="20201112 12:43:26.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.152" level="INFO">VALUE: [10590137, 10600137, 10610137, 10620137, 10630137, 10640137, 10650137, 10660137, 10670137, 10680137, 10690137, 10700137, 10710137, 10720137, 10730137, 10740137, 10750137, 10760137, 10770137, 10780137, 10790137, 10800137, 10810137, 10820137, 10830137, 10840137, 10850137, 10860137, 10870137, 10880137, 10890137, 10900137, 10910137, 10920137, 10930137, 10940137, 10950137, 10960137, 10970137, 10980137, 10990137, 11000137, 11010137, 11020137, 11030137, 11040137, 11050137, 11060137, 11070137, 11080137, 11090137, 11100137, 11110137, 11120137, 11130137, 11140137, 11150137, 11160137, 11170137, 11180137, 11190137, 11200137, 11210137, 11220137, 11230137, 11240137, 11250137, 11260137, 11270137, 11280137, 11290137, 11300137, 11310137, 11320137, 11330137, 11340137, 11350137, 11360137, 11370137, 11380137, 11390137, 11400137, 11410137, 11420137, 11430137, 11440137, 11450137, 11460137, 11470137, 11480137, 11490137, 11500137, 11510137, 11520137, 11530137, 11540137, 11550137, 11560137, 11570137, 11580137]</msg>
<status status="PASS" starttime="20201112 12:43:26.149" endtime="20201112 12:43:26.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.139" endtime="20201112 12:43:26.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.168" endtime="20201112 12:43:26.466"></status>
</kw>
<msg timestamp="20201112 12:43:26.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018823611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028840861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.165" endtime="20201112 12:43:26.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018823611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028840861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.470" endtime="20201112 12:43:26.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.478" endtime="20201112 12:43:26.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.159" endtime="20201112 12:43:26.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.155" endtime="20201112 12:43:26.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.505" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:26.481" endtime="20201112 12:43:26.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.510" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:26.509" endtime="20201112 12:43:26.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.512" level="INFO">VALUE: 0.018823611</msg>
<status status="PASS" starttime="20201112 12:43:26.511" endtime="20201112 12:43:26.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.506" endtime="20201112 12:43:26.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.518" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:26.517" endtime="20201112 12:43:26.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.546" level="INFO">VALUE: [0.028840861, 0.038841694, 0.048842611, 0.058843528, 0.068844458, 0.078845375, 0.088846292, 0.098847222, 0.108848139, 0.118849056, 0.128849972, 0.138850903, 0.148851833, 0.158852764, 0.168853694, 0.178854583, 0.1888555, 0.198856417, 0.208857347, 0.218858278, 0.228859194, 0.238860153, 0.248861028, 0.258861972, 0.268862917, 0.278863792, 0.288864708, 0.298865639, 0.308866556, 0.318867472, 0.328868389, 0.338869389, 0.34887025, 0.358871167, 0.368872083, 0.378873, 0.388873917, 0.398874861, 0.408875778, 0.418876681, 0.428877611, 0.438878528, 0.448879444, 0.458880389, 0.468881306, 0.478882306, 0.488883139, 0.498884069, 0.508884986, 0.518885917, 0.528886819, 0.53888775, 0.548888694, 0.558889597, 0.568890528, 0.578891444, 0.588892361, 0.598893278, 0.608894194, 0.618895125, 0.628896042, 0.638896986, 0.648897889, 0.658898806, 0.66889975, 0.678900681, 0.688901583, 0.698902528, 0.708903431, 0.718904347, 0.728905264, 0.738906208, 0.748907167, 0.758908028, 0.768908958, 0.778909889, 0.788910792, 0.798911736, 0.808912639, 0.818913569, 0.8289145, 0.838915403, 0.848916333, 0.85891725, 0.868918181, 0.878919111, 0.888920014, 0.898920944, 0.908921875, 0.918922806, 0.928923708, 0.938924681, 0.948925611, 0.958926486, 0.968927417, 0.978928361, 0.988929306, 0.998930181, 1.008931125, 1.018932083] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:26.520" endtime="20201112 12:43:26.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.514" endtime="20201112 12:43:26.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.549" endtime="20201112 12:43:26.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.553" endtime="20201112 12:43:26.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.551" endtime="20201112 12:43:26.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.548" endtime="20201112 12:43:26.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.978" endtime="20201112 12:43:26.574"></status>
</kw>
<msg timestamp="20201112 12:43:26.574" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.583" endtime="20201112 12:43:28.677"></status>
</kw>
<msg timestamp="20201112 12:43:28.679" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13176648, 'wakeups': [13186664, 13196664, 13206664, 13216664, 13226664...</msg>
<status status="PASS" starttime="20201112 12:43:26.581" endtime="20201112 12:43:28.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.685" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13176648, 'wakeups': [13186664, 13196664, 13206664, 13216664, 13226664...</msg>
<status status="PASS" starttime="20201112 12:43:28.681" endtime="20201112 12:43:28.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.687" endtime="20201112 12:43:28.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.578" endtime="20201112 12:43:28.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.576" endtime="20201112 12:43:28.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.699" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'start-time': 13176648, 'wakeups': [13186664, 13196664, 13206664, 13216664, 13226664, 13236664, 13246664, 13256664, 13266664, 13276664, 13286664, 13296664, ...</msg>
<status status="PASS" starttime="20201112 12:43:28.695" endtime="20201112 12:43:28.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.708" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:28.706" endtime="20201112 12:43:28.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.713" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:28.711" endtime="20201112 12:43:28.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.701" endtime="20201112 12:43:28.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.723" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:28.721" endtime="20201112 12:43:28.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.728" level="INFO">VALUE: 13176648</msg>
<status status="PASS" starttime="20201112 12:43:28.726" endtime="20201112 12:43:28.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.716" endtime="20201112 12:43:28.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.733" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:28.732" endtime="20201112 12:43:28.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.736" level="INFO">VALUE: [13186664, 13196664, 13206664, 13216664, 13226664, 13236664, 13246664, 13256664, 13266664, 13276664, 13286664, 13296664, 13306664, 13316664, 13326664, 13336664, 13346664, 13356664, 13366664, 13376664, 13386664, 13396664, 13406664, 13416664, 13426664, 13436664, 13446664, 13456664, 13466664, 13476664, 13486664, 13496664, 13506664, 13516664, 13526664, 13536664, 13546664, 13556664, 13566664, 13576664, 13586664, 13596664, 13606664, 13616664, 13626664, 13636664, 13646664, 13656664, 13666664, 13676664, 13686664, 13696664, 13706664, 13716664, 13726664, 13736664, 13746664, 13756664, 13766664, 13776664, 13786664, 13796664, 13806664, 13816664, 13826664, 13836664, 13846664, 13856664, 13866664, 13876664, 13886664, 13896664, 13906664, 13916664, 13926664, 13936664, 13946664, 13956664, 13966664, 13976664, 13986664, 13996664, 14006664, 14016664, 14026664, 14036664, 14046664, 14056664, 14066664, 14076664, 14086664, 14096664, 14106664, 14116664, 14126664, 14136664, 14146664, 14156664, 14166664, 14176664]</msg>
<status status="PASS" starttime="20201112 12:43:28.734" endtime="20201112 12:43:28.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.730" endtime="20201112 12:43:28.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.744" endtime="20201112 12:43:29.037"></status>
</kw>
<msg timestamp="20201112 12:43:29.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018930806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028948306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.742" endtime="20201112 12:43:29.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018930806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028948306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.041" endtime="20201112 12:43:29.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.049" endtime="20201112 12:43:29.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.739" endtime="20201112 12:43:29.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.737" endtime="20201112 12:43:29.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.076" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:29.053" endtime="20201112 12:43:29.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.081" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:29.080" endtime="20201112 12:43:29.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.083" level="INFO">VALUE: 0.018930806</msg>
<status status="PASS" starttime="20201112 12:43:29.082" endtime="20201112 12:43:29.083"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.077" endtime="20201112 12:43:29.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.089" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:29.088" endtime="20201112 12:43:29.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.091" level="INFO">VALUE: [0.028948306, 0.038949222, 0.048950139, 0.058951069, 0.068951972, 0.078952903, 0.088953833, 0.09895475, 0.108955667, 0.118956583, 0.128957514, 0.138958458, 0.148959333, 0.158960264, 0.168961181, 0.178962125, 0.188963014, 0.198963944, 0.208964875, 0.218965778, 0.228966722, 0.238967653, 0.248968542, 0.258969472, 0.268970389, 0.278971306, 0.288972236, 0.298973153, 0.308974083, 0.318975, 0.328975917, 0.338976847, 0.34897775, 0.358978681, 0.368979653, 0.378980514, 0.388981444, 0.398982431, 0.408983278, 0.418984208, 0.428985139, 0.438986056, 0.448986986, 0.458987903, 0.468988819, 0.47898975, 0.488990667, 0.498991625, 0.508992542, 0.518993417, 0.528994347, 0.538995264, 0.548996181, 0.558997111, 0.568998028, 0.578998986, 0.588999875, 0.599000792, 0.609001722, 0.619002653, 0.629003583, 0.6390045, 0.649005417, 0.659006333, 0.669007264, 0.679008167, 0.689009125, 0.699010014, 0.709010944, 0.719011917, 0.729012778, 0.739013722, 0.749014639, 0.759015556, 0.769016486, 0.779017403, 0.789018319, 0.799019236, 0.809020167, 0.819021153, 0.829022, 0.839022931, 0.849023861, 0.859024778, 0.869025708, 0.879026611, 0.889027542, 0.899028458, 0.909029389, 0.919030319, 0.929031222, 0.939032167, 0.949033111, 0.959034014, 0.969034931, 0.979035847, 0.989036764, 0.999037681, 1.009038625, 1.019039528] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:29.090" endtime="20201112 12:43:29.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.085" endtime="20201112 12:43:29.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.094" endtime="20201112 12:43:29.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.098" endtime="20201112 12:43:29.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.096" endtime="20201112 12:43:29.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.093" endtime="20201112 12:43:29.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.575" endtime="20201112 12:43:29.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.414" endtime="20201112 12:43:29.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.413" endtime="20201112 12:43:29.120"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:29.122" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.132" endtime="20201112 12:43:31.227"></status>
</kw>
<msg timestamp="20201112 12:43:31.228" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15725677, 'wakeups': [15735702, 15745702, 15755702, 15765702, 15775702...</msg>
<status status="PASS" starttime="20201112 12:43:29.130" endtime="20201112 12:43:31.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.235" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15725677, 'wakeups': [15735702, 15745702, 15755702, 15765702, 15775702...</msg>
<status status="PASS" starttime="20201112 12:43:31.231" endtime="20201112 12:43:31.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.237" endtime="20201112 12:43:31.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.126" endtime="20201112 12:43:31.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.124" endtime="20201112 12:43:31.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.249" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'start-time': 15725677, 'wakeups': [15735702, 15745702, 15755702, 15765702, 15775702, 15785702, 15795702, 15805702, 15815702, 15825702, 15835702, 15845702, ...</msg>
<status status="PASS" starttime="20201112 12:43:31.245" endtime="20201112 12:43:31.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.258" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:31.256" endtime="20201112 12:43:31.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.262" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:31.260" endtime="20201112 12:43:31.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.251" endtime="20201112 12:43:31.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.273" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:31.271" endtime="20201112 12:43:31.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.278" level="INFO">VALUE: 15725677</msg>
<status status="PASS" starttime="20201112 12:43:31.276" endtime="20201112 12:43:31.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.266" endtime="20201112 12:43:31.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.289" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:31.286" endtime="20201112 12:43:31.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.292" level="INFO">VALUE: [15735702, 15745702, 15755702, 15765702, 15775702, 15785702, 15795702, 15805702, 15815702, 15825702, 15835702, 15845702, 15855702, 15865702, 15875702, 15885702, 15895702, 15905702, 15915702, 15925702, 15935702, 15945702, 15955702, 15965702, 15975702, 15985702, 15995702, 16005702, 16015702, 16025702, 16035702, 16045702, 16055702, 16065702, 16075702, 16085702, 16095702, 16105702, 16115702, 16125702, 16135702, 16145702, 16155702, 16165702, 16175702, 16185702, 16195702, 16205702, 16215702, 16225702, 16235702, 16245702, 16255702, 16265702, 16275702, 16285702, 16295702, 16305702, 16315702, 16325702, 16335702, 16345702, 16355702, 16365702, 16375702, 16385702, 16395702, 16405702, 16415702, 16425702, 16435702, 16445702, 16455702, 16465702, 16475702, 16485702, 16495702, 16505702, 16515702, 16525702, 16535702, 16545702, 16555702, 16565702, 16575702, 16585702, 16595702, 16605702, 16615702, 16625702, 16635702, 16645702, 16655702, 16665702, 16675702, 16685702, 16695702, 16705702, 16715702, 16725702]</msg>
<status status="PASS" starttime="20201112 12:43:31.291" endtime="20201112 12:43:31.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.281" endtime="20201112 12:43:31.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.300" endtime="20201112 12:43:31.591"></status>
</kw>
<msg timestamp="20201112 12:43:31.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033172708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.298" endtime="20201112 12:43:31.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033172708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.595" endtime="20201112 12:43:31.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.603" endtime="20201112 12:43:31.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.295" endtime="20201112 12:43:31.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.293" endtime="20201112 12:43:31.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.632" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:31.607" endtime="20201112 12:43:31.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.636" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:31.635" endtime="20201112 12:43:31.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.639" level="INFO">VALUE: 0.023145972</msg>
<status status="PASS" starttime="20201112 12:43:31.637" endtime="20201112 12:43:31.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.633" endtime="20201112 12:43:31.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.644" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:31.643" endtime="20201112 12:43:31.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.646" level="INFO">VALUE: [0.033172708, 0.043173611, 0.0531745, 0.063175417, 0.073176347, 0.083177278, 0.093178194, 0.103179097, 0.113180028, 0.123180944, 0.133181861, 0.143182778, 0.153183708, 0.163184625, 0.173185556, 0.183186472, 0.193187417, 0.203188319, 0.213189236, 0.223190153, 0.233191069, 0.243192042, 0.253192917, 0.263193847, 0.27319475, 0.283195681, 0.293196597, 0.303197514, 0.313198458, 0.323199431, 0.333200278, 0.343201194, 0.353202139, 0.363203056, 0.373203958, 0.383204889, 0.393205819, 0.403206736, 0.413207667, 0.423208597, 0.4332095, 0.443210417, 0.453211347, 0.463212264, 0.473213181, 0.483214111, 0.493215056, 0.503215944, 0.513216861, 0.523217792, 0.533218736, 0.543219653, 0.553220556, 0.563221528, 0.573222403, 0.583223333, 0.59322425, 0.603225167, 0.613226083, 0.623227028, 0.633227986, 0.643228875, 0.653229778, 0.663230694, 0.673231611, 0.683232542, 0.693233458, 0.703234389, 0.713235306, 0.723236236, 0.733237153, 0.743238069, 0.753238986, 0.763239917, 0.773240861, 0.783241764, 0.793242681, 0.803243597, 0.813244542, 0.823245444, 0.833246375, 0.843247292, 0.853248208, 0.863249139, 0.873250056, 0.883250986, 0.893251917, 0.903252889, 0.913253764, 0.923254694, 0.933255611, 0.943256528, 0.953257444, 0.963258389, 0.973259306, 0.983260208, 0.993261125, 1.003262042, 1.013262972, 1.023263889] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:31.645" endtime="20201112 12:43:31.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.640" endtime="20201112 12:43:31.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.650" endtime="20201112 12:43:31.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.653" endtime="20201112 12:43:31.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.652" endtime="20201112 12:43:31.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.648" endtime="20201112 12:43:31.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.123" endtime="20201112 12:43:31.674"></status>
</kw>
<msg timestamp="20201112 12:43:31.674" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.683" endtime="20201112 12:43:33.777"></status>
</kw>
<msg timestamp="20201112 12:43:33.779" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18276898, 'wakeups': [18286923, 18296923, 18306923, 18316923, 18326923...</msg>
<status status="PASS" starttime="20201112 12:43:31.681" endtime="20201112 12:43:33.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.786" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18276898, 'wakeups': [18286923, 18296923, 18306923, 18316923, 18326923...</msg>
<status status="PASS" starttime="20201112 12:43:33.781" endtime="20201112 12:43:33.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.788" endtime="20201112 12:43:33.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.679" endtime="20201112 12:43:33.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.676" endtime="20201112 12:43:33.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.802" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'start-time': 18276898, 'wakeups': [18286923, 18296923, 18306923, 18316923, 18326923, 18336923, 18346923, 18356923, 18366923, 18376923, 18386923, 18396923, ...</msg>
<status status="PASS" starttime="20201112 12:43:33.796" endtime="20201112 12:43:33.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.811" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:33.808" endtime="20201112 12:43:33.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.815" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:33.813" endtime="20201112 12:43:33.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.803" endtime="20201112 12:43:33.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.826" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:33.824" endtime="20201112 12:43:33.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.828" level="INFO">VALUE: 18276898</msg>
<status status="PASS" starttime="20201112 12:43:33.827" endtime="20201112 12:43:33.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.820" endtime="20201112 12:43:33.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.834" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:33.833" endtime="20201112 12:43:33.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.838" level="INFO">VALUE: [18286923, 18296923, 18306923, 18316923, 18326923, 18336923, 18346923, 18356923, 18366923, 18376923, 18386923, 18396923, 18406923, 18416923, 18426923, 18436923, 18446923, 18456923, 18466923, 18476923, 18486923, 18496923, 18506923, 18516923, 18526923, 18536923, 18546923, 18556923, 18566923, 18576923, 18586923, 18596923, 18606923, 18616923, 18626923, 18636923, 18646923, 18656923, 18666923, 18676923, 18686923, 18696923, 18706923, 18716923, 18726923, 18736923, 18746923, 18756923, 18766923, 18776923, 18786923, 18796923, 18806923, 18816923, 18826923, 18836923, 18846923, 18856923, 18866923, 18876923, 18886923, 18896923, 18906923, 18916923, 18926923, 18936923, 18946923, 18956923, 18966923, 18976923, 18986923, 18996923, 19006923, 19016923, 19026923, 19036923, 19046923, 19056923, 19066923, 19076923, 19086923, 19096923, 19106923, 19116923, 19126923, 19136923, 19146923, 19156923, 19166923, 19176923, 19186923, 19196923, 19206923, 19216923, 19226923, 19236923, 19246923, 19256923, 19266923, 19276923]</msg>
<status status="PASS" starttime="20201112 12:43:33.836" endtime="20201112 12:43:33.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.830" endtime="20201112 12:43:33.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.847" endtime="20201112 12:43:34.139"></status>
</kw>
<msg timestamp="20201112 12:43:34.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018840625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028867472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.845" endtime="20201112 12:43:34.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018840625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028867472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.143" endtime="20201112 12:43:34.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.151" endtime="20201112 12:43:34.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.842" endtime="20201112 12:43:34.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.840" endtime="20201112 12:43:34.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.178" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:34.155" endtime="20201112 12:43:34.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.183" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:34.182" endtime="20201112 12:43:34.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.185" level="INFO">VALUE: 0.018840625</msg>
<status status="PASS" starttime="20201112 12:43:34.184" endtime="20201112 12:43:34.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.179" endtime="20201112 12:43:34.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.192" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:34.190" endtime="20201112 12:43:34.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.194" level="INFO">VALUE: [0.028867472, 0.038868347, 0.048869278, 0.058870194, 0.068871125, 0.078872042, 0.088872944, 0.098873875, 0.108874792, 0.118875708, 0.128876681, 0.138877556, 0.148878472, 0.158879417, 0.168880319, 0.178881236, 0.188882153, 0.198883069, 0.208883986, 0.218884944, 0.228885847, 0.238886764, 0.248887667, 0.258888667, 0.268889514, 0.278890431, 0.288891375, 0.298892278, 0.308893194, 0.318894139, 0.328895042, 0.338895972, 0.348896917, 0.358897806, 0.368898778, 0.378899639, 0.388900597, 0.3989015, 0.408902403, 0.418903333, 0.42890425, 0.438905167, 0.448906111, 0.458907014, 0.468907931, 0.478908875, 0.488909778, 0.498910708, 0.508911625, 0.518912542, 0.528913458, 0.538914375, 0.548915306, 0.558916222, 0.568917139, 0.578918069, 0.588918986, 0.598919958, 0.608920861, 0.618921764, 0.628922694, 0.638923597, 0.648924542, 0.658925444, 0.668926375, 0.678927278, 0.688928208, 0.698929139, 0.708930097, 0.718930972, 0.728931903, 0.738932847, 0.748933736, 0.758934653, 0.768935583, 0.7789365, 0.788937431, 0.798938347, 0.808939264, 0.818940194, 0.828941111, 0.838942042, 0.848942972, 0.858943875, 0.868944792, 0.87894575, 0.888946653, 0.898947556, 0.9089485, 0.918949403, 0.928950319, 0.93895125, 0.948952194, 0.958953097, 0.968954014, 0.978954931, 0.988955875, 0.998956778, 1.008957694, 1.018958639] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:34.193" endtime="20201112 12:43:34.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.187" endtime="20201112 12:43:34.195"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.197" endtime="20201112 12:43:34.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.201" endtime="20201112 12:43:34.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.199" endtime="20201112 12:43:34.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.195" endtime="20201112 12:43:34.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.675" endtime="20201112 12:43:34.222"></status>
</kw>
<msg timestamp="20201112 12:43:34.222" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.230" endtime="20201112 12:43:36.325"></status>
</kw>
<msg timestamp="20201112 12:43:36.327" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20824292, 'wakeups': [20834317, 20844317, 20854317, 20864317, 20874317...</msg>
<status status="PASS" starttime="20201112 12:43:34.229" endtime="20201112 12:43:36.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.333" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20824292, 'wakeups': [20834317, 20844317, 20854317, 20864317, 20874317...</msg>
<status status="PASS" starttime="20201112 12:43:36.329" endtime="20201112 12:43:36.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.336" endtime="20201112 12:43:36.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.226" endtime="20201112 12:43:36.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.224" endtime="20201112 12:43:36.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.349" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'start-time': 20824292, 'wakeups': [20834317, 20844317, 20854317, 20864317, 20874317, 20884317, 20894317, 20904317, 20914317, 20924317, 20934317, 20944317, ...</msg>
<status status="PASS" starttime="20201112 12:43:36.344" endtime="20201112 12:43:36.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.358" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:36.356" endtime="20201112 12:43:36.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.363" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:36.361" endtime="20201112 12:43:36.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.351" endtime="20201112 12:43:36.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.374" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:36.372" endtime="20201112 12:43:36.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.379" level="INFO">VALUE: 20824292</msg>
<status status="PASS" starttime="20201112 12:43:36.377" endtime="20201112 12:43:36.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.367" endtime="20201112 12:43:36.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.390" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:36.388" endtime="20201112 12:43:36.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.395" level="INFO">VALUE: [20834317, 20844317, 20854317, 20864317, 20874317, 20884317, 20894317, 20904317, 20914317, 20924317, 20934317, 20944317, 20954317, 20964317, 20974317, 20984317, 20994317, 21004317, 21014317, 21024317, 21034317, 21044317, 21054317, 21064317, 21074317, 21084317, 21094317, 21104317, 21114317, 21124317, 21134317, 21144317, 21154317, 21164317, 21174317, 21184317, 21194317, 21204317, 21214317, 21224317, 21234317, 21244317, 21254317, 21264317, 21274317, 21284317, 21294317, 21304317, 21314317, 21324317, 21334317, 21344317, 21354317, 21364317, 21374317, 21384317, 21394317, 21404317, 21414317, 21424317, 21434317, 21444317, 21454317, 21464317, 21474317, 21484317, 21494317, 21504317, 21514317, 21524317, 21534317, 21544317, 21554317, 21564317, 21574317, 21584317, 21594317, 21604317, 21614317, 21624317, 21634317, 21644317, 21654317, 21664317, 21674317, 21684317, 21694317, 21704317, 21714317, 21724317, 21734317, 21744317, 21754317, 21764317, 21774317, 21784317, 21794317, 21804317, 21814317, 21824317]</msg>
<status status="PASS" starttime="20201112 12:43:36.393" endtime="20201112 12:43:36.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.382" endtime="20201112 12:43:36.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.412" endtime="20201112 12:43:36.704"></status>
</kw>
<msg timestamp="20201112 12:43:36.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018827236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028853597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.408" endtime="20201112 12:43:36.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018827236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028853597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.708" endtime="20201112 12:43:36.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.716" endtime="20201112 12:43:36.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.402" endtime="20201112 12:43:36.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.398" endtime="20201112 12:43:36.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.742" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:36.719" endtime="20201112 12:43:36.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.747" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:36.746" endtime="20201112 12:43:36.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.749" level="INFO">VALUE: 0.018827236</msg>
<status status="PASS" starttime="20201112 12:43:36.748" endtime="20201112 12:43:36.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.743" endtime="20201112 12:43:36.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.754" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:36.753" endtime="20201112 12:43:36.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.756" level="INFO">VALUE: [0.028853597, 0.038854472, 0.048855361, 0.058856278, 0.068857194, 0.078858125, 0.088859042, 0.098859958, 0.108860875, 0.118861861, 0.128862792, 0.138863653, 0.148864597, 0.158865472, 0.168866417, 0.178867319, 0.188868236, 0.198869167, 0.208870097, 0.218871, 0.228871917, 0.238872889, 0.248873764, 0.258874694, 0.268875625, 0.278876556, 0.288877444, 0.298878375, 0.308879292, 0.318880222, 0.328881181, 0.338882042, 0.348883028, 0.358883889, 0.368884806, 0.37888575, 0.388886653, 0.398887583, 0.408888528, 0.418889431, 0.428890333, 0.43889125, 0.448892181, 0.458893097, 0.468894028, 0.478894944, 0.488895875, 0.498896792, 0.508897708, 0.518898625, 0.528899542, 0.5389005, 0.548901389, 0.558902306, 0.568903236, 0.578904153, 0.588905069, 0.598906014, 0.608906931, 0.618907847, 0.628908764, 0.638909694, 0.648910611, 0.658911528, 0.668912444, 0.678913361, 0.688914292, 0.698915222, 0.708916139, 0.718917069, 0.728917986, 0.738918903, 0.748919819, 0.758920778, 0.768921667, 0.778922583, 0.7889235, 0.798924444, 0.808925361, 0.818926278, 0.828927208, 0.838928111, 0.848929028, 0.858929972, 0.868930903, 0.878931847, 0.888932722, 0.898933639, 0.908934569, 0.9189355, 0.928936417, 0.938937361, 0.94893825, 0.958939167, 0.968940167, 0.978941014, 0.988942, 0.998942861, 1.008943778, 1.018944694] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:36.755" endtime="20201112 12:43:36.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.750" endtime="20201112 12:43:36.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.760" endtime="20201112 12:43:36.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.763" endtime="20201112 12:43:36.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.762" endtime="20201112 12:43:36.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.758" endtime="20201112 12:43:36.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.223" endtime="20201112 12:43:36.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.121" endtime="20201112 12:43:36.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.120" endtime="20201112 12:43:36.784"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:36.787" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.796" endtime="20201112 12:43:38.890"></status>
</kw>
<msg timestamp="20201112 12:43:38.891" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23389738, 'wakeups': [23399773, 23409773, 23419773, 23429773, 23439773...</msg>
<status status="PASS" starttime="20201112 12:43:36.793" endtime="20201112 12:43:38.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.897" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23389738, 'wakeups': [23399773, 23409773, 23419773, 23429773, 23439773...</msg>
<status status="PASS" starttime="20201112 12:43:38.893" endtime="20201112 12:43:38.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.899" endtime="20201112 12:43:38.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.791" endtime="20201112 12:43:38.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.789" endtime="20201112 12:43:38.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.910" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'start-time': 23389738, 'wakeups': [23399773, 23409773, 23419773, 23429773, 23439773, 23449773, 23459773, 23469773, 23479773, 23489773, 23499773, 23509773, ...</msg>
<status status="PASS" starttime="20201112 12:43:38.906" endtime="20201112 12:43:38.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.919" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:38.917" endtime="20201112 12:43:38.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.923" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:38.921" endtime="20201112 12:43:38.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.912" endtime="20201112 12:43:38.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.933" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:38.931" endtime="20201112 12:43:38.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.937" level="INFO">VALUE: 23389738</msg>
<status status="PASS" starttime="20201112 12:43:38.935" endtime="20201112 12:43:38.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.926" endtime="20201112 12:43:38.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.947" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:38.945" endtime="20201112 12:43:38.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.951" level="INFO">VALUE: [23399773, 23409773, 23419773, 23429773, 23439773, 23449773, 23459773, 23469773, 23479773, 23489773, 23499773, 23509773, 23519773, 23529773, 23539773, 23549773, 23559773, 23569773, 23579773, 23589773, 23599773, 23609773, 23619773, 23629773, 23639773, 23649773, 23659773, 23669773, 23679773, 23689773, 23699773, 23709773, 23719773, 23729773, 23739773, 23749773, 23759773, 23769773, 23779773, 23789773, 23799773, 23809773, 23819773, 23829773, 23839773, 23849773, 23859773, 23869773, 23879773, 23889773, 23899773, 23909773, 23919773, 23929773, 23939773, 23949773, 23959773, 23969773, 23979773, 23989773, 23999773, 24009773, 24019773, 24029773, 24039773, 24049773, 24059773, 24069773, 24079773, 24089773, 24099773, 24109773, 24119773, 24129773, 24139773, 24149773, 24159773, 24169773, 24179773, 24189773, 24199773, 24209773, 24219773, 24229773, 24239773, 24249773, 24259773, 24269773, 24279773, 24289773, 24299773, 24309773, 24319773, 24329773, 24339773, 24349773, 24359773, 24369773, 24379773, 24389773]</msg>
<status status="PASS" starttime="20201112 12:43:38.950" endtime="20201112 12:43:38.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.940" endtime="20201112 12:43:38.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.963" endtime="20201112 12:43:39.254"></status>
</kw>
<msg timestamp="20201112 12:43:39.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031917528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.962" endtime="20201112 12:43:39.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031917528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.258" endtime="20201112 12:43:39.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.265" endtime="20201112 12:43:39.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.959" endtime="20201112 12:43:39.268"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.957" endtime="20201112 12:43:39.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.292" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:39.269" endtime="20201112 12:43:39.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.297" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:39.296" endtime="20201112 12:43:39.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.299" level="INFO">VALUE: 0.021880819</msg>
<status status="PASS" starttime="20201112 12:43:39.298" endtime="20201112 12:43:39.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.293" endtime="20201112 12:43:39.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.304" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:39.303" endtime="20201112 12:43:39.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.306" level="INFO">VALUE: [0.031917528, 0.041918389, 0.051919347, 0.061920236, 0.071921153, 0.081922083, 0.091923, 0.101923917, 0.111924861, 0.121925764, 0.131926681, 0.141927611, 0.151928542, 0.161929444, 0.171930389, 0.181931278, 0.191932208, 0.201933139, 0.211934056, 0.221934972, 0.231935903, 0.241936806, 0.251937722, 0.261938667, 0.271939583, 0.281940486, 0.291941431, 0.301942361, 0.31194325, 0.321944181, 0.331945097, 0.341946028, 0.351946931, 0.361947875, 0.371948806, 0.381949722, 0.391950625, 0.401951542, 0.411952472, 0.421953389, 0.431954306, 0.44195525, 0.451956167, 0.461957083, 0.471958014, 0.481958931, 0.491959833, 0.501960764, 0.511961681, 0.521962597, 0.531963542, 0.541964472, 0.551965389, 0.561966306, 0.571967208, 0.581968139, 0.591969056, 0.601969986, 0.611970903, 0.621971819, 0.631972778, 0.641973681, 0.651974583, 0.661975528, 0.671976458, 0.681977389, 0.691978278, 0.701979208, 0.711980111, 0.721981042, 0.731981958, 0.741982917, 0.751983806, 0.761984736, 0.771985653, 0.781986569, 0.7919875, 0.801988486, 0.811989333, 0.821990264, 0.831991194, 0.841992097, 0.851993028, 0.861993958, 0.871994875, 0.881995792, 0.891996722, 0.901997639, 0.911998583, 0.921999486, 0.932000403, 0.942001319, 0.95200225, 0.962003167, 0.972004083, 0.982005028, 0.992005931, 1.002006861, 1.012007792, 1.022008708] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:39.305" endtime="20201112 12:43:39.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.300" endtime="20201112 12:43:39.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.309" endtime="20201112 12:43:39.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.313" endtime="20201112 12:43:39.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.311" endtime="20201112 12:43:39.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.308" endtime="20201112 12:43:39.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.788" endtime="20201112 12:43:39.333"></status>
</kw>
<msg timestamp="20201112 12:43:39.334" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.342" endtime="20201112 12:43:41.435"></status>
</kw>
<msg timestamp="20201112 12:43:41.436" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25936101, 'wakeups': [25946136, 25956136, 25966136, 25976136, 25986136...</msg>
<status status="PASS" starttime="20201112 12:43:39.340" endtime="20201112 12:43:41.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.442" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25936101, 'wakeups': [25946136, 25956136, 25966136, 25976136, 25986136...</msg>
<status status="PASS" starttime="20201112 12:43:41.439" endtime="20201112 12:43:41.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.445" endtime="20201112 12:43:41.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.338" endtime="20201112 12:43:41.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.336" endtime="20201112 12:43:41.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.456" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'start-time': 25936101, 'wakeups': [25946136, 25956136, 25966136, 25976136, 25986136, 25996136, 26006136, 26016136, 26026136, 26036136, 26046136, 26056136, ...</msg>
<status status="PASS" starttime="20201112 12:43:41.452" endtime="20201112 12:43:41.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.465" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:41.463" endtime="20201112 12:43:41.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.470" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:41.468" endtime="20201112 12:43:41.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.458" endtime="20201112 12:43:41.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.481" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:41.479" endtime="20201112 12:43:41.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.488" level="INFO">VALUE: 25936101</msg>
<status status="PASS" starttime="20201112 12:43:41.486" endtime="20201112 12:43:41.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.473" endtime="20201112 12:43:41.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.498" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:41.496" endtime="20201112 12:43:41.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.502" level="INFO">VALUE: [25946136, 25956136, 25966136, 25976136, 25986136, 25996136, 26006136, 26016136, 26026136, 26036136, 26046136, 26056136, 26066136, 26076136, 26086136, 26096136, 26106136, 26116136, 26126136, 26136136, 26146136, 26156136, 26166136, 26176136, 26186136, 26196136, 26206136, 26216136, 26226136, 26236136, 26246136, 26256136, 26266136, 26276136, 26286136, 26296136, 26306136, 26316136, 26326136, 26336136, 26346136, 26356136, 26366136, 26376136, 26386136, 26396136, 26406136, 26416136, 26426136, 26436136, 26446136, 26456136, 26466136, 26476136, 26486136, 26496136, 26506136, 26516136, 26526136, 26536136, 26546136, 26556136, 26566136, 26576136, 26586136, 26596136, 26606136, 26616136, 26626136, 26636136, 26646136, 26656136, 26666136, 26676136, 26686136, 26696136, 26706136, 26716136, 26726136, 26736136, 26746136, 26756136, 26766136, 26776136, 26786136, 26796136, 26806136, 26816136, 26826136, 26836136, 26846136, 26856136, 26866136, 26876136, 26886136, 26896136, 26906136, 26916136, 26926136, 26936136]</msg>
<status status="PASS" starttime="20201112 12:43:41.500" endtime="20201112 12:43:41.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.491" endtime="20201112 12:43:41.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.509" endtime="20201112 12:43:41.801"></status>
</kw>
<msg timestamp="20201112 12:43:41.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028827431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.507" endtime="20201112 12:43:41.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028827431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.805" endtime="20201112 12:43:41.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.812" endtime="20201112 12:43:41.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.505" endtime="20201112 12:43:41.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.503" endtime="20201112 12:43:41.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.840" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:41.816" endtime="20201112 12:43:41.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.844" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:41.843" endtime="20201112 12:43:41.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.846" level="INFO">VALUE: 0.018790681</msg>
<status status="PASS" starttime="20201112 12:43:41.845" endtime="20201112 12:43:41.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.841" endtime="20201112 12:43:41.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.852" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:41.851" endtime="20201112 12:43:41.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.854" level="INFO">VALUE: [0.028827431, 0.038828292, 0.048829292, 0.058830153, 0.068831069, 0.078831986, 0.088832917, 0.098833847, 0.10883475, 0.118835667, 0.128836653, 0.138837528, 0.148838514, 0.158839361, 0.168840264, 0.178841222, 0.188842125, 0.198843028, 0.208843958, 0.218844889, 0.228845792, 0.238846708, 0.248847639, 0.258848556, 0.268849472, 0.278850403, 0.288851319, 0.29885225, 0.308853181, 0.318854083, 0.328855014, 0.338855944, 0.348856847, 0.358857792, 0.36885875, 0.378859625, 0.388860528, 0.398861472, 0.408862389, 0.418863292, 0.428864236, 0.438865153, 0.448866056, 0.458866986, 0.468867903, 0.478868819, 0.48886975, 0.498870667, 0.508871583, 0.518872514, 0.528873458, 0.538874347, 0.548875292, 0.558876236, 0.568877111, 0.578878042, 0.588878986, 0.598879903, 0.608880806, 0.618881722, 0.628882653, 0.638883569, 0.648884583, 0.658885417, 0.668886333, 0.678887264, 0.688888181, 0.698889097, 0.708890028, 0.718890944, 0.728891875, 0.738892792, 0.748893708, 0.758894639, 0.768895556, 0.778896472, 0.788897444, 0.798898333, 0.808899264, 0.818900167, 0.828901097, 0.838902014, 0.848902944, 0.858903861, 0.868904792, 0.878905708, 0.888906681, 0.898907542, 0.908908458, 0.918909444, 0.928910306, 0.938911236, 0.948912181, 0.958913069, 0.968914, 0.978914958, 0.988915847, 0.998916764, 1.008917681, 1.018918611] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:41.853" endtime="20201112 12:43:41.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.848" endtime="20201112 12:43:41.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.858" endtime="20201112 12:43:41.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.861" endtime="20201112 12:43:41.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.860" endtime="20201112 12:43:41.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.856" endtime="20201112 12:43:41.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.334" endtime="20201112 12:43:41.882"></status>
</kw>
<msg timestamp="20201112 12:43:41.882" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.890" endtime="20201112 12:43:43.983"></status>
</kw>
<msg timestamp="20201112 12:43:43.985" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28484075, 'wakeups': [28494111, 28504110, 28514110, 28524110, 28534110...</msg>
<status status="PASS" starttime="20201112 12:43:41.889" endtime="20201112 12:43:43.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.991" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28484075, 'wakeups': [28494111, 28504110, 28514110, 28524110, 28534110...</msg>
<status status="PASS" starttime="20201112 12:43:43.987" endtime="20201112 12:43:43.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.993" endtime="20201112 12:43:43.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.886" endtime="20201112 12:43:43.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.884" endtime="20201112 12:43:43.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.004" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'start-time': 28484075, 'wakeups': [28494111, 28504110, 28514110, 28524110, 28534110, 28544110, 28554110, 28564110, 28574110, 28584110, 28594110, 28604110, ...</msg>
<status status="PASS" starttime="20201112 12:43:44.000" endtime="20201112 12:43:44.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.017" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:44.015" endtime="20201112 12:43:44.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.022" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:44.020" endtime="20201112 12:43:44.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.006" endtime="20201112 12:43:44.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.032" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:44.030" endtime="20201112 12:43:44.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.036" level="INFO">VALUE: 28484075</msg>
<status status="PASS" starttime="20201112 12:43:44.034" endtime="20201112 12:43:44.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.025" endtime="20201112 12:43:44.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.047" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:44.045" endtime="20201112 12:43:44.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.051" level="INFO">VALUE: [28494111, 28504110, 28514110, 28524110, 28534110, 28544110, 28554110, 28564110, 28574110, 28584110, 28594110, 28604110, 28614110, 28624110, 28634110, 28644110, 28654110, 28664110, 28674110, 28684110, 28694110, 28704110, 28714110, 28724110, 28734110, 28744110, 28754110, 28764110, 28774110, 28784110, 28794110, 28804110, 28814110, 28824110, 28834110, 28844110, 28854110, 28864110, 28874110, 28884110, 28894110, 28904110, 28914110, 28924110, 28934110, 28944110, 28954110, 28964110, 28974110, 28984110, 28994110, 29004110, 29014110, 29024110, 29034110, 29044110, 29054110, 29064110, 29074110, 29084110, 29094110, 29104110, 29114110, 29124110, 29134110, 29144110, 29154110, 29164110, 29174110, 29184110, 29194110, 29204110, 29214110, 29224110, 29234110, 29244110, 29254110, 29264110, 29274110, 29284110, 29294110, 29304110, 29314110, 29324110, 29334110, 29344110, 29354110, 29364110, 29374110, 29384110, 29394110, 29404110, 29414110, 29424110, 29434110, 29444110, 29454110, 29464110, 29474110, 29484110]</msg>
<status status="PASS" starttime="20201112 12:43:44.049" endtime="20201112 12:43:44.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.040" endtime="20201112 12:43:44.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.067" endtime="20201112 12:43:44.360"></status>
</kw>
<msg timestamp="20201112 12:43:44.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018319736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028356, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:44.064" endtime="20201112 12:43:44.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018319736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028356, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:44.364" endtime="20201112 12:43:44.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.372" endtime="20201112 12:43:44.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.058" endtime="20201112 12:43:44.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.055" endtime="20201112 12:43:44.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.398" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:44.375" endtime="20201112 12:43:44.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.402" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:44.401" endtime="20201112 12:43:44.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.404" level="INFO">VALUE: 0.018319736</msg>
<status status="PASS" starttime="20201112 12:43:44.403" endtime="20201112 12:43:44.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.399" endtime="20201112 12:43:44.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.410" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:44.409" endtime="20201112 12:43:44.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.412" level="INFO">VALUE: [0.028356, 0.038356833, 0.04835775, 0.058358667, 0.068359583, 0.078360514, 0.088361431, 0.098362361, 0.108363264, 0.118364181, 0.128365111, 0.138366028, 0.148366958, 0.158367861, 0.168368778, 0.178369722, 0.188370625, 0.198371542, 0.208372458, 0.218373403, 0.228374333, 0.238375222, 0.248376153, 0.258377069, 0.268377986, 0.278378903, 0.288379833, 0.29838075, 0.308381681, 0.318382611, 0.328383514, 0.338384431, 0.348385361, 0.358386278, 0.368387194, 0.378388139, 0.388389056, 0.398389958, 0.408390889, 0.418391819, 0.428392722, 0.438393667, 0.448394569, 0.458395569, 0.468396417, 0.478397333, 0.488398278, 0.498399194, 0.508400111, 0.518401042, 0.528401944, 0.538402958, 0.548403792, 0.558404722, 0.568405653, 0.578406569, 0.588407486, 0.598408444, 0.608409319, 0.61841025, 0.628411167, 0.638412083, 0.648413042, 0.658413972, 0.668414847, 0.678415819, 0.688416722, 0.698417597, 0.708418528, 0.718419444, 0.728420403, 0.738421292, 0.748422208, 0.758423125, 0.768424042, 0.778424972, 0.788425903, 0.798426806, 0.808427722, 0.818428639, 0.828429569, 0.838430486, 0.848431417, 0.858432319, 0.868433319, 0.878434167, 0.888435097, 0.898436014, 0.908436931, 0.918437847, 0.928438778, 0.938439708, 0.948440611, 0.958441528, 0.968442458, 0.978443375, 0.988444306, 0.998445208, 1.008446139, 1.018447056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:44.411" endtime="20201112 12:43:44.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.406" endtime="20201112 12:43:44.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.415" endtime="20201112 12:43:44.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:44.419" endtime="20201112 12:43:44.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.417" endtime="20201112 12:43:44.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.414" endtime="20201112 12:43:44.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.883" endtime="20201112 12:43:44.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.786" endtime="20201112 12:43:44.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.785" endtime="20201112 12:43:44.440"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:44.443" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.452" endtime="20201112 12:43:46.545"></status>
</kw>
<msg timestamp="20201112 12:43:46.546" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31045511, 'wakeups': [31055557, 31065558, 31075557, 31085557, 31095557...</msg>
<status status="PASS" starttime="20201112 12:43:44.450" endtime="20201112 12:43:46.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.552" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31045511, 'wakeups': [31055557, 31065558, 31075557, 31085557, 31095557...</msg>
<status status="PASS" starttime="20201112 12:43:46.549" endtime="20201112 12:43:46.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.555" endtime="20201112 12:43:46.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.446" endtime="20201112 12:43:46.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.445" endtime="20201112 12:43:46.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.566" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'start-time': 31045511, 'wakeups': [31055557, 31065558, 31075557, 31085557, 31095557, 31105557, 31115557, 31125557, 31135557, 31145557, 31155557, 31165557, ...</msg>
<status status="PASS" starttime="20201112 12:43:46.562" endtime="20201112 12:43:46.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.574" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:46.572" endtime="20201112 12:43:46.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.579" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:46.576" endtime="20201112 12:43:46.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.567" endtime="20201112 12:43:46.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.590" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:43:46.587" endtime="20201112 12:43:46.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.594" level="INFO">VALUE: 31045511</msg>
<status status="PASS" starttime="20201112 12:43:46.592" endtime="20201112 12:43:46.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.582" endtime="20201112 12:43:46.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.606" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:46.603" endtime="20201112 12:43:46.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.611" level="INFO">VALUE: [31055557, 31065558, 31075557, 31085557, 31095557, 31105557, 31115557, 31125557, 31135557, 31145557, 31155557, 31165557, 31175557, 31185557, 31195557, 31205557, 31215557, 31225557, 31235557, 31245557, 31255557, 31265557, 31275557, 31285557, 31295557, 31305557, 31315557, 31325557, 31335557, 31345557, 31355557, 31365557, 31375557, 31385557, 31395557, 31405557, 31415557, 31425557, 31435557, 31445557, 31455557, 31465557, 31475557, 31485557, 31495557, 31505557, 31515557, 31525557, 31535557, 31545557, 31555557, 31565557, 31575557, 31585557, 31595557, 31605557, 31615557, 31625557, 31635557, 31645557, 31655557, 31665557, 31675557, 31685557, 31695557, 31705557, 31715557, 31725557, 31735557, 31745557, 31755557, 31765557, 31775557, 31785557, 31795557, 31805557, 31815557, 31825557, 31835557, 31845557, 31855557, 31865557, 31875557, 31885557, 31895557, 31905557, 31915557, 31925557, 31935557, 31945557, 31955557, 31965557, 31975557, 31985557, 31995557, 32005557, 32015557, 32025557, 32035557, 32045557]</msg>
<status status="PASS" starttime="20201112 12:43:46.608" endtime="20201112 12:43:46.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.597" endtime="20201112 12:43:46.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.620" endtime="20201112 12:43:46.910"></status>
</kw>
<msg timestamp="20201112 12:43:46.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032080139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.618" endtime="20201112 12:43:46.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022032847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032080139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.913" endtime="20201112 12:43:46.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.921" endtime="20201112 12:43:46.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.615" endtime="20201112 12:43:46.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.614" endtime="20201112 12:43:46.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.949" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:46.924" endtime="20201112 12:43:46.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.953" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:43:46.952" endtime="20201112 12:43:46.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.955" level="INFO">VALUE: 0.022032847</msg>
<status status="PASS" starttime="20201112 12:43:46.954" endtime="20201112 12:43:46.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.950" endtime="20201112 12:43:46.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.961" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:46.960" endtime="20201112 12:43:46.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.963" level="INFO">VALUE: [0.032080139, 0.042081958, 0.052081861, 0.062082778, 0.072083708, 0.082084639, 0.092085542, 0.102086472, 0.112087375, 0.122088306, 0.132089222, 0.142090139, 0.152091056, 0.162091986, 0.172092903, 0.182093875, 0.192094778, 0.202095694, 0.212096583, 0.222097528, 0.232098444, 0.242099347, 0.252100264, 0.262101194, 0.272102125, 0.282103028, 0.292103958, 0.302104875, 0.312105806, 0.322106736, 0.332107639, 0.342108556, 0.352109486, 0.362110403, 0.372111333, 0.38211225, 0.392113167, 0.402114083, 0.412115028, 0.422115944, 0.432116847, 0.442117778, 0.452118694, 0.462119611, 0.472120542, 0.482121458, 0.492122375, 0.502123306, 0.512124222, 0.522125208, 0.532126069, 0.542126986, 0.552127917, 0.562128833, 0.572129764, 0.582130681, 0.592131611, 0.602132528, 0.612133458, 0.622134375, 0.632135292, 0.642136208, 0.652137139, 0.662138069, 0.672138972, 0.682139903, 0.692140819, 0.702141736, 0.712142667, 0.722143611, 0.732144528, 0.742145486, 0.752146347, 0.762147319, 0.772148194, 0.782149208, 0.792150056, 0.802150986, 0.812151889, 0.822152806, 0.832153736, 0.842154653, 0.852155569, 0.862156514, 0.872157431, 0.882158333, 0.892159264, 0.902160181, 0.912161125, 0.922162028, 0.932162958, 0.942163875, 0.952164806, 0.962165708, 0.972166639, 0.982167569, 0.992168542, 1.002169417, 1.012170389, 1.022171264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:46.962" endtime="20201112 12:43:46.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.957" endtime="20201112 12:43:46.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.966" endtime="20201112 12:43:46.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:46.970" endtime="20201112 12:43:46.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.968" endtime="20201112 12:43:46.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.964" endtime="20201112 12:43:46.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.443" endtime="20201112 12:43:46.990"></status>
</kw>
<msg timestamp="20201112 12:43:46.991" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.999" endtime="20201112 12:43:49.093"></status>
</kw>
<msg timestamp="20201112 12:43:49.095" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33592762, 'wakeups': [33602808, 33612809, 33622808, 33632808, 33642808...</msg>
<status status="PASS" starttime="20201112 12:43:46.997" endtime="20201112 12:43:49.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.100" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33592762, 'wakeups': [33602808, 33612809, 33622808, 33632808, 33642808...</msg>
<status status="PASS" starttime="20201112 12:43:49.097" endtime="20201112 12:43:49.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.103" endtime="20201112 12:43:49.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.995" endtime="20201112 12:43:49.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.993" endtime="20201112 12:43:49.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.114" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'start-time': 33592762, 'wakeups': [33602808, 33612809, 33622808, 33632808, 33642808, 33652808, 33662808, 33672808, 33682808, 33692808, 33702808, 33712808, ...</msg>
<status status="PASS" starttime="20201112 12:43:49.110" endtime="20201112 12:43:49.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.122" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:49.120" endtime="20201112 12:43:49.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.127" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:49.125" endtime="20201112 12:43:49.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.115" endtime="20201112 12:43:49.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.139" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:43:49.137" endtime="20201112 12:43:49.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.144" level="INFO">VALUE: 33592762</msg>
<status status="PASS" starttime="20201112 12:43:49.142" endtime="20201112 12:43:49.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.130" endtime="20201112 12:43:49.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.154" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:49.152" endtime="20201112 12:43:49.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.158" level="INFO">VALUE: [33602808, 33612809, 33622808, 33632808, 33642808, 33652808, 33662808, 33672808, 33682808, 33692808, 33702808, 33712808, 33722808, 33732808, 33742808, 33752808, 33762808, 33772808, 33782808, 33792808, 33802808, 33812808, 33822808, 33832808, 33842808, 33852808, 33862808, 33872808, 33882808, 33892808, 33902808, 33912808, 33922808, 33932808, 33942808, 33952808, 33962808, 33972808, 33982808, 33992808, 34002808, 34012808, 34022808, 34032808, 34042808, 34052808, 34062808, 34072808, 34082808, 34092808, 34102808, 34112808, 34122808, 34132808, 34142808, 34152808, 34162808, 34172808, 34182808, 34192808, 34202808, 34212808, 34222808, 34232808, 34242808, 34252808, 34262808, 34272808, 34282808, 34292808, 34302808, 34312808, 34322808, 34332808, 34342808, 34352808, 34362808, 34372808, 34382808, 34392808, 34402808, 34412808, 34422808, 34432808, 34442808, 34452808, 34462808, 34472808, 34482808, 34492808, 34502808, 34512808, 34522808, 34532808, 34542808, 34552808, 34562808, 34572808, 34582808, 34592808]</msg>
<status status="PASS" starttime="20201112 12:43:49.156" endtime="20201112 12:43:49.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.147" endtime="20201112 12:43:49.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.183" endtime="20201112 12:43:49.475"></status>
</kw>
<msg timestamp="20201112 12:43:49.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018426972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028474431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.171" endtime="20201112 12:43:49.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018426972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028474431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.479" endtime="20201112 12:43:49.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.486" endtime="20201112 12:43:49.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.165" endtime="20201112 12:43:49.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.162" endtime="20201112 12:43:49.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.512" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:49.490" endtime="20201112 12:43:49.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.517" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:43:49.516" endtime="20201112 12:43:49.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.519" level="INFO">VALUE: 0.018426972</msg>
<status status="PASS" starttime="20201112 12:43:49.518" endtime="20201112 12:43:49.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.513" endtime="20201112 12:43:49.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.525" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:49.524" endtime="20201112 12:43:49.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.527" level="INFO">VALUE: [0.028474431, 0.038476222, 0.048476153, 0.058477069, 0.068477986, 0.078478917, 0.088479861, 0.09848075, 0.108481681, 0.118482611, 0.128483514, 0.138484444, 0.148485347, 0.158486264, 0.168487194, 0.178488139, 0.188489056, 0.198489944, 0.208490875, 0.218491806, 0.228492708, 0.238493694, 0.248494556, 0.258495472, 0.268496403, 0.278497306, 0.288498236, 0.298499167, 0.308500069, 0.318501, 0.328501958, 0.338502833, 0.348503764, 0.358504708, 0.368505597, 0.378506514, 0.388507444, 0.398508361, 0.408509292, 0.418510194, 0.428511139, 0.438512042, 0.448512958, 0.458513875, 0.468514806, 0.478515722, 0.488516694, 0.498517569, 0.508518486, 0.518519417, 0.528520333, 0.53852125, 0.548522181, 0.558523083, 0.568524014, 0.578524931, 0.588525875, 0.598526778, 0.608527694, 0.618528667, 0.628529542, 0.638530458, 0.648531375, 0.658532306, 0.668533278, 0.678534139, 0.688535069, 0.698536, 0.708536903, 0.718537847, 0.728538764, 0.738539667, 0.748540597, 0.758541528, 0.768542472, 0.778543361, 0.788544278, 0.798545194, 0.808546139, 0.818547042, 0.828547972, 0.838548889, 0.848549819, 0.858550736, 0.868551653, 0.878552569, 0.8885535, 0.898554444, 0.908555333, 0.918556278, 0.928557194, 0.938558111, 0.948559014, 0.958559944, 0.968560875, 0.978561806, 0.988562722, 0.998563653, 1.008564569, 1.018565472] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:49.526" endtime="20201112 12:43:49.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.521" endtime="20201112 12:43:49.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.531" endtime="20201112 12:43:49.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.534" endtime="20201112 12:43:49.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.533" endtime="20201112 12:43:49.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.529" endtime="20201112 12:43:49.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.991" endtime="20201112 12:43:49.555"></status>
</kw>
<msg timestamp="20201112 12:43:49.555" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.563" endtime="20201112 12:43:51.657"></status>
</kw>
<msg timestamp="20201112 12:43:51.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36156989, 'wakeups': [36167035, 36177036, 36187035, 36197035, 36207035...</msg>
<status status="PASS" starttime="20201112 12:43:49.562" endtime="20201112 12:43:51.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.665" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36156989, 'wakeups': [36167035, 36177036, 36187035, 36197035, 36207035...</msg>
<status status="PASS" starttime="20201112 12:43:51.661" endtime="20201112 12:43:51.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.667" endtime="20201112 12:43:51.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.559" endtime="20201112 12:43:51.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.557" endtime="20201112 12:43:51.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.679" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'start-time': 36156989, 'wakeups': [36167035, 36177036, 36187035, 36197035, 36207035, 36217035, 36227035, 36237035, 36247035, 36257035, 36267035, 36277035, ...</msg>
<status status="PASS" starttime="20201112 12:43:51.675" endtime="20201112 12:43:51.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.687" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:51.685" endtime="20201112 12:43:51.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.692" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:51.690" endtime="20201112 12:43:51.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.681" endtime="20201112 12:43:51.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.703" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:43:51.701" endtime="20201112 12:43:51.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.708" level="INFO">VALUE: 36156989</msg>
<status status="PASS" starttime="20201112 12:43:51.705" endtime="20201112 12:43:51.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.695" endtime="20201112 12:43:51.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.719" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:51.716" endtime="20201112 12:43:51.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.724" level="INFO">VALUE: [36167035, 36177036, 36187035, 36197035, 36207035, 36217035, 36227035, 36237035, 36247035, 36257035, 36267035, 36277035, 36287035, 36297035, 36307035, 36317035, 36327035, 36337035, 36347035, 36357035, 36367035, 36377035, 36387035, 36397035, 36407035, 36417035, 36427035, 36437035, 36447035, 36457035, 36467035, 36477035, 36487035, 36497035, 36507035, 36517035, 36527035, 36537035, 36547035, 36557035, 36567035, 36577035, 36587035, 36597035, 36607035, 36617035, 36627035, 36637035, 36647035, 36657035, 36667035, 36677035, 36687035, 36697035, 36707035, 36717035, 36727035, 36737035, 36747035, 36757035, 36767035, 36777035, 36787035, 36797035, 36807035, 36817035, 36827035, 36837035, 36847035, 36857035, 36867035, 36877035, 36887035, 36897035, 36907035, 36917035, 36927035, 36937035, 36947035, 36957035, 36967035, 36977035, 36987035, 36997035, 37007035, 37017035, 37027035, 37037035, 37047035, 37057035, 37067035, 37077035, 37087035, 37097035, 37107035, 37117035, 37127035, 37137035, 37147035, 37157035]</msg>
<status status="PASS" starttime="20201112 12:43:51.721" endtime="20201112 12:43:51.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.711" endtime="20201112 12:43:51.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.739" endtime="20201112 12:43:52.036"></status>
</kw>
<msg timestamp="20201112 12:43:52.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018308708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028356097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.736" endtime="20201112 12:43:52.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018308708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028356097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:52.040" endtime="20201112 12:43:52.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.048" endtime="20201112 12:43:52.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.730" endtime="20201112 12:43:52.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.727" endtime="20201112 12:43:52.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.074" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:52.051" endtime="20201112 12:43:52.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.079" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:43:52.078" endtime="20201112 12:43:52.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.081" level="INFO">VALUE: 0.018308708</msg>
<status status="PASS" starttime="20201112 12:43:52.080" endtime="20201112 12:43:52.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.075" endtime="20201112 12:43:52.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.086" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:52.085" endtime="20201112 12:43:52.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.088" level="INFO">VALUE: [0.028356097, 0.038357889, 0.048357819, 0.058358764, 0.068359667, 0.078360597, 0.088361514, 0.098362431, 0.108363347, 0.118364306, 0.12836525, 0.138366111, 0.148367056, 0.158367958, 0.168368875, 0.178369833, 0.188370722, 0.198371639, 0.208372569, 0.218373486, 0.228374403, 0.238375333, 0.24837625, 0.258377167, 0.268378097, 0.278379014, 0.288379958, 0.298380861, 0.308381778, 0.318382708, 0.328383694, 0.338384542, 0.348385458, 0.358386431, 0.368387319, 0.378388236, 0.388389167, 0.398390097, 0.408391, 0.418391917, 0.428392903, 0.438393764, 0.448394694, 0.458395639, 0.468396528, 0.478397444, 0.488398389, 0.498399306, 0.508400222, 0.518401167, 0.528402056, 0.538402986, 0.548403903, 0.558404819, 0.568405764, 0.578406667, 0.588407597, 0.598408514, 0.608409486, 0.618410389, 0.628411278, 0.638412208, 0.648413153, 0.658414069, 0.668414972, 0.678415889, 0.688416833, 0.69841775, 0.708418722, 0.718419583, 0.7284205, 0.738421417, 0.748422333, 0.75842325, 0.768424167, 0.778425097, 0.788426014, 0.798426931, 0.808427917, 0.818428778, 0.828429694, 0.838430611, 0.848431569, 0.858432458, 0.868433375, 0.878434306, 0.888435222, 0.898436139, 0.908437056, 0.918437986, 0.928438917, 0.938439847, 0.948440764, 0.958441653, 0.968442597, 0.9784435, 0.988444417, 0.998445403, 1.008446264, 1.018447181] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:52.087" endtime="20201112 12:43:52.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.082" endtime="20201112 12:43:52.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.091" endtime="20201112 12:43:52.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.095" endtime="20201112 12:43:52.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.093" endtime="20201112 12:43:52.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.090" endtime="20201112 12:43:52.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.556" endtime="20201112 12:43:52.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.441" endtime="20201112 12:43:52.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.440" endtime="20201112 12:43:52.116"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:52.119" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.128" endtime="20201112 12:43:54.222"></status>
</kw>
<msg timestamp="20201112 12:43:54.223" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38722185, 'wakeups': [38732243, 38742243, 38752243, 38762243, 38772243...</msg>
<status status="PASS" starttime="20201112 12:43:52.127" endtime="20201112 12:43:54.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.229" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38722185, 'wakeups': [38732243, 38742243, 38752243, 38762243, 38772243...</msg>
<status status="PASS" starttime="20201112 12:43:54.225" endtime="20201112 12:43:54.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.232" endtime="20201112 12:43:54.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.123" endtime="20201112 12:43:54.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.121" endtime="20201112 12:43:54.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.243" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'start-time': 38722185, 'wakeups': [38732243, 38742243, 38752243, 38762243, 38772243, 38782243, 38792243, 38802243, 38812243, 38822243, 38832243, 38842243, ...</msg>
<status status="PASS" starttime="20201112 12:43:54.239" endtime="20201112 12:43:54.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.257" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:54.250" endtime="20201112 12:43:54.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.261" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:54.259" endtime="20201112 12:43:54.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.245" endtime="20201112 12:43:54.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.272" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:43:54.269" endtime="20201112 12:43:54.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.276" level="INFO">VALUE: 38722185</msg>
<status status="PASS" starttime="20201112 12:43:54.274" endtime="20201112 12:43:54.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.264" endtime="20201112 12:43:54.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.286" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:54.284" endtime="20201112 12:43:54.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.291" level="INFO">VALUE: [38732243, 38742243, 38752243, 38762243, 38772243, 38782243, 38792243, 38802243, 38812243, 38822243, 38832243, 38842243, 38852243, 38862243, 38872243, 38882243, 38892243, 38902243, 38912243, 38922243, 38932243, 38942243, 38952243, 38962243, 38972243, 38982243, 38992243, 39002243, 39012243, 39022243, 39032243, 39042243, 39052243, 39062243, 39072243, 39082243, 39092243, 39102243, 39112243, 39122243, 39132243, 39142243, 39152243, 39162243, 39172243, 39182243, 39192243, 39202243, 39212243, 39222243, 39232243, 39242243, 39252243, 39262243, 39272243, 39282243, 39292243, 39302243, 39312243, 39322243, 39332243, 39342243, 39352243, 39362243, 39372243, 39382243, 39392243, 39402243, 39412243, 39422243, 39432243, 39442243, 39452243, 39462243, 39472243, 39482243, 39492243, 39502243, 39512243, 39522243, 39532243, 39542243, 39552243, 39562243, 39572243, 39582243, 39592243, 39602243, 39612243, 39622243, 39632243, 39642243, 39652243, 39662243, 39672243, 39682243, 39692243, 39702243, 39712243, 39722243]</msg>
<status status="PASS" starttime="20201112 12:43:54.288" endtime="20201112 12:43:54.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.279" endtime="20201112 12:43:54.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.306" endtime="20201112 12:43:54.599"></status>
</kw>
<msg timestamp="20201112 12:43:54.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032849986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.303" endtime="20201112 12:43:54.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022791389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032849986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.603" endtime="20201112 12:43:54.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.610" endtime="20201112 12:43:54.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.298" endtime="20201112 12:43:54.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.294" endtime="20201112 12:43:54.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.637" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:54.613" endtime="20201112 12:43:54.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.642" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:43:54.640" endtime="20201112 12:43:54.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.644" level="INFO">VALUE: 0.022791389</msg>
<status status="PASS" starttime="20201112 12:43:54.643" endtime="20201112 12:43:54.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.638" endtime="20201112 12:43:54.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.649" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:54.648" endtime="20201112 12:43:54.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.651" level="INFO">VALUE: [0.032849986, 0.042851514, 0.052852431, 0.062853361, 0.072854319, 0.082855194, 0.092856111, 0.102857042, 0.112857958, 0.122858917, 0.132859806, 0.142860736, 0.152861639, 0.162862556, 0.172863486, 0.182864431, 0.192865333, 0.20286625, 0.212867181, 0.222868125, 0.232869014, 0.242869944, 0.252870847, 0.262871764, 0.272872694, 0.282873625, 0.292874569, 0.302875514, 0.312876389, 0.322877319, 0.332878236, 0.342879139, 0.352880056, 0.362880986, 0.372881958, 0.382882833, 0.392883764, 0.402884681, 0.412885583, 0.422886514, 0.432887458, 0.442888347, 0.452889292, 0.462890194, 0.472891111, 0.482892125, 0.492892972, 0.502893889, 0.512894819, 0.522895722, 0.532896667, 0.542897569, 0.552898486, 0.562899431, 0.572900347, 0.582901264, 0.592902181, 0.602903097, 0.612904069, 0.622904986, 0.632905875, 0.642906792, 0.652907722, 0.662908653, 0.672909556, 0.682910486, 0.692911486, 0.702912319, 0.712913264, 0.722914167, 0.732915083, 0.742916069, 0.752916931, 0.762917861, 0.772918806, 0.782919694, 0.792920625, 0.802921542, 0.812922486, 0.822923403, 0.832924306, 0.842925236, 0.852926153, 0.862927083, 0.872928, 0.882928917, 0.892929861, 0.902930806, 0.912931694, 0.922932611, 0.932933528, 0.942934472, 0.952935389, 0.962936306, 0.972937236, 0.982938139, 0.992939069, 1.00294, 1.012940944, 1.022941847] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:54.650" endtime="20201112 12:43:54.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.645" endtime="20201112 12:43:54.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.655" endtime="20201112 12:43:54.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:54.658" endtime="20201112 12:43:54.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.657" endtime="20201112 12:43:54.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.653" endtime="20201112 12:43:54.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.119" endtime="20201112 12:43:54.679"></status>
</kw>
<msg timestamp="20201112 12:43:54.679" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.688" endtime="20201112 12:43:56.781"></status>
</kw>
<msg timestamp="20201112 12:43:56.782" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41281541, 'wakeups': [41291599, 41301599, 41311599, 41321599, 41331599...</msg>
<status status="PASS" starttime="20201112 12:43:54.686" endtime="20201112 12:43:56.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.788" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41281541, 'wakeups': [41291599, 41301599, 41311599, 41321599, 41331599...</msg>
<status status="PASS" starttime="20201112 12:43:56.785" endtime="20201112 12:43:56.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.791" endtime="20201112 12:43:56.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.683" endtime="20201112 12:43:56.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.681" endtime="20201112 12:43:56.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.802" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'start-time': 41281541, 'wakeups': [41291599, 41301599, 41311599, 41321599, 41331599, 41341599, 41351599, 41361599, 41371599, 41381599, 41391599, 41401599, ...</msg>
<status status="PASS" starttime="20201112 12:43:56.798" endtime="20201112 12:43:56.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.811" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:56.809" endtime="20201112 12:43:56.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.816" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:56.814" endtime="20201112 12:43:56.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.804" endtime="20201112 12:43:56.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.827" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:43:56.825" endtime="20201112 12:43:56.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.834" level="INFO">VALUE: 41281541</msg>
<status status="PASS" starttime="20201112 12:43:56.832" endtime="20201112 12:43:56.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.819" endtime="20201112 12:43:56.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.844" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:56.842" endtime="20201112 12:43:56.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.849" level="INFO">VALUE: [41291599, 41301599, 41311599, 41321599, 41331599, 41341599, 41351599, 41361599, 41371599, 41381599, 41391599, 41401599, 41411599, 41421599, 41431599, 41441599, 41451599, 41461599, 41471599, 41481599, 41491599, 41501599, 41511599, 41521599, 41531599, 41541599, 41551599, 41561599, 41571599, 41581599, 41591599, 41601599, 41611599, 41621599, 41631599, 41641599, 41651599, 41661599, 41671599, 41681599, 41691599, 41701599, 41711599, 41721599, 41731599, 41741599, 41751599, 41761599, 41771599, 41781599, 41791599, 41801599, 41811599, 41821599, 41831599, 41841599, 41851599, 41861599, 41871599, 41881599, 41891599, 41901599, 41911599, 41921599, 41931599, 41941599, 41951599, 41961599, 41971599, 41981599, 41991599, 42001599, 42011599, 42021599, 42031599, 42041599, 42051599, 42061599, 42071599, 42081599, 42091599, 42101599, 42111599, 42121599, 42131599, 42141599, 42151599, 42161599, 42171599, 42181599, 42191599, 42201599, 42211599, 42221599, 42231599, 42241599, 42251599, 42261599, 42271599, 42281599]</msg>
<status status="PASS" starttime="20201112 12:43:56.847" endtime="20201112 12:43:56.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.837" endtime="20201112 12:43:56.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.865" endtime="20201112 12:43:57.159"></status>
</kw>
<msg timestamp="20201112 12:43:57.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018624986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028684889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.862" endtime="20201112 12:43:57.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018624986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028684889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.162" endtime="20201112 12:43:57.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.170" endtime="20201112 12:43:57.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.857" endtime="20201112 12:43:57.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.852" endtime="20201112 12:43:57.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.196" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:57.173" endtime="20201112 12:43:57.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.201" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:43:57.200" endtime="20201112 12:43:57.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.203" level="INFO">VALUE: 0.018624986</msg>
<status status="PASS" starttime="20201112 12:43:57.202" endtime="20201112 12:43:57.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.197" endtime="20201112 12:43:57.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.208" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:57.207" endtime="20201112 12:43:57.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.211" level="INFO">VALUE: [0.028684889, 0.038685639, 0.048686556, 0.058687486, 0.068688403, 0.078689319, 0.088690236, 0.098691167, 0.108692083, 0.118693, 0.128693917, 0.138694903, 0.148695764, 0.158696694, 0.168697639, 0.178698542, 0.188699458, 0.198700375, 0.208701306, 0.218702292, 0.228703125, 0.238704097, 0.248704972, 0.258705903, 0.268706806, 0.278707736, 0.288708653, 0.298709569, 0.3087105, 0.318711458, 0.328712333, 0.338713278, 0.348714194, 0.358715097, 0.368716014, 0.378716944, 0.388717875, 0.398718792, 0.408719736, 0.418720625, 0.428721583, 0.438722472, 0.448723389, 0.458724319, 0.468725236, 0.478726236, 0.488727069, 0.498728028, 0.508728931, 0.518729847, 0.528730764, 0.538731681, 0.548732625, 0.558733542, 0.568734444, 0.578735375, 0.588736292, 0.598737208, 0.608738153, 0.618739056, 0.628739986, 0.638740903, 0.648741847, 0.658742819, 0.668743667, 0.678744653, 0.688745514, 0.698746431, 0.708747347, 0.718748278, 0.728749194, 0.738750139, 0.748751042, 0.758751972, 0.768752889, 0.778753806, 0.788754736, 0.798755667, 0.808756569, 0.8187575, 0.828758431, 0.838759333, 0.848760292, 0.858761194, 0.868762153, 0.878763042, 0.888764, 0.898764889, 0.908765792, 0.918766736, 0.928767639, 0.938768556, 0.948769486, 0.958770417, 0.968771361, 0.97877225, 0.988773167, 0.998774097, 1.008775014, 1.018775958] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:57.210" endtime="20201112 12:43:57.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.204" endtime="20201112 12:43:57.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.214" endtime="20201112 12:43:57.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.218" endtime="20201112 12:43:57.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.216" endtime="20201112 12:43:57.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.213" endtime="20201112 12:43:57.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.680" endtime="20201112 12:43:57.239"></status>
</kw>
<msg timestamp="20201112 12:43:57.239" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.247" endtime="20201112 12:43:59.340"></status>
</kw>
<msg timestamp="20201112 12:43:59.342" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43840943, 'wakeups': [43851001, 43861001, 43871001, 43881001, 43891001...</msg>
<status status="PASS" starttime="20201112 12:43:57.246" endtime="20201112 12:43:59.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.352" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 43840943, 'wakeups': [43851001, 43861001, 43871001, 43881001, 43891001...</msg>
<status status="PASS" starttime="20201112 12:43:59.348" endtime="20201112 12:43:59.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.355" endtime="20201112 12:43:59.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.243" endtime="20201112 12:43:59.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.241" endtime="20201112 12:43:59.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.366" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'start-time': 43840943, 'wakeups': [43851001, 43861001, 43871001, 43881001, 43891001, 43901001, 43911001, 43921001, 43931001, 43941001, 43951001, 43961001, ...</msg>
<status status="PASS" starttime="20201112 12:43:59.362" endtime="20201112 12:43:59.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.374" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:59.372" endtime="20201112 12:43:59.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.379" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:59.377" endtime="20201112 12:43:59.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.367" endtime="20201112 12:43:59.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.389" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:43:59.387" endtime="20201112 12:43:59.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.393" level="INFO">VALUE: 43840943</msg>
<status status="PASS" starttime="20201112 12:43:59.391" endtime="20201112 12:43:59.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.382" endtime="20201112 12:43:59.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.403" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:59.401" endtime="20201112 12:43:59.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.408" level="INFO">VALUE: [43851001, 43861001, 43871001, 43881001, 43891001, 43901001, 43911001, 43921001, 43931001, 43941001, 43951001, 43961001, 43971001, 43981001, 43991001, 44001001, 44011001, 44021001, 44031001, 44041001, 44051001, 44061001, 44071001, 44081001, 44091001, 44101001, 44111001, 44121001, 44131001, 44141001, 44151001, 44161001, 44171001, 44181001, 44191001, 44201001, 44211001, 44221001, 44231001, 44241001, 44251001, 44261001, 44271001, 44281001, 44291001, 44301001, 44311001, 44321001, 44331001, 44341001, 44351001, 44361001, 44371001, 44381001, 44391001, 44401001, 44411001, 44421001, 44431001, 44441001, 44451001, 44461001, 44471001, 44481001, 44491001, 44501001, 44511001, 44521001, 44531001, 44541001, 44551001, 44561001, 44571001, 44581001, 44591001, 44601001, 44611001, 44621001, 44631001, 44641001, 44651001, 44661001, 44671001, 44681001, 44691001, 44701001, 44711001, 44721001, 44731001, 44741001, 44751001, 44761001, 44771001, 44781001, 44791001, 44801001, 44811001, 44821001, 44831001, 44841001]</msg>
<status status="PASS" starttime="20201112 12:43:59.406" endtime="20201112 12:43:59.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.396" endtime="20201112 12:43:59.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.417" endtime="20201112 12:43:59.708"></status>
</kw>
<msg timestamp="20201112 12:43:59.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018381778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028440222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.415" endtime="20201112 12:43:59.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018381778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028440222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:59.712" endtime="20201112 12:43:59.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.720" endtime="20201112 12:43:59.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.413" endtime="20201112 12:43:59.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.411" endtime="20201112 12:43:59.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.746" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:59.723" endtime="20201112 12:43:59.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.751" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:43:59.750" endtime="20201112 12:43:59.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.753" level="INFO">VALUE: 0.018381778</msg>
<status status="PASS" starttime="20201112 12:43:59.752" endtime="20201112 12:43:59.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.747" endtime="20201112 12:43:59.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.758" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:59.757" endtime="20201112 12:43:59.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.760" level="INFO">VALUE: [0.028440222, 0.03844175, 0.048442667, 0.058443597, 0.068444528, 0.078445431, 0.088446347, 0.098447319, 0.10844825, 0.118449125, 0.128450042, 0.138450958, 0.148451875, 0.158452819, 0.168453708, 0.178454639, 0.188455611, 0.198456472, 0.208457389, 0.218458306, 0.22845925, 0.238460167, 0.248461111, 0.258461986, 0.268462931, 0.278463847, 0.28846475, 0.298465681, 0.308466611, 0.318467514, 0.328468444, 0.338469375, 0.348470333, 0.358471194, 0.368472153, 0.378473042, 0.388473958, 0.398474875, 0.408475806, 0.418476736, 0.428477639, 0.438478597, 0.448479486, 0.458480403, 0.468481319, 0.478482264, 0.488483208, 0.498484083, 0.508485028, 0.518485986, 0.528486875, 0.538487778, 0.548488694, 0.558489611, 0.568490542, 0.578491458, 0.588492375, 0.598493306, 0.608494236, 0.618495153, 0.628496069, 0.638496986, 0.648497931, 0.658498847, 0.668499764, 0.678500681, 0.688501597, 0.698502514, 0.708503458, 0.718504361, 0.728505278, 0.738506208, 0.748507139, 0.758508056, 0.768508972, 0.778509917, 0.788510806, 0.798511736, 0.808512653, 0.818513583, 0.828514514, 0.838515431, 0.848516361, 0.858517264, 0.868518194, 0.878519111, 0.888520028, 0.898520958, 0.908521875, 0.918522806, 0.928523736, 0.938524639, 0.948525556, 0.958526472, 0.968527403, 0.978528319, 0.988529292, 0.998530167, 1.008531083, 1.018532014] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:59.759" endtime="20201112 12:43:59.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.754" endtime="20201112 12:43:59.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.764" endtime="20201112 12:43:59.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:59.767" endtime="20201112 12:43:59.786"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.765" endtime="20201112 12:43:59.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.762" endtime="20201112 12:43:59.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.240" endtime="20201112 12:43:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.117" endtime="20201112 12:43:59.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.116" endtime="20201112 12:43:59.788"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:59.791" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.800" endtime="20201112 12:44:01.894"></status>
</kw>
<msg timestamp="20201112 12:44:01.895" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46393460, 'wakeups': [46403530, 46413531, 46423530, 46433530, 46443530...</msg>
<status status="PASS" starttime="20201112 12:43:59.798" endtime="20201112 12:44:01.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.901" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46393460, 'wakeups': [46403530, 46413531, 46423530, 46433530, 46443530...</msg>
<status status="PASS" starttime="20201112 12:44:01.897" endtime="20201112 12:44:01.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.903" endtime="20201112 12:44:01.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.795" endtime="20201112 12:44:01.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.793" endtime="20201112 12:44:01.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.914" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'start-time': 46393460, 'wakeups': [46403530, 46413531, 46423530, 46433530, 46443530, 46453530, 46463530, 46473530, 46483530, 46493530, 46503530, 46513530, ...</msg>
<status status="PASS" starttime="20201112 12:44:01.910" endtime="20201112 12:44:01.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.924" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:01.921" endtime="20201112 12:44:01.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.928" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:01.926" endtime="20201112 12:44:01.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.917" endtime="20201112 12:44:01.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.939" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:01.937" endtime="20201112 12:44:01.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.944" level="INFO">VALUE: 46393460</msg>
<status status="PASS" starttime="20201112 12:44:01.942" endtime="20201112 12:44:01.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.931" endtime="20201112 12:44:01.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.955" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:01.952" endtime="20201112 12:44:01.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.960" level="INFO">VALUE: [46403530, 46413531, 46423530, 46433530, 46443530, 46453530, 46463530, 46473530, 46483530, 46493530, 46503530, 46513530, 46523530, 46533530, 46543530, 46553530, 46563530, 46573530, 46583530, 46593530, 46603530, 46613530, 46623530, 46633530, 46643530, 46653530, 46663530, 46673530, 46683530, 46693530, 46703530, 46713530, 46723530, 46733530, 46743530, 46753530, 46763530, 46773530, 46783530, 46793530, 46803530, 46813530, 46823530, 46833530, 46843530, 46853530, 46863530, 46873530, 46883530, 46893530, 46903530, 46913530, 46923530, 46933530, 46943530, 46953530, 46963530, 46973530, 46983530, 46993530, 47003530, 47013530, 47023530, 47033530, 47043530, 47053530, 47063530, 47073530, 47083530, 47093530, 47103530, 47113530, 47123530, 47133530, 47143530, 47153530, 47163530, 47173530, 47183530, 47193530, 47203530, 47213530, 47223530, 47233530, 47243530, 47253530, 47263530, 47273530, 47283530, 47293530, 47303530, 47313530, 47323530, 47333530, 47343530, 47353530, 47363530, 47373530, 47383530, 47393530]</msg>
<status status="PASS" starttime="20201112 12:44:01.957" endtime="20201112 12:44:01.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.947" endtime="20201112 12:44:01.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.976" endtime="20201112 12:44:02.270"></status>
</kw>
<msg timestamp="20201112 12:44:02.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021994986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032065833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.972" endtime="20201112 12:44:02.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021994986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032065833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.274" endtime="20201112 12:44:02.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.282" endtime="20201112 12:44:02.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.967" endtime="20201112 12:44:02.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.963" endtime="20201112 12:44:02.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.309" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:02.285" endtime="20201112 12:44:02.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.313" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:02.312" endtime="20201112 12:44:02.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.315" level="INFO">VALUE: 0.021994986</msg>
<status status="PASS" starttime="20201112 12:44:02.314" endtime="20201112 12:44:02.316"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.310" endtime="20201112 12:44:02.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.321" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:02.320" endtime="20201112 12:44:02.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.323" level="INFO">VALUE: [0.032065833, 0.042067833, 0.052067736, 0.062068736, 0.072069625, 0.0820705, 0.092071431, 0.102072417, 0.112073306, 0.122074181, 0.132075097, 0.142076056, 0.152076944, 0.162077889, 0.172078778, 0.182079708, 0.192080625, 0.202081569, 0.212082472, 0.222083389, 0.232084306, 0.24208525, 0.252086153, 0.262087083, 0.272088042, 0.282088931, 0.292089833, 0.302090792, 0.312091708, 0.322092681, 0.332093528, 0.342094458, 0.352095361, 0.362096292, 0.372097222, 0.382098208, 0.392099042, 0.402099972, 0.412100903, 0.422101806, 0.432102736, 0.442103667, 0.452104583, 0.4621055, 0.472106417, 0.482107347, 0.492108264, 0.502109181, 0.512110111, 0.522111083, 0.532111944, 0.542112875, 0.552113806, 0.562114708, 0.572115639, 0.582116556, 0.5921175, 0.602118403, 0.612119319, 0.62212025, 0.632121181, 0.642122097, 0.652123083, 0.662123931, 0.672124861, 0.682125792, 0.692126764, 0.702127639, 0.712128542, 0.722129472, 0.732130389, 0.742131306, 0.752132236, 0.762133167, 0.772134069, 0.782135069, 0.792135917, 0.802136847, 0.812137764, 0.822138681, 0.832139667, 0.842140569, 0.852141514, 0.862142375, 0.872143306, 0.882144236, 0.892145167, 0.902146056, 0.912147, 0.922147903, 0.932148833, 0.942149764, 0.952150667, 0.962151611, 0.972152542, 0.982153431, 0.992154361, 1.002155278, 1.012156222, 1.022157125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:02.322" endtime="20201112 12:44:02.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.317" endtime="20201112 12:44:02.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.326" endtime="20201112 12:44:02.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.330" endtime="20201112 12:44:02.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.328" endtime="20201112 12:44:02.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.325" endtime="20201112 12:44:02.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.791" endtime="20201112 12:44:02.351"></status>
</kw>
<msg timestamp="20201112 12:44:02.351" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.359" endtime="20201112 12:44:04.453"></status>
</kw>
<msg timestamp="20201112 12:44:04.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48952823, 'wakeups': [48962893, 48972894, 48982893, 48992893, 49002893...</msg>
<status status="PASS" starttime="20201112 12:44:02.357" endtime="20201112 12:44:04.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.460" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 48952823, 'wakeups': [48962893, 48972894, 48982893, 48992893, 49002893...</msg>
<status status="PASS" starttime="20201112 12:44:04.456" endtime="20201112 12:44:04.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.462" endtime="20201112 12:44:04.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.355" endtime="20201112 12:44:04.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.353" endtime="20201112 12:44:04.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.473" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'start-time': 48952823, 'wakeups': [48962893, 48972894, 48982893, 48992893, 49002893, 49012893, 49022893, 49032893, 49042893, 49052893, 49062893, 49072893, ...</msg>
<status status="PASS" starttime="20201112 12:44:04.469" endtime="20201112 12:44:04.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.482" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:04.480" endtime="20201112 12:44:04.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.486" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:04.484" endtime="20201112 12:44:04.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.475" endtime="20201112 12:44:04.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.499" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:04.496" endtime="20201112 12:44:04.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.503" level="INFO">VALUE: 48952823</msg>
<status status="PASS" starttime="20201112 12:44:04.501" endtime="20201112 12:44:04.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.489" endtime="20201112 12:44:04.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.513" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:04.511" endtime="20201112 12:44:04.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.519" level="INFO">VALUE: [48962893, 48972894, 48982893, 48992893, 49002893, 49012893, 49022893, 49032893, 49042893, 49052893, 49062893, 49072893, 49082893, 49092893, 49102893, 49112893, 49122893, 49132893, 49142893, 49152893, 49162893, 49172893, 49182893, 49192893, 49202893, 49212893, 49222893, 49232893, 49242893, 49252893, 49262893, 49272893, 49282893, 49292893, 49302893, 49312893, 49322893, 49332893, 49342893, 49352893, 49362893, 49372893, 49382893, 49392893, 49402893, 49412893, 49422893, 49432893, 49442893, 49452893, 49462893, 49472893, 49482893, 49492893, 49502893, 49512893, 49522893, 49532893, 49542893, 49552893, 49562893, 49572893, 49582893, 49592893, 49602893, 49612893, 49622893, 49632893, 49642893, 49652893, 49662893, 49672893, 49682893, 49692893, 49702893, 49712893, 49722893, 49732893, 49742893, 49752893, 49762893, 49772893, 49782893, 49792893, 49802893, 49812893, 49822893, 49832893, 49842893, 49852893, 49862893, 49872893, 49882893, 49892893, 49902893, 49912893, 49922893, 49932893, 49942893, 49952893]</msg>
<status status="PASS" starttime="20201112 12:44:04.516" endtime="20201112 12:44:04.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.506" endtime="20201112 12:44:04.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.527" endtime="20201112 12:44:04.817"></status>
</kw>
<msg timestamp="20201112 12:44:04.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018324542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028395319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.525" endtime="20201112 12:44:04.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018324542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028395319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.821" endtime="20201112 12:44:04.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.828" endtime="20201112 12:44:04.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.523" endtime="20201112 12:44:04.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.521" endtime="20201112 12:44:04.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.855" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:04.832" endtime="20201112 12:44:04.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.860" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:04.859" endtime="20201112 12:44:04.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.862" level="INFO">VALUE: 0.018324542</msg>
<status status="PASS" starttime="20201112 12:44:04.861" endtime="20201112 12:44:04.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.856" endtime="20201112 12:44:04.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.868" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:04.867" endtime="20201112 12:44:04.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.870" level="INFO">VALUE: [0.028395319, 0.038397403, 0.048397236, 0.058398153, 0.068399083, 0.078400014, 0.088400917, 0.098401833, 0.108402764, 0.118403694, 0.128404611, 0.138405542, 0.148406444, 0.158407375, 0.168408319, 0.178409208, 0.188410125, 0.198411056, 0.208411972, 0.218412889, 0.228413806, 0.238414722, 0.248415639, 0.258416569, 0.268417486, 0.278418417, 0.288419333, 0.298420264, 0.308421167, 0.318422097, 0.328423014, 0.338423986, 0.348424861, 0.358425778, 0.368426708, 0.378427694, 0.388428542, 0.398429486, 0.408430375, 0.418431306, 0.428432222, 0.438433153, 0.448434069, 0.458434986, 0.468435931, 0.478436833, 0.488437819, 0.498438681, 0.508439611, 0.518440514, 0.528441444, 0.538442361, 0.548443292, 0.558444222, 0.568445139, 0.578446042, 0.588446972, 0.598447903, 0.608448819, 0.618449736, 0.628450653, 0.638451583, 0.648452514, 0.658453417, 0.668454347, 0.678455306, 0.688456181, 0.698457139, 0.708458028, 0.718458972, 0.728459875, 0.738460806, 0.748461736, 0.758462639, 0.768463611, 0.778464486, 0.788465431, 0.798466319, 0.80846725, 0.818468167, 0.828469139, 0.838470014, 0.848470931, 0.858471861, 0.868472792, 0.878473694, 0.888474639, 0.898475542, 0.908476458, 0.918477389, 0.928478306, 0.93847925, 0.948480153, 0.958481097, 0.968482014, 0.978482917, 0.988483833, 0.998484764, 1.008485681, 1.018486611] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:04.869" endtime="20201112 12:44:04.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.864" endtime="20201112 12:44:04.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.873" endtime="20201112 12:44:04.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.877" endtime="20201112 12:44:04.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.875" endtime="20201112 12:44:04.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.872" endtime="20201112 12:44:04.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.352" endtime="20201112 12:44:04.898"></status>
</kw>
<msg timestamp="20201112 12:44:04.898" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.906" endtime="20201112 12:44:07.000"></status>
</kw>
<msg timestamp="20201112 12:44:07.001" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51499843, 'wakeups': [51509913, 51519914, 51529913, 51539913, 51549913...</msg>
<status status="PASS" starttime="20201112 12:44:04.905" endtime="20201112 12:44:07.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.007" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51499843, 'wakeups': [51509913, 51519914, 51529913, 51539913, 51549913...</msg>
<status status="PASS" starttime="20201112 12:44:07.003" endtime="20201112 12:44:07.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.009" endtime="20201112 12:44:07.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.902" endtime="20201112 12:44:07.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.900" endtime="20201112 12:44:07.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.020" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'start-time': 51499843, 'wakeups': [51509913, 51519914, 51529913, 51539913, 51549913, 51559913, 51569913, 51579913, 51589913, 51599913, 51609913, 51619913, ...</msg>
<status status="PASS" starttime="20201112 12:44:07.016" endtime="20201112 12:44:07.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.029" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:07.027" endtime="20201112 12:44:07.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.033" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:07.031" endtime="20201112 12:44:07.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.022" endtime="20201112 12:44:07.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.043" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:07.041" endtime="20201112 12:44:07.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.048" level="INFO">VALUE: 51499843</msg>
<status status="PASS" starttime="20201112 12:44:07.046" endtime="20201112 12:44:07.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.036" endtime="20201112 12:44:07.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.058" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:07.056" endtime="20201112 12:44:07.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.063" level="INFO">VALUE: [51509913, 51519914, 51529913, 51539913, 51549913, 51559913, 51569913, 51579913, 51589913, 51599913, 51609913, 51619913, 51629913, 51639913, 51649913, 51659913, 51669913, 51679913, 51689913, 51699913, 51709913, 51719913, 51729913, 51739913, 51749913, 51759913, 51769913, 51779913, 51789913, 51799913, 51809913, 51819913, 51829913, 51839913, 51849913, 51859913, 51869913, 51879913, 51889913, 51899913, 51909913, 51919913, 51929913, 51939913, 51949913, 51959913, 51969913, 51979913, 51989913, 51999913, 52009913, 52019913, 52029913, 52039913, 52049913, 52059913, 52069913, 52079913, 52089913, 52099913, 52109913, 52119913, 52129913, 52139913, 52149913, 52159913, 52169913, 52179913, 52189913, 52199913, 52209913, 52219913, 52229913, 52239913, 52249913, 52259913, 52269913, 52279913, 52289913, 52299913, 52309913, 52319913, 52329913, 52339913, 52349913, 52359913, 52369913, 52379913, 52389913, 52399913, 52409913, 52419913, 52429913, 52439913, 52449913, 52459913, 52469913, 52479913, 52489913, 52499913]</msg>
<status status="PASS" starttime="20201112 12:44:07.061" endtime="20201112 12:44:07.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.051" endtime="20201112 12:44:07.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.082" endtime="20201112 12:44:07.378"></status>
</kw>
<msg timestamp="20201112 12:44:07.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028373458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.079" endtime="20201112 12:44:07.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028373458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.382" endtime="20201112 12:44:07.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.389" endtime="20201112 12:44:07.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.071" endtime="20201112 12:44:07.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.067" endtime="20201112 12:44:07.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.415" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:07.392" endtime="20201112 12:44:07.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.420" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:07.419" endtime="20201112 12:44:07.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.422" level="INFO">VALUE: 0.018302611</msg>
<status status="PASS" starttime="20201112 12:44:07.421" endtime="20201112 12:44:07.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.416" endtime="20201112 12:44:07.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.427" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:07.426" endtime="20201112 12:44:07.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.429" level="INFO">VALUE: [0.028373458, 0.038375458, 0.048375361, 0.058376264, 0.068377194, 0.078378181, 0.088379097, 0.09838, 0.108380875, 0.118381792, 0.128382708, 0.138383653, 0.148384583, 0.158385472, 0.168386403, 0.178387319, 0.18838825, 0.198389153, 0.208390069, 0.218391014, 0.228391917, 0.238392833, 0.248393819, 0.258394708, 0.268395597, 0.278396542, 0.288397458, 0.298398361, 0.308399278, 0.318400264, 0.328401125, 0.338402042, 0.348402986, 0.358403889, 0.368404806, 0.378405736, 0.388406708, 0.398407569, 0.4084085, 0.418409417, 0.428410347, 0.438411264, 0.448412181, 0.458413111, 0.468414042, 0.478414958, 0.488415861, 0.498416792, 0.508417722, 0.518418625, 0.528419556, 0.538420486, 0.548421403, 0.558422319, 0.568423236, 0.578424181, 0.588425083, 0.598426, 0.608426931, 0.618427847, 0.628428764, 0.638429694, 0.648430611, 0.658431542, 0.668432458, 0.678433375, 0.688434319, 0.698435292, 0.708436139, 0.718437069, 0.728437986, 0.738438917, 0.748439833, 0.75844075, 0.768441694, 0.778442625, 0.788443542, 0.798444458, 0.808445444, 0.818446292, 0.828447208, 0.838448125, 0.848449069, 0.858449986, 0.868450917, 0.878451819, 0.888452764, 0.898453681, 0.908454583, 0.918455528, 0.928456444, 0.938457347, 0.948458278, 0.958459208, 0.968460111, 0.978461042, 0.988461958, 0.998462903, 1.008463875, 1.018464792] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:07.428" endtime="20201112 12:44:07.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.423" endtime="20201112 12:44:07.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.433" endtime="20201112 12:44:07.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:07.436" endtime="20201112 12:44:07.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.434" endtime="20201112 12:44:07.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.431" endtime="20201112 12:44:07.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.899" endtime="20201112 12:44:07.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.789" endtime="20201112 12:44:07.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.788" endtime="20201112 12:44:07.457"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:07.460" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.469" endtime="20201112 12:44:09.563"></status>
</kw>
<msg timestamp="20201112 12:44:09.564" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54062555, 'wakeups': [54072640, 54082641, 54092641, 54102641, 54112641...</msg>
<status status="PASS" starttime="20201112 12:44:07.467" endtime="20201112 12:44:09.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.571" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54062555, 'wakeups': [54072640, 54082641, 54092641, 54102641, 54112641...</msg>
<status status="PASS" starttime="20201112 12:44:09.567" endtime="20201112 12:44:09.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.573" endtime="20201112 12:44:09.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.464" endtime="20201112 12:44:09.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.462" endtime="20201112 12:44:09.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.584" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'start-time': 54062555, 'wakeups': [54072640, 54082641, 54092641, 54102641, 54112641, 54122641, 54132641, 54142641, 54152641, 54162641, 54172641, 54182641, ...</msg>
<status status="PASS" starttime="20201112 12:44:09.580" endtime="20201112 12:44:09.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.593" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:09.591" endtime="20201112 12:44:09.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.597" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:09.595" endtime="20201112 12:44:09.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.586" endtime="20201112 12:44:09.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.607" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:09.605" endtime="20201112 12:44:09.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.612" level="INFO">VALUE: 54062555</msg>
<status status="PASS" starttime="20201112 12:44:09.610" endtime="20201112 12:44:09.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.600" endtime="20201112 12:44:09.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.622" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:09.620" endtime="20201112 12:44:09.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.627" level="INFO">VALUE: [54072640, 54082641, 54092641, 54102641, 54112641, 54122641, 54132641, 54142641, 54152641, 54162641, 54172641, 54182641, 54192641, 54202641, 54212641, 54222641, 54232641, 54242641, 54252641, 54262641, 54272641, 54282641, 54292641, 54302641, 54312641, 54322641, 54332641, 54342641, 54352641, 54362641, 54372641, 54382641, 54392641, 54402641, 54412641, 54422641, 54432641, 54442641, 54452641, 54462641, 54472641, 54482641, 54492641, 54502641, 54512641, 54522641, 54532641, 54542641, 54552641, 54562641, 54572641, 54582641, 54592641, 54602641, 54612641, 54622641, 54632641, 54642641, 54652641, 54662641, 54672641, 54682641, 54692641, 54702641, 54712641, 54722641, 54732641, 54742641, 54752641, 54762641, 54772641, 54782641, 54792641, 54802641, 54812641, 54822641, 54832641, 54842641, 54852641, 54862641, 54872641, 54882641, 54892641, 54902641, 54912641, 54922641, 54932641, 54942641, 54952641, 54962641, 54972641, 54982641, 54992641, 55002641, 55012641, 55022641, 55032641, 55042641, 55052641, 55062641]</msg>
<status status="PASS" starttime="20201112 12:44:09.624" endtime="20201112 12:44:09.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.615" endtime="20201112 12:44:09.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.635" endtime="20201112 12:44:09.925"></status>
</kw>
<msg timestamp="20201112 12:44:09.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022101625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032187861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.634" endtime="20201112 12:44:09.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022101625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032187861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.929" endtime="20201112 12:44:09.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.937" endtime="20201112 12:44:09.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.631" endtime="20201112 12:44:09.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.630" endtime="20201112 12:44:09.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.964" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:09.940" endtime="20201112 12:44:09.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.969" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:09.968" endtime="20201112 12:44:09.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.971" level="INFO">VALUE: 0.022101625</msg>
<status status="PASS" starttime="20201112 12:44:09.971" endtime="20201112 12:44:09.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.966" endtime="20201112 12:44:09.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.977" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:09.976" endtime="20201112 12:44:09.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.979" level="INFO">VALUE: [0.032187861, 0.042189458, 0.052190417, 0.062191292, 0.072192208, 0.082193167, 0.092194056, 0.102194958, 0.112195931, 0.122196806, 0.132197722, 0.142198639, 0.152199556, 0.1622005, 0.172201444, 0.182202319, 0.19220325, 0.202204181, 0.212205083, 0.222206014, 0.232206944, 0.242207847, 0.252208764, 0.262209708, 0.272210625, 0.282211556, 0.292212444, 0.302213375, 0.312214306, 0.322215222, 0.332216139, 0.342217069, 0.352217986, 0.362218903, 0.372219819, 0.382220736, 0.392221667, 0.402222583, 0.4122235, 0.422224431, 0.432225361, 0.442226278, 0.452227194, 0.462228111, 0.472229042, 0.482229958, 0.492230889, 0.502231806, 0.512232722, 0.522233653, 0.532234583, 0.542235486, 0.552236403, 0.562237319, 0.57223825, 0.582239194, 0.592240083, 0.602241056, 0.612241931, 0.622242861, 0.632243778, 0.642244708, 0.652245625, 0.662246556, 0.672247472, 0.682248389, 0.692249361, 0.70225025, 0.712251194, 0.722252083, 0.732253, 0.742253917, 0.752254833, 0.762255778, 0.772256694, 0.782257597, 0.792258542, 0.802259444, 0.812260389, 0.822261292, 0.832262208, 0.842263153, 0.852264056, 0.862264972, 0.872265903, 0.882266819, 0.892267764, 0.902268667, 0.912269597, 0.922270528, 0.932271431, 0.942272347, 0.952273278, 0.962274194, 0.972275125, 0.982276042, 0.992276958, 1.002277889, 1.012278819, 1.022279722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:09.978" endtime="20201112 12:44:09.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.973" endtime="20201112 12:44:09.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.982" endtime="20201112 12:44:09.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:09.986" endtime="20201112 12:44:10.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.984" endtime="20201112 12:44:10.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.981" endtime="20201112 12:44:10.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.460" endtime="20201112 12:44:10.006"></status>
</kw>
<msg timestamp="20201112 12:44:10.007" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.015" endtime="20201112 12:44:12.108"></status>
</kw>
<msg timestamp="20201112 12:44:12.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56608590, 'wakeups': [56618675, 56628676, 56638676, 56648676, 56658676...</msg>
<status status="PASS" starttime="20201112 12:44:10.013" endtime="20201112 12:44:12.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56608590, 'wakeups': [56618675, 56628676, 56638676, 56648676, 56658676...</msg>
<status status="PASS" starttime="20201112 12:44:12.112" endtime="20201112 12:44:12.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.118" endtime="20201112 12:44:12.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.011" endtime="20201112 12:44:12.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.009" endtime="20201112 12:44:12.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.129" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'start-time': 56608590, 'wakeups': [56618675, 56628676, 56638676, 56648676, 56658676, 56668676, 56678676, 56688676, 56698676, 56708676, 56718676, 56728676, ...</msg>
<status status="PASS" starttime="20201112 12:44:12.125" endtime="20201112 12:44:12.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.139" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:12.137" endtime="20201112 12:44:12.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.144" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:12.142" endtime="20201112 12:44:12.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.130" endtime="20201112 12:44:12.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.155" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:12.153" endtime="20201112 12:44:12.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.159" level="INFO">VALUE: 56608590</msg>
<status status="PASS" starttime="20201112 12:44:12.157" endtime="20201112 12:44:12.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.147" endtime="20201112 12:44:12.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.169" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:12.167" endtime="20201112 12:44:12.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.174" level="INFO">VALUE: [56618675, 56628676, 56638676, 56648676, 56658676, 56668676, 56678676, 56688676, 56698676, 56708676, 56718676, 56728676, 56738676, 56748676, 56758676, 56768676, 56778676, 56788676, 56798676, 56808676, 56818676, 56828676, 56838676, 56848676, 56858676, 56868676, 56878676, 56888676, 56898676, 56908676, 56918676, 56928676, 56938676, 56948676, 56958676, 56968676, 56978676, 56988676, 56998676, 57008676, 57018676, 57028676, 57038676, 57048676, 57058676, 57068676, 57078676, 57088676, 57098676, 57108676, 57118676, 57128676, 57138676, 57148676, 57158676, 57168676, 57178676, 57188676, 57198676, 57208676, 57218676, 57228676, 57238676, 57248676, 57258676, 57268676, 57278676, 57288676, 57298676, 57308676, 57318676, 57328676, 57338676, 57348676, 57358676, 57368676, 57378676, 57388676, 57398676, 57408676, 57418676, 57428676, 57438676, 57448676, 57458676, 57468676, 57478676, 57488676, 57498676, 57508676, 57518676, 57528676, 57538676, 57548676, 57558676, 57568676, 57578676, 57588676, 57598676, 57608676]</msg>
<status status="PASS" starttime="20201112 12:44:12.172" endtime="20201112 12:44:12.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.162" endtime="20201112 12:44:12.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.187" endtime="20201112 12:44:12.477"></status>
</kw>
<msg timestamp="20201112 12:44:12.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018500222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028586722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.185" endtime="20201112 12:44:12.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018500222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028586722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.481" endtime="20201112 12:44:12.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.489" endtime="20201112 12:44:12.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.181" endtime="20201112 12:44:12.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.177" endtime="20201112 12:44:12.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.515" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:12.492" endtime="20201112 12:44:12.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.520" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:12.519" endtime="20201112 12:44:12.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.522" level="INFO">VALUE: 0.018500222</msg>
<status status="PASS" starttime="20201112 12:44:12.521" endtime="20201112 12:44:12.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.516" endtime="20201112 12:44:12.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.527" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:12.526" endtime="20201112 12:44:12.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.530" level="INFO">VALUE: [0.028586722, 0.038588389, 0.04858925, 0.058590181, 0.068591097, 0.078592014, 0.088593, 0.098593861, 0.108594792, 0.118595694, 0.128596611, 0.138597542, 0.148598458, 0.158599389, 0.168600306, 0.17860125, 0.188602139, 0.198603097, 0.208603986, 0.218604903, 0.228605819, 0.23860675, 0.248607667, 0.258608583, 0.268609514, 0.278610431, 0.288611361, 0.298612278, 0.308613222, 0.318614125, 0.328615042, 0.338615986, 0.348616875, 0.358617889, 0.368618736, 0.378619653, 0.388620583, 0.398621486, 0.408622403, 0.418623375, 0.428624292, 0.438625208, 0.448626139, 0.458627014, 0.468627931, 0.478628903, 0.488629806, 0.498630722, 0.508631667, 0.518632597, 0.528633486, 0.538634403, 0.548635306, 0.55863625, 0.568637167, 0.578638097, 0.588639028, 0.598639917, 0.608640847, 0.618641764, 0.628642736, 0.638643611, 0.648644542, 0.658645472, 0.668646375, 0.678647319, 0.688648222, 0.698649153, 0.708650069, 0.718651, 0.728651917, 0.738652847, 0.748653764, 0.758654708, 0.768655611, 0.778656569, 0.788657444, 0.798658361, 0.808659292, 0.818660208, 0.828661139, 0.838662069, 0.848663014, 0.858663903, 0.868664819, 0.87866575, 0.88866675, 0.898667583, 0.908668514, 0.918669472, 0.928670347, 0.938671278, 0.948672222, 0.958673139, 0.968674056, 0.978674958, 0.988675903, 0.998676806, 1.008677736, 1.018678667] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:12.529" endtime="20201112 12:44:12.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.524" endtime="20201112 12:44:12.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.533" endtime="20201112 12:44:12.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:12.537" endtime="20201112 12:44:12.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.535" endtime="20201112 12:44:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.532" endtime="20201112 12:44:12.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.007" endtime="20201112 12:44:12.557"></status>
</kw>
<msg timestamp="20201112 12:44:12.558" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.566" endtime="20201112 12:44:14.660"></status>
</kw>
<msg timestamp="20201112 12:44:14.661" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59159623, 'wakeups': [59169708, 59179709, 59189709, 59199709, 59209709...</msg>
<status status="PASS" starttime="20201112 12:44:12.564" endtime="20201112 12:44:14.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.667" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59159623, 'wakeups': [59169708, 59179709, 59189709, 59199709, 59209709...</msg>
<status status="PASS" starttime="20201112 12:44:14.664" endtime="20201112 12:44:14.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.670" endtime="20201112 12:44:14.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.562" endtime="20201112 12:44:14.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.560" endtime="20201112 12:44:14.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:14.681" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'start-time': 59159623, 'wakeups': [59169708, 59179709, 59189709, 59199709, 59209709, 59219709, 59229709, 59239709, 59249709, 59259709, 59269709, 59279709, ...</msg>
<status status="PASS" starttime="20201112 12:44:14.676" endtime="20201112 12:44:14.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.689" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:14.687" endtime="20201112 12:44:14.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.694" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:14.692" endtime="20201112 12:44:14.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.682" endtime="20201112 12:44:14.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.704" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:14.702" endtime="20201112 12:44:14.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.708" level="INFO">VALUE: 59159623</msg>
<status status="PASS" starttime="20201112 12:44:14.706" endtime="20201112 12:44:14.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.697" endtime="20201112 12:44:14.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.718" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:14.716" endtime="20201112 12:44:14.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.725" level="INFO">VALUE: [59169708, 59179709, 59189709, 59199709, 59209709, 59219709, 59229709, 59239709, 59249709, 59259709, 59269709, 59279709, 59289709, 59299709, 59309709, 59319709, 59329709, 59339709, 59349709, 59359709, 59369709, 59379709, 59389709, 59399709, 59409709, 59419709, 59429709, 59439709, 59449709, 59459709, 59469709, 59479709, 59489709, 59499709, 59509709, 59519709, 59529709, 59539709, 59549709, 59559709, 59569709, 59579709, 59589709, 59599709, 59609709, 59619709, 59629709, 59639709, 59649709, 59659709, 59669709, 59679709, 59689709, 59699709, 59709709, 59719709, 59729709, 59739709, 59749709, 59759709, 59769709, 59779709, 59789709, 59799709, 59809709, 59819709, 59829709, 59839709, 59849709, 59859709, 59869709, 59879709, 59889709, 59899709, 59909709, 59919709, 59929709, 59939709, 59949709, 59959709, 59969709, 59979709, 59989709, 59999709, 60009709, 60019709, 60029709, 60039709, 60049709, 60059709, 60069709, 60079709, 60089709, 60099709, 60109709, 60119709, 60129709, 60139709, 60149709, 60159709]</msg>
<status status="PASS" starttime="20201112 12:44:14.721" endtime="20201112 12:44:14.726"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.711" endtime="20201112 12:44:14.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.742" endtime="20201112 12:44:15.041"></status>
</kw>
<msg timestamp="20201112 12:44:15.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018432236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028518611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.739" endtime="20201112 12:44:15.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018432236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028518611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.045" endtime="20201112 12:44:15.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.052" endtime="20201112 12:44:15.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.733" endtime="20201112 12:44:15.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.729" endtime="20201112 12:44:15.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:15.079" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:15.056" endtime="20201112 12:44:15.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.083" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:15.082" endtime="20201112 12:44:15.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.085" level="INFO">VALUE: 0.018432236</msg>
<status status="PASS" starttime="20201112 12:44:15.084" endtime="20201112 12:44:15.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.080" endtime="20201112 12:44:15.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.091" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:15.090" endtime="20201112 12:44:15.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.093" level="INFO">VALUE: [0.028518611, 0.038520222, 0.048521125, 0.058522042, 0.068522986, 0.078523903, 0.088524819, 0.098525722, 0.108526653, 0.118527569, 0.1285285, 0.138529403, 0.148530361, 0.158531278, 0.168532194, 0.178533083, 0.188534069, 0.198534931, 0.208535847, 0.218536778, 0.228537708, 0.238538611, 0.248539542, 0.258540458, 0.268541389, 0.278542292, 0.288543236, 0.298544139, 0.308545056, 0.318545972, 0.328546917, 0.338547833, 0.348548736, 0.358549667, 0.368550583, 0.378551556, 0.388552444, 0.398553347, 0.408554264, 0.418555222, 0.428556111, 0.438557056, 0.448557958, 0.458558875, 0.468559792, 0.478560722, 0.488561639, 0.498562556, 0.5085635, 0.518564417, 0.528565319, 0.538566264, 0.548567181, 0.558568083, 0.568569014, 0.578569931, 0.588570847, 0.598571792, 0.608572708, 0.618573625, 0.628574583, 0.638575514, 0.648576375, 0.658577319, 0.668578222, 0.678579167, 0.688580069, 0.698581, 0.708581917, 0.718582833, 0.72858375, 0.738584681, 0.748585611, 0.758586514, 0.768587458, 0.778588361, 0.788589292, 0.798590222, 0.808591139, 0.818592056, 0.828592986, 0.838593903, 0.848594819, 0.858595736, 0.868596694, 0.878597597, 0.888598514, 0.898599444, 0.908600361, 0.918601292, 0.928602208, 0.938603111, 0.948604056, 0.958604958, 0.968605889, 0.978606819, 0.988607722, 0.998608639, 1.008609569, 1.018610528] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:15.092" endtime="20201112 12:44:15.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.087" endtime="20201112 12:44:15.094"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.096" endtime="20201112 12:44:15.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:15.100" endtime="20201112 12:44:15.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.098" endtime="20201112 12:44:15.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.094" endtime="20201112 12:44:15.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.558" endtime="20201112 12:44:15.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.458" endtime="20201112 12:44:15.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.457" endtime="20201112 12:44:15.121"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:15.124" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.133" endtime="20201112 12:44:17.227"></status>
</kw>
<msg timestamp="20201112 12:44:17.228" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61726352, 'wakeups': [61736453, 61746450, 61756450, 61766450, 61776450...</msg>
<status status="PASS" starttime="20201112 12:44:15.131" endtime="20201112 12:44:17.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.234" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61726352, 'wakeups': [61736453, 61746450, 61756450, 61766450, 61776450...</msg>
<status status="PASS" starttime="20201112 12:44:17.230" endtime="20201112 12:44:17.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.236" endtime="20201112 12:44:17.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.128" endtime="20201112 12:44:17.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.126" endtime="20201112 12:44:17.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.247" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'start-time': 61726352, 'wakeups': [61736453, 61746450, 61756450, 61766450, 61776450, 61786450, 61796450, 61806450, 61816450, 61826450, 61836450, 61846450, ...</msg>
<status status="PASS" starttime="20201112 12:44:17.243" endtime="20201112 12:44:17.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.256" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:17.254" endtime="20201112 12:44:17.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.260" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:17.258" endtime="20201112 12:44:17.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.249" endtime="20201112 12:44:17.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.269" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:17.268" endtime="20201112 12:44:17.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.271" level="INFO">VALUE: 61726352</msg>
<status status="PASS" starttime="20201112 12:44:17.270" endtime="20201112 12:44:17.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.263" endtime="20201112 12:44:17.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.276" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:17.275" endtime="20201112 12:44:17.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.278" level="INFO">VALUE: [61736453, 61746450, 61756450, 61766450, 61776450, 61786450, 61796450, 61806450, 61816450, 61826450, 61836450, 61846450, 61856450, 61866450, 61876450, 61886450, 61896450, 61906450, 61916450, 61926450, 61936450, 61946450, 61956450, 61966450, 61976450, 61986450, 61996450, 62006450, 62016450, 62026450, 62036450, 62046450, 62056450, 62066450, 62076450, 62086450, 62096450, 62106450, 62116450, 62126450, 62136450, 62146450, 62156450, 62166450, 62176450, 62186450, 62196450, 62206450, 62216450, 62226450, 62236450, 62246450, 62256450, 62266450, 62276450, 62286450, 62296450, 62306450, 62316450, 62326450, 62336450, 62346450, 62356450, 62366450, 62376450, 62386450, 62396450, 62406450, 62416450, 62426450, 62436450, 62446450, 62456450, 62466450, 62476450, 62486450, 62496450, 62506450, 62516450, 62526450, 62536450, 62546450, 62556450, 62566450, 62576450, 62586450, 62596450, 62606450, 62616450, 62626450, 62636450, 62646450, 62656450, 62666450, 62676450, 62686450, 62696450, 62706450, 62716450, 62726450]</msg>
<status status="PASS" starttime="20201112 12:44:17.277" endtime="20201112 12:44:17.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.273" endtime="20201112 12:44:17.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.286" endtime="20201112 12:44:17.579"></status>
</kw>
<msg timestamp="20201112 12:44:17.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031619458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.284" endtime="20201112 12:44:17.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031619458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.583" endtime="20201112 12:44:17.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.591" endtime="20201112 12:44:17.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.282" endtime="20201112 12:44:17.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.280" endtime="20201112 12:44:17.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.617" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:17.594" endtime="20201112 12:44:17.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.622" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:17.621" endtime="20201112 12:44:17.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.624" level="INFO">VALUE: 0.021518347</msg>
<status status="PASS" starttime="20201112 12:44:17.623" endtime="20201112 12:44:17.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.618" endtime="20201112 12:44:17.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.629" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:17.628" endtime="20201112 12:44:17.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.631" level="INFO">VALUE: [0.031619458, 0.041618028, 0.051618986, 0.061619889, 0.071620833, 0.081621722, 0.091622653, 0.101623583, 0.111624486, 0.121625403, 0.131626333, 0.14162725, 0.151628167, 0.161629083, 0.171630014, 0.181630931, 0.191631847, 0.201632764, 0.211633694, 0.221634611, 0.231635528, 0.241636444, 0.251637389, 0.261638278, 0.271639208, 0.281640167, 0.291641056, 0.301641972, 0.311642903, 0.321643861, 0.331644736, 0.341645667, 0.351646583, 0.361647486, 0.371648444, 0.381649347, 0.391650264, 0.40165125, 0.411652125, 0.421653014, 0.431653958, 0.441654861, 0.451655792, 0.461656722, 0.471657653, 0.481658542, 0.491659486, 0.501660417, 0.511661319, 0.521662236, 0.531663194, 0.541664097, 0.551665028, 0.561666, 0.571666861, 0.581667764, 0.591668708, 0.601669625, 0.611670542, 0.621671444, 0.631672389, 0.641673361, 0.651674236, 0.661675139, 0.671676069, 0.681677, 0.691677931, 0.701678819, 0.711679764, 0.721680667, 0.731681653, 0.741682514, 0.751683444, 0.761684361, 0.771685292, 0.781686194, 0.791687139, 0.801688042, 0.811688972, 0.821689903, 0.831690819, 0.84169175, 0.851692694, 0.861693583, 0.871694514, 0.881695417, 0.891696347, 0.901697278, 0.911698236, 0.921699125, 0.931700042, 0.941700944, 0.951701889, 0.961702792, 0.971703736, 0.981704639, 0.991705569, 1.001706486, 1.011707417, 1.021708319] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:17.630" endtime="20201112 12:44:17.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.625" endtime="20201112 12:44:17.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.635" endtime="20201112 12:44:17.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:17.638" endtime="20201112 12:44:17.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.636" endtime="20201112 12:44:17.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.633" endtime="20201112 12:44:17.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.125" endtime="20201112 12:44:17.659"></status>
</kw>
<msg timestamp="20201112 12:44:17.659" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.668" endtime="20201112 12:44:19.762"></status>
</kw>
<msg timestamp="20201112 12:44:19.763" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64261662, 'wakeups': [64271762, 64281760, 64291760, 64301760, 64311760...</msg>
<status status="PASS" starttime="20201112 12:44:17.665" endtime="20201112 12:44:19.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.769" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64261662, 'wakeups': [64271762, 64281760, 64291760, 64301760, 64311760...</msg>
<status status="PASS" starttime="20201112 12:44:19.766" endtime="20201112 12:44:19.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.772" endtime="20201112 12:44:19.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.663" endtime="20201112 12:44:19.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.661" endtime="20201112 12:44:19.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:19.783" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'start-time': 64261662, 'wakeups': [64271762, 64281760, 64291760, 64301760, 64311760, 64321760, 64331760, 64341760, 64351760, 64361760, 64371760, 64381760, ...</msg>
<status status="PASS" starttime="20201112 12:44:19.779" endtime="20201112 12:44:19.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.796" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:19.794" endtime="20201112 12:44:19.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.800" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:19.798" endtime="20201112 12:44:19.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.789" endtime="20201112 12:44:19.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.811" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:19.809" endtime="20201112 12:44:19.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.815" level="INFO">VALUE: 64261662</msg>
<status status="PASS" starttime="20201112 12:44:19.813" endtime="20201112 12:44:19.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.803" endtime="20201112 12:44:19.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.825" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:19.823" endtime="20201112 12:44:19.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.830" level="INFO">VALUE: [64271762, 64281760, 64291760, 64301760, 64311760, 64321760, 64331760, 64341760, 64351760, 64361760, 64371760, 64381760, 64391760, 64401760, 64411760, 64421760, 64431760, 64441760, 64451760, 64461760, 64471760, 64481760, 64491760, 64501760, 64511760, 64521760, 64531760, 64541760, 64551760, 64561760, 64571760, 64581760, 64591760, 64601760, 64611760, 64621760, 64631760, 64641760, 64651760, 64661760, 64671760, 64681760, 64691760, 64701760, 64711760, 64721760, 64731760, 64741760, 64751760, 64761760, 64771760, 64781760, 64791760, 64801760, 64811760, 64821760, 64831760, 64841760, 64851760, 64861760, 64871760, 64881760, 64891760, 64901760, 64911760, 64921760, 64931760, 64941760, 64951760, 64961760, 64971760, 64981760, 64991760, 65001760, 65011760, 65021760, 65031760, 65041760, 65051760, 65061760, 65071760, 65081760, 65091760, 65101760, 65111760, 65121760, 65131760, 65141760, 65151760, 65161760, 65171760, 65181760, 65191760, 65201760, 65211760, 65221760, 65231760, 65241760, 65251760, 65261760]</msg>
<status status="PASS" starttime="20201112 12:44:19.827" endtime="20201112 12:44:19.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.818" endtime="20201112 12:44:19.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.842" endtime="20201112 12:44:20.132"></status>
</kw>
<msg timestamp="20201112 12:44:20.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019184722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02928575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:19.840" endtime="20201112 12:44:20.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019184722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02928575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:20.136" endtime="20201112 12:44:20.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.143" endtime="20201112 12:44:20.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.837" endtime="20201112 12:44:20.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.833" endtime="20201112 12:44:20.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.171" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:20.147" endtime="20201112 12:44:20.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.175" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:20.174" endtime="20201112 12:44:20.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.177" level="INFO">VALUE: 0.019184722</msg>
<status status="PASS" starttime="20201112 12:44:20.176" endtime="20201112 12:44:20.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.172" endtime="20201112 12:44:20.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.183" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:20.182" endtime="20201112 12:44:20.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.186" level="INFO">VALUE: [0.02928575, 0.039285264, 0.049286181, 0.059287139, 0.069288042, 0.079288958, 0.089289861, 0.099290778, 0.109291708, 0.119292611, 0.129293542, 0.139294458, 0.149295389, 0.159296306, 0.169297264, 0.179298139, 0.189299083, 0.199299972, 0.209300931, 0.219301833, 0.22930275, 0.239303667, 0.249304597, 0.2593055, 0.269306431, 0.279307347, 0.289308278, 0.299309194, 0.309310181, 0.319311028, 0.329311958, 0.339312861, 0.349313792, 0.359314736, 0.369315639, 0.379316556, 0.389317486, 0.399318389, 0.409319319, 0.41932025, 0.429321167, 0.439322069, 0.449323014, 0.459323917, 0.469324847, 0.479325764, 0.489326694, 0.499327625, 0.509328542, 0.519329444, 0.529330375, 0.539331333, 0.549332222, 0.559333139, 0.569334069, 0.579334972, 0.589335917, 0.599336819, 0.609337833, 0.619338667, 0.629339597, 0.639340514, 0.649341472, 0.659342347, 0.669343347, 0.679344208, 0.689345153, 0.699346042, 0.709346972, 0.719347889, 0.729348819, 0.739349722, 0.749350653, 0.759351597, 0.769352528, 0.779353417, 0.789354347, 0.79935525, 0.809356194, 0.819357097, 0.829358028, 0.839358958, 0.849359875, 0.859360792, 0.869361722, 0.879362639, 0.889363597, 0.899364472, 0.909365431, 0.919366319, 0.929367292, 0.939368167, 0.949369097, 0.95937, 0.969370944, 0.979371847, 0.989372806, 0.999373708, 1.009374639, 1.019375542] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:20.184" endtime="20201112 12:44:20.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.179" endtime="20201112 12:44:20.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.189" endtime="20201112 12:44:20.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:20.192" endtime="20201112 12:44:20.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.191" endtime="20201112 12:44:20.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.187" endtime="20201112 12:44:20.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.660" endtime="20201112 12:44:20.213"></status>
</kw>
<msg timestamp="20201112 12:44:20.213" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.221" endtime="20201112 12:44:22.315"></status>
</kw>
<msg timestamp="20201112 12:44:22.316" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66814993, 'wakeups': [66825093, 66835091, 66845091, 66855091, 66865091...</msg>
<status status="PASS" starttime="20201112 12:44:20.220" endtime="20201112 12:44:22.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.322" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 66814993, 'wakeups': [66825093, 66835091, 66845091, 66855091, 66865091...</msg>
<status status="PASS" starttime="20201112 12:44:22.319" endtime="20201112 12:44:22.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.325" endtime="20201112 12:44:22.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.217" endtime="20201112 12:44:22.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.215" endtime="20201112 12:44:22.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:22.336" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'start-time': 66814993, 'wakeups': [66825093, 66835091, 66845091, 66855091, 66865091, 66875091, 66885091, 66895091, 66905091, 66915091, 66925091, 66935091, ...</msg>
<status status="PASS" starttime="20201112 12:44:22.332" endtime="20201112 12:44:22.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.344" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:22.342" endtime="20201112 12:44:22.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.349" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:22.347" endtime="20201112 12:44:22.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.337" endtime="20201112 12:44:22.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.359" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:22.357" endtime="20201112 12:44:22.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.365" level="INFO">VALUE: 66814993</msg>
<status status="PASS" starttime="20201112 12:44:22.361" endtime="20201112 12:44:22.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.352" endtime="20201112 12:44:22.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.376" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:22.374" endtime="20201112 12:44:22.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.381" level="INFO">VALUE: [66825093, 66835091, 66845091, 66855091, 66865091, 66875091, 66885091, 66895091, 66905091, 66915091, 66925091, 66935091, 66945091, 66955091, 66965091, 66975091, 66985091, 66995091, 67005091, 67015091, 67025091, 67035091, 67045091, 67055091, 67065091, 67075091, 67085091, 67095091, 67105091, 67115091, 67125091, 67135091, 67145091, 67155091, 67165091, 67175091, 67185091, 67195091, 67205091, 67215091, 67225091, 67235091, 67245091, 67255091, 67265091, 67275091, 67285091, 67295091, 67305091, 67315091, 67325091, 67335091, 67345091, 67355091, 67365091, 67375091, 67385091, 67395091, 67405091, 67415091, 67425091, 67435091, 67445091, 67455091, 67465091, 67475091, 67485091, 67495091, 67505091, 67515091, 67525091, 67535091, 67545091, 67555091, 67565091, 67575091, 67585091, 67595091, 67605091, 67615091, 67625091, 67635091, 67645091, 67655091, 67665091, 67675091, 67685091, 67695091, 67705091, 67715091, 67725091, 67735091, 67745091, 67755091, 67765091, 67775091, 67785091, 67795091, 67805091, 67815091]</msg>
<status status="PASS" starttime="20201112 12:44:22.379" endtime="20201112 12:44:22.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.369" endtime="20201112 12:44:22.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.389" endtime="20201112 12:44:22.679"></status>
</kw>
<msg timestamp="20201112 12:44:22.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028402861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.387" endtime="20201112 12:44:22.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018302389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028402861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.683" endtime="20201112 12:44:22.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.691" endtime="20201112 12:44:22.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.384" endtime="20201112 12:44:22.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.382" endtime="20201112 12:44:22.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:22.717" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:22.694" endtime="20201112 12:44:22.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.721" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:22.720" endtime="20201112 12:44:22.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.723" level="INFO">VALUE: 0.018302389</msg>
<status status="PASS" starttime="20201112 12:44:22.722" endtime="20201112 12:44:22.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.718" endtime="20201112 12:44:22.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.729" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:22.728" endtime="20201112 12:44:22.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.732" level="INFO">VALUE: [0.028402861, 0.038402431, 0.048403333, 0.058404278, 0.068405181, 0.078406111, 0.088407028, 0.098408014, 0.108408861, 0.118409792, 0.128410708, 0.138411653, 0.148412542, 0.158413472, 0.168414389, 0.178415319, 0.188416264, 0.198417167, 0.208418083, 0.218419, 0.228419958, 0.238420861, 0.248421764, 0.258422681, 0.268423597, 0.278424528, 0.288425444, 0.298426389, 0.308427278, 0.318428208, 0.328429139, 0.338430056, 0.348430972, 0.358431903, 0.368432819, 0.378433736, 0.388434667, 0.398435597, 0.4084365, 0.418437431, 0.428438333, 0.438439278, 0.448440181, 0.458441125, 0.468442028, 0.478442958, 0.488443861, 0.498444819, 0.508445708, 0.518446681, 0.528447569, 0.538448486, 0.548449389, 0.558450347, 0.568451236, 0.578452181, 0.588453083, 0.598454014, 0.608454931, 0.618455861, 0.628456792, 0.638457708, 0.648458625, 0.658459569, 0.668460472, 0.678461389, 0.688462319, 0.698463236, 0.708464153, 0.718465083, 0.728465986, 0.738466931, 0.748467833, 0.758468833, 0.768469694, 0.778470625, 0.788471556, 0.798472458, 0.808473375, 0.818474319, 0.828475208, 0.838476181, 0.848477069, 0.858478014, 0.868478917, 0.878479833, 0.888480792, 0.898481681, 0.908482667, 0.918483528, 0.928484444, 0.938485375, 0.948486333, 0.958487222, 0.968488139, 0.978489056, 0.988489972, 0.998490917, 1.008491833, 1.018492764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:22.731" endtime="20201112 12:44:22.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.725" endtime="20201112 12:44:22.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.735" endtime="20201112 12:44:22.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:22.738" endtime="20201112 12:44:22.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.737" endtime="20201112 12:44:22.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.733" endtime="20201112 12:44:22.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.214" endtime="20201112 12:44:22.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.123" endtime="20201112 12:44:22.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.122" endtime="20201112 12:44:22.760"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:22.763" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.771" endtime="20201112 12:44:24.865"></status>
</kw>
<msg timestamp="20201112 12:44:24.866" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69364561, 'wakeups': [69374676, 69384677, 69394676, 69404676, 694146...</msg>
<status status="PASS" starttime="20201112 12:44:22.769" endtime="20201112 12:44:24.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69364561, 'wakeups': [69374676, 69384677, 69394676, 69404676, 694146...</msg>
<status status="PASS" starttime="20201112 12:44:24.868" endtime="20201112 12:44:24.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.874" endtime="20201112 12:44:24.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.767" endtime="20201112 12:44:24.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.765" endtime="20201112 12:44:24.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:24.885" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'start-time': 69364561, 'wakeups': [69374676, 69384677, 69394676, 69404676, 69414677, 69424676, 69434676, 69444677, 69454676, 69464676, 69474677, 69484676,...</msg>
<status status="PASS" starttime="20201112 12:44:24.881" endtime="20201112 12:44:24.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.894" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:24.892" endtime="20201112 12:44:24.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.898" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:24.896" endtime="20201112 12:44:24.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.887" endtime="20201112 12:44:24.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.908" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:24.906" endtime="20201112 12:44:24.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.913" level="INFO">VALUE: 69364561</msg>
<status status="PASS" starttime="20201112 12:44:24.911" endtime="20201112 12:44:24.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.901" endtime="20201112 12:44:24.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.923" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:24.921" endtime="20201112 12:44:24.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:24.928" level="INFO">VALUE: [69374676, 69384677, 69394676, 69404676, 69414677, 69424676, 69434676, 69444677, 69454676, 69464676, 69474677, 69484676, 69494676, 69504677, 69514676, 69524676, 69534677, 69544676, 69554676, 69564677, 69574676, 69584676, 69594677, 69604676, 69614676, 69624677, 69634676, 69644676, 69654677, 69664676, 69674676, 69684677, 69694676, 69704676, 69714677, 69724676, 69734676, 69744677, 69754676, 69764676, 69774677, 69784676, 69794676, 69804677, 69814676, 69824676, 69834677, 69844676, 69854676, 69864677, 69874676, 69884676, 69894677, 69904676, 69914676, 69924677, 69934676, 69944676, 69954677, 69964676, 69974676, 69984677, 69994676, 70004676, 70014677, 70024676, 70034676, 70044677, 70054676, 70064676, 70074677, 70084676, 70094676, 70104677, 70114676, 70124676, 70134677, 70144676, 70154676, 70164677, 70174676, 70184676, 70194677, 70204676, 70214676, 70224677, 70234676, 70244676, 70254677, 70264676, 70274676, 70284677, 70294676, 70304676, 70314677, 70324676, 70334676, 70344677, 70354676, 70364676]</msg>
<status status="PASS" starttime="20201112 12:44:24.925" endtime="20201112 12:44:24.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.916" endtime="20201112 12:44:24.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:24.951" endtime="20201112 12:44:25.243"></status>
</kw>
<msg timestamp="20201112 12:44:25.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031707681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:24.940" endtime="20201112 12:44:25.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031707681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.247" endtime="20201112 12:44:25.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.255" endtime="20201112 12:44:25.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.934" endtime="20201112 12:44:25.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:24.931" endtime="20201112 12:44:25.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.282" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:25.258" endtime="20201112 12:44:25.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.286" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:25.285" endtime="20201112 12:44:25.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.288" level="INFO">VALUE: 0.021591208</msg>
<status status="PASS" starttime="20201112 12:44:25.287" endtime="20201112 12:44:25.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.283" endtime="20201112 12:44:25.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.294" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:25.293" endtime="20201112 12:44:25.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.296" level="INFO">VALUE: [0.031707681, 0.041709014, 0.051709167, 0.061709861, 0.071711778, 0.081711931, 0.091712625, 0.101714542, 0.111714681, 0.121715389, 0.131717292, 0.141717444, 0.151718139, 0.161720056, 0.171720208, 0.181720903, 0.191722847, 0.201722972, 0.211723667, 0.221725583, 0.231725722, 0.241726431, 0.251728347, 0.2617285, 0.271729181, 0.281731111, 0.29173125, 0.301731958, 0.311733889, 0.321734014, 0.331734708, 0.341736639, 0.351736792, 0.361737472, 0.371739431, 0.381739583, 0.39174025, 0.401742167, 0.411742306, 0.421743069, 0.431744931, 0.441745069, 0.451745764, 0.461747694, 0.471747833, 0.481748556, 0.491750458, 0.501750597, 0.511751306, 0.521753222, 0.531753389, 0.541754069, 0.551755986, 0.561756139, 0.571756847, 0.581758764, 0.591758917, 0.601759625, 0.611761528, 0.621761667, 0.631762361, 0.641764333, 0.651764444, 0.661765125, 0.671767056, 0.681767194, 0.691767889, 0.701769847, 0.711769958, 0.721770667, 0.731772597, 0.741772736, 0.751773444, 0.761775347, 0.771775514, 0.781776194, 0.791778111, 0.801778264, 0.811778958, 0.821780889, 0.831781028, 0.841781736, 0.851783667, 0.861783792, 0.871784514, 0.881786486, 0.891786569, 0.901787264, 0.911789264, 0.921789333, 0.931790042, 0.941791958, 0.951792097, 0.961792806, 0.971794708, 0.981794861, 0.991795556, 1.001797486, 1.011797639, 1.021798319] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:25.295" endtime="20201112 12:44:25.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.290" endtime="20201112 12:44:25.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.299" endtime="20201112 12:44:25.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:25.302" endtime="20201112 12:44:25.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.301" endtime="20201112 12:44:25.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.297" endtime="20201112 12:44:25.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.763" endtime="20201112 12:44:25.323"></status>
</kw>
<msg timestamp="20201112 12:44:25.323" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.332" endtime="20201112 12:44:27.426"></status>
</kw>
<msg timestamp="20201112 12:44:27.428" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71926122, 'wakeups': [71936238, 71946238, 71956237, 71966237, 719762...</msg>
<status status="PASS" starttime="20201112 12:44:25.330" endtime="20201112 12:44:27.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.434" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 71926122, 'wakeups': [71936238, 71946238, 71956237, 71966237, 719762...</msg>
<status status="PASS" starttime="20201112 12:44:27.430" endtime="20201112 12:44:27.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.437" endtime="20201112 12:44:27.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.327" endtime="20201112 12:44:27.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.325" endtime="20201112 12:44:27.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.448" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'start-time': 71926122, 'wakeups': [71936238, 71946238, 71956237, 71966237, 71976238, 71986237, 71996237, 72006238, 72016237, 72026237, 72036238, 72046237,...</msg>
<status status="PASS" starttime="20201112 12:44:27.444" endtime="20201112 12:44:27.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.457" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:27.454" endtime="20201112 12:44:27.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.461" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:27.459" endtime="20201112 12:44:27.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.450" endtime="20201112 12:44:27.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.472" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:27.470" endtime="20201112 12:44:27.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.476" level="INFO">VALUE: 71926122</msg>
<status status="PASS" starttime="20201112 12:44:27.474" endtime="20201112 12:44:27.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.465" endtime="20201112 12:44:27.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.487" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:27.485" endtime="20201112 12:44:27.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.492" level="INFO">VALUE: [71936238, 71946238, 71956237, 71966237, 71976238, 71986237, 71996237, 72006238, 72016237, 72026237, 72036238, 72046237, 72056237, 72066238, 72076237, 72086237, 72096238, 72106237, 72116237, 72126238, 72136237, 72146237, 72156238, 72166237, 72176237, 72186238, 72196237, 72206237, 72216238, 72226237, 72236237, 72246238, 72256237, 72266237, 72276238, 72286237, 72296237, 72306238, 72316237, 72326237, 72336238, 72346237, 72356237, 72366238, 72376237, 72386237, 72396238, 72406237, 72416237, 72426238, 72436237, 72446237, 72456238, 72466237, 72476237, 72486238, 72496237, 72506237, 72516238, 72526237, 72536237, 72546238, 72556237, 72566237, 72576238, 72586237, 72596237, 72606238, 72616237, 72626237, 72636238, 72646237, 72656237, 72666238, 72676237, 72686237, 72696238, 72706237, 72716237, 72726238, 72736237, 72746237, 72756238, 72766237, 72776237, 72786238, 72796237, 72806237, 72816238, 72826237, 72836237, 72846238, 72856237, 72866237, 72876238, 72886237, 72896237, 72906238, 72916237, 72926237]</msg>
<status status="PASS" starttime="20201112 12:44:27.489" endtime="20201112 12:44:27.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.479" endtime="20201112 12:44:27.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.507" endtime="20201112 12:44:27.797"></status>
</kw>
<msg timestamp="20201112 12:44:27.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019295181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029411944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.505" endtime="20201112 12:44:27.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019295181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029411944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.801" endtime="20201112 12:44:27.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.809" endtime="20201112 12:44:27.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.499" endtime="20201112 12:44:27.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.495" endtime="20201112 12:44:27.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.835" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:27.812" endtime="20201112 12:44:27.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.840" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:27.839" endtime="20201112 12:44:27.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.842" level="INFO">VALUE: 0.019295181</msg>
<status status="PASS" starttime="20201112 12:44:27.841" endtime="20201112 12:44:27.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.837" endtime="20201112 12:44:27.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.848" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:27.847" endtime="20201112 12:44:27.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.850" level="INFO">VALUE: [0.029411944, 0.039412389, 0.049412542, 0.059413222, 0.069415167, 0.079415292, 0.089415986, 0.099417903, 0.109418056, 0.11941875, 0.129420667, 0.139420819, 0.149421514, 0.159423444, 0.169423583, 0.179424292, 0.189426194, 0.199426333, 0.209427028, 0.219428972, 0.229429097, 0.239429792, 0.249431722, 0.259431875, 0.269432556, 0.279434472, 0.289434639, 0.299435319, 0.309437278, 0.319437389, 0.329438083, 0.33944, 0.349440139, 0.359440847, 0.369442778, 0.379442917, 0.389443611, 0.399445569, 0.409445667, 0.419446431, 0.429448292, 0.439448444, 0.449449139, 0.459451069, 0.469451208, 0.479451917, 0.489453833, 0.499454028, 0.509454708, 0.519456611, 0.529456736, 0.539457431, 0.549459361, 0.5594595, 0.56946025, 0.579462111, 0.589462278, 0.599462958, 0.609464889, 0.619465028, 0.629465722, 0.639467653, 0.649467806, 0.6594685, 0.669470417, 0.679470611, 0.68947125, 0.699473181, 0.709473319, 0.719474014, 0.729475958, 0.739476083, 0.749476792, 0.759478722, 0.769478847, 0.779479569, 0.789481472, 0.799481611, 0.809482306, 0.819484236, 0.829484375, 0.839485097, 0.849487, 0.859487153, 0.869487931, 0.879489847, 0.889489958, 0.899490611, 0.909492528, 0.919492681, 0.929493389, 0.939495306, 0.949495444, 0.959496194, 0.969498056, 0.979498222, 0.989498903, 0.999500833, 1.009500972, 1.019501667] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:27.849" endtime="20201112 12:44:27.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.844" endtime="20201112 12:44:27.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.853" endtime="20201112 12:44:27.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:27.857" endtime="20201112 12:44:27.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.855" endtime="20201112 12:44:27.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.852" endtime="20201112 12:44:27.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.324" endtime="20201112 12:44:27.877"></status>
</kw>
<msg timestamp="20201112 12:44:27.877" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.886" endtime="20201112 12:44:29.979"></status>
</kw>
<msg timestamp="20201112 12:44:29.981" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74479372, 'wakeups': [74489485, 74499486, 74509486, 74519486, 745294...</msg>
<status status="PASS" starttime="20201112 12:44:27.884" endtime="20201112 12:44:29.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:29.986" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74479372, 'wakeups': [74489485, 74499486, 74509486, 74519486, 745294...</msg>
<status status="PASS" starttime="20201112 12:44:29.983" endtime="20201112 12:44:29.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:29.989" endtime="20201112 12:44:29.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.881" endtime="20201112 12:44:29.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.880" endtime="20201112 12:44:29.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.000" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'start-time': 74479372, 'wakeups': [74489485, 74499486, 74509486, 74519486, 74529486, 74539486, 74549486, 74559486, 74569486, 74579486, 74589486, 74599486,...</msg>
<status status="PASS" starttime="20201112 12:44:29.996" endtime="20201112 12:44:30.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.009" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:30.007" endtime="20201112 12:44:30.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.013" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:30.011" endtime="20201112 12:44:30.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.002" endtime="20201112 12:44:30.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.029" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:30.027" endtime="20201112 12:44:30.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.036" level="INFO">VALUE: 74479372</msg>
<status status="PASS" starttime="20201112 12:44:30.032" endtime="20201112 12:44:30.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.022" endtime="20201112 12:44:30.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.046" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:30.044" endtime="20201112 12:44:30.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.051" level="INFO">VALUE: [74489485, 74499486, 74509486, 74519486, 74529486, 74539486, 74549486, 74559486, 74569486, 74579486, 74589486, 74599486, 74609486, 74619486, 74629486, 74639486, 74649486, 74659486, 74669486, 74679486, 74689486, 74699486, 74709486, 74719486, 74729486, 74739486, 74749486, 74759486, 74769486, 74779486, 74789486, 74799486, 74809486, 74819486, 74829486, 74839486, 74849486, 74859486, 74869486, 74879486, 74889486, 74899486, 74909486, 74919486, 74929486, 74939486, 74949486, 74959486, 74969486, 74979486, 74989486, 74999486, 75009486, 75019486, 75029486, 75039486, 75049486, 75059486, 75069486, 75079486, 75089486, 75099486, 75109486, 75119486, 75129486, 75139486, 75149486, 75159486, 75169486, 75179486, 75189486, 75199486, 75209486, 75219486, 75229486, 75239486, 75249486, 75259486, 75269486, 75279486, 75289486, 75299486, 75309486, 75319486, 75329486, 75339486, 75349486, 75359486, 75369486, 75379486, 75389486, 75399486, 75409486, 75419486, 75429486, 75439486, 75449486, 75459486, 75469486, 75479486]</msg>
<status status="PASS" starttime="20201112 12:44:30.049" endtime="20201112 12:44:30.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.039" endtime="20201112 12:44:30.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.058" endtime="20201112 12:44:30.348"></status>
</kw>
<msg timestamp="20201112 12:44:30.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018361292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028475389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.056" endtime="20201112 12:44:30.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018361292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028475389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.352" endtime="20201112 12:44:30.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.359" endtime="20201112 12:44:30.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.054" endtime="20201112 12:44:30.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.052" endtime="20201112 12:44:30.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.386" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:30.363" endtime="20201112 12:44:30.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.391" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:30.390" endtime="20201112 12:44:30.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.393" level="INFO">VALUE: 0.018361292</msg>
<status status="PASS" starttime="20201112 12:44:30.392" endtime="20201112 12:44:30.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.387" endtime="20201112 12:44:30.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.398" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:30.397" endtime="20201112 12:44:30.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.401" level="INFO">VALUE: [0.028475389, 0.038477389, 0.048478278, 0.058479208, 0.068480125, 0.078481056, 0.088481958, 0.098482903, 0.108483847, 0.11848475, 0.128485667, 0.138486583, 0.1484875, 0.158488403, 0.168489333, 0.17849025, 0.188491167, 0.198492097, 0.208493014, 0.218493944, 0.228494861, 0.238495778, 0.248496722, 0.258497611, 0.268498556, 0.278499472, 0.288500389, 0.298501319, 0.308502236, 0.318503139, 0.328504083, 0.338505, 0.348505903, 0.358506847, 0.36850775, 0.378508667, 0.388509611, 0.398510569, 0.408511444, 0.418512375, 0.428513292, 0.438514194, 0.448515139, 0.458516083, 0.468516958, 0.478517889, 0.488518819, 0.498519722, 0.508520667, 0.518521569, 0.528522514, 0.538523417, 0.548524347, 0.558525264, 0.568526181, 0.578527111, 0.588528028, 0.598528972, 0.608529958, 0.618530792, 0.628531722, 0.638532639, 0.648533556, 0.658534486, 0.668535444, 0.678536333, 0.688537264, 0.698538167, 0.708539083, 0.718540028, 0.728540931, 0.738541861, 0.748542778, 0.758543694, 0.768544625, 0.778545542, 0.788546486, 0.798547389, 0.808548319, 0.818549236, 0.828550153, 0.838551083, 0.848552, 0.858552917, 0.868553861, 0.878554778, 0.888555694, 0.898556611, 0.908557542, 0.9185585, 0.928559417, 0.938560319, 0.948561236, 0.958562139, 0.968563069, 0.978564, 0.988564903, 0.998565833, 1.00856675, 1.018567681] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:30.400" endtime="20201112 12:44:30.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.394" endtime="20201112 12:44:30.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.405" endtime="20201112 12:44:30.406"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:30.408" endtime="20201112 12:44:30.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.407" endtime="20201112 12:44:30.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.403" endtime="20201112 12:44:30.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.878" endtime="20201112 12:44:30.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.761" endtime="20201112 12:44:30.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.760" endtime="20201112 12:44:30.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.700" endtime="20201112 12:44:30.430"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:13.625" endtime="20201112 12:44:30.430" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:43:12.263" endtime="20201112 12:44:30.434"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:41:27.746" endtime="20201112 12:44:30.451"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
